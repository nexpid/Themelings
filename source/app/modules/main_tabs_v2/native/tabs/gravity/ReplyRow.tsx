// app/modules/main_tabs_v2/native/tabs/gravity/ReplyRow.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    options = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(options);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.isGuildScheduledEventActive;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.DraftType;
    var _closure1_slot8 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 7;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ICYMI_MARGIN;
    var _closure1_slot10 = tango;
    tango = 8;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.ComponentActions;
    var _closure1_slot11 = golf;
    golf = tango.MessageFlags;
    var _closure1_slot12 = golf;
    tango = tango.Permissions;
    var _closure1_slot13 = tango;
    tango = 9;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.GuildScheduledEventEntityTypes;
    var _closure1_slot14 = tango;
    tango = 10;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot15 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot16 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot17 = tango;
    tango = 11;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = function() {
        entity = {};
        mike = {};
        options = 1;
        mike['height'] = options;
        oscar = _closure1_slot1;
        golf = _closure1_slot2;
        tango = 12;
        verify = golf[tango];
        report = undefined;
        verify = oscar.bind(report)(verify);
        verify = verify.colors;
        verify = verify.BORDER_SUBTLE;
        mike['backgroundColor'] = verify;
        zulu = _closure1_slot10;
        mike['marginBottom'] = zulu;
        verify = '100%';
        mike['width'] = verify;
        entity['separator'] = mike;
        mike = {'flex': 1, 'alignItems': 'center', 'justifyContent': 'center', 'flexDirection': 'row'};
        mike['marginHorizontal'] = zulu;
        mike['marginBottom'] = zulu;
        verify = golf[tango];
        verify = oscar.bind(report)(verify);
        verify = verify.spacing;
        verify = verify.PX_12;
        mike['gap'] = verify;
        entity['container'] = mike;
        mike = {'flexGrow': 1, 'flexBasis': 0};
        entity['buttonContainer'] = mike;
        mike = {'width': 20, 'height': 20};
        entity['icon'] = mike;
        mike = {};
        mike['flex'] = options;
        options = golf[tango];
        options = oscar.bind(report)(options);
        options = options.radii;
        options = options.round;
        mike['borderRadius'] = options;
        entity['input'] = mike;
        mike = {'borderRadius': 20, 'width': '100%', 'minHeight': 40, 'backgroundColor': null, 'justifyContent': 'center'};
        options = golf[tango];
        options = oscar.bind(report)(options);
        options = options.colors;
        options = options.REDESIGN_CHAT_INPUT_BACKGROUND;
        mike['backgroundColor'] = options;
        entity['contentInventoryPressable'] = mike;
        mike = {'marginLeft': null, 'marginRight': 10, 'paddingVertical': null, 'flexDirection': 'row', 'justifyContent': 'space-between'};
        mike['marginLeft'] = zulu;
        options = golf[tango];
        options = oscar.bind(report)(options);
        options = options.spacing;
        options = options.PX_8;
        mike['paddingVertical'] = options;
        entity['contentInventoryContainer'] = mike;
        mike = {'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'space-between'};
        tango = golf[tango];
        tango = oscar.bind(report)(tango);
        tango = tango.spacing;
        tango = tango.PX_40;
        tango = tango + zulu;
        mike['marginLeft'] = tango;
        mike['marginTop'] = zulu;
        entity['replyContainer'] = mike;
        return entity;
    };
    tango = golf.bind(options)(tango);
    var _closure1_slot18 = tango;
    tango = 46;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/tabs/gravity/ReplyRow.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: AnnouncementReplyRow
        _fun117518: for(var _fun117518_ip = 0; ; ) switch(_fun117518_ip) {
 0:
            mike = argFoo;
            golf = mike.message;
            var _closure2_slot0 = golf;
            options = mike.channel;
            var _closure2_slot1 = options;
            tango = undefined;
            var _closure2_slot4 = tango;
            mike = _closure1_slot18;
            control = mike.bind(tango)();
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            mike = 13;
            mike = offset[mike];
            zulu = verify.bind(tango)(mike);
            mike = zulu.useCanForwardMessage;
            foxtrot = mike.bind(zulu)(golf);
            zulu = golf.hasFlag;
            mike = _closure1_slot12;
            mike = mike.HAS_THREAD;
            mike = zulu.bind(golf)(mike);
            var _closure2_slot2 = mike;
            report = 14;
            zulu = offset[report];
            romeo = verify.bind(tango)(zulu);
            yankee = romeo.useStateFromStores;
            zulu = _closure1_slot7;
            oscar = new Array(1);
            oscar[0] = zulu;
            zulu = function() {
                zulu = _closure1_slot7;
                mike = zulu.getChannel;
                entity = _closure2_slot0;
                entity = entity.id;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            oscar = yankee.bind(romeo)(oscar, zulu);
            var _closure2_slot3 = oscar;
            zulu = offset[report];
            kilo = verify.bind(tango)(zulu);
            backup = kilo.useStateFromStores;
            zulu = _closure1_slot9;
            romeo = new Array(1);
            romeo[0] = zulu;
            yankee = new Array(2);
            yankee[0] = mike;
            yankee[1] = oscar;
            mike = function() {
                _fun117520: for(var _fun117520_ip = 0; ; ) switch(_fun117520_ip) {
 0:
                    entity = _closure2_slot2;
                    if(!entity) { _fun117520_ip = 20; continue _fun117520 }
 10:
                    tango = _closure2_slot3;
                    zulu = null;
                    entity = zulu != tango;
 20:
                    if(!entity) { _fun117520_ip = 56; continue _fun117520 }
 23:
                    report = _closure1_slot9;
                    tango = report.can;
                    zulu = _closure1_slot13;
                    zulu = zulu.SEND_MESSAGES;
                    mike = _closure2_slot3;
                    entity = tango.bind(report)(zulu, mike);
 56:
                    return entity;
                }
            };
            mike = backup.bind(kilo)(romeo, mike, yankee);
            report = offset[report];
            offset = verify.bind(tango)(report);
            verify = offset.useStateFromStores;
            report = new Array(1);
            report[0] = zulu;
            zulu = function() {
                tango = _closure1_slot9;
                zulu = tango.can;
                entity = _closure1_slot13;
                mike = entity.SEND_MESSAGES;
                entity = _closure2_slot1;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            update = verify.bind(offset)(report, zulu);
            if(update) { _fun117518_ip = 235; continue _fun117518 }
 232:
            update = mike;
 235:
            _closure2_slot4 = update;
            report = _closure1_slot4;
            verify = report.useCallback;
            zulu = new Array(1);
            zulu[0] = golf;
            mike = function() {
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                entity = 15;
                mike = tango[entity];
                entity = undefined;
                verify = zulu.bind(entity)(mike);
                options = verify.trackItemInteraction;
                report = _closure2_slot0;
                golf = report.id;
                oscar = 'announcement';
                mike = 'press_forward';
                mike = options.bind(verify)(golf, oscar, mike);
                mike = 16;
                mike = tango[mike];
                tango = zulu.bind(entity)(mike);
                zulu = tango.openForwardModal;
                mike = {};
                mike['message'] = report;
                report = 'icymi-tab';
                mike['source'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            kilo = verify.bind(report)(mike, zulu);
            zulu = report.useCallback;
            mike = new Array(4);
            mike[0] = update;
            mike[1] = options;
            mike[2] = golf;
            mike[3] = oscar;
            entity = function() {
                _fun117523: for(var _fun117523_ip = 0; ; ) switch(_fun117523_ip) {
 0:
                    zulu = _closure2_slot3;
                    mike = null;
                    if(!(mike == zulu)) { _fun117523_ip = 174; continue _fun117523 }
 16:
                    mike = _closure2_slot4;
                    if(!mike) { _fun117523_ip = 317; continue _fun117523 }
 26:
                    tango = _closure1_slot0;
                    golf = _closure1_slot2;
                    mike = 15;
                    report = golf[mike];
                    zulu = undefined;
                    yankee = tango.bind(zulu)(report);
                    offset = yankee.trackItemInteraction;
                    report = _closure2_slot0;
                    verify = report.id;
                    options = 'announcement';
                    oscar = 'press_reply';
                    oscar = offset.bind(yankee)(verify, options, oscar);
                    mike = golf[mike];
                    yankee = tango.bind(zulu)(mike);
                    offset = yankee.navigateToPost;
                    oscar = _closure2_slot1;
                    verify = oscar.id;
                    options = oscar.guild_id;
                    mike = report.id;
                    mike = offset.bind(yankee)(verify, options, mike);
                    mike = 17;
                    mike = golf[mike];
                    tango = tango.bind(zulu)(mike);
                    zulu = tango.createPendingReply;
                    mike = {};
                    mike['channel'] = oscar;
                    mike['message'] = report;
                    report = true;
                    mike['shouldMention'] = report;
                    mike['showMentionToggle'] = report;
                    mike = zulu.bind(tango)(mike);
                    _fun117523_ip = 317; continue _fun117523;
 174:
                    zulu = _closure1_slot0;
                    oscar = _closure1_slot2;
                    report = 15;
                    tango = oscar[report];
                    mike = undefined;
                    yankee = zulu.bind(mike)(tango);
                    offset = yankee.trackItemInteraction;
                    tango = _closure2_slot0;
                    verify = tango.id;
                    options = 'announcement';
                    golf = 'press_reply';
                    golf = offset.bind(yankee)(verify, options, golf);
                    report = oscar[report];
                    offset = zulu.bind(mike)(report);
                    verify = offset.navigateToPost;
                    options = tango.id;
                    report = _closure2_slot3;
                    golf = report.guild_id;
                    entity = tango.id;
                    entity = verify.bind(offset)(options, golf, entity);
                    entity = 17;
                    entity = oscar[entity];
                    zulu = zulu.bind(mike)(entity);
                    mike = zulu.createPendingReply;
                    entity = {};
                    entity['channel'] = report;
                    entity['message'] = tango;
                    tango = true;
                    entity['shouldMention'] = tango;
                    entity['showMentionToggle'] = tango;
                    entity = mike.bind(zulu)(entity);
 317:
                    entity = undefined;
                    return entity;
                }
            };
            backup = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot16;
            mike = _closure1_slot17;
            entity = {};
            offset = _closure1_slot15;
            golf = _closure1_slot5;
            report = {};
            oscar = control.separator;
            report['style'] = oscar;
            oscar = offset.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = oscar;
            oscar = {};
            options = control.container;
            oscar['style'] = options;
            options = {};
            verify = control.buttonContainer;
            options['style'] = verify;
            output = _closure1_slot0;
            result = _closure1_slot2;
            yankee = 18;
            verify = result[yankee];
            verify = output.bind(tango)(verify);
            romeo = verify.Button;
            verify = {};
            sizing = 19;
            sizing = result[sizing];
            sizing = output.bind(tango)(sizing);
            vacuum = sizing.ArrowAngleLeftUpIcon;
            sizing = {};
            source = control.icon;
            sizing['style'] = source;
            source = 'custom';
            sizing['size'] = source;
            sizing = offset.bind(tango)(vacuum, sizing);
            verify['icon'] = sizing;
            sizing = 'tertiary';
            verify['variant'] = sizing;
            verify['onPress'] = backup;
            backup = 20;
            vacuum = result[backup];
            vacuum = output.bind(tango)(vacuum);
            config = vacuum.intl;
            sequence = config.string;
            vacuum = result[backup];
            vacuum = output.bind(tango)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.HE3oV1;
            vacuum = sequence.bind(config)(vacuum);
            verify['text'] = vacuum;
            update = !update;
            verify['disabled'] = update;
            verify = offset.bind(tango)(romeo, verify);
            options['children'] = verify;
            verify = offset.bind(tango)(golf, options);
            options = new Array(2);
            options[0] = verify;
            verify = {};
            romeo = control.buttonContainer;
            verify['style'] = romeo;
            yankee = result[yankee];
            yankee = output.bind(tango)(yankee);
            romeo = yankee.Button;
            yankee = {};
            update = _closure1_slot1;
            echo = 21;
            echo = result[echo];
            update = update.bind(tango)(echo);
            echo = {};
            control = control.icon;
            echo['style'] = control;
            echo['size'] = source;
            echo = offset.bind(tango)(update, echo);
            yankee['icon'] = echo;
            yankee['variant'] = sizing;
            yankee['onPress'] = kilo;
            kilo = result[backup];
            kilo = output.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = result[backup];
            backup = output.bind(tango)(backup);
            backup = backup.t;
            backup = backup.HT2IlJ;
            backup = kilo.bind(sizing)(backup);
            yankee['text'] = backup;
            foxtrot = !foxtrot;
            yankee['disabled'] = foxtrot;
            yankee = offset.bind(tango)(romeo, yankee);
            verify['children'] = yankee;
            verify = offset.bind(tango)(golf, verify);
            options[1] = verify;
            oscar['children'] = options;
            oscar = zulu.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['AnnouncementReplyRow'] = tango;
    tango = function(argFoo) { // Original name: MessageReplyRow
        _fun117524: for(var _fun117524_ip = 0; ; ) switch(_fun117524_ip) {
 0:
            mike = argFoo;
            oscar = mike.message;
            var _closure2_slot0 = oscar;
            golf = mike.channel;
            var _closure2_slot1 = golf;
            mike = _closure1_slot18;
            report = undefined;
            source = mike.bind(report)();
            zulu = _closure1_slot0;
            tango = _closure1_slot2;
            mike = 13;
            mike = tango[mike];
            options = zulu.bind(report)(mike);
            mike = options.useCanForwardMessage;
            offset = mike.bind(options)(oscar);
            mike = 14;
            mike = tango[mike];
            options = zulu.bind(report)(mike);
            tango = options.useStateFromStores;
            mike = _closure1_slot9;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                tango = _closure1_slot9;
                zulu = tango.can;
                entity = _closure1_slot13;
                mike = entity.SEND_MESSAGES;
                entity = _closure2_slot1;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            verify = tango.bind(options)(zulu, mike);
            tango = _closure1_slot4;
            options = tango.useCallback;
            zulu = new Array(1);
            zulu[0] = oscar;
            mike = function() {
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                entity = 15;
                mike = tango[entity];
                entity = undefined;
                verify = zulu.bind(entity)(mike);
                options = verify.trackItemInteraction;
                report = _closure2_slot0;
                golf = report.id;
                oscar = 'message';
                mike = 'press_forward';
                mike = options.bind(verify)(golf, oscar, mike);
                mike = 16;
                mike = tango[mike];
                tango = zulu.bind(entity)(mike);
                zulu = tango.openForwardModal;
                mike = {};
                mike['message'] = report;
                report = 'icymi-tab';
                mike['source'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            sizing = options.bind(tango)(mike, zulu);
            zulu = tango.useCallback;
            mike = new Array(2);
            mike[0] = golf;
            mike[1] = oscar;
            entity = function() {
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                oscar = 15;
                mike = tango[oscar];
                entity = undefined;
                yankee = zulu.bind(entity)(mike);
                offset = yankee.trackItemInteraction;
                report = _closure2_slot0;
                verify = report.id;
                options = 'message';
                golf = 'press_reply';
                golf = offset.bind(yankee)(verify, options, golf);
                oscar = tango[oscar];
                offset = zulu.bind(entity)(oscar);
                verify = offset.navigateToPost;
                oscar = _closure2_slot1;
                options = oscar.id;
                golf = oscar.guild_id;
                mike = report.id;
                mike = verify.bind(offset)(options, golf, mike);
                mike = 17;
                mike = tango[mike];
                tango = zulu.bind(entity)(mike);
                zulu = tango.createPendingReply;
                mike = {};
                mike['channel'] = oscar;
                mike['message'] = report;
                report = true;
                mike['shouldMention'] = report;
                mike['showMentionToggle'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            result = zulu.bind(tango)(entity, mike);
            if(offset) { _fun117524_ip = 180; continue _fun117524 }
 172:
            entity = null;
            if(!verify) { _fun117524_ip = 606; continue _fun117524 }
 180:
            tango = _closure1_slot15;
            zulu = _closure1_slot17;
            mike = {};
            options = _closure1_slot16;
            golf = _closure1_slot5;
            oscar = {};
            yankee = source.container;
            oscar['style'] = yankee;
            yankee = verify;
            if(!yankee) { _fun117524_ip = 394; continue _fun117524 }
 218:
            foxtrot = _closure1_slot15;
            romeo = _closure1_slot5;
            verify = {};
            backup = source.buttonContainer;
            verify['style'] = backup;
            control = _closure1_slot0;
            vacuum = _closure1_slot2;
            backup = 18;
            backup = vacuum[backup];
            backup = control.bind(report)(backup);
            kilo = backup.Button;
            backup = {};
            echo = 19;
            echo = vacuum[echo];
            echo = control.bind(report)(echo);
            update = echo.ArrowAngleLeftUpIcon;
            echo = {};
            sequence = source.icon;
            echo['style'] = sequence;
            sequence = 'custom';
            echo['size'] = sequence;
            echo = foxtrot.bind(report)(update, echo);
            backup['icon'] = echo;
            echo = 'tertiary';
            backup['variant'] = echo;
            backup['onPress'] = result;
            result = 20;
            echo = vacuum[result];
            echo = control.bind(report)(echo);
            update = echo.intl;
            echo = update.string;
            result = vacuum[result];
            result = control.bind(report)(result);
            result = result.t;
            result = result.HE3oV1;
            result = echo.bind(update)(result);
            backup['text'] = result;
            backup = foxtrot.bind(report)(kilo, backup);
            verify['children'] = backup;
            yankee = foxtrot.bind(report)(romeo, verify);
 394:
            verify = new Array(2);
            verify[0] = yankee;
            if(!offset) { _fun117524_ip = 582; continue _fun117524 }
 408:
            foxtrot = _closure1_slot15;
            romeo = _closure1_slot5;
            yankee = {};
            backup = source.buttonContainer;
            yankee['style'] = backup;
            echo = _closure1_slot0;
            update = _closure1_slot2;
            backup = 18;
            backup = update[backup];
            backup = echo.bind(report)(backup);
            kilo = backup.Button;
            backup = {};
            result = _closure1_slot1;
            output = 21;
            output = update[output];
            result = result.bind(report)(output);
            output = {};
            source = source.icon;
            output['style'] = source;
            source = 'custom';
            output['size'] = source;
            output = foxtrot.bind(report)(result, output);
            backup['icon'] = output;
            output = 'tertiary';
            backup['variant'] = output;
            backup['onPress'] = sizing;
            sizing = 20;
            output = update[sizing];
            output = echo.bind(report)(output);
            result = output.intl;
            output = result.string;
            sizing = update[sizing];
            sizing = echo.bind(report)(sizing);
            sizing = sizing.t;
            sizing = sizing.HT2IlJ;
            sizing = output.bind(result)(sizing);
            backup['text'] = sizing;
            backup = foxtrot.bind(report)(kilo, backup);
            yankee['children'] = backup;
            offset = foxtrot.bind(report)(romeo, yankee);
 582:
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 606:
            return entity;
        }
    };
    zulu['MessageReplyRow'] = tango;
    tango = function(argFoo) { // Original name: EventsReplyRow
        mike = argFoo;
        golf = mike.event;
        var _closure2_slot0 = golf;
        offset = mike.channel;
        var _closure2_slot1 = offset;
        mike = _closure1_slot18;
        tango = undefined;
        echo = mike.bind(tango)();
        var _closure2_slot2 = echo;
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        mike = 22;
        mike = output[mike];
        zulu = sizing.bind(tango)(mike);
        mike = zulu.getNextRecurrenceIdInEvent;
        oscar = mike.bind(zulu)(golf);
        mike = 23;
        mike = output[mike];
        zulu = sizing.bind(tango)(mike);
        mike = zulu.useEventRsvpState;
        mike = mike.bind(zulu)(golf, oscar);
        yankee = _closure1_slot3;
        options = 2;
        zulu = yankee.bind(tango)(mike, options);
        mike = 0;
        mike = zulu[mike];
        var _closure2_slot3 = mike;
        oscar = 1;
        romeo = zulu[oscar];
        var _closure2_slot4 = romeo;
        zulu = _closure1_slot6;
        verify = zulu.bind(tango)(golf);
        var _closure2_slot5 = verify;
        result = _closure1_slot1;
        zulu = 24;
        zulu = output[zulu];
        zulu = result.bind(tango)(zulu);
        zulu = zulu.bind(tango)();
        zulu = yankee.bind(tango)(zulu, options);
        zulu = zulu[oscar];
        var _closure2_slot6 = zulu;
        oscar = _closure1_slot4;
        yankee = oscar.useCallback;
        options = new Array(5);
        options[0] = offset;
        options[1] = golf;
        options[2] = romeo;
        options[3] = verify;
        options[4] = zulu;
        zulu = function() {
            _fun117529: for(var _fun117529_ip = 0; ; ) switch(_fun117529_ip) {
 0:
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                entity = 15;
                entity = tango[entity];
                tango = undefined;
                options = zulu.bind(tango)(entity);
                golf = options.trackItemInteraction;
                entity = _closure2_slot0;
                oscar = entity.id;
                zulu = 'guild_event';
                entity = 'press_interested';
                entity = golf.bind(options)(oscar, zulu, entity);
                entity = _closure2_slot5;
                if(entity) { _fun117529_ip = 79; continue _fun117529 }
 69:
                entity = _closure2_slot4;
                entity = entity.bind(tango)();
                return tango;
 79:
                entity = _closure2_slot0;
                zulu = entity.entity_type;
                entity = _closure1_slot14;
                entity = entity.EXTERNAL;
                if(!(zulu !== entity)) { _fun117529_ip = 200; continue _fun117529 }
 103:
                zulu = _closure2_slot1;
                entity = null;
                if(!(entity != zulu)) { _fun117529_ip = 200; continue _fun117529 }
 113:
                entity = _closure2_slot0;
                zulu = entity.entity_type;
                entity = _closure1_slot14;
                entity = entity.STAGE_INSTANCE;
                if(!(zulu === entity)) { _fun117529_ip = 161; continue _fun117529 }
 137:
                oscar = _closure2_slot6;
                entity = _closure2_slot1;
                zulu = entity.guild_id;
                entity = entity.id;
                entity = oscar.bind(tango)(zulu, entity);
 161:
                zulu = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 26;
                entity = oscar[entity];
                oscar = zulu.bind(tango)(entity);
                zulu = oscar.openGuildVoiceModal;
                entity = _closure2_slot1;
                entity = zulu.bind(oscar)(entity);
                entity = undefined;
                _fun117529_ip = 254; continue _fun117529;
 200:
                zulu = _closure1_slot0;
                oscar = _closure1_slot2;
                mike = 25;
                mike = oscar[mike];
                tango = zulu.bind(tango)(mike);
                zulu = tango.openGuildEventDetails;
                mike = {};
                report = _closure2_slot0;
                oscar = report.id;
                mike['eventId'] = oscar;
                mike['event'] = report;
                mike = zulu.bind(tango)(mike);
                entity = undefined;
 254:
                return entity;
            }
        };
        update = yankee.bind(oscar)(zulu, options);
        yankee = oscar.useMemo;
        options = new Array(3);
        options[0] = offset;
        zulu = golf.entity_type;
        options[1] = zulu;
        options[2] = verify;
        zulu = function() {
            _fun117530: for(var _fun117530_ip = 0; ; ) switch(_fun117530_ip) {
 0:
                entity = _closure2_slot5;
                if(entity) { _fun117530_ip = 75; continue _fun117530 }
 13:
                golf = _closure1_slot0;
                options = _closure1_slot2;
                entity = 20;
                tango = options[entity];
                oscar = undefined;
                tango = golf.bind(oscar)(tango);
                report = tango.intl;
                tango = report.string;
                entity = options[entity];
                entity = golf.bind(oscar)(entity);
                entity = entity.t;
                entity = entity.DlcqlZ;
                entity = tango.bind(report)(entity);
                _fun117530_ip = 228; continue _fun117530;
 75:
                tango = _closure2_slot0;
                report = tango.entity_type;
                tango = _closure1_slot14;
                tango = tango.EXTERNAL;
                if(!(report !== tango)) { _fun117530_ip = 168; continue _fun117530 }
 99:
                tango = _closure2_slot1;
                mike = null;
                if(!(mike != tango)) { _fun117530_ip = 168; continue _fun117530 }
 109:
                golf = _closure1_slot0;
                options = _closure1_slot2;
                mike = 20;
                tango = options[mike];
                oscar = undefined;
                tango = golf.bind(oscar)(tango);
                report = tango.intl;
                tango = report.string;
                mike = options[mike];
                mike = golf.bind(oscar)(mike);
                mike = mike.t;
                mike = mike.ZYO5OD;
                mike = tango.bind(report)(mike);
                _fun117530_ip = 225; continue _fun117530;
 168:
                golf = _closure1_slot0;
                options = _closure1_slot2;
                zulu = 20;
                tango = options[zulu];
                oscar = undefined;
                tango = golf.bind(oscar)(tango);
                report = tango.intl;
                tango = report.string;
                zulu = options[zulu];
                zulu = golf.bind(oscar)(zulu);
                zulu = zulu.t;
                zulu = zulu.z4FcDg;
                mike = tango.bind(report)(zulu);
 225:
                entity = mike;
 228:
                return entity;
            }
        };
        kilo = yankee.bind(oscar)(zulu, options);
        options = oscar.useMemo;
        zulu = new Array(5);
        zulu[0] = offset;
        zulu[1] = golf;
        zulu[2] = verify;
        zulu[3] = mike;
        mike = echo.icon;
        zulu[4] = mike;
        mike = function() {
            _fun117531: for(var _fun117531_ip = 0; ; ) switch(_fun117531_ip) {
 0:
                mike = _closure1_slot0;
                options = _closure1_slot2;
                entity = 27;
                tango = options[entity];
                oscar = undefined;
                yankee = mike.bind(oscar)(tango);
                offset = yankee.getEventLocationIconSource;
                report = _closure2_slot0;
                tango = _closure2_slot1;
                verify = true;
                offset = offset.bind(yankee)(report, tango, verify);
                entity = options[entity];
                mike = mike.bind(oscar)(entity);
                entity = mike.getEventLocationIconComponent;
                report = entity.bind(mike)(report, tango, verify);
                entity = _closure2_slot5;
                if(entity) { _fun117531_ip = 171; continue _fun117531 }
 80:
                tango = _closure1_slot15;
                entity = _closure2_slot3;
                options = _closure1_slot0;
                yankee = _closure1_slot2;
                if(entity) { _fun117531_ip = 119; continue _fun117531 }
 99:
                entity = 31;
                entity = yankee[entity];
                entity = options.bind(oscar)(entity);
                mike = entity.BellIcon;
                _fun117531_ip = 137; continue _fun117531;
 119:
                entity = 30;
                entity = yankee[entity];
                entity = options.bind(oscar)(entity);
                mike = entity.CheckmarkLargeIcon;
 137:
                entity = {};
                options = _closure2_slot2;
                options = options.icon;
                entity['style'] = options;
                options = 'custom';
                entity['size'] = options;
                entity = tango.bind(oscar)(mike, entity);
                _fun117531_ip = 326; continue _fun117531;
 171:
                yankee = null;
                if(!(yankee == report)) { _fun117531_ip = 290; continue _fun117531 }
 177:
                options = _closure1_slot15;
                tango = _closure1_slot1;
                mike = _closure1_slot2;
                romeo = 28;
                mike = mike[romeo];
                tango = tango.bind(oscar)(mike);
                mike = {};
                if(!(yankee == offset)) { _fun117531_ip = 227; continue _fun117531 }
 207:
                foxtrot = _closure1_slot1;
                backup = _closure1_slot2;
                yankee = 29;
                yankee = backup[yankee];
                offset = foxtrot.bind(oscar)(yankee);
 227:
                mike['source'] = offset;
                yankee = _closure1_slot1;
                offset = _closure1_slot2;
                offset = offset[romeo];
                offset = yankee.bind(oscar)(offset);
                offset = offset.Sizes;
                offset = offset.SMALL_20;
                mike['size'] = offset;
                offset = _closure2_slot2;
                offset = offset.icon;
                mike['style'] = offset;
                mike['disableColor'] = verify;
                mike = options.bind(oscar)(tango, mike);
                _fun117531_ip = 323; continue _fun117531;
 290:
                tango = _closure1_slot15;
                zulu = {};
                options = 'custom';
                zulu['size'] = options;
                golf = _closure2_slot2;
                golf = golf.icon;
                zulu['style'] = golf;
                mike = tango.bind(oscar)(report, zulu);
 323:
                entity = mike;
 326:
                return entity;
            }
        };
        backup = options.bind(oscar)(mike, zulu);
        zulu = oscar.useCallback;
        mike = new Array(1);
        mike[0] = golf;
        entity = function() {
            tango = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 15;
            zulu = mike[entity];
            entity = undefined;
            options = tango.bind(entity)(zulu);
            golf = options.trackItemInteraction;
            zulu = _closure2_slot0;
            oscar = zulu.id;
            report = 'guild_event';
            zulu = 'press_forward';
            zulu = golf.bind(options)(oscar, report, zulu);
            zulu = 33;
            zulu = mike[zulu];
            tango = tango.bind(entity)(zulu);
            zulu = 32;
            zulu = mike[zulu];
            mike = mike.paths;
            tango = tango.bind(entity)(zulu, mike);
            zulu = tango.then;
            mike = function(argFoo) {
                entity = argFoo;
                entity = entity.GuildEventShareModal;
                var _closure4_slot0 = entity;
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 34;
                zulu = zulu[entity];
                entity = undefined;
                golf = tango.bind(entity)(zulu);
                oscar = golf.pushLazy;
                report = {};
                zulu = _closure2_slot0;
                report['event'] = zulu;
                tango = {};
                zulu = 'modal';
                tango['presentation'] = zulu;
                yankee = function() {
                    entity = global;
                    zulu = entity.Promise;
                    mike = zulu.resolve;
                    entity = _closure4_slot0;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                verify = 'GuildEventShareModal';
                romeo = golf;
                offset = report;
                options = tango;
                mike = romeo[oscar](yankee, offset, verify, options, golf);
                return entity;
            };
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        foxtrot = zulu.bind(oscar)(entity, mike);
        zulu = _closure1_slot16;
        mike = _closure1_slot17;
        entity = {};
        offset = _closure1_slot15;
        golf = _closure1_slot5;
        report = {};
        oscar = echo.separator;
        report['style'] = oscar;
        oscar = offset.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = {};
        options = echo.container;
        oscar['style'] = options;
        options = {};
        verify = echo.buttonContainer;
        options['style'] = verify;
        yankee = 18;
        verify = output[yankee];
        verify = sizing.bind(tango)(verify);
        romeo = verify.Button;
        verify = {};
        verify['icon'] = backup;
        backup = 'tertiary';
        verify['variant'] = backup;
        verify['onPress'] = update;
        verify['text'] = kilo;
        verify = offset.bind(tango)(romeo, verify);
        options['children'] = verify;
        verify = offset.bind(tango)(golf, options);
        options = new Array(2);
        options[0] = verify;
        verify = {};
        romeo = echo.buttonContainer;
        verify['style'] = romeo;
        yankee = output[yankee];
        yankee = sizing.bind(tango)(yankee);
        romeo = yankee.Button;
        yankee = {};
        kilo = 21;
        kilo = output[kilo];
        result = result.bind(tango)(kilo);
        kilo = {};
        echo = echo.icon;
        kilo['style'] = echo;
        echo = 'custom';
        kilo['size'] = echo;
        kilo = offset.bind(tango)(result, kilo);
        yankee['icon'] = kilo;
        yankee['variant'] = backup;
        yankee['onPress'] = foxtrot;
        foxtrot = 20;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = output[foxtrot];
        foxtrot = sizing.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.HT2IlJ;
        foxtrot = backup.bind(kilo)(foxtrot);
        yankee['text'] = foxtrot;
        yankee = offset.bind(tango)(romeo, yankee);
        verify['children'] = yankee;
        verify = offset.bind(tango)(golf, verify);
        options[1] = verify;
        oscar['children'] = options;
        oscar = zulu.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['EventsReplyRow'] = tango;
    tango = function(argFoo) { // Original name: SummaryReplyRow
        _fun117535: for(var _fun117535_ip = 0; ; ) switch(_fun117535_ip) {
 0:
            entity = argFoo;
            golf = entity.channel;
            var _closure2_slot0 = golf;
            entity = entity.topic;
            var _closure2_slot1 = entity;
            mike = _closure1_slot18;
            report = undefined;
            backup = mike.bind(report)();
            zulu = _closure1_slot0;
            tango = _closure1_slot2;
            mike = 14;
            mike = tango[mike];
            oscar = zulu.bind(report)(mike);
            tango = oscar.useStateFromStores;
            mike = _closure1_slot9;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                tango = _closure1_slot9;
                zulu = tango.can;
                entity = _closure1_slot13;
                mike = entity.SEND_MESSAGES;
                entity = _closure2_slot0;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            mike = tango.bind(oscar)(zulu, mike);
            oscar = _closure1_slot4;
            tango = oscar.useState;
            zulu = '';
            zulu = tango.bind(oscar)(zulu);
            offset = _closure1_slot3;
            verify = 2;
            zulu = offset.bind(report)(zulu, verify);
            romeo = 0;
            yankee = zulu[romeo];
            var _closure2_slot2 = yankee;
            tango = 1;
            zulu = zulu[tango];
            var _closure2_slot3 = zulu;
            foxtrot = oscar.useState;
            zulu = false;
            zulu = foxtrot.bind(oscar)(zulu);
            zulu = offset.bind(report)(zulu, verify);
            offset = zulu[romeo];
            zulu = zulu[tango];
            var _closure2_slot4 = zulu;
            tango = oscar.useCallback;
            zulu = new Array(5);
            zulu[0] = golf;
            zulu[1] = yankee;
            golf = entity.id;
            zulu[2] = golf;
            golf = entity.messageIds;
            zulu[3] = golf;
            entity = entity.type;
            zulu[4] = entity;
            entity = function() {
                _fun117537: for(var _fun117537_ip = 0; ; ) switch(_fun117537_ip) {
 0:
                    tango = _closure2_slot4;
                    entity = undefined;
                    zulu = true;
                    zulu = tango.bind(entity)(zulu);
                    tango = _closure1_slot0;
                    yankee = _closure1_slot2;
                    oscar = 15;
                    zulu = yankee[oscar];
                    verify = tango.bind(entity)(zulu);
                    options = verify.trackItemInteraction;
                    zulu = _closure2_slot1;
                    golf = zulu.id;
                    offset = zulu.type;
                    zulu = 35;
                    zulu = yankee[zulu];
                    zulu = tango.bind(entity)(zulu);
                    zulu = zulu.SummaryType;
                    zulu = zulu.SOURCE_1;
                    tango = 'summary';
                    if(!(offset === zulu)) { _fun117537_ip = 97; continue _fun117537 }
 91:
                    tango = 'summary_regenerated';
 97:
                    zulu = 'press_reply';
                    zulu = options.bind(verify)(golf, tango, zulu);
                    golf = _closure1_slot1;
                    tango = _closure1_slot2;
                    zulu = 36;
                    zulu = tango[zulu];
                    yankee = golf.bind(entity)(zulu);
                    offset = yankee.changeDraft;
                    zulu = _closure2_slot0;
                    verify = zulu.id;
                    options = _closure2_slot2;
                    golf = _closure1_slot8;
                    golf = golf.ChannelMessage;
                    golf = offset.bind(yankee)(verify, options, golf);
                    report = _closure1_slot0;
                    tango = tango[oscar];
                    golf = report.bind(entity)(tango);
                    oscar = golf.navigateToPost;
                    report = zulu.id;
                    tango = zulu.guild_id;
                    zulu = _closure2_slot1;
                    options = zulu.messageIds;
                    zulu = 0;
                    zulu = options[zulu];
                    zulu = oscar.bind(golf)(report, tango, zulu);
                    tango = _closure2_slot4;
                    zulu = false;
                    zulu = tango.bind(entity)(zulu);
                    zulu = _closure2_slot3;
                    mike = '';
                    mike = zulu.bind(entity)(mike);
                    return entity;
                }
            };
            foxtrot = tango.bind(oscar)(entity, zulu);
            entity = null;
            if(!mike) { _fun117535_ip = 580; continue _fun117535 }
 235:
            tango = _closure1_slot16;
            zulu = _closure1_slot5;
            mike = {};
            oscar = backup.container;
            mike['style'] = oscar;
            verify = _closure1_slot15;
            kilo = _closure1_slot0;
            echo = _closure1_slot2;
            oscar = 37;
            oscar = echo[oscar];
            oscar = kilo.bind(report)(oscar);
            golf = oscar.TextInput;
            oscar = {'containerStyle': null, 'grow': true, 'isRound': true};
            backup = backup.input;
            oscar['containerStyle'] = backup;
            backup = 20;
            sizing = echo[backup];
            sizing = kilo.bind(report)(sizing);
            update = sizing.intl;
            result = update.string;
            sizing = echo[backup];
            sizing = kilo.bind(report)(sizing);
            sizing = sizing.t;
            sizing = sizing.XG+2Q0;
            sizing = result.bind(update)(sizing);
            oscar['placeholder'] = sizing;
            oscar['value'] = yankee;
            options = function(argFoo) { // Original name: onChange
                zulu = _closure2_slot3;
                mike = undefined;
                entity = argFoo;
                entity = zulu.bind(mike)(entity);
                return entity;
            };
            oscar['onChange'] = options;
            oscar['isDisabled'] = offset;
            golf = verify.bind(report)(golf, oscar);
            oscar = new Array(2);
            oscar[0] = golf;
            golf = 38;
            golf = echo[golf];
            golf = kilo.bind(report)(golf);
            options = golf.IconButton;
            golf = {};
            sizing = echo[backup];
            sizing = kilo.bind(report)(sizing);
            result = sizing.intl;
            sizing = result.string;
            backup = echo[backup];
            backup = kilo.bind(report)(backup);
            backup = backup.t;
            backup = backup.oeb1vr;
            backup = sizing.bind(result)(backup);
            golf['accessibilityLabel'] = backup;
            backup = 39;
            backup = echo[backup];
            backup = kilo.bind(report)(backup);
            sizing = backup.SendMessageIcon;
            kilo = {};
            backup = 'md';
            kilo['size'] = backup;
            result = _closure1_slot1;
            output = 12;
            output = echo[output];
            output = result.bind(report)(output);
            output = output.unsafe_rawColors;
            output = output.WHITE_500;
            kilo['color'] = output;
            kilo = verify.bind(report)(sizing, kilo);
            golf['icon'] = kilo;
            golf['size'] = backup;
            golf['onPress'] = foxtrot;
            yankee = yankee.length;
            yankee = romeo === yankee;
            golf['disabled'] = yankee;
            golf['loading'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 580:
            return entity;
        }
    };
    zulu['SummaryReplyRow'] = tango;
    tango = function(argFoo) { // Original name: SummaryShareRow
        _fun117539: for(var _fun117539_ip = 0; ; ) switch(_fun117539_ip) {
 0:
            zulu = argFoo;
            mike = zulu.channel;
            var _closure2_slot0 = mike;
            oscar = zulu.topic;
            var _closure2_slot1 = oscar;
            backup = zulu.active;
            var _closure2_slot2 = backup;
            zulu = _closure1_slot18;
            tango = undefined;
            result = zulu.bind(tango)();
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            zulu = 14;
            zulu = output[zulu];
            options = sizing.bind(tango)(zulu);
            golf = options.useStateFromStores;
            zulu = _closure1_slot9;
            report = new Array(1);
            report[0] = zulu;
            zulu = function() {
                tango = _closure1_slot9;
                zulu = tango.can;
                entity = _closure1_slot13;
                mike = entity.SEND_MESSAGES;
                entity = _closure2_slot0;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            offset = golf.bind(options)(report, zulu);
            report = _closure1_slot4;
            golf = report.useCallback;
            zulu = new Array(3);
            zulu[0] = mike;
            zulu[1] = oscar;
            zulu[2] = backup;
            mike = function() {
                _fun117541: for(var _fun117541_ip = 0; ; ) switch(_fun117541_ip) {
 0:
                    report = _closure1_slot0;
                    yankee = _closure1_slot2;
                    oscar = 15;
                    zulu = yankee[oscar];
                    entity = undefined;
                    verify = report.bind(entity)(zulu);
                    options = verify.trackItemInteraction;
                    tango = _closure2_slot1;
                    golf = tango.id;
                    offset = tango.type;
                    tango = 35;
                    tango = yankee[tango];
                    tango = report.bind(entity)(tango);
                    tango = tango.SummaryType;
                    tango = tango.SOURCE_1;
                    report = 'summary';
                    if(!(offset === tango)) { _fun117541_ip = 86; continue _fun117541 }
 80:
                    report = 'summary_regenerated';
 86:
                    tango = 'press_reply';
                    tango = options.bind(verify)(golf, report, tango);
                    tango = _closure2_slot2;
                    if(tango) { _fun117541_ip = 156; continue _fun117541 }
 106:
                    report = _closure1_slot1;
                    golf = _closure1_slot2;
                    tango = 40;
                    tango = golf[tango];
                    options = report.bind(entity)(tango);
                    golf = options.setGravitySelectedSummary;
                    tango = _closure2_slot0;
                    report = tango.id;
                    tango = _closure2_slot1;
                    tango = tango.id;
                    tango = golf.bind(options)(report, tango);
 156:
                    tango = _closure2_slot2;
                    if(tango) { _fun117541_ip = 257; continue _fun117541 }
 163:
                    report = _closure1_slot1;
                    golf = _closure1_slot2;
                    tango = 40;
                    tango = golf[tango];
                    yankee = report.bind(entity)(tango);
                    offset = yankee.setGravitySelectedSummary;
                    report = _closure2_slot0;
                    verify = report.id;
                    tango = _closure2_slot1;
                    options = tango.id;
                    options = offset.bind(yankee)(verify, options);
                    options = _closure1_slot0;
                    golf = golf[oscar];
                    verify = options.bind(entity)(golf);
                    options = verify.navigateToPost;
                    golf = report.id;
                    report = report.guild_id;
                    tango = tango.startId;
                    tango = options.bind(verify)(golf, report, tango);
                    _fun117541_ip = 351; continue _fun117541;
 257:
                    tango = _closure1_slot0;
                    report = _closure1_slot2;
                    oscar = report[oscar];
                    verify = tango.bind(entity)(oscar);
                    options = verify.navigateToPost;
                    oscar = _closure2_slot0;
                    golf = oscar.id;
                    zulu = oscar.guild_id;
                    zulu = options.bind(verify)(golf, zulu, entity);
                    zulu = 41;
                    zulu = report[zulu];
                    zulu = tango.bind(entity)(zulu);
                    report = zulu.ComponentDispatch;
                    tango = report.dispatch;
                    mike = _closure1_slot11;
                    zulu = mike.TEXTAREA_FOCUS;
                    mike = {};
                    oscar = oscar.id;
                    mike['channelId'] = oscar;
                    mike = tango.bind(report)(zulu, mike);
 351:
                    return entity;
                }
            };
            kilo = golf.bind(report)(mike, zulu);
            zulu = report.useCallback;
            mike = new Array(1);
            mike[0] = oscar;
            entity = function() {
                _fun117542: for(var _fun117542_ip = 0; ; ) switch(_fun117542_ip) {
 0:
                    tango = _closure1_slot0;
                    verify = _closure1_slot2;
                    entity = 15;
                    zulu = verify[entity];
                    entity = undefined;
                    golf = tango.bind(entity)(zulu);
                    oscar = golf.trackItemInteraction;
                    zulu = _closure2_slot1;
                    report = zulu.id;
                    options = zulu.type;
                    zulu = 35;
                    zulu = verify[zulu];
                    zulu = tango.bind(entity)(zulu);
                    zulu = zulu.SummaryType;
                    zulu = zulu.SOURCE_1;
                    tango = 'summary';
                    if(!(options === zulu)) { _fun117542_ip = 86; continue _fun117542 }
 80:
                    tango = 'summary_regenerated';
 86:
                    zulu = 'press_forward';
                    zulu = oscar.bind(golf)(report, tango, zulu);
                    tango = _closure1_slot0;
                    mike = _closure1_slot2;
                    zulu = 33;
                    zulu = mike[zulu];
                    tango = tango.bind(entity)(zulu);
                    zulu = 32;
                    zulu = mike[zulu];
                    mike = mike.paths;
                    tango = tango.bind(entity)(zulu, mike);
                    zulu = tango.then;
                    mike = function(argFoo) {
                        _fun117543: for(var _fun117543_ip = 0; ; ) switch(_fun117543_ip) {
 0:
                            mike = argFoo;
                            zulu = mike.SummaryShareModal;
                            var _closure4_slot0 = zulu;
                            mike = null;
                            if(!(mike != zulu)) { _fun117543_ip = 106; continue _fun117543 }
 21:
                            tango = _closure1_slot1;
                            zulu = _closure1_slot2;
                            mike = 34;
                            zulu = zulu[mike];
                            mike = undefined;
                            oscar = tango.bind(mike)(zulu);
                            report = oscar.pushLazy;
                            tango = {};
                            mike = _closure2_slot1;
                            mike = mike.id;
                            tango['topicId'] = mike;
                            zulu = {};
                            mike = 'modal';
                            zulu['presentation'] = mike;
                            offset = function() {
                                entity = global;
                                zulu = entity.Promise;
                                mike = zulu.resolve;
                                entity = _closure4_slot0;
                                entity = mike.bind(zulu)(entity);
                                return entity;
                            };
                            options = 'SummaryShareModal';
                            yankee = oscar;
                            verify = tango;
                            golf = zulu;
                            entity = yankee[report](offset, verify, options, golf, oscar);
 106:
                            entity = undefined;
                            return entity;
                        }
                    };
                    mike = zulu.bind(tango)(mike);
                    return entity;
                }
            };
            yankee = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot16;
            mike = _closure1_slot5;
            entity = {};
            report = result.container;
            entity['style'] = report;
            oscar = _closure1_slot15;
            report = {};
            golf = result.buttonContainer;
            report['style'] = golf;
            verify = 18;
            golf = output[verify];
            golf = sizing.bind(tango)(golf);
            options = golf.Button;
            golf = {};
            romeo = 42;
            romeo = output[romeo];
            romeo = sizing.bind(tango)(romeo);
            sizing = romeo.ArrowSmallRightIcon;
            romeo = {};
            output = result.icon;
            romeo['style'] = output;
            output = 'custom';
            romeo['size'] = output;
            romeo = oscar.bind(tango)(sizing, romeo);
            golf['icon'] = romeo;
            romeo = 'tertiary';
            golf['variant'] = romeo;
            golf['onPress'] = kilo;
            if(!backup) { _fun117539_ip = 283; continue _fun117539 }
 280:
            if(offset) { _fun117539_ip = 340; continue _fun117539 }
 283:
            sizing = _closure1_slot0;
            echo = _closure1_slot2;
            offset = 20;
            backup = echo[offset];
            backup = sizing.bind(tango)(backup);
            kilo = backup.intl;
            backup = kilo.string;
            offset = echo[offset];
            offset = sizing.bind(tango)(offset);
            offset = offset.t;
            offset = offset.zUQ1OD;
            offset = backup.bind(kilo)(offset);
            _fun117539_ip = 395; continue _fun117539;
 340:
            echo = _closure1_slot0;
            update = _closure1_slot2;
            backup = 20;
            kilo = update[backup];
            kilo = echo.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = update[backup];
            backup = echo.bind(tango)(backup);
            backup = backup.t;
            backup = backup.XG+2Q0;
            offset = kilo.bind(sizing)(backup);
 395:
            golf['text'] = offset;
            golf = oscar.bind(tango)(options, golf);
            report['children'] = golf;
            oscar = oscar.bind(tango)(mike, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot15;
            golf = _closure1_slot5;
            oscar = {};
            offset = result.buttonContainer;
            oscar['style'] = offset;
            backup = _closure1_slot0;
            kilo = _closure1_slot2;
            verify = kilo[verify];
            verify = backup.bind(tango)(verify);
            offset = verify.Button;
            verify = {};
            sizing = _closure1_slot1;
            foxtrot = 21;
            foxtrot = kilo[foxtrot];
            sizing = sizing.bind(tango)(foxtrot);
            foxtrot = {};
            result = result.icon;
            foxtrot['style'] = result;
            foxtrot['size'] = output;
            foxtrot = options.bind(tango)(sizing, foxtrot);
            verify['icon'] = foxtrot;
            verify['variant'] = romeo;
            verify['onPress'] = yankee;
            yankee = 20;
            romeo = kilo[yankee];
            romeo = backup.bind(tango)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            yankee = kilo[yankee];
            yankee = backup.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.HT2IlJ;
            yankee = romeo.bind(foxtrot)(yankee);
            verify['text'] = yankee;
            verify = options.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['SummaryShareRow'] = tango;
    mike = function(argFoo) { // Original name: ContentInventoryReplyRow
        entity = argFoo;
        backup = entity.reactText;
        options = entity.onReply;
        entity = _closure1_slot18;
        tango = undefined;
        romeo = entity.bind(tango)();
        zulu = _closure1_slot15;
        mike = _closure1_slot5;
        entity = {};
        report = romeo.replyContainer;
        entity['style'] = report;
        yankee = _closure1_slot0;
        foxtrot = _closure1_slot2;
        report = 43;
        report = foxtrot[report];
        report = yankee.bind(tango)(report);
        oscar = report.PressableOpacity;
        report = {};
        verify = 'button';
        report['accessibilityRole'] = verify;
        report['onPress'] = options;
        options = romeo.contentInventoryPressable;
        report['style'] = options;
        report['accessibilityLabel'] = backup;
        options = 'box-only';
        report['pointerEvents'] = options;
        options = _closure1_slot16;
        golf = {};
        verify = romeo.contentInventoryContainer;
        golf['style'] = verify;
        verify = 44;
        verify = foxtrot[verify];
        verify = yankee.bind(tango)(verify);
        offset = verify.Text;
        verify = {'variant': 'text-md/medium', 'color': 'input-placeholder-text'};
        verify['children'] = backup;
        offset = zulu.bind(tango)(offset, verify);
        verify = new Array(2);
        verify[0] = offset;
        offset = 45;
        offset = foxtrot[offset];
        offset = yankee.bind(tango)(offset);
        yankee = offset.ReactionIcon;
        offset = {};
        romeo = romeo.icon;
        offset['style'] = romeo;
        romeo = 'custom';
        offset['size'] = romeo;
        offset = zulu.bind(tango)(yankee, offset);
        verify[1] = offset;
        golf['children'] = verify;
        golf = options.bind(tango)(mike, golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['ContentInventoryReplyRow'] = mike;
    return entity;
})();