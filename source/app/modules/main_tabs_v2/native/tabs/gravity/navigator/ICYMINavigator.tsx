// app/modules/main_tabs_v2/native/tabs/gravity/navigator/ICYMINavigator.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    tango = 0;
    golf = oscar[tango];
    entity = undefined;
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot2 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    golf = report.bind(entity)(tango);
    tango = golf.createNativeStackNavigator;
    tango = tango.bind(golf)();
    var _closure1_slot4 = tango;
    tango = 5;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/tabs/gravity/navigator/ICYMINavigator.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: ICYMINavigator
        mike = _closure1_slot0;
        zulu = _closure1_slot1;
        entity = 2;
        entity = zulu[entity];
        tango = undefined;
        mike = mike.bind(tango)(entity);
        entity = mike.useAccessibilityNativeStackOptions;
        entity = entity.bind(mike)();
        var _closure2_slot0 = entity;
        zulu = _closure1_slot3;
        oscar = _closure1_slot4;
        mike = oscar.Navigator;
        entity = {};
        golf = function() { // Original name: screenOptions
            entity = {'headerShown': false, 'fullScreenGestureEnabled': true};
            zulu = _closure2_slot0;
            tango = entity;
            mike = copyDataProperties(tango, zulu);
            return entity;
        };
        entity['screenOptions'] = golf;
        offset = 'icymi-screen';
        entity['initialRouteName'] = offset;
        options = _closure1_slot2;
        golf = oscar.Screen;
        report = {};
        report['name'] = offset;
        offset = function() { // Original name: getComponent
            zulu = _closure1_slot0;
            mike = _closure1_slot1;
            entity = 3;
            mike = mike[entity];
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            entity = entity.ICYMITab;
            return entity;
        };
        report['getComponent'] = offset;
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        golf = oscar.Screen;
        oscar = {};
        offset = 'notifications-screen';
        oscar['name'] = offset;
        verify = function() { // Original name: getComponent
            zulu = _closure1_slot0;
            mike = _closure1_slot1;
            entity = 4;
            mike = mike[entity];
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            entity = entity.ThemedNotificationsModal;
            return entity;
        };
        oscar['getComponent'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();