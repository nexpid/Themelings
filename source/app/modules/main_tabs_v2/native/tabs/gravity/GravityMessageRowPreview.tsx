// app/modules/main_tabs_v2/native/tabs/gravity/GravityMessageRowPreview.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    golfie = argBar;
    zuuluu = argFre;
    option = argPlu;
    var _closure1_slot0 = golfie;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = option;
    entity = function(argFoo) { // Original name: isMediaEmbed
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            entity = _closure1_slot4;
            entity = entity.IMAGE;
            entity = zuuluu === entity;
            if(entity) { _fun00002_ip = 37; continue _fun00001 }
 23:
            michal = _closure1_slot4;
            michal = michal.GIFV;
            entity = zuuluu === michal;
 37:
            return entity;
        }
    };
    var _closure1_slot6 = entity;
    entity = function(argFoo) { // Original name: GravityMessageRowPreview
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            option = entity.message;
            michal = entity.lineClamp;
            var _closure2_slot0 = michal;
            michal = entity.seeMoreLabel;
            var _closure2_slot1 = michal;
            oscard = entity.messageSizeCacheRef;
            zuuluu = entity.messageOptions;
            var _closure2_slot2 = zuuluu;
            report = entity.maxHeight;
            offset = entity.pointerEvents;
            tangon = undefined;
            if(!(offset === tangon)) { _fun00004_ip = 68; continue _fun00003 }
 64:
            offset = 'none';
 68:
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            var _closure2_slot5 = tangon;
            var _closure2_slot6 = tangon;
            michal = _closure1_slot1;
            yankee = _closure1_slot2;
            golfie = 7;
            golfie = yankee[golfie];
            golfie = michal.bind(tangon)(golfie);
            foxtra = golfie.bind(tangon)();
            romeon = _closure1_slot0;
            golfie = 8;
            golfie = yankee[golfie];
            kiloes = romeon.bind(tangon)(golfie);
            backup = kiloes.createNativeStyleProperties;
            golfie = {};
            sizing = 9;
            sizing = yankee[sizing];
            sizing = michal.bind(tangon)(sizing);
            sizing = sizing.colors;
            sizing = sizing.TEXT_NORMAL;
            golfie['seeMoreLabelColor'] = sizing;
            golfie = backup.bind(kiloes)(golfie);
            golfie = golfie.bind(tangon)(foxtra);
            _closure2_slot3 = golfie;
            golfie = 10;
            foxtra = yankee[golfie];
            foxtra = romeon.bind(tangon)(foxtra);
            backup = foxtra.RenderEmbeds;
            foxtra = backup.getSetting;
            sizing = foxtra.bind(backup)();
            _closure2_slot4 = sizing;
            foxtra = yankee[golfie];
            foxtra = romeon.bind(tangon)(foxtra);
            backup = foxtra.InlineEmbedMedia;
            foxtra = backup.getSetting;
            kiloes = foxtra.bind(backup)();
            _closure2_slot5 = kiloes;
            golfie = yankee[golfie];
            golfie = romeon.bind(tangon)(golfie);
            romeon = golfie.InlineAttachmentMedia;
            golfie = romeon.getSetting;
            backup = golfie.bind(romeon)();
            _closure2_slot6 = backup;
            foxtra = _closure1_slot3;
            romeon = foxtra.useMemo;
            golfie = new Array(4);
            golfie[0] = sizing;
            golfie[1] = kiloes;
            golfie[2] = backup;
            golfie[3] = zuuluu;
            zuuluu = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 11;
                michal = michal[entity];
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                michal = entity.prototype;
                michal = Object.create(michal, {constructor: {value: entity}});
                option = michal;
                entity = new option[entity](golfie);
                entity = entity instanceof Object ? entity : michal;
                zuuluu = entity.setOptions;
                michal = {'renderEmbeds': null, 'inlineEmbedMedia': null, 'inlineAttachmentMedia': null, 'renderReactions': false, 'renderShortcuts': false, 'animateEmoji': false, 'gifAutoPlay': false, 'renderReplies': false, 'renderCodedLinks': false, 'renderGiftCode': false, 'renderActivityInviteEmbed': false, 'renderThreadEmbeds': false, 'renderForumPostActions': false, 'ignoreMentioned': true, 'enableSwipeActions': false, 'renderExecutedCommands': false, 'useAlternateEmbedColors': true};
                report = _closure2_slot4;
                michal['renderEmbeds'] = report;
                report = _closure2_slot5;
                michal['inlineEmbedMedia'] = report;
                report = _closure2_slot6;
                michal['inlineAttachmentMedia'] = report;
                oscard = _closure2_slot2;
                golfie = michal;
                tangon = copyDataProperties(golfie, oscard);
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            golfie = romeon.bind(foxtra)(zuuluu, golfie);
            zuuluu = _closure1_slot5;
            entity = 12;
            entity = yankee[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['pointerEvents'] = offset;
            offset = 0;
            entity['horizontalOffset'] = offset;
            verify = function(argFoo) { // Original name: modifyRow
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = argFoo;
                    tangon = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 13;
                    michal = michal[entity];
                    entity = undefined;
                    michal = tangon.bind(entity)(michal);
                    michal = michal.MessageContextType;
                    michal = michal.SEARCH;
                    zuuluu['contextType'] = michal;
                    michal = _closure2_slot0;
                    oscard = null;
                    if(!(oscard != michal)) { _fun00006_ip = 122; continue _fun00005 }
 59:
                    michal = {};
                    report = _closure2_slot0;
                    michal['numberOfLines'] = report;
                    report = false;
                    michal['expandable'] = report;
                    report = _closure2_slot1;
                    oscard = oscard != report;
                    report = '';
                    if(!oscard) { _fun00006_ip = 96; continue _fun00005 }
 92:
                    report = _closure2_slot1;
 96:
                    michal['seeMoreLabel'] = report;
                    tangon = _closure2_slot3;
                    tangon = tangon.seeMoreLabelColor;
                    michal['seeMoreLabelColor'] = tangon;
                    zuuluu['truncation'] = michal;
 122:
                    return entity;
                }
            };
            entity['modifyRow'] = verify;
            entity['message'] = option;
            entity['rowGenerator'] = golfie;
            entity['messageSizeCacheRef'] = oscard;
            entity['maxHeight'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot7 = entity;
    entity = global;
    oscard = entity.Object;
    report = oscard.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscard)(zuuluu, entity, tangon);
    entity = 0;
    report = option[entity];
    tangon = argCor;
    entity = undefined;
    verify = tangon.bind(entity)(report);
    var _closure1_slot3 = verify;
    tangon = 1;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    tangon = tangon.MessageEmbedTypes;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    report = verify.memo;
    tangon = function(argFoo) {
        oscard = argFoo;
        zuuluu = oscard.message;
        var _closure2_slot0 = zuuluu;
        report = oscard.messageOptions;
        entity = null;
        tangon = Object.create(entity);
        entity = 0;
        tangon['message'] = entity;
        tangon['messageOptions'] = entity;
        romeon = {};
        yankee = oscard;
        offset = tangon;
        golfie = copyDataProperties(romeon, yankee, offset);
        var _closure2_slot1 = golfie;
        option = _closure1_slot3;
        oscard = option.useMemo;
        tangon = new Array(1);
        tangon[0] = zuuluu;
        zuuluu = function() {
            report = _closure2_slot0;
            zuuluu = report.set;
            michal = 'content';
            tangon = null;
            oscard = zuuluu.bind(report)(michal, tangon);
            report = oscard.embeds;
            zuuluu = report.filter;
            michal = function(argFoo) {
                zuuluu = _closure1_slot6;
                entity = argFoo;
                michal = entity.type;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            report = zuuluu.bind(report)(michal);
            zuuluu = oscard.set;
            michal = 'embeds';
            report = zuuluu.bind(oscard)(michal, report);
            zuuluu = report.attachments;
            michal = zuuluu.filter;
            entity = function(argFoo) {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 3;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.isMediaAttachment;
                entity = argFoo;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            zuuluu = michal.bind(zuuluu)(entity);
            michal = report.set;
            entity = 'attachments';
            zuuluu = michal.bind(report)(entity, zuuluu);
            michal = zuuluu.set;
            entity = 'editedTimestamp';
            entity = michal.bind(zuuluu)(entity, tangon);
            return entity;
        };
        option = oscard.bind(option)(zuuluu, tangon);
        var _closure2_slot2 = option;
        oscard = _closure1_slot3;
        tangon = oscard.useMemo;
        zuuluu = new Array(3);
        zuuluu[0] = option;
        option = golfie.muted;
        zuuluu[1] = option;
        golfie = golfie.lineClamp;
        zuuluu[2] = golfie;
        michal = function() {
            _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                entity = {};
                zuuluu = _closure2_slot2;
                entity['message'] = zuuluu;
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                zuuluu = 4;
                tangon = tangon[zuuluu];
                zuuluu = undefined;
                zuuluu = report.bind(zuuluu)(tangon);
                zuuluu = zuuluu.ChannelListLayoutTypes;
                zuuluu = zuuluu.COZY;
                entity['layout'] = zuuluu;
                zuuluu = _closure2_slot1;
                tangon = zuuluu.muted;
                zuuluu = null;
                zuuluu = zuuluu != tangon;
                if(!zuuluu) { _fun00008_ip = 77; continue _fun00007 }
 74:
                zuuluu = tangon;
 77:
                entity['muted'] = zuuluu;
                michal = _closure2_slot1;
                michal = michal.lineClamp;
                entity['lineClamp'] = michal;
                return entity;
            }
        };
        yankee = tangon.bind(oscard)(michal, zuuluu);
        tangon = _closure1_slot5;
        zuuluu = _closure1_slot7;
        michal = {};
        romeon = michal;
        oscard = copyDataProperties(romeon, yankee);
        oscard = {};
        option = _closure1_slot0;
        golfie = _closure1_slot2;
        entity = 5;
        golfie = golfie[entity];
        entity = undefined;
        golfie = option.bind(entity)(golfie);
        yankee = golfie.DEFAULT_OPTIONS;
        romeon = oscard;
        golfie = copyDataProperties(romeon, yankee);
        option = true;
        golfie = 'ignoreMentioned';
        oscard[golfie] = option;
        verify = false;
        golfie = 'renderReplies';
        oscard[golfie] = verify;
        golfie = 'renderThreadEmbeds';
        oscard[golfie] = verify;
        golfie = 'renderReactions';
        oscard[golfie] = verify;
        golfie = 'renderShortcuts';
        oscard[golfie] = verify;
        golfie = 'renderEmbeds';
        oscard[golfie] = option;
        golfie = 'gifAutoPlay';
        oscard[golfie] = option;
        golfie = 'animateEmoji';
        oscard[golfie] = option;
        golfie = 'renderPolls';
        oscard[golfie] = option;
        golfie = 'inlineEmbedMedia';
        oscard[golfie] = option;
        golfie = 'renderForumPostActions';
        oscard[golfie] = verify;
        golfie = 'renderAttachments';
        oscard[golfie] = option;
        romeon = oscard;
        yankee = report;
        report = copyDataProperties(romeon, yankee);
        report = 'messageOptions';
        michal[report] = oscard;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    report = report.bind(verify)(tangon);
    oscard = verify.memo;
    tangon = function(argFoo) {
        oscard = argFoo;
        zuuluu = oscard.message;
        var _closure2_slot0 = zuuluu;
        report = oscard.messageOptions;
        entity = null;
        tangon = Object.create(entity);
        entity = 0;
        tangon['message'] = entity;
        tangon['messageOptions'] = entity;
        romeon = {};
        yankee = oscard;
        offset = tangon;
        golfie = copyDataProperties(romeon, yankee, offset);
        var _closure2_slot1 = golfie;
        option = _closure1_slot3;
        oscard = option.useMemo;
        tangon = new Array(1);
        tangon[0] = zuuluu;
        zuuluu = function() {
            report = _closure2_slot0;
            zuuluu = report.set;
            michal = 'content';
            tangon = null;
            option = zuuluu.bind(report)(michal, tangon);
            report = option.embeds;
            zuuluu = report.filter;
            michal = function(argFoo) {
                zuuluu = _closure1_slot6;
                entity = argFoo;
                michal = entity.type;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                entity = !entity;
                return entity;
            };
            zuuluu = zuuluu.bind(report)(michal);
            report = option.set;
            michal = zuuluu.slice;
            golfie = 0;
            oscard = 1;
            zuuluu = michal.bind(zuuluu)(golfie, oscard);
            michal = 'embeds';
            report = report.bind(option)(michal, zuuluu);
            zuuluu = report.attachments;
            michal = zuuluu.filter;
            entity = function(argFoo) {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 3;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.isMediaAttachment;
                entity = argFoo;
                entity = michal.bind(zuuluu)(entity);
                entity = !entity;
                return entity;
            };
            michal = michal.bind(zuuluu)(entity);
            zuuluu = report.set;
            entity = michal.slice;
            michal = entity.bind(michal)(golfie, oscard);
            entity = 'attachments';
            zuuluu = zuuluu.bind(report)(entity, michal);
            michal = zuuluu.set;
            entity = 'editedTimestamp';
            entity = michal.bind(zuuluu)(entity, tangon);
            return entity;
        };
        option = oscard.bind(option)(zuuluu, tangon);
        var _closure2_slot2 = option;
        oscard = _closure1_slot3;
        tangon = oscard.useMemo;
        zuuluu = new Array(3);
        zuuluu[0] = option;
        option = golfie.muted;
        zuuluu[1] = option;
        golfie = golfie.lineClamp;
        zuuluu[2] = golfie;
        michal = function() {
            _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                entity = {};
                zuuluu = _closure2_slot2;
                entity['message'] = zuuluu;
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                zuuluu = 4;
                tangon = tangon[zuuluu];
                zuuluu = undefined;
                zuuluu = report.bind(zuuluu)(tangon);
                zuuluu = zuuluu.ChannelListLayoutTypes;
                zuuluu = zuuluu.COZY;
                entity['layout'] = zuuluu;
                zuuluu = _closure2_slot1;
                tangon = zuuluu.muted;
                zuuluu = null;
                zuuluu = zuuluu != tangon;
                if(!zuuluu) { _fun00010_ip = 77; continue _fun00009 }
 74:
                zuuluu = tangon;
 77:
                entity['muted'] = zuuluu;
                michal = _closure2_slot1;
                michal = michal.lineClamp;
                entity['lineClamp'] = michal;
                return entity;
            }
        };
        yankee = tangon.bind(oscard)(michal, zuuluu);
        tangon = _closure1_slot5;
        zuuluu = _closure1_slot7;
        michal = {};
        romeon = michal;
        oscard = copyDataProperties(romeon, yankee);
        oscard = {};
        option = _closure1_slot0;
        golfie = _closure1_slot2;
        entity = 5;
        golfie = golfie[entity];
        entity = undefined;
        golfie = option.bind(entity)(golfie);
        yankee = golfie.DEFAULT_OPTIONS;
        romeon = oscard;
        golfie = copyDataProperties(romeon, yankee);
        option = true;
        golfie = 'ignoreMentioned';
        oscard[golfie] = option;
        verify = false;
        golfie = 'renderReplies';
        oscard[golfie] = verify;
        golfie = 'renderThreadEmbeds';
        oscard[golfie] = verify;
        golfie = 'renderReactions';
        oscard[golfie] = verify;
        golfie = 'renderShortcuts';
        oscard[golfie] = verify;
        golfie = 'renderEmbeds';
        oscard[golfie] = option;
        golfie = 'renderAttachments';
        oscard[golfie] = option;
        romeon = oscard;
        yankee = report;
        report = copyDataProperties(romeon, yankee);
        report = 'messageOptions';
        michal[report] = oscard;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    tangon = oscard.bind(verify)(tangon);
    oscard = verify.memo;
    michal = function(argFoo) {
        oscard = argFoo;
        michal = oscard.message;
        var _closure2_slot0 = michal;
        report = oscard.messageOptions;
        zuuluu = null;
        tangon = Object.create(zuuluu);
        zuuluu = 0;
        tangon['message'] = zuuluu;
        tangon['messageOptions'] = zuuluu;
        foxtra = {};
        romeon = oscard;
        yankee = tangon;
        option = copyDataProperties(foxtra, romeon, yankee);
        var _closure2_slot1 = option;
        oscard = _closure1_slot3;
        tangon = oscard.useMemo;
        zuuluu = new Array(4);
        zuuluu[0] = michal;
        verify = option.lineClamp;
        zuuluu[1] = verify;
        verify = option.muted;
        zuuluu[2] = verify;
        option = option.pointerEvents;
        zuuluu[3] = option;
        entity = function() {
            _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                entity = {};
                zuuluu = _closure2_slot0;
                entity['message'] = zuuluu;
                zuuluu = _closure2_slot1;
                tangon = zuuluu.lineClamp;
                entity['lineClamp'] = tangon;
                oscard = _closure1_slot0;
                report = _closure1_slot2;
                tangon = 4;
                report = report[tangon];
                tangon = undefined;
                tangon = oscard.bind(tangon)(report);
                tangon = tangon.ChannelListLayoutTypes;
                tangon = tangon.COZY;
                entity['layout'] = tangon;
                tangon = zuuluu.muted;
                zuuluu = null;
                zuuluu = zuuluu != tangon;
                if(!zuuluu) { _fun00012_ip = 88; continue _fun00011 }
 85:
                zuuluu = tangon;
 88:
                entity['muted'] = zuuluu;
                michal = _closure2_slot1;
                michal = michal.pointerEvents;
                entity['pointerEvents'] = michal;
                return entity;
            }
        };
        romeon = tangon.bind(oscard)(entity, zuuluu);
        zuuluu = _closure1_slot1;
        offset = _closure1_slot2;
        entity = 6;
        entity = offset[entity];
        tangon = undefined;
        entity = zuuluu.bind(tangon)(entity);
        option = entity.bind(tangon)(michal);
        zuuluu = _closure1_slot5;
        michal = _closure1_slot7;
        entity = {};
        foxtra = entity;
        oscard = copyDataProperties(foxtra, romeon);
        oscard = {};
        verify = _closure1_slot0;
        golfie = 5;
        golfie = offset[golfie];
        golfie = verify.bind(tangon)(golfie);
        romeon = golfie.DEFAULT_OPTIONS;
        foxtra = oscard;
        golfie = copyDataProperties(foxtra, romeon);
        offset = true;
        golfie = 'ignoreMentioned';
        oscard[golfie] = offset;
        verify = false;
        golfie = 'renderReplies';
        oscard[golfie] = verify;
        golfie = 'renderThreadEmbeds';
        oscard[golfie] = verify;
        golfie = 'renderReactions';
        oscard[golfie] = verify;
        golfie = 'renderShortcuts';
        oscard[golfie] = verify;
        golfie = 'gifAutoPlay';
        oscard[golfie] = offset;
        golfie = 'animateEmoji';
        oscard[golfie] = offset;
        golfie = 'renderPolls';
        oscard[golfie] = offset;
        golfie = 'renderForumPostActions';
        oscard[golfie] = verify;
        golfie = 'renderAttachments';
        oscard[golfie] = option;
        golfie = 'renderEmbeds';
        oscard[golfie] = option;
        golfie = 'inlineEmbedMedia';
        oscard[golfie] = option;
        foxtra = oscard;
        romeon = report;
        report = copyDataProperties(foxtra, romeon);
        report = 'messageOptions';
        entity[report] = oscard;
        oscard = '...';
        report = 'seeMoreLabel';
        entity[report] = oscard;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = oscard.bind(verify)(michal);
    oscard = 14;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/main_tabs_v2/native/tabs/gravity/GravityMessageRowPreview.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['MediaOnlyRowPreview'] = report;
    zuuluu['NonMediaEmbedsRowPreview'] = tangon;
    zuuluu['MessageRowPreview'] = michal;
    return entity;
})();