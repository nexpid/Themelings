// app/modules/main_tabs_v2/native/tabs/gravity/content_inventory/ContentInventoryEntryContainer.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    report = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = report;
    var _closure1_slot2 = golf;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, mike);
    entity = 0;
    options = golf[entity];
    mike = argCorge;
    entity = undefined;
    mike = mike.bind(entity)(options);
    mike = 1;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.View;
    var _closure1_slot3 = mike;
    mike = 2;
    mike = golf[mike];
    mike = report.bind(entity)(mike);
    var _closure1_slot4 = mike;
    mike = 3;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    report = mike.ICYMI_MARGIN;
    var _closure1_slot5 = report;
    mike = mike.TITLE_AVATAR_SPACING;
    var _closure1_slot6 = mike;
    mike = 4;
    report = golf[mike];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot7 = report;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot8 = mike;
    mike = 5;
    mike = golf[mike];
    options = oscar.bind(entity)(mike);
    report = options.createStyles;
    mike = function() {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = {};
            mike = {};
            tango = _closure1_slot5;
            mike['marginHorizontal'] = tango;
            entity['container'] = mike;
            mike = {};
            mike['marginBottom'] = tango;
            entity['screenshotContainer'] = mike;
            mike = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
            tango = _closure1_slot6;
            mike['gap'] = tango;
            golf = _closure1_slot1;
            verify = _closure1_slot2;
            oscar = 6;
            tango = verify[oscar];
            report = undefined;
            tango = golf.bind(report)(tango);
            tango = tango.spacing;
            tango = tango.PX_12;
            mike['marginBottom'] = tango;
            entity['header'] = mike;
            mike = {};
            tango = 1;
            mike['flex'] = tango;
            entity['headerInfo'] = mike;
            mike = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'gap': 6, 'marginBottom': null, 'marginTop': 2};
            options = _closure1_slot0;
            golf = 7;
            golf = verify[golf];
            options = options.bind(report)(golf);
            golf = options.isAndroid;
            golf = golf.bind(options)();
            if(!golf) { _fun00002_ip = 149; continue _fun00001 }
 143:
            tango = -1;
 149:
            mike['marginBottom'] = tango;
            entity['title'] = mike;
            mike = {'flexDirection': 'row', 'alignItems': 'center'};
            tango = _closure1_slot1;
            zulu = _closure1_slot2;
            zulu = zulu[oscar];
            zulu = tango.bind(report)(zulu);
            zulu = zulu.spacing;
            zulu = zulu.PX_8;
            mike['gap'] = zulu;
            entity['subTitleContainer'] = mike;
            return entity;
        }
    };
    mike = report.bind(options)(mike);
    var _closure1_slot9 = mike;
    report = 13;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/main_tabs_v2/native/tabs/gravity/content_inventory/ContentInventoryEntryContainer.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: ContentInventoryEntryContainer
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            mike = entity.contentId;
            var _closure2_slot0 = mike;
            mike = entity.userId;
            var _closure2_slot1 = mike;
            romeo = entity.children;
            foxtrot = entity.renderForScreenshot;
            report = undefined;
            if(!(foxtrot === report)) { _fun00004_ip = 43; continue _fun00003 }
 41:
            foxtrot = false;
 43:
            result = entity.title;
            update = entity.subtitle;
            entity = entity.type;
            var _closure2_slot2 = entity;
            entity = _closure1_slot9;
            source = entity.bind(report)();
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 8;
            entity = zulu[entity];
            tango = mike.bind(report)(entity);
            zulu = tango.useStateFromStores;
            entity = _closure1_slot4;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                zulu = _closure1_slot4;
                mike = zulu.getUser;
                entity = _closure2_slot1;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            kilo = zulu.bind(tango)(mike, entity);
            entity = null;
            mike = entity == kilo;
            if(mike) { _fun00004_ip = 500; continue _fun00003 }
 136:
            tango = _closure1_slot7;
            golf = _closure1_slot0;
            options = _closure1_slot2;
            mike = 9;
            mike = options[mike];
            mike = golf.bind(report)(mike);
            zulu = mike.PressableHighlight;
            mike = {'unstable_pressDelay': 130, 'onPress': null, 'accessibilityRole': 'button'};
            oscar = function() { // Original name: onPress
                tango = _closure1_slot0;
                report = _closure1_slot2;
                entity = 10;
                zulu = report[entity];
                entity = undefined;
                verify = tango.bind(entity)(zulu);
                options = verify.trackItemInteraction;
                golf = _closure2_slot0;
                oscar = _closure2_slot2;
                zulu = 'open_profile';
                zulu = options.bind(verify)(golf, oscar, zulu);
                zulu = _closure1_slot1;
                mike = 11;
                mike = report[mike];
                zulu = zulu.bind(entity)(mike);
                mike = {};
                tango = _closure2_slot1;
                mike['userId'] = tango;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            mike['onPress'] = oscar;
            oscar = 10;
            oscar = options[oscar];
            oscar = golf.bind(report)(oscar);
            golf = oscar.SimplePost;
            oscar = {};
            oscar['hideDivider'] = foxtrot;
            offset = _closure1_slot8;
            verify = _closure1_slot3;
            options = {};
            backup = source.container;
            yankee = new Array(2);
            yankee[0] = backup;
            if(!foxtrot) { _fun00004_ip = 250; continue _fun00003 }
 244:
            foxtrot = source.screenshotContainer;
 250:
            yankee[1] = foxtrot;
            options['style'] = yankee;
            backup = _closure1_slot8;
            foxtrot = _closure1_slot3;
            yankee = {};
            sizing = source.header;
            yankee['style'] = sizing;
            echo = _closure1_slot7;
            output = _closure1_slot1;
            sequence = _closure1_slot2;
            control = 12;
            sizing = sequence[control];
            output = output.bind(report)(sizing);
            sizing = {};
            config = true;
            sizing['animate'] = config;
            vacuum = _closure1_slot0;
            control = sequence[control];
            control = vacuum.bind(report)(control);
            control = control.AvatarSizes;
            control = control.NORMAL;
            sizing['size'] = control;
            sizing['user'] = kilo;
            sizing['guildId'] = report;
            kilo = kilo.id;
            sizing = echo.bind(report)(output, sizing, kilo);
            kilo = new Array(2);
            kilo[0] = sizing;
            sizing = {};
            output = source.headerInfo;
            sizing['style'] = output;
            output = {};
            control = source.title;
            output['style'] = control;
            output['children'] = result;
            result = echo.bind(report)(foxtrot, output);
            output = new Array(2);
            output[0] = result;
            result = {};
            source = source.subTitleContainer;
            result['style'] = source;
            result['children'] = update;
            result = echo.bind(report)(foxtrot, result);
            output[1] = result;
            sizing['children'] = output;
            sizing = backup.bind(report)(foxtrot, sizing);
            kilo[1] = sizing;
            yankee['children'] = kilo;
            foxtrot = backup.bind(report)(foxtrot, yankee);
            yankee = new Array(2);
            yankee[0] = foxtrot;
            yankee[1] = romeo;
            options['children'] = yankee;
            options = offset.bind(report)(verify, options);
            oscar['children'] = options;
            oscar = tango.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 500:
            return entity;
        }
    };
    zulu['default'] = tango;
    zulu['useStyles'] = mike;
    return entity;
})();