// app/modules/main_tabs_v2/native/tabs/gravity/content_inventory/ContentInventoryEntryContainer.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    report = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = report;
    var _closure1_slot2 = golfie;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, michal);
    entity = 0;
    option = golfie[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(option);
    michal = 1;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.View;
    var _closure1_slot3 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = report.bind(entity)(michal);
    var _closure1_slot4 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.ICYMI_MARGIN;
    var _closure1_slot5 = report;
    michal = michal.TITLE_AVATAR_SPACING;
    var _closure1_slot6 = michal;
    michal = 4;
    report = golfie[michal];
    report = oscard.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot7 = report;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.jsxs;
    var _closure1_slot8 = michal;
    michal = 5;
    michal = golfie[michal];
    option = oscard.bind(entity)(michal);
    report = option.createStyles;
    michal = function() {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = {};
            michal = {};
            tangon = _closure1_slot5;
            michal['marginHorizontal'] = tangon;
            entity['container'] = michal;
            michal = {};
            michal['marginBottom'] = tangon;
            entity['screenshotContainer'] = michal;
            michal = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
            tangon = _closure1_slot6;
            michal['gap'] = tangon;
            golfie = _closure1_slot1;
            verify = _closure1_slot2;
            oscard = 6;
            tangon = verify[oscard];
            report = undefined;
            tangon = golfie.bind(report)(tangon);
            tangon = tangon.spacing;
            tangon = tangon.PX_12;
            michal['marginBottom'] = tangon;
            entity['header'] = michal;
            michal = {};
            tangon = 1;
            michal['flex'] = tangon;
            entity['headerInfo'] = michal;
            michal = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'gap': 6, 'marginBottom': null, 'marginTop': 2};
            option = _closure1_slot0;
            golfie = 7;
            golfie = verify[golfie];
            option = option.bind(report)(golfie);
            golfie = option.isAndroid;
            golfie = golfie.bind(option)();
            if(!golfie) { _fun00002_ip = 153; continue _fun00001 }
 147:
            tangon = -1;
 153:
            michal['marginBottom'] = tangon;
            entity['title'] = michal;
            michal = {'flexDirection': 'row', 'alignItems': 'center'};
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu[oscard];
            zuuluu = tangon.bind(report)(zuuluu);
            zuuluu = zuuluu.spacing;
            zuuluu = zuuluu.PX_8;
            michal['gap'] = zuuluu;
            entity['subTitleContainer'] = michal;
            return entity;
        }
    };
    michal = report.bind(option)(michal);
    var _closure1_slot9 = michal;
    report = 13;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/main_tabs_v2/native/tabs/gravity/content_inventory/ContentInventoryEntryContainer.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: ContentInventoryEntryContainer
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            michal = entity.contentId;
            var _closure2_slot0 = michal;
            michal = entity.userId;
            var _closure2_slot1 = michal;
            romeon = entity.children;
            foxtra = entity.renderForScreenshot;
            report = undefined;
            if(!(foxtra === report)) { _fun00004_ip = 43; continue _fun00003 }
 41:
            foxtra = false;
 43:
            result = entity.title;
            update = entity.subtitle;
            entity = entity.type;
            var _closure2_slot2 = entity;
            entity = _closure1_slot9;
            source = entity.bind(report)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 8;
            entity = zuuluu[entity];
            tangon = michal.bind(report)(entity);
            zuuluu = tangon.useStateFromStores;
            entity = _closure1_slot4;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot4;
                michal = zuuluu.getUser;
                entity = _closure2_slot1;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            kiloes = zuuluu.bind(tangon)(michal, entity);
            entity = null;
            michal = entity == kiloes;
            if(michal) { _fun00004_ip = 500; continue _fun00003 }
 136:
            tangon = _closure1_slot7;
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            michal = 9;
            michal = option[michal];
            michal = golfie.bind(report)(michal);
            zuuluu = michal.PressableHighlight;
            michal = {'unstable_pressDelay': 130, 'onPress': null, 'accessibilityRole': 'button'};
            oscard = function() { // Original name: onPress
                tangon = _closure1_slot0;
                report = _closure1_slot2;
                entity = 10;
                zuuluu = report[entity];
                entity = undefined;
                verify = tangon.bind(entity)(zuuluu);
                option = verify.trackItemInteraction;
                golfie = _closure2_slot0;
                oscard = _closure2_slot2;
                zuuluu = 'open_profile';
                zuuluu = option.bind(verify)(golfie, oscard, zuuluu);
                zuuluu = _closure1_slot1;
                michal = 11;
                michal = report[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = {};
                tangon = _closure2_slot1;
                michal['userId'] = tangon;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal['onPress'] = oscard;
            oscard = 10;
            oscard = option[oscard];
            oscard = golfie.bind(report)(oscard);
            golfie = oscard.SimplePost;
            oscard = {};
            oscard['hideDivider'] = foxtra;
            offset = _closure1_slot8;
            verify = _closure1_slot3;
            option = {};
            backup = source.container;
            yankee = new Array(2);
            yankee[0] = backup;
            if(!foxtra) { _fun00004_ip = 250; continue _fun00003 }
 244:
            foxtra = source.screenshotContainer;
 250:
            yankee[1] = foxtra;
            option['style'] = yankee;
            backup = _closure1_slot8;
            foxtra = _closure1_slot3;
            yankee = {};
            sizing = source.header;
            yankee['style'] = sizing;
            echoed = _closure1_slot7;
            output = _closure1_slot1;
            sequen = _closure1_slot2;
            ctrled = 12;
            sizing = sequen[ctrled];
            output = output.bind(report)(sizing);
            sizing = {};
            config = true;
            sizing['animate'] = config;
            vacuum = _closure1_slot0;
            ctrled = sequen[ctrled];
            ctrled = vacuum.bind(report)(ctrled);
            ctrled = ctrled.AvatarSizes;
            ctrled = ctrled.NORMAL;
            sizing['size'] = ctrled;
            sizing['user'] = kiloes;
            sizing['guildId'] = report;
            kiloes = kiloes.id;
            sizing = echoed.bind(report)(output, sizing, kiloes);
            kiloes = new Array(2);
            kiloes[0] = sizing;
            sizing = {};
            output = source.headerInfo;
            sizing['style'] = output;
            output = {};
            ctrled = source.title;
            output['style'] = ctrled;
            output['children'] = result;
            result = echoed.bind(report)(foxtra, output);
            output = new Array(2);
            output[0] = result;
            result = {};
            source = source.subTitleContainer;
            result['style'] = source;
            result['children'] = update;
            result = echoed.bind(report)(foxtra, result);
            output[1] = result;
            sizing['children'] = output;
            sizing = backup.bind(report)(foxtra, sizing);
            kiloes[1] = sizing;
            yankee['children'] = kiloes;
            foxtra = backup.bind(report)(foxtra, yankee);
            yankee = new Array(2);
            yankee[0] = foxtra;
            yankee[1] = romeon;
            option['children'] = yankee;
            option = offset.bind(report)(verify, option);
            oscard['children'] = option;
            oscard = tangon.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 500:
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['useStyles'] = michal;
    return entity;
})();