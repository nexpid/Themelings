// app/modules/main_tabs_v2/native/tabs/gravity/ICYMILoading.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo, argBar, argBaz) { // Original name: placeholderRowWidth
        mike = argBar;
        entity = global;
        report = entity.Math;
        tango = report.sin;
        zulu = argFoo;
        tango = tango.bind(report)(zulu);
        zulu = 100;
        zulu = zulu * tango;
        tango = entity.Math;
        entity = tango.floor;
        entity = entity.bind(tango)(zulu);
        zulu = zulu - entity;
        entity = argBaz;
        entity = entity - mike;
        entity = zulu * entity;
        entity = entity + mike;
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = function() { // Original name: ICYMILoadingItem
        entity = _closure1_slot8;
        tango = undefined;
        sizing = entity.bind(tango)();
        golf = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 6;
        entity = verify[entity];
        zulu = golf.bind(tango)(entity);
        mike = zulu.usePlaceholderAnimatedStyles;
        entity = true;
        kilo = mike.bind(zulu)(entity, entity);
        report = _closure1_slot3;
        zulu = report.useMemo;
        mike = function() {
            entity = {};
            mike = global;
            oscar = mike.Math;
            tango = oscar.floor;
            report = mike.Math;
            zulu = report.random;
            zulu = zulu.bind(report)();
            report = 10;
            zulu = report * zulu;
            zulu = tango.bind(oscar)(zulu);
            entity['avatarTitle'] = zulu;
            oscar = mike.Math;
            tango = oscar.floor;
            golf = mike.Math;
            zulu = golf.random;
            zulu = zulu.bind(golf)();
            zulu = report * zulu;
            zulu = tango.bind(oscar)(zulu);
            entity['title'] = zulu;
            tango = mike.Math;
            zulu = tango.floor;
            oscar = mike.Math;
            mike = oscar.random;
            mike = mike.bind(oscar)();
            mike = report * mike;
            mike = zulu.bind(tango)(mike);
            entity['subtitle'] = mike;
            return entity;
        };
        entity = new Array(0);
        entity = zulu.bind(report)(mike, entity);
        vacuum = entity.avatarTitle;
        context = entity.title;
        record = entity.subtitle;
        zulu = _closure1_slot6;
        mike = _closure1_slot7;
        entity = {};
        options = _closure1_slot4;
        report = {};
        offset = sizing.container;
        report['style'] = offset;
        backup = _closure1_slot6;
        foxtrot = _closure1_slot4;
        offset = {};
        yankee = sizing.avatarRow;
        offset['style'] = yankee;
        echo = _closure1_slot5;
        romeo = _closure1_slot1;
        yankee = 7;
        output = verify[yankee];
        output = romeo.bind(tango)(output);
        result = output.View;
        output = {};
        source = sizing.backgroundColor;
        update = new Array(3);
        update[0] = source;
        source = sizing.avatar;
        update[1] = source;
        update[2] = kilo;
        output['style'] = update;
        result = echo.bind(tango)(result, output);
        output = new Array(2);
        output[0] = result;
        source = _closure1_slot5;
        result = verify[yankee];
        result = romeo.bind(tango)(result);
        echo = result.View;
        result = {};
        update = sizing.backgroundColor;
        sequence = new Array(4);
        sequence[0] = update;
        update = sizing.avatarTitle;
        sequence[1] = update;
        sequence[2] = kilo;
        papa = {};
        config = _closure1_slot9;
        control = 30;
        update = 60;
        status = config.bind(tango)(vacuum, control, update);
        update = global;
        control = update.HermesInternal;
        target = control.concat;
        vacuum = '';
        control = '%';
        target = target.bind(vacuum)(status, control);
        papa['width'] = target;
        sequence[3] = papa;
        result['style'] = sequence;
        result = source.bind(tango)(echo, result);
        output[1] = result;
        offset['children'] = output;
        foxtrot = backup.bind(tango)(foxtrot, offset);
        offset = new Array(4);
        offset[0] = foxtrot;
        output = _closure1_slot5;
        foxtrot = verify[yankee];
        foxtrot = romeo.bind(tango)(foxtrot);
        backup = foxtrot.View;
        foxtrot = {};
        echo = sizing.backgroundColor;
        result = new Array(4);
        result[0] = echo;
        echo = sizing.title;
        result[1] = echo;
        result[2] = kilo;
        echo = {};
        sequence = 75;
        source = 100;
        papa = config.bind(tango)(context, sequence, source);
        context = update.HermesInternal;
        context = context.concat;
        context = context.bind(vacuum)(papa, control);
        echo['width'] = context;
        result[3] = echo;
        foxtrot['style'] = result;
        foxtrot = output.bind(tango)(backup, foxtrot);
        offset[1] = foxtrot;
        output = _closure1_slot5;
        foxtrot = verify[yankee];
        foxtrot = romeo.bind(tango)(foxtrot);
        backup = foxtrot.View;
        foxtrot = {};
        echo = sizing.backgroundColor;
        result = new Array(4);
        result[0] = echo;
        echo = sizing.subtitle;
        result[1] = echo;
        result[2] = kilo;
        echo = {};
        source = config.bind(tango)(record, sequence, source);
        update = update.HermesInternal;
        update = update.concat;
        update = update.bind(vacuum)(source, control);
        echo['width'] = update;
        result[3] = echo;
        foxtrot['style'] = result;
        foxtrot = output.bind(tango)(backup, foxtrot);
        offset[2] = foxtrot;
        foxtrot = _closure1_slot5;
        yankee = verify[yankee];
        yankee = romeo.bind(tango)(yankee);
        romeo = yankee.View;
        yankee = {};
        output = sizing.backgroundColor;
        backup = new Array(3);
        backup[0] = output;
        sizing = sizing.image;
        backup[1] = sizing;
        backup[2] = kilo;
        yankee['style'] = backup;
        yankee = foxtrot.bind(tango)(romeo, yankee);
        offset[3] = yankee;
        report['children'] = offset;
        options = zulu.bind(tango)(options, report);
        report = new Array(2);
        report[0] = options;
        options = _closure1_slot5;
        oscar = 8;
        oscar = verify[oscar];
        oscar = golf.bind(tango)(oscar);
        golf = oscar.Separator;
        oscar = {};
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    romeo = 1;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    backup = tango.ICYMI_MARGIN;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 5;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_MOD_SUBTLE;
    verify['backgroundColor'] = foxtrot;
    tango['backgroundColor'] = verify;
    verify = {};
    verify['padding'] = backup;
    tango['container'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    verify['marginBottom'] = backup;
    tango['avatarRow'] = verify;
    verify = {'width': 40, 'height': 40};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.md;
    verify['borderRadius'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_12;
    verify['marginRight'] = foxtrot;
    tango['avatar'] = verify;
    foxtrot = 10;
    verify = {'height': 18, 'borderRadius': 10, 'flexShrink': 1};
    tango['avatarTitle'] = verify;
    verify = {};
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_16;
    verify['height'] = kilo;
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_12;
    verify['marginBottom'] = kilo;
    verify['borderRadius'] = foxtrot;
    verify['flexShrink'] = romeo;
    tango['title'] = verify;
    verify = {};
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_16;
    verify['height'] = kilo;
    verify['marginBottom'] = backup;
    verify['borderRadius'] = foxtrot;
    verify['flexShrink'] = romeo;
    tango['subtitle'] = verify;
    verify = {'width': '100%', 'height': 240};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.lg;
    verify['borderRadius'] = offset;
    tango['image'] = verify;
    verify = {};
    tango['separator'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/tabs/gravity/ICYMILoading.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: ICYMILoading
        tango = _closure1_slot6;
        zulu = _closure1_slot7;
        mike = {};
        golf = _closure1_slot5;
        options = _closure1_slot10;
        entity = undefined;
        report = {};
        golf = golf.bind(entity)(options, report);
        report = new Array(2);
        report[0] = golf;
        golf = _closure1_slot5;
        oscar = {};
        oscar = golf.bind(entity)(options, oscar);
        report[1] = oscar;
        mike['children'] = report;
        entity = tango.bind(entity)(zulu, mike);
        return entity;
    };
    zulu['ICYMILoading'] = mike;
    return entity;
})();