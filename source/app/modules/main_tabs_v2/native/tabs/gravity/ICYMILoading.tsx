// app/modules/main_tabs_v2/native/tabs/gravity/ICYMILoading.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo, argBar, argBaz) { // Original name: placeholderRowWidth
        michal = argBar;
        entity = global;
        report = entity.Math;
        tangon = report.sin;
        zuuluu = argFoo;
        tangon = tangon.bind(report)(zuuluu);
        zuuluu = 100;
        zuuluu = zuuluu * tangon;
        tangon = entity.Math;
        entity = tangon.floor;
        entity = entity.bind(tangon)(zuuluu);
        zuuluu = zuuluu - entity;
        entity = argBaz;
        entity = entity - michal;
        entity = zuuluu * entity;
        entity = entity + michal;
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = function() { // Original name: ICYMILoadingItem
        entity = _closure1_slot8;
        tangon = undefined;
        sizing = entity.bind(tangon)();
        golfie = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 6;
        entity = verify[entity];
        zuuluu = golfie.bind(tangon)(entity);
        michal = zuuluu.usePlaceholderAnimatedStyles;
        entity = true;
        kiloes = michal.bind(zuuluu)(entity, entity);
        report = _closure1_slot3;
        zuuluu = report.useMemo;
        michal = function() {
            entity = {};
            michal = global;
            oscard = michal.Math;
            tangon = oscard.floor;
            report = michal.Math;
            zuuluu = report.random;
            zuuluu = zuuluu.bind(report)();
            report = 10;
            zuuluu = report * zuuluu;
            zuuluu = tangon.bind(oscard)(zuuluu);
            entity['avatarTitle'] = zuuluu;
            oscard = michal.Math;
            tangon = oscard.floor;
            golfie = michal.Math;
            zuuluu = golfie.random;
            zuuluu = zuuluu.bind(golfie)();
            zuuluu = report * zuuluu;
            zuuluu = tangon.bind(oscard)(zuuluu);
            entity['title'] = zuuluu;
            tangon = michal.Math;
            zuuluu = tangon.floor;
            oscard = michal.Math;
            michal = oscard.random;
            michal = michal.bind(oscard)();
            michal = report * michal;
            michal = zuuluu.bind(tangon)(michal);
            entity['subtitle'] = michal;
            return entity;
        };
        entity = new Array(0);
        entity = zuuluu.bind(report)(michal, entity);
        vacuum = entity.avatarTitle;
        cntext = entity.title;
        record = entity.subtitle;
        zuuluu = _closure1_slot6;
        michal = _closure1_slot7;
        entity = {};
        option = _closure1_slot4;
        report = {};
        offset = sizing.container;
        report['style'] = offset;
        backup = _closure1_slot6;
        foxtra = _closure1_slot4;
        offset = {};
        yankee = sizing.avatarRow;
        offset['style'] = yankee;
        echoed = _closure1_slot5;
        romeon = _closure1_slot1;
        yankee = 7;
        output = verify[yankee];
        output = romeon.bind(tangon)(output);
        result = output.View;
        output = {};
        source = sizing.backgroundColor;
        update = new Array(3);
        update[0] = source;
        source = sizing.avatar;
        update[1] = source;
        update[2] = kiloes;
        output['style'] = update;
        result = echoed.bind(tangon)(result, output);
        output = new Array(2);
        output[0] = result;
        source = _closure1_slot5;
        result = verify[yankee];
        result = romeon.bind(tangon)(result);
        echoed = result.View;
        result = {};
        update = sizing.backgroundColor;
        sequen = new Array(4);
        sequen[0] = update;
        update = sizing.avatarTitle;
        sequen[1] = update;
        sequen[2] = kiloes;
        papara = {};
        config = _closure1_slot9;
        ctrled = 30;
        update = 60;
        status = config.bind(tangon)(vacuum, ctrled, update);
        update = global;
        ctrled = update.HermesInternal;
        target = ctrled.concat;
        vacuum = '';
        ctrled = '%';
        target = target.bind(vacuum)(status, ctrled);
        papara['width'] = target;
        sequen[3] = papara;
        result['style'] = sequen;
        result = source.bind(tangon)(echoed, result);
        output[1] = result;
        offset['children'] = output;
        foxtra = backup.bind(tangon)(foxtra, offset);
        offset = new Array(4);
        offset[0] = foxtra;
        output = _closure1_slot5;
        foxtra = verify[yankee];
        foxtra = romeon.bind(tangon)(foxtra);
        backup = foxtra.View;
        foxtra = {};
        echoed = sizing.backgroundColor;
        result = new Array(4);
        result[0] = echoed;
        echoed = sizing.title;
        result[1] = echoed;
        result[2] = kiloes;
        echoed = {};
        sequen = 75;
        source = 100;
        papara = config.bind(tangon)(cntext, sequen, source);
        cntext = update.HermesInternal;
        cntext = cntext.concat;
        cntext = cntext.bind(vacuum)(papara, ctrled);
        echoed['width'] = cntext;
        result[3] = echoed;
        foxtra['style'] = result;
        foxtra = output.bind(tangon)(backup, foxtra);
        offset[1] = foxtra;
        output = _closure1_slot5;
        foxtra = verify[yankee];
        foxtra = romeon.bind(tangon)(foxtra);
        backup = foxtra.View;
        foxtra = {};
        echoed = sizing.backgroundColor;
        result = new Array(4);
        result[0] = echoed;
        echoed = sizing.subtitle;
        result[1] = echoed;
        result[2] = kiloes;
        echoed = {};
        source = config.bind(tangon)(record, sequen, source);
        update = update.HermesInternal;
        update = update.concat;
        update = update.bind(vacuum)(source, ctrled);
        echoed['width'] = update;
        result[3] = echoed;
        foxtra['style'] = result;
        foxtra = output.bind(tangon)(backup, foxtra);
        offset[2] = foxtra;
        foxtra = _closure1_slot5;
        yankee = verify[yankee];
        yankee = romeon.bind(tangon)(yankee);
        romeon = yankee.View;
        yankee = {};
        output = sizing.backgroundColor;
        backup = new Array(3);
        backup[0] = output;
        sizing = sizing.image;
        backup[1] = sizing;
        backup[2] = kiloes;
        yankee['style'] = backup;
        yankee = foxtra.bind(tangon)(romeon, yankee);
        offset[3] = yankee;
        report['children'] = offset;
        option = zuuluu.bind(tangon)(option, report);
        report = new Array(2);
        report[0] = option;
        option = _closure1_slot5;
        oscard = 8;
        oscard = verify[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.Separator;
        oscard = {};
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    backup = tangon.ICYMI_MARGIN;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 5;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_MOD_SUBTLE;
    verify['backgroundColor'] = foxtra;
    tangon['backgroundColor'] = verify;
    verify = {};
    verify['padding'] = backup;
    tangon['container'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    verify['marginBottom'] = backup;
    tangon['avatarRow'] = verify;
    verify = {'width': 40, 'height': 40};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.md;
    verify['borderRadius'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_12;
    verify['marginRight'] = foxtra;
    tangon['avatar'] = verify;
    foxtra = 10;
    verify = {'height': 18, 'borderRadius': 10, 'flexShrink': 1};
    tangon['avatarTitle'] = verify;
    verify = {};
    kiloes = oscard[offset];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_16;
    verify['height'] = kiloes;
    kiloes = oscard[offset];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_12;
    verify['marginBottom'] = kiloes;
    verify['borderRadius'] = foxtra;
    verify['flexShrink'] = romeon;
    tangon['title'] = verify;
    verify = {};
    kiloes = oscard[offset];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_16;
    verify['height'] = kiloes;
    verify['marginBottom'] = backup;
    verify['borderRadius'] = foxtra;
    verify['flexShrink'] = romeon;
    tangon['subtitle'] = verify;
    verify = {'width': '100%', 'height': 240};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.lg;
    verify['borderRadius'] = offset;
    tangon['image'] = verify;
    verify = {};
    tangon['separator'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/tabs/gravity/ICYMILoading.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: ICYMILoading
        tangon = _closure1_slot6;
        zuuluu = _closure1_slot7;
        michal = {};
        golfie = _closure1_slot5;
        option = _closure1_slot10;
        entity = undefined;
        report = {};
        golfie = golfie.bind(entity)(option, report);
        report = new Array(2);
        report[0] = golfie;
        golfie = _closure1_slot5;
        oscard = {};
        oscard = golfie.bind(entity)(option, oscard);
        report[1] = oscard;
        michal['children'] = report;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    zuuluu['ICYMILoading'] = michal;
    return entity;
})();