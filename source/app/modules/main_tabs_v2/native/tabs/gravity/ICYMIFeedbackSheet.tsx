// app/modules/main_tabs_v2/native/tabs/gravity/ICYMIFeedbackSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/tabs/gravity/ICYMIFeedbackSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: ICYMIFeedbackSheet
        yankee = _closure1_slot0;
        romeon = _closure1_slot2;
        michal = 4;
        michal = romeon[michal];
        tangon = undefined;
        golfie = yankee.bind(tangon)(michal);
        oscard = golfie.useStateFromStores;
        michal = _closure1_slot3;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            michal = _closure1_slot3;
            entity = michal.getLoadId;
            entity = entity.bind(michal)();
            return entity;
        };
        michal = oscard.bind(golfie)(zuuluu, michal);
        var _closure2_slot0 = michal;
        zuuluu = _closure1_slot5;
        michal = _closure1_slot1;
        entity = 5;
        entity = romeon[entity];
        michal = michal.bind(tangon)(entity);
        entity = {'headerLabel': null, 'showHeaderCloseButton': true, 'hideDontShowAgainCheckbox': true};
        option = 6;
        oscard = romeon[option];
        oscard = yankee.bind(tangon)(oscard);
        verify = oscard.intl;
        golfie = verify.string;
        oscard = romeon[option];
        oscard = yankee.bind(tangon)(oscard);
        oscard = oscard.t;
        oscard = oscard.ppfH9/;
        oscard = golfie.bind(verify)(oscard);
        entity['headerLabel'] = oscard;
        oscard = romeon[option];
        oscard = yankee.bind(tangon)(oscard);
        verify = oscard.intl;
        golfie = verify.string;
        oscard = romeon[option];
        oscard = yankee.bind(tangon)(oscard);
        oscard = oscard.t;
        oscard = oscard.ePk/CQ;
        oscard = golfie.bind(verify)(oscard);
        entity['ratingsBodyLabel'] = oscard;
        oscard = romeon[option];
        oscard = yankee.bind(tangon)(oscard);
        verify = oscard.intl;
        golfie = verify.string;
        oscard = romeon[option];
        oscard = yankee.bind(tangon)(oscard);
        oscard = oscard.t;
        oscard = oscard.sBOuOT;
        oscard = golfie.bind(verify)(oscard);
        entity['reasonsHeaderLabel'] = oscard;
        oscard = {};
        golfie = romeon[option];
        golfie = yankee.bind(tangon)(golfie);
        offset = golfie.intl;
        verify = offset.string;
        golfie = romeon[option];
        golfie = yankee.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.F6TmZG;
        golfie = verify.bind(offset)(golfie);
        oscard['label'] = golfie;
        golfie = 'irrelevant_content';
        oscard['value'] = golfie;
        golfie = new Array(5);
        golfie[0] = oscard;
        oscard = {};
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        foxtra = verify.intl;
        offset = foxtra.string;
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.voWAzs;
        verify = offset.bind(foxtra)(verify);
        oscard['label'] = verify;
        verify = 'not_enough_content';
        oscard['value'] = verify;
        golfie[1] = oscard;
        oscard = {};
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        foxtra = verify.intl;
        offset = foxtra.string;
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.Ay8iw8;
        verify = offset.bind(foxtra)(verify);
        oscard['label'] = verify;
        verify = 'too_much_content';
        oscard['value'] = verify;
        golfie[2] = oscard;
        oscard = {};
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        offset = verify.intl;
        verify = offset.string;
        option = romeon[option];
        option = yankee.bind(tangon)(option);
        option = option.t;
        option = option.Yu+52d;
        option = verify.bind(offset)(option);
        oscard['label'] = option;
        option = 'laggy';
        oscard['value'] = option;
        golfie[3] = oscard;
        oscard = 'other';
        option = {'label': 'Other', 'value': 'other'};
        golfie[4] = option;
        entity['reasons'] = golfie;
        entity['otherKey'] = oscard;
        oscard = function() { // Original name: trackOpen
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 7;
            zuuluu = zuuluu[entity];
            entity = undefined;
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.track;
            michal = _closure1_slot4;
            michal = michal.HOME_FEEDBACK_PROMPT_VIEWED;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity['trackOpen'] = oscard;
        oscard = ['other'];
        entity['feedbackReasons'] = oscard;
        report = function(argFoo) { // Original name: trackReport
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                oscard = argFoo;
                tangon = _closure1_slot1;
                report = _closure1_slot2;
                entity = 8;
                zuuluu = report[entity];
                entity = undefined;
                golfie = tangon.bind(entity)(zuuluu);
                zuuluu = golfie.giveFeedback;
                zuuluu = zuuluu.bind(golfie)();
                zuuluu = 7;
                zuuluu = report[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                tangon = report.track;
                michal = _closure1_slot4;
                zuuluu = michal.HOME_FEEDBACK_SUBMITTED;
                michal = {};
                golfie = 'gravity';
                michal['home_session_id'] = golfie;
                golfie = _closure2_slot0;
                michal['load_id'] = golfie;
                option = oscard.reason;
                golfie = null;
                option = golfie != option;
                golfie = undefined;
                if(!option) { _fun00002_ip = 129; continue _fun00001 }
 107:
                option = oscard.reason;
                verify = option.value;
                option = new Array(1);
                option[0] = verify;
                golfie = option;
 129:
                michal['reason_descriptions'] = golfie;
                golfie = oscard.rating;
                michal['rating'] = golfie;
                oscard = oscard.feedback;
                michal['user_feedback'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            }
        };
        entity['trackReport'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();