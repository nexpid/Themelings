// app/modules/main_tabs_v2/native/message_requests/screens/MessageRequestsScreenWithTabs.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var12 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var12;
    var _closure1_slot2 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var4 = var6[var1];
    var1 = undefined;
    var4 = var12.bind(var1)(var4);
    var _closure1_slot3 = var4;
    var13 = 1;
    var7 = var6[var13];
    var4 = metroImportAll;
    var7 = var4.bind(var1)(var7);
    var _closure1_slot4 = var7;
    var4 = 2;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.View;
    var _closure1_slot5 = var4;
    var4 = 3;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var8 = var4.jsx;
    var _closure1_slot6 = var8;
    var4 = var4.jsxs;
    var _closure1_slot7 = var4;
    var4 = {};
    var8 = 'REQUEST';
    var4['REQUEST'] = var8;
    var8 = 'SPAM';
    var4['SPAM'] = var8;
    var _closure1_slot8 = var4;
    var4 = 4;
    var4 = var6[var4];
    var9 = var5.bind(var1)(var4);
    var8 = var9.createStyles;
    var4 = {};
    var10 = {};
    var10['flex'] = var13;
    var11 = 5;
    var14 = var6[var11];
    var14 = var12.bind(var1)(var14);
    var14 = var14.colors;
    var14 = var14.BG_BASE_SECONDARY;
    var10['backgroundColor'] = var14;
    var4['container'] = var10;
    var10 = {};
    var10['flex'] = var13;
    var4['messageRequestContent'] = var10;
    var10 = {};
    var13 = 32;
    var10['minHeight'] = var13;
    var11 = var6[var11];
    var11 = var12.bind(var1)(var11);
    var11 = var11.spacing;
    var11 = var11.PX_16;
    var10['paddingHorizontal'] = var11;
    var4['tabContainer'] = var10;
    var4 = var8.bind(var9)(var4);
    var _closure1_slot9 = var4;
    var4 = var7.memo;
    var2 = function(arg1) {
        var1 = arg1;
        var3 = var1.navigation;
        var _closure2_slot0 = var3;
        var5 = _closure1_slot9;
        var4 = undefined;
        var10 = var5.bind(var4)();
        var6 = _closure1_slot4;
        var5 = var6.useState;
        var11 = 0;
        var8 = var5.bind(var6)(var11);
        var7 = _closure1_slot3;
        var5 = 2;
        var7 = var7.bind(var4)(var8, var5);
        var12 = var7[var11];
        var5 = 1;
        var5 = var7[var5];
        var _closure2_slot1 = var5;
        var7 = var6.useCallback;
        var5 = new Array(1);
        var5[0] = var3;
        var3 = function(arg1) {
            var4 = _closure2_slot0;
            var3 = var4.push;
            var2 = {};
            var1 = arg1;
            var2['channelId'] = var1;
            var1 = 'preview';
            var1 = var3.bind(var4)(var1, var2);
            return var1;
        };
        var17 = var7.bind(var6)(var3, var5);
        var5 = var6.useCallback;
        var3 = function(arg1) {
            var1 = arg1;
            var1 = var1.nativeEvent;
            var1 = var1.layout;
            var3 = var1.width;
            var2 = _closure2_slot1;
            var1 = undefined;
            var2 = var2.bind(var1)(var3);
            return var1;
        };
        var2 = new Array(0);
        var6 = var5.bind(var6)(var3, var2);
        var7 = _closure1_slot0;
        var9 = _closure1_slot2;
        var2 = 6;
        var2 = var9[var2];
        var5 = var7.bind(var4)(var2);
        var3 = var5.useSegmentedControlState;
        var2 = {};
        var14 = {};
        var18 = 7;
        var8 = var9[var18];
        var8 = var7.bind(var4)(var8);
        var15 = var8.intl;
        var13 = var15.string;
        var8 = var9[var18];
        var8 = var7.bind(var4)(var8);
        var8 = var8.t;
        var8 = var8.7RFcXV;
        var8 = var13.bind(var15)(var8);
        var14['label'] = var8;
        var15 = _closure1_slot8;
        var8 = var15.REQUEST;
        var14['id'] = var8;
        var8 = _closure1_slot6;
        var16 = _closure1_slot1;
        var13 = 8;
        var13 = var9[var13];
        var19 = var16.bind(var4)(var13);
        var13 = {};
        var13['goToMessageRequestPreview'] = var17;
        var13 = var8.bind(var4)(var19, var13);
        var14['page'] = var13;
        var13 = new Array(2);
        var13[0] = var14;
        var14 = {};
        var19 = var9[var18];
        var19 = var7.bind(var4)(var19);
        var20 = var19.intl;
        var19 = var20.string;
        var18 = var9[var18];
        var18 = var7.bind(var4)(var18);
        var18 = var18.t;
        var18 = var18.ulKXHh;
        var18 = var19.bind(var20)(var18);
        var14['label'] = var18;
        var15 = var15.SPAM;
        var14['id'] = var15;
        var15 = 9;
        var15 = var9[var15];
        var16 = var16.bind(var4)(var15);
        var15 = {};
        var15['goToMessageRequestPreview'] = var17;
        var15 = var8.bind(var4)(var16, var15);
        var14['page'] = var15;
        var13[1] = var14;
        var2['items'] = var13;
        var2['pageWidth'] = var12;
        var2['defaultIndex'] = var11;
        var12 = var3.bind(var5)(var2);
        var3 = _closure1_slot7;
        var2 = _closure1_slot5;
        var1 = {};
        var5 = var10.container;
        var1['style'] = var5;
        var5 = {};
        var11 = var10.tabContainer;
        var5['style'] = var11;
        var5['onLayout'] = var6;
        var6 = 10;
        var6 = var9[var6];
        var6 = var7.bind(var4)(var6);
        var11 = var6.SegmentedControl;
        var6 = {};
        var6['state'] = var12;
        var6 = var8.bind(var4)(var11, var6);
        var5['children'] = var6;
        var6 = var8.bind(var4)(var2, var5);
        var5 = new Array(3);
        var5[0] = var6;
        var6 = {};
        var10 = var10.messageRequestContent;
        var6['style'] = var10;
        var10 = 11;
        var10 = var9[var10];
        var10 = var7.bind(var4)(var10);
        var11 = var10.SegmentedControlPages;
        var10 = {};
        var10['state'] = var12;
        var10 = var8.bind(var4)(var11, var10);
        var6['children'] = var10;
        var6 = var8.bind(var4)(var2, var6);
        var5[1] = var6;
        var6 = 12;
        var6 = var9[var6];
        var6 = var7.bind(var4)(var6);
        var7 = var6.TTIFirstContentfulPaint;
        var6 = {};
        var6 = var8.bind(var4)(var7, var6);
        var5[2] = var6;
        var1['children'] = var5;
        var1 = var3.bind(var4)(var2, var1);
        return var1;
    };
    var2 = var4.bind(var7)(var2);
    var4 = 13;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/main_tabs_v2/native/message_requests/screens/MessageRequestsScreenWithTabs.tsx';
    var4 = var5.bind(var6)(var4);
    var3['default'] = var2;
    return var1;
})();