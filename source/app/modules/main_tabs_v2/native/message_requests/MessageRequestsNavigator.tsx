// app/modules/main_tabs_v2/native/message_requests/MessageRequestsNavigator.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    golfie = report.bind(entity)(tangon);
    tangon = golfie.createNativeStackNavigator;
    tangon = tangon.bind(golfie)();
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'borderBottomWidth': 0, 'backgroundColor': null, 'shadowColor': 'transparent'};
    offset = 4;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_BASE_PRIMARY;
    verify['backgroundColor'] = offset;
    tangon['header'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/message_requests/MessageRequestsNavigator.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: MessageRequestsNavigator
        entity = _closure1_slot7;
        tangon = undefined;
        entity = entity.bind(tangon)();
        var _closure2_slot0 = entity;
        output = _closure1_slot0;
        foxtra = _closure1_slot2;
        entity = 5;
        entity = foxtra[entity];
        michal = output.bind(tangon)(entity);
        entity = michal.useAccessibilityNativeStackOptions;
        entity = entity.bind(michal)();
        var _closure2_slot1 = entity;
        report = _closure1_slot3;
        zuuluu = report.useLayoutEffect;
        michal = function() {
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 6;
            michal = michal[entity];
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            entity = michal.trackAppUIViewed;
            entity = entity.bind(michal)();
            return entity;
        };
        entity = new Array(0);
        entity = zuuluu.bind(report)(michal, entity);
        zuuluu = _closure1_slot5;
        oscard = _closure1_slot6;
        michal = oscard.Navigator;
        entity = {};
        report = function(argFoo) { // Original name: screenOptions
            entity = argFoo;
            report = entity.navigation;
            entity = {};
            zuuluu = _closure2_slot0;
            zuuluu = zuuluu.header;
            entity['headerStyle'] = zuuluu;
            zuuluu = false;
            entity['headerShadowVisible'] = zuuluu;
            zuuluu = function(argFoo) { // Original name: headerTitle
                zuuluu = argFoo;
                oscard = zuuluu.children;
                entity = null;
                michal = Object.create(entity);
                entity = 0;
                michal['children'] = entity;
                verify = {};
                option = zuuluu;
                golfie = michal;
                option = copyDataProperties(verify, option, golfie);
                tangon = _closure1_slot4;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 7;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.GenericHeaderTitle;
                entity = {};
                entity['title'] = oscard;
                verify = entity;
                report = copyDataProperties(verify, option);
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            entity['headerTitle'] = zuuluu;
            zuuluu = 'center';
            entity['headerTitleAlign'] = zuuluu;
            oscard = _closure1_slot0;
            tangon = _closure1_slot2;
            zuuluu = 7;
            tangon = tangon[zuuluu];
            zuuluu = undefined;
            tangon = oscard.bind(zuuluu)(tangon);
            zuuluu = tangon.getRenderModalCloseImage;
            zuuluu = zuuluu.bind(tangon)(report);
            entity['headerLeft'] = zuuluu;
            golfie = _closure2_slot1;
            option = entity;
            michal = copyDataProperties(option, golfie);
            return entity;
        };
        entity['screenOptions'] = report;
        option = _closure1_slot4;
        golfie = oscard.Screen;
        report = {};
        offset = 'root';
        report['name'] = offset;
        offset = {};
        backup = 8;
        romeon = foxtra[backup];
        romeon = output.bind(tangon)(romeon);
        sizing = romeon.intl;
        kiloes = sizing.string;
        romeon = foxtra[backup];
        romeon = output.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.e7GWjY;
        romeon = kiloes.bind(sizing)(romeon);
        offset['title'] = romeon;
        romeon = _closure1_slot1;
        yankee = 9;
        kiloes = foxtra[yankee];
        kiloes = romeon.bind(tangon)(kiloes);
        update = kiloes.bind(tangon)();
        source = offset;
        kiloes = copyDataProperties(source, update);
        report['options'] = offset;
        offset = function() { // Original name: getComponent
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 10;
            michal = michal[entity];
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            entity = entity.default;
            return entity;
        };
        report['getComponent'] = offset;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(3);
        report[0] = golfie;
        offset = oscard.Screen;
        golfie = {};
        kiloes = 'spam';
        golfie['name'] = kiloes;
        kiloes = {};
        sizing = foxtra[backup];
        sizing = output.bind(tangon)(sizing);
        echoed = sizing.intl;
        result = echoed.string;
        sizing = foxtra[backup];
        sizing = output.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.ulKXHh;
        sizing = result.bind(echoed)(sizing);
        kiloes['title'] = sizing;
        sizing = foxtra[yankee];
        sizing = romeon.bind(tangon)(sizing);
        update = sizing.bind(tangon)();
        source = kiloes;
        sizing = copyDataProperties(source, update);
        golfie['options'] = kiloes;
        kiloes = function() { // Original name: getComponent
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 11;
            michal = michal[entity];
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            entity = entity.default;
            return entity;
        };
        golfie['getComponent'] = kiloes;
        golfie = option.bind(tangon)(offset, golfie);
        report[1] = golfie;
        golfie = oscard.Screen;
        oscard = {};
        offset = 'preview';
        oscard['name'] = offset;
        offset = {};
        kiloes = foxtra[backup];
        kiloes = output.bind(tangon)(kiloes);
        sizing = kiloes.intl;
        kiloes = sizing.string;
        backup = foxtra[backup];
        backup = output.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.iilwGB;
        backup = kiloes.bind(sizing)(backup);
        offset['title'] = backup;
        yankee = foxtra[yankee];
        yankee = romeon.bind(tangon)(yankee);
        update = yankee.bind(tangon)();
        source = offset;
        yankee = copyDataProperties(source, update);
        oscard['options'] = offset;
        verify = function() { // Original name: getComponent
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 12;
            michal = michal[entity];
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            entity = entity.default;
            return entity;
        };
        oscard['getComponent'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();