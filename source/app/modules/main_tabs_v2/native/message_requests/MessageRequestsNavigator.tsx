// app/modules/main_tabs_v2/native/message_requests/MessageRequestsNavigator.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    golf = report.bind(entity)(tango);
    tango = golf.createNativeStackNavigator;
    tango = tango.bind(golf)();
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'borderBottomWidth': 0, 'backgroundColor': null, 'shadowColor': 'transparent'};
    offset = 4;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_BASE_PRIMARY;
    verify['backgroundColor'] = offset;
    tango['header'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/message_requests/MessageRequestsNavigator.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: MessageRequestsNavigator
        entity = _closure1_slot7;
        tango = undefined;
        entity = entity.bind(tango)();
        var _closure2_slot0 = entity;
        output = _closure1_slot0;
        foxtrot = _closure1_slot2;
        entity = 5;
        entity = foxtrot[entity];
        mike = output.bind(tango)(entity);
        entity = mike.useAccessibilityNativeStackOptions;
        entity = entity.bind(mike)();
        var _closure2_slot1 = entity;
        report = _closure1_slot3;
        zulu = report.useLayoutEffect;
        mike = function() {
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 6;
            mike = mike[entity];
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            entity = mike.trackAppUIViewed;
            entity = entity.bind(mike)();
            return entity;
        };
        entity = new Array(0);
        entity = zulu.bind(report)(mike, entity);
        zulu = _closure1_slot5;
        oscar = _closure1_slot6;
        mike = oscar.Navigator;
        entity = {};
        report = function(argFoo) { // Original name: screenOptions
            entity = argFoo;
            report = entity.navigation;
            entity = {};
            zulu = _closure2_slot0;
            zulu = zulu.header;
            entity['headerStyle'] = zulu;
            zulu = false;
            entity['headerShadowVisible'] = zulu;
            zulu = function(argFoo) { // Original name: headerTitle
                zulu = argFoo;
                oscar = zulu.children;
                entity = null;
                mike = Object.create(entity);
                entity = 0;
                mike['children'] = entity;
                verify = {};
                options = zulu;
                golf = mike;
                options = copyDataProperties(verify, options, golf);
                tango = _closure1_slot4;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 7;
                entity = zulu[entity];
                zulu = undefined;
                entity = mike.bind(zulu)(entity);
                mike = entity.GenericHeaderTitle;
                entity = {};
                entity['title'] = oscar;
                verify = entity;
                report = copyDataProperties(verify, options);
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            entity['headerTitle'] = zulu;
            zulu = 'center';
            entity['headerTitleAlign'] = zulu;
            oscar = _closure1_slot0;
            tango = _closure1_slot2;
            zulu = 7;
            tango = tango[zulu];
            zulu = undefined;
            tango = oscar.bind(zulu)(tango);
            zulu = tango.getRenderModalCloseImage;
            zulu = zulu.bind(tango)(report);
            entity['headerLeft'] = zulu;
            golf = _closure2_slot1;
            options = entity;
            mike = copyDataProperties(options, golf);
            return entity;
        };
        entity['screenOptions'] = report;
        options = _closure1_slot4;
        golf = oscar.Screen;
        report = {};
        offset = 'root';
        report['name'] = offset;
        offset = {};
        backup = 8;
        romeo = foxtrot[backup];
        romeo = output.bind(tango)(romeo);
        sizing = romeo.intl;
        kilo = sizing.string;
        romeo = foxtrot[backup];
        romeo = output.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.e7GWjY;
        romeo = kilo.bind(sizing)(romeo);
        offset['title'] = romeo;
        romeo = _closure1_slot1;
        yankee = 9;
        kilo = foxtrot[yankee];
        kilo = romeo.bind(tango)(kilo);
        update = kilo.bind(tango)();
        source = offset;
        kilo = copyDataProperties(source, update);
        report['options'] = offset;
        offset = function() { // Original name: getComponent
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 10;
            mike = mike[entity];
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            entity = entity.default;
            return entity;
        };
        report['getComponent'] = offset;
        golf = options.bind(tango)(golf, report);
        report = new Array(3);
        report[0] = golf;
        offset = oscar.Screen;
        golf = {};
        kilo = 'spam';
        golf['name'] = kilo;
        kilo = {};
        sizing = foxtrot[backup];
        sizing = output.bind(tango)(sizing);
        echo = sizing.intl;
        result = echo.string;
        sizing = foxtrot[backup];
        sizing = output.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.ulKXHh;
        sizing = result.bind(echo)(sizing);
        kilo['title'] = sizing;
        sizing = foxtrot[yankee];
        sizing = romeo.bind(tango)(sizing);
        update = sizing.bind(tango)();
        source = kilo;
        sizing = copyDataProperties(source, update);
        golf['options'] = kilo;
        kilo = function() { // Original name: getComponent
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 11;
            mike = mike[entity];
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            entity = entity.default;
            return entity;
        };
        golf['getComponent'] = kilo;
        golf = options.bind(tango)(offset, golf);
        report[1] = golf;
        golf = oscar.Screen;
        oscar = {};
        offset = 'preview';
        oscar['name'] = offset;
        offset = {};
        kilo = foxtrot[backup];
        kilo = output.bind(tango)(kilo);
        sizing = kilo.intl;
        kilo = sizing.string;
        backup = foxtrot[backup];
        backup = output.bind(tango)(backup);
        backup = backup.t;
        backup = backup.iilwGB;
        backup = kilo.bind(sizing)(backup);
        offset['title'] = backup;
        yankee = foxtrot[yankee];
        yankee = romeo.bind(tango)(yankee);
        update = yankee.bind(tango)();
        source = offset;
        yankee = copyDataProperties(source, update);
        oscar['options'] = offset;
        verify = function() { // Original name: getComponent
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 12;
            mike = mike[entity];
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            entity = entity.default;
            return entity;
        };
        oscar['getComponent'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();