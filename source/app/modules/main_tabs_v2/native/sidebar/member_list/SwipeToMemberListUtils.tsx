// app/modules/main_tabs_v2/native/sidebar/member_list/SwipeToMemberListUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    tangon = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = tangon;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    oscard = {};
    entity = true;
    oscard['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, oscard);
    entity = 3;
    tangon = tangon[entity];
    entity = undefined;
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/sidebar/member_list/SwipeToMemberListUtils.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: getIsSwipeToMemberListExperimentEnabled
        michal = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 0;
        entity = verify[entity];
        option = undefined;
        tangon = michal.bind(option)(entity);
        zuuluu = tangon.getCurrentConfig;
        michal = {};
        entity = argFoo;
        michal['location'] = entity;
        entity = {};
        oscard = true;
        entity['autoTrackExposure'] = oscard;
        golfie = _closure1_slot0;
        report = 1;
        report = verify[report];
        oscard = golfie.bind(option)(report);
        report = oscard.getSwipeToReplySettingValue;
        oscard = report.bind(oscard)();
        report = 2;
        report = verify[report];
        report = golfie.bind(option)(report);
        report = report.SwipeRightToLeftMode;
        report = report.SWIPE_RIGHT_TO_LEFT_REPLY;
        report = oscard === report;
        entity['disable'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        entity = entity.enabled;
        return entity;
    };
    zuuluu['getIsSwipeToMemberListExperimentEnabled'] = tangon;
    tangon = function(argFoo) { // Original name: useIsSwipeToMemberListExperimentEnabled
        zuuluu = _closure1_slot1;
        michal = _closure1_slot2;
        entity = 0;
        michal = michal[entity];
        entity = undefined;
        zuuluu = zuuluu.bind(entity)(michal);
        michal = zuuluu.useExperiment;
        entity = {};
        tangon = argFoo;
        entity['location'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        entity = entity.enabled;
        return entity;
    };
    zuuluu['useIsSwipeToMemberListExperimentEnabled'] = tangon;
    michal = function() { // Original name: useIsSwipeToMemberListAllowed
        report = _closure1_slot0;
        tangon = _closure1_slot2;
        michal = 1;
        michal = tangon[michal];
        zuuluu = undefined;
        oscard = report.bind(zuuluu)(michal);
        michal = oscard.useSwipeToReplySettingValue;
        oscard = michal.bind(oscard)();
        michal = 2;
        michal = tangon[michal];
        michal = report.bind(zuuluu)(michal);
        michal = michal.SwipeRightToLeftMode;
        report = michal.SWIPE_RIGHT_TO_LEFT_REPLY;
        michal = _closure1_slot1;
        entity = 0;
        entity = tangon[entity];
        tangon = michal.bind(zuuluu)(entity);
        zuuluu = tangon.useExperiment;
        michal = {};
        entity = 'useIsMessageSwipeActionsEnabled';
        michal['location'] = entity;
        entity = {};
        golfie = true;
        entity['autoTrackExposure'] = golfie;
        report = oscard === report;
        entity['disable'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        entity = entity.enabled;
        return entity;
    };
    zuuluu['useIsSwipeToMemberListAllowed'] = michal;
    return entity;
})();