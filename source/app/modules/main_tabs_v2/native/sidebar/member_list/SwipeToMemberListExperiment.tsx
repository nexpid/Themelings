// app/modules/main_tabs_v2/native/sidebar/member_list/SwipeToMemberListExperiment.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    oscar = argBar;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = golf;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    tango = {};
    yankee = true;
    tango['value'] = yankee;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, tango);
    entity = 0;
    report = golf[entity];
    tango = argBaz;
    entity = undefined;
    tango = tango.bind(entity)(report);
    var _closure1_slot2 = tango;
    tango = 1;
    tango = golf[tango];
    options = oscar.bind(entity)(tango);
    report = options.createExperiment;
    tango = {'kind': 'user', 'id': '2024-12_swipe_to_view_memberlist', 'label': 'Swipe to view member list'};
    verify = {};
    offset = false;
    verify['enabled'] = offset;
    tango['defaultConfig'] = verify;
    offset = {'id': 1, 'label': 'Swipe to view member list is enabled'};
    verify = {};
    verify['enabled'] = yankee;
    offset['config'] = verify;
    verify = new Array(1);
    verify[0] = offset;
    tango['treatments'] = verify;
    tango = report.bind(options)(tango);
    var _closure1_slot3 = tango;
    report = 3;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/main_tabs_v2/native/sidebar/member_list/SwipeToMemberListExperiment.tsx';
    report = oscar.bind(golf)(report);
    zulu['default'] = tango;
    tango = function(argFoo) { // Original name: getIsSwipeToMemberListExperimentEnabled
        tango = _closure1_slot3;
        zulu = tango.getCurrentConfig;
        mike = {};
        entity = argFoo;
        mike['location'] = entity;
        entity = {};
        oscar = true;
        entity['autoTrackExposure'] = oscar;
        report = _closure1_slot2;
        report = report.swipeToReply;
        entity['disable'] = report;
        entity = zulu.bind(tango)(mike, entity);
        entity = entity.enabled;
        return entity;
    };
    zulu['getIsSwipeToMemberListExperimentEnabled'] = tango;
    tango = function(argFoo) { // Original name: useIsSwipeToMemberListExperimentEnabled
        tango = _closure1_slot3;
        zulu = tango.useExperiment;
        mike = {};
        entity = argFoo;
        mike['location'] = entity;
        entity = {};
        report = true;
        entity['autoTrackExposure'] = report;
        entity = zulu.bind(tango)(mike, entity);
        entity = entity.enabled;
        return entity;
    };
    zulu['useIsSwipeToMemberListExperimentEnabled'] = tango;
    mike = function() { // Original name: useIsSwipeToMemberListAllowed
        tango = _closure1_slot0;
        zulu = _closure1_slot1;
        mike = 2;
        zulu = zulu[mike];
        mike = undefined;
        report = tango.bind(mike)(zulu);
        tango = report.useStateFromStores;
        mike = _closure1_slot2;
        zulu = new Array(1);
        zulu[0] = mike;
        mike = function() {
            entity = _closure1_slot2;
            entity = entity.swipeToReply;
            return entity;
        };
        report = tango.bind(report)(zulu, mike);
        tango = _closure1_slot3;
        zulu = tango.useExperiment;
        mike = {};
        entity = 'useIsMessageSwipeActionsEnabled';
        mike['location'] = entity;
        entity = {};
        oscar = true;
        entity['autoTrackExposure'] = oscar;
        entity['disable'] = report;
        entity = zulu.bind(tango)(mike, entity);
        entity = entity.enabled;
        return entity;
    };
    zulu['useIsSwipeToMemberListAllowed'] = mike;
    return entity;
})();