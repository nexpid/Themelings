// app/modules/main_tabs_v2/native/sidebar/details/ChannelDetailsLinkedLobby.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Fragment;
    var _closure1_slot5 = golfie;
    golfie = tangon.jsxs;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsx;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'center';
    verify['alignItems'] = offset;
    tangon['container'] = verify;
    verify = {'height': 1, 'width': 48, 'marginTop': 12};
    offset = 5;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.DIVIDER_STRONG;
    verify['backgroundColor'] = offset;
    tangon['divider'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/sidebar/details/ChannelDetailsLinkedLobby.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ChannelDetailsLinkedLobby
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            entity = michal.channel;
            option = michal.containerStyle;
            michal = _closure1_slot8;
            report = undefined;
            offset = michal.bind(report)();
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            michal = 6;
            michal = tangon[michal];
            tangon = zuuluu.bind(report)(michal);
            zuuluu = tangon.useGetOrFetchApplication;
            oscard = entity.linkedLobby;
            foxtra = null;
            verify = foxtra == oscard;
            michal = undefined;
            if(verify) { _fun00002_ip = 76; continue _fun00001 }
 70:
            michal = oscard.application_id;
 76:
            result = zuuluu.bind(tangon)(michal);
            entity = entity.linkedLobby;
            michal = foxtra == entity;
            entity = null;
            if(michal) { _fun00002_ip = 503; continue _fun00001 }
 99:
            tangon = _closure1_slot6;
            zuuluu = _closure1_slot3;
            michal = {};
            verify = offset.container;
            oscard = new Array(2);
            oscard[0] = verify;
            oscard[1] = option;
            michal['style'] = oscard;
            verify = _closure1_slot7;
            option = _closure1_slot0;
            yankee = _closure1_slot2;
            oscard = 7;
            oscard = yankee[oscard];
            oscard = option.bind(report)(oscard);
            option = oscard.TextWithIOSLinkWorkaround;
            oscard = {'variant': 'text-sm/normal', 'color': 'header-secondary'};
            romeon = _closure1_slot5;
            yankee = {};
            if(!(foxtra == result)) { _fun00002_ip = 243; continue _fun00001 }
 184:
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            foxtra = 8;
            backup = output[foxtra];
            backup = sizing.bind(report)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = output[foxtra];
            foxtra = sizing.bind(report)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.yQqVsr;
            backup = backup.bind(kiloes)(foxtra);
            _fun00002_ip = 313; continue _fun00001;
 243:
            kiloes = _closure1_slot0;
            echoed = _closure1_slot2;
            foxtra = 8;
            sizing = echoed[foxtra];
            sizing = kiloes.bind(report)(sizing);
            output = sizing.intl;
            sizing = output.format;
            foxtra = echoed[foxtra];
            foxtra = kiloes.bind(report)(foxtra);
            foxtra = foxtra.t;
            kiloes = foxtra.SgxMJi;
            foxtra = {};
            result = result.name;
            foxtra['applicationName'] = result;
            backup = sizing.bind(output)(kiloes, foxtra);
 313:
            foxtra = new Array(3);
            foxtra[0] = backup;
            backup = '  â€¢  ';
            foxtra[1] = backup;
            kiloes = _closure1_slot0;
            update = _closure1_slot2;
            backup = 8;
            sizing = update[backup];
            sizing = kiloes.bind(report)(sizing);
            output = sizing.intl;
            sizing = output.format;
            backup = update[backup];
            backup = kiloes.bind(report)(backup);
            backup = backup.t;
            kiloes = backup.BPDKoK;
            backup = {};
            echoed = _closure1_slot1;
            result = 9;
            result = update[result];
            update = echoed.bind(report)(result);
            echoed = update.getArticleURL;
            result = _closure1_slot4;
            result = result.CHANNEL_LINKED_LOBBIES;
            result = echoed.bind(update)(result);
            backup['helpdeskArticle'] = result;
            backup = sizing.bind(output)(kiloes, backup);
            foxtra[2] = backup;
            yankee['children'] = foxtra;
            yankee = tangon.bind(report)(romeon, yankee);
            oscard['children'] = yankee;
            option = verify.bind(report)(option, oscard);
            oscard = new Array(2);
            oscard[0] = option;
            verify = _closure1_slot7;
            option = _closure1_slot3;
            golfie = {};
            offset = offset.divider;
            golfie['style'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 503:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();