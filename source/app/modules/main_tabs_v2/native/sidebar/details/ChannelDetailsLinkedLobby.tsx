// app/modules/main_tabs_v2/native/sidebar/details/ChannelDetailsLinkedLobby.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.HelpdeskArticles;
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot5 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 'center';
    verify['alignItems'] = offset;
    tango['container'] = verify;
    verify = {'height': 1, 'width': 48, 'marginTop': 12};
    offset = 5;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.DIVIDER_STRONG;
    verify['backgroundColor'] = offset;
    tango['divider'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/sidebar/details/ChannelDetailsLinkedLobby.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ChannelDetailsLinkedLobby
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = argFoo;
            entity = mike.channel;
            options = mike.containerStyle;
            mike = _closure1_slot8;
            report = undefined;
            offset = mike.bind(report)();
            zulu = _closure1_slot0;
            tango = _closure1_slot2;
            mike = 6;
            mike = tango[mike];
            tango = zulu.bind(report)(mike);
            zulu = tango.useGetOrFetchApplication;
            oscar = entity.linkedLobby;
            foxtrot = null;
            verify = foxtrot == oscar;
            mike = undefined;
            if(verify) { _fun00002_ip = 76; continue _fun00001 }
 70:
            mike = oscar.application_id;
 76:
            result = zulu.bind(tango)(mike);
            entity = entity.linkedLobby;
            mike = foxtrot == entity;
            entity = null;
            if(mike) { _fun00002_ip = 503; continue _fun00001 }
 99:
            tango = _closure1_slot6;
            zulu = _closure1_slot3;
            mike = {};
            verify = offset.container;
            oscar = new Array(2);
            oscar[0] = verify;
            oscar[1] = options;
            mike['style'] = oscar;
            verify = _closure1_slot7;
            options = _closure1_slot0;
            yankee = _closure1_slot2;
            oscar = 7;
            oscar = yankee[oscar];
            oscar = options.bind(report)(oscar);
            options = oscar.TextWithIOSLinkWorkaround;
            oscar = {'variant': 'text-sm/normal', 'color': 'header-secondary'};
            romeo = _closure1_slot5;
            yankee = {};
            if(!(foxtrot == result)) { _fun00002_ip = 243; continue _fun00001 }
 184:
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            foxtrot = 8;
            backup = output[foxtrot];
            backup = sizing.bind(report)(backup);
            kilo = backup.intl;
            backup = kilo.string;
            foxtrot = output[foxtrot];
            foxtrot = sizing.bind(report)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.yQqVsr;
            backup = backup.bind(kilo)(foxtrot);
            _fun00002_ip = 313; continue _fun00001;
 243:
            kilo = _closure1_slot0;
            echo = _closure1_slot2;
            foxtrot = 8;
            sizing = echo[foxtrot];
            sizing = kilo.bind(report)(sizing);
            output = sizing.intl;
            sizing = output.format;
            foxtrot = echo[foxtrot];
            foxtrot = kilo.bind(report)(foxtrot);
            foxtrot = foxtrot.t;
            kilo = foxtrot.SgxMJi;
            foxtrot = {};
            result = result.name;
            foxtrot['applicationName'] = result;
            backup = sizing.bind(output)(kilo, foxtrot);
 313:
            foxtrot = new Array(3);
            foxtrot[0] = backup;
            backup = '  â€¢  ';
            foxtrot[1] = backup;
            kilo = _closure1_slot0;
            update = _closure1_slot2;
            backup = 8;
            sizing = update[backup];
            sizing = kilo.bind(report)(sizing);
            output = sizing.intl;
            sizing = output.format;
            backup = update[backup];
            backup = kilo.bind(report)(backup);
            backup = backup.t;
            kilo = backup.BPDKoK;
            backup = {};
            echo = _closure1_slot1;
            result = 9;
            result = update[result];
            update = echo.bind(report)(result);
            echo = update.getArticleURL;
            result = _closure1_slot4;
            result = result.CHANNEL_LINKED_LOBBIES;
            result = echo.bind(update)(result);
            backup['helpdeskArticle'] = result;
            backup = sizing.bind(output)(kilo, backup);
            foxtrot[2] = backup;
            yankee['children'] = foxtrot;
            yankee = tango.bind(report)(romeo, yankee);
            oscar['children'] = yankee;
            options = verify.bind(report)(options, oscar);
            oscar = new Array(2);
            oscar[0] = options;
            verify = _closure1_slot7;
            options = _closure1_slot3;
            golf = {};
            offset = offset.divider;
            golf['style'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 503:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();