// app/modules/main_tabs_v2/native/sidebar/details/ChannelDetailsHeaderExperimentV2.tsx
export default (function(argFoo, argBar, _, __, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    romeo = true;
    tango['value'] = romeo;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    verify = report.bind(entity)(tango);
    options = verify.createExperiment;
    golf = {'kind': 'user', 'id': '2025-01_channel_details_header_v2', 'label': 'Channel Details Header v2'};
    tango = {};
    offset = false;
    tango['enabled'] = offset;
    golf['defaultConfig'] = tango;
    yankee = {'id': 1, 'label': 'Header with compacted buttons'};
    tango = 1;
    offset = {};
    offset['enabled'] = romeo;
    yankee['config'] = offset;
    offset = new Array(1);
    offset[0] = yankee;
    golf['treatments'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot0 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/sidebar/details/ChannelDetailsHeaderExperimentV2.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: isChannelDetailsHeaderExperimentV2Enabled
        tango = _closure1_slot0;
        zulu = tango.getCurrentConfig;
        mike = {};
        entity = argFoo;
        mike['location'] = entity;
        entity = {};
        report = false;
        entity['autoTrackExposure'] = report;
        entity = zulu.bind(tango)(mike, entity);
        entity = entity.enabled;
        return entity;
    };
    zulu['isChannelDetailsHeaderExperimentV2Enabled'] = tango;
    mike = function(argFoo) { // Original name: useChannelDetailsHeaderExperimentV2Enabled
        tango = _closure1_slot0;
        zulu = tango.useExperiment;
        mike = {};
        entity = argFoo;
        mike['location'] = entity;
        entity = {};
        report = true;
        entity['autoTrackExposure'] = report;
        entity = zulu.bind(tango)(mike, entity);
        entity = entity.enabled;
        return entity;
    };
    zulu['useChannelDetailsHeaderExperimentV2Enabled'] = mike;
    return entity;
})();