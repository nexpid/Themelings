// app/modules/main_tabs_v2/native/shared_components/quick_launcher/QuickLauncherRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: FrecentApp
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            romeon = michal.application;
            var _closure2_slot0 = romeon;
            zuuluu = michal.loadingAppId;
            golfie = michal.setLoadingAppId;
            var _closure2_slot1 = golfie;
            tangon = undefined;
            var _closure2_slot2 = tangon;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            michal = _closure1_slot14;
            verify = michal.bind(tangon)();
            oscard = _closure1_slot0;
            offset = _closure1_slot2;
            michal = 10;
            option = offset[michal];
            backup = oscard.bind(tangon)(option);
            foxtra = backup.useStateFromStores;
            option = _closure1_slot8;
            yankee = new Array(1);
            yankee[0] = option;
            option = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure1_slot8;
                    michal = zuuluu.getDMFromUserId;
                    entity = _closure2_slot0;
                    tangon = entity.bot;
                    entity = null;
                    report = entity == tangon;
                    entity = undefined;
                    if(report) { _fun00004_ip = 42; continue _fun00003 }
 37:
                    entity = tangon.id;
 42:
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                }
            };
            yankee = foxtra.bind(backup)(yankee, option);
            michal = offset[michal];
            backup = oscard.bind(tangon)(michal);
            foxtra = backup.useStateFromStores;
            michal = _closure1_slot7;
            option = new Array(1);
            option[0] = michal;
            michal = function() {
                michal = _closure1_slot7;
                entity = michal.getCurrentEmbeddedActivity;
                entity = entity.bind(michal)();
                return entity;
            };
            option = foxtra.bind(backup)(option, michal);
            michal = 11;
            michal = offset[michal];
            oscard = oscard.bind(tangon)(michal);
            michal = oscard.useIsContextlessActivitiesExperimentEnabled;
            oscard = michal.bind(oscard)();
            if(!oscard) { _fun00002_ip = 216; continue _fun00001 }
 169:
            offset = _closure1_slot0;
            foxtra = _closure1_slot2;
            michal = 12;
            michal = foxtra[michal];
            backup = offset.bind(tangon)(michal);
            foxtra = backup.hasFlag;
            offset = romeon.flags;
            michal = _closure1_slot10;
            michal = michal.CONTEXTLESS_ACTIVITY;
            oscard = foxtra.bind(backup)(offset, michal);
 216:
            michal = null;
            offset = michal != option;
            if(!offset) { _fun00002_ip = 239; continue _fun00001 }
 225:
            backup = option.applicationId;
            foxtra = romeon.id;
            offset = backup === foxtra;
 239:
            if(!offset) { _fun00002_ip = 288; continue _fun00001 }
 242:
            if(oscard) { _fun00002_ip = 285; continue _fun00001 }
 245:
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            foxtra = 13;
            foxtra = kiloes[foxtra];
            backup = backup.bind(tangon)(foxtra);
            foxtra = backup.getEmbeddedActivityLocationChannelId;
            option = option.location;
            option = foxtra.bind(backup)(option);
            oscard = option === yankee;
 285:
            offset = oscard;
 288:
            _closure2_slot2 = offset;
            option = _closure1_slot1;
            yankee = _closure1_slot2;
            oscard = 14;
            oscard = yankee[oscard];
            foxtra = option.bind(tangon)(oscard);
            oscard = 15;
            oscard = yankee[oscard];
            oscard = option.bind(tangon)(oscard);
            oscard = oscard.APP_DMS_QUICK_LAUNCHER;
            oscard = foxtra.bind(tangon)(oscard);
            foxtra = oscard.analyticsLocations;
            _closure2_slot3 = foxtra;
            oscard = 16;
            oscard = yankee[oscard];
            yankee = option.bind(tangon)(oscard);
            option = yankee.getApplicationIconSource;
            oscard = {};
            backup = romeon.id;
            oscard['id'] = backup;
            backup = romeon.icon;
            oscard['icon'] = backup;
            kiloes = michal == romeon;
            backup = undefined;
            if(kiloes) { _fun00002_ip = 398; continue _fun00001 }
 392:
            backup = romeon.bot;
 398:
            oscard['bot'] = backup;
            backup = true;
            oscard['botIconFirst'] = backup;
            option = option.bind(yankee)(oscard);
            yankee = michal != zuuluu;
            _closure2_slot4 = yankee;
            oscard = _closure1_slot4;
            zuuluu = oscard.useCallback;
            michal = new Array(5);
            michal[0] = foxtra;
            michal[1] = romeon;
            michal[2] = yankee;
            michal[3] = offset;
            michal[4] = golfie;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    michal = _closure2_slot2;
                    if(michal) { _fun00006_ip = 14; continue _fun00005 }
 10:
                    michal = _closure2_slot4;
 14:
                    if(michal) { _fun00006_ip = 67; continue _fun00005 }
 17:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 17;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    report = tangon.bind(michal)(zuuluu);
                    tangon = report.openAndLaunchAppDM;
                    zuuluu = _closure2_slot0;
                    michal = _closure2_slot1;
                    entity = _closure2_slot3;
                    entity = tangon.bind(report)(zuuluu, michal, entity);
 67:
                    entity = undefined;
                    return entity;
                }
            };
            oscard = zuuluu.bind(oscard)(entity, michal);
            zuuluu = _closure1_slot12;
            michal = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 18;
            entity = offset[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.PressableOpacity;
            entity = {};
            golfie = _closure1_slot11;
            entity['androidRippleConfig'] = golfie;
            golfie = verify.appItem;
            entity['style'] = golfie;
            entity['onPress'] = oscard;
            golfie = _closure1_slot12;
            oscard = _closure1_slot1;
            report = 19;
            report = offset[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            offset = verify.appIcon;
            verify = new Array(1);
            verify[0] = offset;
            report['style'] = verify;
            report['source'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot15 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.useWindowDimensions;
    var _closure1_slot5 = golfie;
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticEvents;
    var _closure1_slot9 = golfie;
    tangon = tangon.ApplicationFlags;
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ANDROID_FOREGROUND_RIPPLE;
    var _closure1_slot11 = tangon;
    tangon = 7;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot12 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot13 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 9;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_12;
    verify['gap'] = romeon;
    tangon['container'] = verify;
    verify = {'flexDirection': 'row', 'justifyContent': 'space-between'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_12;
    verify['paddingHorizontal'] = romeon;
    tangon['headerContainer'] = verify;
    verify = {'width': 24, 'height': 24, 'alignItems': 'center', 'justifyContent': 'center'};
    tangon['moreButtonWrapper'] = verify;
    verify = {'borderRadius': null, 'borderWidth': 1, 'borderColor': null, 'overflow': 'hidden', 'width': 48, 'height': 48};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.md;
    verify['borderRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BORDER_SUBTLE;
    verify['borderColor'] = romeon;
    tangon['appItem'] = verify;
    verify = {'width': 48, 'height': 48};
    tangon['appIcon'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_12;
    verify['paddingLeft'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_12;
    verify['paddingRight'] = offset;
    tangon['appsListContentContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot14 = tangon;
    tangon = 29;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/shared_components/quick_launcher/QuickLauncherRow.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: QuickLauncherRow
        entity = _closure1_slot14;
        tangon = undefined;
        romeon = entity.bind(tangon)();
        zuuluu = _closure1_slot4;
        michal = zuuluu.useRef;
        entity = false;
        entity = michal.bind(zuuluu)(entity);
        var _closure2_slot0 = entity;
        michal = _closure1_slot4;
        entity = michal.useState;
        zuuluu = entity.bind(michal)(tangon);
        michal = _closure1_slot3;
        entity = 2;
        zuuluu = michal.bind(tangon)(zuuluu, entity);
        entity = 0;
        entity = zuuluu[entity];
        var _closure2_slot1 = entity;
        michal = 1;
        michal = zuuluu[michal];
        var _closure2_slot2 = michal;
        golfie = _closure1_slot0;
        sizing = _closure1_slot2;
        michal = 17;
        michal = sizing[michal];
        zuuluu = golfie.bind(tangon)(michal);
        michal = zuuluu.useAppDMFrecentApps;
        michal = michal.bind(zuuluu)();
        var _closure2_slot3 = michal;
        oscard = _closure1_slot4;
        report = oscard.useMemo;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            zuuluu = _closure2_slot3;
            michal = zuuluu.filter;
            report = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 20;
            tangon = tangon[entity];
            entity = undefined;
            entity = report.bind(entity)(tangon);
            entity = entity.isNotNullish;
            tangon = michal.bind(zuuluu)(entity);
            zuuluu = tangon.slice;
            michal = 0;
            entity = 8;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        yankee = report.bind(oscard)(michal, zuuluu);
        var _closure2_slot4 = yankee;
        oscard = _closure1_slot4;
        report = oscard.useLayoutEffect;
        zuuluu = new Array(1);
        zuuluu[0] = yankee;
        michal = function() {
            _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                entity = _closure2_slot0;
                entity = entity.current;
                if(entity) { _fun00008_ip = 115; continue _fun00007 }
 15:
                michal = _closure2_slot0;
                entity = true;
                michal['current'] = entity;
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                michal = 21;
                zuuluu = zuuluu[michal];
                michal = undefined;
                tangon = tangon.bind(michal)(zuuluu);
                zuuluu = tangon.track;
                entity = _closure1_slot9;
                michal = entity.APP_DMS_QUICK_LAUNCHER_IMPRESSION;
                entity = {};
                golfie = _closure2_slot4;
                oscard = golfie.map;
                report = function(argFoo) {
                    entity = global;
                    zuuluu = entity.Number;
                    entity = argFoo;
                    michal = entity.id;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                report = oscard.bind(golfie)(report);
                oscard = null;
                if(!(oscard == report)) { _fun00008_ip = 102; continue _fun00007 }
 98:
                report = new Array(0);
 102:
                entity['apps_dm_quick_launcher_application_ids'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
 115:
                entity = undefined;
                return entity;
            }
        };
        michal = report.bind(oscard)(michal, zuuluu);
        report = _closure1_slot4;
        zuuluu = report.useCallback;
        michal = new Array(1);
        michal[0] = entity;
        entity = function(argFoo) {
            entity = argFoo;
            entity = entity.item;
            tangon = _closure1_slot12;
            zuuluu = _closure1_slot15;
            michal = {};
            michal['application'] = entity;
            report = _closure2_slot1;
            michal['loadingAppId'] = report;
            entity = _closure2_slot2;
            michal['setLoadingAppId'] = entity;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        };
        offset = zuuluu.bind(report)(entity, michal);
        entity = _closure1_slot5;
        entity = entity.bind(tangon)();
        backup = entity.width;
        report = _closure1_slot4;
        zuuluu = report.useCallback;
        michal = function() {
            report = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 22;
            tangon = michal[entity];
            entity = undefined;
            report = report.bind(entity)(tangon);
            tangon = report.openLazy;
            oscard = _closure1_slot0;
            zuuluu = 24;
            zuuluu = michal[zuuluu];
            oscard = oscard.bind(entity)(zuuluu);
            zuuluu = 23;
            zuuluu = michal[zuuluu];
            michal = michal.paths;
            zuuluu = oscard.bind(entity)(zuuluu, michal);
            michal = 'QuickLauncherMoreActionSheet';
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        entity = new Array(0);
        result = zuuluu.bind(report)(michal, entity);
        zuuluu = _closure1_slot13;
        michal = _closure1_slot6;
        entity = {};
        report = romeon.container;
        entity['style'] = report;
        report = {};
        oscard = romeon.headerContainer;
        report['style'] = oscard;
        kiloes = _closure1_slot12;
        oscard = 25;
        oscard = sizing[oscard];
        oscard = golfie.bind(tangon)(oscard);
        option = oscard.Text;
        oscard = {'variant': 'heading-md/semibold', 'color': 'header-primary'};
        output = 26;
        echoed = sizing[output];
        echoed = golfie.bind(tangon)(echoed);
        update = echoed.intl;
        echoed = update.string;
        output = sizing[output];
        output = golfie.bind(tangon)(output);
        output = output.t;
        output = output.vayAzs;
        output = echoed.bind(update)(output);
        oscard['children'] = output;
        option = kiloes.bind(tangon)(option, oscard);
        oscard = new Array(2);
        oscard[0] = option;
        output = _closure1_slot12;
        option = 18;
        option = sizing[option];
        option = golfie.bind(tangon)(option);
        kiloes = option.PressableOpacity;
        option = {};
        echoed = romeon.moreButtonWrapper;
        option['style'] = echoed;
        option['onPress'] = result;
        update = _closure1_slot12;
        result = 27;
        result = sizing[result];
        result = golfie.bind(tangon)(result);
        echoed = result.MoreHorizontalIcon;
        result = {};
        source = 'md';
        result['size'] = source;
        result = update.bind(tangon)(echoed, result);
        option['children'] = result;
        option = output.bind(tangon)(kiloes, option);
        oscard[1] = option;
        report['children'] = oscard;
        oscard = zuuluu.bind(tangon)(michal, report);
        report = new Array(2);
        report[0] = oscard;
        option = _closure1_slot12;
        oscard = 28;
        oscard = sizing[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.FlashList;
        oscard = {'horizontal': true, 'estimatedListSize': null, 'estimatedItemSize': null, 'decelerationRate': 'fast', 'disableHorizontalListHeightMeasurement': true, 'showsHorizontalScrollIndicator': false};
        kiloes = {};
        kiloes['width'] = backup;
        backup = 48;
        kiloes['height'] = backup;
        oscard['estimatedListSize'] = kiloes;
        kiloes = _closure1_slot1;
        foxtra = 9;
        foxtra = sizing[foxtra];
        foxtra = kiloes.bind(tangon)(foxtra);
        foxtra = foxtra.spacing;
        foxtra = foxtra.PX_12;
        foxtra = backup + foxtra;
        oscard['estimatedItemSize'] = foxtra;
        romeon = romeon.appsListContentContainer;
        oscard['contentContainerStyle'] = romeon;
        oscard['data'] = yankee;
        oscard['renderItem'] = offset;
        offset = function(argFoo) { // Original name: keyExtractor
            entity = argFoo;
            entity = entity.id;
            return entity;
        };
        oscard['keyExtractor'] = offset;
        verify = function() { // Original name: ItemSeparatorComponent
            tangon = _closure1_slot12;
            zuuluu = _closure1_slot6;
            michal = {};
            report = {};
            golfie = _closure1_slot1;
            oscard = _closure1_slot2;
            entity = 9;
            oscard = oscard[entity];
            entity = undefined;
            oscard = golfie.bind(entity)(oscard);
            oscard = oscard.spacing;
            oscard = oscard.PX_12;
            report['width'] = oscard;
            michal['style'] = report;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        };
        oscard['ItemSeparatorComponent'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();