// app/modules/main_tabs_v2/native/shared_components/ScrollTargets.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = golfie;
    entity = function() { // Original name: useTextFieldForwardedRef
        report = _closure1_slot2;
        tangon = report.useRef;
        zuuluu = null;
        zuuluu = tangon.bind(report)(zuuluu);
        var _closure2_slot0 = zuuluu;
        report = _closure1_slot2;
        tangon = report.useMemo;
        michal = new Array(1);
        michal[0] = zuuluu;
        entity = function() {
            entity = {};
            zuuluu = function() { // Original name: blur
                entity = _closure2_slot0;
                michal = entity.current;
                entity = michal.blur;
                entity = entity.bind(michal)();
                return entity;
            };
            entity['blur'] = zuuluu;
            zuuluu = function() { // Original name: focus
                entity = _closure2_slot0;
                michal = entity.current;
                entity = michal.focus;
                entity = entity.bind(michal)();
                return entity;
            };
            entity['focus'] = zuuluu;
            zuuluu = function() { // Original name: isFocused
                entity = _closure2_slot0;
                michal = entity.current;
                entity = michal.isFocused;
                entity = entity.bind(michal)();
                return entity;
            };
            entity['isFocused'] = zuuluu;
            zuuluu = function(argFoo) { // Original name: setText
                entity = _closure2_slot0;
                zuuluu = entity.current;
                michal = zuuluu.setText;
                entity = argFoo;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity['setText'] = zuuluu;
            michal = function() { // Original name: getText
                entity = _closure2_slot0;
                michal = entity.current;
                entity = michal.getText;
                entity = entity.bind(michal)();
                return entity;
            };
            entity['getText'] = michal;
            return entity;
        };
        michal = tangon.bind(report)(entity, michal);
        entity = {};
        entity['textAreaRef'] = zuuluu;
        entity['textAreaApi'] = michal;
        return entity;
    };
    var _closure1_slot5 = entity;
    entity = function() { // Original name: useViewForwardedRef
        report = _closure1_slot2;
        tangon = report.useRef;
        zuuluu = null;
        zuuluu = tangon.bind(report)(zuuluu);
        var _closure2_slot0 = zuuluu;
        report = _closure1_slot2;
        tangon = report.useMemo;
        michal = new Array(1);
        michal[0] = zuuluu;
        entity = function() {
            entity = {};
            michal = function(argFoo) { // Original name: measure
                entity = _closure2_slot0;
                zuuluu = entity.current;
                michal = zuuluu.measure;
                entity = argFoo;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity['measure'] = michal;
            return entity;
        };
        michal = tangon.bind(report)(entity, michal);
        entity = {};
        entity['viewRef'] = zuuluu;
        entity['viewApi'] = michal;
        return entity;
    };
    var _closure1_slot6 = entity;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    report = golfie[entity];
    tangon = argCor;
    entity = undefined;
    option = tangon.bind(entity)(report);
    var _closure1_slot2 = option;
    tangon = 1;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    report = option.forwardRef;
    tangon = function(argFoo, argBar) {
        michal = _closure1_slot5;
        tangon = undefined;
        michal = michal.bind(tangon)();
        golfie = michal.textAreaRef;
        michal = michal.textAreaApi;
        var _closure2_slot0 = michal;
        michal = _closure1_slot6;
        michal = michal.bind(tangon)();
        oscard = michal.viewRef;
        michal = michal.viewApi;
        var _closure2_slot1 = michal;
        option = _closure1_slot2;
        zuuluu = option.useImperativeHandle;
        michal = argBar;
        entity = function() {
            entity = {};
            tangon = _closure2_slot0;
            report = entity;
            zuuluu = copyDataProperties(report, tangon);
            tangon = _closure2_slot1;
            report = entity;
            michal = copyDataProperties(report, tangon);
            return entity;
        };
        entity = zuuluu.bind(option)(michal, entity);
        zuuluu = _closure1_slot4;
        michal = _closure1_slot3;
        entity = {};
        entity['ref'] = oscard;
        oscard = _closure1_slot0;
        option = _closure1_slot1;
        report = 3;
        report = option[report];
        report = oscard.bind(tangon)(report);
        oscard = report.SearchField;
        report = {};
        report['ref'] = golfie;
        verify = argFoo;
        offset = report;
        golfie = copyDataProperties(offset, verify);
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    tangon = report.bind(option)(tangon);
    report = option.forwardRef;
    michal = function(argFoo, argBar) {
        michal = _closure1_slot5;
        tangon = undefined;
        michal = michal.bind(tangon)();
        golfie = michal.textAreaRef;
        michal = michal.textAreaApi;
        var _closure2_slot0 = michal;
        michal = _closure1_slot6;
        michal = michal.bind(tangon)();
        oscard = michal.viewRef;
        michal = michal.viewApi;
        var _closure2_slot1 = michal;
        option = _closure1_slot2;
        zuuluu = option.useImperativeHandle;
        michal = argBar;
        entity = function() {
            entity = {};
            tangon = _closure2_slot0;
            report = entity;
            zuuluu = copyDataProperties(report, tangon);
            tangon = _closure2_slot1;
            report = entity;
            michal = copyDataProperties(report, tangon);
            return entity;
        };
        entity = zuuluu.bind(option)(michal, entity);
        zuuluu = _closure1_slot4;
        michal = _closure1_slot3;
        entity = {};
        entity['ref'] = oscard;
        oscard = _closure1_slot0;
        option = _closure1_slot1;
        report = 4;
        report = option[report];
        report = oscard.bind(tangon)(report);
        oscard = report.TextArea;
        report = {};
        report['ref'] = golfie;
        verify = argFoo;
        offset = report;
        golfie = copyDataProperties(offset, verify);
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = report.bind(option)(michal);
    report = 5;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/main_tabs_v2/native/shared_components/ScrollTargets.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['SearchFieldScrollTarget'] = tangon;
    zuuluu['TextAreaScrollTarget'] = michal;
    return entity;
})();