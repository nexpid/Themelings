// app/modules/main_tabs_v2/native/shared_components/happening_now/useLiveStageData.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/shared_components/happening_now/useLiveStageData.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: useLiveStageData
        michal = argFoo;
        var _closure2_slot0 = michal;
        romeon = _closure1_slot0;
        foxtra = _closure1_slot2;
        offset = 3;
        zuuluu = foxtra[offset];
        yankee = undefined;
        option = romeon.bind(yankee)(zuuluu);
        golfie = option.useStateFromStoresArray;
        zuuluu = _closure1_slot4;
        oscard = new Array(1);
        oscard[0] = zuuluu;
        tangon = michal.channel_id;
        report = new Array(1);
        report[0] = tangon;
        tangon = function() {
            report = _closure1_slot4;
            tangon = report.getMutableParticipants;
            zuuluu = _closure2_slot0;
            zuuluu = zuuluu.channel_id;
            golfie = _closure1_slot0;
            oscard = _closure1_slot2;
            michal = 4;
            oscard = oscard[michal];
            michal = undefined;
            michal = golfie.bind(michal)(oscard);
            michal = michal.StageChannelParticipantNamedIndex;
            michal = michal.FRIEND;
            tangon = tangon.bind(report)(zuuluu, michal);
            zuuluu = tangon.filter;
            michal = function(argFoo) {
                entity = argFoo;
                michal = entity.type;
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 4;
                zuuluu = zuuluu[entity];
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu);
                entity = entity.StageChannelParticipantTypes;
                entity = entity.VOICE;
                entity = michal === entity;
                return entity;
            };
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.map;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.user;
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        option = golfie.bind(option)(oscard, tangon, report);
        var _closure2_slot1 = option;
        tangon = foxtra[offset];
        backup = romeon.bind(yankee)(tangon);
        golfie = backup.useStateFromStoresArray;
        oscard = new Array(1);
        oscard[0] = zuuluu;
        tangon = michal.channel_id;
        report = new Array(1);
        report[0] = tangon;
        tangon = function() {
            report = _closure1_slot4;
            tangon = report.getMutableParticipants;
            zuuluu = _closure2_slot0;
            zuuluu = zuuluu.channel_id;
            golfie = _closure1_slot0;
            oscard = _closure1_slot2;
            michal = 4;
            oscard = oscard[michal];
            michal = undefined;
            michal = golfie.bind(michal)(oscard);
            michal = michal.StageChannelParticipantNamedIndex;
            michal = michal.SPEAKER;
            tangon = tangon.bind(report)(zuuluu, michal);
            zuuluu = tangon.filter;
            michal = function(argFoo) {
                entity = argFoo;
                michal = entity.type;
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 4;
                zuuluu = zuuluu[entity];
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu);
                entity = entity.StageChannelParticipantTypes;
                entity = entity.VOICE;
                entity = michal === entity;
                return entity;
            };
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.map;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.user;
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        golfie = golfie.bind(backup)(oscard, tangon, report);
        var _closure2_slot2 = golfie;
        tangon = foxtra[offset];
        backup = romeon.bind(yankee)(tangon);
        oscard = backup.useStateFromStoresArray;
        report = new Array(1);
        report[0] = zuuluu;
        zuuluu = michal.channel_id;
        tangon = new Array(1);
        tangon[0] = zuuluu;
        zuuluu = function() {
            report = _closure1_slot4;
            tangon = report.getMutableParticipants;
            zuuluu = _closure2_slot0;
            zuuluu = zuuluu.channel_id;
            golfie = _closure1_slot0;
            oscard = _closure1_slot2;
            michal = 4;
            oscard = oscard[michal];
            michal = undefined;
            michal = golfie.bind(michal)(oscard);
            michal = michal.StageChannelParticipantNamedIndex;
            michal = michal.AUDIENCE;
            tangon = tangon.bind(report)(zuuluu, michal);
            zuuluu = tangon.filter;
            michal = function(argFoo) {
                entity = argFoo;
                michal = entity.type;
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 4;
                zuuluu = zuuluu[entity];
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu);
                entity = entity.StageChannelParticipantTypes;
                entity = entity.VOICE;
                entity = michal === entity;
                return entity;
            };
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.map;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.user;
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        oscard = oscard.bind(backup)(report, zuuluu, tangon);
        var _closure2_slot3 = oscard;
        sizing = _closure1_slot3;
        report = sizing.useMemo;
        tangon = new Array(2);
        tangon[0] = option;
        tangon[1] = golfie;
        zuuluu = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 5;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.uniqBy;
            option = _closure2_slot1;
            michal = new Array(0);
            golfie = 0;
            verify = michal;
            golfie = arraySpread(verify, option, golfie);
            option = _closure2_slot2;
            verify = michal;
            entity = arraySpread(verify, option, golfie);
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.id;
                return entity;
            };
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        report = report.bind(sizing)(zuuluu, tangon);
        backup = sizing.useMemo;
        tangon = new Array(2);
        tangon[0] = option;
        tangon[1] = golfie;
        zuuluu = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 5;
            michal = michal[entity];
            entity = undefined;
            report = zuuluu.bind(entity)(michal);
            tangon = report.differenceBy;
            zuuluu = _closure2_slot1;
            michal = _closure2_slot2;
            entity = 'id';
            entity = tangon.bind(report)(zuuluu, michal, entity);
            return entity;
        };
        zuuluu = backup.bind(sizing)(zuuluu, tangon);
        var _closure2_slot4 = zuuluu;
        kiloes = sizing.useMemo;
        backup = new Array(2);
        backup[0] = option;
        backup[1] = oscard;
        tangon = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 5;
            michal = michal[entity];
            entity = undefined;
            report = zuuluu.bind(entity)(michal);
            tangon = report.differenceBy;
            zuuluu = _closure2_slot3;
            michal = _closure2_slot1;
            entity = 'id';
            entity = tangon.bind(report)(zuuluu, michal, entity);
            return entity;
        };
        tangon = kiloes.bind(sizing)(tangon, backup);
        var _closure2_slot5 = tangon;
        kiloes = sizing.useMemo;
        backup = new Array(2);
        backup[0] = zuuluu;
        backup[1] = tangon;
        tangon = function() {
            oscard = _closure2_slot4;
            entity = new Array(0);
            report = 0;
            golfie = entity;
            report = arraySpread(golfie, oscard, report);
            oscard = _closure2_slot5;
            golfie = entity;
            michal = arraySpread(golfie, oscard, report);
            return entity;
        };
        tangon = kiloes.bind(sizing)(tangon, backup);
        offset = foxtra[offset];
        yankee = romeon.bind(yankee)(offset);
        offset = yankee.useStateFromStores;
        romeon = _closure1_slot5;
        verify = new Array(1);
        verify[0] = romeon;
        romeon = michal.channel_id;
        michal = new Array(1);
        michal[0] = romeon;
        entity = function() {
            zuuluu = _closure1_slot5;
            michal = zuuluu.getChannel;
            entity = _closure2_slot0;
            entity = entity.channel_id;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        michal = offset.bind(yankee)(verify, entity, michal);
        entity = {};
        entity['friends'] = option;
        entity['speakers'] = golfie;
        oscard = oscard.length;
        entity['audienceCount'] = oscard;
        entity['users'] = report;
        entity['audiencePrefixedFriends'] = tangon;
        entity['audienceFriends'] = zuuluu;
        entity['channel'] = michal;
        return entity;
    };
    zuuluu['useLiveStageData'] = michal;
    return entity;
})();