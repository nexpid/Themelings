// app/modules/main_tabs_v2/native/shared_components/happening_now/useLiveStageData.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 6;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/shared_components/happening_now/useLiveStageData.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: useLiveStageData
        mike = argFoo;
        var _closure2_slot0 = mike;
        romeo = _closure1_slot0;
        foxtrot = _closure1_slot2;
        offset = 3;
        zulu = foxtrot[offset];
        yankee = undefined;
        options = romeo.bind(yankee)(zulu);
        golf = options.useStateFromStoresArray;
        zulu = _closure1_slot4;
        oscar = new Array(1);
        oscar[0] = zulu;
        tango = mike.channel_id;
        report = new Array(1);
        report[0] = tango;
        tango = function() {
            report = _closure1_slot4;
            tango = report.getMutableParticipants;
            zulu = _closure2_slot0;
            zulu = zulu.channel_id;
            golf = _closure1_slot0;
            oscar = _closure1_slot2;
            mike = 4;
            oscar = oscar[mike];
            mike = undefined;
            mike = golf.bind(mike)(oscar);
            mike = mike.StageChannelParticipantNamedIndex;
            mike = mike.FRIEND;
            tango = tango.bind(report)(zulu, mike);
            zulu = tango.filter;
            mike = function(argFoo) {
                entity = argFoo;
                mike = entity.type;
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 4;
                zulu = zulu[entity];
                entity = undefined;
                entity = tango.bind(entity)(zulu);
                entity = entity.StageChannelParticipantTypes;
                entity = entity.VOICE;
                entity = mike === entity;
                return entity;
            };
            zulu = zulu.bind(tango)(mike);
            mike = zulu.map;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.user;
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        options = golf.bind(options)(oscar, tango, report);
        var _closure2_slot1 = options;
        tango = foxtrot[offset];
        backup = romeo.bind(yankee)(tango);
        golf = backup.useStateFromStoresArray;
        oscar = new Array(1);
        oscar[0] = zulu;
        tango = mike.channel_id;
        report = new Array(1);
        report[0] = tango;
        tango = function() {
            report = _closure1_slot4;
            tango = report.getMutableParticipants;
            zulu = _closure2_slot0;
            zulu = zulu.channel_id;
            golf = _closure1_slot0;
            oscar = _closure1_slot2;
            mike = 4;
            oscar = oscar[mike];
            mike = undefined;
            mike = golf.bind(mike)(oscar);
            mike = mike.StageChannelParticipantNamedIndex;
            mike = mike.SPEAKER;
            tango = tango.bind(report)(zulu, mike);
            zulu = tango.filter;
            mike = function(argFoo) {
                entity = argFoo;
                mike = entity.type;
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 4;
                zulu = zulu[entity];
                entity = undefined;
                entity = tango.bind(entity)(zulu);
                entity = entity.StageChannelParticipantTypes;
                entity = entity.VOICE;
                entity = mike === entity;
                return entity;
            };
            zulu = zulu.bind(tango)(mike);
            mike = zulu.map;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.user;
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        golf = golf.bind(backup)(oscar, tango, report);
        var _closure2_slot2 = golf;
        tango = foxtrot[offset];
        backup = romeo.bind(yankee)(tango);
        oscar = backup.useStateFromStoresArray;
        report = new Array(1);
        report[0] = zulu;
        zulu = mike.channel_id;
        tango = new Array(1);
        tango[0] = zulu;
        zulu = function() {
            report = _closure1_slot4;
            tango = report.getMutableParticipants;
            zulu = _closure2_slot0;
            zulu = zulu.channel_id;
            golf = _closure1_slot0;
            oscar = _closure1_slot2;
            mike = 4;
            oscar = oscar[mike];
            mike = undefined;
            mike = golf.bind(mike)(oscar);
            mike = mike.StageChannelParticipantNamedIndex;
            mike = mike.AUDIENCE;
            tango = tango.bind(report)(zulu, mike);
            zulu = tango.filter;
            mike = function(argFoo) {
                entity = argFoo;
                mike = entity.type;
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 4;
                zulu = zulu[entity];
                entity = undefined;
                entity = tango.bind(entity)(zulu);
                entity = entity.StageChannelParticipantTypes;
                entity = entity.VOICE;
                entity = mike === entity;
                return entity;
            };
            zulu = zulu.bind(tango)(mike);
            mike = zulu.map;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.user;
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        oscar = oscar.bind(backup)(report, zulu, tango);
        var _closure2_slot3 = oscar;
        sizing = _closure1_slot3;
        report = sizing.useMemo;
        tango = new Array(2);
        tango[0] = options;
        tango[1] = golf;
        zulu = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 5;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.uniqBy;
            options = _closure2_slot1;
            mike = new Array(0);
            golf = 0;
            verify = mike;
            golf = arraySpread(verify, options, golf);
            options = _closure2_slot2;
            verify = mike;
            entity = arraySpread(verify, options, golf);
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.id;
                return entity;
            };
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        };
        report = report.bind(sizing)(zulu, tango);
        backup = sizing.useMemo;
        tango = new Array(2);
        tango[0] = options;
        tango[1] = golf;
        zulu = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 5;
            mike = mike[entity];
            entity = undefined;
            report = zulu.bind(entity)(mike);
            tango = report.differenceBy;
            zulu = _closure2_slot1;
            mike = _closure2_slot2;
            entity = 'id';
            entity = tango.bind(report)(zulu, mike, entity);
            return entity;
        };
        zulu = backup.bind(sizing)(zulu, tango);
        var _closure2_slot4 = zulu;
        kilo = sizing.useMemo;
        backup = new Array(2);
        backup[0] = options;
        backup[1] = oscar;
        tango = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 5;
            mike = mike[entity];
            entity = undefined;
            report = zulu.bind(entity)(mike);
            tango = report.differenceBy;
            zulu = _closure2_slot3;
            mike = _closure2_slot1;
            entity = 'id';
            entity = tango.bind(report)(zulu, mike, entity);
            return entity;
        };
        tango = kilo.bind(sizing)(tango, backup);
        var _closure2_slot5 = tango;
        kilo = sizing.useMemo;
        backup = new Array(2);
        backup[0] = zulu;
        backup[1] = tango;
        tango = function() {
            oscar = _closure2_slot4;
            entity = new Array(0);
            report = 0;
            golf = entity;
            report = arraySpread(golf, oscar, report);
            oscar = _closure2_slot5;
            golf = entity;
            mike = arraySpread(golf, oscar, report);
            return entity;
        };
        tango = kilo.bind(sizing)(tango, backup);
        offset = foxtrot[offset];
        yankee = romeo.bind(yankee)(offset);
        offset = yankee.useStateFromStores;
        romeo = _closure1_slot5;
        verify = new Array(1);
        verify[0] = romeo;
        romeo = mike.channel_id;
        mike = new Array(1);
        mike[0] = romeo;
        entity = function() {
            zulu = _closure1_slot5;
            mike = zulu.getChannel;
            entity = _closure2_slot0;
            entity = entity.channel_id;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        mike = offset.bind(yankee)(verify, entity, mike);
        entity = {};
        entity['friends'] = options;
        entity['speakers'] = golf;
        oscar = oscar.length;
        entity['audienceCount'] = oscar;
        entity['users'] = report;
        entity['audiencePrefixedFriends'] = tango;
        entity['audienceFriends'] = zulu;
        entity['channel'] = mike;
        return entity;
    };
    zulu['useLiveStageData'] = mike;
    return entity;
})();