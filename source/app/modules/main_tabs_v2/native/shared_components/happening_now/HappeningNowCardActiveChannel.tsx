// app/modules/main_tabs_v2/native/shared_components/happening_now/HappeningNowCardActiveChannel.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    options = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = options;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    golf = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(verify)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot3 = golf;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    yankee = 2;
    tango = oscar[yankee];
    tango = options.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = oscar[yankee];
    tango = report.bind(entity)(tango);
    tango = tango.MAX_STORED_MESSAGES;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = options.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = options.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = options.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.HappeningNowCardTrackingType;
    var _closure1_slot10 = tango;
    tango = 7;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.AnalyticEvents;
    var _closure1_slot11 = options;
    tango = tango.Routes;
    var _closure1_slot12 = tango;
    tango = 8;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot13 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot14 = tango;
    tango = 9;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {'flexShrink': 1, 'marginLeft': 4, 'gap': 2};
    tango['content'] = offset;
    offset = {};
    offset['marginBottom'] = yankee;
    tango['avatarsWrapper'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot15 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        _fun115348: for(var _fun115348_ip = 0; ; ) switch(_fun115348_ip) {
 0:
            mike = argFoo;
            golf = mike.index;
            var _closure2_slot0 = golf;
            echo = mike.guildId;
            var _closure2_slot1 = echo;
            verify = mike.channelId;
            var _closure2_slot2 = verify;
            romeo = mike.fullwidth;
            oscar = mike.panelVariant;
            report = undefined;
            if(!(oscar === report)) { _fun115348_ip = 52; continue _fun115348 }
 50:
            oscar = false;
 52:
            var _closure2_slot3 = report;
            mike = _closure1_slot15;
            yankee = mike.bind(report)();
            backup = _closure1_slot0;
            kilo = _closure1_slot2;
            zulu = 10;
            mike = kilo[zulu];
            foxtrot = backup.bind(report)(mike);
            options = foxtrot.useStateFromStores;
            mike = _closure1_slot7;
            tango = new Array(1);
            tango[0] = mike;
            mike = function() {
                zulu = _closure1_slot7;
                mike = zulu.getChannel;
                entity = _closure2_slot2;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            foxtrot = options.bind(foxtrot)(tango, mike);
            mike = kilo[zulu];
            output = backup.bind(report)(mike);
            sizing = output.useStateFromStores;
            mike = _closure1_slot8;
            options = new Array(2);
            options[0] = mike;
            mike = _closure1_slot9;
            options[1] = mike;
            tango = function() {
                zulu = _closure1_slot1;
                oscar = _closure1_slot2;
                mike = 11;
                mike = oscar[mike];
                report = undefined;
                tango = zulu.bind(report)(mike);
                zulu = tango.keys;
                options = _closure1_slot8;
                golf = options.getTypingUsers;
                mike = _closure2_slot2;
                mike = golf.bind(options)(mike);
                tango = zulu.bind(tango)(mike);
                zulu = tango.map;
                mike = function(argFoo) {
                    zulu = _closure1_slot9;
                    mike = zulu.getUser;
                    entity = argFoo;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                zulu = zulu.bind(tango)(mike);
                mike = zulu.filter;
                tango = _closure1_slot0;
                entity = 12;
                entity = oscar[entity];
                entity = tango.bind(report)(entity);
                entity = entity.isNotNullish;
                mike = mike.bind(zulu)(entity);
                entity = 0;
                entity = mike[entity];
                return entity;
            };
            update = sizing.bind(output)(options, tango);
            tango = kilo[zulu];
            output = backup.bind(report)(tango);
            sizing = output.useStateFromStoresArray;
            tango = _closure1_slot5;
            options = new Array(1);
            options[0] = tango;
            tango = function() {
                _fun115352: for(var _fun115352_ip = 0; ; ) switch(_fun115352_ip) {
 0:
                    zulu = _closure1_slot5;
                    mike = zulu.getChannelMessageData;
                    entity = _closure2_slot2;
                    entity = mike.bind(zulu)(entity);
                    mike = null;
                    if(!(mike == entity)) { _fun115352_ip = 37; continue _fun115352 }
 33:
                    entity = new Array(0);
 37:
                    return entity;
                }
            };
            options = sizing.bind(output)(options, tango);
            _closure2_slot3 = options;
            tango = _closure1_slot3;
            result = tango.useMemo;
            output = new Array(1);
            output[0] = options;
            sizing = function() {
                golf = _closure1_slot1;
                oscar = _closure1_slot2;
                mike = 13;
                zulu = oscar[mike];
                report = undefined;
                tango = golf.bind(report)(zulu);
                zulu = tango.uniq;
                mike = oscar[mike];
                verify = golf.bind(report)(mike);
                options = verify.map;
                golf = _closure2_slot3;
                mike = 'userId';
                mike = options.bind(verify)(golf, mike);
                zulu = zulu.bind(tango)(mike);
                mike = zulu.filter;
                tango = _closure1_slot0;
                entity = 12;
                entity = oscar[entity];
                entity = tango.bind(report)(entity);
                entity = entity.isNotNullish;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            result = result.bind(tango)(sizing, output);
            sizing = 14;
            sizing = kilo[sizing];
            output = backup.bind(report)(sizing);
            sizing = output.useEnsureHydratedUsers;
            sizing = sizing.bind(output)(echo, result);
            zulu = kilo[zulu];
            kilo = backup.bind(report)(zulu);
            backup = kilo.useStateFromStoresArray;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                golf = _closure1_slot1;
                oscar = _closure1_slot2;
                mike = 13;
                zulu = oscar[mike];
                report = undefined;
                tango = golf.bind(report)(zulu);
                zulu = tango.uniq;
                mike = oscar[mike];
                verify = golf.bind(report)(mike);
                options = verify.map;
                golf = _closure2_slot3;
                mike = 'userId';
                mike = options.bind(verify)(golf, mike);
                tango = zulu.bind(tango)(mike);
                zulu = tango.map;
                mike = function(argFoo) {
                    zulu = _closure1_slot9;
                    mike = zulu.getUser;
                    entity = argFoo;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                zulu = zulu.bind(tango)(mike);
                mike = zulu.filter;
                tango = _closure1_slot0;
                entity = 12;
                entity = oscar[entity];
                entity = tango.bind(report)(entity);
                entity = entity.isNotNullish;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            result = backup.bind(kilo)(zulu, mike);
            zulu = tango.useCallback;
            mike = new Array(3);
            mike[0] = verify;
            mike[1] = golf;
            mike[2] = echo;
            entity = function() {
                tango = _closure1_slot1;
                report = _closure1_slot2;
                entity = 15;
                zulu = report[entity];
                entity = undefined;
                verify = tango.bind(entity)(zulu);
                options = verify.track;
                zulu = _closure1_slot11;
                tango = zulu.ACTIVITY_CARD_CLICKED;
                zulu = {};
                golf = _closure2_slot0;
                zulu['order'] = golf;
                golf = _closure2_slot1;
                zulu['guild_id'] = golf;
                offset = _closure1_slot10;
                offset = offset.ACTIVE_CHANNEL_CARD;
                zulu['type'] = offset;
                oscar = _closure2_slot2;
                zulu['destination_channel_id'] = oscar;
                zulu = options.bind(verify)(tango, zulu);
                tango = _closure1_slot0;
                zulu = 16;
                zulu = report[zulu];
                tango = tango.bind(entity)(zulu);
                zulu = tango.transitionTo;
                report = _closure1_slot12;
                mike = report.CHANNEL;
                mike = mike.bind(report)(golf, oscar);
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            verify = zulu.bind(tango)(entity, mike);
            entity = null;
            if(!(entity != foxtrot)) { _fun115348_ip = 813; continue _fun115348 }
 341:
            zulu = options.length;
            mike = _closure1_slot6;
            if(!(!(zulu < mike))) { _fun115348_ip = 411; continue _fun115348 }
 354:
            golf = _closure1_slot0;
            backup = _closure1_slot2;
            mike = 17;
            zulu = backup[mike];
            zulu = golf.bind(report)(zulu);
            tango = zulu.intl;
            zulu = tango.string;
            mike = backup[mike];
            mike = golf.bind(report)(mike);
            mike = mike.t;
            mike = mike.LCutYW;
            output = zulu.bind(tango)(mike);
            _fun115348_ip = 478; continue _fun115348;
 411:
            zulu = _closure1_slot0;
            backup = _closure1_slot2;
            mike = 17;
            tango = backup[mike];
            tango = zulu.bind(report)(tango);
            golf = tango.intl;
            tango = golf.formatToPlainString;
            mike = backup[mike];
            mike = zulu.bind(report)(mike);
            mike = mike.t;
            zulu = mike.VdpclZ;
            mike = {};
            options = options.length;
            mike['count'] = options;
            output = tango.bind(golf)(zulu, mike);
 478:
            tango = _closure1_slot0;
            mike = _closure1_slot2;
            zulu = 18;
            golf = mike[zulu];
            options = tango.bind(report)(golf);
            golf = options.getChannelIcon;
            options = golf.bind(options)(foxtrot);
            zulu = mike[zulu];
            tango = tango.bind(report)(zulu);
            zulu = tango.getChannelIconComponent;
            golf = zulu.bind(tango)(foxtrot);
            tango = _closure1_slot13;
            zulu = _closure1_slot1;
            backup = 19;
            mike = mike[backup];
            zulu = zulu.bind(report)(mike);
            mike = {};
            mike['onPress'] = verify;
            verify = 'medium';
            if(!romeo) { _fun115348_ip = 566; continue _fun115348 }
 562:
            verify = 'full';
 566:
            mike['width'] = verify;
            mike['badgeIcon'] = options;
            mike['IconComponent'] = golf;
            mike['panelVariant'] = oscar;
            options = _closure1_slot14;
            golf = _closure1_slot4;
            oscar = {};
            verify = yankee.content;
            oscar['style'] = verify;
            romeo = _closure1_slot13;
            verify = {};
            yankee = yankee.avatarsWrapper;
            verify['style'] = yankee;
            yankee = _closure1_slot0;
            offset = _closure1_slot2;
            kilo = 20;
            kilo = offset[kilo];
            kilo = yankee.bind(report)(kilo);
            sizing = kilo.HappeningNowAvatarStack;
            kilo = {};
            update = entity != update;
            kilo['isTyping'] = update;
            update = 3;
            kilo['userLimit'] = update;
            kilo['users'] = result;
            update = result.length;
            kilo['userCount'] = update;
            kilo['guildId'] = echo;
            kilo = romeo.bind(report)(sizing, kilo);
            verify['children'] = kilo;
            kilo = romeo.bind(report)(golf, verify);
            verify = new Array(3);
            verify[0] = kilo;
            kilo = offset[backup];
            kilo = yankee.bind(report)(kilo);
            sizing = kilo.HappeningNowCardHeader;
            kilo = {};
            echo = result.length;
            result = 0;
            result = echo > result;
            kilo['noMargin'] = result;
            kilo['children'] = output;
            kilo = romeo.bind(report)(sizing, kilo);
            verify[1] = kilo;
            offset = offset[backup];
            offset = yankee.bind(report)(offset);
            yankee = offset.HappeningNowCardSubtitle;
            offset = {};
            foxtrot = foxtrot.name;
            offset['children'] = foxtrot;
            offset = romeo.bind(report)(yankee, offset);
            verify[2] = offset;
            oscar['children'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['children'] = oscar;
            mike = tango.bind(report)(zulu, mike);
            return mike;
 813:
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/shared_components/happening_now/HappeningNowCardActiveChannel.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();