// app/modules/main_tabs_v2/native/shared_components/SearchBarNav.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    yankee = 1;
    tango = oscar[yankee];
    tango = report.bind(entity)(tango);
    options = tango.View;
    var _closure1_slot2 = options;
    backup = tango.StyleSheet;
    tango = 2;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot3 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {'flexDirection': 'row', 'alignItems': 'center'};
    romeo = 4;
    romeo = oscar[romeo];
    romeo = report.bind(entity)(romeo);
    romeo = romeo.NAV_BAR_HEIGHT;
    offset['height'] = romeo;
    romeo = 5;
    kilo = oscar[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_16;
    offset['paddingHorizontal'] = kilo;
    kilo = oscar[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BACKGROUND_MOBILE_SECONDARY;
    offset['backgroundColor'] = kilo;
    backup = backup.hairlineWidth;
    offset['borderBottomWidth'] = backup;
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BORDER_STRONG;
    offset['borderColor'] = backup;
    tango['container'] = offset;
    offset = {};
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    offset['paddingLeft'] = backup;
    tango['cancelText'] = offset;
    offset = {};
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    offset['marginRight'] = romeo;
    tango['cancelIcon'] = offset;
    offset = {};
    offset['flex'] = yankee;
    tango['flex'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot5 = tango;
    tango = golf.forwardRef;
    mike = function(argFoo, argBar) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zulu = argFoo;
            offset = zulu.onClose;
            oscar = null;
            mike = Object.create(oscar);
            entity = 0;
            mike['onClose'] = entity;
            source = {};
            update = zulu;
            echo = mike;
            output = copyDataProperties(source, update, echo);
            entity = _closure1_slot5;
            tango = undefined;
            verify = entity.bind(tango)();
            zulu = _closure1_slot3;
            golf = _closure1_slot0;
            report = _closure1_slot1;
            entity = 6;
            entity = report[entity];
            entity = golf.bind(tango)(entity);
            mike = entity.PressableOpacity;
            entity = {};
            yankee = 'button';
            entity['accessibilityRole'] = yankee;
            backup = 7;
            yankee = report[backup];
            yankee = golf.bind(tango)(yankee);
            foxtrot = yankee.intl;
            romeo = foxtrot.string;
            yankee = report[backup];
            yankee = golf.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.ETE/oK;
            yankee = romeo.bind(foxtrot)(yankee);
            entity['accessibilityLabel'] = yankee;
            entity['onPress'] = offset;
            offset = 8;
            yankee = {'top': 8, 'right': 8, 'bottom': 8, 'left': 8};
            entity['hitSlop'] = yankee;
            report = report[offset];
            golf = golf.bind(tango)(report);
            report = golf.isAndroid;
            report = report.bind(golf)();
            romeo = _closure1_slot3;
            yankee = _closure1_slot0;
            foxtrot = _closure1_slot1;
            if(report) { _fun00002_ip = 295; continue _fun00001 }
 196:
            report = 10;
            report = foxtrot[report];
            report = yankee.bind(tango)(report);
            golf = report.Text;
            report = {'style': null, 'maxFontSizeMultiplier': 2, 'variant': 'text-md/semibold', 'color': 'header-primary'};
            kilo = verify.cancelText;
            report['style'] = kilo;
            kilo = foxtrot[backup];
            kilo = yankee.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = foxtrot[backup];
            backup = yankee.bind(tango)(backup);
            backup = backup.t;
            backup = backup.ETE/oK;
            backup = kilo.bind(sizing)(backup);
            report['children'] = backup;
            report = romeo.bind(tango)(golf, report);
            _fun00002_ip = 331; continue _fun00001;
 295:
            golf = 9;
            golf = foxtrot[golf];
            golf = yankee.bind(tango)(golf);
            yankee = golf.ArrowLargeLeftIcon;
            golf = {};
            foxtrot = verify.cancelIcon;
            golf['style'] = foxtrot;
            report = romeo.bind(tango)(yankee, golf);
 331:
            entity['children'] = report;
            golf = zulu.bind(tango)(mike, entity);
            zulu = _closure1_slot4;
            mike = _closure1_slot2;
            entity = {};
            report = verify.container;
            entity['style'] = report;
            yankee = _closure1_slot0;
            report = _closure1_slot1;
            report = report[offset];
            yankee = yankee.bind(tango)(report);
            report = yankee.isAndroid;
            report = report.bind(yankee)();
            yankee = null;
            if(!report) { _fun00002_ip = 394; continue _fun00001 }
 391:
            yankee = golf;
 394:
            report = new Array(3);
            report[0] = yankee;
            foxtrot = _closure1_slot3;
            romeo = _closure1_slot2;
            yankee = {};
            verify = verify.flex;
            yankee['style'] = verify;
            backup = {};
            verify = _closure1_slot0;
            options = _closure1_slot1;
            kilo = 11;
            kilo = options[kilo];
            kilo = verify.bind(tango)(kilo);
            sizing = kilo.SearchField;
            kilo = {'size': 'md', 'isRound': true};
            result = argBar;
            kilo['ref'] = result;
            source = kilo;
            update = output;
            output = copyDataProperties(source, update);
            kilo = foxtrot.bind(tango)(sizing, kilo);
            backup['children'] = kilo;
            backup = foxtrot.bind(tango)(romeo, backup);
            yankee['children'] = backup;
            yankee = foxtrot.bind(tango)(romeo, yankee);
            report[1] = yankee;
            options = options[offset];
            verify = verify.bind(tango)(options);
            options = verify.isAndroid;
            options = options.bind(verify)();
            oscar = null;
            if(options) { _fun00002_ip = 536; continue _fun00001 }
 533:
            oscar = golf;
 536:
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/shared_components/SearchBarNav.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();