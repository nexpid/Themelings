// app/modules/main_tabs_v2/native/shared_components/SearchBarNav.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    yankee = 1;
    tangon = oscard[yankee];
    tangon = report.bind(entity)(tangon);
    option = tangon.View;
    var _closure1_slot2 = option;
    backup = tangon.StyleSheet;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot3 = option;
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'flexDirection': 'row', 'alignItems': 'center'};
    romeon = 4;
    romeon = oscard[romeon];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.NAV_BAR_HEIGHT;
    offset['height'] = romeon;
    romeon = 5;
    kiloes = oscard[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_16;
    offset['paddingHorizontal'] = kiloes;
    kiloes = oscard[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_MOBILE_SECONDARY;
    offset['backgroundColor'] = kiloes;
    backup = backup.hairlineWidth;
    offset['borderBottomWidth'] = backup;
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BORDER_STRONG;
    offset['borderColor'] = backup;
    tangon['container'] = offset;
    offset = {};
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    offset['paddingLeft'] = backup;
    tangon['cancelText'] = offset;
    offset = {};
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    offset['marginRight'] = romeon;
    tangon['cancelIcon'] = offset;
    offset = {};
    offset['flex'] = yankee;
    tangon['flex'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot5 = tangon;
    tangon = golfie.forwardRef;
    michal = function(argFoo, argBar) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            offset = zuuluu.onClose;
            oscard = null;
            michal = Object.create(oscard);
            entity = 0;
            michal['onClose'] = entity;
            source = {};
            update = zuuluu;
            echoed = michal;
            output = copyDataProperties(source, update, echoed);
            entity = _closure1_slot5;
            tangon = undefined;
            verify = entity.bind(tangon)();
            zuuluu = _closure1_slot3;
            golfie = _closure1_slot0;
            report = _closure1_slot1;
            entity = 6;
            entity = report[entity];
            entity = golfie.bind(tangon)(entity);
            michal = entity.PressableOpacity;
            entity = {};
            yankee = 'button';
            entity['accessibilityRole'] = yankee;
            backup = 7;
            yankee = report[backup];
            yankee = golfie.bind(tangon)(yankee);
            foxtra = yankee.intl;
            romeon = foxtra.string;
            yankee = report[backup];
            yankee = golfie.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.ETE/oK;
            yankee = romeon.bind(foxtra)(yankee);
            entity['accessibilityLabel'] = yankee;
            entity['onPress'] = offset;
            offset = 8;
            yankee = {'top': 8, 'right': 8, 'bottom': 8, 'left': 8};
            entity['hitSlop'] = yankee;
            report = report[offset];
            golfie = golfie.bind(tangon)(report);
            report = golfie.isAndroid;
            report = report.bind(golfie)();
            romeon = _closure1_slot3;
            yankee = _closure1_slot0;
            foxtra = _closure1_slot1;
            if(report) { _fun00002_ip = 295; continue _fun00001 }
 196:
            report = 10;
            report = foxtra[report];
            report = yankee.bind(tangon)(report);
            golfie = report.Text;
            report = {'style': null, 'maxFontSizeMultiplier': 2, 'variant': 'text-md/semibold', 'color': 'header-primary'};
            kiloes = verify.cancelText;
            report['style'] = kiloes;
            kiloes = foxtra[backup];
            kiloes = yankee.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = foxtra[backup];
            backup = yankee.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.ETE/oK;
            backup = kiloes.bind(sizing)(backup);
            report['children'] = backup;
            report = romeon.bind(tangon)(golfie, report);
            _fun00002_ip = 331; continue _fun00001;
 295:
            golfie = 9;
            golfie = foxtra[golfie];
            golfie = yankee.bind(tangon)(golfie);
            yankee = golfie.ArrowLargeLeftIcon;
            golfie = {};
            foxtra = verify.cancelIcon;
            golfie['style'] = foxtra;
            report = romeon.bind(tangon)(yankee, golfie);
 331:
            entity['children'] = report;
            golfie = zuuluu.bind(tangon)(michal, entity);
            zuuluu = _closure1_slot4;
            michal = _closure1_slot2;
            entity = {};
            report = verify.container;
            entity['style'] = report;
            yankee = _closure1_slot0;
            report = _closure1_slot1;
            report = report[offset];
            yankee = yankee.bind(tangon)(report);
            report = yankee.isAndroid;
            report = report.bind(yankee)();
            yankee = null;
            if(!report) { _fun00002_ip = 394; continue _fun00001 }
 391:
            yankee = golfie;
 394:
            report = new Array(3);
            report[0] = yankee;
            foxtra = _closure1_slot3;
            romeon = _closure1_slot2;
            yankee = {};
            verify = verify.flex;
            yankee['style'] = verify;
            backup = {};
            verify = _closure1_slot0;
            option = _closure1_slot1;
            kiloes = 11;
            kiloes = option[kiloes];
            kiloes = verify.bind(tangon)(kiloes);
            sizing = kiloes.SearchField;
            kiloes = {'size': 'md', 'isRound': true};
            result = argBar;
            kiloes['ref'] = result;
            source = kiloes;
            update = output;
            output = copyDataProperties(source, update);
            kiloes = foxtra.bind(tangon)(sizing, kiloes);
            backup['children'] = kiloes;
            backup = foxtra.bind(tangon)(romeon, backup);
            yankee['children'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            report[1] = yankee;
            option = option[offset];
            verify = verify.bind(tangon)(option);
            option = verify.isAndroid;
            option = option.bind(verify)();
            oscard = null;
            if(option) { _fun00002_ip = 532; continue _fun00001 }
 529:
            oscard = golfie;
 532:
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/shared_components/SearchBarNav.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();