// app/modules/main_tabs_v2/native/shared_components/tab_bar/useTabBarStyles.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
        golfie = argBar;
        foxtra = argBaz;
        zuuluu = argFre;
        option = argPlu;
        var _closure1_slot0 = golfie;
        var _closure1_slot1 = foxtra;
        var _closure1_slot2 = option;
        entity = global;
        oscard = entity.Object;
        report = oscard.defineProperty;
        tangon = {};
        entity = true;
        tangon['value'] = entity;
        entity = '__esModule';
        entity = report.bind(oscard)(zuuluu, entity, tangon);
        output = 0;
        report = option[output];
        tangon = argCor;
        entity = undefined;
        tangon = tangon.bind(entity)(report);
        var _closure1_slot3 = tangon;
        backup = 1;
        tangon = option[backup];
        tangon = golfie.bind(entity)(tangon);
        sizing = tangon.CHAT_INPUT_HEIGHT;
        echoed = 2;
        tangon = option[echoed];
        tangon = golfie.bind(entity)(tangon);
        tangon = tangon.jsx;
        var _closure1_slot4 = tangon;
        romeon = 3;
        tangon = option[romeon];
        tangon = foxtra.bind(entity)(tangon);
        tangon = tangon.spacing;
        yankee = tangon.PX_48;
        tangon = option[romeon];
        tangon = foxtra.bind(entity)(tangon);
        tangon = tangon.spacing;
        tangon = tangon.PX_16;
        report = 4;
        report = option[report];
        report = golfie.bind(entity)(report);
        oscard = report.DRAWER_LEFT_WIDTH_MIN;
        report = option[romeon];
        report = foxtra.bind(entity)(report);
        report = report.spacing;
        report = report.PX_8;
        oscard = oscard - report;
        report = echoed * yankee;
        report = oscard - report;
        tangon = echoed * tangon;
        report = report - tangon;
        var _closure1_slot5 = report;
        tangon = 5;
        tangon = option[tangon];
        verify = golfie.bind(entity)(tangon);
        oscard = verify.createStyles;
        tangon = {};
        offset = {};
        offset['borderTopWidth'] = backup;
        kiloes = option[romeon];
        kiloes = foxtra.bind(entity)(kiloes);
        kiloes = kiloes.colors;
        kiloes = kiloes.BORDER_SUBTLE;
        offset['borderTopColor'] = kiloes;
        kiloes = option[romeon];
        kiloes = foxtra.bind(entity)(kiloes);
        kiloes = kiloes.colors;
        kiloes = kiloes.BG_SURFACE_OVERLAY_TMP;
        offset['backgroundColor'] = kiloes;
        tangon['tabBar'] = offset;
        offset = {};
        offset['borderTopWidth'] = output;
        tangon['tabBarYou'] = offset;
        offset = {};
        kiloes = option[romeon];
        kiloes = foxtra.bind(entity)(kiloes);
        kiloes = kiloes.colors;
        kiloes = kiloes.BG_BASE_SECONDARY;
        offset['backgroundColor'] = kiloes;
        tangon['tabBarTablet'] = offset;
        offset = {};
        kiloes = option[romeon];
        kiloes = foxtra.bind(entity)(kiloes);
        kiloes = kiloes.spacing;
        kiloes = kiloes.PX_8;
        sizing = sizing + kiloes;
        kiloes = option[romeon];
        kiloes = foxtra.bind(entity)(kiloes);
        kiloes = kiloes.spacing;
        kiloes = kiloes.PX_4;
        kiloes = kiloes / echoed;
        result = sizing - kiloes;
        kiloes = option[romeon];
        kiloes = foxtra.bind(entity)(kiloes);
        kiloes = kiloes.spacing;
        kiloes = kiloes.PX_4;
        sizing = kiloes / echoed;
        kiloes = 6;
        update = option[kiloes];
        source = golfie.bind(entity)(update);
        update = source.isAndroid;
        update = update.bind(source)();
        if(!update) { _fun00002_ip = 474; continue _fun00001 }
 446:
        update = option[romeon];
        update = foxtra.bind(entity)(update);
        update = update.spacing;
        update = update.PX_4;
        update = update / echoed;
        output = update / echoed;
 474:
        sizing = sizing / echoed;
        sizing = result - sizing;
        sizing = sizing - output;
        offset['height'] = sizing;
        tangon['tabBarTabletHeight'] = offset;
        offset = {};
        sizing = option[romeon];
        sizing = foxtra.bind(entity)(sizing);
        sizing = sizing.radii;
        sizing = sizing.sm;
        offset['borderRadius'] = sizing;
        sizing = option[romeon];
        sizing = foxtra.bind(entity)(sizing);
        sizing = sizing.colors;
        sizing = sizing.BORDER_SUBTLE;
        offset['borderColor'] = sizing;
        offset['borderWidth'] = backup;
        tangon['tabBarNux'] = offset;
        offset = {};
        sizing = option[romeon];
        sizing = foxtra.bind(entity)(sizing);
        sizing = sizing.colors;
        sizing = sizing.BG_BASE_TERTIARY;
        offset['backgroundColor'] = sizing;
        tangon['tabBarNuxBackground'] = offset;
        offset = {};
        kiloes = option[kiloes];
        sizing = golfie.bind(entity)(kiloes);
        kiloes = sizing.isIOS;
        sizing = kiloes.bind(sizing)();
        kiloes = undefined;
        if(!sizing) { _fun00002_ip = 619; continue _fun00001 }
 613:
        kiloes = -1;
 619:
        offset['marginLeft'] = kiloes;
        tangon['tabBarIcon'] = offset;
        offset = {};
        kiloes = 'none';
        offset['display'] = kiloes;
        tangon['tabBarGuildsTablet'] = offset;
        offset = {'position': 'absolute', 'top': 0};
        kiloes = option[romeon];
        kiloes = foxtra.bind(entity)(kiloes);
        kiloes = kiloes.spacing;
        kiloes = kiloes.PX_16;
        kiloes = report + kiloes;
        offset['left'] = kiloes;
        offset['width'] = yankee;
        tangon['tabBarIcymTablet'] = offset;
        offset = {'position': 'absolute', 'top': 0};
        kiloes = backup * yankee;
        backup = option[romeon];
        backup = foxtra.bind(entity)(backup);
        backup = backup.spacing;
        backup = backup.PX_8;
        backup = kiloes + backup;
        offset['right'] = backup;
        offset['width'] = yankee;
        tangon['tabBarNotificationsTablet'] = offset;
        offset = {'position': 'absolute', 'top': 0};
        romeon = option[romeon];
        romeon = foxtra.bind(entity)(romeon);
        romeon = romeon.spacing;
        romeon = romeon.PX_8;
        offset['right'] = romeon;
        offset['width'] = yankee;
        tangon['tabBarSettingsTablet'] = offset;
        offset = {'position': 'absolute', 'left': 0, 'top': 0};
        tangon['tabBarYouTablet'] = offset;
        tangon = oscard.bind(verify)(tangon);
        var _closure1_slot6 = tangon;
        oscard = 15;
        oscard = option[oscard];
        option = golfie.bind(entity)(oscard);
        golfie = option.fileFinishedImporting;
        oscard = 'modules/main_tabs_v2/native/shared_components/tab_bar/useTabBarStyles.tsx';
        oscard = golfie.bind(option)(oscard);
        zuuluu['TABLET_ICON_YOU_WIDTH'] = report;
        zuuluu['useTabBarStyles'] = tangon;
        michal = function() { // Original name: useTabBarStylesComputed
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                zuuluu = _closure1_slot6;
                tangon = undefined;
                kiloes = zuuluu.bind(tangon)();
                var _closure2_slot0 = kiloes;
                report = _closure1_slot0;
                golfie = _closure1_slot2;
                zuuluu = 7;
                oscard = golfie[zuuluu];
                option = report.bind(tangon)(oscard);
                oscard = option.useGradientBottom;
                yankee = oscard.bind(option)();
                var _closure2_slot1 = yankee;
                zuuluu = golfie[zuuluu];
                report = report.bind(tangon)(zuuluu);
                zuuluu = report.useGradientMidpoint;
                backup = zuuluu.bind(report)();
                var _closure2_slot2 = backup;
                report = _closure1_slot1;
                zuuluu = 8;
                zuuluu = golfie[zuuluu];
                zuuluu = report.bind(tangon)(zuuluu);
                result = zuuluu.bind(tangon)();
                zuuluu = 9;
                zuuluu = golfie[zuuluu];
                zuuluu = report.bind(tangon)(zuuluu);
                zuuluu = zuuluu.bind(tangon)();
                option = zuuluu.theme;
                var _closure2_slot3 = option;
                report = zuuluu.primaryColor;
                var _closure2_slot4 = report;
                zuuluu = null;
                if(!(zuuluu != option)) { _fun00004_ip = 141; continue _fun00003 }
 138:
                result = option;
 141:
                foxtra = _closure1_slot0;
                output = _closure1_slot2;
                oscard = 10;
                zuuluu = output[oscard];
                offset = foxtra.bind(tangon)(zuuluu);
                verify = offset.useToken;
                romeon = _closure1_slot1;
                zuuluu = 3;
                golfie = output[zuuluu];
                golfie = romeon.bind(tangon)(golfie);
                golfie = golfie.colors;
                golfie = golfie.INTERACTIVE_NORMAL;
                offset = verify.bind(offset)(golfie);
                var _closure2_slot5 = offset;
                golfie = output[oscard];
                sizing = foxtra.bind(tangon)(golfie);
                verify = sizing.useToken;
                golfie = output[zuuluu];
                golfie = romeon.bind(tangon)(golfie);
                golfie = golfie.colors;
                golfie = golfie.INTERACTIVE_ACTIVE;
                verify = verify.bind(sizing)(golfie);
                var _closure2_slot6 = verify;
                golfie = output[oscard];
                echoed = foxtra.bind(tangon)(golfie);
                sizing = echoed.useToken;
                golfie = output[zuuluu];
                golfie = romeon.bind(tangon)(golfie);
                golfie = golfie.colors;
                golfie = golfie.INTERACTIVE_NORMAL;
                golfie = sizing.bind(echoed)(golfie, result);
                var _closure2_slot7 = golfie;
                oscard = output[oscard];
                sizing = foxtra.bind(tangon)(oscard);
                oscard = sizing.useToken;
                zuuluu = output[zuuluu];
                zuuluu = romeon.bind(tangon)(zuuluu);
                zuuluu = zuuluu.colors;
                zuuluu = zuuluu.INTERACTIVE_ACTIVE;
                oscard = oscard.bind(sizing)(zuuluu, result);
                var _closure2_slot8 = oscard;
                zuuluu = 11;
                zuuluu = output[zuuluu];
                foxtra = foxtra.bind(tangon)(zuuluu);
                zuuluu = foxtra.useLaunchWelcomeNuxVisible;
                zuuluu = zuuluu.bind(foxtra)();
                sizing = zuuluu.isNuxVisible;
                var _closure2_slot9 = sizing;
                zuuluu = 12;
                zuuluu = output[zuuluu];
                zuuluu = romeon.bind(tangon)(zuuluu);
                zuuluu = zuuluu.bind(tangon)();
                foxtra = zuuluu.bottom;
                var _closure2_slot10 = foxtra;
                zuuluu = 13;
                zuuluu = output[zuuluu];
                zuuluu = romeon.bind(tangon)(zuuluu);
                romeon = zuuluu.bind(tangon)();
                var _closure2_slot11 = romeon;
                tangon = _closure1_slot3;
                zuuluu = tangon.useMemo;
                michal = new Array(12);
                michal[0] = sizing;
                michal[1] = kiloes;
                michal[2] = backup;
                michal[3] = foxtra;
                michal[4] = romeon;
                michal[5] = yankee;
                michal[6] = offset;
                michal[7] = verify;
                michal[8] = option;
                michal[9] = golfie;
                michal[10] = oscard;
                michal[11] = report;
                entity = function() {
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        entity = _closure2_slot9;
                        zuuluu = undefined;
                        if(!entity) { _fun00006_ip = 63; continue _fun00005 }
 12:
                        entity = _closure2_slot0;
                        michal = entity.tabBarNux;
                        entity = new Array(2);
                        entity[0] = michal;
                        tangon = _closure2_slot2;
                        michal = null;
                        if(!(michal == tangon)) { _fun00006_ip = 52; continue _fun00005 }
 40:
                        michal = _closure2_slot0;
                        michal = michal.tabBarNuxBackground;
                        _fun00006_ip = 56; continue _fun00005;
 52:
                        michal = _closure2_slot2;
 56:
                        entity[1] = michal;
                        zuuluu = entity;
 63:
                        entity = _closure2_slot0;
                        entity = entity.tabBarTabletHeight;
                        michal = new Array(2);
                        michal[0] = entity;
                        entity = {};
                        tangon = _closure2_slot10;
                        entity['marginBottom'] = tangon;
                        michal[1] = entity;
                        entity = _closure2_slot11;
                        oscard = undefined;
                        if(!entity) { _fun00006_ip = 146; continue _fun00005 }
 104:
                        entity = _closure2_slot0;
                        tangon = entity.tabBarYouTablet;
                        entity = new Array(3);
                        entity[0] = tangon;
                        tangon = {};
                        report = _closure1_slot5;
                        tangon['width'] = report;
                        entity[1] = tangon;
                        entity[2] = michal;
                        oscard = entity;
 146:
                        entity = _closure2_slot11;
                        offset = undefined;
                        if(!entity) { _fun00006_ip = 180; continue _fun00005 }
 155:
                        entity = _closure2_slot0;
                        tangon = entity.tabBarIcymTablet;
                        entity = new Array(2);
                        entity[0] = tangon;
                        entity[1] = michal;
                        offset = entity;
 180:
                        entity = _closure2_slot11;
                        option = undefined;
                        if(!entity) { _fun00006_ip = 214; continue _fun00005 }
 189:
                        entity = _closure2_slot0;
                        tangon = entity.tabBarNotificationsTablet;
                        entity = new Array(2);
                        entity[0] = tangon;
                        entity[1] = michal;
                        option = entity;
 214:
                        entity = _closure2_slot11;
                        report = undefined;
                        if(!entity) { _fun00006_ip = 248; continue _fun00005 }
 223:
                        entity = _closure2_slot0;
                        tangon = entity.tabBarSettingsTablet;
                        entity = new Array(2);
                        entity[0] = tangon;
                        entity[1] = michal;
                        report = entity;
 248:
                        entity = _closure2_slot11;
                        yankee = undefined;
                        if(!entity) { _fun00006_ip = 267; continue _fun00005 }
 257:
                        entity = _closure2_slot0;
                        yankee = entity.tabBarGuildsTablet;
 267:
                        entity = _closure2_slot0;
                        michal = entity.tabBarIcon;
                        foxtra = {};
                        backup = entity.tabBar;
                        kiloes = foxtra;
                        entity = copyDataProperties(kiloes, backup);
                        backup = _closure2_slot1;
                        kiloes = foxtra;
                        entity = copyDataProperties(kiloes, backup);
                        entity = _closure2_slot11;
                        verify = undefined;
                        if(!entity) { _fun00006_ip = 383; continue _fun00005 }
 312:
                        entity = {};
                        romeon = _closure2_slot1;
                        tangon = null;
                        if(!(tangon == romeon)) { _fun00006_ip = 336; continue _fun00005 }
 324:
                        tangon = _closure2_slot0;
                        tangon = tangon.tabBarTablet;
                        _fun00006_ip = 338; continue _fun00005;
 336:
                        tangon = {};
 338:
                        kiloes = entity;
                        backup = tangon;
                        tangon = copyDataProperties(kiloes, backup);
                        tangon = _closure2_slot0;
                        tangon = tangon.tabBarTabletHeight;
                        romeon = tangon.height;
                        tangon = _closure2_slot10;
                        romeon = romeon + tangon;
                        tangon = 'height';
                        entity[tangon] = romeon;
                        verify = entity;
 383:
                        entity = {};
                        tangon = {};
                        romeon = new Array(2);
                        romeon[0] = foxtra;
                        romeon[1] = verify;
                        tangon['tabBarStyle'] = romeon;
                        romeon = _closure2_slot11;
                        romeon = !romeon;
                        tangon['tabBarShowLabel'] = romeon;
                        romeon = _closure2_slot5;
                        tangon['tabBarInactiveTintColor'] = romeon;
                        romeon = _closure2_slot6;
                        tangon['tabBarActiveTintColor'] = romeon;
                        entity['tabBarStyles'] = tangon;
                        tangon = {};
                        tangon['tabBarItemStyle'] = yankee;
                        entity['tabBarStylesGuilds'] = tangon;
                        tangon = {};
                        tangon['tabBarItemStyle'] = offset;
                        entity['tabBarStylesIcym'] = tangon;
                        tangon = {};
                        tangon['tabBarItemStyle'] = offset;
                        entity['tabBarStylesDiscovery'] = tangon;
                        tangon = {};
                        tangon['tabBarItemStyle'] = option;
                        entity['tabBarStylesNotifications'] = tangon;
                        tangon = {};
                        offset = _closure2_slot3;
                        option = null;
                        if(!(option != offset)) { _fun00006_ip = 511; continue _fun00005 }
 499:
                        option = _closure2_slot0;
                        offset = option.tabBarYou;
                        _fun00006_ip = 521; continue _fun00005;
 511:
                        option = _closure2_slot0;
                        offset = option.tabBar;
 521:
                        option = new Array(2);
                        option[0] = offset;
                        option[1] = verify;
                        tangon['tabBarStyle'] = option;
                        option = function() { // Original name: tabBarBackground
                            tangon = _closure1_slot4;
                            michal = _closure1_slot1;
                            zuuluu = _closure1_slot2;
                            entity = 14;
                            entity = zuuluu[entity];
                            zuuluu = undefined;
                            michal = michal.bind(zuuluu)(entity);
                            entity = {};
                            oscard = _closure2_slot3;
                            entity['theme'] = oscard;
                            report = _closure2_slot4;
                            entity['backgroundColor'] = report;
                            entity = tangon.bind(zuuluu)(michal, entity);
                            return entity;
                        };
                        tangon['tabBarBackground'] = option;
                        option = _closure2_slot7;
                        tangon['tabBarInactiveTintColor'] = option;
                        golfie = _closure2_slot8;
                        tangon['tabBarActiveTintColor'] = golfie;
                        tangon['tabBarItemStyle'] = oscard;
                        entity['tabBarStylesYouTab'] = tangon;
                        tangon = {};
                        tangon['tabBarItemStyle'] = report;
                        entity['tabBarStylesSettings'] = tangon;
                        entity['tabBarItemStyle'] = zuuluu;
                        entity['tabBarIconStyle'] = michal;
                        return entity;
                    }
                };
                entity = zuuluu.bind(tangon)(entity, michal);
                return entity;
            }
        };
        zuuluu['useTabBarStylesComputed'] = michal;
        return entity;
    }
})();