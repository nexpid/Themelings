// app/modules/main_tabs_v2/native/shared_components/tab_bar/useTabBarStyles.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
        golf = argBar;
        foxtrot = argBaz;
        zulu = argFred;
        options = argPlugh;
        var _closure1_slot0 = golf;
        var _closure1_slot1 = foxtrot;
        var _closure1_slot2 = options;
        entity = global;
        oscar = entity.Object;
        report = oscar.defineProperty;
        tango = {};
        entity = true;
        tango['value'] = entity;
        entity = '__esModule';
        entity = report.bind(oscar)(zulu, entity, tango);
        result = 0;
        report = options[result];
        tango = argCorge;
        entity = undefined;
        tango = tango.bind(entity)(report);
        var _closure1_slot3 = tango;
        backup = 1;
        tango = options[backup];
        tango = golf.bind(entity)(tango);
        output = tango.CHAT_INPUT_HEIGHT;
        kilo = 2;
        tango = options[kilo];
        tango = golf.bind(entity)(tango);
        tango = tango.jsx;
        var _closure1_slot4 = tango;
        romeo = 3;
        tango = options[romeo];
        tango = foxtrot.bind(entity)(tango);
        tango = tango.spacing;
        yankee = tango.PX_48;
        tango = options[romeo];
        tango = foxtrot.bind(entity)(tango);
        tango = tango.spacing;
        tango = tango.PX_16;
        report = 4;
        report = options[report];
        report = golf.bind(entity)(report);
        oscar = report.DRAWER_LEFT_WIDTH_MIN;
        report = options[romeo];
        report = foxtrot.bind(entity)(report);
        report = report.spacing;
        report = report.PX_8;
        oscar = oscar - report;
        report = kilo * yankee;
        report = oscar - report;
        tango = kilo * tango;
        report = report - tango;
        var _closure1_slot5 = report;
        tango = 5;
        tango = options[tango];
        verify = golf.bind(entity)(tango);
        oscar = verify.createStyles;
        tango = {};
        offset = {};
        offset['borderTopWidth'] = backup;
        sizing = options[romeo];
        sizing = foxtrot.bind(entity)(sizing);
        sizing = sizing.colors;
        sizing = sizing.BORDER_SUBTLE;
        offset['borderTopColor'] = sizing;
        sizing = options[romeo];
        sizing = foxtrot.bind(entity)(sizing);
        sizing = sizing.colors;
        sizing = sizing.BG_SURFACE_OVERLAY_TMP;
        offset['backgroundColor'] = sizing;
        tango['tabBar'] = offset;
        offset = {};
        offset['borderTopWidth'] = result;
        tango['tabBarYou'] = offset;
        offset = {};
        sizing = options[romeo];
        sizing = foxtrot.bind(entity)(sizing);
        sizing = sizing.colors;
        sizing = sizing.BG_BASE_SECONDARY;
        offset['backgroundColor'] = sizing;
        tango['tabBarTablet'] = offset;
        offset = {};
        sizing = options[romeo];
        sizing = foxtrot.bind(entity)(sizing);
        sizing = sizing.spacing;
        sizing = sizing.PX_8;
        output = output + sizing;
        sizing = options[romeo];
        sizing = foxtrot.bind(entity)(sizing);
        sizing = sizing.spacing;
        sizing = sizing.PX_4;
        sizing = sizing / kilo;
        echo = output - sizing;
        sizing = options[romeo];
        sizing = foxtrot.bind(entity)(sizing);
        sizing = sizing.spacing;
        sizing = sizing.PX_4;
        output = sizing / kilo;
        sizing = 6;
        update = options[sizing];
        source = golf.bind(entity)(update);
        update = source.isAndroid;
        update = update.bind(source)();
        if(!update) { _fun00002_ip = 475; continue _fun00001 }
 447:
        update = options[romeo];
        update = foxtrot.bind(entity)(update);
        update = update.spacing;
        update = update.PX_4;
        update = update / kilo;
        result = update / kilo;
 475:
        output = output / kilo;
        output = echo - output;
        output = output - result;
        offset['height'] = output;
        tango['tabBarTabletHeight'] = offset;
        offset = {};
        output = options[romeo];
        output = foxtrot.bind(entity)(output);
        output = output.radii;
        output = output.sm;
        offset['borderRadius'] = output;
        output = options[romeo];
        output = foxtrot.bind(entity)(output);
        output = output.colors;
        output = output.BORDER_SUBTLE;
        offset['borderColor'] = output;
        offset['borderWidth'] = backup;
        tango['tabBarNux'] = offset;
        offset = {};
        output = options[romeo];
        output = foxtrot.bind(entity)(output);
        output = output.colors;
        output = output.BG_BASE_TERTIARY;
        offset['backgroundColor'] = output;
        tango['tabBarNuxBackground'] = offset;
        offset = {};
        sizing = options[sizing];
        output = golf.bind(entity)(sizing);
        sizing = output.isIOS;
        output = sizing.bind(output)();
        sizing = undefined;
        if(!output) { _fun00002_ip = 620; continue _fun00001 }
 614:
        sizing = -1;
 620:
        offset['marginLeft'] = sizing;
        tango['tabBarIcon'] = offset;
        offset = {};
        sizing = 'none';
        offset['display'] = sizing;
        tango['tabBarGuildsTablet'] = offset;
        offset = {'position': 'absolute', 'top': 0};
        sizing = kilo * yankee;
        kilo = options[romeo];
        kilo = foxtrot.bind(entity)(kilo);
        kilo = kilo.spacing;
        kilo = kilo.PX_8;
        kilo = sizing + kilo;
        offset['right'] = kilo;
        offset['width'] = yankee;
        tango['tabBarIcymTablet'] = offset;
        offset = {'position': 'absolute', 'top': 0};
        kilo = backup * yankee;
        backup = options[romeo];
        backup = foxtrot.bind(entity)(backup);
        backup = backup.spacing;
        backup = backup.PX_8;
        backup = kilo + backup;
        offset['right'] = backup;
        offset['width'] = yankee;
        tango['tabBarNotificationsTablet'] = offset;
        offset = {'position': 'absolute', 'top': 0};
        romeo = options[romeo];
        romeo = foxtrot.bind(entity)(romeo);
        romeo = romeo.spacing;
        romeo = romeo.PX_8;
        offset['right'] = romeo;
        offset['width'] = yankee;
        tango['tabBarSettingsTablet'] = offset;
        offset = {'position': 'absolute', 'left': 0, 'top': 0};
        tango['tabBarYouTablet'] = offset;
        tango = oscar.bind(verify)(tango);
        var _closure1_slot6 = tango;
        oscar = 15;
        oscar = options[oscar];
        options = golf.bind(entity)(oscar);
        golf = options.fileFinishedImporting;
        oscar = 'modules/main_tabs_v2/native/shared_components/tab_bar/useTabBarStyles.tsx';
        oscar = golf.bind(options)(oscar);
        zulu['TABLET_ICON_YOU_WIDTH'] = report;
        zulu['useTabBarStyles'] = tango;
        mike = function() { // Original name: useTabBarStylesComputed
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                zulu = _closure1_slot6;
                tango = undefined;
                kilo = zulu.bind(tango)();
                var _closure2_slot0 = kilo;
                report = _closure1_slot0;
                golf = _closure1_slot2;
                zulu = 7;
                oscar = golf[zulu];
                options = report.bind(tango)(oscar);
                oscar = options.useGradientBottom;
                yankee = oscar.bind(options)();
                var _closure2_slot1 = yankee;
                zulu = golf[zulu];
                report = report.bind(tango)(zulu);
                zulu = report.useGradientMidpoint;
                backup = zulu.bind(report)();
                var _closure2_slot2 = backup;
                report = _closure1_slot1;
                zulu = 8;
                zulu = golf[zulu];
                zulu = report.bind(tango)(zulu);
                result = zulu.bind(tango)();
                zulu = 9;
                zulu = golf[zulu];
                zulu = report.bind(tango)(zulu);
                zulu = zulu.bind(tango)();
                options = zulu.theme;
                var _closure2_slot3 = options;
                report = zulu.primaryColor;
                var _closure2_slot4 = report;
                zulu = null;
                if(!(zulu != options)) { _fun00004_ip = 141; continue _fun00003 }
 138:
                result = options;
 141:
                foxtrot = _closure1_slot0;
                output = _closure1_slot2;
                oscar = 10;
                zulu = output[oscar];
                offset = foxtrot.bind(tango)(zulu);
                verify = offset.useToken;
                romeo = _closure1_slot1;
                zulu = 3;
                golf = output[zulu];
                golf = romeo.bind(tango)(golf);
                golf = golf.colors;
                golf = golf.INTERACTIVE_NORMAL;
                offset = verify.bind(offset)(golf);
                var _closure2_slot5 = offset;
                golf = output[oscar];
                sizing = foxtrot.bind(tango)(golf);
                verify = sizing.useToken;
                golf = output[zulu];
                golf = romeo.bind(tango)(golf);
                golf = golf.colors;
                golf = golf.INTERACTIVE_ACTIVE;
                verify = verify.bind(sizing)(golf);
                var _closure2_slot6 = verify;
                golf = output[oscar];
                echo = foxtrot.bind(tango)(golf);
                sizing = echo.useToken;
                golf = output[zulu];
                golf = romeo.bind(tango)(golf);
                golf = golf.colors;
                golf = golf.INTERACTIVE_NORMAL;
                golf = sizing.bind(echo)(golf, result);
                var _closure2_slot7 = golf;
                oscar = output[oscar];
                sizing = foxtrot.bind(tango)(oscar);
                oscar = sizing.useToken;
                zulu = output[zulu];
                zulu = romeo.bind(tango)(zulu);
                zulu = zulu.colors;
                zulu = zulu.INTERACTIVE_ACTIVE;
                oscar = oscar.bind(sizing)(zulu, result);
                var _closure2_slot8 = oscar;
                zulu = 11;
                zulu = output[zulu];
                foxtrot = foxtrot.bind(tango)(zulu);
                zulu = foxtrot.useLaunchWelcomeNuxVisible;
                zulu = zulu.bind(foxtrot)();
                sizing = zulu.isNuxVisible;
                var _closure2_slot9 = sizing;
                zulu = 12;
                zulu = output[zulu];
                zulu = romeo.bind(tango)(zulu);
                zulu = zulu.bind(tango)();
                foxtrot = zulu.bottom;
                var _closure2_slot10 = foxtrot;
                zulu = 13;
                zulu = output[zulu];
                zulu = romeo.bind(tango)(zulu);
                romeo = zulu.bind(tango)();
                var _closure2_slot11 = romeo;
                tango = _closure1_slot3;
                zulu = tango.useMemo;
                mike = new Array(12);
                mike[0] = sizing;
                mike[1] = kilo;
                mike[2] = backup;
                mike[3] = foxtrot;
                mike[4] = romeo;
                mike[5] = yankee;
                mike[6] = offset;
                mike[7] = verify;
                mike[8] = options;
                mike[9] = golf;
                mike[10] = oscar;
                mike[11] = report;
                entity = function() {
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        entity = _closure2_slot9;
                        zulu = undefined;
                        if(!entity) { _fun00006_ip = 63; continue _fun00005 }
 12:
                        entity = _closure2_slot0;
                        mike = entity.tabBarNux;
                        entity = new Array(2);
                        entity[0] = mike;
                        tango = _closure2_slot2;
                        mike = null;
                        if(!(mike == tango)) { _fun00006_ip = 52; continue _fun00005 }
 40:
                        mike = _closure2_slot0;
                        mike = mike.tabBarNuxBackground;
                        _fun00006_ip = 56; continue _fun00005;
 52:
                        mike = _closure2_slot2;
 56:
                        entity[1] = mike;
                        zulu = entity;
 63:
                        entity = _closure2_slot0;
                        entity = entity.tabBarTabletHeight;
                        mike = new Array(2);
                        mike[0] = entity;
                        entity = {};
                        tango = _closure2_slot10;
                        entity['marginBottom'] = tango;
                        mike[1] = entity;
                        entity = _closure2_slot11;
                        oscar = undefined;
                        if(!entity) { _fun00006_ip = 146; continue _fun00005 }
 104:
                        entity = _closure2_slot0;
                        tango = entity.tabBarYouTablet;
                        entity = new Array(3);
                        entity[0] = tango;
                        tango = {};
                        report = _closure1_slot5;
                        tango['width'] = report;
                        entity[1] = tango;
                        entity[2] = mike;
                        oscar = entity;
 146:
                        entity = _closure2_slot11;
                        offset = undefined;
                        if(!entity) { _fun00006_ip = 180; continue _fun00005 }
 155:
                        entity = _closure2_slot0;
                        tango = entity.tabBarIcymTablet;
                        entity = new Array(2);
                        entity[0] = tango;
                        entity[1] = mike;
                        offset = entity;
 180:
                        entity = _closure2_slot11;
                        options = undefined;
                        if(!entity) { _fun00006_ip = 214; continue _fun00005 }
 189:
                        entity = _closure2_slot0;
                        tango = entity.tabBarNotificationsTablet;
                        entity = new Array(2);
                        entity[0] = tango;
                        entity[1] = mike;
                        options = entity;
 214:
                        entity = _closure2_slot11;
                        report = undefined;
                        if(!entity) { _fun00006_ip = 248; continue _fun00005 }
 223:
                        entity = _closure2_slot0;
                        tango = entity.tabBarSettingsTablet;
                        entity = new Array(2);
                        entity[0] = tango;
                        entity[1] = mike;
                        report = entity;
 248:
                        entity = _closure2_slot11;
                        yankee = undefined;
                        if(!entity) { _fun00006_ip = 267; continue _fun00005 }
 257:
                        entity = _closure2_slot0;
                        yankee = entity.tabBarGuildsTablet;
 267:
                        entity = _closure2_slot0;
                        mike = entity.tabBarIcon;
                        foxtrot = {};
                        backup = entity.tabBar;
                        kilo = foxtrot;
                        entity = copyDataProperties(kilo, backup);
                        backup = _closure2_slot1;
                        kilo = foxtrot;
                        entity = copyDataProperties(kilo, backup);
                        entity = _closure2_slot11;
                        verify = undefined;
                        if(!entity) { _fun00006_ip = 383; continue _fun00005 }
 312:
                        entity = {};
                        romeo = _closure2_slot1;
                        tango = null;
                        if(!(tango == romeo)) { _fun00006_ip = 336; continue _fun00005 }
 324:
                        tango = _closure2_slot0;
                        tango = tango.tabBarTablet;
                        _fun00006_ip = 338; continue _fun00005;
 336:
                        tango = {};
 338:
                        kilo = entity;
                        backup = tango;
                        tango = copyDataProperties(kilo, backup);
                        tango = _closure2_slot0;
                        tango = tango.tabBarTabletHeight;
                        romeo = tango.height;
                        tango = _closure2_slot10;
                        romeo = romeo + tango;
                        tango = 'height';
                        entity[tango] = romeo;
                        verify = entity;
 383:
                        entity = {};
                        tango = {};
                        romeo = new Array(2);
                        romeo[0] = foxtrot;
                        romeo[1] = verify;
                        tango['tabBarStyle'] = romeo;
                        romeo = _closure2_slot11;
                        romeo = !romeo;
                        tango['tabBarShowLabel'] = romeo;
                        romeo = _closure2_slot5;
                        tango['tabBarInactiveTintColor'] = romeo;
                        romeo = _closure2_slot6;
                        tango['tabBarActiveTintColor'] = romeo;
                        entity['tabBarStyles'] = tango;
                        tango = {};
                        tango['tabBarItemStyle'] = yankee;
                        entity['tabBarStylesGuilds'] = tango;
                        tango = {};
                        tango['tabBarItemStyle'] = offset;
                        entity['tabBarStylesIcym'] = tango;
                        tango = {};
                        tango['tabBarItemStyle'] = options;
                        entity['tabBarStylesNotifications'] = tango;
                        tango = {};
                        offset = _closure2_slot3;
                        options = null;
                        if(!(options != offset)) { _fun00006_ip = 499; continue _fun00005 }
 487:
                        options = _closure2_slot0;
                        offset = options.tabBarYou;
                        _fun00006_ip = 509; continue _fun00005;
 499:
                        options = _closure2_slot0;
                        offset = options.tabBar;
 509:
                        options = new Array(2);
                        options[0] = offset;
                        options[1] = verify;
                        tango['tabBarStyle'] = options;
                        options = function() { // Original name: tabBarBackground
                            tango = _closure1_slot4;
                            mike = _closure1_slot1;
                            zulu = _closure1_slot2;
                            entity = 14;
                            entity = zulu[entity];
                            zulu = undefined;
                            mike = mike.bind(zulu)(entity);
                            entity = {};
                            oscar = _closure2_slot3;
                            entity['theme'] = oscar;
                            report = _closure2_slot4;
                            entity['backgroundColor'] = report;
                            entity = tango.bind(zulu)(mike, entity);
                            return entity;
                        };
                        tango['tabBarBackground'] = options;
                        options = _closure2_slot7;
                        tango['tabBarInactiveTintColor'] = options;
                        golf = _closure2_slot8;
                        tango['tabBarActiveTintColor'] = golf;
                        tango['tabBarItemStyle'] = oscar;
                        entity['tabBarStylesYouTab'] = tango;
                        tango = {};
                        tango['tabBarItemStyle'] = report;
                        entity['tabBarStylesSettings'] = tango;
                        entity['tabBarItemStyle'] = zulu;
                        entity['tabBarIconStyle'] = mike;
                        return entity;
                    }
                };
                entity = zulu.bind(tango)(entity, mike);
                return entity;
            }
        };
        zulu['useTabBarStylesComputed'] = mike;
        return entity;
    }
})();