// app/modules/main_tabs_v2/native/shared_components/tag_list_input/TagListInputTag.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    offset = 0;
    golfie = oscard[offset];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    backup = 2;
    tangon = oscard[backup];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = oscard[backup];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    yankee = 4;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_BASE_PRIMARY;
    verify['backgroundColor'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_4;
    verify['marginHorizontal'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_4;
    foxtra = foxtra / backup;
    verify['margin'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.round;
    verify['borderRadius'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_4;
    verify['padding'] = foxtra;
    foxtra = 'hidden';
    verify['overflow'] = foxtra;
    foxtra = 'row';
    verify['flexDirection'] = foxtra;
    foxtra = 'center';
    verify['alignItems'] = foxtra;
    tangon['tagWrapper'] = verify;
    verify = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.unsafe_rawColors;
    foxtra = foxtra.BRAND_500;
    verify['backgroundColor'] = foxtra;
    tangon['highlightedTagWrapper'] = verify;
    verify = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_4;
    verify['paddingRight'] = yankee;
    verify['marginLeft'] = offset;
    tangon['tagIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/shared_components/tag_list_input/TagListInputTag.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: TagListInputTagComponent
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            verify = entity.tag;
            yankee = entity.selected;
            entity = entity.onPress;
            var _closure2_slot0 = entity;
            entity = _closure1_slot6;
            tangon = undefined;
            romeon = entity.bind(tangon)();
            michal = _closure1_slot0;
            foxtra = _closure1_slot2;
            entity = 5;
            zuuluu = foxtra[entity];
            zuuluu = michal.bind(tangon)(zuuluu);
            golfie = zuuluu.intl;
            report = golfie.formatToPlainString;
            entity = foxtra[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.t;
            zuuluu = entity.0Vb9FR;
            entity = {};
            option = verify.text;
            entity['text'] = option;
            option = report.bind(golfie)(zuuluu, entity);
            zuuluu = _closure1_slot1;
            entity = 6;
            entity = foxtra[entity];
            zuuluu = zuuluu.bind(tangon)(entity);
            entity = function() {
                zuuluu = _closure2_slot0;
                michal = undefined;
                entity = 'remove';
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            entity = zuuluu.bind(tangon)(entity, option);
            report = entity.onAccessibilityAction;
            golfie = entity.accessibilityActions;
            zuuluu = _closure1_slot5;
            entity = 7;
            entity = foxtra[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.PressableOpacity;
            entity = {};
            backup = romeon.tagWrapper;
            foxtra = new Array(2);
            foxtra[0] = backup;
            backup = undefined;
            if(!yankee) { _fun00002_ip = 195; continue _fun00001 }
 189:
            backup = romeon.highlightedTagWrapper;
 195:
            foxtra[1] = backup;
            entity['style'] = foxtra;
            offset = function() { // Original name: onPress
                zuuluu = _closure2_slot0;
                michal = undefined;
                entity = 'select';
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            entity['onPress'] = offset;
            offset = 'button';
            entity['accessibilityRole'] = offset;
            entity['accessibilityLabel'] = option;
            entity['accessibilityActions'] = golfie;
            entity['onAccessibilityAction'] = report;
            report = verify.icon;
            golfie = null;
            report = golfie != report;
            if(!report) { _fun00002_ip = 283; continue _fun00001 }
 248:
            offset = _closure1_slot4;
            option = _closure1_slot3;
            report = {};
            romeon = romeon.tagIcon;
            report['style'] = romeon;
            romeon = verify.icon;
            report['children'] = romeon;
            golfie = offset.bind(tangon)(option, report);
 283:
            report = new Array(2);
            report[0] = golfie;
            option = _closure1_slot4;
            golfie = _closure1_slot0;
            offset = _closure1_slot2;
            oscard = 8;
            oscard = offset[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {'lineClamp': 1, 'variant': 'text-sm/semibold'};
            offset = 'interactive-active';
            if(!yankee) { _fun00002_ip = 349; continue _fun00001 }
 343:
            offset = 'always-white';
 349:
            oscard['color'] = offset;
            verify = verify.text;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['TagListInputTagComponent'] = michal;
    return entity;
})();