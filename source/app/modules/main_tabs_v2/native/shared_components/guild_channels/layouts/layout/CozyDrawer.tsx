// app/modules/main_tabs_v2/native/shared_components/guild_channels/layouts/layout/CozyDrawer.tsx
export default (function(_, argBar, argBaz, __, ___, argFred, argPlugh) {
    oscar = argBar;
    options = argBaz;
    zulu = argFred;
    golf = argPlugh;
    entity = global;
    report = entity.Object;
    tango = report.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(report)(zulu, entity, mike);
    report = 0;
    mike = golf[report];
    entity = undefined;
    yankee = options.bind(entity)(mike);
    mike = 1;
    tango = golf[mike];
    tango = oscar.bind(entity)(tango);
    verify = tango.CHANNEL_LIST_STYLES_COMPACT;
    tango = {};
    foxtrot = {};
    offset = 2;
    offset = golf[offset];
    offset = options.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.md;
    foxtrot['borderRadius'] = offset;
    offset = 4;
    kilo = 20;
    romeo = {'paddingVertical': 4, 'paddingLeft': 20, 'paddingRight': 12};
    foxtrot['padding'] = romeo;
    sizing = 6;
    romeo = 8;
    backup = {'paddingVertical': 6, 'paddingLeft': 8, 'paddingRight': 8};
    foxtrot['paddingPanels'] = backup;
    backup = {'paddingVertical': 4, 'paddingLeft': 8, 'paddingRight': 12};
    foxtrot['paddingThread'] = backup;
    tango['container'] = foxtrot;
    foxtrot = {};
    foxtrot['height'] = kilo;
    backup = {};
    result = 'text-md/semibold';
    backup['variant'] = result;
    foxtrot['text'] = backup;
    tango['channelName'] = foxtrot;
    foxtrot = {};
    backup = {};
    output = 'text-xs/medium';
    backup['variant'] = output;
    foxtrot['text'] = backup;
    output = 3;
    backup = golf[output];
    backup = oscar.bind(entity)(backup);
    backup = backup.IconSizes;
    backup = backup.EXTRA_SMALL;
    foxtrot['messageTypeIconSize'] = backup;
    backup = 'xs';
    foxtrot['messageTypeIconSizeNew'] = backup;
    backup = 18;
    foxtrot['height'] = backup;
    backup = {};
    backup['marginTop'] = report;
    foxtrot['margin'] = backup;
    tango['messagePreview'] = foxtrot;
    foxtrot = {};
    backup = {};
    backup['variant'] = result;
    foxtrot['text'] = backup;
    tango['inviteRow'] = foxtrot;
    foxtrot = {};
    backup = golf[offset];
    backup = oscar.bind(entity)(backup);
    backup = backup.AvatarSizes;
    backup = backup.NORMAL;
    foxtrot['avatarSize'] = backup;
    backup = 5;
    result = golf[backup];
    result = oscar.bind(entity)(result);
    result = result.GuildIconSizes;
    result = result.NORMAL;
    foxtrot['guildIconSize'] = result;
    backup = golf[backup];
    backup = oscar.bind(entity)(backup);
    backup = backup.GuildIconSizes;
    backup = backup.XXSMALL;
    foxtrot['guildBadgeIconSize'] = backup;
    backup = {};
    result = 40;
    backup['size'] = result;
    foxtrot['wrapper'] = backup;
    backup = {};
    backup['size'] = result;
    foxtrot['channelIcon'] = backup;
    backup = {};
    backup['marginRight'] = romeo;
    foxtrot['margin'] = backup;
    backup = {'size': 24, 'lineHeight': 32};
    foxtrot['emoji'] = backup;
    tango['icon'] = foxtrot;
    foxtrot = {};
    backup = {};
    result = -68;
    backup['left'] = result;
    foxtrot['positionThread'] = backup;
    tango['unreadBadge'] = foxtrot;
    foxtrot = {};
    backup = {};
    result = 34;
    backup['top'] = result;
    foxtrot['position'] = backup;
    backup = {};
    result = 27;
    backup['top'] = result;
    foxtrot['positionThread'] = backup;
    tango['mentionBadge'] = foxtrot;
    foxtrot = {};
    backup = {};
    result = 'text-sm/bold';
    backup['variant'] = result;
    foxtrot['text'] = backup;
    backup = {'paddingVertical': 6, 'paddingRight': 12, 'paddingLeft': 12, 'height': 32};
    foxtrot['layout'] = backup;
    backup = {};
    output = golf[output];
    output = oscar.bind(entity)(output);
    output = output.IconSizes;
    output = output.REFRESH_SMALL_16;
    backup['size'] = output;
    sizing = golf[sizing];
    sizing = oscar.bind(entity)(sizing);
    sizing = sizing.GameIconSizes;
    sizing = sizing.SMALL;
    backup['gameSize'] = sizing;
    foxtrot['icon'] = backup;
    tango['joinVoiceButton'] = foxtrot;
    foxtrot = {'left': 48, 'startAndEndHeight': 16, 'transform': null, 'topOffset': 4294967290};
    sizing = {};
    sizing['translateY'] = report;
    backup = new Array(1);
    backup[0] = sizing;
    foxtrot['transform'] = backup;
    tango['threadSpine'] = foxtrot;
    foxtrot = {};
    backup = {};
    backup['marginBottom'] = kilo;
    foxtrot['margin'] = backup;
    tango['happeningNow'] = foxtrot;
    foxtrot = {};
    backup = {'top': 12, 'left': 12};
    foxtrot['position'] = backup;
    backup = {'top': 3, 'left': 4294967279};
    foxtrot['positionThread'] = backup;
    backup = {};
    sizing = {'top': 25, 'left': 11};
    backup['position'] = sizing;
    foxtrot['typingIndicator'] = backup;
    tango['typing'] = foxtrot;
    foxtrot = {};
    backup = {};
    backup['marginVertical'] = kilo;
    foxtrot['margin'] = backup;
    tango['separator'] = foxtrot;
    tango = yankee.bind(entity)(verify, tango);
    report = golf[report];
    options = options.bind(entity)(report);
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    report = mike.CHANNEL_LIST_STYLES_COMPACT;
    mike = {};
    verify = {};
    yankee = {};
    yankee['paddingVertical'] = romeo;
    verify['paddingPanels'] = yankee;
    mike['container'] = verify;
    verify = {};
    offset = golf[offset];
    offset = oscar.bind(entity)(offset);
    offset = offset.AvatarSizes;
    offset = offset.REFRESH_MEDIUM_32;
    verify['avatarSize'] = offset;
    mike['icon'] = verify;
    mike = options.bind(entity)(report, mike);
    report = 7;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/main_tabs_v2/native/shared_components/guild_channels/layouts/layout/CozyDrawer.tsx';
    report = oscar.bind(golf)(report);
    zulu['CHANNEL_LIST_STYLES_COZY_DRAWER'] = tango;
    zulu['CHANNEL_LIST_STYLES_COZY_DRAWER_SMOL'] = mike;
    return entity;
})();