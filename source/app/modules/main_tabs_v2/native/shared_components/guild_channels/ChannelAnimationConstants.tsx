// app/modules/main_tabs_v2/native/shared_components/guild_channels/ChannelAnimationConstants.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    golf = argBar;
    zulu = argFred;
    options = argPlugh;
    var _closure1_slot0 = golf;
    var _closure1_slot1 = options;
    entity = global;
    oscar = entity.Object;
    report = oscar.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscar)(zulu, entity, tango);
    report = {'damping': 35, 'stiffness': 275, 'mass': 1, 'overshootClamping': true, 'restSpeedThreshold': 0.001, 'restDisplacementThreshold': 0.001};
    oscar = 1;
    var _closure1_slot2 = report;
    verify = {};
    entity = 'function ChannelAnimationConstantsTsx1(){const{withSpring,CHANNEL_SPRING_CONFIG}=this.__closure;return{initialValues:{transform:[{scale:0}],opacity:0},animations:{transform:[{scale:withSpring(1,CHANNEL_SPRING_CONFIG)}],opacity:withSpring(1,CHANNEL_SPRING_CONFIG)}};}';
    verify['code'] = entity;
    tango = function() { // Original name: n
        entity = {};
        mike = {};
        tango = {};
        options = 0;
        tango['scale'] = options;
        zulu = new Array(1);
        zulu[0] = tango;
        mike['transform'] = zulu;
        mike['opacity'] = options;
        entity['initialValues'] = mike;
        mike = {};
        offset = {};
        golf = _closure1_slot0;
        zulu = _closure1_slot1;
        oscar = zulu[options];
        tango = undefined;
        yankee = golf.bind(tango)(oscar);
        verify = yankee.withSpring;
        oscar = _closure1_slot2;
        report = 1;
        verify = verify.bind(yankee)(report, oscar);
        offset['scale'] = verify;
        verify = new Array(1);
        verify[0] = offset;
        mike['transform'] = verify;
        zulu = zulu[options];
        tango = golf.bind(tango)(zulu);
        zulu = tango.withSpring;
        zulu = zulu.bind(tango)(report, oscar);
        mike['opacity'] = zulu;
        entity['animations'] = mike;
        return entity;
    };
    offset = {};
    yankee = 0;
    romeo = options[yankee];
    entity = undefined;
    romeo = golf.bind(entity)(romeo);
    romeo = romeo.withSpring;
    offset['withSpring'] = romeo;
    offset['CHANNEL_SPRING_CONFIG'] = report;
    tango['__closure'] = offset;
    offset = 5885186288311.0;
    tango['__workletHash'] = offset;
    tango['__initData'] = verify;
    verify = {};
    offset = 'function ChannelAnimationConstantsTsx2(){const{withSpring,CHANNEL_SPRING_CONFIG}=this.__closure;return{initialValues:{transform:[{scale:1}],opacity:1},animations:{transform:[{scale:withSpring(0,CHANNEL_SPRING_CONFIG)}],opacity:withSpring(0,CHANNEL_SPRING_CONFIG)}};}';
    verify['code'] = offset;
    mike = function() { // Original name: t
        entity = {};
        mike = {};
        report = {};
        zulu = 1;
        report['scale'] = zulu;
        tango = new Array(1);
        tango[0] = report;
        mike['transform'] = tango;
        mike['opacity'] = zulu;
        entity['initialValues'] = mike;
        mike = {};
        verify = {};
        golf = _closure1_slot0;
        zulu = _closure1_slot1;
        oscar = 0;
        options = zulu[oscar];
        tango = undefined;
        offset = golf.bind(tango)(options);
        options = offset.withSpring;
        report = _closure1_slot2;
        options = options.bind(offset)(oscar, report);
        verify['scale'] = options;
        options = new Array(1);
        options[0] = verify;
        mike['transform'] = options;
        zulu = zulu[oscar];
        tango = golf.bind(tango)(zulu);
        zulu = tango.withSpring;
        zulu = zulu.bind(tango)(oscar, report);
        mike['opacity'] = zulu;
        entity['animations'] = mike;
        return entity;
    };
    offset = {};
    yankee = options[yankee];
    yankee = golf.bind(entity)(yankee);
    yankee = yankee.withSpring;
    offset['withSpring'] = yankee;
    offset['CHANNEL_SPRING_CONFIG'] = report;
    mike['__closure'] = offset;
    offset = 1746051409364.0;
    mike['__workletHash'] = offset;
    mike['__initData'] = verify;
    oscar = options[oscar];
    options = golf.bind(entity)(oscar);
    golf = options.fileFinishedImporting;
    oscar = 'modules/main_tabs_v2/native/shared_components/guild_channels/ChannelAnimationConstants.tsx';
    oscar = golf.bind(options)(oscar);
    oscar = 350;
    zulu['MESSAGE_PREVIEW_DELAY'] = oscar;
    zulu['CHANNEL_SPRING_CONFIG'] = report;
    zulu['TYPING_ENTERING'] = tango;
    zulu['TYPING_EXITING'] = mike;
    return entity;
})();