// app/modules/main_tabs_v2/native/shared_components/guild_channels/ChannelAnimationConstants.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    golfie = argBar;
    zuuluu = argFre;
    option = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = option;
    entity = global;
    oscard = entity.Object;
    report = oscard.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscard)(zuuluu, entity, tangon);
    report = {'damping': 35, 'stiffness': 275, 'mass': 1, 'overshootClamping': true, 'restSpeedThreshold': 0.001, 'restDisplacementThreshold': 0.001};
    oscard = 1;
    var _closure1_slot2 = report;
    verify = {};
    entity = 'function ChannelAnimationConstantsTsx1(){const{withSpring,CHANNEL_SPRING_CONFIG}=this.__closure;return{initialValues:{transform:[{scale:0}],opacity:0},animations:{transform:[{scale:withSpring(1,CHANNEL_SPRING_CONFIG)}],opacity:withSpring(1,CHANNEL_SPRING_CONFIG)}};}';
    verify['code'] = entity;
    tangon = function() { // Original name: n
        entity = {};
        michal = {};
        tangon = {};
        option = 0;
        tangon['scale'] = option;
        zuuluu = new Array(1);
        zuuluu[0] = tangon;
        michal['transform'] = zuuluu;
        michal['opacity'] = option;
        entity['initialValues'] = michal;
        michal = {};
        offset = {};
        golfie = _closure1_slot0;
        zuuluu = _closure1_slot1;
        oscard = zuuluu[option];
        tangon = undefined;
        yankee = golfie.bind(tangon)(oscard);
        verify = yankee.withSpring;
        oscard = _closure1_slot2;
        report = 1;
        verify = verify.bind(yankee)(report, oscard);
        offset['scale'] = verify;
        verify = new Array(1);
        verify[0] = offset;
        michal['transform'] = verify;
        zuuluu = zuuluu[option];
        tangon = golfie.bind(tangon)(zuuluu);
        zuuluu = tangon.withSpring;
        zuuluu = zuuluu.bind(tangon)(report, oscard);
        michal['opacity'] = zuuluu;
        entity['animations'] = michal;
        return entity;
    };
    offset = {};
    yankee = 0;
    romeon = option[yankee];
    entity = undefined;
    romeon = golfie.bind(entity)(romeon);
    romeon = romeon.withSpring;
    offset['withSpring'] = romeon;
    offset['CHANNEL_SPRING_CONFIG'] = report;
    tangon['__closure'] = offset;
    offset = 5885186288311.0;
    tangon['__workletHash'] = offset;
    tangon['__initData'] = verify;
    verify = {};
    offset = 'function ChannelAnimationConstantsTsx2(){const{withSpring,CHANNEL_SPRING_CONFIG}=this.__closure;return{initialValues:{transform:[{scale:1}],opacity:1},animations:{transform:[{scale:withSpring(0,CHANNEL_SPRING_CONFIG)}],opacity:withSpring(0,CHANNEL_SPRING_CONFIG)}};}';
    verify['code'] = offset;
    michal = function() { // Original name: t
        entity = {};
        michal = {};
        report = {};
        zuuluu = 1;
        report['scale'] = zuuluu;
        tangon = new Array(1);
        tangon[0] = report;
        michal['transform'] = tangon;
        michal['opacity'] = zuuluu;
        entity['initialValues'] = michal;
        michal = {};
        verify = {};
        golfie = _closure1_slot0;
        zuuluu = _closure1_slot1;
        oscard = 0;
        option = zuuluu[oscard];
        tangon = undefined;
        offset = golfie.bind(tangon)(option);
        option = offset.withSpring;
        report = _closure1_slot2;
        option = option.bind(offset)(oscard, report);
        verify['scale'] = option;
        option = new Array(1);
        option[0] = verify;
        michal['transform'] = option;
        zuuluu = zuuluu[oscard];
        tangon = golfie.bind(tangon)(zuuluu);
        zuuluu = tangon.withSpring;
        zuuluu = zuuluu.bind(tangon)(oscard, report);
        michal['opacity'] = zuuluu;
        entity['animations'] = michal;
        return entity;
    };
    offset = {};
    yankee = option[yankee];
    yankee = golfie.bind(entity)(yankee);
    yankee = yankee.withSpring;
    offset['withSpring'] = yankee;
    offset['CHANNEL_SPRING_CONFIG'] = report;
    michal['__closure'] = offset;
    offset = 1746051409364.0;
    michal['__workletHash'] = offset;
    michal['__initData'] = verify;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/main_tabs_v2/native/shared_components/guild_channels/ChannelAnimationConstants.tsx';
    oscard = golfie.bind(option)(oscard);
    oscard = 350;
    zuuluu['MESSAGE_PREVIEW_DELAY'] = oscard;
    zuuluu['CHANNEL_SPRING_CONFIG'] = report;
    zuuluu['TYPING_ENTERING'] = tangon;
    zuuluu['TYPING_EXITING'] = michal;
    return entity;
})();