// app/modules/main_tabs_v2/native/settings/icons/SettingsNitroIcon.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    option = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot3 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    offset = report.bind(entity)(tangon);
    verify = offset.createStyles;
    golfie = {};
    tangon = {'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'center', 'height': '100%', 'position': 'relative', 'overflow': 'hidden'};
    golfie['container'] = tangon;
    tangon = {};
    romeon = 4;
    tangon['marginLeft'] = romeon;
    golfie['spacing'] = tangon;
    tangon = {'height': '200%', 'backgroundColor': null, 'opacity': 0.15, 'position': 'absolute'};
    yankee = oscard[romeon];
    yankee = foxtra.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.WHITE;
    tangon['backgroundColor'] = yankee;
    backup = {};
    yankee = '30deg';
    backup['rotate'] = yankee;
    yankee = new Array(1);
    yankee[0] = backup;
    tangon['transform'] = yankee;
    golfie['slant'] = tangon;
    tangon = {'width': 12, 'left': 36};
    golfie['large'] = tangon;
    tangon = 8;
    yankee = {'width': 8, 'left': 20};
    golfie['small'] = yankee;
    yankee = {};
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.WHITE;
    yankee['color'] = romeon;
    golfie['icon'] = yankee;
    golfie = verify.bind(offset)(golfie);
    var _closure1_slot5 = golfie;
    golfie = option.memo;
    michal = function(argFoo) {
        entity = argFoo;
        yankee = entity.color;
        entity = _closure1_slot5;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot4;
        michal = _closure1_slot2;
        entity = {};
        report = verify.container;
        entity['style'] = report;
        option = _closure1_slot3;
        report = {};
        offset = verify.slant;
        golfie = new Array(2);
        golfie[0] = offset;
        offset = verify.small;
        golfie[1] = offset;
        report['style'] = golfie;
        golfie = option.bind(tangon)(michal, report);
        report = new Array(4);
        report[0] = golfie;
        golfie = {};
        romeon = verify.slant;
        offset = new Array(2);
        offset[0] = romeon;
        romeon = verify.large;
        offset[1] = romeon;
        golfie['style'] = offset;
        golfie = option.bind(tangon)(michal, golfie);
        report[1] = golfie;
        romeon = _closure1_slot0;
        foxtra = _closure1_slot1;
        oscard = 5;
        oscard = foxtra[oscard];
        oscard = romeon.bind(tangon)(oscard);
        golfie = oscard.NitroWheelIcon;
        oscard = {};
        offset = 'sm';
        oscard['size'] = offset;
        oscard['color'] = yankee;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        oscard = 6;
        oscard = foxtra[oscard];
        oscard = romeon.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'variant': 'text-sm/semibold', 'maxFontSizeMultiplier': 2};
        offset = verify.spacing;
        verify = new Array(2);
        verify[0] = offset;
        offset = {};
        offset['color'] = yankee;
        verify[1] = offset;
        oscard['style'] = verify;
        verify = 7;
        offset = foxtra[verify];
        offset = romeon.bind(tangon)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtra[verify];
        verify = romeon.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.Ipxkoq;
        verify = offset.bind(yankee)(verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[3] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = golfie.bind(option)(michal);
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/icons/SettingsNitroIcon.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();