// app/modules/main_tabs_v2/native/settings/icons/SettingsNitroIcon.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    options = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot2 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot3 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    offset = report.bind(entity)(tango);
    verify = offset.createStyles;
    golf = {};
    tango = {'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'center', 'height': '100%', 'position': 'relative', 'overflow': 'hidden'};
    golf['container'] = tango;
    tango = {};
    romeo = 4;
    tango['marginLeft'] = romeo;
    golf['spacing'] = tango;
    tango = {'height': '200%', 'backgroundColor': null, 'opacity': 0.15, 'position': 'absolute'};
    yankee = oscar[romeo];
    yankee = foxtrot.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.WHITE;
    tango['backgroundColor'] = yankee;
    backup = {};
    yankee = '30deg';
    backup['rotate'] = yankee;
    yankee = new Array(1);
    yankee[0] = backup;
    tango['transform'] = yankee;
    golf['slant'] = tango;
    tango = {'width': 12, 'left': 36};
    golf['large'] = tango;
    tango = 8;
    yankee = {'width': 8, 'left': 20};
    golf['small'] = yankee;
    yankee = {};
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.WHITE;
    yankee['color'] = romeo;
    golf['icon'] = yankee;
    golf = verify.bind(offset)(golf);
    var _closure1_slot5 = golf;
    golf = options.memo;
    mike = function(argFoo) {
        entity = argFoo;
        yankee = entity.color;
        entity = _closure1_slot5;
        tango = undefined;
        verify = entity.bind(tango)();
        zulu = _closure1_slot4;
        mike = _closure1_slot2;
        entity = {};
        report = verify.container;
        entity['style'] = report;
        options = _closure1_slot3;
        report = {};
        offset = verify.slant;
        golf = new Array(2);
        golf[0] = offset;
        offset = verify.small;
        golf[1] = offset;
        report['style'] = golf;
        golf = options.bind(tango)(mike, report);
        report = new Array(4);
        report[0] = golf;
        golf = {};
        romeo = verify.slant;
        offset = new Array(2);
        offset[0] = romeo;
        romeo = verify.large;
        offset[1] = romeo;
        golf['style'] = offset;
        golf = options.bind(tango)(mike, golf);
        report[1] = golf;
        romeo = _closure1_slot0;
        foxtrot = _closure1_slot1;
        oscar = 5;
        oscar = foxtrot[oscar];
        oscar = romeo.bind(tango)(oscar);
        golf = oscar.NitroWheelIcon;
        oscar = {};
        offset = 'sm';
        oscar['size'] = offset;
        oscar['color'] = yankee;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        oscar = 6;
        oscar = foxtrot[oscar];
        oscar = romeo.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'variant': 'text-sm/semibold', 'maxFontSizeMultiplier': 2};
        offset = verify.spacing;
        verify = new Array(2);
        verify[0] = offset;
        offset = {};
        offset['color'] = yankee;
        verify[1] = offset;
        oscar['style'] = verify;
        verify = 7;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        verify = verify.t;
        verify = verify.Ipxkoq;
        verify = offset.bind(yankee)(verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[3] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike = golf.bind(options)(mike);
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/settings/icons/SettingsNitroIcon.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();