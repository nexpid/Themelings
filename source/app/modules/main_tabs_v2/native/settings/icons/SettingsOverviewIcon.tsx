// app/modules/main_tabs_v2/native/settings/icons/SettingsOverviewIcon.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: BadgedSettingsIcon
        _fun116706: for(var _fun116706_ip = 0; ; ) switch(_fun116706_ip) {
 0:
            entity = argFoo;
            output = entity.color;
            report = entity.showRedDot;
            entity = _closure1_slot7;
            tango = undefined;
            foxtrot = entity.bind(tango)();
            zulu = _closure1_slot4;
            mike = _closure1_slot3;
            entity = {};
            oscar = foxtrot.container;
            entity['style'] = oscar;
            if(report) { _fun116706_ip = 104; continue _fun116706 }
 49:
            golf = _closure1_slot4;
            oscar = _closure1_slot0;
            options = _closure1_slot2;
            report = 7;
            report = options[report];
            report = oscar.bind(tango)(report);
            oscar = report.SettingsIcon;
            report = {};
            options = 'sm';
            report['size'] = options;
            report['color'] = output;
            report = golf.bind(tango)(oscar, report);
            _fun116706_ip = 261; continue _fun116706;
 104:
            options = _closure1_slot5;
            golf = _closure1_slot3;
            oscar = {};
            romeo = _closure1_slot4;
            yankee = _closure1_slot1;
            result = _closure1_slot2;
            verify = 3;
            verify = result[verify];
            yankee = yankee.bind(tango)(verify);
            verify = {};
            kilo = _closure1_slot6;
            backup = new Array(1);
            backup[0] = kilo;
            verify['cutouts'] = backup;
            sizing = _closure1_slot4;
            kilo = _closure1_slot0;
            backup = 7;
            backup = result[backup];
            backup = kilo.bind(tango)(backup);
            kilo = backup.SettingsIcon;
            backup = {};
            result = 'sm';
            backup['size'] = result;
            backup['color'] = output;
            backup = sizing.bind(tango)(kilo, backup);
            verify['children'] = backup;
            yankee = romeo.bind(tango)(yankee, verify);
            verify = new Array(2);
            verify[0] = yankee;
            romeo = _closure1_slot4;
            yankee = _closure1_slot3;
            offset = {};
            foxtrot = foxtrot.dot;
            offset['style'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[1] = offset;
            oscar['children'] = verify;
            report = options.bind(tango)(golf, oscar);
 261:
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot8 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot4 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = {};
    options = 3;
    options = oscar[options];
    options = report.bind(entity)(options);
    options = options.CutoutShape;
    options = options.Circle;
    tango['shape'] = options;
    options = 4;
    options = oscar[options];
    options = report.bind(entity)(options);
    options = options.ICON_SIZE;
    verify = options.sm;
    options = 8.5;
    options = verify - options;
    tango['x'] = options;
    options = -1;
    tango['y'] = options;
    options = 10;
    tango['size'] = options;
    var _closure1_slot6 = tango;
    tango = 5;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {};
    yankee = 6;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.WHITE;
    offset['color'] = foxtrot;
    tango['icon'] = offset;
    offset = {'height': 20, 'width': 20, 'aspectRatio': 1, 'position': 'relative', 'alignItems': 'center', 'justifyContent': 'center'};
    tango['container'] = offset;
    offset = {'position': 'absolute', 'height': 6.5, 'width': 6.5, 'backgroundColor': null, 'borderRadius': null, 'right': 0.1, 'top': 0.7};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.STATUS_DANGER;
    offset['backgroundColor'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.lg;
    offset['borderRadius'] = yankee;
    tango['dot'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot7 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        entity = argFoo;
        report = entity.color;
        entity = entity.isBadged;
        tango = _closure1_slot4;
        zulu = _closure1_slot8;
        mike = {};
        mike['color'] = report;
        mike['showRedDot'] = entity;
        entity = undefined;
        entity = tango.bind(entity)(zulu, mike);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/settings/icons/SettingsOverviewIcon.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();