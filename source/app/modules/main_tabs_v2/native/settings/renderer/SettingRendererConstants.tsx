// app/modules/main_tabs_v2/native/settings/renderer/SettingRendererConstants.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    option = argBar;
    zuuluu = argFre;
    verify = argPlu;
    michal = global;
    oscard = michal.Object;
    report = oscard.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscard)(zuuluu, entity, tangon);
    entity = 0;
    tangon = verify[entity];
    entity = undefined;
    tangon = option.bind(entity)(tangon);
    tangon = tangon.TABLE_ROW_HEIGHT;
    oscard = {};
    report = 'route';
    oscard['ROUTE'] = report;
    report = 'pressable';
    oscard['PRESSABLE'] = report;
    report = 'toggle';
    oscard['TOGGLE'] = report;
    report = 'static';
    oscard['STATIC'] = report;
    report = 'radio';
    oscard['RADIO'] = report;
    report = 'checkbox';
    oscard['CHECKBOX'] = report;
    report = 'volume_slider';
    oscard['VOLUME_SLIDER'] = report;
    report = 'slider';
    oscard['SLIDER'] = report;
    report = 'guild_selector';
    oscard['GUILD_SELECTOR'] = report;
    report = {};
    golfie = 'section_label';
    report['SECTION_LABEL'] = golfie;
    golfie = 'section_description';
    report['SECTION_SUBLABEL'] = golfie;
    golfie = 'setting';
    report['SETTING'] = golfie;
    golfie = 'setting_search_result';
    report['SETTING_SEARCH_RESULT'] = golfie;
    offset = michal.Set;
    golfie = oscard.ROUTE;
    michal = new Array(3);
    michal[0] = golfie;
    golfie = oscard.PRESSABLE;
    michal[1] = golfie;
    golfie = oscard.STATIC;
    michal[2] = golfie;
    golfie = offset.prototype;
    golfie = Object.create(golfie, {constructor: {value: offset}});
    backup = golfie;
    foxtra = michal;
    michal = new backup[offset](foxtra, romeon);
    michal = michal instanceof Object ? michal : golfie;
    golfie = 1;
    golfie = verify[golfie];
    verify = option.bind(entity)(golfie);
    option = verify.fileFinishedImporting;
    golfie = 'modules/main_tabs_v2/native/settings/renderer/SettingRendererConstants.tsx';
    golfie = option.bind(verify)(golfie);
    golfie = '0';
    zuuluu['GUILD_SELECT_ALL_SERVERS_OPTION_ID'] = golfie;
    zuuluu['RendererType'] = oscard;
    zuuluu['ListRendererType'] = report;
    zuuluu['SETTINGS_LIST_ITEM_ESTIMATED_SIZE'] = tangon;
    zuuluu['SUPPORTED_SEARCH_RESULT_NO_PARENT_RENDERER_TYPES'] = michal;
    return entity;
})();