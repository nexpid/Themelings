// app/modules/main_tabs_v2/native/settings/renderer/SettingRendererConstants.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    options = argBar;
    zulu = argFred;
    verify = argPlugh;
    mike = global;
    oscar = mike.Object;
    report = oscar.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscar)(zulu, entity, tango);
    entity = 0;
    tango = verify[entity];
    entity = undefined;
    tango = options.bind(entity)(tango);
    tango = tango.TABLE_ROW_HEIGHT;
    oscar = {};
    report = 'route';
    oscar['ROUTE'] = report;
    report = 'pressable';
    oscar['PRESSABLE'] = report;
    report = 'toggle';
    oscar['TOGGLE'] = report;
    report = 'static';
    oscar['STATIC'] = report;
    report = 'radio';
    oscar['RADIO'] = report;
    report = 'checkbox';
    oscar['CHECKBOX'] = report;
    report = 'volume_slider';
    oscar['VOLUME_SLIDER'] = report;
    report = 'slider';
    oscar['SLIDER'] = report;
    report = 'guild_selector';
    oscar['GUILD_SELECTOR'] = report;
    report = {};
    golf = 'section_label';
    report['SECTION_LABEL'] = golf;
    golf = 'section_description';
    report['SECTION_SUBLABEL'] = golf;
    golf = 'setting';
    report['SETTING'] = golf;
    golf = 'setting_search_result';
    report['SETTING_SEARCH_RESULT'] = golf;
    offset = mike.Set;
    golf = oscar.ROUTE;
    mike = new Array(3);
    mike[0] = golf;
    golf = oscar.PRESSABLE;
    mike[1] = golf;
    golf = oscar.STATIC;
    mike[2] = golf;
    golf = offset.prototype;
    golf = Object.create(golf, {constructor: {value: offset}});
    backup = golf;
    foxtrot = mike;
    mike = new backup[offset](foxtrot, romeo);
    mike = mike instanceof Object ? mike : golf;
    golf = 1;
    golf = verify[golf];
    verify = options.bind(entity)(golf);
    options = verify.fileFinishedImporting;
    golf = 'modules/main_tabs_v2/native/settings/renderer/SettingRendererConstants.tsx';
    golf = options.bind(verify)(golf);
    golf = '0';
    zulu['GUILD_SELECT_ALL_SERVERS_OPTION_ID'] = golf;
    zulu['RendererType'] = oscar;
    zulu['ListRendererType'] = report;
    zulu['SETTINGS_LIST_ITEM_ESTIMATED_SIZE'] = tango;
    zulu['SUPPORTED_SEARCH_RESULT_NO_PARENT_RENDERER_TYPES'] = mike;
    return entity;
})();