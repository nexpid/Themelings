// app/modules/main_tabs_v2/native/settings/screens/privacy_and_safety/SettingsSecureFramesScreen.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: UserListItem
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = argFoo;
            foxtrot = mike.userId;
            var _closure2_slot0 = foxtrot;
            yankee = mike.start;
            offset = mike.end;
            zulu = mike.onPress;
            var _closure2_slot1 = zulu;
            mike = _closure1_slot0;
            oscar = _closure1_slot2;
            tango = 8;
            golf = oscar[tango];
            tango = undefined;
            romeo = mike.bind(tango)(golf);
            verify = romeo.useStateFromStores;
            golf = _closure1_slot6;
            options = new Array(1);
            options[0] = golf;
            golf = function() {
                zulu = _closure1_slot6;
                mike = zulu.getUser;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            sizing = verify.bind(romeo)(options, golf);
            golf = 9;
            golf = oscar[golf];
            options = mike.bind(tango)(golf);
            golf = options.useSecureFramesUserVerifiedKeys;
            output = golf.bind(options)(foxtrot);
            golf = _closure1_slot1;
            options = 10;
            options = oscar[options];
            verify = golf.bind(tango)(options);
            options = verify.getFormattedName;
            romeo = options.bind(verify)(sizing);
            kilo = _closure1_slot3;
            backup = kilo.useEffect;
            verify = new Array(1);
            verify[0] = foxtrot;
            options = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 11;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.getUser;
                mike = _closure2_slot0;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            options = backup.bind(kilo)(options, verify);
            backup = _closure1_slot3;
            verify = backup.useCallback;
            options = new Array(2);
            options[0] = zulu;
            options[1] = foxtrot;
            zulu = function() {
                zulu = _closure2_slot1;
                mike = _closure2_slot0;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            verify = verify.bind(backup)(zulu, options);
            zulu = 12;
            zulu = oscar[zulu];
            zulu = golf.bind(tango)(zulu);
            zulu = zulu.bind(tango)();
            backup = zulu.analyticsLocations;
            var _closure2_slot2 = backup;
            options = _closure1_slot3;
            golf = options.useCallback;
            zulu = new Array(2);
            zulu[0] = backup;
            zulu[1] = foxtrot;
            entity = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 13;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = {};
                report = _closure2_slot0;
                mike['userId'] = report;
                tango = _closure2_slot2;
                mike['sourceAnalyticsLocations'] = tango;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            golf = golf.bind(options)(entity, zulu);
            zulu = _closure1_slot8;
            entity = 14;
            entity = oscar[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.TableRow;
            entity = {};
            oscar = null;
            oscar = oscar != sizing;
            if(!oscar) { _fun00002_ip = 364; continue _fun00001 }
 295:
            backup = _closure1_slot8;
            foxtrot = _closure1_slot1;
            result = _closure1_slot2;
            kilo = 15;
            options = result[kilo];
            foxtrot = foxtrot.bind(tango)(options);
            options = {};
            options['user'] = sizing;
            options['guildId'] = tango;
            sizing = _closure1_slot0;
            kilo = result[kilo];
            kilo = sizing.bind(tango)(kilo);
            kilo = kilo.AvatarSizes;
            kilo = kilo.REFRESH_MEDIUM_32;
            options['size'] = kilo;
            oscar = backup.bind(tango)(foxtrot, options);
 364:
            entity['icon'] = oscar;
            oscar = _closure1_slot0;
            options = _closure1_slot2;
            foxtrot = 16;
            backup = options[foxtrot];
            backup = oscar.bind(tango)(backup);
            sizing = backup.intl;
            kilo = sizing.formatToPlainString;
            foxtrot = options[foxtrot];
            foxtrot = oscar.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            backup = foxtrot./MBjYG;
            foxtrot = {};
            output = output.length;
            foxtrot['count'] = output;
            foxtrot = kilo.bind(sizing)(backup, foxtrot);
            entity['subLabel'] = foxtrot;
            entity['label'] = romeo;
            entity['start'] = yankee;
            entity['end'] = offset;
            entity['onPress'] = verify;
            entity['onLongPress'] = golf;
            golf = _closure1_slot8;
            report = 17;
            report = options[report];
            report = oscar.bind(tango)(report);
            oscar = report.TableRowArrow;
            report = {};
            report = golf.bind(tango)(oscar, report);
            entity['trailing'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    entity = function(argFoo) { // Original name: renderItem
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            entity = entity.item;
            tango = entity.type;
            zulu = _closure1_slot11;
            zulu = zulu.USER;
            if(!(tango !== zulu)) { _fun00004_ip = 34; continue _fun00003 }
 30:
            zulu = undefined;
            return zulu;
 34:
            tango = _closure1_slot8;
            zulu = _closure1_slot12;
            mike = {};
            oscar = mike;
            report = entity;
            entity = copyDataProperties(oscar, report);
            entity = undefined;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        }
    };
    var _closure1_slot13 = entity;
    entity = function(argFoo) { // Original name: getItemType
        entity = argFoo;
        entity = entity.type;
        return entity;
    };
    var _closure1_slot14 = entity;
    entity = function(argFoo) { // Original name: keyExtractor
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            zulu = entity.type;
            mike = _closure1_slot11;
            mike = mike.USER;
            if(!(zulu !== mike)) { _fun00006_ip = 29; continue _fun00005 }
 25:
            mike = undefined;
            return mike;
 29:
            entity = entity.userId;
            return entity;
        }
    };
    var _closure1_slot15 = entity;
    entity = function() { // Original name: SettingsSecureFramesFooter
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            mike = _closure1_slot10;
            report = undefined;
            oscar = mike.bind(report)();
            zulu = _closure1_slot0;
            tango = _closure1_slot2;
            mike = 18;
            mike = tango[mike];
            options = zulu.bind(report)(mike);
            mike = options.useNavigation;
            mike = mike.bind(options)();
            var _closure2_slot0 = mike;
            offset = _closure1_slot3;
            verify = offset.useCallback;
            options = new Array(1);
            options[0] = mike;
            mike = function(argFoo) {
                tango = _closure2_slot0;
                zulu = tango.navigate;
                entity = _closure1_slot7;
                mike = entity.SECURE_FRAMES_VERIFIED_DEVICES;
                entity = {};
                report = argFoo;
                entity['userId'] = report;
                entity = zulu.bind(tango)(mike, entity);
                entity = undefined;
                return entity;
            };
            options = verify.bind(offset)(mike, options);
            var _closure2_slot1 = options;
            mike = 19;
            mike = tango[mike];
            zulu = zulu.bind(report)(mike);
            mike = zulu.useSecureFramesVerifiedUserIds;
            foxtrot = mike.bind(zulu)();
            var _closure2_slot2 = foxtrot;
            tango = _closure1_slot3;
            zulu = tango.useMemo;
            mike = new Array(2);
            mike[0] = options;
            mike[1] = foxtrot;
            entity = function() {
                zulu = _closure2_slot2;
                mike = zulu.map;
                entity = function(argFoo, argBar) {
                    zulu = argBar;
                    entity = {};
                    mike = _closure1_slot11;
                    mike = mike.USER;
                    entity['type'] = mike;
                    mike = argFoo;
                    entity['userId'] = mike;
                    tango = _closure2_slot1;
                    entity['onPress'] = tango;
                    tango = 0;
                    tango = tango === zulu;
                    entity['start'] = tango;
                    mike = _closure2_slot2;
                    tango = mike.length;
                    mike = 1;
                    mike = tango - mike;
                    mike = zulu === mike;
                    entity['end'] = mike;
                    return entity;
                };
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            output = zulu.bind(tango)(entity, mike);
            zulu = foxtrot.length;
            mike = 0;
            entity = null;
            if(!(mike !== zulu)) { _fun00008_ip = 539; continue _fun00007 }
 159:
            tango = _closure1_slot9;
            zulu = _closure1_slot4;
            mike = {};
            oscar = oscar.list;
            mike['style'] = oscar;
            verify = _closure1_slot8;
            kilo = _closure1_slot0;
            sizing = _closure1_slot2;
            oscar = 20;
            oscar = sizing[oscar];
            oscar = kilo.bind(report)(oscar);
            options = oscar.Text;
            oscar = {'variant': 'text-sm/semibold', 'color': 'header-secondary'};
            offset = 16;
            yankee = sizing[offset];
            yankee = kilo.bind(report)(yankee);
            backup = yankee.intl;
            romeo = backup.string;
            yankee = sizing[offset];
            yankee = kilo.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee.5b3FND;
            yankee = romeo.bind(backup)(yankee);
            oscar['children'] = yankee;
            options = verify.bind(report)(options, oscar);
            oscar = new Array(3);
            oscar[0] = options;
            yankee = _closure1_slot8;
            verify = _closure1_slot4;
            options = {};
            romeo = {};
            backup = foxtrot.length;
            foxtrot = _closure1_slot5;
            foxtrot = backup * foxtrot;
            romeo['minHeight'] = foxtrot;
            options['style'] = romeo;
            backup = _closure1_slot8;
            romeo = 21;
            romeo = sizing[romeo];
            romeo = kilo.bind(report)(romeo);
            foxtrot = romeo.FlashList;
            romeo = {};
            result = _closure1_slot15;
            romeo['keyExtractor'] = result;
            result = _closure1_slot14;
            romeo['getItemType'] = result;
            result = _closure1_slot13;
            romeo['renderItem'] = result;
            romeo['data'] = output;
            output = _closure1_slot5;
            romeo['estimatedItemSize'] = output;
            romeo = backup.bind(report)(foxtrot, romeo);
            options['children'] = romeo;
            options = yankee.bind(report)(verify, options);
            oscar[1] = options;
            verify = _closure1_slot8;
            golf = 22;
            golf = sizing[golf];
            golf = kilo.bind(report)(golf);
            options = golf.TextWithIOSLinkWorkaround;
            golf = {'variant': 'text-xs/normal', 'color': 'header-secondary'};
            yankee = sizing[offset];
            yankee = kilo.bind(report)(yankee);
            foxtrot = yankee.intl;
            romeo = foxtrot.format;
            offset = sizing[offset];
            offset = kilo.bind(report)(offset);
            offset = offset.t;
            yankee = offset.7w9ymJ;
            offset = {};
            backup = 23;
            backup = sizing[backup];
            kilo = kilo.bind(report)(backup);
            backup = kilo.getSecureFramesVerifiedDevicesHelpdeskArticle;
            backup = backup.bind(kilo)();
            offset['helpArticle'] = backup;
            offset = romeo.bind(foxtrot)(yankee, offset);
            golf['children'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[2] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 539:
            return entity;
        }
    };
    var _closure1_slot16 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    romeo = 1;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.TABLE_ROW_HEIGHT;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.UserSettingsSections;
    var _closure1_slot7 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flexGrow'] = romeo;
    offset = 7;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['paddingHorizontal'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['gap'] = foxtrot;
    tango['container'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_24;
    verify['marginTop'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['gap'] = foxtrot;
    tango['header'] = verify;
    verify = {};
    verify['flexGrow'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['gap'] = offset;
    tango['list'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = {};
    golf = 'USER';
    tango['USER'] = golf;
    var _closure1_slot11 = tango;
    tango = 24;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/settings/screens/privacy_and_safety/SettingsSecureFramesScreen.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: SettingsSecureFramesScreen
        entity = _closure1_slot10;
        tango = undefined;
        verify = entity.bind(tango)();
        zulu = _closure1_slot9;
        mike = _closure1_slot4;
        entity = {};
        report = verify.container;
        entity['style'] = report;
        options = _closure1_slot9;
        golf = _closure1_slot4;
        report = {};
        verify = verify.header;
        report['style'] = verify;
        yankee = _closure1_slot8;
        result = _closure1_slot0;
        echo = _closure1_slot2;
        verify = 20;
        verify = echo[verify];
        verify = result.bind(tango)(verify);
        offset = verify.Text;
        verify = {'variant': 'heading-md/semibold', 'color': 'header-primary'};
        foxtrot = 16;
        romeo = echo[foxtrot];
        romeo = result.bind(tango)(romeo);
        kilo = romeo.intl;
        backup = kilo.string;
        romeo = echo[foxtrot];
        romeo = result.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.9Q/PQk;
        romeo = backup.bind(kilo)(romeo);
        verify['children'] = romeo;
        offset = yankee.bind(tango)(offset, verify);
        verify = new Array(2);
        verify[0] = offset;
        romeo = _closure1_slot8;
        offset = 22;
        offset = echo[offset];
        offset = result.bind(tango)(offset);
        yankee = offset.TextWithIOSLinkWorkaround;
        offset = {'variant': 'text-sm/normal', 'color': 'header-secondary'};
        backup = echo[foxtrot];
        backup = result.bind(tango)(backup);
        sizing = backup.intl;
        kilo = sizing.format;
        foxtrot = echo[foxtrot];
        foxtrot = result.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        backup = foxtrot.8IwQfH;
        foxtrot = {};
        output = 23;
        output = echo[output];
        result = result.bind(tango)(output);
        output = result.getSecureFramesHelpdeskArticle;
        output = output.bind(result)();
        foxtrot['helpArticle'] = output;
        foxtrot = kilo.bind(sizing)(backup, foxtrot);
        offset['children'] = foxtrot;
        offset = romeo.bind(tango)(yankee, offset);
        verify[1] = offset;
        report['children'] = verify;
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        options = _closure1_slot8;
        golf = _closure1_slot16;
        oscar = {};
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();