// app/modules/main_tabs_v2/native/settings/screens/privacy_and_safety/SettingsSecureFramesScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: UserListItem
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            foxtra = michal.userId;
            var _closure2_slot0 = foxtra;
            yankee = michal.start;
            offset = michal.end;
            zuuluu = michal.onPress;
            var _closure2_slot1 = zuuluu;
            michal = _closure1_slot0;
            oscard = _closure1_slot2;
            tangon = 8;
            golfie = oscard[tangon];
            tangon = undefined;
            romeon = michal.bind(tangon)(golfie);
            verify = romeon.useStateFromStores;
            golfie = _closure1_slot6;
            option = new Array(1);
            option[0] = golfie;
            golfie = function() {
                zuuluu = _closure1_slot6;
                michal = zuuluu.getUser;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            sizing = verify.bind(romeon)(option, golfie);
            golfie = 9;
            golfie = oscard[golfie];
            option = michal.bind(tangon)(golfie);
            golfie = option.useSecureFramesUserVerifiedKeys;
            output = golfie.bind(option)(foxtra);
            golfie = _closure1_slot1;
            option = 10;
            option = oscard[option];
            verify = golfie.bind(tangon)(option);
            option = verify.getFormattedName;
            romeon = option.bind(verify)(sizing);
            kiloes = _closure1_slot3;
            backup = kiloes.useEffect;
            verify = new Array(1);
            verify[0] = foxtra;
            option = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 11;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.getUser;
                michal = _closure2_slot0;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            option = backup.bind(kiloes)(option, verify);
            backup = _closure1_slot3;
            verify = backup.useCallback;
            option = new Array(2);
            option[0] = zuuluu;
            option[1] = foxtra;
            zuuluu = function() {
                zuuluu = _closure2_slot1;
                michal = _closure2_slot0;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            verify = verify.bind(backup)(zuuluu, option);
            zuuluu = 12;
            zuuluu = oscard[zuuluu];
            zuuluu = golfie.bind(tangon)(zuuluu);
            zuuluu = zuuluu.bind(tangon)();
            backup = zuuluu.analyticsLocations;
            var _closure2_slot2 = backup;
            option = _closure1_slot3;
            golfie = option.useCallback;
            zuuluu = new Array(2);
            zuuluu[0] = backup;
            zuuluu[1] = foxtra;
            entity = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 13;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = {};
                report = _closure2_slot0;
                michal['userId'] = report;
                tangon = _closure2_slot2;
                michal['sourceAnalyticsLocations'] = tangon;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            golfie = golfie.bind(option)(entity, zuuluu);
            zuuluu = _closure1_slot8;
            entity = 14;
            entity = oscard[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.TableRow;
            entity = {};
            oscard = null;
            oscard = oscard != sizing;
            if(!oscard) { _fun00002_ip = 364; continue _fun00001 }
 295:
            backup = _closure1_slot8;
            foxtra = _closure1_slot1;
            result = _closure1_slot2;
            kiloes = 15;
            option = result[kiloes];
            foxtra = foxtra.bind(tangon)(option);
            option = {};
            option['user'] = sizing;
            option['guildId'] = tangon;
            sizing = _closure1_slot0;
            kiloes = result[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            kiloes = kiloes.AvatarSizes;
            kiloes = kiloes.REFRESH_MEDIUM_32;
            option['size'] = kiloes;
            oscard = backup.bind(tangon)(foxtra, option);
 364:
            entity['icon'] = oscard;
            oscard = _closure1_slot0;
            option = _closure1_slot2;
            foxtra = 16;
            backup = option[foxtra];
            backup = oscard.bind(tangon)(backup);
            sizing = backup.intl;
            kiloes = sizing.formatToPlainString;
            foxtra = option[foxtra];
            foxtra = oscard.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            backup = foxtra./MBjYG;
            foxtra = {};
            output = output.length;
            foxtra['count'] = output;
            foxtra = kiloes.bind(sizing)(backup, foxtra);
            entity['subLabel'] = foxtra;
            entity['label'] = romeon;
            entity['start'] = yankee;
            entity['end'] = offset;
            entity['onPress'] = verify;
            entity['onLongPress'] = golfie;
            golfie = _closure1_slot8;
            report = 17;
            report = option[report];
            report = oscard.bind(tangon)(report);
            oscard = report.TableRowArrow;
            report = {};
            report = golfie.bind(tangon)(oscard, report);
            entity['trailing'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    entity = function(argFoo) { // Original name: renderItem
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            entity = entity.item;
            tangon = entity.type;
            zuuluu = _closure1_slot11;
            zuuluu = zuuluu.USER;
            if(!(tangon !== zuuluu)) { _fun00004_ip = 34; continue _fun00003 }
 30:
            zuuluu = undefined;
            return zuuluu;
 34:
            tangon = _closure1_slot8;
            zuuluu = _closure1_slot12;
            michal = {};
            oscard = michal;
            report = entity;
            entity = copyDataProperties(oscard, report);
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        }
    };
    var _closure1_slot13 = entity;
    entity = function(argFoo) { // Original name: getItemType
        entity = argFoo;
        entity = entity.type;
        return entity;
    };
    var _closure1_slot14 = entity;
    entity = function(argFoo) { // Original name: keyExtractor
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.type;
            michal = _closure1_slot11;
            michal = michal.USER;
            if(!(zuuluu !== michal)) { _fun00006_ip = 29; continue _fun00005 }
 25:
            michal = undefined;
            return michal;
 29:
            entity = entity.userId;
            return entity;
        }
    };
    var _closure1_slot15 = entity;
    entity = function() { // Original name: SettingsSecureFramesFooter
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            michal = _closure1_slot10;
            report = undefined;
            oscard = michal.bind(report)();
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            michal = 18;
            michal = tangon[michal];
            option = zuuluu.bind(report)(michal);
            michal = option.useNavigation;
            michal = michal.bind(option)();
            var _closure2_slot0 = michal;
            offset = _closure1_slot3;
            verify = offset.useCallback;
            option = new Array(1);
            option[0] = michal;
            michal = function(argFoo) {
                tangon = _closure2_slot0;
                zuuluu = tangon.navigate;
                entity = _closure1_slot7;
                michal = entity.SECURE_FRAMES_VERIFIED_DEVICES;
                entity = {};
                report = argFoo;
                entity['userId'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                entity = undefined;
                return entity;
            };
            option = verify.bind(offset)(michal, option);
            var _closure2_slot1 = option;
            michal = 19;
            michal = tangon[michal];
            zuuluu = zuuluu.bind(report)(michal);
            michal = zuuluu.useSecureFramesVerifiedUserIds;
            foxtra = michal.bind(zuuluu)();
            var _closure2_slot2 = foxtra;
            tangon = _closure1_slot3;
            zuuluu = tangon.useMemo;
            michal = new Array(2);
            michal[0] = option;
            michal[1] = foxtra;
            entity = function() {
                zuuluu = _closure2_slot2;
                michal = zuuluu.map;
                entity = function(argFoo, argBar) {
                    zuuluu = argBar;
                    entity = {};
                    michal = _closure1_slot11;
                    michal = michal.USER;
                    entity['type'] = michal;
                    michal = argFoo;
                    entity['userId'] = michal;
                    tangon = _closure2_slot1;
                    entity['onPress'] = tangon;
                    tangon = 0;
                    tangon = tangon === zuuluu;
                    entity['start'] = tangon;
                    michal = _closure2_slot2;
                    tangon = michal.length;
                    michal = 1;
                    michal = tangon - michal;
                    michal = zuuluu === michal;
                    entity['end'] = michal;
                    return entity;
                };
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            output = zuuluu.bind(tangon)(entity, michal);
            zuuluu = foxtra.length;
            michal = 0;
            entity = null;
            if(!(michal !== zuuluu)) { _fun00008_ip = 541; continue _fun00007 }
 159:
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot4;
            michal = {};
            oscard = oscard.list;
            michal['style'] = oscard;
            verify = _closure1_slot8;
            kiloes = _closure1_slot0;
            sizing = _closure1_slot2;
            oscard = 20;
            oscard = sizing[oscard];
            oscard = kiloes.bind(report)(oscard);
            option = oscard.Text;
            oscard = {'variant': 'text-sm/semibold', 'color': 'header-secondary'};
            offset = 16;
            yankee = sizing[offset];
            yankee = kiloes.bind(report)(yankee);
            backup = yankee.intl;
            romeon = backup.string;
            yankee = sizing[offset];
            yankee = kiloes.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee.5b3FND;
            yankee = romeon.bind(backup)(yankee);
            oscard['children'] = yankee;
            option = verify.bind(report)(option, oscard);
            oscard = new Array(3);
            oscard[0] = option;
            yankee = _closure1_slot8;
            verify = _closure1_slot4;
            option = {};
            romeon = {};
            backup = foxtra.length;
            foxtra = _closure1_slot5;
            foxtra = backup * foxtra;
            romeon['minHeight'] = foxtra;
            option['style'] = romeon;
            backup = _closure1_slot8;
            romeon = 21;
            romeon = sizing[romeon];
            romeon = kiloes.bind(report)(romeon);
            foxtra = romeon.FlashList;
            romeon = {};
            result = _closure1_slot15;
            romeon['keyExtractor'] = result;
            result = _closure1_slot14;
            romeon['getItemType'] = result;
            result = _closure1_slot13;
            romeon['renderItem'] = result;
            romeon['data'] = output;
            output = _closure1_slot5;
            romeon['estimatedItemSize'] = output;
            romeon = backup.bind(report)(foxtra, romeon);
            option['children'] = romeon;
            option = yankee.bind(report)(verify, option);
            oscard[1] = option;
            verify = _closure1_slot8;
            golfie = 22;
            golfie = sizing[golfie];
            golfie = kiloes.bind(report)(golfie);
            option = golfie.TextWithIOSLinkWorkaround;
            golfie = {'variant': 'text-xs/normal', 'color': 'header-secondary'};
            yankee = sizing[offset];
            yankee = kiloes.bind(report)(yankee);
            foxtra = yankee.intl;
            romeon = foxtra.format;
            offset = sizing[offset];
            offset = kiloes.bind(report)(offset);
            offset = offset.t;
            yankee = offset.7w9ymJ;
            offset = {};
            backup = 23;
            backup = sizing[backup];
            kiloes = kiloes.bind(report)(backup);
            backup = kiloes.getSecureFramesVerifiedDevicesHelpdeskArticle;
            backup = backup.bind(kiloes)();
            offset['helpArticle'] = backup;
            offset = romeon.bind(foxtra)(yankee, offset);
            golfie['children'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[2] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 541:
            return entity;
        }
    };
    var _closure1_slot16 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.TABLE_ROW_HEIGHT;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UserSettingsSections;
    var _closure1_slot7 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flexGrow'] = romeon;
    offset = 7;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['paddingHorizontal'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['gap'] = foxtra;
    tangon['container'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    verify['marginTop'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['gap'] = foxtra;
    tangon['header'] = verify;
    verify = {};
    verify['flexGrow'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['gap'] = offset;
    tangon['list'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = {};
    golfie = 'USER';
    tangon['USER'] = golfie;
    var _closure1_slot11 = tangon;
    tangon = 24;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/screens/privacy_and_safety/SettingsSecureFramesScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: SettingsSecureFramesScreen
        entity = _closure1_slot10;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot9;
        michal = _closure1_slot4;
        entity = {};
        report = verify.container;
        entity['style'] = report;
        option = _closure1_slot9;
        golfie = _closure1_slot4;
        report = {};
        verify = verify.header;
        report['style'] = verify;
        yankee = _closure1_slot8;
        result = _closure1_slot0;
        echoed = _closure1_slot2;
        verify = 20;
        verify = echoed[verify];
        verify = result.bind(tangon)(verify);
        offset = verify.Text;
        verify = {'variant': 'heading-md/semibold', 'color': 'header-primary'};
        foxtra = 16;
        romeon = echoed[foxtra];
        romeon = result.bind(tangon)(romeon);
        kiloes = romeon.intl;
        backup = kiloes.string;
        romeon = echoed[foxtra];
        romeon = result.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.9Q/PQk;
        romeon = backup.bind(kiloes)(romeon);
        verify['children'] = romeon;
        offset = yankee.bind(tangon)(offset, verify);
        verify = new Array(2);
        verify[0] = offset;
        romeon = _closure1_slot8;
        offset = 22;
        offset = echoed[offset];
        offset = result.bind(tangon)(offset);
        yankee = offset.TextWithIOSLinkWorkaround;
        offset = {'variant': 'text-sm/normal', 'color': 'header-secondary'};
        backup = echoed[foxtra];
        backup = result.bind(tangon)(backup);
        sizing = backup.intl;
        kiloes = sizing.format;
        foxtra = echoed[foxtra];
        foxtra = result.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        backup = foxtra.8IwQfH;
        foxtra = {};
        output = 23;
        output = echoed[output];
        result = result.bind(tangon)(output);
        output = result.getSecureFramesHelpdeskArticle;
        output = output.bind(result)();
        foxtra['helpArticle'] = output;
        foxtra = kiloes.bind(sizing)(backup, foxtra);
        offset['children'] = foxtra;
        offset = romeon.bind(tangon)(yankee, offset);
        verify[1] = offset;
        report['children'] = verify;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        option = _closure1_slot8;
        golfie = _closure1_slot16;
        oscard = {};
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();