// app/modules/main_tabs_v2/native/settings/screens/appearance/components/SettingsAppearanceThemeCarousel.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    verify = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = verify;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = verify.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticsPages;
    var _closure1_slot7 = golfie;
    tangon = tangon.UpsellTypes;
    var _closure1_slot8 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot9 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot11 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = verify.bind(entity)(tangon);
    golfie = option.createAnimatedComponent;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = verify.bind(entity)(tangon);
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = {};
            michal = {};
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            oscard = 8;
            zuuluu = zuuluu[oscard];
            report = undefined;
            zuuluu = tangon.bind(report)(zuuluu);
            tangon = zuuluu.spacing;
            zuuluu = argFoo;
            if(zuuluu) { _fun00002_ip = 48; continue _fun00001 }
 40:
            zuuluu = tangon.PX_24;
            _fun00002_ip = 53; continue _fun00001;
 48:
            zuuluu = tangon.PX_16;
 53:
            michal['gap'] = zuuluu;
            zuuluu = 'center';
            michal['alignItems'] = zuuluu;
            entity['container'] = michal;
            michal = {};
            michal['textAlign'] = zuuluu;
            entity['textCentered'] = michal;
            michal = {'minHeight': 20, 'marginTop': null, 'flexDirection': 'row', 'justifyContent': 'center', 'alignItems': 'center'};
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            golfie = zuuluu[oscard];
            golfie = tangon.bind(report)(golfie);
            golfie = golfie.spacing;
            golfie = golfie.PX_4;
            michal['marginTop'] = golfie;
            golfie = 'row';
            entity['titleContainer'] = michal;
            michal = {};
            verify = 'absolute';
            michal['position'] = verify;
            verify = zuuluu[oscard];
            verify = tangon.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['left'] = verify;
            entity['floatingNuxContainer'] = michal;
            michal = {'borderRadius': null, 'flexDirection': 'row', 'alignItems': 'center'};
            verify = zuuluu[oscard];
            verify = tangon.bind(report)(verify);
            verify = verify.radii;
            verify = verify.lg;
            michal['borderRadius'] = verify;
            verify = zuuluu[oscard];
            verify = tangon.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_4;
            michal['padding'] = verify;
            verify = zuuluu[oscard];
            verify = tangon.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_8;
            michal['paddingRight'] = verify;
            verify = zuuluu[oscard];
            verify = tangon.bind(report)(verify);
            verify = verify.shadows;
            yankee = verify.SHADOW_LOW;
            romeon = michal;
            verify = copyDataProperties(romeon, yankee);
            offset = '#000000';
            verify = 'shadowColor';
            michal[verify] = offset;
            entity['floatingNux'] = michal;
            michal = {};
            offset = {};
            verify = '90deg';
            offset['rotate'] = verify;
            verify = new Array(1);
            verify[0] = offset;
            michal['transform'] = verify;
            entity['arrowLeft'] = michal;
            michal = {'position': 'absolute', 'alignSelf': 'center'};
            option = _closure1_slot6;
            verify = option.THEME_ITEM_WIDTH;
            michal['width'] = verify;
            option = option.THEME_ITEM_HEIGHT;
            michal['height'] = option;
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.radii;
            option = option.md;
            michal['borderRadius'] = option;
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.colors;
            option = option.BUTTON_OUTLINE_BRAND_BORDER;
            michal['borderColor'] = option;
            option = 2;
            michal['borderWidth'] = option;
            entity['selectionBorder'] = michal;
            michal = {};
            michal['flexDirection'] = golfie;
            entity['a11yThemeList'] = michal;
            michal = {};
            golfie = 0;
            michal['flexGrow'] = golfie;
            entity['a11yThemeListScroll'] = michal;
            michal = {};
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.spacing;
            option = option.PX_16;
            michal['marginHorizontal'] = option;
            michal['flexGrow'] = golfie;
            zuuluu = zuuluu[oscard];
            zuuluu = tangon.bind(report)(zuuluu);
            zuuluu = zuuluu.radii;
            zuuluu = zuuluu.round;
            michal['borderRadius'] = zuuluu;
            entity['button'] = michal;
            michal = {'width': '100%', 'height': '100%', 'position': 'absolute', 'overflow': 'hidden'};
            entity['gradient'] = michal;
            return entity;
        }
    };
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot13 = tangon;
    tangon = {};
    golfie = "function SettingsAppearanceThemeCarouselTsx1(){const{withTiming,isMidnightNuxVisible,timingStandard}=this.__closure;return{opacity:withTiming(isMidnightNuxVisible.get()?1:0,timingStandard),pointerEvents:isMidnightNuxVisible.get()?'auto':'none'};}";
    tangon['code'] = golfie;
    var _closure1_slot14 = tangon;
    tangon = 29;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/screens/appearance/components/SettingsAppearanceThemeCarousel.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SettingsAppearanceThemeCarousel
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            papara = entity.themes;
            var _closure2_slot0 = papara;
            cntext = entity.currentThemeIndex;
            var _closure2_slot1 = cntext;
            michal = entity.isPreview;
            var _closure2_slot2 = michal;
            status = entity.defaultIndex;
            limora = entity.deviceWidth;
            var _closure2_slot3 = limora;
            zuuluu = entity.isSynced;
            var _closure2_slot4 = zuuluu;
            foxtra = entity.animatedStyles;
            zuuluu = entity.hasMidnightNux;
            var _closure2_slot5 = zuuluu;
            target = entity.onThemeSelected;
            var _closure2_slot6 = target;
            entity = function(argFoo) { // Original name: renderA11yThemeItem
                entity = argFoo;
                oscard = entity.item;
                golfie = entity.index;
                var _closure3_slot0 = golfie;
                tangon = _closure1_slot9;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 16;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                entity['themePreset'] = oscard;
                option = _closure2_slot2;
                entity['isPreview'] = option;
                oscard = _closure2_slot1;
                oscard = golfie === oscard;
                entity['isSelected'] = oscard;
                report = function() { // Original name: onPress
                    zuuluu = _closure2_slot6;
                    michal = _closure3_slot0;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                entity['onPress'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            var _closure2_slot15 = entity;
            report = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 9;
            entity = golfie[entity];
            tangon = undefined;
            zuuluu = report.bind(tangon)(entity);
            entity = zuuluu.useIsPremiumClientThemesUpsellEnabled;
            entity = entity.bind(zuuluu)();
            var _closure2_slot7 = entity;
            zuuluu = _closure1_slot13;
            backup = zuuluu.bind(tangon)(entity);
            var _closure2_slot8 = backup;
            zuuluu = 10;
            zuuluu = golfie[zuuluu];
            oscard = report.bind(tangon)(zuuluu);
            zuuluu = oscard.useIsScreenReaderEnabled;
            output = zuuluu.bind(oscard)();
            yankee = _closure1_slot3;
            zuuluu = yankee.useRef;
            offset = null;
            equals = zuuluu.bind(yankee)(offset);
            var _closure2_slot9 = equals;
            zuuluu = yankee.useRef;
            zuuluu = zuuluu.bind(yankee)(status);
            var _closure2_slot10 = zuuluu;
            option = yankee.useMemo;
            oscard = new Array(1);
            oscard[0] = papara;
            zuuluu = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = _closure2_slot0;
                    michal = zuuluu.findIndex;
                    entity = function(argFoo) {
                        entity = argFoo;
                        michal = entity.theme;
                        entity = 'midnight';
                        entity = entity === michal;
                        return entity;
                    };
                    michal = michal.bind(zuuluu)(entity);
                    entity = 0;
                    zuuluu = michal >= entity;
                    if(!zuuluu) { _fun00006_ip = 39; continue _fun00005 }
 36:
                    entity = michal;
 39:
                    return entity;
                }
            };
            zuuluu = option.bind(yankee)(zuuluu, oscard);
            var _closure2_slot11 = zuuluu;
            option = 5;
            zuuluu = golfie[option];
            oscard = report.bind(tangon)(zuuluu);
            zuuluu = oscard.useSharedValue;
            sierra = false;
            sizing = zuuluu.bind(oscard)(sierra);
            var _closure2_slot12 = sizing;
            zuuluu = golfie[option];
            oscard = report.bind(tangon)(zuuluu);
            zuuluu = oscard.useSharedValue;
            zuuluu = zuuluu.bind(oscard)(sierra);
            var _closure2_slot13 = zuuluu;
            verify = yankee.useEffect;
            oscard = new Array(2);
            oscard[0] = sizing;
            oscard[1] = zuuluu;
            zuuluu = function() {
                michal = global;
                report = michal.setTimeout;
                tangon = undefined;
                zuuluu = function() {
                    tangon = _closure2_slot12;
                    zuuluu = tangon.set;
                    michal = false;
                    michal = zuuluu.bind(tangon)(michal);
                    zuuluu = _closure2_slot13;
                    michal = zuuluu.set;
                    entity = true;
                    entity = michal.bind(zuuluu)(entity);
                    entity = undefined;
                    return entity;
                };
                michal = 5500;
                michal = report.bind(tangon)(zuuluu, michal);
                var _closure3_slot0 = michal;
                entity = function() {
                    entity = global;
                    zuuluu = entity.clearTimeout;
                    michal = _closure3_slot0;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                return entity;
            };
            zuuluu = verify.bind(yankee)(zuuluu, oscard);
            zuuluu = _closure1_slot1;
            oscard = 11;
            oscard = golfie[oscard];
            result = zuuluu.bind(tangon)(oscard);
            verify = result.debounce;
            oscard = 180;
            oscard = verify.bind(result)(target, oscard);
            var _closure2_slot14 = oscard;
            record = function(argFoo, argBar) { // Original name: onProgressChange
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    zuuluu = argBar;
                    michal = global;
                    tangon = michal.Math;
                    entity = tangon.round;
                    oscard = entity.bind(tangon)(zuuluu);
                    tangon = _closure2_slot10;
                    tangon = tangon.current;
                    if(!(oscard !== tangon)) { _fun00008_ip = 113; continue _fun00007 }
 37:
                    verify = _closure1_slot0;
                    offset = _closure1_slot2;
                    tangon = 12;
                    golfie = offset[tangon];
                    report = undefined;
                    option = verify.bind(report)(golfie);
                    golfie = option.triggerHapticFeedback;
                    tangon = offset[tangon];
                    tangon = verify.bind(report)(tangon);
                    tangon = tangon.HapticFeedbackTypes;
                    tangon = tangon.IMPACT_LIGHT;
                    tangon = golfie.bind(option)(tangon);
                    tangon = _closure2_slot10;
                    tangon['current'] = oscard;
                    tangon = _closure2_slot14;
                    tangon = tangon.bind(report)(oscard);
 113:
                    tangon = _closure2_slot5;
                    if(!tangon) { _fun00008_ip = 245; continue _fun00007 }
 123:
                    tangon = _closure1_slot6;
                    report = tangon.THEME_ITEM_WIDTH;
                    tangon = tangon.THEME_ITEM_HORIZONTAL_MARGIN;
                    oscard = report + tangon;
                    report = michal.Math;
                    tangon = report.ceil;
                    michal = _closure2_slot3;
                    michal = michal / oscard;
                    report = tangon.bind(report)(michal);
                    tangon = _closure2_slot11;
                    michal = 2;
                    michal = report / michal;
                    michal = tangon + michal;
                    tangon = zuuluu < michal;
                    if(!tangon) { _fun00008_ip = 209; continue _fun00007 }
 193:
                    report = _closure2_slot13;
                    zuuluu = report.set;
                    michal = true;
                    michal = zuuluu.bind(report)(michal);
 209:
                    zuuluu = _closure2_slot12;
                    michal = zuuluu.set;
                    report = _closure2_slot13;
                    entity = report.get;
                    entity = entity.bind(report)();
                    entity = !entity;
                    if(!entity) { _fun00008_ip = 240; continue _fun00007 }
 237:
                    entity = !tangon;
 240:
                    entity = michal.bind(zuuluu)(entity);
 245:
                    entity = undefined;
                    return entity;
                }
            };
            sequen = function() { // Original name: getHintText
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    entity = _closure2_slot2;
                    if(!entity) { _fun00010_ip = 33; continue _fun00009 }
 10:
                    zuuluu = _closure2_slot0;
                    entity = _closure2_slot1;
                    entity = zuuluu[entity];
                    zuuluu = entity.colors;
                    entity = null;
                    if(!(entity == zuuluu)) { _fun00010_ip = 117; continue _fun00009 }
 33:
                    entity = _closure2_slot4;
                    golfie = _closure1_slot0;
                    option = _closure1_slot2;
                    zuuluu = 13;
                    tangon = option[zuuluu];
                    oscard = undefined;
                    tangon = golfie.bind(oscard)(tangon);
                    report = tangon.intl;
                    tangon = report.string;
                    zuuluu = option[zuuluu];
                    zuuluu = golfie.bind(oscard)(zuuluu);
                    zuuluu = zuuluu.t;
                    if(entity) { _fun00010_ip = 102; continue _fun00009 }
 89:
                    entity = zuuluu.d5Gu9P;
                    entity = tangon.bind(report)(entity);
                    _fun00010_ip = 115; continue _fun00009;
 102:
                    zuuluu = zuuluu.lhV0Y2;
                    entity = tangon.bind(report)(zuuluu);
 115:
                    _fun00010_ip = 238; continue _fun00009;
 117:
                    michal = _closure2_slot7;
                    golfie = _closure1_slot0;
                    option = _closure1_slot2;
                    zuuluu = 13;
                    report = option[zuuluu];
                    tangon = undefined;
                    report = golfie.bind(tangon)(report);
                    oscard = report.intl;
                    if(michal) { _fun00010_ip = 188; continue _fun00009 }
 154:
                    report = oscard.string;
                    michal = option[zuuluu];
                    michal = golfie.bind(tangon)(michal);
                    michal = michal.t;
                    michal = michal.VqGKm5;
                    michal = report.bind(oscard)(michal);
                    _fun00010_ip = 235; continue _fun00009;
 188:
                    report = oscard.format;
                    zuuluu = option[zuuluu];
                    zuuluu = golfie.bind(tangon)(zuuluu);
                    zuuluu = zuuluu.t;
                    tangon = zuuluu.x2dQxM;
                    zuuluu = {};
                    golfie = function() { // Original name: onClick
                        tangon = _closure1_slot1;
                        report = _closure1_slot2;
                        michal = 14;
                        michal = report[michal];
                        zuuluu = undefined;
                        michal = tangon.bind(zuuluu)(michal);
                        tangon = _closure1_slot0;
                        entity = 15;
                        entity = report[entity];
                        entity = tangon.bind(zuuluu)(entity);
                        entity = entity.EntitlementFeatureNames;
                        entity = entity.CLIENT_THEMES;
                        entity = michal.bind(zuuluu)(entity);
                        return entity;
                    };
                    zuuluu['onClick'] = golfie;
                    michal = report.bind(oscard)(tangon, zuuluu);
 235:
                    entity = michal;
 238:
                    return entity;
                }
            };
            verify = yankee.useCallback;
            oscard = new Array(3);
            oscard[0] = michal;
            oscard[1] = target;
            oscard[2] = cntext;
            michal = function(argFoo) {
                entity = argFoo;
                oscard = entity.item;
                golfie = entity.index;
                var _closure3_slot0 = golfie;
                tangon = _closure1_slot9;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 16;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                entity['themePreset'] = oscard;
                option = _closure2_slot2;
                entity['isPreview'] = option;
                oscard = _closure2_slot1;
                oscard = golfie === oscard;
                entity['isSelected'] = oscard;
                report = function() { // Original name: onPress
                    _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                        entity = _closure2_slot9;
                        entity = entity.current;
                        zuuluu = null;
                        if(!(zuuluu != entity)) { _fun00012_ip = 146; continue _fun00011 }
 21:
                        entity = _closure2_slot9;
                        tangon = entity.current;
                        entity = tangon.getCurrentIndex;
                        report = entity.bind(tangon)();
                        tangon = _closure3_slot0;
                        if(!(report !== tangon)) { _fun00012_ip = 181; continue _fun00011 }
 54:
                        tangon = _closure3_slot0;
                        if(!(report !== tangon)) { _fun00012_ip = 105; continue _fun00011 }
 62:
                        tangon = 0;
                        if(!(tangon !== report)) { _fun00012_ip = 150; continue _fun00011 }
 68:
                        tangon = _closure2_slot9;
                        oscard = tangon.current;
                        report = oscard.scrollTo;
                        tangon = {};
                        golfie = _closure3_slot0;
                        tangon['index'] = golfie;
                        golfie = true;
                        tangon['animated'] = golfie;
                        tangon = report.bind(oscard)(tangon);
 105:
                        tangon = _closure2_slot9;
                        report = tangon.current;
                        if(!(zuuluu != report)) { _fun00012_ip = 146; continue _fun00011 }
 118:
                        tangon = report.scrollTo;
                        zuuluu = {};
                        oscard = _closure3_slot0;
                        zuuluu['index'] = oscard;
                        oscard = true;
                        zuuluu['animated'] = oscard;
                        zuuluu = tangon.bind(report)(zuuluu);
 146:
                        zuuluu = undefined;
                        return zuuluu;
 150:
                        zuuluu = _closure2_slot9;
                        report = zuuluu.current;
                        tangon = report.next;
                        zuuluu = {};
                        oscard = _closure3_slot0;
                        zuuluu['count'] = oscard;
                        zuuluu = tangon.bind(report)(zuuluu);
                        return zuuluu;
 181:
                        zuuluu = _closure2_slot6;
                        michal = _closure3_slot0;
                        entity = undefined;
                        entity = zuuluu.bind(entity)(michal);
                        return entity;
                    }
                };
                entity['onPress'] = report;
                report = false;
                entity['isNew'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            whisks = verify.bind(yankee)(michal, oscard);
            michal = golfie[option];
            verify = report.bind(tangon)(michal);
            oscard = verify.useAnimatedStyle;
            michal = function() { // Original name: D
                _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                    entity = {};
                    tangon = _closure1_slot0;
                    report = _closure1_slot2;
                    michal = 17;
                    michal = report[michal];
                    option = undefined;
                    oscard = tangon.bind(option)(michal);
                    report = oscard.withTiming;
                    golfie = _closure2_slot12;
                    tangon = golfie.get;
                    golfie = tangon.bind(golfie)();
                    tangon = 0;
                    if(!golfie) { _fun00014_ip = 56; continue _fun00013 }
 53:
                    tangon = 1;
 56:
                    golfie = _closure1_slot0;
                    verify = _closure1_slot2;
                    zuuluu = 18;
                    zuuluu = verify[zuuluu];
                    zuuluu = golfie.bind(option)(zuuluu);
                    zuuluu = zuuluu.timingStandard;
                    zuuluu = report.bind(oscard)(tangon, zuuluu);
                    entity['opacity'] = zuuluu;
                    zuuluu = _closure2_slot12;
                    michal = zuuluu.get;
                    zuuluu = michal.bind(zuuluu)();
                    michal = 'none';
                    if(!zuuluu) { _fun00014_ip = 116; continue _fun00013 }
 112:
                    michal = 'auto';
 116:
                    entity['pointerEvents'] = michal;
                    return entity;
                }
            };
            yankee = {};
            result = 17;
            result = golfie[result];
            result = report.bind(tangon)(result);
            result = result.withTiming;
            yankee['withTiming'] = result;
            yankee['isMidnightNuxVisible'] = sizing;
            sizing = 18;
            sizing = golfie[sizing];
            sizing = report.bind(tangon)(sizing);
            sizing = sizing.timingStandard;
            yankee['timingStandard'] = sizing;
            michal['__closure'] = yankee;
            yankee = 3854555745742.0;
            michal['__workletHash'] = yankee;
            yankee = _closure1_slot14;
            michal['__initData'] = yankee;
            yankee = oscard.bind(verify)(michal);
            michal = 19;
            michal = golfie[michal];
            oscard = report.bind(tangon)(michal);
            report = oscard.usePremiumUpsellConfig;
            michal = _closure1_slot8;
            michal = michal.CLIENT_THEMES;
            michal = report.bind(oscard)(michal);
            oscard = michal.useTier0UpsellContent;
            report = michal.onViewAllPerks;
            michal = 20;
            michal = golfie[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = _closure1_slot7;
            michal = michal.PREMIUM_UPSELL_CLIENT_THEMES;
            michal = zuuluu.bind(tangon)(oscard, report, michal);
            echoed = michal.loading;
            sizing = michal.onPress;
            zuuluu = _closure1_slot11;
            michal = _closure1_slot10;
            report = {};
            if(entity) { _fun00004_ip = 1245; continue _fun00003 }
 613:
            golfie = _closure1_slot11;
            oscard = _closure1_slot4;
            entity = {};
            verify = backup.titleContainer;
            entity['style'] = verify;
            verify = papara[cntext];
            verify = verify.colors;
            result = offset != verify;
            verify = null;
            if(!result) { _fun00004_ip = 733; continue _fun00003 }
 651:
            source = _closure1_slot9;
            update = _closure1_slot12;
            result = {};
            vacuum = _closure1_slot1;
            config = _closure1_slot2;
            ctrled = 22;
            ctrled = config[ctrled];
            ctrled = vacuum.bind(tangon)(ctrled);
            result['source'] = ctrled;
            ctrled = foxtra.iconHeaderSecondary;
            result['style'] = ctrled;
            vacuum = _closure1_slot0;
            ctrled = 6;
            ctrled = config[ctrled];
            ctrled = vacuum.bind(tangon)(ctrled);
            ctrled = ctrled.IconSizes;
            ctrled = ctrled.SMALL_20;
            result['size'] = ctrled;
            verify = source.bind(tangon)(update, result);
 733:
            update = new Array(2);
            update[0] = verify;
            verify = _closure1_slot9;
            ctrled = _closure1_slot0;
            source = _closure1_slot2;
            result = 23;
            source = source[result];
            source = ctrled.bind(tangon)(source);
            ctrled = source.Text;
            source = {'animated': true, 'style': null, 'variant': 'heading-sm/semibold'};
            config = true;
            vacuum = foxtra.headerSecondary;
            source['style'] = vacuum;
            quebec = papara[cntext];
            vacuum = quebec.getName;
            vacuum = vacuum.bind(quebec)();
            source['children'] = vacuum;
            source = verify.bind(tangon)(ctrled, source);
            update[1] = source;
            entity['children'] = update;
            oscard = golfie.bind(tangon)(oscard, entity);
            entity = new Array(3);
            entity[0] = oscard;
            golfie = _closure1_slot4;
            oscard = {};
            if(output) { _fun00004_ip = 1068; continue _fun00003 }
 856:
            ctrled = _closure1_slot11;
            source = _closure1_slot10;
            update = {};
            variable37 = _closure1_slot9;
            quebec = _closure1_slot4;
            vacuum = {};
            variable36 = 'none';
            vacuum['pointerEvents'] = variable36;
            variable36 = backup.selectionBorder;
            vacuum['style'] = variable36;
            quebec = variable37.bind(tangon)(quebec, vacuum);
            vacuum = new Array(2);
            vacuum[0] = quebec;
            variable36 = _closure1_slot1;
            variable38 = _closure1_slot2;
            quebec = 21;
            quebec = variable38[quebec];
            variable36 = variable36.bind(tangon)(quebec);
            quebec = {};
            quebec['ref'] = equals;
            quebec['data'] = papara;
            quebec['renderItem'] = whisks;
            variable39 = {'width': null, 'justifyContent': 'center', 'alignItems': 'center'};
            variable39['width'] = limora;
            variable38 = _closure1_slot6;
            variable40 = variable38.THEME_ITEM_HORIZONTAL_MARGIN;
            variable39['marginLeft'] = variable40;
            quebec['style'] = variable39;
            variable40 = variable38.THEME_ITEM_WIDTH;
            variable39 = variable38.THEME_ITEM_HORIZONTAL_MARGIN;
            variable39 = variable40 + variable39;
            quebec['width'] = variable39;
            variable38 = variable38.THEME_ITEM_HEIGHT;
            quebec['height'] = variable38;
            quebec['loop'] = sierra;
            quebec['pagingEnabled'] = sierra;
            quebec['defaultIndex'] = status;
            quebec['onSnapToItem'] = target;
            variable38 = 200;
            quebec['scrollAnimationDuration'] = variable38;
            quebec['onProgressChange'] = record;
            quebec = variable37.bind(tangon)(variable36, quebec);
            vacuum[1] = quebec;
            update['children'] = vacuum;
            update = ctrled.bind(tangon)(source, update);
            _fun00004_ip = 1131; continue _fun00003;
 1068:
            vacuum = _closure1_slot9;
            ctrled = _closure1_slot5;
            source = {};
            source['horizontal'] = config;
            config = backup.a11yThemeListScroll;
            source['style'] = config;
            config = backup.a11yThemeList;
            source['contentContainerStyle'] = config;
            quebec = papara.map;
            config = function(argFoo, argBar) {
                golfie = argBar;
                report = _closure1_slot9;
                tangon = _closure1_slot4;
                zuuluu = {};
                oscard = _closure2_slot15;
                entity = {};
                michal = argFoo;
                entity['item'] = michal;
                entity['index'] = golfie;
                michal = undefined;
                entity = oscard.bind(michal)(entity);
                zuuluu['children'] = entity;
                entity = global;
                entity = entity.HermesInternal;
                oscard = entity.concat;
                entity = 'theme-';
                entity = oscard.bind(entity)(golfie);
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            };
            config = quebec.bind(papara)(config);
            source['children'] = config;
            update = vacuum.bind(tangon)(ctrled, source);
 1131:
            oscard['children'] = update;
            oscard = verify.bind(tangon)(golfie, oscard);
            entity[1] = oscard;
            verify = _closure1_slot9;
            golfie = _closure1_slot0;
            oscard = _closure1_slot2;
            oscard = oscard[result];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {'animated': true, 'style': null, 'variant': 'text-sm/medium'};
            update = foxtra.headerSecondary;
            result = new Array(2);
            result[0] = update;
            update = backup.textCentered;
            result[1] = update;
            oscard['style'] = result;
            result = sequen.bind(tangon)();
            oscard['children'] = result;
            oscard = verify.bind(tangon)(golfie, oscard);
            entity[2] = oscard;
            report['children'] = entity;
            entity = report;
            _fun00004_ip = 2022; continue _fun00003;
 1245:
            verify = _closure1_slot9;
            golfie = _closure1_slot4;
            oscard = {};
            if(output) { _fun00004_ip = 1473; continue _fun00003 }
 1261:
            update = _closure1_slot11;
            result = _closure1_slot10;
            output = {};
            config = _closure1_slot9;
            ctrled = _closure1_slot4;
            source = {};
            vacuum = 'none';
            source['pointerEvents'] = vacuum;
            vacuum = backup.selectionBorder;
            source['style'] = vacuum;
            ctrled = config.bind(tangon)(ctrled, source);
            source = new Array(2);
            source[0] = ctrled;
            vacuum = _closure1_slot1;
            quebec = _closure1_slot2;
            ctrled = 21;
            ctrled = quebec[ctrled];
            vacuum = vacuum.bind(tangon)(ctrled);
            ctrled = {};
            ctrled['ref'] = equals;
            ctrled['data'] = papara;
            ctrled['renderItem'] = whisks;
            whisks = {'width': null, 'justifyContent': 'center', 'alignItems': 'center'};
            whisks['width'] = limora;
            limora = _closure1_slot6;
            equals = limora.THEME_ITEM_HORIZONTAL_MARGIN;
            whisks['marginLeft'] = equals;
            ctrled['style'] = whisks;
            equals = limora.THEME_ITEM_WIDTH;
            whisks = limora.THEME_ITEM_HORIZONTAL_MARGIN;
            whisks = equals + whisks;
            ctrled['width'] = whisks;
            limora = limora.THEME_ITEM_HEIGHT;
            ctrled['height'] = limora;
            ctrled['loop'] = sierra;
            ctrled['pagingEnabled'] = sierra;
            ctrled['defaultIndex'] = status;
            ctrled['onSnapToItem'] = target;
            target = 200;
            ctrled['scrollAnimationDuration'] = target;
            ctrled['onProgressChange'] = record;
            ctrled = config.bind(tangon)(vacuum, ctrled);
            source[1] = ctrled;
            output['children'] = source;
            output = update.bind(tangon)(result, output);
            _fun00004_ip = 1538; continue _fun00003;
 1473:
            source = _closure1_slot9;
            update = _closure1_slot5;
            result = {};
            ctrled = true;
            result['horizontal'] = ctrled;
            ctrled = backup.a11yThemeListScroll;
            result['style'] = ctrled;
            ctrled = backup.a11yThemeList;
            result['contentContainerStyle'] = ctrled;
            vacuum = papara.map;
            ctrled = function(argFoo, argBar) {
                golfie = argBar;
                report = _closure1_slot9;
                tangon = _closure1_slot4;
                zuuluu = {};
                oscard = _closure2_slot15;
                entity = {};
                michal = argFoo;
                entity['item'] = michal;
                entity['index'] = golfie;
                michal = undefined;
                entity = oscard.bind(michal)(entity);
                zuuluu['children'] = entity;
                entity = global;
                entity = entity.HermesInternal;
                oscard = entity.concat;
                entity = 'theme-';
                entity = oscard.bind(entity)(golfie);
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            };
            ctrled = vacuum.bind(papara)(ctrled);
            result['children'] = ctrled;
            output = source.bind(tangon)(update, result);
 1538:
            oscard['children'] = output;
            golfie = verify.bind(tangon)(golfie, oscard);
            oscard = new Array(3);
            oscard[0] = golfie;
            update = _closure1_slot11;
            verify = _closure1_slot4;
            golfie = {};
            source = {};
            output = backup.titleContainer;
            source['style'] = output;
            output = papara[cntext];
            output = output.colors;
            output = offset != output;
            offset = null;
            if(!output) { _fun00004_ip = 1678; continue _fun00003 }
 1596:
            ctrled = _closure1_slot9;
            result = _closure1_slot12;
            output = {};
            config = _closure1_slot1;
            record = _closure1_slot2;
            vacuum = 22;
            vacuum = record[vacuum];
            vacuum = config.bind(tangon)(vacuum);
            output['source'] = vacuum;
            vacuum = foxtra.iconHeaderSecondary;
            output['style'] = vacuum;
            config = _closure1_slot0;
            vacuum = 6;
            vacuum = record[vacuum];
            vacuum = config.bind(tangon)(vacuum);
            vacuum = vacuum.IconSizes;
            vacuum = vacuum.SMALL_20;
            output['size'] = vacuum;
            offset = ctrled.bind(tangon)(result, output);
 1678:
            vacuum = new Array(2);
            vacuum[0] = offset;
            offset = _closure1_slot9;
            output = _closure1_slot0;
            result = _closure1_slot2;
            ctrled = 23;
            config = result[ctrled];
            config = output.bind(tangon)(config);
            record = config.Text;
            config = {'animated': true, 'style': null, 'variant': 'heading-sm/semibold'};
            target = foxtra.headerSecondary;
            config['style'] = target;
            papara = papara[cntext];
            cntext = papara.getName;
            cntext = cntext.bind(papara)();
            config['children'] = cntext;
            config = offset.bind(tangon)(record, config);
            vacuum[1] = config;
            source['children'] = vacuum;
            vacuum = update.bind(tangon)(verify, source);
            source = new Array(2);
            source[0] = vacuum;
            ctrled = result[ctrled];
            ctrled = output.bind(tangon)(ctrled);
            vacuum = ctrled.Text;
            ctrled = {'animated': true, 'style': null, 'variant': 'text-xs/medium'};
            record = foxtra.headerSecondary;
            config = new Array(2);
            config[0] = record;
            record = backup.textCentered;
            config[1] = record;
            ctrled['style'] = config;
            sequen = sequen.bind(tangon)();
            ctrled['children'] = sequen;
            ctrled = offset.bind(tangon)(vacuum, ctrled);
            source[1] = ctrled;
            golfie['children'] = source;
            golfie = update.bind(tangon)(verify, golfie);
            oscard[1] = golfie;
            verify = _closure1_slot1;
            golfie = 24;
            golfie = result[golfie];
            verify = verify.bind(tangon)(golfie);
            golfie = {};
            golfie['loading'] = echoed;
            echoed = backup.button;
            golfie['style'] = echoed;
            golfie['onPress'] = sizing;
            sizing = 13;
            echoed = result[sizing];
            echoed = output.bind(tangon)(echoed);
            update = echoed.intl;
            echoed = update.string;
            sizing = result[sizing];
            sizing = output.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.8x0jKS;
            sizing = echoed.bind(update)(sizing);
            golfie['text'] = sizing;
            sizing = 25;
            sizing = result[sizing];
            sizing = output.bind(tangon)(sizing);
            sizing = sizing.ButtonColors;
            sizing = sizing.GREEN;
            golfie['color'] = sizing;
            kiloes = function() { // Original name: renderLinearGradient
                tangon = _closure1_slot9;
                michal = _closure1_slot1;
                golfie = _closure1_slot2;
                entity = 26;
                entity = golfie[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                oscard = _closure2_slot8;
                oscard = oscard.gradient;
                entity['style'] = oscard;
                oscard = _closure1_slot0;
                report = 27;
                option = golfie[report];
                option = oscard.bind(zuuluu)(option);
                option = option.HorizontalGradient;
                option = option.START;
                entity['start'] = option;
                option = golfie[report];
                option = oscard.bind(zuuluu)(option);
                option = option.HorizontalGradient;
                option = option.END;
                entity['end'] = option;
                report = golfie[report];
                report = oscard.bind(zuuluu)(report);
                report = report.Gradients;
                report = report.PREMIUM_TIER_2_TRI_COLOR;
                entity['colors'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            golfie['renderLinearGradient'] = kiloes;
            golfie = offset.bind(tangon)(verify, golfie);
            oscard[2] = golfie;
            report['children'] = oscard;
            entity = report;
 2022:
            oscard = zuuluu.bind(tangon)(michal, entity);
            zuuluu = _closure1_slot11;
            michal = _closure1_slot4;
            entity = {};
            report = backup.container;
            entity['style'] = report;
            golfie = _closure1_slot9;
            report = {};
            verify = backup.floatingNuxContainer;
            report['style'] = verify;
            kiloes = _closure1_slot1;
            output = _closure1_slot2;
            option = output[option];
            option = kiloes.bind(tangon)(option);
            verify = option.View;
            option = {};
            sizing = backup.floatingNux;
            offset = new Array(4);
            offset[0] = sizing;
            offset[1] = yankee;
            yankee = foxtra.bgSurfaceOverlay;
            offset[2] = yankee;
            yankee = foxtra.borderFaint;
            offset[3] = yankee;
            option['style'] = offset;
            yankee = _closure1_slot12;
            offset = {};
            sizing = backup.arrowLeft;
            backup = new Array(2);
            backup[0] = sizing;
            sizing = foxtra.iconInteractive;
            backup[1] = sizing;
            offset['style'] = backup;
            backup = 28;
            backup = output[backup];
            backup = kiloes.bind(tangon)(backup);
            offset['source'] = backup;
            sizing = _closure1_slot0;
            romeon = 6;
            romeon = output[romeon];
            romeon = sizing.bind(tangon)(romeon);
            romeon = romeon.IconSizes;
            romeon = romeon.REFRESH_SMALL_16;
            offset['size'] = romeon;
            yankee = golfie.bind(tangon)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            yankee = 23;
            yankee = output[yankee];
            yankee = sizing.bind(tangon)(yankee);
            romeon = yankee.Text;
            yankee = {'animated': true, 'style': null, 'variant': 'eyebrow', 'maxFontSizeMultiplier': 1.5};
            foxtra = foxtra.textNormal;
            yankee['style'] = foxtra;
            foxtra = 13;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = output[foxtra];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.y2b7CA;
            foxtra = backup.bind(kiloes)(foxtra);
            yankee['children'] = foxtra;
            yankee = golfie.bind(tangon)(romeon, yankee);
            offset[1] = yankee;
            option['children'] = offset;
            option = zuuluu.bind(tangon)(verify, option);
            report['children'] = option;
            golfie = golfie.bind(tangon)(michal, report);
            report = new Array(2);
            report[0] = golfie;
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();