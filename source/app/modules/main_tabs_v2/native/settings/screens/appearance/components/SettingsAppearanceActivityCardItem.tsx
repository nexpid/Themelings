// app/modules/main_tabs_v2/native/settings/screens/appearance/components/SettingsAppearanceActivityCardItem.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    echoed = tangon.StyleSheet;
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    backup = tangon.HAPPENING_NOW_BADGE_SIZE;
    kiloes = tangon.HAPPENING_NOW_CARD_HEIGHT;
    sizing = tangon.HAPPENING_NOW_CARD_MARGIN_RIGHT;
    result = tangon.HAPPENING_NOW_CARD_PADDING;
    output = tangon.HAPPENING_NOW_CARD_PADDING_RIGHT;
    foxtra = tangon.HAPPENING_NOW_CONTENT_HEIGHT;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = yankee.bind(entity)(tangon);
    golfie = option.createAnimatedComponent;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 8;
    update = oscard[offset];
    update = yankee.bind(entity)(update);
    update = update.radii;
    update = update.lg;
    verify['borderRadius'] = update;
    echoed = echoed.hairlineWidth;
    verify['borderWidth'] = echoed;
    verify['padding'] = result;
    verify['paddingRight'] = output;
    verify['marginRight'] = sizing;
    verify['height'] = kiloes;
    kiloes = 'row';
    verify['flexDirection'] = kiloes;
    kiloes = 'center';
    verify['alignItems'] = kiloes;
    tangon['card'] = verify;
    verify = oscard[offset];
    verify = yankee.bind(entity)(verify);
    verify = verify.shadows;
    verify = verify.SHADOW_MEDIUM;
    tangon['shadow'] = verify;
    verify = {'position': 'absolute', 'top': 0, 'right': 0};
    tangon['cardBadgeWrapper'] = verify;
    verify = {};
    verify['height'] = foxtra;
    verify['minWidth'] = foxtra;
    kiloes = oscard[offset];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_12;
    verify['marginRight'] = kiloes;
    kiloes = oscard[offset];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.md;
    verify['borderRadius'] = kiloes;
    kiloes = 'relative';
    verify['position'] = kiloes;
    tangon['cardImage'] = verify;
    verify = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center', 'width': null, 'height': null, 'borderTopRightRadius': 15};
    verify['width'] = backup;
    verify['height'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.md;
    verify['borderBottomLeftRadius'] = backup;
    tangon['cardBadge'] = verify;
    verify = {};
    backup = '100%';
    verify['height'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.CARD_SECONDARY_BG;
    verify['backgroundColor'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    tangon['cardImageAssetContainer'] = verify;
    verify = {};
    verify['width'] = foxtra;
    verify['height'] = foxtra;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    tangon['cardImageAssetBackground'] = verify;
    verify = {};
    verify['width'] = foxtra;
    verify['height'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    verify['borderRadius'] = foxtra;
    verify['borderWidth'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BORDER_SUBTLE;
    verify['borderColor'] = romeon;
    tangon['cardImageAsset'] = verify;
    verify = {};
    romeon = -4;
    verify['marginLeft'] = romeon;
    tangon['shiftedAvatar'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'center', 'marginLeft': 4294967292, 'height': null, 'minWidth': null, 'borderRadius': null, 'paddingHorizontal': 4, 'paddingTop': 1};
    romeon = 9;
    foxtra = oscard[romeon];
    foxtra = report.bind(entity)(foxtra);
    backup = foxtra.AVATAR_SIZE_MAP;
    foxtra = oscard[romeon];
    foxtra = report.bind(entity)(foxtra);
    foxtra = foxtra.AvatarSizes;
    foxtra = foxtra.XSMALL_20;
    foxtra = backup[foxtra];
    verify['height'] = foxtra;
    foxtra = oscard[romeon];
    foxtra = report.bind(entity)(foxtra);
    foxtra = foxtra.AVATAR_SIZE_MAP;
    romeon = oscard[romeon];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.AvatarSizes;
    romeon = romeon.XSMALL_20;
    romeon = foxtra[romeon];
    verify['minWidth'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    tangon['userCounter'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 19;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/screens/appearance/components/SettingsAppearanceActivityCardItem.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ActivityCardItem
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            sizing = zuuluu.kind;
            ctrled = zuuluu.title;
            result = zuuluu.subtitle;
            update = zuuluu.image;
            michal = zuuluu.avatars;
            foxtra = zuuluu.animatedStyles;
            tangon = undefined;
            var _closure2_slot1 = tangon;
            var _closure2_slot2 = tangon;
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            zuuluu = 10;
            zuuluu = oscard[zuuluu];
            golfie = report.bind(tangon)(zuuluu);
            oscard = golfie.useStateFromStores;
            zuuluu = _closure1_slot4;
            report = new Array(1);
            report[0] = zuuluu;
            zuuluu = function() {
                entity = _closure1_slot4;
                entity = entity.locale;
                return entity;
            };
            cntext = oscard.bind(golfie)(report, zuuluu);
            zuuluu = _closure1_slot8;
            yankee = zuuluu.bind(tangon)();
            var _closure2_slot0 = yankee;
            romeon = null;
            report = romeon == michal;
            zuuluu = undefined;
            if(report) { _fun00002_ip = 141; continue _fun00001 }
 125:
            golfie = michal.slice;
            oscard = 0;
            report = 3;
            zuuluu = golfie.bind(michal)(oscard, report);
 141:
            if(!(romeon == zuuluu)) { _fun00002_ip = 149; continue _fun00001 }
 145:
            zuuluu = new Array(0);
 149:
            _closure2_slot1 = zuuluu;
            report = romeon != michal;
            backup = 0;
            record = 0;
            if(!report) { _fun00002_ip = 178; continue _fun00001 }
 164:
            oscard = michal.length;
            report = zuuluu.length;
            record = oscard - report;
 178:
            _closure2_slot2 = record;
            michal = romeon != michal;
            echoed = null;
            if(!michal) { _fun00002_ip = 208; continue _fun00001 }
 191:
            michal = zuuluu.map;
            entity = function(argFoo, argBar) {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    report = argBar;
                    entity = _closure2_slot1;
                    michal = entity.length;
                    entity = 1;
                    golfie = michal - entity;
                    tangon = _closure1_slot5;
                    michal = _closure1_slot1;
                    option = _closure1_slot2;
                    entity = 11;
                    entity = option[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    verify = argFoo;
                    entity['source'] = verify;
                    verify = _closure1_slot0;
                    sizing = 9;
                    option = option[sizing];
                    option = verify.bind(zuuluu)(option);
                    option = option.AvatarSizes;
                    option = option.XSMALL_20;
                    entity['size'] = option;
                    offset = tangon.bind(zuuluu)(michal, entity);
                    michal = _closure1_slot3;
                    entity = {};
                    option = 0;
                    verify = undefined;
                    if(!(option !== report)) { _fun00004_ip = 122; continue _fun00003 }
 112:
                    yankee = _closure2_slot0;
                    verify = yankee.shiftedAvatar;
 122:
                    entity['style'] = verify;
                    if(!(report === golfie)) { _fun00004_ip = 144; continue _fun00003 }
 130:
                    golfie = _closure2_slot2;
                    oscard = offset;
                    if(!(!(golfie <= option))) { _fun00004_ip = 341; continue _fun00003 }
 144:
                    verify = _closure1_slot5;
                    option = _closure1_slot1;
                    yankee = _closure1_slot2;
                    foxtra = 12;
                    golfie = yankee[foxtra];
                    option = option.bind(zuuluu)(golfie);
                    golfie = {};
                    romeon = {};
                    kiloes = _closure1_slot0;
                    foxtra = yankee[foxtra];
                    foxtra = kiloes.bind(zuuluu)(foxtra);
                    foxtra = foxtra.CutoutShape;
                    foxtra = foxtra.Circle;
                    romeon['shape'] = foxtra;
                    foxtra = yankee[sizing];
                    foxtra = kiloes.bind(zuuluu)(foxtra);
                    backup = foxtra.AVATAR_SIZE_MAP;
                    foxtra = yankee[sizing];
                    foxtra = kiloes.bind(zuuluu)(foxtra);
                    foxtra = foxtra.AvatarSizes;
                    foxtra = foxtra.XSMALL_20;
                    backup = backup[foxtra];
                    foxtra = 4;
                    output = backup - foxtra;
                    backup = 2;
                    backup = output - backup;
                    romeon['x'] = backup;
                    backup = -2;
                    romeon['y'] = backup;
                    backup = yankee[sizing];
                    backup = kiloes.bind(zuuluu)(backup);
                    backup = backup.AVATAR_SIZE_MAP;
                    yankee = yankee[sizing];
                    yankee = kiloes.bind(zuuluu)(yankee);
                    yankee = yankee.AvatarSizes;
                    yankee = yankee.XSMALL_20;
                    yankee = backup[yankee];
                    yankee = yankee + foxtra;
                    romeon['size'] = yankee;
                    yankee = new Array(1);
                    yankee[0] = romeon;
                    golfie['cutouts'] = yankee;
                    golfie['children'] = offset;
                    oscard = verify.bind(zuuluu)(option, golfie);
 341:
                    entity['children'] = oscard;
                    entity = tangon.bind(zuuluu)(michal, entity, report);
                    return entity;
                }
            };
            echoed = michal.bind(zuuluu)(entity);
 208:
            zuuluu = _closure1_slot6;
            offset = _closure1_slot1;
            source = _closure1_slot2;
            verify = 5;
            entity = source[verify];
            entity = offset.bind(tangon)(entity);
            michal = entity.View;
            entity = {};
            oscard = yankee.card;
            report = new Array(3);
            report[0] = oscard;
            oscard = foxtra.borderStrong;
            report[1] = oscard;
            oscard = foxtra.bgRaised;
            report[2] = oscard;
            entity['style'] = report;
            output = _closure1_slot5;
            golfie = _closure1_slot3;
            report = {};
            option = yankee.cardImageAssetContainer;
            oscard = new Array(2);
            oscard[0] = option;
            option = yankee.cardImage;
            oscard[1] = option;
            report['style'] = oscard;
            oscard = {};
            option = yankee.cardImageAssetBackground;
            oscard['style'] = option;
            option = 13;
            option = source[option];
            offset = offset.bind(tangon)(option);
            option = {};
            source = yankee.cardImageAsset;
            option['style'] = source;
            option['source'] = update;
            option = output.bind(tangon)(offset, option);
            oscard['children'] = option;
            oscard = output.bind(tangon)(golfie, oscard);
            report['children'] = oscard;
            oscard = output.bind(tangon)(golfie, report);
            report = new Array(3);
            report[0] = oscard;
            oscard = {};
            option = {};
            offset = {};
            source = 'row';
            offset['flexDirection'] = source;
            option['style'] = offset;
            offset = {};
            update = {};
            update['flexDirection'] = source;
            offset['style'] = update;
            offset['children'] = echoed;
            output = output.bind(tangon)(golfie, offset);
            offset = new Array(2);
            offset[0] = output;
            romeon = null;
            if(!(record > backup)) { _fun00002_ip = 609; continue _fun00001 }
 446:
            echoed = _closure1_slot5;
            output = _closure1_slot1;
            papara = _closure1_slot2;
            backup = papara[verify];
            backup = output.bind(tangon)(backup);
            output = backup.View;
            backup = {};
            source = yankee.userCounter;
            update = new Array(2);
            update[0] = source;
            source = foxtra.bgModStrong;
            update[1] = source;
            backup['style'] = update;
            vacuum = _closure1_slot6;
            config = _closure1_slot0;
            update = 14;
            update = papara[update];
            update = config.bind(tangon)(update);
            source = update.Text;
            update = {'animated': true, 'variant': 'text-xxs/semibold', 'allowFontScaling': false};
            sequen = foxtra.textNormal;
            update['style'] = sequen;
            sequen = 15;
            sequen = papara[sequen];
            config = config.bind(tangon)(sequen);
            sequen = config.humanizeValue;
            config = sequen.bind(config)(record, cntext);
            sequen = ['+'];
            sequen[1] = config;
            update['children'] = sequen;
            update = vacuum.bind(tangon)(source, update);
            backup['children'] = update;
            romeon = echoed.bind(tangon)(output, backup);
 609:
            offset[1] = romeon;
            option['children'] = offset;
            option = zuuluu.bind(tangon)(golfie, option);
            offset = new Array(3);
            offset[0] = option;
            option = _closure1_slot5;
            backup = _closure1_slot0;
            output = _closure1_slot2;
            romeon = 16;
            echoed = output[romeon];
            echoed = backup.bind(tangon)(echoed);
            source = echoed.HappeningNowCardHeader;
            update = {};
            echoed = true;
            update['animated'] = echoed;
            vacuum = foxtra.headerPrimary;
            update['style'] = vacuum;
            update['children'] = ctrled;
            update = option.bind(tangon)(source, update);
            offset[1] = update;
            romeon = output[romeon];
            romeon = backup.bind(tangon)(romeon);
            backup = romeon.HappeningNowCardSubtitle;
            romeon = {};
            romeon['animated'] = echoed;
            echoed = foxtra.headerSecondary;
            romeon['style'] = echoed;
            romeon['children'] = result;
            romeon = option.bind(tangon)(backup, romeon);
            offset[2] = romeon;
            oscard['children'] = offset;
            oscard = zuuluu.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            golfie = _closure1_slot3;
            oscard = {};
            offset = yankee.cardBadgeWrapper;
            oscard['style'] = offset;
            backup = _closure1_slot1;
            verify = output[verify];
            verify = backup.bind(tangon)(verify);
            offset = verify.View;
            verify = {};
            romeon = yankee.cardBadge;
            yankee = new Array(2);
            yankee[0] = romeon;
            romeon = foxtra.bgModSubtle;
            yankee[1] = romeon;
            verify['style'] = yankee;
            romeon = _closure1_slot7;
            yankee = {};
            foxtra = foxtra.activityIcon;
            yankee['style'] = foxtra;
            foxtra = 6;
            foxtra = output[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            foxtra = foxtra.Sizes;
            foxtra = foxtra.REFRESH_SMALL_16;
            yankee['size'] = foxtra;
            foxtra = 'stretch';
            yankee['resizeMode'] = foxtra;
            foxtra = 'activity';
            if(!(foxtra !== sizing)) { _fun00002_ip = 892; continue _fun00001 }
 879:
            sizing = _closure1_slot2;
            foxtra = 18;
            foxtra = sizing[foxtra];
            _fun00002_ip = 903; continue _fun00001;
 892:
            sizing = _closure1_slot2;
            kiloes = 17;
            foxtra = sizing[kiloes];
 903:
            foxtra = backup.bind(tangon)(foxtra);
            yankee['source'] = foxtra;
            yankee = option.bind(tangon)(romeon, yankee);
            verify['children'] = yankee;
            verify = option.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();