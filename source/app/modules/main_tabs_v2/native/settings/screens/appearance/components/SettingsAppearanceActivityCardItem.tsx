// app/modules/main_tabs_v2/native/settings/screens/appearance/components/SettingsAppearanceActivityCardItem.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    romeo = 1;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    echo = tango.StyleSheet;
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    backup = tango.HAPPENING_NOW_BADGE_SIZE;
    kilo = tango.HAPPENING_NOW_CARD_HEIGHT;
    sizing = tango.HAPPENING_NOW_CARD_MARGIN_RIGHT;
    result = tango.HAPPENING_NOW_CARD_PADDING;
    output = tango.HAPPENING_NOW_CARD_PADDING_RIGHT;
    foxtrot = tango.HAPPENING_NOW_CONTENT_HEIGHT;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 5;
    tango = oscar[tango];
    options = yankee.bind(entity)(tango);
    golf = options.createAnimatedComponent;
    tango = 6;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 8;
    update = oscar[offset];
    update = yankee.bind(entity)(update);
    update = update.radii;
    update = update.lg;
    verify['borderRadius'] = update;
    echo = echo.hairlineWidth;
    verify['borderWidth'] = echo;
    verify['padding'] = result;
    verify['paddingRight'] = output;
    verify['marginRight'] = sizing;
    verify['height'] = kilo;
    kilo = 'row';
    verify['flexDirection'] = kilo;
    kilo = 'center';
    verify['alignItems'] = kilo;
    tango['card'] = verify;
    verify = oscar[offset];
    verify = yankee.bind(entity)(verify);
    verify = verify.shadows;
    verify = verify.SHADOW_MEDIUM;
    tango['shadow'] = verify;
    verify = {'position': 'absolute', 'top': 0, 'right': 0};
    tango['cardBadgeWrapper'] = verify;
    verify = {};
    verify['height'] = foxtrot;
    verify['minWidth'] = foxtrot;
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_12;
    verify['marginRight'] = kilo;
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.md;
    verify['borderRadius'] = kilo;
    kilo = 'relative';
    verify['position'] = kilo;
    tango['cardImage'] = verify;
    verify = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center', 'width': null, 'height': null, 'borderTopRightRadius': 15};
    verify['width'] = backup;
    verify['height'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.md;
    verify['borderBottomLeftRadius'] = backup;
    tango['cardBadge'] = verify;
    verify = {};
    backup = '100%';
    verify['height'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.CARD_SECONDARY_BG;
    verify['backgroundColor'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    tango['cardImageAssetContainer'] = verify;
    verify = {};
    verify['width'] = foxtrot;
    verify['height'] = foxtrot;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    tango['cardImageAssetBackground'] = verify;
    verify = {};
    verify['width'] = foxtrot;
    verify['height'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    verify['borderRadius'] = foxtrot;
    verify['borderWidth'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BORDER_SUBTLE;
    verify['borderColor'] = romeo;
    tango['cardImageAsset'] = verify;
    verify = {};
    romeo = -4;
    verify['marginLeft'] = romeo;
    tango['shiftedAvatar'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'center', 'marginLeft': 4294967292, 'height': null, 'minWidth': null, 'borderRadius': null, 'paddingHorizontal': 4, 'paddingTop': 1};
    romeo = 9;
    foxtrot = oscar[romeo];
    foxtrot = report.bind(entity)(foxtrot);
    backup = foxtrot.AVATAR_SIZE_MAP;
    foxtrot = oscar[romeo];
    foxtrot = report.bind(entity)(foxtrot);
    foxtrot = foxtrot.AvatarSizes;
    foxtrot = foxtrot.XSMALL_20;
    foxtrot = backup[foxtrot];
    verify['height'] = foxtrot;
    foxtrot = oscar[romeo];
    foxtrot = report.bind(entity)(foxtrot);
    foxtrot = foxtrot.AVATAR_SIZE_MAP;
    romeo = oscar[romeo];
    romeo = report.bind(entity)(romeo);
    romeo = romeo.AvatarSizes;
    romeo = romeo.XSMALL_20;
    romeo = foxtrot[romeo];
    verify['minWidth'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    tango['userCounter'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 19;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/settings/screens/appearance/components/SettingsAppearanceActivityCardItem.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ActivityCardItem
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zulu = argFoo;
            sizing = zulu.kind;
            control = zulu.title;
            result = zulu.subtitle;
            update = zulu.image;
            mike = zulu.avatars;
            foxtrot = zulu.animatedStyles;
            tango = undefined;
            var _closure2_slot1 = tango;
            var _closure2_slot2 = tango;
            report = _closure1_slot0;
            oscar = _closure1_slot2;
            zulu = 10;
            zulu = oscar[zulu];
            golf = report.bind(tango)(zulu);
            oscar = golf.useStateFromStores;
            zulu = _closure1_slot4;
            report = new Array(1);
            report[0] = zulu;
            zulu = function() {
                entity = _closure1_slot4;
                entity = entity.locale;
                return entity;
            };
            context = oscar.bind(golf)(report, zulu);
            zulu = _closure1_slot8;
            yankee = zulu.bind(tango)();
            var _closure2_slot0 = yankee;
            romeo = null;
            report = romeo == mike;
            zulu = undefined;
            if(report) { _fun00002_ip = 141; continue _fun00001 }
 125:
            golf = mike.slice;
            oscar = 0;
            report = 3;
            zulu = golf.bind(mike)(oscar, report);
 141:
            if(!(romeo == zulu)) { _fun00002_ip = 149; continue _fun00001 }
 145:
            zulu = new Array(0);
 149:
            _closure2_slot1 = zulu;
            report = romeo != mike;
            backup = 0;
            record = 0;
            if(!report) { _fun00002_ip = 178; continue _fun00001 }
 164:
            oscar = mike.length;
            report = zulu.length;
            record = oscar - report;
 178:
            _closure2_slot2 = record;
            mike = romeo != mike;
            echo = null;
            if(!mike) { _fun00002_ip = 208; continue _fun00001 }
 191:
            mike = zulu.map;
            entity = function(argFoo, argBar) {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    report = argBar;
                    entity = _closure2_slot1;
                    mike = entity.length;
                    entity = 1;
                    golf = mike - entity;
                    tango = _closure1_slot5;
                    mike = _closure1_slot1;
                    options = _closure1_slot2;
                    entity = 11;
                    entity = options[entity];
                    zulu = undefined;
                    mike = mike.bind(zulu)(entity);
                    entity = {};
                    verify = argFoo;
                    entity['source'] = verify;
                    verify = _closure1_slot0;
                    sizing = 9;
                    options = options[sizing];
                    options = verify.bind(zulu)(options);
                    options = options.AvatarSizes;
                    options = options.XSMALL_20;
                    entity['size'] = options;
                    offset = tango.bind(zulu)(mike, entity);
                    mike = _closure1_slot3;
                    entity = {};
                    options = 0;
                    verify = undefined;
                    if(!(options !== report)) { _fun00004_ip = 122; continue _fun00003 }
 112:
                    yankee = _closure2_slot0;
                    verify = yankee.shiftedAvatar;
 122:
                    entity['style'] = verify;
                    if(!(report === golf)) { _fun00004_ip = 144; continue _fun00003 }
 130:
                    golf = _closure2_slot2;
                    oscar = offset;
                    if(!(!(golf <= options))) { _fun00004_ip = 341; continue _fun00003 }
 144:
                    verify = _closure1_slot5;
                    options = _closure1_slot1;
                    yankee = _closure1_slot2;
                    foxtrot = 12;
                    golf = yankee[foxtrot];
                    options = options.bind(zulu)(golf);
                    golf = {};
                    romeo = {};
                    kilo = _closure1_slot0;
                    foxtrot = yankee[foxtrot];
                    foxtrot = kilo.bind(zulu)(foxtrot);
                    foxtrot = foxtrot.CutoutShape;
                    foxtrot = foxtrot.Circle;
                    romeo['shape'] = foxtrot;
                    foxtrot = yankee[sizing];
                    foxtrot = kilo.bind(zulu)(foxtrot);
                    backup = foxtrot.AVATAR_SIZE_MAP;
                    foxtrot = yankee[sizing];
                    foxtrot = kilo.bind(zulu)(foxtrot);
                    foxtrot = foxtrot.AvatarSizes;
                    foxtrot = foxtrot.XSMALL_20;
                    backup = backup[foxtrot];
                    foxtrot = 4;
                    output = backup - foxtrot;
                    backup = 2;
                    backup = output - backup;
                    romeo['x'] = backup;
                    backup = -2;
                    romeo['y'] = backup;
                    backup = yankee[sizing];
                    backup = kilo.bind(zulu)(backup);
                    backup = backup.AVATAR_SIZE_MAP;
                    yankee = yankee[sizing];
                    yankee = kilo.bind(zulu)(yankee);
                    yankee = yankee.AvatarSizes;
                    yankee = yankee.XSMALL_20;
                    yankee = backup[yankee];
                    yankee = yankee + foxtrot;
                    romeo['size'] = yankee;
                    yankee = new Array(1);
                    yankee[0] = romeo;
                    golf['cutouts'] = yankee;
                    golf['children'] = offset;
                    oscar = verify.bind(zulu)(options, golf);
 341:
                    entity['children'] = oscar;
                    entity = tango.bind(zulu)(mike, entity, report);
                    return entity;
                }
            };
            echo = mike.bind(zulu)(entity);
 208:
            zulu = _closure1_slot6;
            offset = _closure1_slot1;
            source = _closure1_slot2;
            verify = 5;
            entity = source[verify];
            entity = offset.bind(tango)(entity);
            mike = entity.View;
            entity = {};
            oscar = yankee.card;
            report = new Array(3);
            report[0] = oscar;
            oscar = foxtrot.borderStrong;
            report[1] = oscar;
            oscar = foxtrot.bgRaised;
            report[2] = oscar;
            entity['style'] = report;
            output = _closure1_slot5;
            golf = _closure1_slot3;
            report = {};
            options = yankee.cardImageAssetContainer;
            oscar = new Array(2);
            oscar[0] = options;
            options = yankee.cardImage;
            oscar[1] = options;
            report['style'] = oscar;
            oscar = {};
            options = yankee.cardImageAssetBackground;
            oscar['style'] = options;
            options = 13;
            options = source[options];
            offset = offset.bind(tango)(options);
            options = {};
            source = yankee.cardImageAsset;
            options['style'] = source;
            options['source'] = update;
            options = output.bind(tango)(offset, options);
            oscar['children'] = options;
            oscar = output.bind(tango)(golf, oscar);
            report['children'] = oscar;
            oscar = output.bind(tango)(golf, report);
            report = new Array(3);
            report[0] = oscar;
            oscar = {};
            options = {};
            offset = {};
            source = 'row';
            offset['flexDirection'] = source;
            options['style'] = offset;
            offset = {};
            update = {};
            update['flexDirection'] = source;
            offset['style'] = update;
            offset['children'] = echo;
            output = output.bind(tango)(golf, offset);
            offset = new Array(2);
            offset[0] = output;
            romeo = null;
            if(!(record > backup)) { _fun00002_ip = 609; continue _fun00001 }
 446:
            echo = _closure1_slot5;
            output = _closure1_slot1;
            papa = _closure1_slot2;
            backup = papa[verify];
            backup = output.bind(tango)(backup);
            output = backup.View;
            backup = {};
            source = yankee.userCounter;
            update = new Array(2);
            update[0] = source;
            source = foxtrot.bgModStrong;
            update[1] = source;
            backup['style'] = update;
            vacuum = _closure1_slot6;
            config = _closure1_slot0;
            update = 14;
            update = papa[update];
            update = config.bind(tango)(update);
            source = update.Text;
            update = {'animated': true, 'variant': 'text-xxs/semibold', 'allowFontScaling': false};
            sequence = foxtrot.textNormal;
            update['style'] = sequence;
            sequence = 15;
            sequence = papa[sequence];
            config = config.bind(tango)(sequence);
            sequence = config.humanizeValue;
            config = sequence.bind(config)(record, context);
            sequence = ['+'];
            sequence[1] = config;
            update['children'] = sequence;
            update = vacuum.bind(tango)(source, update);
            backup['children'] = update;
            romeo = echo.bind(tango)(output, backup);
 609:
            offset[1] = romeo;
            options['children'] = offset;
            options = zulu.bind(tango)(golf, options);
            offset = new Array(3);
            offset[0] = options;
            options = _closure1_slot5;
            backup = _closure1_slot0;
            output = _closure1_slot2;
            romeo = 16;
            echo = output[romeo];
            echo = backup.bind(tango)(echo);
            source = echo.HappeningNowCardHeader;
            update = {};
            echo = true;
            update['animated'] = echo;
            vacuum = foxtrot.headerPrimary;
            update['style'] = vacuum;
            update['children'] = control;
            update = options.bind(tango)(source, update);
            offset[1] = update;
            romeo = output[romeo];
            romeo = backup.bind(tango)(romeo);
            backup = romeo.HappeningNowCardSubtitle;
            romeo = {};
            romeo['animated'] = echo;
            echo = foxtrot.headerSecondary;
            romeo['style'] = echo;
            romeo['children'] = result;
            romeo = options.bind(tango)(backup, romeo);
            offset[2] = romeo;
            oscar['children'] = offset;
            oscar = zulu.bind(tango)(golf, oscar);
            report[1] = oscar;
            golf = _closure1_slot3;
            oscar = {};
            offset = yankee.cardBadgeWrapper;
            oscar['style'] = offset;
            backup = _closure1_slot1;
            verify = output[verify];
            verify = backup.bind(tango)(verify);
            offset = verify.View;
            verify = {};
            romeo = yankee.cardBadge;
            yankee = new Array(2);
            yankee[0] = romeo;
            romeo = foxtrot.bgModSubtle;
            yankee[1] = romeo;
            verify['style'] = yankee;
            romeo = _closure1_slot7;
            yankee = {};
            foxtrot = foxtrot.activityIcon;
            yankee['style'] = foxtrot;
            foxtrot = 6;
            foxtrot = output[foxtrot];
            foxtrot = backup.bind(tango)(foxtrot);
            foxtrot = foxtrot.Sizes;
            foxtrot = foxtrot.REFRESH_SMALL_16;
            yankee['size'] = foxtrot;
            foxtrot = 'stretch';
            yankee['resizeMode'] = foxtrot;
            foxtrot = 'activity';
            if(!(foxtrot !== sizing)) { _fun00002_ip = 892; continue _fun00001 }
 879:
            sizing = _closure1_slot2;
            foxtrot = 18;
            foxtrot = sizing[foxtrot];
            _fun00002_ip = 903; continue _fun00001;
 892:
            sizing = _closure1_slot2;
            kilo = 17;
            foxtrot = sizing[kilo];
 903:
            foxtrot = backup.bind(tango)(foxtrot);
            yankee['source'] = foxtrot;
            yankee = options.bind(tango)(romeo, yankee);
            verify['children'] = yankee;
            verify = options.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();