// app/modules/main_tabs_v2/native/settings/screens/appearance/components/SettingsAppearanceChannelList.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    foxtra = 1;
    tangon = oscard[foxtra];
    tangon = report.bind(entity)(tangon);
    romeon = tangon.StyleSheet;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    output = romeon.absoluteFillObject;
    result = verify;
    offset = copyDataProperties(result, output);
    offset = 4;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    kiloes = backup.xl;
    backup = 'borderRadius';
    verify[backup] = kiloes;
    kiloes = 'hidden';
    backup = 'overflow';
    verify[backup] = kiloes;
    tangon['channelPreviewGradient'] = verify;
    verify = {};
    verify['flex'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['marginTop'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.xl;
    verify['borderRadius'] = foxtra;
    foxtra = '100%';
    verify['width'] = foxtra;
    romeon = romeon.hairlineWidth;
    verify['borderWidth'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.shadows;
    output = offset.SHADOW_HIGH;
    result = verify;
    offset = copyDataProperties(result, output);
    yankee = '#000000';
    offset = 'shadowColor';
    verify[offset] = yankee;
    tangon['channelPreviewCardContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/screens/appearance/components/SettingsAppearanceChannelList.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ChannelListPreview
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            offset = entity.themes;
            verify = entity.themeIndex;
            romeon = entity.animatedStyles;
            var _closure2_slot0 = romeon;
            sizing = entity.data;
            report = entity.useGradientBackground;
            yankee = entity.isNitroLocked;
            entity = _closure1_slot7;
            tangon = undefined;
            foxtra = entity.bind(tangon)();
            oscard = _closure1_slot3;
            zuuluu = oscard.useCallback;
            michal = new Array(1);
            michal[0] = romeon;
            entity = function(argFoo) {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = argFoo;
                    report = entity.item;
                    michal = report.kind;
                    entity = 'channel-row';
                    if(!(entity !== michal)) { _fun00004_ip = 180; continue _fun00003 }
 26:
                    entity = 'messages-header';
                    if(!(entity !== michal)) { _fun00004_ip = 115; continue _fun00003 }
 36:
                    entity = 'activity-cards';
                    if(!(entity !== michal)) { _fun00004_ip = 50; continue _fun00003 }
 46:
                    entity = null;
                    return entity;
 50:
                    tangon = _closure1_slot5;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 7;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    verify = entity;
                    option = report;
                    oscard = copyDataProperties(verify, option);
                    golfie = _closure2_slot0;
                    oscard = 'animatedStyles';
                    entity[oscard] = golfie;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
 115:
                    tangon = _closure1_slot5;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 6;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    verify = entity;
                    option = report;
                    oscard = copyDataProperties(verify, option);
                    golfie = _closure2_slot0;
                    oscard = 'animatedStyles';
                    entity[oscard] = golfie;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
 180:
                    tangon = _closure1_slot5;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 5;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    verify = entity;
                    option = report;
                    report = copyDataProperties(verify, option);
                    oscard = _closure2_slot0;
                    report = 'animatedStyles';
                    entity[report] = oscard;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                }
            };
            kiloes = zuuluu.bind(oscard)(entity, michal);
            zuuluu = _closure1_slot6;
            michal = _closure1_slot1;
            oscard = _closure1_slot2;
            entity = 8;
            entity = oscard[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.View;
            entity = {'style': null, 'accessible': true, 'accessibilityRole': 'image'};
            option = foxtra.channelPreviewCardContainer;
            oscard = new Array(3);
            oscard[0] = option;
            option = romeon.borderStrong;
            oscard[1] = option;
            option = !report;
            if(!option) { _fun00002_ip = 166; continue _fun00001 }
 160:
            option = romeon.bgBasePrimary;
 166:
            oscard[2] = option;
            entity['style'] = oscard;
            output = _closure1_slot0;
            result = _closure1_slot2;
            oscard = 9;
            option = result[oscard];
            option = output.bind(tangon)(option);
            romeon = option.intl;
            option = romeon.string;
            oscard = result[oscard];
            oscard = output.bind(tangon)(oscard);
            oscard = oscard.t;
            oscard = oscard.iGxm39;
            oscard = option.bind(romeon)(oscard);
            entity['accessibilityLabel'] = oscard;
            oscard = null;
            if(!report) { _fun00002_ip = 317; continue _fun00001 }
 242:
            romeon = _closure1_slot5;
            option = _closure1_slot4;
            report = {};
            foxtra = foxtra.channelPreviewGradient;
            report['style'] = foxtra;
            output = _closure1_slot1;
            result = _closure1_slot2;
            foxtra = 10;
            foxtra = result[foxtra];
            output = output.bind(tangon)(foxtra);
            foxtra = {};
            foxtra['themes'] = offset;
            foxtra['themeIndex'] = verify;
            result = false;
            foxtra['isDimmed'] = result;
            foxtra = romeon.bind(tangon)(output, foxtra);
            report['children'] = foxtra;
            oscard = romeon.bind(tangon)(option, report);
 317:
            report = new Array(3);
            report[0] = oscard;
            option = _closure1_slot5;
            foxtra = _closure1_slot0;
            romeon = _closure1_slot2;
            oscard = 11;
            oscard = romeon[oscard];
            oscard = foxtra.bind(tangon)(oscard);
            foxtra = oscard.FlashList;
            oscard = {};
            output = {};
            golfie = _closure1_slot1;
            result = 4;
            result = romeon[result];
            result = golfie.bind(tangon)(result);
            result = result.spacing;
            result = result.PX_16;
            output['paddingVertical'] = result;
            oscard['contentContainerStyle'] = output;
            oscard['data'] = sizing;
            oscard['renderItem'] = kiloes;
            backup = function(argFoo) { // Original name: keyExtractor
                entity = argFoo;
                entity = entity.id;
                return entity;
            };
            oscard['keyExtractor'] = backup;
            backup = 64;
            oscard['estimatedItemSize'] = backup;
            backup = false;
            oscard['showsVerticalScrollIndicator'] = backup;
            backup = 'no-hide-descendants';
            oscard['importantForAccessibility'] = backup;
            oscard = option.bind(tangon)(foxtra, oscard);
            report[1] = oscard;
            oscard = 12;
            oscard = romeon[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            oscard['visible'] = yankee;
            verify = offset[verify];
            oscard['theme'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();