// app/modules/main_tabs_v2/native/settings/screens/appearance/components/SettingsAppearanceChannelListPreviewNitroUpsell.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: SettingsAppearanceChannelListPreviewNitroUpsellComponent
        mike = argFoo;
        golf = mike.theme;
        var _closure2_slot0 = golf;
        mike = _closure1_slot19;
        tango = undefined;
        foxtrot = mike.bind(tango)();
        output = _closure1_slot0;
        backup = _closure1_slot2;
        mike = 5;
        mike = backup[mike];
        report = output.bind(tango)(mike);
        zulu = report.useAnimatedStyle;
        mike = function() { // Original name: l
            _fun97319: for(var _fun97319_ip = 0; ; ) switch(_fun97319_ip) {
 0:
                entity = _closure2_slot0;
                zulu = entity.theme;
                entity = _closure1_slot9;
                entity = entity.LIGHT;
                report = 1;
                if(!(zulu === entity)) { _fun97319_ip = 43; continue _fun97319 }
 33:
                report = 0.5;
 43:
                entity = {};
                zulu = _closure1_slot4;
                verify = zulu.absoluteFillObject;
                offset = entity;
                zulu = copyDataProperties(offset, verify);
                golf = _closure1_slot0;
                options = _closure1_slot2;
                mike = 7;
                mike = options[mike];
                oscar = undefined;
                tango = golf.bind(oscar)(mike);
                zulu = tango.withSpring;
                mike = 8;
                mike = options[mike];
                mike = golf.bind(oscar)(mike);
                mike = mike.springStandard;
                zulu = zulu.bind(tango)(report, mike);
                mike = 'opacity';
                entity[mike] = zulu;
                return entity;
            }
        };
        oscar = {};
        oscar['theme'] = golf;
        golf = _closure1_slot9;
        oscar['ThemeTypes'] = golf;
        golf = _closure1_slot4;
        oscar['StyleSheet'] = golf;
        golf = 7;
        golf = backup[golf];
        golf = output.bind(tango)(golf);
        golf = golf.withSpring;
        oscar['withSpring'] = golf;
        golf = 8;
        golf = backup[golf];
        golf = output.bind(tango)(golf);
        golf = golf.springStandard;
        oscar['springStandard'] = golf;
        mike['__closure'] = oscar;
        oscar = 16911565077998.0;
        mike['__workletHash'] = oscar;
        oscar = _closure1_slot20;
        mike['__initData'] = oscar;
        options = zulu.bind(report)(mike);
        yankee = _closure1_slot1;
        mike = 11;
        mike = backup[mike];
        zulu = yankee.bind(tango)(mike);
        mike = 12;
        mike = backup[mike];
        mike = yankee.bind(tango)(mike);
        mike = mike.CLIENT_THEMES_EDITOR;
        mike = zulu.bind(tango)(mike);
        oscar = mike.analyticsLocations;
        var _closure2_slot1 = oscar;
        report = _closure1_slot3;
        zulu = report.useCallback;
        mike = new Array(1);
        mike[0] = oscar;
        entity = function() {
            zulu = _closure1_slot1;
            verify = _closure1_slot2;
            entity = 13;
            mike = verify[entity];
            entity = undefined;
            report = zulu.bind(entity)(mike);
            tango = report.pushLazy;
            options = _closure1_slot0;
            mike = 15;
            mike = verify[mike];
            oscar = options.bind(entity)(mike);
            mike = 14;
            zulu = verify[mike];
            mike = verify.paths;
            zulu = oscar.bind(entity)(zulu, mike);
            mike = {};
            oscar = 16;
            oscar = verify[oscar];
            oscar = options.bind(entity)(oscar);
            oscar = oscar.PremiumFeatureCardOrder;
            oscar = oscar.TIER_2_LEADING;
            mike['premiumFeatureCardOrder'] = oscar;
            oscar = {};
            options = _closure1_slot7;
            options = options.USER_SETTINGS;
            oscar['page'] = options;
            golf = _closure1_slot8;
            golf = golf.SETTINGS_CLIENT_THEMES;
            oscar['section'] = golf;
            mike['analyticsLocation'] = oscar;
            oscar = _closure2_slot1;
            mike['analyticsLocations'] = oscar;
            mike = tango.bind(report)(zulu, mike);
            return entity;
        };
        verify = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot11;
        mike = _closure1_slot5;
        entity = {};
        report = foxtrot.nitroUpsell;
        entity['style'] = report;
        golf = _closure1_slot10;
        oscar = _closure1_slot12;
        report = {};
        report['style'] = options;
        options = 'no-hide-descendants';
        report['importantForAccessibility'] = options;
        options = _closure1_slot13;
        report['colors'] = options;
        oscar = golf.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        options = _closure1_slot10;
        oscar = 17;
        oscar = backup[oscar];
        oscar = output.bind(tango)(oscar);
        golf = oscar.Button;
        oscar = {};
        romeo = 18;
        kilo = backup[romeo];
        kilo = output.bind(tango)(kilo);
        sizing = kilo.intl;
        kilo = sizing.string;
        romeo = backup[romeo];
        romeo = output.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.pj0XBA;
        romeo = kilo.bind(sizing)(romeo);
        oscar['text'] = romeo;
        romeo = _closure1_slot10;
        offset = 19;
        offset = backup[offset];
        yankee = yankee.bind(tango)(offset);
        offset = {};
        foxtrot = foxtrot.nitroWheelIcon;
        offset['style'] = foxtrot;
        offset = romeo.bind(tango)(yankee, offset);
        oscar['icon'] = offset;
        offset = 'active';
        oscar['variant'] = offset;
        oscar['onPress'] = verify;
        verify = 'md';
        oscar['size'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot21 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot3 = golf;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    yankee = tango.StyleSheet;
    var _closure1_slot4 = yankee;
    tango = tango.View;
    var _closure1_slot5 = tango;
    backup = 2;
    tango = oscar[backup];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.AnalyticsPages;
    var _closure1_slot7 = options;
    options = tango.AnalyticsSections;
    var _closure1_slot8 = options;
    tango = tango.ThemeTypes;
    var _closure1_slot9 = tango;
    tango = 4;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot10 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot11 = tango;
    tango = 5;
    tango = oscar[tango];
    verify = romeo.bind(entity)(tango);
    options = verify.createAnimatedComponent;
    tango = 6;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    tango = options.bind(verify)(tango);
    var _closure1_slot12 = tango;
    tango = ['rgba(0, 0, 0, 0)', 'rgba(0, 0, 0, 1)'];
    var _closure1_slot13 = tango;
    tango = {};
    options = 'function animationEntering_SettingsAppearanceChannelListPreviewNitroUpsellTsx1(visible){const{withSpring,springStandard}=this.__closure;return{opacity:withSpring(visible,springStandard)};}';
    tango['code'] = options;
    var _closure1_slot14 = tango;
    tango = function() {
        entity = function(argFoo) { // Original name: animationEntering
            entity = {};
            oscar = _closure1_slot0;
            golf = _closure1_slot2;
            mike = 7;
            mike = golf[mike];
            zulu = undefined;
            report = oscar.bind(zulu)(mike);
            tango = report.withSpring;
            mike = 8;
            mike = golf[mike];
            mike = oscar.bind(zulu)(mike);
            zulu = mike.springStandard;
            mike = argFoo;
            mike = tango.bind(report)(mike, zulu);
            entity['opacity'] = mike;
            return entity;
        };
        zulu = {};
        oscar = _closure1_slot0;
        golf = _closure1_slot2;
        tango = 7;
        tango = golf[tango];
        report = undefined;
        tango = oscar.bind(report)(tango);
        tango = tango.withSpring;
        zulu['withSpring'] = tango;
        tango = 8;
        tango = golf[tango];
        tango = oscar.bind(report)(tango);
        tango = tango.springStandard;
        zulu['springStandard'] = tango;
        entity['__closure'] = zulu;
        zulu = 2168112734281.0;
        entity['__workletHash'] = zulu;
        mike = _closure1_slot14;
        entity['__initData'] = mike;
        return entity;
    };
    tango = tango.bind(entity)();
    var _closure1_slot15 = tango;
    tango = {};
    options = "function animationExiting_SettingsAppearanceChannelListPreviewNitroUpsellTsx2(visible,cleanUp){const{withSpring,springStandard}=this.__closure;return{opacity:withSpring(visible,springStandard,'respect-motion-settings',function(finished){cleanUp===null||cleanUp===void 0||cleanUp(finished);})};}";
    tango['code'] = options;
    var _closure1_slot16 = tango;
    tango = {};
    options = 'function SettingsAppearanceChannelListPreviewNitroUpsellTsx3(finished){const{cleanUp}=this.__closure;var _cleanUp;(_cleanUp=cleanUp)===null||_cleanUp===void 0||_cleanUp(finished);}';
    tango['code'] = options;
    var _closure1_slot17 = tango;
    tango = function() {
        entity = function(argFoo, argBar) { // Original name: animationExiting
            options = argBar;
            var _closure3_slot0 = options;
            entity = {};
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            tango = 7;
            tango = offset[tango];
            report = undefined;
            golf = verify.bind(report)(tango);
            oscar = golf.withSpring;
            tango = 8;
            tango = offset[tango];
            tango = verify.bind(report)(tango);
            foxtrot = tango.springStandard;
            tango = function(argFoo) { // Original name: s
                _fun97325: for(var _fun97325_ip = 0; ; ) switch(_fun97325_ip) {
 0:
                    zulu = _closure3_slot0;
                    mike = null;
                    if(!(mike != zulu)) { _fun97325_ip = 27; continue _fun97325 }
 13:
                    zulu = _closure3_slot0;
                    mike = undefined;
                    entity = argFoo;
                    entity = zulu.bind(mike)(entity);
 27:
                    entity = undefined;
                    return entity;
                }
            };
            zulu = {};
            zulu['cleanUp'] = options;
            tango['__closure'] = zulu;
            zulu = 15025873527064.0;
            tango['__workletHash'] = zulu;
            mike = _closure1_slot17;
            tango['__initData'] = mike;
            backup = argFoo;
            romeo = 'respect-motion-settings';
            kilo = golf;
            yankee = tango;
            mike = kilo[oscar](backup, foxtrot, romeo, yankee, offset);
            entity['opacity'] = mike;
            return entity;
        };
        zulu = {};
        oscar = _closure1_slot0;
        golf = _closure1_slot2;
        tango = 7;
        tango = golf[tango];
        report = undefined;
        tango = oscar.bind(report)(tango);
        tango = tango.withSpring;
        zulu['withSpring'] = tango;
        tango = 8;
        tango = golf[tango];
        tango = oscar.bind(report)(tango);
        tango = tango.springStandard;
        zulu['springStandard'] = tango;
        entity['__closure'] = zulu;
        zulu = 12271101023923.0;
        entity['__workletHash'] = zulu;
        mike = _closure1_slot16;
        entity['__initData'] = mike;
        return entity;
    };
    tango = tango.bind(entity)();
    var _closure1_slot18 = tango;
    tango = 9;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {};
    output = yankee.absoluteFillObject;
    result = offset;
    yankee = copyDataProperties(result, output);
    yankee = 10;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    kilo = foxtrot.xl;
    foxtrot = 'borderBottomStartRadius';
    offset[foxtrot] = kilo;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    kilo = foxtrot.xl;
    foxtrot = 'borderBottomEndRadius';
    offset[foxtrot] = kilo;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_96;
    backup = backup * foxtrot;
    foxtrot = 'height';
    offset[foxtrot] = backup;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    backup = foxtrot.PX_24;
    foxtrot = 'padding';
    offset[foxtrot] = backup;
    backup = 'flex-end';
    foxtrot = 'justifyContent';
    offset[foxtrot] = backup;
    foxtrot = 'top';
    offset[foxtrot] = entity;
    backup = 'hidden';
    foxtrot = 'overflow';
    offset[foxtrot] = backup;
    tango['nitroUpsell'] = offset;
    offset = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    offset['height'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_16;
    offset['width'] = yankee;
    tango['nitroWheelIcon'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot19 = tango;
    tango = {};
    options = 'function SettingsAppearanceChannelListPreviewNitroUpsellTsx4(){const{theme,ThemeTypes,StyleSheet,withSpring,springStandard}=this.__closure;const opacity=theme.theme===ThemeTypes.LIGHT?0.5:1;return{...StyleSheet.absoluteFillObject,opacity:withSpring(opacity,springStandard)};}';
    tango['code'] = options;
    var _closure1_slot20 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: SettingsAppearanceChannelListPreviewNitroUpsell
        _fun97326: for(var _fun97326_ip = 0; ; ) switch(_fun97326_ip) {
 0:
            options = argFoo;
            zulu = _closure1_slot0;
            verify = _closure1_slot2;
            mike = 20;
            mike = verify[mike];
            tango = undefined;
            golf = zulu.bind(tango)(mike);
            report = golf.useStateFromStores;
            mike = _closure1_slot6;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                entity = _closure1_slot6;
                entity = entity.useReducedMotion;
                return entity;
            };
            golf = report.bind(golf)(zulu, mike);
            report = _closure1_slot3;
            zulu = report.useCallback;
            mike = function(argFoo, argBar) {
                _fun97328: for(var _fun97328_ip = 0; ; ) switch(_fun97328_ip) {
 0:
                    verify = argFoo;
                    tango = _closure1_slot10;
                    mike = _closure1_slot1;
                    zulu = _closure1_slot2;
                    entity = 5;
                    entity = zulu[entity];
                    zulu = undefined;
                    entity = mike.bind(zulu)(entity);
                    mike = entity.View;
                    entity = {};
                    report = argBar;
                    entity['style'] = report;
                    report = 'box-none';
                    entity['pointerEvents'] = report;
                    report = null;
                    golf = report != verify;
                    if(!golf) { _fun97328_ip = 92; continue _fun97328 }
 66:
                    options = _closure1_slot10;
                    golf = _closure1_slot21;
                    oscar = {};
                    yankee = oscar;
                    offset = verify;
                    verify = copyDataProperties(yankee, offset);
                    report = options.bind(zulu)(golf, oscar);
 92:
                    entity['children'] = report;
                    entity = tango.bind(zulu)(mike, entity);
                    return entity;
                }
            };
            entity = new Array(0);
            report = zulu.bind(report)(mike, entity);
            zulu = _closure1_slot10;
            mike = _closure1_slot1;
            entity = 21;
            entity = verify[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            entity['useReducedMotion'] = golf;
            verify = options.visible;
            golf = undefined;
            if(!verify) { _fun97326_ip = 127; continue _fun97326 }
 124:
            golf = options;
 127:
            entity['item'] = golf;
            golf = _closure1_slot15;
            entity['entering'] = golf;
            oscar = _closure1_slot18;
            entity['exiting'] = oscar;
            entity['renderItem'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 22;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/settings/screens/appearance/components/SettingsAppearanceChannelListPreviewNitroUpsell.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();