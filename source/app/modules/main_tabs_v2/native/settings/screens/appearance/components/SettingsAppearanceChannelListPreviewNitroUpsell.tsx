// app/modules/main_tabs_v2/native/settings/screens/appearance/components/SettingsAppearanceChannelListPreviewNitroUpsell.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: SettingsAppearanceChannelListPreviewNitroUpsellComponent
        michal = argFoo;
        golfie = michal.theme;
        var _closure2_slot0 = golfie;
        michal = _closure1_slot19;
        tangon = undefined;
        foxtra = michal.bind(tangon)();
        output = _closure1_slot0;
        backup = _closure1_slot2;
        michal = 5;
        michal = backup[michal];
        report = output.bind(tangon)(michal);
        zuuluu = report.useAnimatedStyle;
        michal = function() { // Original name: l
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = _closure2_slot0;
                zuuluu = entity.theme;
                entity = _closure1_slot9;
                entity = entity.LIGHT;
                report = 1;
                if(!(zuuluu === entity)) { _fun00002_ip = 42; continue _fun00001 }
 32:
                report = 0.5;
 42:
                entity = {};
                zuuluu = _closure1_slot4;
                verify = zuuluu.absoluteFillObject;
                offset = entity;
                zuuluu = copyDataProperties(offset, verify);
                golfie = _closure1_slot0;
                option = _closure1_slot2;
                michal = 7;
                michal = option[michal];
                oscard = undefined;
                tangon = golfie.bind(oscard)(michal);
                zuuluu = tangon.withSpring;
                michal = 8;
                michal = option[michal];
                michal = golfie.bind(oscard)(michal);
                michal = michal.springStandard;
                zuuluu = zuuluu.bind(tangon)(report, michal);
                michal = 'opacity';
                entity[michal] = zuuluu;
                return entity;
            }
        };
        oscard = {};
        oscard['theme'] = golfie;
        golfie = _closure1_slot9;
        oscard['ThemeTypes'] = golfie;
        golfie = _closure1_slot4;
        oscard['StyleSheet'] = golfie;
        golfie = 7;
        golfie = backup[golfie];
        golfie = output.bind(tangon)(golfie);
        golfie = golfie.withSpring;
        oscard['withSpring'] = golfie;
        golfie = 8;
        golfie = backup[golfie];
        golfie = output.bind(tangon)(golfie);
        golfie = golfie.springStandard;
        oscard['springStandard'] = golfie;
        michal['__closure'] = oscard;
        oscard = 16911565077998.0;
        michal['__workletHash'] = oscard;
        oscard = _closure1_slot20;
        michal['__initData'] = oscard;
        option = zuuluu.bind(report)(michal);
        yankee = _closure1_slot1;
        michal = 11;
        michal = backup[michal];
        zuuluu = yankee.bind(tangon)(michal);
        michal = 12;
        michal = backup[michal];
        michal = yankee.bind(tangon)(michal);
        michal = michal.CLIENT_THEMES_EDITOR;
        michal = zuuluu.bind(tangon)(michal);
        oscard = michal.analyticsLocations;
        var _closure2_slot1 = oscard;
        report = _closure1_slot3;
        zuuluu = report.useCallback;
        michal = new Array(1);
        michal[0] = oscard;
        entity = function() {
            zuuluu = _closure1_slot1;
            verify = _closure1_slot2;
            entity = 13;
            michal = verify[entity];
            entity = undefined;
            report = zuuluu.bind(entity)(michal);
            tangon = report.pushLazy;
            option = _closure1_slot0;
            michal = 15;
            michal = verify[michal];
            oscard = option.bind(entity)(michal);
            michal = 14;
            zuuluu = verify[michal];
            michal = verify.paths;
            zuuluu = oscard.bind(entity)(zuuluu, michal);
            michal = {};
            oscard = 16;
            oscard = verify[oscard];
            oscard = option.bind(entity)(oscard);
            oscard = oscard.PremiumFeatureCardOrder;
            oscard = oscard.TIER_2_LEADING;
            michal['premiumFeatureCardOrder'] = oscard;
            oscard = {};
            option = _closure1_slot7;
            option = option.USER_SETTINGS;
            oscard['page'] = option;
            golfie = _closure1_slot8;
            golfie = golfie.SETTINGS_CLIENT_THEMES;
            oscard['section'] = golfie;
            michal['analyticsLocation'] = oscard;
            oscard = _closure2_slot1;
            michal['analyticsLocations'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        verify = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot11;
        michal = _closure1_slot5;
        entity = {};
        report = foxtra.nitroUpsell;
        entity['style'] = report;
        golfie = _closure1_slot10;
        oscard = _closure1_slot12;
        report = {};
        report['style'] = option;
        option = 'no-hide-descendants';
        report['importantForAccessibility'] = option;
        option = _closure1_slot13;
        report['colors'] = option;
        oscard = golfie.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        option = _closure1_slot10;
        oscard = 17;
        oscard = backup[oscard];
        oscard = output.bind(tangon)(oscard);
        golfie = oscard.Button;
        oscard = {};
        romeon = 18;
        kiloes = backup[romeon];
        kiloes = output.bind(tangon)(kiloes);
        sizing = kiloes.intl;
        kiloes = sizing.string;
        romeon = backup[romeon];
        romeon = output.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.pj0XBA;
        romeon = kiloes.bind(sizing)(romeon);
        oscard['text'] = romeon;
        romeon = _closure1_slot10;
        offset = 19;
        offset = backup[offset];
        yankee = yankee.bind(tangon)(offset);
        offset = {};
        foxtra = foxtra.nitroWheelIcon;
        offset['style'] = foxtra;
        offset = romeon.bind(tangon)(yankee, offset);
        oscard['icon'] = offset;
        offset = 'active';
        oscard['variant'] = offset;
        oscard['onPress'] = verify;
        verify = 'md';
        oscard['size'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot21 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    yankee = tangon.StyleSheet;
    var _closure1_slot4 = yankee;
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    backup = 2;
    tangon = oscard[backup];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.AnalyticsPages;
    var _closure1_slot7 = option;
    option = tangon.AnalyticsSections;
    var _closure1_slot8 = option;
    tangon = tangon.ThemeTypes;
    var _closure1_slot9 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot10 = option;
    tangon = tangon.jsxs;
    var _closure1_slot11 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    verify = romeon.bind(entity)(tangon);
    option = verify.createAnimatedComponent;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    tangon = option.bind(verify)(tangon);
    var _closure1_slot12 = tangon;
    tangon = ['rgba(0, 0, 0, 0)', 'rgba(0, 0, 0, 1)'];
    var _closure1_slot13 = tangon;
    tangon = {};
    option = 'function animationEntering_SettingsAppearanceChannelListPreviewNitroUpsellTsx1(visible){const{withSpring,springStandard}=this.__closure;return{opacity:withSpring(visible,springStandard)};}';
    tangon['code'] = option;
    var _closure1_slot14 = tangon;
    tangon = function() {
        entity = function(argFoo) { // Original name: animationEntering
            entity = {};
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            michal = 7;
            michal = golfie[michal];
            zuuluu = undefined;
            report = oscard.bind(zuuluu)(michal);
            tangon = report.withSpring;
            michal = 8;
            michal = golfie[michal];
            michal = oscard.bind(zuuluu)(michal);
            zuuluu = michal.springStandard;
            michal = argFoo;
            michal = tangon.bind(report)(michal, zuuluu);
            entity['opacity'] = michal;
            return entity;
        };
        zuuluu = {};
        oscard = _closure1_slot0;
        golfie = _closure1_slot2;
        tangon = 7;
        tangon = golfie[tangon];
        report = undefined;
        tangon = oscard.bind(report)(tangon);
        tangon = tangon.withSpring;
        zuuluu['withSpring'] = tangon;
        tangon = 8;
        tangon = golfie[tangon];
        tangon = oscard.bind(report)(tangon);
        tangon = tangon.springStandard;
        zuuluu['springStandard'] = tangon;
        entity['__closure'] = zuuluu;
        zuuluu = 2168112734281.0;
        entity['__workletHash'] = zuuluu;
        michal = _closure1_slot14;
        entity['__initData'] = michal;
        return entity;
    };
    tangon = tangon.bind(entity)();
    var _closure1_slot15 = tangon;
    tangon = {};
    option = "function animationExiting_SettingsAppearanceChannelListPreviewNitroUpsellTsx2(visible,cleanUp){const{withSpring,springStandard}=this.__closure;return{opacity:withSpring(visible,springStandard,'respect-motion-settings',function(finished){cleanUp===null||cleanUp===void 0||cleanUp(finished);})};}";
    tangon['code'] = option;
    var _closure1_slot16 = tangon;
    tangon = {};
    option = 'function SettingsAppearanceChannelListPreviewNitroUpsellTsx3(finished){const{cleanUp}=this.__closure;var _cleanUp;(_cleanUp=cleanUp)===null||_cleanUp===void 0||_cleanUp(finished);}';
    tangon['code'] = option;
    var _closure1_slot17 = tangon;
    tangon = function() {
        entity = function(argFoo, argBar) { // Original name: animationExiting
            option = argBar;
            var _closure3_slot0 = option;
            entity = {};
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            tangon = 7;
            tangon = offset[tangon];
            report = undefined;
            golfie = verify.bind(report)(tangon);
            oscard = golfie.withSpring;
            tangon = 8;
            tangon = offset[tangon];
            tangon = verify.bind(report)(tangon);
            foxtra = tangon.springStandard;
            tangon = function(argFoo) { // Original name: s
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure3_slot0;
                    michal = null;
                    if(!(michal != zuuluu)) { _fun00004_ip = 27; continue _fun00003 }
 13:
                    zuuluu = _closure3_slot0;
                    michal = undefined;
                    entity = argFoo;
                    entity = zuuluu.bind(michal)(entity);
 27:
                    entity = undefined;
                    return entity;
                }
            };
            zuuluu = {};
            zuuluu['cleanUp'] = option;
            tangon['__closure'] = zuuluu;
            zuuluu = 15025873527064.0;
            tangon['__workletHash'] = zuuluu;
            michal = _closure1_slot17;
            tangon['__initData'] = michal;
            backup = argFoo;
            romeon = 'respect-motion-settings';
            kiloes = golfie;
            yankee = tangon;
            michal = kiloes[oscard](backup, foxtra, romeon, yankee, offset);
            entity['opacity'] = michal;
            return entity;
        };
        zuuluu = {};
        oscard = _closure1_slot0;
        golfie = _closure1_slot2;
        tangon = 7;
        tangon = golfie[tangon];
        report = undefined;
        tangon = oscard.bind(report)(tangon);
        tangon = tangon.withSpring;
        zuuluu['withSpring'] = tangon;
        tangon = 8;
        tangon = golfie[tangon];
        tangon = oscard.bind(report)(tangon);
        tangon = tangon.springStandard;
        zuuluu['springStandard'] = tangon;
        entity['__closure'] = zuuluu;
        zuuluu = 12271101023923.0;
        entity['__workletHash'] = zuuluu;
        michal = _closure1_slot16;
        entity['__initData'] = michal;
        return entity;
    };
    tangon = tangon.bind(entity)();
    var _closure1_slot18 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    output = yankee.absoluteFillObject;
    result = offset;
    yankee = copyDataProperties(result, output);
    yankee = 10;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    kiloes = foxtra.xl;
    foxtra = 'borderBottomStartRadius';
    offset[foxtra] = kiloes;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    kiloes = foxtra.xl;
    foxtra = 'borderBottomEndRadius';
    offset[foxtra] = kiloes;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_96;
    backup = backup * foxtra;
    foxtra = 'height';
    offset[foxtra] = backup;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    backup = foxtra.PX_24;
    foxtra = 'padding';
    offset[foxtra] = backup;
    backup = 'flex-end';
    foxtra = 'justifyContent';
    offset[foxtra] = backup;
    foxtra = 'top';
    offset[foxtra] = entity;
    backup = 'hidden';
    foxtra = 'overflow';
    offset[foxtra] = backup;
    tangon['nitroUpsell'] = offset;
    offset = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    offset['height'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_16;
    offset['width'] = yankee;
    tangon['nitroWheelIcon'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot19 = tangon;
    tangon = {};
    option = 'function SettingsAppearanceChannelListPreviewNitroUpsellTsx4(){const{theme,ThemeTypes,StyleSheet,withSpring,springStandard}=this.__closure;const opacity=theme.theme===ThemeTypes.LIGHT?0.5:1;return{...StyleSheet.absoluteFillObject,opacity:withSpring(opacity,springStandard)};}';
    tangon['code'] = option;
    var _closure1_slot20 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: SettingsAppearanceChannelListPreviewNitroUpsell
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            option = argFoo;
            zuuluu = _closure1_slot0;
            verify = _closure1_slot2;
            michal = 20;
            michal = verify[michal];
            tangon = undefined;
            golfie = zuuluu.bind(tangon)(michal);
            report = golfie.useStateFromStores;
            michal = _closure1_slot6;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                entity = _closure1_slot6;
                entity = entity.useReducedMotion;
                return entity;
            };
            golfie = report.bind(golfie)(zuuluu, michal);
            report = _closure1_slot3;
            zuuluu = report.useCallback;
            michal = function(argFoo, argBar) {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    verify = argFoo;
                    tangon = _closure1_slot10;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 5;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    entity = michal.bind(zuuluu)(entity);
                    michal = entity.View;
                    entity = {};
                    report = argBar;
                    entity['style'] = report;
                    report = 'box-none';
                    entity['pointerEvents'] = report;
                    report = null;
                    golfie = report != verify;
                    if(!golfie) { _fun00008_ip = 92; continue _fun00007 }
 66:
                    option = _closure1_slot10;
                    golfie = _closure1_slot21;
                    oscard = {};
                    yankee = oscard;
                    offset = verify;
                    verify = copyDataProperties(yankee, offset);
                    report = option.bind(zuuluu)(golfie, oscard);
 92:
                    entity['children'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                }
            };
            entity = new Array(0);
            report = zuuluu.bind(report)(michal, entity);
            zuuluu = _closure1_slot10;
            michal = _closure1_slot1;
            entity = 21;
            entity = verify[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['useReducedMotion'] = golfie;
            verify = option.visible;
            golfie = undefined;
            if(!verify) { _fun00006_ip = 127; continue _fun00005 }
 124:
            golfie = option;
 127:
            entity['item'] = golfie;
            golfie = _closure1_slot15;
            entity['entering'] = golfie;
            oscard = _closure1_slot18;
            entity['exiting'] = oscard;
            entity['renderItem'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 22;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/screens/appearance/components/SettingsAppearanceChannelListPreviewNitroUpsell.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();