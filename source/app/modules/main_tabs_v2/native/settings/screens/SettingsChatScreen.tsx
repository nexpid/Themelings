// app/modules/main_tabs_v2/native/settings/screens/SettingsChatScreen.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: VideoUploadQualityNitroUpsell
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            offset = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 9;
            entity = verify[entity];
            tangon = undefined;
            michal = offset.bind(tangon)(entity);
            entity = michal.useStackNavigation;
            entity = entity.bind(michal)();
            var _closure2_slot0 = entity;
            entity = _closure1_slot11;
            cntext = entity.bind(tangon)();
            entity = 10;
            entity = verify[entity];
            report = offset.bind(tangon)(entity);
            zuuluu = report.useStateFromStores;
            entity = _closure1_slot5;
            michal = new Array(2);
            michal[0] = entity;
            entity = _closure1_slot6;
            michal[1] = entity;
            entity = function() {
                zuuluu = _closure1_slot6;
                michal = zuuluu.getPremiumTypeSubscription;
                tangon = michal.bind(zuuluu)();
                zuuluu = _closure1_slot5;
                michal = zuuluu.getCurrentUser;
                zuuluu = michal.bind(zuuluu)();
                report = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 11;
                michal = michal[entity];
                entity = undefined;
                michal = report.bind(entity)(michal);
                entity = michal.hasPremiumSubscriptionToDisplay;
                entity = entity.bind(michal)(zuuluu, tangon);
                return entity;
            };
            oscard = zuuluu.bind(report)(michal, entity);
            zuuluu = _closure1_slot10;
            michal = _closure1_slot4;
            entity = {};
            option = _closure1_slot9;
            output = 12;
            report = verify[output];
            report = offset.bind(tangon)(report);
            golfie = report.TextWithIOSLinkWorkaround;
            report = {'variant': 'text-xs/normal', 'color': 'text-muted'};
            config = 13;
            yankee = verify[config];
            yankee = offset.bind(tangon)(yankee);
            romeon = yankee.intl;
            yankee = romeon.format;
            verify = verify[config];
            verify = offset.bind(tangon)(verify);
            verify = verify.t;
            offset = verify.Up+hSE;
            verify = {};
            foxtra = 'https://support.discord.com/hc/articles/9665451164951';
            verify['supportURL'] = foxtra;
            verify = yankee.bind(romeon)(offset, verify);
            report['children'] = verify;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = golfie;
            oscard = !oscard;
            if(!oscard) { _fun00002_ip = 567; continue _fun00001 }
 233:
            verify = _closure1_slot9;
            option = _closure1_slot4;
            golfie = {};
            offset = cntext.card;
            golfie['style'] = offset;
            romeon = _closure1_slot9;
            source = _closure1_slot0;
            update = _closure1_slot2;
            offset = 14;
            offset = update[offset];
            offset = source.bind(tangon)(offset);
            yankee = offset.Card;
            offset = {'border': 'none', 'shadow': 'none'};
            kiloes = _closure1_slot10;
            backup = _closure1_slot4;
            foxtra = {};
            sizing = cntext.cardContent;
            foxtra['style'] = sizing;
            ctrled = _closure1_slot9;
            record = _closure1_slot1;
            vacuum = 15;
            sizing = update[vacuum];
            echoed = record.bind(tangon)(sizing);
            sizing = {};
            cntext = cntext.cardIcon;
            sizing['style'] = cntext;
            cntext = 16;
            cntext = update[cntext];
            cntext = record.bind(tangon)(cntext);
            sizing['source'] = cntext;
            vacuum = update[vacuum];
            vacuum = record.bind(tangon)(vacuum);
            vacuum = vacuum.Sizes;
            vacuum = vacuum.SMALL;
            sizing['size'] = vacuum;
            vacuum = 8;
            vacuum = update[vacuum];
            vacuum = record.bind(tangon)(vacuum);
            vacuum = vacuum.unsafe_rawColors;
            vacuum = vacuum.PRIMARY_400;
            sizing['color'] = vacuum;
            echoed = ctrled.bind(tangon)(echoed, sizing);
            sizing = new Array(2);
            sizing[0] = echoed;
            echoed = _closure1_slot9;
            output = update[output];
            output = source.bind(tangon)(output);
            result = output.TextWithIOSLinkWorkaround;
            output = {'variant': 'text-sm/medium', 'color': 'text-muted'};
            ctrled = update[config];
            ctrled = source.bind(tangon)(ctrled);
            vacuum = ctrled.intl;
            ctrled = vacuum.format;
            update = update[config];
            update = source.bind(tangon)(update);
            update = update.t;
            source = update.uW1zur;
            update = {};
            sequen = function() { // Original name: onClick
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 17;
                zuuluu = zuuluu[entity];
                entity = undefined;
                report = tangon.bind(entity)(zuuluu);
                tangon = report.setSection;
                zuuluu = _closure1_slot8;
                zuuluu = zuuluu.PREMIUM;
                zuuluu = tangon.bind(report)(zuuluu);
                report = _closure2_slot0;
                tangon = report.push;
                michal = _closure1_slot8;
                zuuluu = michal.PREMIUM;
                michal = {};
                oscard = true;
                michal['isFromTextSection'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            update['onClick'] = sequen;
            update = ctrled.bind(vacuum)(source, update);
            output['children'] = update;
            output = echoed.bind(tangon)(result, output);
            sizing[1] = output;
            foxtra['children'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 567:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.MobileSetting;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UserSettingsSections;
    var _closure1_slot8 = tangon;
    tangon = 6;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot9 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'marginTop': 8, 'borderColor': null, 'borderWidth': 1};
    offset = 8;
    yankee = oscard[offset];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.REDESIGN_INPUT_CONTROL_SELECTED;
    verify['borderColor'] = yankee;
    yankee = oscard[offset];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.lg;
    verify['borderRadius'] = yankee;
    tangon['card'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tangon['cardContent'] = verify;
    verify = {};
    verify['marginEnd'] = offset;
    tangon['cardIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 22;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/screens/SettingsChatScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: SettingsChatScreen
        michal = _closure1_slot0;
        golfie = _closure1_slot2;
        tangon = 18;
        report = golfie[tangon];
        tangon = undefined;
        oscard = michal.bind(tangon)(report);
        report = oscard.useCanUseCustomChatRenderer;
        report = report.bind(oscard)();
        yankee = report.canUseRenderer;
        var _closure2_slot0 = yankee;
        offset = report.forceUseRenderer;
        var _closure2_slot1 = offset;
        verify = _closure1_slot3;
        option = verify.useMemo;
        oscard = function() {
            michal = {};
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            zuuluu = 13;
            entity = option[zuuluu];
            oscard = undefined;
            entity = golfie.bind(oscard)(entity);
            verify = entity.intl;
            tangon = verify.string;
            entity = option[zuuluu];
            entity = golfie.bind(oscard)(entity);
            entity = entity.t;
            entity = entity.U68Dgo;
            entity = tangon.bind(verify)(entity);
            michal['label'] = entity;
            tangon = _closure1_slot7;
            verify = tangon.DISPLAY_MEDIA_LINKS;
            entity = new Array(3);
            entity[0] = verify;
            verify = tangon.DISPLAY_MEDIA_UPLOADS;
            entity[1] = verify;
            verify = tangon.IMAGE_DESCRIPTIONS;
            entity[2] = verify;
            michal['settings'] = entity;
            entity = option[zuuluu];
            entity = golfie.bind(oscard)(entity);
            offset = entity.intl;
            verify = offset.string;
            entity = option[zuuluu];
            entity = golfie.bind(oscard)(entity);
            entity = entity.t;
            entity = entity.T0rbtL;
            entity = verify.bind(offset)(entity);
            michal['subLabel'] = entity;
            entity = new Array(10);
            entity[0] = michal;
            michal = {};
            verify = option[zuuluu];
            verify = golfie.bind(oscard)(verify);
            yankee = verify.intl;
            offset = yankee.string;
            verify = option[zuuluu];
            verify = golfie.bind(oscard)(verify);
            verify = verify.t;
            verify = verify.YTnrbW;
            verify = offset.bind(yankee)(verify);
            michal['label'] = verify;
            offset = tangon.SAVE_CAMERA_UPLOADS_TO_DEVICE;
            verify = new Array(1);
            verify[0] = offset;
            michal['settings'] = verify;
            verify = option[zuuluu];
            verify = golfie.bind(oscard)(verify);
            yankee = verify.intl;
            offset = yankee.string;
            verify = option[zuuluu];
            verify = golfie.bind(oscard)(verify);
            verify = verify.t;
            verify = verify.eZmJYG;
            verify = offset.bind(yankee)(verify);
            michal['subLabel'] = verify;
            entity[1] = michal;
            michal = {};
            offset = tangon.VIDEO_UPLOAD_QUALITY;
            verify = new Array(1);
            verify[0] = offset;
            michal['settings'] = verify;
            offset = _closure1_slot9;
            verify = _closure1_slot12;
            report = {};
            report = offset.bind(oscard)(verify, report);
            michal['subLabel'] = report;
            entity[2] = michal;
            michal = {};
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            offset = report.intl;
            verify = offset.string;
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            report = report.t;
            report = report.fyG8t7;
            report = verify.bind(offset)(report);
            michal['label'] = report;
            verify = tangon.DATA_SAVING_MODE;
            report = new Array(1);
            report[0] = verify;
            michal['settings'] = report;
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            offset = report.intl;
            verify = offset.string;
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            report = report.t;
            report = report.wC0+Pj;
            report = verify.bind(offset)(report);
            michal['subLabel'] = report;
            entity[3] = michal;
            michal = {};
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            offset = report.intl;
            verify = offset.string;
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            report = report.t;
            report = report.PWZOn5;
            report = verify.bind(offset)(report);
            michal['label'] = report;
            verify = tangon.EMBED_AND_LINK_PREVIEWS;
            report = new Array(1);
            report[0] = verify;
            michal['settings'] = report;
            entity[4] = michal;
            michal = {};
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            offset = report.intl;
            verify = offset.string;
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            report = report.t;
            report = report.sMOuub;
            report = verify.bind(offset)(report);
            michal['label'] = report;
            verify = tangon.EMOJI_REACTIONS_ON_MESSAGES;
            report = new Array(2);
            report[0] = verify;
            verify = tangon.CHAT_EMOJI_EMOTICONS;
            report[1] = verify;
            michal['settings'] = report;
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            offset = report.intl;
            verify = offset.string;
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            report = report.t;
            report = report.20dvub;
            report = verify.bind(offset)(report);
            michal['subLabel'] = report;
            entity[5] = michal;
            michal = {};
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            offset = report.intl;
            verify = offset.string;
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            report = report.t;
            report = report.6NtAuL;
            report = verify.bind(offset)(report);
            michal['label'] = report;
            verify = tangon.STICKER_SUGGESTIONS;
            report = new Array(1);
            report[0] = verify;
            michal['settings'] = report;
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            offset = report.intl;
            verify = offset.string;
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            report = report.t;
            report = report.r3uQUV;
            report = verify.bind(offset)(report);
            michal['subLabel'] = report;
            entity[6] = michal;
            michal = {};
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            offset = report.intl;
            verify = offset.string;
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            report = report.t;
            report = report.29xPVV;
            report = verify.bind(offset)(report);
            michal['label'] = report;
            verify = tangon.STICKER_AUTOCOMPLETE;
            report = new Array(1);
            report[0] = verify;
            michal['settings'] = report;
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            offset = report.intl;
            verify = offset.string;
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            report = report.t;
            report = report./eVrj4;
            report = verify.bind(offset)(report);
            michal['subLabel'] = report;
            entity[7] = michal;
            michal = {};
            verify = tangon.CHAT_GESTURES;
            report = new Array(1);
            report[0] = verify;
            michal['settings'] = report;
            entity[8] = michal;
            michal = {};
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            offset = report.intl;
            verify = offset.string;
            report = option[zuuluu];
            report = golfie.bind(oscard)(report);
            report = report.t;
            report = report.BkuOOz;
            report = verify.bind(offset)(report);
            michal['label'] = report;
            report = tangon.TEXT_AND_MEDIA_SYNC;
            tangon = new Array(1);
            tangon[0] = report;
            michal['settings'] = tangon;
            tangon = option[zuuluu];
            tangon = golfie.bind(oscard)(tangon);
            report = tangon.intl;
            tangon = report.string;
            zuuluu = option[zuuluu];
            zuuluu = golfie.bind(oscard)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu.p4IKEx;
            zuuluu = tangon.bind(report)(zuuluu);
            michal['subLabel'] = zuuluu;
            entity[9] = michal;
            return entity;
        };
        report = new Array(0);
        oscard = option.bind(verify)(oscard, report);
        romeon = verify.useEffect;
        option = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 19;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.trackExposure;
            michal = {};
            report = 'Settings Chat Screen';
            michal['location'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        report = new Array(0);
        report = romeon.bind(verify)(option, report);
        option = verify.useMemo;
        report = new Array(2);
        report[0] = yankee;
        report[1] = offset;
        zuuluu = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                tangon = _closure2_slot0;
                entity = null;
                if(!tangon) { _fun00004_ip = 64; continue _fun00003 }
 12:
                michal = _closure2_slot1;
                entity = null;
                if(michal) { _fun00004_ip = 64; continue _fun00003 }
 21:
                report = _closure1_slot9;
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 20;
                michal = tangon[michal];
                tangon = undefined;
                michal = zuuluu.bind(tangon)(michal);
                zuuluu = michal.CustomRendererSetting;
                michal = {};
                entity = report.bind(tangon)(zuuluu, michal);
 64:
                return entity;
            }
        };
        report = option.bind(verify)(zuuluu, report);
        zuuluu = _closure1_slot9;
        entity = 21;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.SettingsList;
        entity = {};
        entity['sections'] = oscard;
        entity['ListHeaderComponent'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();