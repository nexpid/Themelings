// app/modules/main_tabs_v2/native/settings/screens/SettingsChatScreen.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: VideoUploadQualityNitroUpsell
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            offset = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 9;
            entity = verify[entity];
            tango = undefined;
            mike = offset.bind(tango)(entity);
            entity = mike.useStackNavigation;
            entity = entity.bind(mike)();
            var _closure2_slot0 = entity;
            entity = _closure1_slot11;
            context = entity.bind(tango)();
            entity = 10;
            entity = verify[entity];
            report = offset.bind(tango)(entity);
            zulu = report.useStateFromStores;
            entity = _closure1_slot5;
            mike = new Array(2);
            mike[0] = entity;
            entity = _closure1_slot6;
            mike[1] = entity;
            entity = function() {
                zulu = _closure1_slot6;
                mike = zulu.getPremiumTypeSubscription;
                tango = mike.bind(zulu)();
                zulu = _closure1_slot5;
                mike = zulu.getCurrentUser;
                zulu = mike.bind(zulu)();
                report = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 11;
                mike = mike[entity];
                entity = undefined;
                mike = report.bind(entity)(mike);
                entity = mike.hasPremiumSubscriptionToDisplay;
                entity = entity.bind(mike)(zulu, tango);
                return entity;
            };
            oscar = zulu.bind(report)(mike, entity);
            zulu = _closure1_slot10;
            mike = _closure1_slot4;
            entity = {};
            options = _closure1_slot9;
            output = 12;
            report = verify[output];
            report = offset.bind(tango)(report);
            golf = report.TextWithIOSLinkWorkaround;
            report = {'variant': 'text-xs/normal', 'color': 'text-muted'};
            config = 13;
            yankee = verify[config];
            yankee = offset.bind(tango)(yankee);
            romeo = yankee.intl;
            yankee = romeo.format;
            verify = verify[config];
            verify = offset.bind(tango)(verify);
            verify = verify.t;
            offset = verify.Up+hSE;
            verify = {};
            foxtrot = 'https://support.discord.com/hc/articles/9665451164951';
            verify['supportURL'] = foxtrot;
            verify = yankee.bind(romeo)(offset, verify);
            report['children'] = verify;
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            oscar = !oscar;
            if(!oscar) { _fun00002_ip = 563; continue _fun00001 }
 233:
            verify = _closure1_slot9;
            options = _closure1_slot4;
            golf = {};
            offset = context.card;
            golf['style'] = offset;
            romeo = _closure1_slot9;
            source = _closure1_slot0;
            update = _closure1_slot2;
            offset = 14;
            offset = update[offset];
            offset = source.bind(tango)(offset);
            yankee = offset.Card;
            offset = {'border': 'none', 'shadow': 'none'};
            kilo = _closure1_slot10;
            backup = _closure1_slot4;
            foxtrot = {};
            sizing = context.cardContent;
            foxtrot['style'] = sizing;
            control = _closure1_slot9;
            record = _closure1_slot1;
            vacuum = 15;
            sizing = update[vacuum];
            echo = record.bind(tango)(sizing);
            sizing = {};
            context = context.cardIcon;
            sizing['style'] = context;
            context = 16;
            context = update[context];
            context = record.bind(tango)(context);
            sizing['source'] = context;
            vacuum = update[vacuum];
            vacuum = record.bind(tango)(vacuum);
            vacuum = vacuum.Sizes;
            vacuum = vacuum.SMALL;
            sizing['size'] = vacuum;
            vacuum = 8;
            vacuum = update[vacuum];
            vacuum = record.bind(tango)(vacuum);
            vacuum = vacuum.unsafe_rawColors;
            vacuum = vacuum.PRIMARY_400;
            sizing['color'] = vacuum;
            echo = control.bind(tango)(echo, sizing);
            sizing = new Array(2);
            sizing[0] = echo;
            echo = _closure1_slot9;
            output = update[output];
            output = source.bind(tango)(output);
            result = output.TextWithIOSLinkWorkaround;
            output = {'variant': 'text-sm/medium', 'color': 'text-muted'};
            control = update[config];
            control = source.bind(tango)(control);
            vacuum = control.intl;
            control = vacuum.format;
            update = update[config];
            update = source.bind(tango)(update);
            update = update.t;
            source = update.uW1zur;
            update = {};
            sequence = function() { // Original name: onClick
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 17;
                zulu = zulu[entity];
                entity = undefined;
                report = tango.bind(entity)(zulu);
                tango = report.setSection;
                zulu = _closure1_slot8;
                zulu = zulu.PREMIUM;
                zulu = tango.bind(report)(zulu);
                report = _closure2_slot0;
                tango = report.push;
                mike = _closure1_slot8;
                zulu = mike.PREMIUM;
                mike = {};
                oscar = true;
                mike['isFromTextSection'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            update['onClick'] = sequence;
            update = control.bind(vacuum)(source, update);
            output['children'] = update;
            output = echo.bind(tango)(result, output);
            sizing[1] = output;
            foxtrot['children'] = sizing;
            foxtrot = kilo.bind(tango)(backup, foxtrot);
            offset['children'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            golf['children'] = offset;
            oscar = verify.bind(tango)(options, golf);
 563:
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.MobileSetting;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.UserSettingsSections;
    var _closure1_slot8 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot10 = tango;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'marginTop': 8, 'borderColor': null, 'borderWidth': 1};
    offset = 8;
    yankee = oscar[offset];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.REDESIGN_INPUT_CONTROL_SELECTED;
    verify['borderColor'] = yankee;
    yankee = oscar[offset];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.lg;
    verify['borderRadius'] = yankee;
    tango['card'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tango['cardContent'] = verify;
    verify = {};
    verify['marginEnd'] = offset;
    tango['cardIcon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = 22;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/settings/screens/SettingsChatScreen.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: SettingsChatScreen
        mike = _closure1_slot0;
        golf = _closure1_slot2;
        tango = 18;
        report = golf[tango];
        tango = undefined;
        oscar = mike.bind(tango)(report);
        report = oscar.useCanUseCustomChatRenderer;
        report = report.bind(oscar)();
        yankee = report.canUseRenderer;
        var _closure2_slot0 = yankee;
        offset = report.forceUseRenderer;
        var _closure2_slot1 = offset;
        verify = _closure1_slot3;
        options = verify.useMemo;
        oscar = function() {
            mike = {};
            golf = _closure1_slot0;
            options = _closure1_slot2;
            zulu = 13;
            entity = options[zulu];
            oscar = undefined;
            entity = golf.bind(oscar)(entity);
            verify = entity.intl;
            tango = verify.string;
            entity = options[zulu];
            entity = golf.bind(oscar)(entity);
            entity = entity.t;
            entity = entity.U68Dgo;
            entity = tango.bind(verify)(entity);
            mike['label'] = entity;
            tango = _closure1_slot7;
            verify = tango.DISPLAY_MEDIA_LINKS;
            entity = new Array(3);
            entity[0] = verify;
            verify = tango.DISPLAY_MEDIA_UPLOADS;
            entity[1] = verify;
            verify = tango.IMAGE_DESCRIPTIONS;
            entity[2] = verify;
            mike['settings'] = entity;
            entity = options[zulu];
            entity = golf.bind(oscar)(entity);
            offset = entity.intl;
            verify = offset.string;
            entity = options[zulu];
            entity = golf.bind(oscar)(entity);
            entity = entity.t;
            entity = entity.T0rbtL;
            entity = verify.bind(offset)(entity);
            mike['subLabel'] = entity;
            entity = new Array(10);
            entity[0] = mike;
            mike = {};
            verify = options[zulu];
            verify = golf.bind(oscar)(verify);
            yankee = verify.intl;
            offset = yankee.string;
            verify = options[zulu];
            verify = golf.bind(oscar)(verify);
            verify = verify.t;
            verify = verify.YTnrbW;
            verify = offset.bind(yankee)(verify);
            mike['label'] = verify;
            offset = tango.SAVE_CAMERA_UPLOADS_TO_DEVICE;
            verify = new Array(1);
            verify[0] = offset;
            mike['settings'] = verify;
            verify = options[zulu];
            verify = golf.bind(oscar)(verify);
            yankee = verify.intl;
            offset = yankee.string;
            verify = options[zulu];
            verify = golf.bind(oscar)(verify);
            verify = verify.t;
            verify = verify.eZmJYG;
            verify = offset.bind(yankee)(verify);
            mike['subLabel'] = verify;
            entity[1] = mike;
            mike = {};
            offset = tango.VIDEO_UPLOAD_QUALITY;
            verify = new Array(1);
            verify[0] = offset;
            mike['settings'] = verify;
            offset = _closure1_slot9;
            verify = _closure1_slot12;
            report = {};
            report = offset.bind(oscar)(verify, report);
            mike['subLabel'] = report;
            entity[2] = mike;
            mike = {};
            report = options[zulu];
            report = golf.bind(oscar)(report);
            offset = report.intl;
            verify = offset.string;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            report = report.t;
            report = report.fyG8t7;
            report = verify.bind(offset)(report);
            mike['label'] = report;
            verify = tango.DATA_SAVING_MODE;
            report = new Array(1);
            report[0] = verify;
            mike['settings'] = report;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            offset = report.intl;
            verify = offset.string;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            report = report.t;
            report = report.wC0+Pj;
            report = verify.bind(offset)(report);
            mike['subLabel'] = report;
            entity[3] = mike;
            mike = {};
            report = options[zulu];
            report = golf.bind(oscar)(report);
            offset = report.intl;
            verify = offset.string;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            report = report.t;
            report = report.PWZOn5;
            report = verify.bind(offset)(report);
            mike['label'] = report;
            verify = tango.EMBED_AND_LINK_PREVIEWS;
            report = new Array(1);
            report[0] = verify;
            mike['settings'] = report;
            entity[4] = mike;
            mike = {};
            report = options[zulu];
            report = golf.bind(oscar)(report);
            offset = report.intl;
            verify = offset.string;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            report = report.t;
            report = report.sMOuub;
            report = verify.bind(offset)(report);
            mike['label'] = report;
            verify = tango.EMOJI_REACTIONS_ON_MESSAGES;
            report = new Array(2);
            report[0] = verify;
            verify = tango.CHAT_EMOJI_EMOTICONS;
            report[1] = verify;
            mike['settings'] = report;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            offset = report.intl;
            verify = offset.string;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            report = report.t;
            report = report.20dvub;
            report = verify.bind(offset)(report);
            mike['subLabel'] = report;
            entity[5] = mike;
            mike = {};
            report = options[zulu];
            report = golf.bind(oscar)(report);
            offset = report.intl;
            verify = offset.string;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            report = report.t;
            report = report.6NtAuL;
            report = verify.bind(offset)(report);
            mike['label'] = report;
            verify = tango.STICKER_SUGGESTIONS;
            report = new Array(1);
            report[0] = verify;
            mike['settings'] = report;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            offset = report.intl;
            verify = offset.string;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            report = report.t;
            report = report.r3uQUV;
            report = verify.bind(offset)(report);
            mike['subLabel'] = report;
            entity[6] = mike;
            mike = {};
            report = options[zulu];
            report = golf.bind(oscar)(report);
            offset = report.intl;
            verify = offset.string;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            report = report.t;
            report = report.29xPVV;
            report = verify.bind(offset)(report);
            mike['label'] = report;
            verify = tango.STICKER_AUTOCOMPLETE;
            report = new Array(1);
            report[0] = verify;
            mike['settings'] = report;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            offset = report.intl;
            verify = offset.string;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            report = report.t;
            report = report./eVrj4;
            report = verify.bind(offset)(report);
            mike['subLabel'] = report;
            entity[7] = mike;
            mike = {};
            verify = tango.CHAT_GESTURES;
            report = new Array(1);
            report[0] = verify;
            mike['settings'] = report;
            entity[8] = mike;
            mike = {};
            report = options[zulu];
            report = golf.bind(oscar)(report);
            offset = report.intl;
            verify = offset.string;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            report = report.t;
            report = report.BkuOOz;
            report = verify.bind(offset)(report);
            mike['label'] = report;
            report = tango.TEXT_AND_MEDIA_SYNC;
            tango = new Array(1);
            tango[0] = report;
            mike['settings'] = tango;
            tango = options[zulu];
            tango = golf.bind(oscar)(tango);
            report = tango.intl;
            tango = report.string;
            zulu = options[zulu];
            zulu = golf.bind(oscar)(zulu);
            zulu = zulu.t;
            zulu = zulu.p4IKEx;
            zulu = tango.bind(report)(zulu);
            mike['subLabel'] = zulu;
            entity[9] = mike;
            return entity;
        };
        report = new Array(0);
        oscar = options.bind(verify)(oscar, report);
        romeo = verify.useEffect;
        options = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 19;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.trackExposure;
            mike = {};
            report = 'Settings Chat Screen';
            mike['location'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        report = new Array(0);
        report = romeo.bind(verify)(options, report);
        options = verify.useMemo;
        report = new Array(2);
        report[0] = yankee;
        report[1] = offset;
        zulu = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                tango = _closure2_slot0;
                entity = null;
                if(!tango) { _fun00004_ip = 64; continue _fun00003 }
 12:
                mike = _closure2_slot1;
                entity = null;
                if(mike) { _fun00004_ip = 64; continue _fun00003 }
 21:
                report = _closure1_slot9;
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                mike = 20;
                mike = tango[mike];
                tango = undefined;
                mike = zulu.bind(tango)(mike);
                zulu = mike.CustomRendererSetting;
                mike = {};
                entity = report.bind(tango)(zulu, mike);
 64:
                return entity;
            }
        };
        report = options.bind(verify)(zulu, report);
        zulu = _closure1_slot9;
        entity = 21;
        entity = golf[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.SettingsList;
        entity = {};
        entity['sections'] = oscar;
        entity['ListHeaderComponent'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();