// app/modules/main_tabs_v2/native/settings/screens/account/SettingsAccountHeader.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: RestrictedAccountRedirect
        entity = function() { // Original name: handleRestrictedAccountRedirect
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 8;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.openUserSettings;
            mike = {};
            report = _closure1_slot7;
            report = report.SETTINGS_CONTENT_AND_SOCIAL;
            mike['screen'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        var _closure2_slot0 = entity;
        entity = _closure1_slot10;
        tango = undefined;
        report = entity.bind(tango)();
        zulu = _closure1_slot9;
        mike = _closure1_slot4;
        entity = {};
        report = report.blockedIgnoredRedirect;
        entity['style'] = report;
        options = _closure1_slot8;
        offset = _closure1_slot0;
        backup = _closure1_slot2;
        report = 9;
        report = backup[report];
        report = offset.bind(tango)(report);
        golf = report.CircleInformationIcon;
        report = {};
        verify = 'text-link';
        report['color'] = verify;
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        options = _closure1_slot8;
        oscar = 10;
        oscar = backup[oscar];
        oscar = offset.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {};
        verify = {};
        yankee = 1;
        verify['flexShrink'] = yankee;
        oscar['style'] = verify;
        verify = 'heading-sm/medium';
        oscar['variant'] = verify;
        verify = 11;
        yankee = backup[verify];
        yankee = offset.bind(tango)(yankee);
        romeo = yankee.intl;
        yankee = romeo.format;
        verify = backup[verify];
        verify = offset.bind(tango)(verify);
        verify = verify.t;
        offset = verify.zqv4nZ;
        verify = {};
        foxtrot = function(argFoo) { // Original name: hook
            tango = _closure1_slot8;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 10;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.Text;
            entity = {'role': 'link', 'variant': 'heading-sm/medium', 'color': 'text-link'};
            report = _closure2_slot0;
            entity['onPress'] = report;
            report = argFoo;
            entity['children'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        verify['hook'] = foxtrot;
        verify = yankee.bind(romeo)(offset, verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot3 = golf;
    foxtrot = 1;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticsSections;
    var _closure1_slot7 = tango;
    tango = 5;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot8 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {};
    yankee = 7;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_24;
    offset['paddingTop'] = backup;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_24;
    offset['gap'] = backup;
    tango['header'] = offset;
    offset = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    offset['gap'] = backup;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    offset['padding'] = backup;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xs;
    offset['borderRadius'] = backup;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.TEXT_LINK;
    offset['borderColor'] = backup;
    offset['borderWidth'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.INFO_BOX_BACKGROUND;
    offset['backgroundColor'] = yankee;
    tango['blockedIgnoredRedirect'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot10 = tango;
    tango = golf.memo;
    mike = function() {
        _fun100003: for(var _fun100003_ip = 0; ; ) switch(_fun100003_ip) {
 0:
            mike = _closure1_slot10;
            report = undefined;
            options = mike.bind(report)();
            zulu = _closure1_slot0;
            tango = _closure1_slot2;
            mike = 12;
            oscar = tango[mike];
            offset = zulu.bind(report)(oscar);
            verify = offset.useStateFromStores;
            oscar = _closure1_slot6;
            golf = new Array(1);
            golf[0] = oscar;
            oscar = function() {
                mike = _closure1_slot6;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            verify = verify.bind(offset)(golf, oscar);
            oscar = 13;
            oscar = tango[oscar];
            golf = zulu.bind(report)(oscar);
            oscar = golf.getBannerText;
            kilo = oscar.bind(golf)(verify);
            mike = tango[mike];
            oscar = zulu.bind(report)(mike);
            tango = oscar.useStateFromStores;
            mike = _closure1_slot5;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                mike = _closure1_slot5;
                entity = mike.getBlockedOrIgnoredIDs;
                entity = entity.bind(mike)();
                mike = entity.length;
                entity = 0;
                entity = mike > entity;
                return entity;
            };
            oscar = tango.bind(oscar)(zulu, mike);
            tango = _closure1_slot3;
            zulu = tango.useCallback;
            mike = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 14;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.open;
                mike = mike.bind(zulu)();
                return entity;
            };
            entity = new Array(0);
            backup = zulu.bind(tango)(mike, entity);
            golf = null;
            if(!(golf == kilo)) { _fun100003_ip = 167; continue _fun100003 }
 159:
            entity = null;
            if(!oscar) { _fun100003_ip = 378; continue _fun100003 }
 167:
            tango = _closure1_slot9;
            zulu = _closure1_slot4;
            mike = {};
            options = options.header;
            mike['style'] = options;
            options = null;
            if(!oscar) { _fun100003_ip = 207; continue _fun100003 }
 191:
            offset = _closure1_slot8;
            verify = _closure1_slot11;
            oscar = {};
            options = offset.bind(report)(verify, oscar);
 207:
            oscar = new Array(2);
            oscar[0] = options;
            options = golf != kilo;
            golf = null;
            if(!options) { _fun100003_ip = 364; continue _fun100003 }
 227:
            offset = _closure1_slot8;
            romeo = _closure1_slot0;
            sizing = _closure1_slot2;
            options = 15;
            options = sizing[options];
            options = romeo.bind(report)(options);
            verify = options.TableRow;
            options = {};
            options['onPress'] = backup;
            foxtrot = 'danger';
            options['variant'] = foxtrot;
            foxtrot = kilo.title;
            options['label'] = foxtrot;
            foxtrot = kilo.title;
            options['accessibilityLabel'] = foxtrot;
            foxtrot = _closure1_slot8;
            yankee = 16;
            yankee = sizing[yankee];
            yankee = romeo.bind(report)(yankee);
            romeo = yankee.Button;
            yankee = {};
            sizing = kilo.button;
            yankee['text'] = sizing;
            kilo = kilo.button;
            yankee['accessibilityLabel'] = kilo;
            yankee['onPress'] = backup;
            yankee = foxtrot.bind(report)(romeo, yankee);
            options['trailing'] = yankee;
            yankee = true;
            options['start'] = yankee;
            options['end'] = yankee;
            golf = offset.bind(report)(verify, options);
 364:
            oscar[1] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 378:
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/settings/screens/account/SettingsAccountHeader.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();