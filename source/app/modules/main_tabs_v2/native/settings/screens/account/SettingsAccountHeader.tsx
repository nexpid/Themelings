// app/modules/main_tabs_v2/native/settings/screens/account/SettingsAccountHeader.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: RestrictedAccountRedirect
        tangon = _closure1_slot9;
        michal = _closure1_slot1;
        option = _closure1_slot2;
        entity = 9;
        entity = option[entity];
        zuuluu = undefined;
        michal = michal.bind(zuuluu)(entity);
        entity = {};
        golfie = _closure1_slot0;
        oscard = 10;
        oscard = option[oscard];
        oscard = golfie.bind(zuuluu)(oscard);
        oscard = oscard.t;
        oscard = oscard.zqv4nZ;
        entity['label'] = oscard;
        oscard = function() { // Original name: labelHook
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 11;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.openUserSettings;
            michal = {};
            report = _closure1_slot7;
            report = report.SETTINGS_CONTENT_AND_SOCIAL;
            michal['screen'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity['labelHook'] = oscard;
        report = _closure1_slot8;
        report = report.RESTRICTED_ACCOUNTS_SETTING_NOTICE;
        entity['noticeType'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticsSections;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.SafetySettingsNoticeType;
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot9 = option;
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    yankee = 8;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    offset['paddingTop'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_24;
    offset['gap'] = yankee;
    tangon['header'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot11 = tangon;
    tangon = golfie.memo;
    michal = function() {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = _closure1_slot11;
            report = undefined;
            option = michal.bind(report)();
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            michal = 12;
            oscard = tangon[michal];
            offset = zuuluu.bind(report)(oscard);
            verify = offset.useStateFromStores;
            oscard = _closure1_slot6;
            golfie = new Array(1);
            golfie[0] = oscard;
            oscard = function() {
                michal = _closure1_slot6;
                entity = michal.getCurrentUser;
                entity = entity.bind(michal)();
                return entity;
            };
            verify = verify.bind(offset)(golfie, oscard);
            oscard = 13;
            oscard = tangon[oscard];
            golfie = zuuluu.bind(report)(oscard);
            oscard = golfie.getBannerText;
            kiloes = oscard.bind(golfie)(verify);
            michal = tangon[michal];
            oscard = zuuluu.bind(report)(michal);
            tangon = oscard.useStateFromStores;
            michal = _closure1_slot5;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                michal = _closure1_slot5;
                entity = michal.getBlockedOrIgnoredIDs;
                entity = entity.bind(michal)();
                michal = entity.length;
                entity = 0;
                entity = michal > entity;
                return entity;
            };
            oscard = tangon.bind(oscard)(zuuluu, michal);
            tangon = _closure1_slot3;
            zuuluu = tangon.useCallback;
            michal = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 14;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.open;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            entity = new Array(0);
            backup = zuuluu.bind(tangon)(michal, entity);
            golfie = null;
            if(!(golfie == kiloes)) { _fun00002_ip = 167; continue _fun00001 }
 159:
            entity = null;
            if(!oscard) { _fun00002_ip = 378; continue _fun00001 }
 167:
            tangon = _closure1_slot10;
            zuuluu = _closure1_slot4;
            michal = {};
            option = option.header;
            michal['style'] = option;
            option = null;
            if(!oscard) { _fun00002_ip = 207; continue _fun00001 }
 191:
            offset = _closure1_slot9;
            verify = _closure1_slot12;
            oscard = {};
            option = offset.bind(report)(verify, oscard);
 207:
            oscard = new Array(2);
            oscard[0] = option;
            option = golfie != kiloes;
            golfie = null;
            if(!option) { _fun00002_ip = 364; continue _fun00001 }
 227:
            offset = _closure1_slot9;
            romeon = _closure1_slot0;
            sizing = _closure1_slot2;
            option = 15;
            option = sizing[option];
            option = romeon.bind(report)(option);
            verify = option.TableRow;
            option = {};
            option['onPress'] = backup;
            foxtra = 'danger';
            option['variant'] = foxtra;
            foxtra = kiloes.title;
            option['label'] = foxtra;
            foxtra = kiloes.title;
            option['accessibilityLabel'] = foxtra;
            foxtra = _closure1_slot9;
            yankee = 16;
            yankee = sizing[yankee];
            yankee = romeon.bind(report)(yankee);
            romeon = yankee.Button;
            yankee = {};
            sizing = kiloes.button;
            yankee['text'] = sizing;
            kiloes = kiloes.button;
            yankee['accessibilityLabel'] = kiloes;
            yankee['onPress'] = backup;
            yankee = foxtra.bind(report)(romeon, yankee);
            option['trailing'] = yankee;
            yankee = true;
            option['start'] = yankee;
            option['end'] = yankee;
            golfie = offset.bind(report)(verify, option);
 364:
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 378:
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/screens/account/SettingsAccountHeader.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();