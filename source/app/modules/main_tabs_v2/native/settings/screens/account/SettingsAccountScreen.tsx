// app/modules/main_tabs_v2/native/settings/screens/account/SettingsAccountScreen.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = golf;
    entity = function() { // Original name: PasswordlessUpsell
        entity = _closure1_slot15;
        tango = undefined;
        output = entity.bind(tango)();
        target = _closure1_slot0;
        status = _closure1_slot2;
        entity = 11;
        entity = status[entity];
        mike = target.bind(tango)(entity);
        entity = mike.useNavigation;
        entity = entity.bind(mike)();
        var _closure2_slot0 = entity;
        zulu = _closure1_slot11;
        mike = _closure1_slot5;
        entity = {};
        report = output.upsellPasswordless;
        entity['style'] = report;
        golf = _closure1_slot11;
        report = 12;
        report = status[report];
        report = target.bind(tango)(report);
        oscar = report.Card;
        report = {'border': 'none', 'shadow': 'none'};
        offset = _closure1_slot12;
        verify = _closure1_slot5;
        options = {};
        vacuum = 'row';
        yankee = {'flexDirection': 'row', 'gap': 8};
        options['style'] = yankee;
        foxtrot = _closure1_slot11;
        romeo = _closure1_slot5;
        yankee = {};
        backup = {'width': 70, 'height': 70};
        yankee['style'] = backup;
        sizing = _closure1_slot11;
        kilo = _closure1_slot1;
        backup = 13;
        backup = status[backup];
        kilo = kilo.bind(tango)(backup);
        backup = {};
        result = 14;
        result = status[result];
        result = target.bind(tango)(result);
        backup['source'] = result;
        result = 'contain';
        backup['resizeMode'] = result;
        output = output.upsellImagePasswordless;
        backup['style'] = output;
        backup = sizing.bind(tango)(kilo, backup);
        yankee['children'] = backup;
        romeo = foxtrot.bind(tango)(romeo, yankee);
        yankee = new Array(2);
        yankee[0] = romeo;
        backup = _closure1_slot11;
        foxtrot = _closure1_slot5;
        romeo = {};
        sizing = _closure1_slot12;
        kilo = {};
        output = {'width': '90%', 'gap': 8};
        kilo['style'] = output;
        update = _closure1_slot11;
        result = 15;
        output = status[result];
        output = target.bind(tango)(output);
        echo = output.Text;
        output = {'variant': 'heading-lg/medium', 'color': 'header-primary'};
        record = 16;
        source = status[record];
        source = target.bind(tango)(source);
        context = source.intl;
        sequence = context.string;
        source = status[record];
        source = target.bind(tango)(source);
        source = source.t;
        source = source.+Svv4+;
        source = sequence.bind(context)(source);
        output['children'] = source;
        echo = update.bind(tango)(echo, output);
        output = new Array(3);
        output[0] = echo;
        update = _closure1_slot11;
        result = status[result];
        result = target.bind(tango)(result);
        echo = result.Text;
        result = {'variant': 'text-md/normal', 'color': 'text-muted'};
        source = status[record];
        source = target.bind(tango)(source);
        context = source.intl;
        sequence = context.string;
        source = status[record];
        source = target.bind(tango)(source);
        source = source.t;
        source = source.S0g2Ky;
        source = sequence.bind(context)(source);
        result['children'] = source;
        result = update.bind(tango)(echo, result);
        output[1] = result;
        update = _closure1_slot12;
        echo = _closure1_slot5;
        result = {};
        source = {};
        source['flexDirection'] = vacuum;
        result['style'] = source;
        sequence = _closure1_slot11;
        source = 17;
        source = status[source];
        source = target.bind(tango)(source);
        vacuum = source.Button;
        source = {};
        context = status[record];
        context = target.bind(tango)(context);
        papa = context.intl;
        context = papa.string;
        record = status[record];
        record = target.bind(tango)(record);
        record = record.t;
        record = record.piGf5e;
        record = context.bind(papa)(record);
        source['text'] = record;
        config = function() { // Original name: onPress
            tango = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 18;
            zulu = mike[entity];
            entity = undefined;
            report = tango.bind(entity)(zulu);
            tango = report.pushLazy;
            golf = _closure1_slot0;
            zulu = 20;
            zulu = mike[zulu];
            golf = golf.bind(entity)(zulu);
            zulu = 19;
            zulu = mike[zulu];
            mike = mike.paths;
            zulu = golf.bind(entity)(zulu, mike);
            mike = {};
            golf = _closure2_slot0;
            mike['navigation'] = golf;
            oscar = _closure1_slot10;
            oscar = oscar.REGISTER;
            mike['initialRouteName'] = oscar;
            oscar = true;
            mike['showNav'] = oscar;
            mike = tango.bind(report)(zulu, mike);
            return entity;
        };
        source['onPress'] = config;
        config = 'sm';
        source['size'] = config;
        vacuum = sequence.bind(tango)(vacuum, source);
        source = new Array(2);
        source[0] = vacuum;
        sequence = _closure1_slot11;
        vacuum = _closure1_slot5;
        control = {};
        control = sequence.bind(tango)(vacuum, control);
        source[1] = control;
        result['children'] = source;
        result = update.bind(tango)(echo, result);
        output[2] = result;
        kilo['children'] = output;
        kilo = sizing.bind(tango)(foxtrot, kilo);
        romeo['children'] = kilo;
        romeo = backup.bind(tango)(foxtrot, romeo);
        yankee[1] = romeo;
        options['children'] = yankee;
        options = offset.bind(tango)(verify, options);
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot16 = entity;
    entity = function() { // Original name: AccountTwoFALabel
        _fun92770: for(var _fun92770_ip = 0; ; ) switch(_fun92770_ip) {
 0:
            zulu = _closure1_slot0;
            report = _closure1_slot2;
            mike = 21;
            mike = report[mike];
            tango = undefined;
            verify = zulu.bind(tango)(mike);
            options = verify.useStateFromStoresObject;
            mike = _closure1_slot6;
            golf = new Array(1);
            golf[0] = mike;
            mike = function() {
                entity = _closure1_slot6;
                zulu = entity.hasCredentials;
                entity = new Array(2);
                entity[0] = zulu;
                zulu = _closure1_slot6;
                mike = zulu.hasFetchedCredentials;
                mike = mike.bind(zulu)();
                entity[1] = mike;
                return entity;
            };
            options = options.bind(verify)(golf, mike);
            golf = _closure1_slot3;
            mike = 2;
            golf = golf.bind(tango)(options, mike);
            mike = 0;
            verify = golf[mike];
            var _closure2_slot0 = verify;
            mike = 1;
            options = golf[mike];
            var _closure2_slot1 = options;
            mike = 22;
            mike = report[mike];
            zulu = zulu.bind(tango)(mike);
            mike = zulu.useIsUserVerified;
            mike = mike.bind(zulu)();
            var _closure2_slot2 = mike;
            golf = _closure1_slot4;
            report = golf.useMemo;
            zulu = new Array(3);
            zulu[0] = options;
            zulu[1] = verify;
            zulu[2] = mike;
            mike = function() {
                _fun92772: for(var _fun92772_ip = 0; ; ) switch(_fun92772_ip) {
 0:
                    entity = _closure2_slot2;
                    if(!entity) { _fun92772_ip = 14; continue _fun92772 }
 10:
                    entity = _closure2_slot1;
 14:
                    if(!entity) { _fun92772_ip = 24; continue _fun92772 }
 17:
                    mike = _closure2_slot0;
                    entity = !mike;
 24:
                    return entity;
                }
            };
            report = report.bind(golf)(mike, zulu);
            golf = _closure1_slot4;
            zulu = golf.useEffect;
            mike = new Array(1);
            mike[0] = options;
            entity = function() {
                _fun92773: for(var _fun92773_ip = 0; ; ) switch(_fun92773_ip) {
 0:
                    entity = _closure2_slot1;
                    if(entity) { _fun92773_ip = 45; continue _fun92773 }
 10:
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 23;
                    mike = mike[entity];
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    entity = mike.fetchWebAuthnCredentials;
                    entity = entity.bind(mike)();
 45:
                    entity = undefined;
                    return entity;
                }
            };
            entity = zulu.bind(golf)(entity, mike);
            zulu = _closure1_slot12;
            mike = _closure1_slot13;
            entity = {};
            golf = report;
            if(!golf) { _fun92770_ip = 218; continue _fun92770 }
 202:
            verify = _closure1_slot11;
            options = _closure1_slot16;
            report = {};
            golf = verify.bind(tango)(options, report);
 218:
            report = new Array(2);
            report[0] = golf;
            options = _closure1_slot11;
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            oscar = 24;
            oscar = foxtrot[oscar];
            oscar = romeo.bind(tango)(oscar);
            golf = oscar.TableRowGroupTitle;
            oscar = {};
            verify = 16;
            offset = foxtrot[verify];
            offset = romeo.bind(tango)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = foxtrot[verify];
            verify = romeo.bind(tango)(verify);
            verify = verify.t;
            verify = verify.fuTmEB;
            verify = offset.bind(yankee)(verify);
            oscar['title'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot17 = entity;
    entity = function() { // Original name: AccountSecurityPage
        tango = _closure1_slot4;
        zulu = tango.useMemo;
        mike = function() {
            entity = {};
            options = _closure1_slot0;
            verify = _closure1_slot2;
            mike = 16;
            zulu = verify[mike];
            golf = undefined;
            zulu = options.bind(golf)(zulu);
            oscar = zulu.intl;
            report = oscar.string;
            zulu = verify[mike];
            zulu = options.bind(golf)(zulu);
            zulu = zulu.t;
            zulu = zulu.e262Nj;
            zulu = report.bind(oscar)(zulu);
            entity['label'] = zulu;
            zulu = _closure1_slot8;
            report = zulu.ACCOUNT_USERNAME;
            zulu = new Array(4);
            zulu[0] = report;
            report = _closure1_slot8;
            report = report.ACCOUNT_DISPLAY_NAME;
            zulu[1] = report;
            report = _closure1_slot8;
            report = report.ACCOUNT_EMAIL;
            zulu[2] = report;
            report = _closure1_slot8;
            report = report.ACCOUNT_PHONE;
            zulu[3] = report;
            entity['settings'] = zulu;
            zulu = new Array(3);
            zulu[0] = entity;
            entity = {};
            offset = _closure1_slot11;
            oscar = _closure1_slot17;
            report = {};
            report = offset.bind(golf)(oscar, report);
            entity['label'] = report;
            report = _closure1_slot8;
            oscar = report.ACCOUNT_CHANGE_PASSWORD;
            report = new Array(6);
            report[0] = oscar;
            oscar = _closure1_slot8;
            oscar = oscar.ACCOUNT_WEB_AUTHN_VIEW;
            report[1] = oscar;
            oscar = _closure1_slot8;
            oscar = oscar.ACCOUNT_ENABLE_2FA;
            report[2] = oscar;
            oscar = _closure1_slot8;
            oscar = oscar.ACCOUNT_VIEW_BACKUP_CODES;
            report[3] = oscar;
            oscar = _closure1_slot8;
            oscar = oscar.ACCOUNT_REMOVE_2FA;
            report[4] = oscar;
            oscar = _closure1_slot8;
            oscar = oscar.ACCOUNT_SMS_BACKUP;
            report[5] = oscar;
            entity['settings'] = report;
            zulu[1] = entity;
            entity = {};
            report = verify[mike];
            report = options.bind(golf)(report);
            oscar = report.intl;
            report = oscar.string;
            mike = verify[mike];
            mike = options.bind(golf)(mike);
            mike = mike.t;
            mike = mike.5V0AkJ;
            mike = report.bind(oscar)(mike);
            entity['label'] = mike;
            mike = _closure1_slot8;
            report = mike.ACCOUNT_DISABLE;
            mike = new Array(2);
            mike[0] = report;
            tango = _closure1_slot8;
            tango = tango.ACCOUNT_DELETE;
            mike[1] = tango;
            entity['settings'] = mike;
            zulu[2] = entity;
            mike = zulu.filter;
            entity = global;
            entity = entity.Boolean;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        entity = new Array(0);
        oscar = zulu.bind(tango)(mike, entity);
        tango = _closure1_slot11;
        mike = _closure1_slot0;
        golf = _closure1_slot2;
        entity = 25;
        entity = golf[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.SettingsList;
        entity = {};
        entity['sections'] = oscar;
        oscar = _closure1_slot1;
        report = 26;
        report = golf[report];
        report = oscar.bind(zulu)(report);
        entity['ListHeaderComponent'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    var _closure1_slot18 = entity;
    entity = function() { // Original name: AccountStandingPage
        zulu = _closure1_slot0;
        tango = _closure1_slot2;
        mike = 27;
        mike = tango[mike];
        tango = undefined;
        mike = zulu.bind(tango)(mike);
        zulu = mike.default;
        mike = _closure1_slot11;
        entity = {};
        report = true;
        entity['visible'] = report;
        entity = mike.bind(tango)(zulu, entity);
        return entity;
    };
    var _closure1_slot19 = entity;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    entity = 0;
    mike = golf[entity];
    entity = undefined;
    mike = foxtrot.bind(entity)(mike);
    var _closure1_slot3 = mike;
    backup = 1;
    report = golf[backup];
    mike = argCorge;
    options = mike.bind(entity)(report);
    var _closure1_slot4 = options;
    mike = 2;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.View;
    var _closure1_slot5 = mike;
    mike = 3;
    mike = golf[mike];
    mike = foxtrot.bind(entity)(mike);
    var _closure1_slot6 = mike;
    mike = 4;
    mike = golf[mike];
    mike = foxtrot.bind(entity)(mike);
    var _closure1_slot7 = mike;
    mike = 5;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.MobileSetting;
    var _closure1_slot8 = mike;
    mike = 6;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.AnalyticEvents;
    var _closure1_slot9 = mike;
    mike = 7;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.WebAuthnScreens;
    var _closure1_slot10 = mike;
    mike = 8;
    report = golf[mike];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot11 = report;
    report = golf[mike];
    report = oscar.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot12 = report;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.Fragment;
    var _closure1_slot13 = mike;
    mike = {};
    report = 'SECURITY';
    mike['SECURITY'] = report;
    report = 'STANDING';
    mike['STANDING'] = report;
    var _closure1_slot14 = mike;
    report = 9;
    report = golf[report];
    offset = oscar.bind(entity)(report);
    verify = offset.createStyles;
    report = {};
    yankee = {'marginBottom': 16, 'borderColor': null, 'borderWidth': 1};
    romeo = 10;
    kilo = golf[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.REDESIGN_INPUT_CONTROL_SELECTED;
    yankee['borderColor'] = kilo;
    kilo = golf[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.lg;
    yankee['borderRadius'] = kilo;
    report['upsellPasswordless'] = yankee;
    yankee = {'height': '100%', 'width': '100%'};
    report['upsellImagePasswordless'] = yankee;
    yankee = {};
    kilo = golf[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_16;
    yankee['paddingHorizontal'] = kilo;
    kilo = golf[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_16;
    yankee['paddingTop'] = kilo;
    report['controlContainer'] = yankee;
    yankee = {};
    yankee['flex'] = backup;
    report['pageContainer'] = yankee;
    yankee = {};
    romeo = golf[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    yankee['paddingTop'] = romeo;
    report['standingPage'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot15 = report;
    report = options.memo;
    tango = function() {
        _fun92777: for(var _fun92777_ip = 0; ; ) switch(_fun92777_ip) {
 0:
            entity = _closure1_slot15;
            tango = undefined;
            yankee = entity.bind(tango)();
            mike = _closure1_slot4;
            entity = mike.useState;
            oscar = 0;
            zulu = entity.bind(mike)(oscar);
            mike = _closure1_slot3;
            entity = 2;
            entity = mike.bind(tango)(zulu, entity);
            foxtrot = entity[oscar];
            golf = 1;
            entity = entity[golf];
            var _closure2_slot0 = entity;
            options = _closure1_slot4;
            zulu = options.useCallback;
            mike = function(argFoo) {
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                zulu = entity.width;
                mike = _closure2_slot0;
                entity = undefined;
                mike = mike.bind(entity)(zulu);
                return entity;
            };
            entity = new Array(0);
            options = zulu.bind(options)(mike, entity);
            echo = _closure1_slot0;
            update = _closure1_slot2;
            entity = 21;
            entity = update[entity];
            offset = echo.bind(tango)(entity);
            zulu = offset.useStateFromStores;
            entity = _closure1_slot7;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure1_slot7;
                entity = mike.getSubsection;
                entity = entity.bind(mike)();
                return entity;
            };
            romeo = zulu.bind(offset)(mike, entity);
            entity = 28;
            entity = update[entity];
            zulu = echo.bind(tango)(entity);
            mike = zulu.useSegmentedControlState;
            entity = {};
            kilo = {};
            sizing = 16;
            offset = update[sizing];
            offset = echo.bind(tango)(offset);
            output = offset.intl;
            backup = output.string;
            offset = update[sizing];
            offset = echo.bind(tango)(offset);
            offset = offset.t;
            offset = offset.Am9YHh;
            offset = backup.bind(output)(offset);
            kilo['label'] = offset;
            offset = _closure1_slot14;
            backup = offset.SECURITY;
            kilo['id'] = backup;
            result = _closure1_slot11;
            output = _closure1_slot18;
            backup = {};
            backup = result.bind(tango)(output, backup);
            kilo['page'] = backup;
            backup = new Array(2);
            backup[0] = kilo;
            kilo = {};
            output = update[sizing];
            output = echo.bind(tango)(output);
            result = output.intl;
            output = result.string;
            sizing = update[sizing];
            sizing = echo.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.00Sfl5;
            sizing = output.bind(result)(sizing);
            kilo['label'] = sizing;
            sizing = offset.STANDING;
            kilo['id'] = sizing;
            result = _closure1_slot11;
            output = _closure1_slot5;
            sizing = {};
            echo = yankee.standingPage;
            sizing['style'] = echo;
            source = _closure1_slot11;
            update = _closure1_slot19;
            echo = {};
            echo = source.bind(tango)(update, echo);
            sizing['children'] = echo;
            sizing = result.bind(tango)(output, sizing);
            kilo['page'] = sizing;
            backup[1] = kilo;
            entity['items'] = backup;
            entity['pageWidth'] = foxtrot;
            offset = offset.STANDING;
            if(!(romeo === offset)) { _fun92777_ip = 389; continue _fun92777 }
 386:
            oscar = golf;
 389:
            entity['defaultIndex'] = oscar;
            report = function(argFoo) { // Original name: onSetActiveIndex
                _fun92780: for(var _fun92780_ip = 0; ; ) switch(_fun92780_ip) {
 0:
                    zulu = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 29;
                    mike = mike[entity];
                    entity = undefined;
                    report = zulu.bind(entity)(mike);
                    tango = report.track;
                    mike = _closure1_slot9;
                    zulu = mike.MY_ACCOUNT_PAGE_TAB_NAVIGATE;
                    mike = {};
                    options = 0;
                    oscar = argFoo;
                    if(!(options !== oscar)) { _fun92780_ip = 63; continue _fun92780 }
 51:
                    oscar = _closure1_slot14;
                    oscar = oscar.STANDING;
                    _fun92780_ip = 73; continue _fun92780;
 63:
                    golf = _closure1_slot14;
                    oscar = golf.SECURITY;
 73:
                    mike['target_tab_name'] = oscar;
                    mike = tango.bind(report)(zulu, mike);
                    return entity;
                }
            };
            entity['onSetActiveIndex'] = report;
            romeo = mike.bind(zulu)(entity);
            zulu = _closure1_slot12;
            mike = _closure1_slot13;
            entity = {};
            golf = _closure1_slot11;
            oscar = _closure1_slot5;
            report = {};
            offset = yankee.controlContainer;
            report['style'] = offset;
            report['onLayout'] = options;
            kilo = _closure1_slot11;
            offset = _closure1_slot0;
            foxtrot = _closure1_slot2;
            options = 30;
            options = foxtrot[options];
            options = offset.bind(tango)(options);
            backup = options.SegmentedControl;
            options = {};
            options['state'] = romeo;
            options = kilo.bind(tango)(backup, options);
            report['children'] = options;
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot11;
            golf = _closure1_slot5;
            oscar = {};
            yankee = yankee.pageContainer;
            oscar['style'] = yankee;
            yankee = _closure1_slot11;
            verify = 31;
            verify = foxtrot[verify];
            verify = offset.bind(tango)(verify);
            offset = verify.SegmentedControlPages;
            verify = {};
            verify['state'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    tango = report.bind(options)(tango);
    report = 32;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/main_tabs_v2/native/settings/screens/account/SettingsAccountScreen.tsx';
    report = oscar.bind(golf)(report);
    zulu['default'] = tango;
    zulu['AccountSettingsTabs'] = mike;
    return entity;
})();