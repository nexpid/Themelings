// app/modules/main_tabs_v2/native/settings/screens/account/SettingsAccountScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = golfie;
    entity = function() { // Original name: PasswordlessUpsell
        entity = _closure1_slot15;
        tangon = undefined;
        output = entity.bind(tangon)();
        target = _closure1_slot0;
        status = _closure1_slot2;
        entity = 11;
        entity = status[entity];
        michal = target.bind(tangon)(entity);
        entity = michal.useNavigation;
        entity = entity.bind(michal)();
        var _closure2_slot0 = entity;
        zuuluu = _closure1_slot11;
        michal = _closure1_slot5;
        entity = {};
        report = output.upsellPasswordless;
        entity['style'] = report;
        golfie = _closure1_slot11;
        report = 12;
        report = status[report];
        report = target.bind(tangon)(report);
        oscard = report.Card;
        report = {'border': 'none', 'shadow': 'none'};
        offset = _closure1_slot12;
        verify = _closure1_slot5;
        option = {};
        vacuum = 'row';
        yankee = {'flexDirection': 'row', 'gap': 8};
        option['style'] = yankee;
        foxtra = _closure1_slot11;
        romeon = _closure1_slot5;
        yankee = {};
        backup = {'width': 70, 'height': 70};
        yankee['style'] = backup;
        sizing = _closure1_slot11;
        kiloes = _closure1_slot1;
        backup = 13;
        backup = status[backup];
        kiloes = kiloes.bind(tangon)(backup);
        backup = {};
        result = 14;
        result = status[result];
        result = target.bind(tangon)(result);
        backup['source'] = result;
        result = 'contain';
        backup['resizeMode'] = result;
        output = output.upsellImagePasswordless;
        backup['style'] = output;
        backup = sizing.bind(tangon)(kiloes, backup);
        yankee['children'] = backup;
        romeon = foxtra.bind(tangon)(romeon, yankee);
        yankee = new Array(2);
        yankee[0] = romeon;
        backup = _closure1_slot11;
        foxtra = _closure1_slot5;
        romeon = {};
        sizing = _closure1_slot12;
        kiloes = {};
        output = {'width': '90%', 'gap': 8};
        kiloes['style'] = output;
        update = _closure1_slot11;
        result = 15;
        output = status[result];
        output = target.bind(tangon)(output);
        echoed = output.Text;
        output = {'variant': 'heading-lg/medium', 'color': 'header-primary'};
        record = 16;
        source = status[record];
        source = target.bind(tangon)(source);
        cntext = source.intl;
        sequen = cntext.string;
        source = status[record];
        source = target.bind(tangon)(source);
        source = source.t;
        source = source.+Svv4+;
        source = sequen.bind(cntext)(source);
        output['children'] = source;
        echoed = update.bind(tangon)(echoed, output);
        output = new Array(3);
        output[0] = echoed;
        update = _closure1_slot11;
        result = status[result];
        result = target.bind(tangon)(result);
        echoed = result.Text;
        result = {'variant': 'text-md/normal', 'color': 'text-muted'};
        source = status[record];
        source = target.bind(tangon)(source);
        cntext = source.intl;
        sequen = cntext.string;
        source = status[record];
        source = target.bind(tangon)(source);
        source = source.t;
        source = source.S0g2Ky;
        source = sequen.bind(cntext)(source);
        result['children'] = source;
        result = update.bind(tangon)(echoed, result);
        output[1] = result;
        update = _closure1_slot12;
        echoed = _closure1_slot5;
        result = {};
        source = {};
        source['flexDirection'] = vacuum;
        result['style'] = source;
        sequen = _closure1_slot11;
        source = 17;
        source = status[source];
        source = target.bind(tangon)(source);
        vacuum = source.Button;
        source = {};
        cntext = status[record];
        cntext = target.bind(tangon)(cntext);
        papara = cntext.intl;
        cntext = papara.string;
        record = status[record];
        record = target.bind(tangon)(record);
        record = record.t;
        record = record.piGf5e;
        record = cntext.bind(papara)(record);
        source['text'] = record;
        config = function() { // Original name: onPress
            tangon = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 18;
            zuuluu = michal[entity];
            entity = undefined;
            report = tangon.bind(entity)(zuuluu);
            tangon = report.pushLazy;
            golfie = _closure1_slot0;
            zuuluu = 20;
            zuuluu = michal[zuuluu];
            golfie = golfie.bind(entity)(zuuluu);
            zuuluu = 19;
            zuuluu = michal[zuuluu];
            michal = michal.paths;
            zuuluu = golfie.bind(entity)(zuuluu, michal);
            michal = {};
            golfie = _closure2_slot0;
            michal['navigation'] = golfie;
            oscard = _closure1_slot10;
            oscard = oscard.REGISTER;
            michal['initialRouteName'] = oscard;
            oscard = true;
            michal['showNav'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        source['onPress'] = config;
        config = 'sm';
        source['size'] = config;
        vacuum = sequen.bind(tangon)(vacuum, source);
        source = new Array(2);
        source[0] = vacuum;
        sequen = _closure1_slot11;
        vacuum = _closure1_slot5;
        ctrled = {};
        ctrled = sequen.bind(tangon)(vacuum, ctrled);
        source[1] = ctrled;
        result['children'] = source;
        result = update.bind(tangon)(echoed, result);
        output[2] = result;
        kiloes['children'] = output;
        kiloes = sizing.bind(tangon)(foxtra, kiloes);
        romeon['children'] = kiloes;
        romeon = backup.bind(tangon)(foxtra, romeon);
        yankee[1] = romeon;
        option['children'] = yankee;
        option = offset.bind(tangon)(verify, option);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot16 = entity;
    entity = function() { // Original name: AccountTwoFALabel
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            michal = 21;
            michal = report[michal];
            tangon = undefined;
            verify = zuuluu.bind(tangon)(michal);
            option = verify.useStateFromStoresObject;
            michal = _closure1_slot6;
            golfie = new Array(1);
            golfie[0] = michal;
            michal = function() {
                entity = _closure1_slot6;
                zuuluu = entity.hasCredentials;
                entity = new Array(2);
                entity[0] = zuuluu;
                zuuluu = _closure1_slot6;
                michal = zuuluu.hasFetchedCredentials;
                michal = michal.bind(zuuluu)();
                entity[1] = michal;
                return entity;
            };
            option = option.bind(verify)(golfie, michal);
            golfie = _closure1_slot3;
            michal = 2;
            golfie = golfie.bind(tangon)(option, michal);
            michal = 0;
            verify = golfie[michal];
            var _closure2_slot0 = verify;
            michal = 1;
            option = golfie[michal];
            var _closure2_slot1 = option;
            michal = 22;
            michal = report[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.useIsUserVerified;
            michal = michal.bind(zuuluu)();
            var _closure2_slot2 = michal;
            golfie = _closure1_slot4;
            report = golfie.useMemo;
            zuuluu = new Array(3);
            zuuluu[0] = option;
            zuuluu[1] = verify;
            zuuluu[2] = michal;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure2_slot2;
                    if(!entity) { _fun00004_ip = 14; continue _fun00003 }
 10:
                    entity = _closure2_slot1;
 14:
                    if(!entity) { _fun00004_ip = 24; continue _fun00003 }
 17:
                    michal = _closure2_slot0;
                    entity = !michal;
 24:
                    return entity;
                }
            };
            report = report.bind(golfie)(michal, zuuluu);
            golfie = _closure1_slot4;
            zuuluu = golfie.useEffect;
            michal = new Array(1);
            michal[0] = option;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = _closure2_slot1;
                    if(entity) { _fun00006_ip = 45; continue _fun00005 }
 10:
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 23;
                    michal = michal[entity];
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    entity = michal.fetchWebAuthnCredentials;
                    entity = entity.bind(michal)();
 45:
                    entity = undefined;
                    return entity;
                }
            };
            entity = zuuluu.bind(golfie)(entity, michal);
            zuuluu = _closure1_slot12;
            michal = _closure1_slot13;
            entity = {};
            golfie = report;
            if(!golfie) { _fun00002_ip = 218; continue _fun00001 }
 202:
            verify = _closure1_slot11;
            option = _closure1_slot16;
            report = {};
            golfie = verify.bind(tangon)(option, report);
 218:
            report = new Array(2);
            report[0] = golfie;
            option = _closure1_slot11;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            oscard = 24;
            oscard = foxtra[oscard];
            oscard = romeon.bind(tangon)(oscard);
            golfie = oscard.TableRowGroupTitle;
            oscard = {};
            verify = 16;
            offset = foxtra[verify];
            offset = romeon.bind(tangon)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = foxtra[verify];
            verify = romeon.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.fuTmEB;
            verify = offset.bind(yankee)(verify);
            oscard['title'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot17 = entity;
    entity = function() { // Original name: AccountSecurityPage
        tangon = _closure1_slot4;
        zuuluu = tangon.useMemo;
        michal = function() {
            entity = {};
            option = _closure1_slot0;
            verify = _closure1_slot2;
            michal = 16;
            zuuluu = verify[michal];
            golfie = undefined;
            zuuluu = option.bind(golfie)(zuuluu);
            oscard = zuuluu.intl;
            report = oscard.string;
            zuuluu = verify[michal];
            zuuluu = option.bind(golfie)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu.e262Nj;
            zuuluu = report.bind(oscard)(zuuluu);
            entity['label'] = zuuluu;
            zuuluu = _closure1_slot8;
            report = zuuluu.ACCOUNT_USERNAME;
            zuuluu = new Array(4);
            zuuluu[0] = report;
            report = _closure1_slot8;
            report = report.ACCOUNT_DISPLAY_NAME;
            zuuluu[1] = report;
            report = _closure1_slot8;
            report = report.ACCOUNT_EMAIL;
            zuuluu[2] = report;
            report = _closure1_slot8;
            report = report.ACCOUNT_PHONE;
            zuuluu[3] = report;
            entity['settings'] = zuuluu;
            zuuluu = new Array(3);
            zuuluu[0] = entity;
            entity = {};
            offset = _closure1_slot11;
            oscard = _closure1_slot17;
            report = {};
            report = offset.bind(golfie)(oscard, report);
            entity['label'] = report;
            report = _closure1_slot8;
            oscard = report.ACCOUNT_CHANGE_PASSWORD;
            report = new Array(6);
            report[0] = oscard;
            oscard = _closure1_slot8;
            oscard = oscard.ACCOUNT_WEB_AUTHN_VIEW;
            report[1] = oscard;
            oscard = _closure1_slot8;
            oscard = oscard.ACCOUNT_ENABLE_2FA;
            report[2] = oscard;
            oscard = _closure1_slot8;
            oscard = oscard.ACCOUNT_VIEW_BACKUP_CODES;
            report[3] = oscard;
            oscard = _closure1_slot8;
            oscard = oscard.ACCOUNT_REMOVE_2FA;
            report[4] = oscard;
            oscard = _closure1_slot8;
            oscard = oscard.ACCOUNT_SMS_BACKUP;
            report[5] = oscard;
            entity['settings'] = report;
            zuuluu[1] = entity;
            entity = {};
            report = verify[michal];
            report = option.bind(golfie)(report);
            oscard = report.intl;
            report = oscard.string;
            michal = verify[michal];
            michal = option.bind(golfie)(michal);
            michal = michal.t;
            michal = michal.5V0AkJ;
            michal = report.bind(oscard)(michal);
            entity['label'] = michal;
            michal = _closure1_slot8;
            report = michal.ACCOUNT_DISABLE;
            michal = new Array(2);
            michal[0] = report;
            tangon = _closure1_slot8;
            tangon = tangon.ACCOUNT_DELETE;
            michal[1] = tangon;
            entity['settings'] = michal;
            zuuluu[2] = entity;
            michal = zuuluu.filter;
            entity = global;
            entity = entity.Boolean;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        entity = new Array(0);
        oscard = zuuluu.bind(tangon)(michal, entity);
        tangon = _closure1_slot11;
        michal = _closure1_slot0;
        golfie = _closure1_slot2;
        entity = 25;
        entity = golfie[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.SettingsList;
        entity = {};
        entity['sections'] = oscard;
        oscard = _closure1_slot1;
        report = 26;
        report = golfie[report];
        report = oscard.bind(zuuluu)(report);
        entity['ListHeaderComponent'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    var _closure1_slot18 = entity;
    entity = function() { // Original name: AccountStandingPage
        zuuluu = _closure1_slot0;
        tangon = _closure1_slot2;
        michal = 27;
        michal = tangon[michal];
        tangon = undefined;
        michal = zuuluu.bind(tangon)(michal);
        zuuluu = michal.default;
        michal = _closure1_slot11;
        entity = {};
        report = true;
        entity['visible'] = report;
        entity = michal.bind(tangon)(zuuluu, entity);
        return entity;
    };
    var _closure1_slot19 = entity;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = golfie[entity];
    entity = undefined;
    michal = foxtra.bind(entity)(michal);
    var _closure1_slot3 = michal;
    backup = 1;
    report = golfie[backup];
    michal = argCor;
    option = michal.bind(entity)(report);
    var _closure1_slot4 = option;
    michal = 2;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.View;
    var _closure1_slot5 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = foxtra.bind(entity)(michal);
    var _closure1_slot6 = michal;
    michal = 4;
    michal = golfie[michal];
    michal = foxtra.bind(entity)(michal);
    var _closure1_slot7 = michal;
    michal = 5;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.MobileSetting;
    var _closure1_slot8 = michal;
    michal = 6;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.AnalyticEvents;
    var _closure1_slot9 = michal;
    michal = 7;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.WebAuthnScreens;
    var _closure1_slot10 = michal;
    michal = 8;
    report = golfie[michal];
    report = oscard.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot11 = report;
    report = golfie[michal];
    report = oscard.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot12 = report;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.Fragment;
    var _closure1_slot13 = michal;
    michal = {};
    report = 'SECURITY';
    michal['SECURITY'] = report;
    report = 'STANDING';
    michal['STANDING'] = report;
    var _closure1_slot14 = michal;
    report = 9;
    report = golfie[report];
    offset = oscard.bind(entity)(report);
    verify = offset.createStyles;
    report = {};
    yankee = {'marginBottom': 16, 'borderColor': null, 'borderWidth': 1};
    romeon = 10;
    kiloes = golfie[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.REDESIGN_INPUT_CONTROL_SELECTED;
    yankee['borderColor'] = kiloes;
    kiloes = golfie[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.lg;
    yankee['borderRadius'] = kiloes;
    report['upsellPasswordless'] = yankee;
    yankee = {'height': '100%', 'width': '100%'};
    report['upsellImagePasswordless'] = yankee;
    yankee = {};
    kiloes = golfie[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_16;
    yankee['paddingHorizontal'] = kiloes;
    kiloes = golfie[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_16;
    yankee['paddingTop'] = kiloes;
    report['controlContainer'] = yankee;
    yankee = {};
    yankee['flex'] = backup;
    report['pageContainer'] = yankee;
    yankee = {};
    romeon = golfie[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    yankee['paddingTop'] = romeon;
    report['standingPage'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot15 = report;
    report = option.memo;
    tangon = function() {
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            entity = _closure1_slot15;
            tangon = undefined;
            yankee = entity.bind(tangon)();
            michal = _closure1_slot4;
            entity = michal.useState;
            oscard = 0;
            zuuluu = entity.bind(michal)(oscard);
            michal = _closure1_slot3;
            entity = 2;
            entity = michal.bind(tangon)(zuuluu, entity);
            foxtra = entity[oscard];
            golfie = 1;
            entity = entity[golfie];
            var _closure2_slot0 = entity;
            option = _closure1_slot4;
            zuuluu = option.useCallback;
            michal = function(argFoo) {
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                zuuluu = entity.width;
                michal = _closure2_slot0;
                entity = undefined;
                michal = michal.bind(entity)(zuuluu);
                return entity;
            };
            entity = new Array(0);
            option = zuuluu.bind(option)(michal, entity);
            echoed = _closure1_slot0;
            update = _closure1_slot2;
            entity = 21;
            entity = update[entity];
            offset = echoed.bind(tangon)(entity);
            zuuluu = offset.useStateFromStores;
            entity = _closure1_slot7;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot7;
                entity = michal.getSubsection;
                entity = entity.bind(michal)();
                return entity;
            };
            romeon = zuuluu.bind(offset)(michal, entity);
            entity = 28;
            entity = update[entity];
            zuuluu = echoed.bind(tangon)(entity);
            michal = zuuluu.useSegmentedControlState;
            entity = {};
            kiloes = {};
            sizing = 16;
            offset = update[sizing];
            offset = echoed.bind(tangon)(offset);
            output = offset.intl;
            backup = output.string;
            offset = update[sizing];
            offset = echoed.bind(tangon)(offset);
            offset = offset.t;
            offset = offset.Am9YHh;
            offset = backup.bind(output)(offset);
            kiloes['label'] = offset;
            offset = _closure1_slot14;
            backup = offset.SECURITY;
            kiloes['id'] = backup;
            result = _closure1_slot11;
            output = _closure1_slot18;
            backup = {};
            backup = result.bind(tangon)(output, backup);
            kiloes['page'] = backup;
            backup = new Array(2);
            backup[0] = kiloes;
            kiloes = {};
            output = update[sizing];
            output = echoed.bind(tangon)(output);
            result = output.intl;
            output = result.string;
            sizing = update[sizing];
            sizing = echoed.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.00Sfl5;
            sizing = output.bind(result)(sizing);
            kiloes['label'] = sizing;
            sizing = offset.STANDING;
            kiloes['id'] = sizing;
            result = _closure1_slot11;
            output = _closure1_slot5;
            sizing = {};
            echoed = yankee.standingPage;
            sizing['style'] = echoed;
            source = _closure1_slot11;
            update = _closure1_slot19;
            echoed = {};
            echoed = source.bind(tangon)(update, echoed);
            sizing['children'] = echoed;
            sizing = result.bind(tangon)(output, sizing);
            kiloes['page'] = sizing;
            backup[1] = kiloes;
            entity['items'] = backup;
            entity['pageWidth'] = foxtra;
            offset = offset.STANDING;
            if(!(romeon === offset)) { _fun00008_ip = 391; continue _fun00007 }
 388:
            oscard = golfie;
 391:
            entity['defaultIndex'] = oscard;
            report = function(argFoo) { // Original name: onSetActiveIndex
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 29;
                    michal = michal[entity];
                    entity = undefined;
                    report = zuuluu.bind(entity)(michal);
                    tangon = report.track;
                    michal = _closure1_slot9;
                    zuuluu = michal.MY_ACCOUNT_PAGE_TAB_NAVIGATE;
                    michal = {};
                    option = 0;
                    oscard = argFoo;
                    if(!(option !== oscard)) { _fun00010_ip = 63; continue _fun00009 }
 51:
                    oscard = _closure1_slot14;
                    oscard = oscard.STANDING;
                    _fun00010_ip = 73; continue _fun00009;
 63:
                    golfie = _closure1_slot14;
                    oscard = golfie.SECURITY;
 73:
                    michal['target_tab_name'] = oscard;
                    michal = tangon.bind(report)(zuuluu, michal);
                    return entity;
                }
            };
            entity['onSetActiveIndex'] = report;
            romeon = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot12;
            michal = _closure1_slot13;
            entity = {};
            golfie = _closure1_slot11;
            oscard = _closure1_slot5;
            report = {};
            offset = yankee.controlContainer;
            report['style'] = offset;
            report['onLayout'] = option;
            kiloes = _closure1_slot11;
            offset = _closure1_slot0;
            foxtra = _closure1_slot2;
            option = 30;
            option = foxtra[option];
            option = offset.bind(tangon)(option);
            backup = option.SegmentedControl;
            option = {};
            option['state'] = romeon;
            option = kiloes.bind(tangon)(backup, option);
            report['children'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot11;
            golfie = _closure1_slot5;
            oscard = {};
            yankee = yankee.pageContainer;
            oscard['style'] = yankee;
            yankee = _closure1_slot11;
            verify = 31;
            verify = foxtra[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.SegmentedControlPages;
            verify = {};
            verify['state'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    tangon = report.bind(option)(tangon);
    report = 32;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/main_tabs_v2/native/settings/screens/account/SettingsAccountScreen.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    zuuluu['AccountSettingsTabs'] = michal;
    return entity;
})();