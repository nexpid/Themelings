// app/modules/main_tabs_v2/native/settings/screens/DataAndPrivacyScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: getTermsOfServicePrivacyPolicySettings
        entity = argFoo;
        var _closure2_slot0 = entity;
        michal = {};
        golfie = _closure1_slot0;
        option = _closure1_slot2;
        entity = 4;
        tangon = option[entity];
        zuuluu = undefined;
        tangon = golfie.bind(zuuluu)(tangon);
        offset = tangon.intl;
        verify = offset.string;
        tangon = option[entity];
        tangon = golfie.bind(zuuluu)(tangon);
        tangon = tangon.t;
        tangon = tangon.+uHbqK;
        tangon = verify.bind(offset)(tangon);
        michal['label'] = tangon;
        tangon = _closure1_slot4;
        verify = tangon.SAFETY_TERMS_OF_SERVICE;
        tangon = new Array(2);
        tangon[0] = verify;
        report = _closure1_slot4;
        report = report.SAFETY_PRIVACY_POLICY;
        tangon[1] = report;
        michal['settings'] = tangon;
        tangon = option[entity];
        tangon = golfie.bind(zuuluu)(tangon);
        report = tangon.intl;
        tangon = report.format;
        entity = option[entity];
        entity = golfie.bind(zuuluu)(entity);
        entity = entity.t;
        zuuluu = entity.R5N31N;
        entity = {};
        oscard = function() { // Original name: onClick
            zuuluu = _closure2_slot0;
            michal = zuuluu.navigate;
            entity = _closure1_slot6;
            entity = entity.ACCOUNT;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        entity['onClick'] = oscard;
        entity = tangon.bind(report)(zuuluu, entity);
        michal['subLabel'] = entity;
        entity = new Array(1);
        entity[0] = michal;
        return entity;
    };
    var _closure1_slot8 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.MobileSetting;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.HelpdeskArticles;
    var _closure1_slot5 = golfie;
    tangon = tangon.UserSettingsSections;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot7 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/screens/DataAndPrivacyScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: DataAndPrivacySettings
        michal = _closure1_slot0;
        oscard = _closure1_slot2;
        tangon = 7;
        report = oscard[tangon];
        tangon = undefined;
        golfie = michal.bind(tangon)(report);
        report = golfie.useStackNavigation;
        verify = report.bind(golfie)();
        var _closure2_slot0 = verify;
        option = _closure1_slot3;
        golfie = option.useMemo;
        report = new Array(1);
        report[0] = verify;
        zuuluu = function() {
            tangon = {};
            entity = _closure1_slot4;
            zuuluu = entity.USE_DATA_TO_IMPROVE_DISCORD;
            entity = new Array(1);
            entity[0] = zuuluu;
            tangon['settings'] = entity;
            yankee = _closure1_slot0;
            romeon = _closure1_slot2;
            oscard = 4;
            entity = romeon[oscard];
            report = undefined;
            entity = yankee.bind(report)(entity);
            verify = entity.intl;
            option = verify.format;
            entity = romeon[oscard];
            entity = yankee.bind(report)(entity);
            entity = entity.t;
            golfie = entity.igTSGx;
            entity = {};
            kiloes = _closure1_slot1;
            zuuluu = 5;
            offset = romeon[zuuluu];
            sizing = kiloes.bind(report)(offset);
            backup = sizing.getArticleURL;
            foxtra = _closure1_slot5;
            offset = foxtra.DATA_PRIVACY_CONTROLS;
            offset = backup.bind(sizing)(offset);
            entity['helpdeskArticle'] = offset;
            entity = option.bind(verify)(golfie, entity);
            tangon['subLabel'] = entity;
            entity = new Array(5);
            entity[0] = tangon;
            tangon = {};
            golfie = _closure1_slot4;
            option = golfie.USE_DATA_TO_CUSTOMIZE_DISCORD;
            golfie = new Array(1);
            golfie[0] = option;
            tangon['settings'] = golfie;
            golfie = romeon[oscard];
            golfie = yankee.bind(report)(golfie);
            offset = golfie.intl;
            verify = offset.format;
            golfie = romeon[oscard];
            golfie = yankee.bind(report)(golfie);
            golfie = golfie.t;
            option = golfie.eQL/Mj;
            golfie = {};
            backup = romeon[zuuluu];
            output = kiloes.bind(report)(backup);
            sizing = output.getArticleURL;
            backup = foxtra.DATA_USED_FOR_RECOMMENDED;
            backup = sizing.bind(output)(backup);
            golfie['helpdeskArticle'] = backup;
            golfie = verify.bind(offset)(option, golfie);
            tangon['subLabel'] = golfie;
            entity[1] = tangon;
            tangon = {};
            golfie = _closure1_slot4;
            option = golfie.USE_DATA_FOR_QUESTS;
            golfie = new Array(1);
            golfie[0] = option;
            tangon['settings'] = golfie;
            golfie = romeon[oscard];
            golfie = yankee.bind(report)(golfie);
            offset = golfie.intl;
            verify = offset.format;
            golfie = romeon[oscard];
            golfie = yankee.bind(report)(golfie);
            golfie = golfie.t;
            option = golfie.7Q2yX1;
            golfie = {};
            backup = romeon[zuuluu];
            output = kiloes.bind(report)(backup);
            sizing = output.getArticleURL;
            backup = foxtra.QUESTS_PRIVACY_CONTROLS;
            backup = sizing.bind(output)(backup);
            golfie['helpdeskArticle'] = backup;
            golfie = verify.bind(offset)(option, golfie);
            tangon['subLabel'] = golfie;
            entity[2] = tangon;
            tangon = {};
            golfie = romeon[oscard];
            golfie = yankee.bind(report)(golfie);
            verify = golfie.intl;
            option = verify.string;
            golfie = romeon[oscard];
            golfie = yankee.bind(report)(golfie);
            golfie = golfie.t;
            golfie = golfie.BG7Qsb;
            golfie = option.bind(verify)(golfie);
            tangon['label'] = golfie;
            golfie = _closure1_slot4;
            option = golfie.REQUEST_YOUR_DATA;
            golfie = new Array(1);
            golfie[0] = option;
            tangon['settings'] = golfie;
            golfie = romeon[oscard];
            golfie = yankee.bind(report)(golfie);
            offset = golfie.intl;
            verify = offset.format;
            golfie = romeon[oscard];
            golfie = yankee.bind(report)(golfie);
            golfie = golfie.t;
            option = golfie.P3kNfn;
            golfie = {};
            backup = romeon[zuuluu];
            kiloes = kiloes.bind(report)(backup);
            backup = kiloes.getArticleURL;
            foxtra = foxtra.GDPR_REQUEST_DATA;
            foxtra = backup.bind(kiloes)(foxtra);
            golfie['helpdeskArticle'] = foxtra;
            golfie = verify.bind(offset)(option, golfie);
            tangon['subLabel'] = golfie;
            entity[3] = tangon;
            tangon = {};
            golfie = romeon[oscard];
            golfie = yankee.bind(report)(golfie);
            verify = golfie.intl;
            option = verify.string;
            golfie = romeon[oscard];
            golfie = yankee.bind(report)(golfie);
            golfie = golfie.t;
            golfie = golfie.Me5lVF;
            golfie = option.bind(verify)(golfie);
            tangon['label'] = golfie;
            golfie = _closure1_slot4;
            option = golfie.DATA_AND_PRIVACY_SECURE_FRAMES_PERSISTENT_CODES;
            golfie = new Array(2);
            golfie[0] = option;
            option = _closure1_slot4;
            option = option.ENCRYPTION_VERIFIED_DEVICES;
            golfie[1] = option;
            tangon['settings'] = golfie;
            golfie = romeon[oscard];
            golfie = yankee.bind(report)(golfie);
            verify = golfie.intl;
            option = verify.format;
            oscard = romeon[oscard];
            oscard = yankee.bind(report)(oscard);
            oscard = oscard.t;
            golfie = oscard./6sFWV;
            oscard = {};
            offset = 6;
            offset = romeon[offset];
            yankee = yankee.bind(report)(offset);
            offset = yankee.getSecureFramesHelpdeskArticle;
            offset = offset.bind(yankee)();
            oscard['helpArticle'] = offset;
            oscard = option.bind(verify)(golfie, oscard);
            tangon['subLabel'] = oscard;
            entity[4] = tangon;
            tangon = _closure1_slot8;
            michal = _closure2_slot0;
            echoed = tangon.bind(report)(michal);
            update = entity;
            result = zuuluu;
            michal = arraySpread(update, echoed, result);
            return entity;
        };
        report = golfie.bind(option)(zuuluu, report);
        zuuluu = _closure1_slot7;
        entity = 8;
        entity = oscard[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.SettingsList;
        entity = {};
        entity['sections'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();