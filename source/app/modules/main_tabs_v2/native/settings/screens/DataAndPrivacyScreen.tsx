// app/modules/main_tabs_v2/native/settings/screens/DataAndPrivacyScreen.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: getTermsOfServicePrivacyPolicySettings
        entity = argFoo;
        var _closure2_slot0 = entity;
        mike = {};
        golf = _closure1_slot0;
        options = _closure1_slot2;
        entity = 4;
        tango = options[entity];
        zulu = undefined;
        tango = golf.bind(zulu)(tango);
        offset = tango.intl;
        verify = offset.string;
        tango = options[entity];
        tango = golf.bind(zulu)(tango);
        tango = tango.t;
        tango = tango.+uHbqK;
        tango = verify.bind(offset)(tango);
        mike['label'] = tango;
        tango = _closure1_slot4;
        verify = tango.SAFETY_TERMS_OF_SERVICE;
        tango = new Array(2);
        tango[0] = verify;
        report = _closure1_slot4;
        report = report.SAFETY_PRIVACY_POLICY;
        tango[1] = report;
        mike['settings'] = tango;
        tango = options[entity];
        tango = golf.bind(zulu)(tango);
        report = tango.intl;
        tango = report.format;
        entity = options[entity];
        entity = golf.bind(zulu)(entity);
        entity = entity.t;
        zulu = entity.R5N31N;
        entity = {};
        oscar = function() { // Original name: onClick
            zulu = _closure2_slot0;
            mike = zulu.navigate;
            entity = _closure1_slot6;
            entity = entity.ACCOUNT;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        entity['onClick'] = oscar;
        entity = tango.bind(report)(zulu, entity);
        mike['subLabel'] = entity;
        entity = new Array(1);
        entity[0] = mike;
        return entity;
    };
    var _closure1_slot8 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.MobileSetting;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.HelpdeskArticles;
    var _closure1_slot5 = golf;
    tango = tango.UserSettingsSections;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot7 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/settings/screens/DataAndPrivacyScreen.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: DataAndPrivacySettings
        mike = _closure1_slot0;
        oscar = _closure1_slot2;
        tango = 7;
        report = oscar[tango];
        tango = undefined;
        golf = mike.bind(tango)(report);
        report = golf.useStackNavigation;
        verify = report.bind(golf)();
        var _closure2_slot0 = verify;
        options = _closure1_slot3;
        golf = options.useMemo;
        report = new Array(1);
        report[0] = verify;
        zulu = function() {
            tango = {};
            entity = _closure1_slot4;
            zulu = entity.USE_DATA_TO_IMPROVE_DISCORD;
            entity = new Array(1);
            entity[0] = zulu;
            tango['settings'] = entity;
            yankee = _closure1_slot0;
            romeo = _closure1_slot2;
            oscar = 4;
            entity = romeo[oscar];
            report = undefined;
            entity = yankee.bind(report)(entity);
            verify = entity.intl;
            options = verify.format;
            entity = romeo[oscar];
            entity = yankee.bind(report)(entity);
            entity = entity.t;
            golf = entity.igTSGx;
            entity = {};
            kilo = _closure1_slot1;
            zulu = 5;
            offset = romeo[zulu];
            sizing = kilo.bind(report)(offset);
            backup = sizing.getArticleURL;
            foxtrot = _closure1_slot5;
            offset = foxtrot.DATA_PRIVACY_CONTROLS;
            offset = backup.bind(sizing)(offset);
            entity['helpdeskArticle'] = offset;
            entity = options.bind(verify)(golf, entity);
            tango['subLabel'] = entity;
            entity = new Array(5);
            entity[0] = tango;
            tango = {};
            golf = _closure1_slot4;
            options = golf.USE_DATA_TO_CUSTOMIZE_DISCORD;
            golf = new Array(1);
            golf[0] = options;
            tango['settings'] = golf;
            golf = romeo[oscar];
            golf = yankee.bind(report)(golf);
            offset = golf.intl;
            verify = offset.format;
            golf = romeo[oscar];
            golf = yankee.bind(report)(golf);
            golf = golf.t;
            options = golf.eQL/Mj;
            golf = {};
            backup = romeo[zulu];
            output = kilo.bind(report)(backup);
            sizing = output.getArticleURL;
            backup = foxtrot.DATA_USED_FOR_RECOMMENDED;
            backup = sizing.bind(output)(backup);
            golf['helpdeskArticle'] = backup;
            golf = verify.bind(offset)(options, golf);
            tango['subLabel'] = golf;
            entity[1] = tango;
            tango = {};
            golf = _closure1_slot4;
            options = golf.USE_DATA_FOR_QUESTS;
            golf = new Array(1);
            golf[0] = options;
            tango['settings'] = golf;
            golf = romeo[oscar];
            golf = yankee.bind(report)(golf);
            offset = golf.intl;
            verify = offset.format;
            golf = romeo[oscar];
            golf = yankee.bind(report)(golf);
            golf = golf.t;
            options = golf.7Q2yX1;
            golf = {};
            backup = romeo[zulu];
            output = kilo.bind(report)(backup);
            sizing = output.getArticleURL;
            backup = foxtrot.QUESTS_PRIVACY_CONTROLS;
            backup = sizing.bind(output)(backup);
            golf['helpdeskArticle'] = backup;
            golf = verify.bind(offset)(options, golf);
            tango['subLabel'] = golf;
            entity[2] = tango;
            tango = {};
            golf = romeo[oscar];
            golf = yankee.bind(report)(golf);
            verify = golf.intl;
            options = verify.string;
            golf = romeo[oscar];
            golf = yankee.bind(report)(golf);
            golf = golf.t;
            golf = golf.BG7Qsb;
            golf = options.bind(verify)(golf);
            tango['label'] = golf;
            golf = _closure1_slot4;
            options = golf.REQUEST_YOUR_DATA;
            golf = new Array(1);
            golf[0] = options;
            tango['settings'] = golf;
            golf = romeo[oscar];
            golf = yankee.bind(report)(golf);
            offset = golf.intl;
            verify = offset.format;
            golf = romeo[oscar];
            golf = yankee.bind(report)(golf);
            golf = golf.t;
            options = golf.P3kNfn;
            golf = {};
            backup = romeo[zulu];
            kilo = kilo.bind(report)(backup);
            backup = kilo.getArticleURL;
            foxtrot = foxtrot.GDPR_REQUEST_DATA;
            foxtrot = backup.bind(kilo)(foxtrot);
            golf['helpdeskArticle'] = foxtrot;
            golf = verify.bind(offset)(options, golf);
            tango['subLabel'] = golf;
            entity[3] = tango;
            tango = {};
            golf = romeo[oscar];
            golf = yankee.bind(report)(golf);
            verify = golf.intl;
            options = verify.string;
            golf = romeo[oscar];
            golf = yankee.bind(report)(golf);
            golf = golf.t;
            golf = golf.Me5lVF;
            golf = options.bind(verify)(golf);
            tango['label'] = golf;
            golf = _closure1_slot4;
            options = golf.DATA_AND_PRIVACY_SECURE_FRAMES_PERSISTENT_CODES;
            golf = new Array(2);
            golf[0] = options;
            options = _closure1_slot4;
            options = options.ENCRYPTION_VERIFIED_DEVICES;
            golf[1] = options;
            tango['settings'] = golf;
            golf = romeo[oscar];
            golf = yankee.bind(report)(golf);
            verify = golf.intl;
            options = verify.format;
            oscar = romeo[oscar];
            oscar = yankee.bind(report)(oscar);
            oscar = oscar.t;
            golf = oscar./6sFWV;
            oscar = {};
            offset = 6;
            offset = romeo[offset];
            yankee = yankee.bind(report)(offset);
            offset = yankee.getSecureFramesHelpdeskArticle;
            offset = offset.bind(yankee)();
            oscar['helpArticle'] = offset;
            oscar = options.bind(verify)(golf, oscar);
            tango['subLabel'] = oscar;
            entity[4] = tango;
            tango = _closure1_slot8;
            mike = _closure2_slot0;
            echo = tango.bind(report)(mike);
            update = entity;
            result = zulu;
            mike = arraySpread(update, echo, result);
            return entity;
        };
        report = golf.bind(options)(zulu, report);
        zulu = _closure1_slot7;
        entity = 8;
        entity = oscar[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.SettingsList;
        entity = {};
        entity['sections'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();