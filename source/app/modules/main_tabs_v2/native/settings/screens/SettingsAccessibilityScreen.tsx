// app/modules/main_tabs_v2/native/settings/screens/SettingsAccessibilityScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.MobileSetting;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.HelpdeskArticles;
    var _closure1_slot6 = golfie;
    tangon = tangon.UserSettingsSections;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot8 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/screens/SettingsAccessibilityScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: SettingsAccessibilityScreen
        michal = _closure1_slot0;
        oscard = _closure1_slot2;
        tangon = 8;
        report = oscard[tangon];
        tangon = undefined;
        golfie = michal.bind(tangon)(report);
        report = golfie.useStackNavigation;
        offset = report.bind(golfie)();
        var _closure2_slot0 = offset;
        report = 9;
        report = oscard[report];
        verify = michal.bind(tangon)(report);
        option = verify.useStateFromStoresObject;
        report = _closure1_slot4;
        golfie = new Array(1);
        golfie[0] = report;
        report = function() {
            entity = {};
            tangon = _closure1_slot4;
            zuuluu = tangon.getAppliedOverrideReasonKey;
            michal = 'gifAutoPlay';
            michal = zuuluu.bind(tangon)(michal);
            entity['gifAutoPlayOverrideReason'] = michal;
            zuuluu = tangon.getAppliedOverrideReasonKey;
            michal = 'animateEmoji';
            michal = zuuluu.bind(tangon)(michal);
            entity['animateEmojiOverrideReason'] = michal;
            zuuluu = tangon.getAppliedOverrideReasonKey;
            michal = 'animateStickers';
            michal = zuuluu.bind(tangon)(michal);
            entity['animateStickersOverrideReason'] = michal;
            return entity;
        };
        report = option.bind(verify)(golfie, report);
        yankee = report.gifAutoPlayOverrideReason;
        var _closure2_slot1 = yankee;
        backup = report.animateEmojiOverrideReason;
        var _closure2_slot2 = backup;
        foxtra = report.animateStickersOverrideReason;
        var _closure2_slot3 = foxtra;
        option = _closure1_slot1;
        report = 10;
        report = oscard[report];
        sizing = option.bind(tangon)(report);
        romeon = sizing.useExperiment;
        verify = {};
        report = 'SettingsAccessibilityScreen';
        verify['location'] = report;
        golfie = {};
        kiloes = false;
        golfie['autoTrackExposure'] = kiloes;
        golfie = romeon.bind(sizing)(verify, golfie);
        romeon = golfie.enabled;
        var _closure2_slot4 = romeon;
        golfie = 11;
        golfie = oscard[golfie];
        verify = option.bind(tangon)(golfie);
        option = verify.useExperiment;
        golfie = {};
        golfie['location'] = report;
        report = {};
        report['autoTrackExposure'] = kiloes;
        report = option.bind(verify)(golfie, report);
        verify = report.enabled;
        var _closure2_slot5 = verify;
        option = _closure1_slot3;
        golfie = option.useMemo;
        report = new Array(6);
        report[0] = backup;
        report[1] = foxtra;
        report[2] = romeon;
        report[3] = yankee;
        report[4] = offset;
        report[5] = verify;
        zuuluu = function() {
            zuuluu = {};
            michal = _closure2_slot0;
            zuuluu['navigation'] = michal;
            michal = _closure2_slot1;
            zuuluu['gifAutoPlayOverrideReason'] = michal;
            michal = _closure2_slot2;
            zuuluu['animateEmojiOverrideReason'] = michal;
            michal = _closure2_slot3;
            zuuluu['animateStickersOverrideReason'] = michal;
            michal = _closure2_slot4;
            zuuluu['enableMobileColorAccessibilitySettings'] = michal;
            entity = _closure2_slot5;
            zuuluu['enableMobileLinkUnderlineAccessibilitySetting'] = entity;
            michal = function(argFoo) { // Original name: getAccessibilitySettingScreen
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    michal = argFoo;
                    zuuluu = michal.navigation;
                    var _closure4_slot0 = zuuluu;
                    yankee = michal.gifAutoPlayOverrideReason;
                    offset = michal.animateEmojiOverrideReason;
                    golfie = michal.animateStickersOverrideReason;
                    romeon = michal.enableMobileColorAccessibilitySettings;
                    option = michal.enableMobileLinkUnderlineAccessibilitySetting;
                    michal = {};
                    zuuluu = _closure1_slot5;
                    tangon = zuuluu.ROLE_COLORS;
                    zuuluu = new Array(1);
                    zuuluu[0] = tangon;
                    michal['settings'] = zuuluu;
                    tangon = _closure1_slot0;
                    kiloes = _closure1_slot2;
                    verify = 5;
                    zuuluu = kiloes[verify];
                    oscard = undefined;
                    zuuluu = tangon.bind(oscard)(zuuluu);
                    backup = zuuluu.intl;
                    foxtra = backup.format;
                    zuuluu = kiloes[verify];
                    zuuluu = tangon.bind(oscard)(zuuluu);
                    zuuluu = zuuluu.t;
                    tangon = zuuluu.ksVr5+;
                    zuuluu = {};
                    sizing = _closure1_slot1;
                    output = 6;
                    kiloes = kiloes[output];
                    result = sizing.bind(oscard)(kiloes);
                    sizing = result.getArticleURL;
                    kiloes = _closure1_slot6;
                    kiloes = kiloes.ROLE_STYLES;
                    kiloes = sizing.bind(result)(kiloes);
                    zuuluu['learnMoreLink'] = kiloes;
                    zuuluu = foxtra.bind(backup)(tangon, zuuluu);
                    michal['subLabel'] = zuuluu;
                    zuuluu = new Array(9);
                    zuuluu[0] = michal;
                    tangon = null;
                    michal = null;
                    if(!romeon) { _fun00002_ip = 284; continue _fun00001 }
 197:
                    foxtra = {};
                    backup = _closure1_slot5;
                    kiloes = backup.CONTRAST_MODE;
                    backup = new Array(1);
                    backup[0] = kiloes;
                    foxtra['settings'] = backup;
                    result = _closure1_slot0;
                    backup = _closure1_slot2;
                    kiloes = backup[verify];
                    kiloes = result.bind(oscard)(kiloes);
                    sizing = kiloes.intl;
                    kiloes = sizing.string;
                    backup = backup[verify];
                    backup = result.bind(oscard)(backup);
                    backup = backup.t;
                    backup = backup.Ax4Pgo;
                    backup = kiloes.bind(sizing)(backup);
                    foxtra['subLabel'] = backup;
                    michal = foxtra;
 284:
                    zuuluu[1] = michal;
                    michal = null;
                    if(!romeon) { _fun00002_ip = 380; continue _fun00001 }
 293:
                    romeon = {};
                    foxtra = _closure1_slot5;
                    backup = foxtra.REDUCE_SATURATION;
                    foxtra = new Array(1);
                    foxtra[0] = backup;
                    romeon['settings'] = foxtra;
                    sizing = _closure1_slot0;
                    foxtra = _closure1_slot2;
                    backup = foxtra[verify];
                    backup = sizing.bind(oscard)(backup);
                    kiloes = backup.intl;
                    backup = kiloes.string;
                    foxtra = foxtra[verify];
                    foxtra = sizing.bind(oscard)(foxtra);
                    foxtra = foxtra.t;
                    foxtra = foxtra.0PbE/P;
                    foxtra = backup.bind(kiloes)(foxtra);
                    romeon['subLabel'] = foxtra;
                    michal = romeon;
 380:
                    zuuluu[2] = michal;
                    michal = null;
                    if(!option) { _fun00002_ip = 476; continue _fun00001 }
 389:
                    option = {};
                    romeon = _closure1_slot5;
                    foxtra = romeon.SHOW_LINK_DECORATIONS;
                    romeon = new Array(1);
                    romeon[0] = foxtra;
                    option['settings'] = romeon;
                    kiloes = _closure1_slot0;
                    romeon = _closure1_slot2;
                    foxtra = romeon[verify];
                    foxtra = kiloes.bind(oscard)(foxtra);
                    backup = foxtra.intl;
                    foxtra = backup.string;
                    romeon = romeon[verify];
                    romeon = kiloes.bind(oscard)(romeon);
                    romeon = romeon.t;
                    romeon = romeon.72i5GB;
                    romeon = foxtra.bind(backup)(romeon);
                    option['subLabel'] = romeon;
                    michal = option;
 476:
                    zuuluu[3] = michal;
                    michal = {};
                    romeon = _closure1_slot0;
                    kiloes = _closure1_slot2;
                    option = kiloes[verify];
                    option = romeon.bind(oscard)(option);
                    backup = option.intl;
                    foxtra = backup.string;
                    option = kiloes[verify];
                    option = romeon.bind(oscard)(option);
                    option = option.t;
                    option = option.BT8Bmp;
                    option = foxtra.bind(backup)(option);
                    michal['label'] = option;
                    option = _closure1_slot5;
                    backup = option.SYNC_PROFILE_COLORS;
                    foxtra = new Array(1);
                    foxtra[0] = backup;
                    michal['settings'] = foxtra;
                    foxtra = kiloes[verify];
                    foxtra = romeon.bind(oscard)(foxtra);
                    result = foxtra.intl;
                    sizing = result.format;
                    foxtra = kiloes[verify];
                    foxtra = romeon.bind(oscard)(foxtra);
                    foxtra = foxtra.t;
                    backup = foxtra.u6UjrK;
                    foxtra = {};
                    echoed = function() { // Original name: onThemeClick
                        zuuluu = _closure4_slot0;
                        michal = zuuluu.push;
                        entity = _closure1_slot7;
                        entity = entity.APPEARANCE;
                        entity = michal.bind(zuuluu)(entity);
                        entity = undefined;
                        return entity;
                    };
                    foxtra['onThemeClick'] = echoed;
                    foxtra = sizing.bind(result)(backup, foxtra);
                    michal['subLabel'] = foxtra;
                    zuuluu[4] = michal;
                    michal = {};
                    foxtra = kiloes[verify];
                    foxtra = romeon.bind(oscard)(foxtra);
                    sizing = foxtra.intl;
                    backup = sizing.string;
                    foxtra = kiloes[verify];
                    foxtra = romeon.bind(oscard)(foxtra);
                    foxtra = foxtra.t;
                    foxtra = foxtra.e3TR1d;
                    foxtra = backup.bind(sizing)(foxtra);
                    michal['label'] = foxtra;
                    backup = option.ENABLE_REDUCED_MOTION;
                    foxtra = new Array(2);
                    foxtra[0] = backup;
                    backup = option.SYNC_REDUCED_MOTION_WITH_DEVICE;
                    foxtra[1] = backup;
                    michal['settings'] = foxtra;
                    foxtra = kiloes[verify];
                    foxtra = romeon.bind(oscard)(foxtra);
                    backup = foxtra.intl;
                    foxtra = backup.format;
                    verify = kiloes[verify];
                    verify = romeon.bind(oscard)(verify);
                    verify = verify.t;
                    romeon = verify.2l9U2t;
                    verify = {};
                    sizing = _closure1_slot1;
                    kiloes = kiloes[output];
                    output = sizing.bind(oscard)(kiloes);
                    sizing = output.getArticleURL;
                    kiloes = _closure1_slot6;
                    kiloes = kiloes.REDUCED_MOTION;
                    kiloes = sizing.bind(output)(kiloes);
                    verify['helpdeskArticle'] = kiloes;
                    verify = foxtra.bind(backup)(romeon, verify);
                    michal['subLabel'] = verify;
                    zuuluu[5] = michal;
                    michal = {};
                    verify = option.AUTOPLAY_GIF;
                    option = new Array(1);
                    option[0] = verify;
                    michal['settings'] = option;
                    option = tangon != yankee;
                    if(!option) { _fun00002_ip = 864; continue _fun00001 }
 839:
                    romeon = _closure1_slot1;
                    foxtra = _closure1_slot2;
                    verify = 7;
                    verify = foxtra[verify];
                    verify = romeon.bind(oscard)(verify);
                    option = verify.bind(oscard)(yankee);
 864:
                    michal['subLabel'] = option;
                    zuuluu[6] = michal;
                    michal = {};
                    option = _closure1_slot5;
                    verify = option.ANIMATE_EMOJI;
                    option = new Array(1);
                    option[0] = verify;
                    michal['settings'] = option;
                    option = tangon != offset;
                    if(!option) { _fun00002_ip = 930; continue _fun00001 }
 905:
                    yankee = _closure1_slot1;
                    romeon = _closure1_slot2;
                    verify = 7;
                    verify = romeon[verify];
                    verify = yankee.bind(oscard)(verify);
                    option = verify.bind(oscard)(offset);
 930:
                    michal['subLabel'] = option;
                    zuuluu[7] = michal;
                    michal = {};
                    option = _closure1_slot5;
                    verify = option.ANIMATE_STICKERS;
                    option = new Array(1);
                    option[0] = verify;
                    michal['settings'] = option;
                    tangon = tangon != golfie;
                    if(!tangon) { _fun00002_ip = 996; continue _fun00001 }
 971:
                    option = _closure1_slot1;
                    verify = _closure1_slot2;
                    report = 7;
                    report = verify[report];
                    report = option.bind(oscard)(report);
                    tangon = report.bind(oscard)(golfie);
 996:
                    michal['subLabel'] = tangon;
                    zuuluu[8] = michal;
                    michal = zuuluu.filter;
                    entity = function(argFoo) {
                        michal = null;
                        entity = argFoo;
                        entity = michal != entity;
                        return entity;
                    };
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                }
            };
            entity = undefined;
            entity = michal.bind(entity)(zuuluu);
            return entity;
        };
        report = golfie.bind(option)(zuuluu, report);
        zuuluu = _closure1_slot8;
        entity = 12;
        entity = oscard[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.SettingsList;
        entity = {};
        entity['sections'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();