// app/modules/main_tabs_v2/native/settings/screens/ContentAndSocialScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: getSocialPermissions
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            tangon = entity.allServersSelected;
            entity = _closure1_slot8;
            entity = entity.SAFETY_GUILD_SETTING_GUILD_SELECT;
            oscard = new Array(3);
            oscard[0] = entity;
            entity = _closure1_slot8;
            entity = entity.SAFETY_GUILD_SETTING_DIRECT_MESSAGES;
            oscard[1] = entity;
            entity = _closure1_slot8;
            entity = entity.SAFETY_GUILD_SETTING_MESSAGE_REQUESTS;
            oscard[2] = entity;
            michal = {};
            offset = _closure1_slot0;
            entity = _closure1_slot2;
            verify = 10;
            report = entity[verify];
            option = undefined;
            report = offset.bind(option)(report);
            golfie = report.intl;
            report = golfie.string;
            entity = entity[verify];
            entity = offset.bind(option)(entity);
            entity = entity.t;
            entity = entity.MeYuqq;
            entity = report.bind(golfie)(entity);
            michal['label'] = entity;
            entity = oscard;
            if(tangon) { _fun00002_ip = 181; continue _fun00001 }
 129:
            tangon = new Array(0);
            kiloes = 0;
            output = tangon;
            sizing = oscard;
            kiloes = arraySpread(output, sizing, kiloes);
            golfie = _closure1_slot0;
            offset = _closure1_slot2;
            report = 12;
            report = offset[report];
            report = golfie.bind(option)(report);
            sizing = report.GUILD_SPECIFIC_SETTINGS;
            output = tangon;
            report = arraySpread(output, sizing, kiloes);
            entity = tangon;
 181:
            michal['settings'] = entity;
            entity = new Array(6);
            entity[0] = michal;
            michal = {};
            golfie = _closure1_slot0;
            tangon = _closure1_slot2;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            offset = report.intl;
            oscard = offset.string;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            report = report.t;
            report = report.XlGG9f;
            report = oscard.bind(offset)(report);
            michal['label'] = report;
            report = _closure1_slot8;
            oscard = report.SAFETY_SEND_FRIEND_REQUESTS_EVERYONE;
            report = new Array(3);
            report[0] = oscard;
            oscard = _closure1_slot8;
            oscard = oscard.SAFETY_SEND_FRIEND_REQUESTS_MUTUAL_FRIENDS;
            report[1] = oscard;
            oscard = _closure1_slot8;
            oscard = oscard.SAFETY_SEND_FRIEND_REQUESTS_MUTUAL_GUILDS;
            report[2] = oscard;
            michal['settings'] = report;
            entity[1] = michal;
            michal = {};
            report = tangon[verify];
            report = golfie.bind(option)(report);
            offset = report.intl;
            oscard = offset.string;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            report = report.t;
            report = report.3wRorq;
            report = oscard.bind(offset)(report);
            michal['label'] = report;
            report = _closure1_slot8;
            oscard = report.ACCOUNT_BLOCKED_USERS_V2;
            report = new Array(2);
            report[0] = oscard;
            oscard = _closure1_slot8;
            oscard = oscard.ACCOUNT_IGNORED_USERS;
            report[1] = oscard;
            michal['settings'] = report;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            yankee = report.intl;
            offset = yankee.format;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            report = report.t;
            oscard = report.0aNQo6;
            report = {};
            foxtra = _closure1_slot1;
            romeon = 11;
            romeon = tangon[romeon];
            backup = foxtra.bind(option)(romeon);
            foxtra = backup.getArticleURL;
            romeon = _closure1_slot9;
            romeon = romeon.STEALTH_REMEDIATION_FEATURE_GUIDE;
            romeon = foxtra.bind(backup)(romeon);
            report['helpArticle'] = romeon;
            report = offset.bind(yankee)(oscard, report);
            michal['subLabel'] = report;
            entity[2] = michal;
            michal = {};
            report = tangon[verify];
            report = golfie.bind(option)(report);
            offset = report.intl;
            oscard = offset.string;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            report = report.t;
            report = report.bGSsnZ;
            report = oscard.bind(offset)(report);
            michal['label'] = report;
            report = _closure1_slot8;
            oscard = report.SYNC_CONTACTS;
            report = new Array(3);
            report[0] = oscard;
            oscard = _closure1_slot8;
            oscard = oscard.SYNC_CONTACTS_NAME;
            report[1] = oscard;
            oscard = _closure1_slot8;
            oscard = oscard.STAFF_ONLY_FIND_YOUR_FRIENDS_DELETION;
            report[2] = oscard;
            michal['settings'] = report;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            yankee = report.intl;
            offset = yankee.format;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            report = report.t;
            oscard = report.TWz/S0;
            report = {};
            romeon = 13;
            romeon = tangon[romeon];
            romeon = golfie.bind(option)(romeon);
            romeon = romeon.handleOpenLearnMoreLink;
            report['onClick'] = romeon;
            report = offset.bind(yankee)(oscard, report);
            michal['subLabel'] = report;
            entity[3] = michal;
            michal = {};
            report = tangon[verify];
            report = golfie.bind(option)(report);
            offset = report.intl;
            oscard = offset.string;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            report = report.t;
            report = report.aBZ/oa;
            report = oscard.bind(offset)(report);
            michal['label'] = report;
            report = _closure1_slot8;
            oscard = report.DISCOVERY_BY_PHONE;
            report = new Array(2);
            report[0] = oscard;
            oscard = _closure1_slot8;
            oscard = oscard.DISCOVERY_BY_EMAIL;
            report[1] = oscard;
            michal['settings'] = report;
            entity[4] = michal;
            michal = {};
            report = tangon[verify];
            report = golfie.bind(option)(report);
            oscard = report.intl;
            report = oscard.string;
            tangon = tangon[verify];
            tangon = golfie.bind(option)(tangon);
            tangon = tangon.t;
            tangon = tangon.+KNdnp;
            tangon = report.bind(oscard)(tangon);
            michal['label'] = tangon;
            zuuluu = _closure1_slot8;
            tangon = zuuluu.IOS_CONVERSATION_SUGGESTIONS;
            zuuluu = new Array(1);
            zuuluu[0] = tangon;
            michal['settings'] = zuuluu;
            entity[5] = michal;
            return entity;
        }
    };
    var _closure1_slot14 = entity;
    entity = function() { // Original name: DiscordPermissionsPage
        michal = _closure1_slot0;
        oscard = _closure1_slot2;
        tangon = 14;
        report = oscard[tangon];
        tangon = undefined;
        golfie = michal.bind(tangon)(report);
        report = golfie.useAllServersOptionSelected;
        offset = report.bind(golfie)();
        var _closure2_slot0 = offset;
        report = 15;
        report = oscard[report];
        golfie = michal.bind(tangon)(report);
        report = golfie.useSensitiveContentFilterHelpArticle;
        verify = report.bind(golfie)();
        var _closure2_slot1 = verify;
        option = _closure1_slot4;
        golfie = option.useMemo;
        report = new Array(2);
        report[0] = offset;
        report[1] = verify;
        zuuluu = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                romeon = _closure2_slot1;
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 9;
                entity = tangon[entity];
                report = undefined;
                tangon = zuuluu.bind(report)(entity);
                zuuluu = tangon.isEligibleForSensitiveContentGoreExperiment;
                entity = 'SensitiveContentFilterSetting';
                entity = zuuluu.bind(tangon)(entity);
                if(entity) { _fun00004_ip = 258; continue _fun00003 }
 55:
                entity = {};
                tangon = _closure1_slot0;
                yankee = _closure1_slot2;
                zuuluu = 10;
                golfie = yankee[zuuluu];
                golfie = tangon.bind(report)(golfie);
                verify = golfie.intl;
                option = verify.string;
                golfie = yankee[zuuluu];
                golfie = tangon.bind(report)(golfie);
                golfie = golfie.t;
                golfie = golfie.c/UOwM;
                golfie = option.bind(verify)(golfie);
                entity['label'] = golfie;
                golfie = _closure1_slot8;
                option = golfie.EXPLICIT_MEDIA_FILTERS_FRIENDS_DMS;
                golfie = new Array(3);
                golfie[0] = option;
                option = _closure1_slot8;
                option = option.EXPLICIT_MEDIA_FILTERS_NON_FRIENDS_DMS;
                golfie[1] = option;
                option = _closure1_slot8;
                option = option.EXPLICIT_MEDIA_FILTERS_GUILDS;
                golfie[2] = option;
                entity['settings'] = golfie;
                golfie = yankee[zuuluu];
                golfie = tangon.bind(report)(golfie);
                option = golfie.intl;
                golfie = option.format;
                zuuluu = yankee[zuuluu];
                zuuluu = tangon.bind(report)(zuuluu);
                zuuluu = zuuluu.t;
                tangon = zuuluu.ZUvrwM;
                zuuluu = {};
                offset = _closure1_slot1;
                verify = 11;
                verify = yankee[verify];
                offset = offset.bind(report)(verify);
                verify = offset.getArticleURL;
                verify = verify.bind(offset)(romeon);
                zuuluu['learnMoreLink'] = verify;
                zuuluu = golfie.bind(option)(tangon, zuuluu);
                entity['subLabel'] = zuuluu;
                _fun00004_ip = 383; continue _fun00003;
 258:
                zuuluu = {};
                tangon = _closure1_slot8;
                golfie = tangon.SENSITIVE_CONTENT_FILTERS;
                tangon = new Array(1);
                tangon[0] = golfie;
                zuuluu['settings'] = tangon;
                golfie = _closure1_slot0;
                foxtra = _closure1_slot2;
                tangon = 10;
                option = foxtra[tangon];
                option = golfie.bind(report)(option);
                verify = option.intl;
                option = verify.format;
                tangon = foxtra[tangon];
                tangon = golfie.bind(report)(tangon);
                tangon = tangon.t;
                golfie = tangon.dliU4u;
                tangon = {};
                yankee = _closure1_slot1;
                offset = 11;
                offset = foxtra[offset];
                yankee = yankee.bind(report)(offset);
                offset = yankee.getArticleURL;
                offset = offset.bind(yankee)(romeon);
                tangon['learnMoreLink'] = offset;
                tangon = option.bind(verify)(golfie, tangon);
                zuuluu['subLabel'] = tangon;
                entity = zuuluu;
 383:
                tangon = new Array(5);
                tangon[0] = entity;
                entity = {};
                zuuluu = _closure1_slot8;
                golfie = zuuluu.DIRECT_MESSAGE_SPAM_FILTER;
                zuuluu = new Array(1);
                zuuluu[0] = golfie;
                entity['settings'] = zuuluu;
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                zuuluu = 10;
                golfie = offset[zuuluu];
                golfie = verify.bind(report)(golfie);
                romeon = golfie.intl;
                yankee = romeon.format;
                golfie = offset[zuuluu];
                golfie = verify.bind(report)(golfie);
                golfie = golfie.t;
                option = golfie.RvjRRE;
                golfie = {};
                backup = _closure1_slot1;
                foxtra = 11;
                kiloes = offset[foxtra];
                output = backup.bind(report)(kiloes);
                sizing = output.getArticleURL;
                kiloes = _closure1_slot9;
                kiloes = kiloes.SAFE_DIRECT_MESSAGING;
                kiloes = sizing.bind(output)(kiloes);
                golfie['appealLink'] = kiloes;
                golfie = yankee.bind(romeon)(option, golfie);
                entity['subLabel'] = golfie;
                tangon[1] = entity;
                entity = {};
                golfie = offset[zuuluu];
                golfie = verify.bind(report)(golfie);
                yankee = golfie.intl;
                option = yankee.string;
                golfie = offset[zuuluu];
                golfie = verify.bind(report)(golfie);
                golfie = golfie.t;
                golfie = golfie.MDqARU;
                golfie = option.bind(yankee)(golfie);
                entity['label'] = golfie;
                golfie = _closure1_slot8;
                option = golfie.DIRECT_MESSAGE_SAFETY_ALERTS;
                golfie = new Array(1);
                golfie[0] = option;
                entity['settings'] = golfie;
                golfie = offset[zuuluu];
                golfie = verify.bind(report)(golfie);
                romeon = golfie.intl;
                yankee = romeon.format;
                golfie = offset[zuuluu];
                golfie = verify.bind(report)(golfie);
                golfie = golfie.t;
                option = golfie.lunaRk;
                golfie = {};
                kiloes = offset[foxtra];
                output = backup.bind(report)(kiloes);
                sizing = output.getArticleURL;
                kiloes = _closure1_slot9;
                kiloes = kiloes.SAFETY_ALERTS;
                kiloes = sizing.bind(output)(kiloes);
                golfie['learnMoreLink'] = kiloes;
                golfie = yankee.bind(romeon)(option, golfie);
                entity['subLabel'] = golfie;
                tangon[2] = entity;
                entity = {};
                golfie = offset[zuuluu];
                golfie = verify.bind(report)(golfie);
                yankee = golfie.intl;
                option = yankee.string;
                golfie = offset[zuuluu];
                golfie = verify.bind(report)(golfie);
                golfie = golfie.t;
                golfie = golfie.CB5reH;
                golfie = option.bind(yankee)(golfie);
                entity['label'] = golfie;
                golfie = _closure1_slot8;
                option = golfie.KEYWORD_FILTER;
                golfie = new Array(1);
                golfie[0] = option;
                entity['settings'] = golfie;
                golfie = offset[zuuluu];
                golfie = verify.bind(report)(golfie);
                romeon = golfie.intl;
                yankee = romeon.format;
                golfie = offset[zuuluu];
                golfie = verify.bind(report)(golfie);
                golfie = golfie.t;
                option = golfie.kAyJIS;
                golfie = {};
                foxtra = offset[foxtra];
                kiloes = backup.bind(report)(foxtra);
                backup = kiloes.getArticleURL;
                foxtra = _closure1_slot9;
                foxtra = foxtra.KEYWORD_FILTERS;
                foxtra = backup.bind(kiloes)(foxtra);
                golfie['learnMoreLink'] = foxtra;
                golfie = yankee.bind(romeon)(option, golfie);
                entity['subLabel'] = golfie;
                tangon[3] = entity;
                entity = {};
                golfie = offset[zuuluu];
                golfie = verify.bind(report)(golfie);
                yankee = golfie.intl;
                option = yankee.string;
                golfie = offset[zuuluu];
                golfie = verify.bind(report)(golfie);
                golfie = golfie.t;
                golfie = golfie.wCFGLC;
                golfie = option.bind(yankee)(golfie);
                entity['label'] = golfie;
                golfie = _closure1_slot8;
                option = golfie.ANDROID_VIEW_NSFW_DM_COMMANDS_V2;
                golfie = new Array(1);
                golfie[0] = option;
                entity['settings'] = golfie;
                golfie = offset[zuuluu];
                golfie = verify.bind(report)(golfie);
                option = golfie.intl;
                golfie = option.string;
                zuuluu = offset[zuuluu];
                zuuluu = verify.bind(report)(zuuluu);
                zuuluu = zuuluu.t;
                zuuluu = zuuluu.R9fXyc;
                zuuluu = golfie.bind(option)(zuuluu);
                entity['subLabel'] = zuuluu;
                tangon[4] = entity;
                entity = new Array(0);
                result = 0;
                update = entity;
                echoed = tangon;
                result = arraySpread(update, echoed, result);
                tangon = _closure1_slot14;
                michal = {};
                oscard = _closure2_slot0;
                michal['allServersSelected'] = oscard;
                echoed = tangon.bind(report)(michal);
                update = entity;
                michal = arraySpread(update, echoed, result);
                return entity;
            }
        };
        report = golfie.bind(option)(zuuluu, report);
        zuuluu = _closure1_slot10;
        entity = 16;
        entity = oscard[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.SettingsList;
        entity = {};
        entity['sections'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot15 = entity;
    entity = function() { // Original name: ConnectedGamesPage
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = _closure1_slot13;
            report = undefined;
            oscard = entity.bind(report)();
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            entity = 17;
            entity = tangon[entity];
            entity = zuuluu.bind(report)(entity);
            entity = entity.bind(report)();
            zuuluu = entity.showLoadingIndicator;
            entity = entity.slayerSdkApplications;
            verify = _closure1_slot4;
            option = verify.useMemo;
            golfie = function() {
                michal = {};
                entity = _closure1_slot8;
                zuuluu = entity.ALLOW_GAME_FRIEND_DMS;
                entity = new Array(1);
                entity[0] = zuuluu;
                michal['settings'] = entity;
                golfie = _closure1_slot0;
                option = _closure1_slot2;
                zuuluu = 10;
                entity = option[zuuluu];
                oscard = undefined;
                entity = golfie.bind(oscard)(entity);
                offset = entity.intl;
                verify = offset.format;
                entity = option[zuuluu];
                entity = golfie.bind(oscard)(entity);
                entity = entity.t;
                report = entity.oZsHTE;
                entity = {};
                romeon = _closure1_slot1;
                yankee = 11;
                yankee = option[yankee];
                foxtra = romeon.bind(oscard)(yankee);
                romeon = foxtra.getArticleURL;
                yankee = _closure1_slot9;
                yankee = yankee.SLAYER_GAME_FRIENDS;
                yankee = romeon.bind(foxtra)(yankee);
                entity['helpdeskArticle'] = yankee;
                entity = verify.bind(offset)(report, entity);
                michal['subLabel'] = entity;
                entity = new Array(2);
                entity[0] = michal;
                michal = {};
                tangon = _closure1_slot8;
                report = tangon.IN_GAME_DMS;
                tangon = new Array(1);
                tangon[0] = report;
                michal['settings'] = tangon;
                tangon = option[zuuluu];
                tangon = golfie.bind(oscard)(tangon);
                report = tangon.intl;
                tangon = report.string;
                zuuluu = option[zuuluu];
                zuuluu = golfie.bind(oscard)(zuuluu);
                zuuluu = zuuluu.t;
                zuuluu = zuuluu.4NN4+/;
                zuuluu = tangon.bind(report)(zuuluu);
                michal['subLabel'] = zuuluu;
                entity[1] = michal;
                return entity;
            };
            tangon = new Array(0);
            golfie = option.bind(verify)(golfie, tangon);
            if(zuuluu) { _fun00006_ip = 421; continue _fun00005 }
 83:
            zuuluu = entity.length;
            entity = 0;
            if(!(entity !== zuuluu)) { _fun00006_ip = 142; continue _fun00005 }
 94:
            tangon = _closure1_slot10;
            zuuluu = _closure1_slot0;
            option = _closure1_slot2;
            entity = 16;
            entity = option[entity];
            entity = zuuluu.bind(report)(entity);
            zuuluu = entity.SettingsList;
            entity = {};
            entity['sections'] = golfie;
            entity = tangon.bind(report)(zuuluu, entity);
            _fun00006_ip = 419; continue _fun00005;
 142:
            golfie = _closure1_slot11;
            tangon = _closure1_slot6;
            zuuluu = {};
            option = oscard.emptyContainer;
            zuuluu['style'] = option;
            yankee = _closure1_slot10;
            foxtra = _closure1_slot0;
            result = _closure1_slot2;
            verify = 18;
            option = result[verify];
            option = foxtra.bind(report)(option);
            offset = option.Text;
            option = {'variant': 'text-md/semibold', 'color': 'text-primary'};
            romeon = 10;
            backup = result[romeon];
            backup = foxtra.bind(report)(backup);
            sizing = backup.intl;
            kiloes = sizing.string;
            backup = result[romeon];
            backup = foxtra.bind(report)(backup);
            backup = backup.t;
            backup = backup.+0U77e;
            backup = kiloes.bind(sizing)(backup);
            option['children'] = backup;
            offset = yankee.bind(report)(offset, option);
            option = new Array(2);
            option[0] = offset;
            yankee = _closure1_slot10;
            verify = result[verify];
            verify = foxtra.bind(report)(verify);
            offset = verify.Text;
            verify = {'variant': 'text-sm/normal', 'color': 'text-muted'};
            backup = result[romeon];
            backup = foxtra.bind(report)(backup);
            kiloes = backup.intl;
            backup = kiloes.format;
            romeon = result[romeon];
            romeon = foxtra.bind(report)(romeon);
            romeon = romeon.t;
            foxtra = romeon.V8wClJ;
            romeon = {};
            output = _closure1_slot1;
            sizing = 11;
            sizing = result[sizing];
            result = output.bind(report)(sizing);
            output = result.getArticleURL;
            sizing = _closure1_slot9;
            sizing = sizing.SOCIAL_LAYER_CONNECTIONS;
            sizing = output.bind(result)(sizing);
            romeon['helpdeskArticle'] = sizing;
            romeon = backup.bind(kiloes)(foxtra, romeon);
            verify['children'] = romeon;
            verify = yankee.bind(report)(offset, verify);
            option[1] = verify;
            zuuluu['children'] = option;
            entity = golfie.bind(report)(tangon, zuuluu);
 419:
            _fun00006_ip = 447; continue _fun00005;
 421:
            tangon = _closure1_slot10;
            zuuluu = _closure1_slot5;
            michal = {};
            oscard = oscard.loadingIndicator;
            michal['style'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 447:
            return entity;
        }
    };
    var _closure1_slot16 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    romeon = 1;
    golfie = oscard[romeon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.ActivityIndicator;
    var _closure1_slot5 = golfie;
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.getSelectedSearchResult;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.MobileSetting;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot10 = golfie;
    golfie = tangon.jsxs;
    var _closure1_slot11 = golfie;
    tangon = tangon.Fragment;
    var _closure1_slot12 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 8;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['paddingHorizontal'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['paddingTop'] = foxtra;
    tangon['controlContainer'] = verify;
    verify = {};
    verify['flex'] = romeon;
    tangon['pageContainer'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_32;
    verify['marginTop'] = foxtra;
    tangon['loadingIndicator'] = verify;
    verify = {};
    verify['flex'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['gap'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['marginTop'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingHorizontal'] = offset;
    tangon['emptyContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot13 = tangon;
    tangon = 23;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/screens/ContentAndSocialScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ContentAndSocialSettings
        michal = argFoo;
        michal = michal.route;
        var _closure2_slot0 = michal;
        michal = _closure1_slot13;
        tangon = undefined;
        yankee = michal.bind(tangon)();
        report = _closure1_slot4;
        michal = report.useState;
        zuuluu = 0;
        michal = michal.bind(report)(zuuluu);
        golfie = _closure1_slot3;
        report = 2;
        option = golfie.bind(tangon)(michal, report);
        oscard = option[zuuluu];
        michal = 1;
        option = option[michal];
        var _closure2_slot1 = option;
        foxtra = _closure1_slot4;
        romeon = foxtra.useCallback;
        offset = function(argFoo) {
            entity = argFoo;
            entity = entity.nativeEvent;
            entity = entity.layout;
            zuuluu = entity.width;
            michal = _closure2_slot1;
            entity = undefined;
            michal = michal.bind(entity)(zuuluu);
            return entity;
        };
        option = new Array(0);
        option = romeon.bind(foxtra)(offset, option);
        romeon = _closure1_slot4;
        offset = romeon.useState;
        entity = function() {
            _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                michal = _closure1_slot7;
                zuuluu = undefined;
                oscard = michal.bind(zuuluu)();
                tangon = null;
                if(!(tangon == oscard)) { _fun00008_ip = 103; continue _fun00007 }
 19:
                report = _closure2_slot0;
                golfie = tangon == report;
                report = undefined;
                if(golfie) { _fun00008_ip = 60; continue _fun00007 }
 35:
                golfie = _closure2_slot0;
                golfie = golfie.params;
                option = tangon == golfie;
                report = undefined;
                if(option) { _fun00008_ip = 60; continue _fun00007 }
 54:
                report = golfie.tab;
 60:
                if(!(tangon == report)) { _fun00008_ip = 66; continue _fun00007 }
 64:
                return zuuluu;
 66:
                michal = _closure2_slot0;
                michal = michal.params;
                golfie = michal.tab;
                michal = _closure1_slot8;
                report = michal.CONNECTED_GAMES;
                michal = 0;
                if(!(golfie === report)) { _fun00008_ip = 101; continue _fun00007 }
 98:
                michal = 1;
 101:
                return michal;
 103:
                report = _closure1_slot0;
                golfie = _closure1_slot2;
                michal = 19;
                michal = golfie[michal];
                michal = report.bind(zuuluu)(michal);
                michal = michal.SETTING_RENDERER_CONFIG;
                michal = michal[oscard];
                report = _closure1_slot8;
                report = report.CONNECTED_GAMES;
                if(!(oscard !== report)) { _fun00008_ip = 177; continue _fun00007 }
 147:
                tangon = tangon == michal;
                zuuluu = undefined;
                if(tangon) { _fun00008_ip = 161; continue _fun00007 }
 156:
                zuuluu = michal.parent;
 161:
                entity = _closure1_slot8;
                michal = entity.CONNECTED_GAMES;
                entity = 0;
                if(!(zuuluu === michal)) { _fun00008_ip = 180; continue _fun00007 }
 177:
                entity = 1;
 180:
                return entity;
            }
        };
        entity = offset.bind(romeon)(entity);
        entity = golfie.bind(tangon)(entity, report);
        report = entity[zuuluu];
        entity = entity[michal];
        offset = _closure1_slot0;
        foxtra = _closure1_slot2;
        entity = 20;
        entity = foxtra[entity];
        zuuluu = offset.bind(tangon)(entity);
        michal = zuuluu.useSegmentedControlState;
        entity = {};
        romeon = {};
        backup = 10;
        golfie = foxtra[backup];
        golfie = offset.bind(tangon)(golfie);
        sizing = golfie.intl;
        kiloes = sizing.string;
        golfie = foxtra[backup];
        golfie = offset.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie./7xJCA;
        golfie = kiloes.bind(sizing)(golfie);
        romeon['label'] = golfie;
        golfie = _closure1_slot8;
        golfie = golfie.CONTENT_AND_SOCIAL_DISCORD;
        romeon['id'] = golfie;
        sizing = _closure1_slot10;
        kiloes = _closure1_slot15;
        golfie = {};
        golfie = sizing.bind(tangon)(kiloes, golfie);
        romeon['page'] = golfie;
        golfie = new Array(2);
        golfie[0] = romeon;
        romeon = {};
        kiloes = foxtra[backup];
        kiloes = offset.bind(tangon)(kiloes);
        sizing = kiloes.intl;
        kiloes = sizing.string;
        backup = foxtra[backup];
        backup = offset.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.YpCiMj;
        backup = kiloes.bind(sizing)(backup);
        romeon['label'] = backup;
        backup = _closure1_slot8;
        backup = backup.CONNECTED_GAMES;
        romeon['id'] = backup;
        sizing = _closure1_slot10;
        kiloes = _closure1_slot16;
        backup = {};
        backup = sizing.bind(tangon)(kiloes, backup);
        romeon['page'] = backup;
        golfie[1] = romeon;
        entity['items'] = golfie;
        entity['pageWidth'] = oscard;
        entity['defaultIndex'] = report;
        romeon = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot11;
        michal = _closure1_slot12;
        entity = {};
        golfie = _closure1_slot10;
        oscard = _closure1_slot6;
        report = {};
        backup = yankee.controlContainer;
        report['style'] = backup;
        report['onLayout'] = option;
        kiloes = _closure1_slot10;
        option = 21;
        option = foxtra[option];
        option = offset.bind(tangon)(option);
        backup = option.SegmentedControl;
        option = {};
        option['state'] = romeon;
        option = kiloes.bind(tangon)(backup, option);
        report['children'] = option;
        oscard = golfie.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        option = _closure1_slot10;
        golfie = _closure1_slot6;
        oscard = {};
        yankee = yankee.pageContainer;
        oscard['style'] = yankee;
        yankee = _closure1_slot10;
        verify = 22;
        verify = foxtra[verify];
        verify = offset.bind(tangon)(verify);
        offset = verify.SegmentedControlPages;
        verify = {};
        verify['state'] = romeon;
        verify = yankee.bind(tangon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();