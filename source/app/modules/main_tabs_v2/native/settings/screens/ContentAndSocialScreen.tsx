// app/modules/main_tabs_v2/native/settings/screens/ContentAndSocialScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: getSocialPermissions
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            tangon = entity.allServersSelected;
            entity = _closure1_slot4;
            entity = entity.SAFETY_GUILD_SETTING_GUILD_SELECT;
            oscard = new Array(3);
            oscard[0] = entity;
            entity = _closure1_slot4;
            entity = entity.SAFETY_GUILD_SETTING_DIRECT_MESSAGES;
            oscard[1] = entity;
            entity = _closure1_slot4;
            entity = entity.SAFETY_GUILD_SETTING_MESSAGE_REQUESTS;
            oscard[2] = entity;
            michal = {};
            offset = _closure1_slot0;
            entity = _closure1_slot2;
            verify = 4;
            report = entity[verify];
            option = undefined;
            report = offset.bind(option)(report);
            golfie = report.intl;
            report = golfie.string;
            entity = entity[verify];
            entity = offset.bind(option)(entity);
            entity = entity.t;
            entity = entity.MeYuqq;
            entity = report.bind(golfie)(entity);
            michal['label'] = entity;
            entity = oscard;
            if(tangon) { _fun00002_ip = 181; continue _fun00001 }
 129:
            tangon = new Array(0);
            output = 0;
            echoed = tangon;
            result = oscard;
            output = arraySpread(echoed, result, output);
            golfie = _closure1_slot0;
            offset = _closure1_slot2;
            report = 6;
            report = offset[report];
            report = golfie.bind(option)(report);
            result = report.GUILD_SPECIFIC_SETTINGS;
            echoed = tangon;
            report = arraySpread(echoed, result, output);
            entity = tangon;
 181:
            michal['settings'] = entity;
            entity = new Array(7);
            entity[0] = michal;
            michal = {};
            tangon = _closure1_slot4;
            report = tangon.SAFETY_SEND_FRIEND_REQUESTS;
            tangon = new Array(1);
            tangon[0] = report;
            michal['settings'] = tangon;
            entity[1] = michal;
            michal = {};
            golfie = _closure1_slot0;
            tangon = _closure1_slot2;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            offset = report.intl;
            oscard = offset.string;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            report = report.t;
            report = report.3wRorq;
            report = oscard.bind(offset)(report);
            michal['label'] = report;
            report = _closure1_slot4;
            oscard = report.ACCOUNT_BLOCKED_USERS_V2;
            report = new Array(2);
            report[0] = oscard;
            oscard = _closure1_slot4;
            oscard = oscard.ACCOUNT_IGNORED_USERS;
            report[1] = oscard;
            michal['settings'] = report;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            yankee = report.intl;
            offset = yankee.format;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            report = report.t;
            oscard = report.0aNQo6;
            report = {};
            foxtra = _closure1_slot1;
            romeon = 5;
            backup = tangon[romeon];
            sizing = foxtra.bind(option)(backup);
            kiloes = sizing.getArticleURL;
            backup = _closure1_slot5;
            backup = backup.STEALTH_REMEDIATION_FEATURE_GUIDE;
            backup = kiloes.bind(sizing)(backup);
            report['helpArticle'] = backup;
            report = offset.bind(yankee)(oscard, report);
            michal['subLabel'] = report;
            entity[2] = michal;
            michal = {};
            report = tangon[verify];
            report = golfie.bind(option)(report);
            offset = report.intl;
            oscard = offset.string;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            report = report.t;
            report = report.oPyABA;
            report = oscard.bind(offset)(report);
            michal['label'] = report;
            report = _closure1_slot4;
            oscard = report.ALLOW_GAME_FRIEND_DMS;
            report = new Array(1);
            report[0] = oscard;
            michal['settings'] = report;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            yankee = report.intl;
            offset = yankee.format;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            report = report.t;
            oscard = report.VaxeGh;
            report = {};
            romeon = tangon[romeon];
            backup = foxtra.bind(option)(romeon);
            foxtra = backup.getArticleURL;
            romeon = _closure1_slot5;
            romeon = romeon.SLAYER_GAME_FRIENDS;
            romeon = foxtra.bind(backup)(romeon);
            report['helpdeskArticle'] = romeon;
            report = offset.bind(yankee)(oscard, report);
            michal['subLabel'] = report;
            entity[3] = michal;
            michal = {};
            report = tangon[verify];
            report = golfie.bind(option)(report);
            offset = report.intl;
            oscard = offset.string;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            report = report.t;
            report = report.bGSsnZ;
            report = oscard.bind(offset)(report);
            michal['label'] = report;
            report = _closure1_slot4;
            oscard = report.SYNC_CONTACTS;
            report = new Array(3);
            report[0] = oscard;
            oscard = _closure1_slot4;
            oscard = oscard.SYNC_CONTACTS_NAME;
            report[1] = oscard;
            oscard = _closure1_slot4;
            oscard = oscard.STAFF_ONLY_FIND_YOUR_FRIENDS_DELETION;
            report[2] = oscard;
            michal['settings'] = report;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            yankee = report.intl;
            offset = yankee.format;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            report = report.t;
            oscard = report.TWz/S0;
            report = {};
            romeon = 7;
            romeon = tangon[romeon];
            romeon = golfie.bind(option)(romeon);
            romeon = romeon.handleOpenLearnMoreLink;
            report['onClick'] = romeon;
            report = offset.bind(yankee)(oscard, report);
            michal['subLabel'] = report;
            entity[4] = michal;
            michal = {};
            report = tangon[verify];
            report = golfie.bind(option)(report);
            offset = report.intl;
            oscard = offset.string;
            report = tangon[verify];
            report = golfie.bind(option)(report);
            report = report.t;
            report = report.aBZ/oa;
            report = oscard.bind(offset)(report);
            michal['label'] = report;
            report = _closure1_slot4;
            oscard = report.DISCOVERY_BY_PHONE;
            report = new Array(2);
            report[0] = oscard;
            oscard = _closure1_slot4;
            oscard = oscard.DISCOVERY_BY_EMAIL;
            report[1] = oscard;
            michal['settings'] = report;
            entity[5] = michal;
            michal = {};
            report = tangon[verify];
            report = golfie.bind(option)(report);
            oscard = report.intl;
            report = oscard.string;
            tangon = tangon[verify];
            tangon = golfie.bind(option)(tangon);
            tangon = tangon.t;
            tangon = tangon.+KNdnp;
            tangon = report.bind(oscard)(tangon);
            michal['label'] = tangon;
            zuuluu = _closure1_slot4;
            tangon = zuuluu.IOS_CONVERSATION_SUGGESTIONS;
            zuuluu = new Array(1);
            zuuluu[0] = tangon;
            michal['settings'] = zuuluu;
            entity[6] = michal;
            return entity;
        }
    };
    var _closure1_slot7 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.MobileSetting;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/screens/ContentAndSocialScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: ContentAndSocialSettings
        michal = _closure1_slot0;
        oscard = _closure1_slot2;
        tangon = 8;
        report = oscard[tangon];
        tangon = undefined;
        golfie = michal.bind(tangon)(report);
        report = golfie.useAllServersOptionSelected;
        verify = report.bind(golfie)();
        var _closure2_slot0 = verify;
        option = _closure1_slot3;
        golfie = option.useMemo;
        report = new Array(1);
        report[0] = verify;
        zuuluu = function() {
            tangon = {};
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            oscard = 4;
            entity = offset[oscard];
            report = undefined;
            entity = verify.bind(report)(entity);
            golfie = entity.intl;
            zuuluu = golfie.string;
            entity = offset[oscard];
            entity = verify.bind(report)(entity);
            entity = entity.t;
            entity = entity.c/UOwM;
            entity = zuuluu.bind(golfie)(entity);
            tangon['label'] = entity;
            entity = _closure1_slot4;
            zuuluu = entity.SENSITIVE_MEDIA_FILTERS_FRIENDS_DMS;
            entity = new Array(3);
            entity[0] = zuuluu;
            zuuluu = _closure1_slot4;
            zuuluu = zuuluu.SENSITIVE_MEDIA_FILTERS_NON_FRIENDS_DMS;
            entity[1] = zuuluu;
            zuuluu = _closure1_slot4;
            zuuluu = zuuluu.SENSITIVE_MEDIA_FILTERS_GUILDS;
            entity[2] = zuuluu;
            tangon['settings'] = entity;
            entity = offset[oscard];
            entity = verify.bind(report)(entity);
            yankee = entity.intl;
            option = yankee.format;
            entity = offset[oscard];
            entity = verify.bind(report)(entity);
            entity = entity.t;
            golfie = entity.ZUvrwM;
            entity = {};
            backup = _closure1_slot1;
            zuuluu = 5;
            romeon = offset[zuuluu];
            kiloes = backup.bind(report)(romeon);
            foxtra = kiloes.getArticleURL;
            romeon = _closure1_slot5;
            romeon = romeon.EXPLICIT_MEDIA_REDACTION;
            romeon = foxtra.bind(kiloes)(romeon);
            entity['learnMoreLink'] = romeon;
            entity = option.bind(yankee)(golfie, entity);
            tangon['subLabel'] = entity;
            entity = new Array(5);
            entity[0] = tangon;
            tangon = {};
            golfie = _closure1_slot4;
            option = golfie.DIRECT_MESSAGE_SPAM_FILTER;
            golfie = new Array(1);
            golfie[0] = option;
            tangon['settings'] = golfie;
            golfie = offset[oscard];
            golfie = verify.bind(report)(golfie);
            romeon = golfie.intl;
            yankee = romeon.format;
            golfie = offset[oscard];
            golfie = verify.bind(report)(golfie);
            golfie = golfie.t;
            option = golfie.RvjRRE;
            golfie = {};
            foxtra = offset[zuuluu];
            sizing = backup.bind(report)(foxtra);
            kiloes = sizing.getArticleURL;
            foxtra = _closure1_slot5;
            foxtra = foxtra.SAFE_DIRECT_MESSAGING;
            foxtra = kiloes.bind(sizing)(foxtra);
            golfie['appealLink'] = foxtra;
            golfie = yankee.bind(romeon)(option, golfie);
            tangon['subLabel'] = golfie;
            entity[1] = tangon;
            tangon = {};
            golfie = offset[oscard];
            golfie = verify.bind(report)(golfie);
            yankee = golfie.intl;
            option = yankee.string;
            golfie = offset[oscard];
            golfie = verify.bind(report)(golfie);
            golfie = golfie.t;
            golfie = golfie.MDqARU;
            golfie = option.bind(yankee)(golfie);
            tangon['label'] = golfie;
            golfie = _closure1_slot4;
            option = golfie.DIRECT_MESSAGE_SAFETY_ALERTS;
            golfie = new Array(1);
            golfie[0] = option;
            tangon['settings'] = golfie;
            golfie = offset[oscard];
            golfie = verify.bind(report)(golfie);
            romeon = golfie.intl;
            yankee = romeon.format;
            golfie = offset[oscard];
            golfie = verify.bind(report)(golfie);
            golfie = golfie.t;
            option = golfie.lunaRk;
            golfie = {};
            foxtra = offset[zuuluu];
            sizing = backup.bind(report)(foxtra);
            kiloes = sizing.getArticleURL;
            foxtra = _closure1_slot5;
            foxtra = foxtra.SAFETY_ALERTS;
            foxtra = kiloes.bind(sizing)(foxtra);
            golfie['learnMoreLink'] = foxtra;
            golfie = yankee.bind(romeon)(option, golfie);
            tangon['subLabel'] = golfie;
            entity[2] = tangon;
            tangon = {};
            golfie = offset[oscard];
            golfie = verify.bind(report)(golfie);
            yankee = golfie.intl;
            option = yankee.string;
            golfie = offset[oscard];
            golfie = verify.bind(report)(golfie);
            golfie = golfie.t;
            golfie = golfie.CB5reH;
            golfie = option.bind(yankee)(golfie);
            tangon['label'] = golfie;
            golfie = _closure1_slot4;
            option = golfie.KEYWORD_FILTER;
            golfie = new Array(1);
            golfie[0] = option;
            tangon['settings'] = golfie;
            golfie = offset[oscard];
            golfie = verify.bind(report)(golfie);
            romeon = golfie.intl;
            yankee = romeon.format;
            golfie = offset[oscard];
            golfie = verify.bind(report)(golfie);
            golfie = golfie.t;
            option = golfie.kAyJIS;
            golfie = {};
            foxtra = offset[zuuluu];
            kiloes = backup.bind(report)(foxtra);
            backup = kiloes.getArticleURL;
            foxtra = _closure1_slot5;
            foxtra = foxtra.KEYWORD_FILTERS;
            foxtra = backup.bind(kiloes)(foxtra);
            golfie['learnMoreLink'] = foxtra;
            golfie = yankee.bind(romeon)(option, golfie);
            tangon['subLabel'] = golfie;
            entity[3] = tangon;
            tangon = {};
            golfie = offset[oscard];
            golfie = verify.bind(report)(golfie);
            yankee = golfie.intl;
            option = yankee.string;
            golfie = offset[oscard];
            golfie = verify.bind(report)(golfie);
            golfie = golfie.t;
            golfie = golfie.wCFGLC;
            golfie = option.bind(yankee)(golfie);
            tangon['label'] = golfie;
            golfie = _closure1_slot4;
            option = golfie.ANDROID_VIEW_NSFW_DM_COMMANDS_V2;
            golfie = new Array(1);
            golfie[0] = option;
            tangon['settings'] = golfie;
            golfie = offset[oscard];
            golfie = verify.bind(report)(golfie);
            option = golfie.intl;
            golfie = option.string;
            oscard = offset[oscard];
            oscard = verify.bind(report)(oscard);
            oscard = oscard.t;
            oscard = oscard.R9fXyc;
            oscard = golfie.bind(option)(oscard);
            tangon['subLabel'] = oscard;
            entity[4] = tangon;
            tangon = _closure1_slot7;
            michal = {};
            oscard = _closure2_slot0;
            michal['allServersSelected'] = oscard;
            result = tangon.bind(report)(michal);
            echoed = entity;
            output = zuuluu;
            michal = arraySpread(echoed, result, output);
            return entity;
        };
        report = golfie.bind(option)(zuuluu, report);
        zuuluu = _closure1_slot6;
        entity = 9;
        entity = oscard[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.SettingsList;
        entity = {};
        entity['sections'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();