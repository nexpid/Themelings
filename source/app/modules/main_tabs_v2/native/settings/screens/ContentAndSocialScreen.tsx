// app/modules/main_tabs_v2/native/settings/screens/ContentAndSocialScreen.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: getSocialPermissions
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            tango = entity.allServersSelected;
            entity = _closure1_slot4;
            entity = entity.SAFETY_GUILD_SETTING_GUILD_SELECT;
            oscar = new Array(3);
            oscar[0] = entity;
            entity = _closure1_slot4;
            entity = entity.SAFETY_GUILD_SETTING_DIRECT_MESSAGES;
            oscar[1] = entity;
            entity = _closure1_slot4;
            entity = entity.SAFETY_GUILD_SETTING_MESSAGE_REQUESTS;
            oscar[2] = entity;
            mike = {};
            offset = _closure1_slot0;
            entity = _closure1_slot2;
            verify = 4;
            report = entity[verify];
            options = undefined;
            report = offset.bind(options)(report);
            golf = report.intl;
            report = golf.string;
            entity = entity[verify];
            entity = offset.bind(options)(entity);
            entity = entity.t;
            entity = entity.MeYuqq;
            entity = report.bind(golf)(entity);
            mike['label'] = entity;
            entity = oscar;
            if(tango) { _fun00002_ip = 181; continue _fun00001 }
 129:
            tango = new Array(0);
            output = 0;
            echo = tango;
            result = oscar;
            output = arraySpread(echo, result, output);
            golf = _closure1_slot0;
            offset = _closure1_slot2;
            report = 6;
            report = offset[report];
            report = golf.bind(options)(report);
            result = report.GUILD_SPECIFIC_SETTINGS;
            echo = tango;
            report = arraySpread(echo, result, output);
            entity = tango;
 181:
            mike['settings'] = entity;
            entity = new Array(7);
            entity[0] = mike;
            mike = {};
            tango = _closure1_slot4;
            report = tango.SAFETY_SEND_FRIEND_REQUESTS;
            tango = new Array(1);
            tango[0] = report;
            mike['settings'] = tango;
            entity[1] = mike;
            mike = {};
            golf = _closure1_slot0;
            tango = _closure1_slot2;
            report = tango[verify];
            report = golf.bind(options)(report);
            offset = report.intl;
            oscar = offset.string;
            report = tango[verify];
            report = golf.bind(options)(report);
            report = report.t;
            report = report.3wRorq;
            report = oscar.bind(offset)(report);
            mike['label'] = report;
            report = _closure1_slot4;
            oscar = report.ACCOUNT_BLOCKED_USERS_V2;
            report = new Array(2);
            report[0] = oscar;
            oscar = _closure1_slot4;
            oscar = oscar.ACCOUNT_IGNORED_USERS;
            report[1] = oscar;
            mike['settings'] = report;
            report = tango[verify];
            report = golf.bind(options)(report);
            yankee = report.intl;
            offset = yankee.format;
            report = tango[verify];
            report = golf.bind(options)(report);
            report = report.t;
            oscar = report.0aNQo6;
            report = {};
            foxtrot = _closure1_slot1;
            romeo = 5;
            backup = tango[romeo];
            sizing = foxtrot.bind(options)(backup);
            kilo = sizing.getArticleURL;
            backup = _closure1_slot5;
            backup = backup.STEALTH_REMEDIATION_FEATURE_GUIDE;
            backup = kilo.bind(sizing)(backup);
            report['helpArticle'] = backup;
            report = offset.bind(yankee)(oscar, report);
            mike['subLabel'] = report;
            entity[2] = mike;
            mike = {};
            report = tango[verify];
            report = golf.bind(options)(report);
            offset = report.intl;
            oscar = offset.string;
            report = tango[verify];
            report = golf.bind(options)(report);
            report = report.t;
            report = report.oPyABA;
            report = oscar.bind(offset)(report);
            mike['label'] = report;
            report = _closure1_slot4;
            oscar = report.ALLOW_GAME_FRIEND_DMS;
            report = new Array(1);
            report[0] = oscar;
            mike['settings'] = report;
            report = tango[verify];
            report = golf.bind(options)(report);
            yankee = report.intl;
            offset = yankee.format;
            report = tango[verify];
            report = golf.bind(options)(report);
            report = report.t;
            oscar = report.VaxeGh;
            report = {};
            romeo = tango[romeo];
            backup = foxtrot.bind(options)(romeo);
            foxtrot = backup.getArticleURL;
            romeo = _closure1_slot5;
            romeo = romeo.SLAYER_GAME_FRIENDS;
            romeo = foxtrot.bind(backup)(romeo);
            report['helpdeskArticle'] = romeo;
            report = offset.bind(yankee)(oscar, report);
            mike['subLabel'] = report;
            entity[3] = mike;
            mike = {};
            report = tango[verify];
            report = golf.bind(options)(report);
            offset = report.intl;
            oscar = offset.string;
            report = tango[verify];
            report = golf.bind(options)(report);
            report = report.t;
            report = report.bGSsnZ;
            report = oscar.bind(offset)(report);
            mike['label'] = report;
            report = _closure1_slot4;
            oscar = report.SYNC_CONTACTS;
            report = new Array(3);
            report[0] = oscar;
            oscar = _closure1_slot4;
            oscar = oscar.SYNC_CONTACTS_NAME;
            report[1] = oscar;
            oscar = _closure1_slot4;
            oscar = oscar.STAFF_ONLY_FIND_YOUR_FRIENDS_DELETION;
            report[2] = oscar;
            mike['settings'] = report;
            report = tango[verify];
            report = golf.bind(options)(report);
            yankee = report.intl;
            offset = yankee.format;
            report = tango[verify];
            report = golf.bind(options)(report);
            report = report.t;
            oscar = report.TWz/S0;
            report = {};
            romeo = 7;
            romeo = tango[romeo];
            romeo = golf.bind(options)(romeo);
            romeo = romeo.handleOpenLearnMoreLink;
            report['onClick'] = romeo;
            report = offset.bind(yankee)(oscar, report);
            mike['subLabel'] = report;
            entity[4] = mike;
            mike = {};
            report = tango[verify];
            report = golf.bind(options)(report);
            offset = report.intl;
            oscar = offset.string;
            report = tango[verify];
            report = golf.bind(options)(report);
            report = report.t;
            report = report.aBZ/oa;
            report = oscar.bind(offset)(report);
            mike['label'] = report;
            report = _closure1_slot4;
            oscar = report.DISCOVERY_BY_PHONE;
            report = new Array(2);
            report[0] = oscar;
            oscar = _closure1_slot4;
            oscar = oscar.DISCOVERY_BY_EMAIL;
            report[1] = oscar;
            mike['settings'] = report;
            entity[5] = mike;
            mike = {};
            report = tango[verify];
            report = golf.bind(options)(report);
            oscar = report.intl;
            report = oscar.string;
            tango = tango[verify];
            tango = golf.bind(options)(tango);
            tango = tango.t;
            tango = tango.+KNdnp;
            tango = report.bind(oscar)(tango);
            mike['label'] = tango;
            zulu = _closure1_slot4;
            tango = zulu.IOS_CONVERSATION_SUGGESTIONS;
            zulu = new Array(1);
            zulu[0] = tango;
            mike['settings'] = zulu;
            entity[6] = mike;
            return entity;
        }
    };
    var _closure1_slot7 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.MobileSetting;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.HelpdeskArticles;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot6 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/settings/screens/ContentAndSocialScreen.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: ContentAndSocialSettings
        mike = _closure1_slot0;
        oscar = _closure1_slot2;
        tango = 8;
        report = oscar[tango];
        tango = undefined;
        golf = mike.bind(tango)(report);
        report = golf.useAllServersOptionSelected;
        verify = report.bind(golf)();
        var _closure2_slot0 = verify;
        options = _closure1_slot3;
        golf = options.useMemo;
        report = new Array(1);
        report[0] = verify;
        zulu = function() {
            tango = {};
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            oscar = 4;
            entity = offset[oscar];
            report = undefined;
            entity = verify.bind(report)(entity);
            golf = entity.intl;
            zulu = golf.string;
            entity = offset[oscar];
            entity = verify.bind(report)(entity);
            entity = entity.t;
            entity = entity.c/UOwM;
            entity = zulu.bind(golf)(entity);
            tango['label'] = entity;
            entity = _closure1_slot4;
            zulu = entity.SENSITIVE_MEDIA_FILTERS_FRIENDS_DMS;
            entity = new Array(3);
            entity[0] = zulu;
            zulu = _closure1_slot4;
            zulu = zulu.SENSITIVE_MEDIA_FILTERS_NON_FRIENDS_DMS;
            entity[1] = zulu;
            zulu = _closure1_slot4;
            zulu = zulu.SENSITIVE_MEDIA_FILTERS_GUILDS;
            entity[2] = zulu;
            tango['settings'] = entity;
            entity = offset[oscar];
            entity = verify.bind(report)(entity);
            yankee = entity.intl;
            options = yankee.format;
            entity = offset[oscar];
            entity = verify.bind(report)(entity);
            entity = entity.t;
            golf = entity.ZUvrwM;
            entity = {};
            backup = _closure1_slot1;
            zulu = 5;
            romeo = offset[zulu];
            kilo = backup.bind(report)(romeo);
            foxtrot = kilo.getArticleURL;
            romeo = _closure1_slot5;
            romeo = romeo.EXPLICIT_MEDIA_REDACTION;
            romeo = foxtrot.bind(kilo)(romeo);
            entity['learnMoreLink'] = romeo;
            entity = options.bind(yankee)(golf, entity);
            tango['subLabel'] = entity;
            entity = new Array(5);
            entity[0] = tango;
            tango = {};
            golf = _closure1_slot4;
            options = golf.DIRECT_MESSAGE_SPAM_FILTER;
            golf = new Array(1);
            golf[0] = options;
            tango['settings'] = golf;
            golf = offset[oscar];
            golf = verify.bind(report)(golf);
            romeo = golf.intl;
            yankee = romeo.format;
            golf = offset[oscar];
            golf = verify.bind(report)(golf);
            golf = golf.t;
            options = golf.RvjRRE;
            golf = {};
            foxtrot = offset[zulu];
            sizing = backup.bind(report)(foxtrot);
            kilo = sizing.getArticleURL;
            foxtrot = _closure1_slot5;
            foxtrot = foxtrot.SAFE_DIRECT_MESSAGING;
            foxtrot = kilo.bind(sizing)(foxtrot);
            golf['appealLink'] = foxtrot;
            golf = yankee.bind(romeo)(options, golf);
            tango['subLabel'] = golf;
            entity[1] = tango;
            tango = {};
            golf = offset[oscar];
            golf = verify.bind(report)(golf);
            yankee = golf.intl;
            options = yankee.string;
            golf = offset[oscar];
            golf = verify.bind(report)(golf);
            golf = golf.t;
            golf = golf.MDqARU;
            golf = options.bind(yankee)(golf);
            tango['label'] = golf;
            golf = _closure1_slot4;
            options = golf.DIRECT_MESSAGE_SAFETY_ALERTS;
            golf = new Array(1);
            golf[0] = options;
            tango['settings'] = golf;
            golf = offset[oscar];
            golf = verify.bind(report)(golf);
            romeo = golf.intl;
            yankee = romeo.format;
            golf = offset[oscar];
            golf = verify.bind(report)(golf);
            golf = golf.t;
            options = golf.lunaRk;
            golf = {};
            foxtrot = offset[zulu];
            sizing = backup.bind(report)(foxtrot);
            kilo = sizing.getArticleURL;
            foxtrot = _closure1_slot5;
            foxtrot = foxtrot.SAFETY_ALERTS;
            foxtrot = kilo.bind(sizing)(foxtrot);
            golf['learnMoreLink'] = foxtrot;
            golf = yankee.bind(romeo)(options, golf);
            tango['subLabel'] = golf;
            entity[2] = tango;
            tango = {};
            golf = offset[oscar];
            golf = verify.bind(report)(golf);
            yankee = golf.intl;
            options = yankee.string;
            golf = offset[oscar];
            golf = verify.bind(report)(golf);
            golf = golf.t;
            golf = golf.CB5reH;
            golf = options.bind(yankee)(golf);
            tango['label'] = golf;
            golf = _closure1_slot4;
            options = golf.KEYWORD_FILTER;
            golf = new Array(1);
            golf[0] = options;
            tango['settings'] = golf;
            golf = offset[oscar];
            golf = verify.bind(report)(golf);
            romeo = golf.intl;
            yankee = romeo.format;
            golf = offset[oscar];
            golf = verify.bind(report)(golf);
            golf = golf.t;
            options = golf.kAyJIS;
            golf = {};
            foxtrot = offset[zulu];
            kilo = backup.bind(report)(foxtrot);
            backup = kilo.getArticleURL;
            foxtrot = _closure1_slot5;
            foxtrot = foxtrot.KEYWORD_FILTERS;
            foxtrot = backup.bind(kilo)(foxtrot);
            golf['learnMoreLink'] = foxtrot;
            golf = yankee.bind(romeo)(options, golf);
            tango['subLabel'] = golf;
            entity[3] = tango;
            tango = {};
            golf = offset[oscar];
            golf = verify.bind(report)(golf);
            yankee = golf.intl;
            options = yankee.string;
            golf = offset[oscar];
            golf = verify.bind(report)(golf);
            golf = golf.t;
            golf = golf.wCFGLC;
            golf = options.bind(yankee)(golf);
            tango['label'] = golf;
            golf = _closure1_slot4;
            options = golf.ANDROID_VIEW_NSFW_DM_COMMANDS_V2;
            golf = new Array(1);
            golf[0] = options;
            tango['settings'] = golf;
            golf = offset[oscar];
            golf = verify.bind(report)(golf);
            options = golf.intl;
            golf = options.string;
            oscar = offset[oscar];
            oscar = verify.bind(report)(oscar);
            oscar = oscar.t;
            oscar = oscar.R9fXyc;
            oscar = golf.bind(options)(oscar);
            tango['subLabel'] = oscar;
            entity[4] = tango;
            tango = _closure1_slot7;
            mike = {};
            oscar = _closure2_slot0;
            mike['allServersSelected'] = oscar;
            result = tango.bind(report)(mike);
            echo = entity;
            output = zulu;
            mike = arraySpread(echo, result, output);
            return entity;
        };
        report = golf.bind(options)(zulu, report);
        zulu = _closure1_slot6;
        entity = 9;
        entity = oscar[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.SettingsList;
        entity = {};
        entity['sections'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();