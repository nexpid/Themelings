// app/modules/main_tabs_v2/native/settings/screens/SettingsOverviewScreen.tsx
export default (function(_, argBar, __, argCor, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = function() { // Original name: useOverviewSettings
        oscard = _closure1_slot0;
        golfie = _closure1_slot1;
        zuuluu = 5;
        zuuluu = golfie[zuuluu];
        report = undefined;
        tangon = oscard.bind(report)(zuuluu);
        zuuluu = tangon.useHasPremiumSubscriptionToDisplay;
        zuuluu = zuuluu.bind(tangon)();
        var _closure2_slot0 = zuuluu;
        tangon = 6;
        tangon = golfie[tangon];
        tangon = oscard.bind(report)(tangon);
        golfie = tangon.NitroEntryPointExperiment;
        oscard = golfie.useExperiment;
        report = {};
        tangon = '1ca771_1';
        report['location'] = tangon;
        tangon = {};
        option = false;
        tangon['autoTrackExposure'] = option;
        tangon['disable'] = zuuluu;
        tangon = oscard.bind(golfie)(report, tangon);
        report = tangon.alternate;
        var _closure2_slot1 = report;
        golfie = _closure1_slot2;
        oscard = golfie.useEffect;
        tangon = new Array(1);
        tangon[0] = zuuluu;
        zuuluu = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = _closure2_slot0;
                if(entity) { _fun00002_ip = 64; continue _fun00001 }
 10:
                zuuluu = _closure1_slot0;
                michal = _closure1_slot1;
                entity = 6;
                michal = michal[entity];
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                zuuluu = entity.NitroEntryPointExperiment;
                michal = zuuluu.trackExposure;
                entity = {};
                tangon = '1ca771_3';
                entity['location'] = tangon;
                entity = michal.bind(zuuluu)(entity);
 64:
                entity = undefined;
                return entity;
            }
        };
        zuuluu = oscard.bind(golfie)(zuuluu, tangon);
        tangon = _closure1_slot2;
        zuuluu = tangon.useMemo;
        michal = new Array(1);
        michal[0] = report;
        entity = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = {};
                michal = _closure2_slot1;
                entity['isInNitroEntryPointExperiment'] = michal;
                oscard = entity.isInNitroEntryPointExperiment;
                michal = {};
                golfie = _closure1_slot0;
                entity = _closure1_slot1;
                verify = 3;
                zuuluu = entity[verify];
                option = undefined;
                zuuluu = golfie.bind(option)(zuuluu);
                report = zuuluu.intl;
                zuuluu = report.string;
                entity = entity[verify];
                entity = golfie.bind(option)(entity);
                entity = entity.t;
                entity = entity.C6COaW;
                entity = zuuluu.bind(report)(entity);
                michal['label'] = entity;
                entity = null;
                if(!oscard) { _fun00004_ip = 101; continue _fun00003 }
 91:
                report = _closure1_slot3;
                entity = report.PREMIUM;
 101:
                yankee = new Array(10);
                yankee[0] = entity;
                entity = _closure1_slot3;
                entity = entity.ACCOUNT;
                yankee[1] = entity;
                entity = _closure1_slot3;
                entity = entity.CONTENT_AND_SOCIAL;
                yankee[2] = entity;
                entity = _closure1_slot3;
                entity = entity.DATA_AND_PRIVACY;
                yankee[3] = entity;
                entity = _closure1_slot3;
                entity = entity.FAMILY_CENTER;
                yankee[4] = entity;
                entity = _closure1_slot3;
                entity = entity.AUTHORIZED_APPS;
                yankee[5] = entity;
                entity = _closure1_slot3;
                entity = entity.DEVICES;
                yankee[6] = entity;
                entity = _closure1_slot3;
                entity = entity.CONNECTIONS;
                yankee[7] = entity;
                entity = _closure1_slot3;
                entity = entity.CLIPS;
                yankee[8] = entity;
                entity = _closure1_slot3;
                entity = entity.SCAN_QR_CODE;
                yankee[9] = entity;
                offset = yankee.filter;
                romeon = _closure1_slot0;
                golfie = _closure1_slot1;
                report = 4;
                entity = golfie[report];
                entity = romeon.bind(option)(entity);
                entity = entity.isNotNullish;
                entity = offset.bind(yankee)(entity);
                michal['settings'] = entity;
                entity = new Array(10);
                entity[0] = michal;
                michal = {};
                offset = golfie[verify];
                offset = romeon.bind(option)(offset);
                yankee = offset.intl;
                offset = yankee.string;
                golfie = golfie[verify];
                golfie = romeon.bind(option)(golfie);
                golfie = golfie.t;
                golfie = golfie.SuS+RE;
                golfie = offset.bind(yankee)(golfie);
                michal['label'] = golfie;
                golfie = _closure1_slot3;
                golfie = golfie.QUEST_HOME;
                yankee = new Array(6);
                yankee[0] = golfie;
                zuuluu = null;
                if(oscard) { _fun00004_ip = 369; continue _fun00003 }
 359:
                oscard = _closure1_slot3;
                zuuluu = oscard.PREMIUM;
 369:
                yankee[1] = zuuluu;
                zuuluu = _closure1_slot3;
                zuuluu = zuuluu.PREMIUM_GUILD_BOOSTING;
                yankee[2] = zuuluu;
                zuuluu = _closure1_slot3;
                zuuluu = zuuluu.PREMIUM_GIFTING;
                yankee[3] = zuuluu;
                zuuluu = _closure1_slot3;
                zuuluu = zuuluu.GUILD_ROLE_SUBSCRIPTIONS;
                yankee[4] = zuuluu;
                zuuluu = _closure1_slot3;
                zuuluu = zuuluu.PREMIUM_RESTORE_SUBSCRIPTION;
                yankee[5] = zuuluu;
                offset = yankee.filter;
                golfie = _closure1_slot0;
                zuuluu = _closure1_slot1;
                oscard = zuuluu[report];
                oscard = golfie.bind(option)(oscard);
                oscard = oscard.isNotNullish;
                oscard = offset.bind(yankee)(oscard);
                michal['settings'] = oscard;
                entity[1] = michal;
                michal = {};
                oscard = zuuluu[verify];
                oscard = golfie.bind(option)(oscard);
                yankee = oscard.intl;
                offset = yankee.string;
                oscard = zuuluu[verify];
                oscard = golfie.bind(option)(oscard);
                oscard = oscard.t;
                oscard = oscard.f2n1TE;
                oscard = offset.bind(yankee)(oscard);
                michal['label'] = oscard;
                oscard = _closure1_slot3;
                oscard = oscard.VOICE;
                offset = new Array(9);
                offset[0] = oscard;
                oscard = _closure1_slot3;
                oscard = oscard.APPEARANCE;
                offset[1] = oscard;
                oscard = _closure1_slot3;
                oscard = oscard.ACCESSIBILITY;
                offset[2] = oscard;
                oscard = _closure1_slot3;
                oscard = oscard.LANGUAGE;
                offset[3] = oscard;
                oscard = _closure1_slot3;
                oscard = oscard.CHAT;
                offset[4] = oscard;
                oscard = _closure1_slot3;
                oscard = oscard.WEB_BROWSER;
                offset[5] = oscard;
                oscard = _closure1_slot3;
                oscard = oscard.NOTIFICATIONS;
                offset[6] = oscard;
                oscard = _closure1_slot3;
                oscard = oscard.APP_ICONS;
                offset[7] = oscard;
                oscard = _closure1_slot3;
                oscard = oscard.ADVANCED;
                offset[8] = oscard;
                oscard = offset.filter;
                report = zuuluu[report];
                report = golfie.bind(option)(report);
                report = report.isNotNullish;
                report = oscard.bind(offset)(report);
                michal['settings'] = report;
                entity[2] = michal;
                michal = {};
                report = zuuluu[verify];
                report = golfie.bind(option)(report);
                offset = report.intl;
                oscard = offset.string;
                report = zuuluu[verify];
                report = golfie.bind(option)(report);
                report = report.t;
                report = report.Yl/Rio;
                report = oscard.bind(offset)(report);
                michal['label'] = report;
                report = _closure1_slot3;
                oscard = report.SUPPORT;
                report = new Array(3);
                report[0] = oscard;
                oscard = _closure1_slot3;
                oscard = oscard.UPLOAD_DEBUG_LOGS;
                report[1] = oscard;
                oscard = _closure1_slot3;
                oscard = oscard.ACKNOWLEDGEMENTS;
                report[2] = oscard;
                michal['settings'] = report;
                entity[3] = michal;
                michal = {};
                report = zuuluu[verify];
                report = golfie.bind(option)(report);
                offset = report.intl;
                oscard = offset.string;
                report = zuuluu[verify];
                report = golfie.bind(option)(report);
                report = report.t;
                report = report.LRmNAg;
                report = oscard.bind(offset)(report);
                michal['label'] = report;
                report = _closure1_slot3;
                oscard = report.CHANGE_LOG;
                report = new Array(1);
                report[0] = oscard;
                michal['settings'] = report;
                entity[4] = michal;
                michal = {};
                report = _closure1_slot3;
                oscard = report.LOGOUT;
                report = new Array(1);
                report[0] = oscard;
                michal['settings'] = report;
                entity[5] = michal;
                michal = {};
                report = zuuluu[verify];
                report = golfie.bind(option)(report);
                offset = report.intl;
                oscard = offset.string;
                report = zuuluu[verify];
                report = golfie.bind(option)(report);
                report = report.t;
                report = report.CbItOD;
                report = oscard.bind(offset)(report);
                michal['label'] = report;
                report = _closure1_slot3;
                oscard = report.APP_VERSION;
                report = new Array(6);
                report[0] = oscard;
                oscard = _closure1_slot3;
                oscard = oscard.DEVICE_INFO;
                report[1] = oscard;
                oscard = _closure1_slot3;
                oscard = oscard.COPY_CLIENT_INFO;
                report[2] = oscard;
                oscard = _closure1_slot3;
                oscard = oscard.VIEW_DEBUG_LOGS;
                report[3] = oscard;
                oscard = _closure1_slot3;
                oscard = oscard.CACHE_ACTIONS;
                report[4] = oscard;
                oscard = _closure1_slot3;
                oscard = oscard.REACT_COMPILER;
                report[5] = oscard;
                michal['settings'] = report;
                entity[6] = michal;
                michal = {};
                report = zuuluu[verify];
                report = golfie.bind(option)(report);
                oscard = report.intl;
                report = oscard.string;
                zuuluu = zuuluu[verify];
                zuuluu = golfie.bind(option)(zuuluu);
                zuuluu = zuuluu.t;
                zuuluu = zuuluu./tZh0N;
                zuuluu = report.bind(oscard)(zuuluu);
                michal['label'] = zuuluu;
                zuuluu = _closure1_slot3;
                report = zuuluu.BUG_REPORTER;
                zuuluu = new Array(2);
                zuuluu[0] = report;
                report = _closure1_slot3;
                report = report.CREATE_BUG_REPORT;
                zuuluu[1] = report;
                michal['settings'] = zuuluu;
                entity[7] = michal;
                michal = {};
                zuuluu = 'Build Status';
                michal['label'] = zuuluu;
                zuuluu = _closure1_slot3;
                report = zuuluu.INTERNAL_BUILD_ACTIVE;
                zuuluu = new Array(4);
                zuuluu[0] = report;
                report = _closure1_slot3;
                report = report.INTERNAL_BUILD_UPDATE;
                zuuluu[1] = report;
                report = _closure1_slot3;
                report = report.BUILD_OVERRIDE_ACTIVE;
                zuuluu[2] = report;
                report = _closure1_slot3;
                report = report.EXPERIMENT_OVERRIDE_ACTIVE;
                zuuluu[3] = report;
                michal['settings'] = zuuluu;
                entity[8] = michal;
                michal = {};
                zuuluu = 'Staff Settings';
                michal['label'] = zuuluu;
                zuuluu = _closure1_slot3;
                report = zuuluu.SHOW_DEV_WIDGET;
                zuuluu = new Array(3);
                zuuluu[0] = report;
                report = _closure1_slot3;
                report = report.SHOW_DEV_TOOLS;
                zuuluu[1] = report;
                tangon = _closure1_slot3;
                tangon = tangon.DESIGN_SYSTEMS;
                zuuluu[2] = tangon;
                michal['settings'] = zuuluu;
                entity[9] = michal;
                return entity;
            }
        };
        entity = zuuluu.bind(tangon)(entity, michal);
        return entity;
    };
    var _closure1_slot5 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot2 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.MobileSetting;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/screens/SettingsOverviewScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: SettingsOverviewScreen
        michal = _closure1_slot5;
        tangon = undefined;
        report = michal.bind(tangon)();
        zuuluu = _closure1_slot4;
        michal = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 7;
        entity = oscard[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.SearchableSettingsList;
        entity = {};
        entity['sections'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();