// app/modules/main_tabs_v2/native/settings/screens/SettingsOverviewScreen.tsx
export default (function(_, argBar, __, argCor, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot2 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.MobileSetting;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/screens/SettingsOverviewScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: SettingsOverviewScreen
        report = _closure1_slot2;
        tangon = report.useMemo;
        zuuluu = function() {
            michal = {};
            option = _closure1_slot0;
            verify = _closure1_slot1;
            zuuluu = 3;
            tangon = verify[zuuluu];
            golfie = undefined;
            tangon = option.bind(golfie)(tangon);
            oscard = tangon.intl;
            report = oscard.string;
            tangon = verify[zuuluu];
            tangon = option.bind(golfie)(tangon);
            tangon = tangon.t;
            tangon = tangon.C6COaW;
            tangon = report.bind(oscard)(tangon);
            michal['label'] = tangon;
            tangon = _closure1_slot3;
            entity = tangon.PREMIUM;
            offset = new Array(10);
            offset[0] = entity;
            entity = tangon.ACCOUNT;
            offset[1] = entity;
            entity = tangon.CONTENT_AND_SOCIAL;
            offset[2] = entity;
            entity = tangon.DATA_AND_PRIVACY;
            offset[3] = entity;
            entity = tangon.FAMILY_CENTER;
            offset[4] = entity;
            entity = tangon.AUTHORIZED_APPS;
            offset[5] = entity;
            entity = tangon.DEVICES;
            offset[6] = entity;
            entity = tangon.CONNECTIONS;
            offset[7] = entity;
            entity = tangon.CLIPS;
            offset[8] = entity;
            entity = tangon.SCAN_QR_CODE;
            offset[9] = entity;
            oscard = offset.filter;
            report = 4;
            entity = verify[report];
            entity = option.bind(golfie)(entity);
            entity = entity.isNotNullish;
            entity = oscard.bind(offset)(entity);
            michal['settings'] = entity;
            entity = new Array(10);
            entity[0] = michal;
            michal = {};
            oscard = verify[zuuluu];
            oscard = option.bind(golfie)(oscard);
            yankee = oscard.intl;
            offset = yankee.string;
            oscard = verify[zuuluu];
            oscard = option.bind(golfie)(oscard);
            oscard = oscard.t;
            oscard = oscard.SuS+RE;
            oscard = offset.bind(yankee)(oscard);
            michal['label'] = oscard;
            oscard = tangon.QUEST_HOME;
            yankee = new Array(6);
            yankee[0] = oscard;
            oscard = tangon.PREMIUM;
            yankee[1] = oscard;
            oscard = tangon.PREMIUM_GUILD_BOOSTING;
            yankee[2] = oscard;
            oscard = tangon.PREMIUM_GIFTING;
            yankee[3] = oscard;
            oscard = tangon.GUILD_ROLE_SUBSCRIPTIONS;
            yankee[4] = oscard;
            oscard = tangon.PREMIUM_RESTORE_SUBSCRIPTION;
            yankee[5] = oscard;
            offset = yankee.filter;
            oscard = verify[report];
            oscard = option.bind(golfie)(oscard);
            oscard = oscard.isNotNullish;
            oscard = offset.bind(yankee)(oscard);
            michal['settings'] = oscard;
            entity[1] = michal;
            michal = {};
            oscard = verify[zuuluu];
            oscard = option.bind(golfie)(oscard);
            yankee = oscard.intl;
            offset = yankee.string;
            oscard = verify[zuuluu];
            oscard = option.bind(golfie)(oscard);
            oscard = oscard.t;
            oscard = oscard.f2n1TE;
            oscard = offset.bind(yankee)(oscard);
            michal['label'] = oscard;
            oscard = tangon.VOICE;
            offset = new Array(9);
            offset[0] = oscard;
            oscard = tangon.APPEARANCE;
            offset[1] = oscard;
            oscard = tangon.ACCESSIBILITY;
            offset[2] = oscard;
            oscard = tangon.LANGUAGE;
            offset[3] = oscard;
            oscard = tangon.CHAT;
            offset[4] = oscard;
            oscard = tangon.WEB_BROWSER;
            offset[5] = oscard;
            oscard = tangon.NOTIFICATIONS;
            offset[6] = oscard;
            oscard = tangon.APP_ICONS;
            offset[7] = oscard;
            oscard = tangon.ADVANCED;
            offset[8] = oscard;
            oscard = offset.filter;
            report = verify[report];
            report = option.bind(golfie)(report);
            report = report.isNotNullish;
            report = oscard.bind(offset)(report);
            michal['settings'] = report;
            entity[2] = michal;
            michal = {};
            report = verify[zuuluu];
            report = option.bind(golfie)(report);
            offset = report.intl;
            oscard = offset.string;
            report = verify[zuuluu];
            report = option.bind(golfie)(report);
            report = report.t;
            report = report.Yl/Rio;
            report = oscard.bind(offset)(report);
            michal['label'] = report;
            oscard = tangon.SUPPORT;
            report = new Array(3);
            report[0] = oscard;
            oscard = tangon.UPLOAD_DEBUG_LOGS;
            report[1] = oscard;
            oscard = tangon.ACKNOWLEDGEMENTS;
            report[2] = oscard;
            michal['settings'] = report;
            entity[3] = michal;
            michal = {};
            report = verify[zuuluu];
            report = option.bind(golfie)(report);
            offset = report.intl;
            oscard = offset.string;
            report = verify[zuuluu];
            report = option.bind(golfie)(report);
            report = report.t;
            report = report.LRmNAg;
            report = oscard.bind(offset)(report);
            michal['label'] = report;
            oscard = tangon.CHANGE_LOG;
            report = new Array(1);
            report[0] = oscard;
            michal['settings'] = report;
            entity[4] = michal;
            michal = {};
            oscard = tangon.LOGOUT;
            report = new Array(1);
            report[0] = oscard;
            michal['settings'] = report;
            entity[5] = michal;
            michal = {};
            report = verify[zuuluu];
            report = option.bind(golfie)(report);
            offset = report.intl;
            oscard = offset.string;
            report = verify[zuuluu];
            report = option.bind(golfie)(report);
            report = report.t;
            report = report.CbItOD;
            report = oscard.bind(offset)(report);
            michal['label'] = report;
            oscard = tangon.APP_VERSION;
            report = new Array(6);
            report[0] = oscard;
            oscard = tangon.DEVICE_INFO;
            report[1] = oscard;
            oscard = tangon.COPY_CLIENT_INFO;
            report[2] = oscard;
            oscard = tangon.VIEW_DEBUG_LOGS;
            report[3] = oscard;
            oscard = tangon.CACHE_ACTIONS;
            report[4] = oscard;
            oscard = tangon.REACT_COMPILER;
            report[5] = oscard;
            michal['settings'] = report;
            entity[6] = michal;
            michal = {};
            report = verify[zuuluu];
            report = option.bind(golfie)(report);
            oscard = report.intl;
            report = oscard.string;
            zuuluu = verify[zuuluu];
            zuuluu = option.bind(golfie)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu./tZh0N;
            zuuluu = report.bind(oscard)(zuuluu);
            michal['label'] = zuuluu;
            report = tangon.BUG_REPORTER;
            zuuluu = new Array(2);
            zuuluu[0] = report;
            report = tangon.CREATE_BUG_REPORT;
            zuuluu[1] = report;
            michal['settings'] = zuuluu;
            entity[7] = michal;
            michal = {};
            zuuluu = 'Build Status';
            michal['label'] = zuuluu;
            report = tangon.INTERNAL_BUILD_ACTIVE;
            zuuluu = new Array(4);
            zuuluu[0] = report;
            report = tangon.INTERNAL_BUILD_UPDATE;
            zuuluu[1] = report;
            report = tangon.BUILD_OVERRIDE_ACTIVE;
            zuuluu[2] = report;
            report = tangon.EXPERIMENT_OVERRIDE_ACTIVE;
            zuuluu[3] = report;
            michal['settings'] = zuuluu;
            entity[8] = michal;
            michal = {};
            zuuluu = 'Staff Settings';
            michal['label'] = zuuluu;
            report = tangon.SHOW_DEV_WIDGET;
            zuuluu = new Array(3);
            zuuluu[0] = report;
            report = tangon.SHOW_DEV_TOOLS;
            zuuluu[1] = report;
            tangon = tangon.DESIGN_SYSTEMS;
            zuuluu[2] = tangon;
            michal['settings'] = zuuluu;
            entity[9] = michal;
            return entity;
        };
        michal = new Array(0);
        report = tangon.bind(report)(zuuluu, michal);
        tangon = _closure1_slot4;
        michal = _closure1_slot0;
        zuuluu = _closure1_slot1;
        entity = 5;
        entity = zuuluu[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.SearchableSettingsList;
        entity = {};
        entity['sections'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();