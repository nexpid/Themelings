// app/modules/main_tabs_v2/native/settings/screens/SettingsVoiceScreen.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    verify = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = verify;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: KrispLogo
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot11;
            tango = undefined;
            offset = entity.bind(tango)();
            mike = _closure1_slot1;
            report = _closure1_slot2;
            entity = 7;
            entity = report[entity];
            entity = mike.bind(tango)(entity);
            zulu = entity.bind(tango)();
            mike = _closure1_slot0;
            entity = 8;
            entity = report[entity];
            mike = mike.bind(tango)(entity);
            entity = mike.isThemeLight;
            entity = entity.bind(mike)(zulu);
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            if(entity) { _fun00002_ip = 89; continue _fun00001 }
 75:
            entity = 10;
            entity = zulu[entity];
            options = mike.bind(tango)(entity);
            _fun00002_ip = 101; continue _fun00001;
 89:
            entity = 9;
            entity = zulu[entity];
            options = mike.bind(tango)(entity);
 101:
            zulu = _closure1_slot9;
            mike = _closure1_slot4;
            entity = {};
            report = offset.krisp;
            entity['style'] = report;
            golf = _closure1_slot8;
            oscar = _closure1_slot5;
            report = {};
            offset = offset.logo;
            report['style'] = offset;
            report['source'] = options;
            kilo = _closure1_slot0;
            sizing = _closure1_slot2;
            romeo = 11;
            options = sizing[romeo];
            options = kilo.bind(tango)(options);
            yankee = options.intl;
            offset = yankee.string;
            options = sizing[romeo];
            options = kilo.bind(tango)(options);
            options = options.t;
            options = options.vFiCS0;
            options = offset.bind(yankee)(options);
            report['accessibilityLabel'] = options;
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot8;
            oscar = 12;
            oscar = sizing[oscar];
            oscar = kilo.bind(tango)(oscar);
            golf = oscar.TouchableOpacity;
            oscar = {};
            offset = 13;
            offset = sizing[offset];
            offset = kilo.bind(tango)(offset);
            offset = offset.handleKrispLinkPressed;
            oscar['onPress'] = offset;
            yankee = _closure1_slot8;
            verify = 14;
            verify = sizing[verify];
            verify = kilo.bind(tango)(verify);
            offset = verify.Text;
            verify = {'variant': 'text-sm/medium', 'color': 'text-link', 'accessibilityRole': 'link'};
            foxtrot = sizing[romeo];
            foxtrot = kilo.bind(tango)(foxtrot);
            backup = foxtrot.intl;
            foxtrot = backup.string;
            romeo = sizing[romeo];
            romeo = kilo.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.hvVgAQ;
            romeo = foxtrot.bind(backup)(romeo);
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    tango = global;
    offset = tango.Object;
    options = offset.defineProperty;
    golf = {};
    entity = true;
    golf['value'] = entity;
    entity = '__esModule';
    entity = options.bind(offset)(zulu, entity, golf);
    entity = 0;
    options = oscar[entity];
    golf = argCorge;
    entity = undefined;
    golf = golf.bind(entity)(options);
    var _closure1_slot3 = golf;
    golf = 1;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    options = golf.View;
    var _closure1_slot4 = options;
    golf = golf.Image;
    var _closure1_slot5 = golf;
    golf = 2;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.MobileSetting;
    var _closure1_slot6 = golf;
    golf = 3;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.HelpdeskArticles;
    var _closure1_slot7 = golf;
    options = 4;
    offset = oscar[options];
    offset = report.bind(entity)(offset);
    offset = offset.jsx;
    var _closure1_slot8 = offset;
    options = oscar[options];
    options = report.bind(entity)(options);
    options = options.jsxs;
    var _closure1_slot9 = options;
    options = 5;
    options = oscar[options];
    verify = verify.bind(entity)(options);
    options = verify.getArticleURL;
    golf = golf.VOICE_VIDEO_TROUBLESHOOTING;
    verify = options.bind(verify)(golf);
    tango = tango.HermesInternal;
    options = tango.concat;
    golf = '';
    tango = '?utm_source=discord&utm_medium=blog&utm_campaign=2020-06_help-voice-video&utm_content=--t%3Apm';
    tango = options.bind(golf)(verify, tango);
    var _closure1_slot10 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    offset = 8;
    verify = {'marginTop': 8, 'flexDirection': 'row', 'alignItems': 'center'};
    tango['krisp'] = verify;
    verify = {};
    verify['marginRight'] = offset;
    tango['logo'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tango['slider'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = 16;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/settings/screens/SettingsVoiceScreen.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: SettingsVoiceScreen
        report = _closure1_slot3;
        tango = report.useMemo;
        zulu = function() {
            mike = {};
            options = _closure1_slot0;
            verify = _closure1_slot2;
            tango = 11;
            entity = verify[tango];
            golf = undefined;
            entity = options.bind(golf)(entity);
            oscar = entity.intl;
            zulu = oscar.string;
            entity = verify[tango];
            entity = options.bind(golf)(entity);
            entity = entity.t;
            entity = entity.LKCupK;
            entity = zulu.bind(oscar)(entity);
            mike['label'] = entity;
            zulu = _closure1_slot6;
            oscar = zulu.INPUT_MODE;
            entity = new Array(3);
            entity[0] = oscar;
            oscar = zulu.AUTO_VOICE_SENSITIVITY;
            entity[1] = oscar;
            oscar = zulu.VOICE_SENSITIVITY;
            entity[2] = oscar;
            mike['settings'] = entity;
            entity = new Array(8);
            entity[0] = mike;
            mike = {};
            oscar = verify[tango];
            oscar = options.bind(golf)(oscar);
            yankee = oscar.intl;
            offset = yankee.string;
            oscar = verify[tango];
            oscar = options.bind(golf)(oscar);
            oscar = oscar.t;
            oscar = oscar.UXxPGB;
            oscar = offset.bind(yankee)(oscar);
            mike['label'] = oscar;
            offset = zulu.OUTPUT_VOLUME;
            oscar = new Array(2);
            oscar[0] = offset;
            offset = zulu.STREAM_OUTPUT_VOLUME;
            oscar[1] = offset;
            mike['settings'] = oscar;
            oscar = verify[tango];
            oscar = options.bind(golf)(oscar);
            romeo = oscar.intl;
            yankee = romeo.format;
            oscar = verify[tango];
            oscar = options.bind(golf)(oscar);
            oscar = oscar.t;
            offset = oscar.V+B3FB;
            oscar = {};
            foxtrot = _closure1_slot10;
            oscar['guideURL'] = foxtrot;
            oscar = yankee.bind(romeo)(offset, oscar);
            mike['subLabel'] = oscar;
            entity[1] = mike;
            mike = {};
            oscar = verify[tango];
            oscar = options.bind(golf)(oscar);
            yankee = oscar.intl;
            offset = yankee.string;
            oscar = verify[tango];
            oscar = options.bind(golf)(oscar);
            oscar = oscar.t;
            oscar = oscar.xbMc8v;
            oscar = offset.bind(yankee)(oscar);
            mike['label'] = oscar;
            offset = zulu.SOUNDBOARD_VOLUME;
            oscar = new Array(1);
            oscar[0] = offset;
            mike['settings'] = oscar;
            oscar = verify[tango];
            oscar = options.bind(golf)(oscar);
            romeo = oscar.intl;
            yankee = romeo.format;
            oscar = verify[tango];
            oscar = options.bind(golf)(oscar);
            oscar = oscar.t;
            offset = oscar.BPbGq6;
            oscar = {};
            backup = _closure1_slot1;
            foxtrot = 5;
            foxtrot = verify[foxtrot];
            kilo = backup.bind(golf)(foxtrot);
            backup = kilo.getArticleURL;
            foxtrot = _closure1_slot7;
            foxtrot = foxtrot.SOUNDBOARD;
            foxtrot = backup.bind(kilo)(foxtrot);
            oscar['helpCenterArticle'] = foxtrot;
            oscar = yankee.bind(romeo)(offset, oscar);
            mike['subLabel'] = oscar;
            entity[2] = mike;
            mike = {};
            oscar = verify[tango];
            oscar = options.bind(golf)(oscar);
            yankee = oscar.intl;
            offset = yankee.string;
            oscar = verify[tango];
            oscar = options.bind(golf)(oscar);
            oscar = oscar.t;
            oscar = oscar.bNqkDw;
            oscar = offset.bind(yankee)(oscar);
            mike['label'] = oscar;
            offset = zulu.ANDROID_MOBILE_OVERLAY;
            oscar = new Array(1);
            oscar[0] = offset;
            mike['settings'] = oscar;
            entity[3] = mike;
            mike = {};
            offset = zulu.NOISE_SUPPRESSION_KRISP;
            oscar = new Array(1);
            oscar[0] = offset;
            mike['settings'] = oscar;
            offset = _closure1_slot8;
            oscar = _closure1_slot12;
            report = {};
            report = offset.bind(golf)(oscar, report);
            mike['subLabel'] = report;
            entity[4] = mike;
            mike = {};
            report = verify[tango];
            report = options.bind(golf)(report);
            offset = report.intl;
            oscar = offset.string;
            report = verify[tango];
            report = options.bind(golf)(report);
            report = report.t;
            report = report.t8QhiY;
            report = oscar.bind(offset)(report);
            mike['label'] = report;
            oscar = zulu.NOISE_SUPPRESSION;
            report = new Array(1);
            report[0] = oscar;
            mike['settings'] = report;
            entity[5] = mike;
            mike = {};
            report = verify[tango];
            report = options.bind(golf)(report);
            offset = report.intl;
            oscar = offset.string;
            report = verify[tango];
            report = options.bind(golf)(report);
            report = report.t;
            report = report.6I6GUl;
            report = oscar.bind(offset)(report);
            mike['label'] = report;
            oscar = zulu.ECHO_CANCELLATION;
            report = new Array(4);
            report[0] = oscar;
            oscar = zulu.SIDECHAIN_COMPRESSION;
            report[1] = oscar;
            oscar = zulu.AUTOMATIC_GAIN_CONTROL;
            report[2] = oscar;
            oscar = zulu.ADVANCED_VOICE_ACTIVITY;
            report[3] = oscar;
            mike['settings'] = report;
            entity[6] = mike;
            mike = {};
            report = verify[tango];
            report = options.bind(golf)(report);
            oscar = report.intl;
            report = oscar.string;
            tango = verify[tango];
            tango = options.bind(golf)(tango);
            tango = tango.t;
            tango = tango.OBwCXF;
            tango = report.bind(oscar)(tango);
            mike['label'] = tango;
            tango = zulu.DISABLE_STREAM_PREVIEWS;
            zulu = new Array(1);
            zulu[0] = tango;
            mike['settings'] = zulu;
            entity[7] = mike;
            return entity;
        };
        mike = new Array(0);
        report = tango.bind(report)(zulu, mike);
        tango = _closure1_slot8;
        mike = _closure1_slot0;
        zulu = _closure1_slot2;
        entity = 15;
        entity = zulu[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.SettingsList;
        entity = {};
        entity['sections'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();