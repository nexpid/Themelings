// app/modules/main_tabs_v2/native/settings/screens/RequestDataContent.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    romeon = 0;
    tangon = oscard[romeon];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot4 = golfie;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.View;
    var _closure1_slot5 = option;
    tangon = tangon.ScrollView;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot8 = option;
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = {};
    option = 'Account';
    tangon['USERS'] = option;
    option = 'Messages';
    tangon['MESSAGES'] = option;
    option = 'Servers';
    tangon['GUILDS'] = option;
    option = 'Analytics';
    tangon['ANALYTICS'] = option;
    option = 'Activities';
    tangon['ACTIVITIES'] = option;
    option = 'Programs';
    tangon['HUBSPOT'] = option;
    option = 'Ads';
    tangon['ADS'] = option;
    var _closure1_slot10 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    yankee = 16;
    offset['padding'] = yankee;
    tangon['content'] = offset;
    offset = {};
    foxtra = 8;
    offset['marginBottom'] = foxtra;
    tangon['header'] = offset;
    offset = {};
    offset['marginBottom'] = foxtra;
    tangon['title'] = offset;
    offset = {};
    offset['marginBottom'] = romeon;
    tangon['description'] = offset;
    offset = {};
    offset['marginBottom'] = yankee;
    tangon['checkboxContainer'] = offset;
    offset = {};
    offset['marginTop'] = yankee;
    tangon['button'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot11 = tangon;
    tangon = golfie.memo;
    michal = function() {
        entity = _closure1_slot11;
        tangon = undefined;
        romeon = entity.bind(tangon)();
        backup = _closure1_slot0;
        kiloes = _closure1_slot2;
        entity = 6;
        entity = kiloes[entity];
        michal = backup.bind(tangon)(entity);
        entity = michal.useNavigation;
        entity = entity.bind(michal)();
        var _closure2_slot0 = entity;
        option = _closure1_slot4;
        entity = option.useState;
        output = false;
        entity = entity.bind(option)(output);
        oscard = _closure1_slot3;
        report = 2;
        entity = oscard.bind(tangon)(entity, report);
        zuuluu = 0;
        verify = entity[zuuluu];
        michal = 1;
        entity = entity[michal];
        var _closure2_slot1 = entity;
        golfie = option.useState;
        entity = {};
        result = _closure1_slot10;
        sizing = result.USERS;
        foxtra = {};
        yankee = result.USERS;
        foxtra['value'] = yankee;
        yankee = 7;
        echoed = kiloes[yankee];
        echoed = backup.bind(tangon)(echoed);
        source = echoed.intl;
        update = source.string;
        echoed = kiloes[yankee];
        echoed = backup.bind(tangon)(echoed);
        echoed = echoed.t;
        echoed = echoed.rfe/x8;
        echoed = update.bind(source)(echoed);
        foxtra['label'] = echoed;
        foxtra['checked'] = output;
        entity[sizing] = foxtra;
        sizing = result.ANALYTICS;
        foxtra = {};
        echoed = result.ANALYTICS;
        foxtra['value'] = echoed;
        echoed = kiloes[yankee];
        echoed = backup.bind(tangon)(echoed);
        source = echoed.intl;
        update = source.string;
        echoed = kiloes[yankee];
        echoed = backup.bind(tangon)(echoed);
        echoed = echoed.t;
        echoed = echoed.j+d6RE;
        echoed = update.bind(source)(echoed);
        foxtra['label'] = echoed;
        foxtra['checked'] = output;
        entity[sizing] = foxtra;
        sizing = result.ACTIVITIES;
        foxtra = {};
        echoed = result.ACTIVITIES;
        foxtra['value'] = echoed;
        echoed = kiloes[yankee];
        echoed = backup.bind(tangon)(echoed);
        source = echoed.intl;
        update = source.string;
        echoed = kiloes[yankee];
        echoed = backup.bind(tangon)(echoed);
        echoed = echoed.t;
        echoed = echoed.KO88BQ;
        echoed = update.bind(source)(echoed);
        foxtra['label'] = echoed;
        foxtra['checked'] = output;
        entity[sizing] = foxtra;
        sizing = result.ADS;
        foxtra = {};
        echoed = result.ADS;
        foxtra['value'] = echoed;
        echoed = kiloes[yankee];
        echoed = backup.bind(tangon)(echoed);
        source = echoed.intl;
        update = source.string;
        echoed = kiloes[yankee];
        echoed = backup.bind(tangon)(echoed);
        echoed = echoed.t;
        echoed = echoed.wb7QJy;
        echoed = update.bind(source)(echoed);
        foxtra['label'] = echoed;
        foxtra['checked'] = output;
        entity[sizing] = foxtra;
        sizing = result.MESSAGES;
        foxtra = {};
        echoed = result.MESSAGES;
        foxtra['value'] = echoed;
        echoed = kiloes[yankee];
        echoed = backup.bind(tangon)(echoed);
        source = echoed.intl;
        update = source.string;
        echoed = kiloes[yankee];
        echoed = backup.bind(tangon)(echoed);
        echoed = echoed.t;
        echoed = echoed.0dO1t7;
        echoed = update.bind(source)(echoed);
        foxtra['label'] = echoed;
        foxtra['checked'] = output;
        entity[sizing] = foxtra;
        sizing = result.HUBSPOT;
        foxtra = {};
        echoed = result.HUBSPOT;
        foxtra['value'] = echoed;
        echoed = kiloes[yankee];
        echoed = backup.bind(tangon)(echoed);
        source = echoed.intl;
        update = source.string;
        echoed = kiloes[yankee];
        echoed = backup.bind(tangon)(echoed);
        echoed = echoed.t;
        echoed = echoed.M4ddeX;
        echoed = update.bind(source)(echoed);
        foxtra['label'] = echoed;
        foxtra['checked'] = output;
        entity[sizing] = foxtra;
        sizing = result.GUILDS;
        foxtra = {};
        result = result.GUILDS;
        foxtra['value'] = result;
        result = kiloes[yankee];
        result = backup.bind(tangon)(result);
        update = result.intl;
        echoed = update.string;
        result = kiloes[yankee];
        result = backup.bind(tangon)(result);
        result = result.t;
        result = result.JN9c39;
        result = echoed.bind(update)(result);
        foxtra['label'] = result;
        foxtra['checked'] = output;
        entity[sizing] = foxtra;
        entity = golfie.bind(option)(entity);
        entity = oscard.bind(tangon)(entity, report);
        zuuluu = entity[zuuluu];
        var _closure2_slot2 = zuuluu;
        entity = entity[michal];
        var _closure2_slot3 = entity;
        entity = global;
        michal = entity.Object;
        entity = michal.keys;
        zuuluu = entity.bind(michal)(zuuluu);
        michal = zuuluu.map;
        entity = function(argFoo, argBar, argBaz) {
            report = argFoo;
            golfie = argBar;
            entity = _closure2_slot2;
            entity = entity[report];
            verify = entity.label;
            option = entity.checked;
            tangon = _closure1_slot8;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 8;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.TableCheckboxRow;
            entity = {};
            entity['label'] = verify;
            entity['checked'] = option;
            var _closure3_slot0 = report;
            oscard = function(argFoo) {
                entity = argFoo;
                var _closure4_slot0 = entity;
                zuuluu = _closure2_slot3;
                entity = undefined;
                michal = function(argFoo) {
                    tangon = argFoo;
                    entity = {};
                    golfie = entity;
                    oscard = tangon;
                    michal = copyDataProperties(golfie, oscard);
                    zuuluu = _closure3_slot0;
                    michal = {};
                    oscard = tangon[zuuluu];
                    golfie = michal;
                    tangon = copyDataProperties(golfie, oscard);
                    report = _closure4_slot0;
                    tangon = 'checked';
                    michal[tangon] = report;
                    entity[zuuluu] = michal;
                    return entity;
                };
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity['onPress'] = oscard;
            oscard = 0;
            oscard = oscard === golfie;
            entity['start'] = oscard;
            oscard = argBaz;
            option = oscard.length;
            oscard = 1;
            oscard = option - oscard;
            oscard = golfie === oscard;
            entity['end'] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity, report);
            return entity;
        };
        sizing = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot9;
        michal = _closure1_slot6;
        entity = {};
        report = romeon.content;
        entity['style'] = report;
        golfie = _closure1_slot5;
        report = {};
        oscard = romeon.header;
        report['style'] = oscard;
        option = _closure1_slot8;
        foxtra = 9;
        oscard = kiloes[foxtra];
        oscard = backup.bind(tangon)(oscard);
        output = oscard.Text;
        oscard = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        result = romeon.title;
        oscard['style'] = result;
        result = kiloes[yankee];
        result = backup.bind(tangon)(result);
        update = result.intl;
        echoed = update.string;
        result = kiloes[yankee];
        result = backup.bind(tangon)(result);
        result = result.t;
        result = result.jxXMEx;
        result = echoed.bind(update)(result);
        oscard['children'] = result;
        output = option.bind(tangon)(output, oscard);
        oscard = new Array(2);
        oscard[0] = output;
        foxtra = kiloes[foxtra];
        foxtra = backup.bind(tangon)(foxtra);
        output = foxtra.Text;
        foxtra = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        result = romeon.description;
        foxtra['style'] = result;
        result = kiloes[yankee];
        result = backup.bind(tangon)(result);
        source = result.intl;
        update = source.format;
        result = kiloes[yankee];
        result = backup.bind(tangon)(result);
        result = result.t;
        echoed = result.vtRhDA;
        result = {};
        sequen = _closure1_slot1;
        vacuum = 10;
        vacuum = kiloes[vacuum];
        sequen = sequen.bind(tangon)(vacuum);
        vacuum = sequen.getArticleURL;
        ctrled = _closure1_slot7;
        ctrled = ctrled.GDPR_PACKAGE_CONTENTS;
        ctrled = vacuum.bind(sequen)(ctrled);
        result['helpdeskArticle'] = ctrled;
        result = update.bind(source)(echoed, result);
        foxtra['children'] = result;
        foxtra = option.bind(tangon)(output, foxtra);
        oscard[1] = foxtra;
        report['children'] = oscard;
        oscard = zuuluu.bind(tangon)(golfie, report);
        report = new Array(3);
        report[0] = oscard;
        oscard = {};
        romeon = romeon.checkboxContainer;
        oscard['style'] = romeon;
        romeon = 11;
        romeon = kiloes[romeon];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.TableRowGroup;
        romeon = {'title': '', 'hasIcons': false};
        romeon['children'] = sizing;
        romeon = option.bind(tangon)(foxtra, romeon);
        oscard['children'] = romeon;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        oscard = 12;
        oscard = kiloes[oscard];
        oscard = backup.bind(tangon)(oscard);
        golfie = oscard.Button;
        oscard = {};
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        yankee = kiloes[yankee];
        yankee = backup.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.NYgNg4;
        yankee = romeon.bind(foxtra)(yankee);
        oscard['text'] = yankee;
        offset = function() { // Original name: onPress
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = global;
                report = michal.Object;
                tangon = report.keys;
                zuuluu = _closure2_slot2;
                report = tangon.bind(report)(zuuluu);
                tangon = report.filter;
                zuuluu = function(argFoo) {
                    michal = _closure2_slot2;
                    entity = argFoo;
                    entity = michal[entity];
                    entity = entity.checked;
                    return entity;
                };
                report = tangon.bind(report)(zuuluu);
                tangon = report.map;
                zuuluu = function(argFoo) {
                    michal = _closure2_slot2;
                    entity = argFoo;
                    entity = michal[entity];
                    entity = entity.value;
                    return entity;
                };
                tangon = tangon.bind(report)(zuuluu);
                report = tangon.length;
                zuuluu = 0;
                if(!(zuuluu === report)) { _fun00002_ip = 220; continue _fun00001 }
 75:
                report = _closure1_slot1;
                romeon = _closure1_slot2;
                zuuluu = 13;
                zuuluu = romeon[zuuluu];
                yankee = undefined;
                oscard = report.bind(yankee)(zuuluu);
                report = oscard.show;
                zuuluu = {};
                offset = _closure1_slot0;
                golfie = 7;
                option = romeon[golfie];
                option = offset.bind(yankee)(option);
                foxtra = option.intl;
                verify = foxtra.string;
                option = romeon[golfie];
                option = offset.bind(yankee)(option);
                option = option.t;
                option = option.OjbtDg;
                option = verify.bind(foxtra)(option);
                zuuluu['title'] = option;
                option = romeon[golfie];
                option = offset.bind(yankee)(option);
                verify = option.intl;
                option = verify.string;
                golfie = romeon[golfie];
                golfie = offset.bind(yankee)(golfie);
                golfie = golfie.t;
                golfie = golfie.W1Rw3N;
                golfie = option.bind(verify)(golfie);
                zuuluu['body'] = golfie;
                zuuluu = report.bind(oscard)(zuuluu);
                _fun00002_ip = 310; continue _fun00001;
 220:
                zuuluu = _closure2_slot1;
                report = undefined;
                michal = true;
                michal = zuuluu.bind(report)(michal);
                zuuluu = _closure1_slot0;
                oscard = _closure1_slot2;
                michal = 14;
                michal = oscard[michal];
                zuuluu = zuuluu.bind(report)(michal);
                michal = zuuluu.requestDataHarvest;
                report = michal.bind(zuuluu)(tangon);
                tangon = report.then;
                zuuluu = function(argFoo) {
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        entity = argFoo;
                        michal = null;
                        if(!(michal != entity)) { _fun00004_ip = 21; continue _fun00003 }
 9:
                        entity = entity.body;
                        if(!(michal == entity)) { _fun00004_ip = 167; continue _fun00003 }
 21:
                        michal = _closure1_slot1;
                        verify = _closure1_slot2;
                        entity = 13;
                        entity = verify[entity];
                        option = undefined;
                        zuuluu = michal.bind(option)(entity);
                        michal = zuuluu.show;
                        entity = {};
                        golfie = _closure1_slot0;
                        tangon = 7;
                        report = verify[tangon];
                        report = golfie.bind(option)(report);
                        offset = report.intl;
                        oscard = offset.string;
                        report = verify[tangon];
                        report = golfie.bind(option)(report);
                        report = report.t;
                        report = report.OjbtDg;
                        report = oscard.bind(offset)(report);
                        entity['title'] = report;
                        report = verify[tangon];
                        report = golfie.bind(option)(report);
                        oscard = report.intl;
                        report = oscard.string;
                        tangon = verify[tangon];
                        tangon = golfie.bind(option)(tangon);
                        tangon = tangon.t;
                        tangon = tangon.0F5Jys;
                        tangon = report.bind(oscard)(tangon);
                        entity['body'] = tangon;
                        entity = michal.bind(zuuluu)(entity);
                        _fun00004_ip = 329; continue _fun00003;
 167:
                        michal = _closure1_slot1;
                        verify = _closure1_slot2;
                        entity = 13;
                        entity = verify[entity];
                        option = undefined;
                        zuuluu = michal.bind(option)(entity);
                        michal = zuuluu.show;
                        entity = {};
                        golfie = _closure1_slot0;
                        tangon = 7;
                        report = verify[tangon];
                        report = golfie.bind(option)(report);
                        offset = report.intl;
                        oscard = offset.string;
                        report = verify[tangon];
                        report = golfie.bind(option)(report);
                        report = report.t;
                        report = report.i2iul5;
                        report = oscard.bind(offset)(report);
                        entity['title'] = report;
                        report = verify[tangon];
                        report = golfie.bind(option)(report);
                        oscard = report.intl;
                        report = oscard.string;
                        tangon = verify[tangon];
                        tangon = golfie.bind(option)(tangon);
                        tangon = tangon.t;
                        tangon = tangon.6Nmv4u;
                        tangon = report.bind(oscard)(tangon);
                        entity['body'] = tangon;
                        entity = michal.bind(zuuluu)(entity);
                        michal = _closure2_slot0;
                        entity = michal.pop;
                        entity = entity.bind(michal)();
 329:
                        entity = undefined;
                        return entity;
                    }
                };
                michal = function() {
                    michal = _closure1_slot1;
                    verify = _closure1_slot2;
                    entity = 13;
                    entity = verify[entity];
                    option = undefined;
                    zuuluu = michal.bind(option)(entity);
                    michal = zuuluu.show;
                    entity = {};
                    golfie = _closure1_slot0;
                    tangon = 7;
                    report = verify[tangon];
                    report = golfie.bind(option)(report);
                    offset = report.intl;
                    oscard = offset.string;
                    report = verify[tangon];
                    report = golfie.bind(option)(report);
                    report = report.t;
                    report = report.OjbtDg;
                    report = oscard.bind(offset)(report);
                    entity['title'] = report;
                    report = verify[tangon];
                    report = golfie.bind(option)(report);
                    oscard = report.intl;
                    report = oscard.string;
                    tangon = verify[tangon];
                    tangon = golfie.bind(option)(tangon);
                    tangon = tangon.t;
                    tangon = tangon.0F5Jys;
                    tangon = report.bind(oscard)(tangon);
                    entity['body'] = tangon;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                zuuluu = tangon.bind(report)(zuuluu, michal);
                michal = zuuluu.finally;
                entity = function() {
                    zuuluu = _closure2_slot1;
                    michal = undefined;
                    entity = false;
                    entity = zuuluu.bind(michal)(entity);
                    return entity;
                };
                entity = michal.bind(zuuluu)(entity);
 310:
                entity = undefined;
                return entity;
            }
        };
        oscard['onPress'] = offset;
        oscard['loading'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/screens/RequestDataContent.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();