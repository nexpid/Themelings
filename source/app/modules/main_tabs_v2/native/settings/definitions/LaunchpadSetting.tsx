// app/modules/main_tabs_v2/native/settings/definitions/LaunchpadSetting.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    golfie = michal.MobileSetting;
    michal = 1;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    option = michal.RendererType;
    michal = 2;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.LaunchPadTypes;
    var _closure1_slot2 = michal;
    michal = {};
    option = option.RADIO;
    michal['type'] = option;
    option = function() { // Original name: title
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 5;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.JqV7IC;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['title'] = option;
    golfie = golfie.ADVANCED;
    michal['parent'] = golfie;
    golfie = 6;
    option = oscard[golfie];
    golfie = argBaz;
    golfie = golfie.bind(entity)(option);
    michal['useValue'] = golfie;
    golfie = function(argFoo) { // Original name: onLaunchpadSettingValueChange
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            michal = _closure1_slot2;
            michal = michal.GESTURE_FULL;
            if(!(michal !== zuuluu)) { _fun00002_ip = 272; continue _fun00001 }
 23:
            michal = _closure1_slot2;
            michal = michal.GESTURE_EDGE;
            if(!(michal !== zuuluu)) { _fun00002_ip = 207; continue _fun00001 }
 40:
            michal = _closure1_slot2;
            michal = michal.PULL_TAB;
            if(!(michal !== zuuluu)) { _fun00002_ip = 139; continue _fun00001 }
 54:
            michal = _closure1_slot2;
            michal = michal.DISABLED;
            if(!(michal === zuuluu)) { _fun00002_ip = 335; continue _fun00001 }
 71:
            oscard = _closure1_slot0;
            golfie = _closure1_slot1;
            michal = 3;
            michal = golfie[michal];
            report = undefined;
            michal = oscard.bind(report)(michal);
            tangon = michal.LaunchPadModeSetting;
            zuuluu = tangon.updateSetting;
            michal = 4;
            michal = golfie[michal];
            michal = oscard.bind(report)(michal);
            michal = michal.LaunchPadMode;
            michal = michal.LAUNCH_PAD_DISABLED;
            michal = zuuluu.bind(tangon)(michal);
            _fun00002_ip = 335; continue _fun00001;
 139:
            oscard = _closure1_slot0;
            golfie = _closure1_slot1;
            michal = 3;
            michal = golfie[michal];
            report = undefined;
            michal = oscard.bind(report)(michal);
            tangon = michal.LaunchPadModeSetting;
            zuuluu = tangon.updateSetting;
            michal = 4;
            michal = golfie[michal];
            michal = oscard.bind(report)(michal);
            michal = michal.LaunchPadMode;
            michal = michal.LAUNCH_PAD_PULL_TAB;
            michal = zuuluu.bind(tangon)(michal);
            _fun00002_ip = 335; continue _fun00001;
 207:
            oscard = _closure1_slot0;
            golfie = _closure1_slot1;
            michal = 3;
            michal = golfie[michal];
            report = undefined;
            michal = oscard.bind(report)(michal);
            tangon = michal.LaunchPadModeSetting;
            zuuluu = tangon.updateSetting;
            michal = 4;
            michal = golfie[michal];
            michal = oscard.bind(report)(michal);
            michal = michal.LaunchPadMode;
            michal = michal.LAUNCH_PAD_GESTURE_RIGHT_EDGE;
            michal = zuuluu.bind(tangon)(michal);
            _fun00002_ip = 335; continue _fun00001;
 272:
            report = _closure1_slot0;
            oscard = _closure1_slot1;
            entity = 3;
            entity = oscard[entity];
            tangon = undefined;
            entity = report.bind(tangon)(entity);
            zuuluu = entity.LaunchPadModeSetting;
            michal = zuuluu.updateSetting;
            entity = 4;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.LaunchPadMode;
            entity = entity.LAUNCH_PAD_GESTURE_FULL_SCREEN;
            entity = michal.bind(zuuluu)(entity);
 335:
            entity = undefined;
            return entity;
        }
    };
    michal['onValueChange'] = golfie;
    tangon = function() { // Original name: useLaunchpadSettingOptions
        michal = {};
        option = _closure1_slot0;
        verify = _closure1_slot1;
        tangon = 5;
        zuuluu = verify[tangon];
        golfie = undefined;
        zuuluu = option.bind(golfie)(zuuluu);
        oscard = zuuluu.intl;
        report = oscard.string;
        zuuluu = verify[tangon];
        zuuluu = option.bind(golfie)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.Q3abND;
        zuuluu = report.bind(oscard)(zuuluu);
        michal['label'] = zuuluu;
        zuuluu = verify[tangon];
        zuuluu = option.bind(golfie)(zuuluu);
        oscard = zuuluu.intl;
        report = oscard.string;
        zuuluu = verify[tangon];
        zuuluu = option.bind(golfie)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu./gdTGB;
        zuuluu = report.bind(oscard)(zuuluu);
        michal['subLabel'] = zuuluu;
        zuuluu = _closure1_slot2;
        entity = zuuluu.GESTURE_FULL;
        michal['value'] = entity;
        entity = new Array(4);
        entity[0] = michal;
        michal = {};
        report = verify[tangon];
        report = option.bind(golfie)(report);
        offset = report.intl;
        oscard = offset.string;
        report = verify[tangon];
        report = option.bind(golfie)(report);
        report = report.t;
        report = report.dQN6qa;
        report = oscard.bind(offset)(report);
        michal['label'] = report;
        report = verify[tangon];
        report = option.bind(golfie)(report);
        offset = report.intl;
        oscard = offset.string;
        report = verify[tangon];
        report = option.bind(golfie)(report);
        report = report.t;
        report = report.W+cPjI;
        report = oscard.bind(offset)(report);
        michal['subLabel'] = report;
        report = zuuluu.GESTURE_EDGE;
        michal['value'] = report;
        entity[1] = michal;
        michal = {};
        report = verify[tangon];
        report = option.bind(golfie)(report);
        offset = report.intl;
        oscard = offset.string;
        report = verify[tangon];
        report = option.bind(golfie)(report);
        report = report.t;
        report = report.PgDGl5;
        report = oscard.bind(offset)(report);
        michal['label'] = report;
        report = verify[tangon];
        report = option.bind(golfie)(report);
        offset = report.intl;
        oscard = offset.string;
        report = verify[tangon];
        report = option.bind(golfie)(report);
        report = report.t;
        report = report.uVc5MD;
        report = oscard.bind(offset)(report);
        michal['subLabel'] = report;
        report = zuuluu.PULL_TAB;
        michal['value'] = report;
        entity[2] = michal;
        michal = {};
        report = verify[tangon];
        report = option.bind(golfie)(report);
        offset = report.intl;
        oscard = offset.string;
        report = verify[tangon];
        report = option.bind(golfie)(report);
        report = report.t;
        report = report.HnzBCQ;
        report = oscard.bind(offset)(report);
        michal['label'] = report;
        report = verify[tangon];
        report = option.bind(golfie)(report);
        oscard = report.intl;
        report = oscard.string;
        tangon = verify[tangon];
        tangon = option.bind(golfie)(tangon);
        tangon = tangon.t;
        tangon = tangon.It18o6;
        tangon = report.bind(oscard)(tangon);
        michal['subLabel'] = tangon;
        zuuluu = zuuluu.DISABLED;
        michal['value'] = zuuluu;
        entity[3] = michal;
        return entity;
    };
    michal['useOptions'] = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/definitions/LaunchpadSetting.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();