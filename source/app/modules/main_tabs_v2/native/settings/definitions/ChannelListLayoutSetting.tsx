// app/modules/main_tabs_v2/native/settings/definitions/ChannelListLayoutSetting.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = golfie;
    michal = function() { // Original name: useChannelListLayoutPredicate
        entity = false;
        return entity;
    };
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = golfie[entity];
    entity = undefined;
    tangon = oscard.bind(entity)(tangon);
    option = tangon.MobileSetting;
    tangon = {};
    verify = 1;
    verify = golfie[verify];
    verify = oscard.bind(entity)(verify);
    verify = verify.RendererType;
    verify = verify.RADIO;
    tangon['type'] = verify;
    verify = function() { // Original name: title
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 3;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.eY1X1d;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    tangon['title'] = verify;
    option = option.ADVANCED;
    tangon['parent'] = option;
    option = 2;
    option = golfie[option];
    option = oscard.bind(entity)(option);
    option = option.ChannelListLayoutSetting;
    option = option.useSetting;
    tangon['useValue'] = option;
    option = function(argFoo) { // Original name: onChannelListLayoutValueChange
        zuuluu = _closure1_slot0;
        michal = _closure1_slot1;
        entity = 2;
        michal = michal[entity];
        entity = undefined;
        michal = zuuluu.bind(entity)(michal);
        tangon = michal.ChannelListLayoutSetting;
        zuuluu = tangon.updateSetting;
        michal = argFoo;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    tangon['onValueChange'] = option;
    report = function() { // Original name: useChannelListLayoutOptions
        michal = {};
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        golfie = 3;
        entity = oscard[golfie];
        tangon = undefined;
        entity = report.bind(tangon)(entity);
        option = entity.intl;
        zuuluu = option.string;
        entity = oscard[golfie];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.T7G4Y2;
        entity = zuuluu.bind(option)(entity);
        michal['label'] = entity;
        zuuluu = 4;
        entity = oscard[zuuluu];
        entity = report.bind(tangon)(entity);
        entity = entity.ChannelListLayoutTypes;
        entity = entity.COZY;
        michal['value'] = entity;
        entity = new Array(2);
        entity[0] = michal;
        michal = {};
        option = oscard[golfie];
        option = report.bind(tangon)(option);
        verify = option.intl;
        option = verify.string;
        golfie = oscard[golfie];
        golfie = report.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.7iegX1;
        golfie = option.bind(verify)(golfie);
        michal['label'] = golfie;
        zuuluu = oscard[zuuluu];
        zuuluu = report.bind(tangon)(zuuluu);
        zuuluu = zuuluu.ChannelListLayoutTypes;
        zuuluu = zuuluu.COMPACT;
        michal['value'] = zuuluu;
        entity[1] = michal;
        return entity;
    };
    tangon['useOptions'] = report;
    tangon['usePredicate'] = michal;
    report = 5;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/main_tabs_v2/native/settings/definitions/ChannelListLayoutSetting.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    zuuluu['useChannelListLayoutPredicate'] = michal;
    return entity;
})();