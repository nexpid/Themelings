// app/modules/main_tabs_v2/native/settings/definitions/AccountIgnoredUsersSetting.tsx
export default (function(_, argBar, argBaz, __, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, mike);
    entity = 0;
    golf = oscar[entity];
    mike = argBaz;
    entity = undefined;
    mike = mike.bind(entity)(golf);
    var _closure1_slot2 = mike;
    mike = 1;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    golf = mike.MobileSetting;
    mike = 2;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    verify = mike.RendererType;
    mike = 3;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    options = mike.UserSettingsSections;
    mike = {};
    verify = verify.ROUTE;
    mike['type'] = verify;
    verify = 6;
    verify = oscar[verify];
    verify = report.bind(entity)(verify);
    verify = verify.EyeSlashIcon;
    mike['IconComponent'] = verify;
    verify = function() { // Original name: title
        report = _closure1_slot0;
        oscar = _closure1_slot1;
        entity = 5;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.93ZDWF;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    mike['title'] = verify;
    verify = function() { // Original name: useAccountIgnoredUsersSettingDescription
        oscar = _closure1_slot0;
        golf = _closure1_slot1;
        mike = 4;
        zulu = golf[mike];
        mike = undefined;
        report = oscar.bind(mike)(zulu);
        tango = report.useStateFromStoresArray;
        entity = _closure1_slot2;
        zulu = new Array(1);
        zulu[0] = entity;
        entity = function() {
            mike = _closure1_slot2;
            entity = mike.getIgnoredIDs;
            entity = entity.bind(mike)();
            return entity;
        };
        report = tango.bind(report)(zulu, entity);
        entity = 5;
        zulu = golf[entity];
        zulu = oscar.bind(mike)(zulu);
        tango = zulu.intl;
        zulu = tango.format;
        entity = golf[entity];
        entity = oscar.bind(mike)(entity);
        entity = entity.t;
        mike = entity.rXUeOj;
        entity = {};
        report = report.length;
        entity['numberOfIgnoredUsers'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike['useDescription'] = verify;
    golf = golf.CONTENT_AND_SOCIAL;
    mike['parent'] = golf;
    golf = {};
    options = options.IGNORED_USERS;
    golf['route'] = options;
    options = function() { // Original name: getComponent
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 7;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    golf['getComponent'] = options;
    mike['screen'] = golf;
    tango = function() { // Original name: usePredicate
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 8;
        mike = mike[entity];
        entity = undefined;
        zulu = zulu.bind(entity)(mike);
        mike = zulu.useIsStealthRemediationEnabled;
        entity = {};
        tango = 'account_ignored_users_settings';
        entity['location'] = tango;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    mike['usePredicate'] = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/settings/definitions/AccountIgnoredUsersSetting.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();