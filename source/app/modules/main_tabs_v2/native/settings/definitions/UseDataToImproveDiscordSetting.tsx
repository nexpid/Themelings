// app/modules/main_tabs_v2/native/settings/definitions/UseDataToImproveDiscordSetting.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = golfie.bind(entity)(michal);
    var _closure1_slot3 = michal;
    michal = 1;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    golfie = michal.MobileSetting;
    michal = 2;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    option = michal.RendererType;
    michal = 3;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.Consents;
    var _closure1_slot4 = michal;
    michal = {};
    option = option.TOGGLE;
    michal['type'] = option;
    option = function() { // Original name: title
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 5;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.XuADY2;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['title'] = option;
    golfie = golfie.DATA_AND_PRIVACY;
    michal['parent'] = golfie;
    golfie = function() { // Original name: useDataToImproveDiscordSettingValue
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot2;
        michal = 9;
        zuuluu = zuuluu[michal];
        michal = undefined;
        tangon = tangon.bind(michal)(zuuluu);
        zuuluu = tangon.useStateFromStores;
        entity = _closure1_slot3;
        michal = new Array(1);
        michal[0] = entity;
        entity = function() {
            zuuluu = _closure1_slot3;
            michal = zuuluu.hasConsented;
            entity = _closure1_slot4;
            entity = entity.USAGE_STATISTICS;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal['useValue'] = golfie;
    tangon = function(argFoo) { // Original name: handleUsageStatisticsChange
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            if(zuuluu) { _fun00002_ip = 301; continue _fun00001 }
 14:
            option = _closure1_slot1;
            verify = _closure1_slot2;
            zuuluu = 4;
            zuuluu = verify[zuuluu];
            golfie = undefined;
            report = option.bind(golfie)(zuuluu);
            tangon = report.show;
            zuuluu = {};
            romeon = _closure1_slot0;
            oscard = 5;
            offset = verify[oscard];
            offset = romeon.bind(golfie)(offset);
            foxtra = offset.intl;
            yankee = foxtra.string;
            offset = verify[oscard];
            offset = romeon.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.OdPCbG;
            offset = yankee.bind(foxtra)(offset);
            zuuluu['title'] = offset;
            offset = verify[oscard];
            offset = romeon.bind(golfie)(offset);
            foxtra = offset.intl;
            yankee = foxtra.string;
            offset = verify[oscard];
            offset = romeon.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.MGWabG;
            offset = yankee.bind(foxtra)(offset);
            zuuluu['body'] = offset;
            offset = verify[oscard];
            offset = romeon.bind(golfie)(offset);
            foxtra = offset.intl;
            yankee = foxtra.string;
            offset = verify[oscard];
            offset = romeon.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.D3+rU1;
            offset = yankee.bind(foxtra)(offset);
            zuuluu['confirmText'] = offset;
            offset = verify[oscard];
            offset = romeon.bind(golfie)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            oscard = verify[oscard];
            oscard = romeon.bind(golfie)(oscard);
            oscard = oscard.t;
            oscard = oscard.kYpG0t;
            oscard = offset.bind(yankee)(oscard);
            zuuluu['cancelText'] = oscard;
            oscard = 6;
            oscard = verify[oscard];
            oscard = option.bind(golfie)(oscard);
            oscard = oscard.Colors;
            oscard = oscard.RED;
            zuuluu['confirmColor'] = oscard;
            oscard = function() { // Original name: onConfirm
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                michal = 7;
                zuuluu = zuuluu[michal];
                michal = undefined;
                tangon = tangon.bind(michal)(zuuluu);
                zuuluu = tangon.setConsents;
                entity = _closure1_slot4;
                entity = entity.USAGE_STATISTICS;
                michal = new Array(1);
                michal[0] = entity;
                entity = new Array(0);
                entity = zuuluu.bind(tangon)(entity, michal);
                return entity;
            };
            zuuluu['onConfirm'] = oscard;
            zuuluu = tangon.bind(report)(zuuluu);
            _fun00002_ip = 375; continue _fun00001;
 301:
            report = _closure1_slot0;
            tangon = _closure1_slot2;
            zuuluu = 7;
            tangon = tangon[zuuluu];
            zuuluu = undefined;
            report = report.bind(zuuluu)(tangon);
            tangon = report.setConsents;
            michal = _closure1_slot4;
            michal = michal.USAGE_STATISTICS;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = new Array(0);
            zuuluu = tangon.bind(report)(zuuluu, michal);
            michal = zuuluu.catch;
            entity = function(argFoo) {
                entity = argFoo;
                zuuluu = entity.message;
                tangon = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 8;
                michal = michal[entity];
                entity = undefined;
                michal = tangon.bind(entity)(michal);
                entity = michal.showDataPrivacyRateLimitAlert;
                entity = entity.bind(michal)(zuuluu);
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
 375:
            entity = undefined;
            return entity;
        }
    };
    michal['onValueChange'] = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/definitions/UseDataToImproveDiscordSetting.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();