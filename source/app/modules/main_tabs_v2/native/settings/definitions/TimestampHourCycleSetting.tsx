// app/modules/main_tabs_v2/native/settings/definitions/TimestampHourCycleSetting.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, mike);
    entity = 0;
    golf = oscar[entity];
    mike = argCorge;
    entity = undefined;
    mike = mike.bind(entity)(golf);
    var _closure1_slot3 = mike;
    mike = 1;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    golf = mike.MobileSetting;
    mike = {};
    options = 2;
    options = oscar[options];
    options = report.bind(entity)(options);
    options = options.RendererType;
    options = options.RADIO;
    mike['type'] = options;
    options = function() { // Original name: title
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 5;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.dyamEB;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    mike['title'] = options;
    golf = golf.APPEARANCE;
    mike['parent'] = golf;
    golf = 3;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.TimestampHourCycle;
    golf = golf.useSetting;
    mike['useValue'] = golf;
    golf = function(argFoo) { // Original name: onTimestampHourCycleChange
        zulu = _closure1_slot0;
        mike = _closure1_slot2;
        entity = 3;
        mike = mike[entity];
        entity = undefined;
        mike = zulu.bind(entity)(mike);
        tango = mike.TimestampHourCycle;
        zulu = tango.updateSetting;
        mike = global;
        report = mike.Number;
        mike = argFoo;
        mike = report.bind(entity)(mike);
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    mike['onValueChange'] = golf;
    golf = function() { // Original name: useDMsMessagePreviewsOptions
        tango = _closure1_slot3;
        zulu = tango.useMemo;
        mike = function() {
            mike = {};
            report = _closure1_slot0;
            oscar = _closure1_slot2;
            golf = 5;
            entity = oscar[golf];
            tango = undefined;
            entity = report.bind(tango)(entity);
            options = entity.intl;
            zulu = options.string;
            entity = oscar[golf];
            entity = report.bind(tango)(entity);
            entity = entity.t;
            entity = entity.FMWYvb;
            entity = zulu.bind(options)(entity);
            mike['label'] = entity;
            zulu = 6;
            entity = oscar[zulu];
            entity = report.bind(tango)(entity);
            entity = entity.TimestampHourCycle;
            entity = entity.AUTO;
            mike['value'] = entity;
            entity = new Array(3);
            entity[0] = mike;
            mike = {};
            options = oscar[golf];
            options = report.bind(tango)(options);
            offset = options.intl;
            verify = offset.string;
            options = oscar[golf];
            options = report.bind(tango)(options);
            options = options.t;
            options = options.p8NOws;
            options = verify.bind(offset)(options);
            mike['label'] = options;
            options = oscar[zulu];
            options = report.bind(tango)(options);
            options = options.TimestampHourCycle;
            options = options.H12;
            mike['value'] = options;
            entity[1] = mike;
            mike = {};
            options = oscar[golf];
            options = report.bind(tango)(options);
            verify = options.intl;
            options = verify.string;
            golf = oscar[golf];
            golf = report.bind(tango)(golf);
            golf = golf.t;
            golf = golf.+o/sOj;
            golf = options.bind(verify)(golf);
            mike['label'] = golf;
            zulu = oscar[zulu];
            zulu = report.bind(tango)(zulu);
            zulu = zulu.TimestampHourCycle;
            zulu = zulu.H23;
            mike['value'] = zulu;
            entity[2] = mike;
            return entity;
        };
        entity = new Array(0);
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike['useOptions'] = golf;
    tango = function() { // Original name: useExperiment
        zulu = _closure1_slot1;
        mike = _closure1_slot2;
        entity = 4;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.useExperiment;
        mike = {};
        entity = 'TimestampHourCycleSetting';
        mike['location'] = entity;
        entity = {};
        report = true;
        entity['autoTrackExposure'] = report;
        entity = zulu.bind(tango)(mike, entity);
        entity = entity.enable24HourPref;
        return entity;
    };
    mike['usePredicate'] = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/settings/definitions/TimestampHourCycleSetting.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();