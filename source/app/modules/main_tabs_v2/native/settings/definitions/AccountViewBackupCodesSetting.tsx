// app/modules/main_tabs_v2/native/settings/definitions/AccountViewBackupCodesSetting.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    tangon = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(option)(zuuluu, entity, michal);
    entity = 0;
    tangon = oscard[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(tangon);
    var _closure1_slot3 = michal;
    michal = 1;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    tangon = michal.MobileSetting;
    michal = 2;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    verify = michal.RendererType;
    michal = 3;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    option = michal.NOOP_NULL;
    var _closure1_slot4 = option;
    option = michal.UserSettingsSections;
    michal = {};
    verify = verify.ROUTE;
    michal['type'] = verify;
    verify = function() { // Original name: title
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 5;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.xZEzbm;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['title'] = verify;
    tangon = tangon.ACCOUNT;
    michal['parent'] = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.useIs2FAEnabled;
    michal['usePredicate'] = tangon;
    tangon = function() { // Original name: useOnViewBackups
        tangon = _closure1_slot3;
        zuuluu = tangon.useCallback;
        michal = function(argFoo) {
            michal = argFoo;
            var _closure3_slot0 = michal;
            tangon = {};
            entity = function(argFoo) { // Original name: onSubmit
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 4;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.sendMFABackupCodesVerificationKeyEmail;
                entity = argFoo;
                zuuluu = michal.bind(zuuluu)(entity);
                michal = zuuluu.then;
                entity = function() {
                    zuuluu = _closure3_slot0;
                    michal = function(argFoo) { // Original name: onConfirmBackups
                        zuuluu = {};
                        entity = function(argFoo) { // Original name: onSubmit
                            zuuluu = _closure1_slot1;
                            michal = _closure1_slot2;
                            entity = 4;
                            michal = michal[entity];
                            entity = undefined;
                            tangon = zuuluu.bind(entity)(michal);
                            zuuluu = tangon.confirmViewBackupCodes;
                            michal = argFoo;
                            entity = false;
                            entity = zuuluu.bind(tangon)(michal, entity);
                            return entity;
                        };
                        zuuluu['onSubmit'] = entity;
                        golfie = _closure1_slot0;
                        report = _closure1_slot2;
                        oscard = 5;
                        tangon = report[oscard];
                        entity = undefined;
                        tangon = golfie.bind(entity)(tangon);
                        verify = tangon.intl;
                        option = verify.string;
                        tangon = report[oscard];
                        tangon = golfie.bind(entity)(tangon);
                        tangon = tangon.t;
                        tangon = tangon.mGppp6;
                        tangon = option.bind(verify)(tangon);
                        zuuluu['title'] = tangon;
                        tangon = report[oscard];
                        tangon = golfie.bind(entity)(tangon);
                        verify = tangon.intl;
                        option = verify.string;
                        tangon = report[oscard];
                        tangon = golfie.bind(entity)(tangon);
                        tangon = tangon.t;
                        tangon = tangon.37S9yc;
                        tangon = option.bind(verify)(tangon);
                        zuuluu['helpText'] = tangon;
                        tangon = report[oscard];
                        tangon = golfie.bind(entity)(tangon);
                        verify = tangon.intl;
                        option = verify.string;
                        tangon = report[oscard];
                        tangon = golfie.bind(entity)(tangon);
                        tangon = tangon.t;
                        tangon = tangon.TjGb4e;
                        tangon = option.bind(verify)(tangon);
                        zuuluu['inputLabel'] = tangon;
                        tangon = true;
                        zuuluu['closeOnSuccess'] = tangon;
                        option = argFoo;
                        zuuluu['onSuccess'] = option;
                        option = false;
                        zuuluu['secureTextEntry'] = option;
                        option = report[oscard];
                        option = golfie.bind(entity)(option);
                        verify = option.intl;
                        option = verify.string;
                        oscard = report[oscard];
                        oscard = golfie.bind(entity)(oscard);
                        oscard = oscard.t;
                        oscard = oscard.geKm7u;
                        oscard = option.bind(verify)(oscard);
                        zuuluu['actionText'] = oscard;
                        oscard = 6;
                        oscard = report[oscard];
                        oscard = golfie.bind(entity)(oscard);
                        oscard = oscard.ButtonColors;
                        oscard = oscard.BRAND;
                        zuuluu['confirmColor'] = oscard;
                        zuuluu['useKeyboardAwareWrapper'] = tangon;
                        tangon = _closure1_slot1;
                        michal = 7;
                        michal = report[michal];
                        michal = tangon.bind(entity)(michal);
                        michal = michal.bind(entity)(zuuluu);
                        return entity;
                    };
                    entity = undefined;
                    michal = michal.bind(entity)(zuuluu);
                    return entity;
                };
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            tangon['onSubmit'] = entity;
            entity = _closure1_slot4;
            tangon['onSuccess'] = entity;
            golfie = _closure1_slot0;
            oscard = _closure1_slot2;
            report = 5;
            entity = oscard[report];
            zuuluu = undefined;
            entity = golfie.bind(zuuluu)(entity);
            verify = entity.intl;
            option = verify.string;
            entity = oscard[report];
            entity = golfie.bind(zuuluu)(entity);
            entity = entity.t;
            entity = entity.PsQmzc;
            entity = option.bind(verify)(entity);
            tangon['title'] = entity;
            entity = oscard[report];
            entity = golfie.bind(zuuluu)(entity);
            verify = entity.intl;
            option = verify.string;
            entity = oscard[report];
            entity = golfie.bind(zuuluu)(entity);
            entity = entity.t;
            entity = entity.CIGa+/;
            entity = option.bind(verify)(entity);
            tangon['inputLabel'] = entity;
            entity = false;
            tangon['closeOnSuccess'] = entity;
            option = oscard[report];
            option = golfie.bind(zuuluu)(option);
            verify = option.intl;
            option = verify.string;
            report = oscard[report];
            report = golfie.bind(zuuluu)(report);
            report = report.t;
            report = report.PDTjLC;
            report = option.bind(verify)(report);
            tangon['actionText'] = report;
            report = 6;
            report = oscard[report];
            report = golfie.bind(zuuluu)(report);
            report = report.ButtonColors;
            report = report.BRAND;
            tangon['confirmColor'] = report;
            report = true;
            tangon['useKeyboardAwareWrapper'] = report;
            report = _closure1_slot1;
            michal = 7;
            michal = oscard[michal];
            michal = report.bind(zuuluu)(michal);
            michal = michal.bind(zuuluu)(tangon);
            return entity;
        };
        entity = new Array(0);
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal['usePreNavigationAction'] = tangon;
    tangon = {};
    option = option.ACCOUNT_CONFIRM_VIEW_BACKUP_CODES;
    tangon['route'] = option;
    golfie = function() { // Original name: getComponent
        zuuluu = _closure1_slot0;
        michal = _closure1_slot2;
        entity = 9;
        michal = michal[entity];
        entity = undefined;
        entity = zuuluu.bind(entity)(michal);
        entity = entity.default;
        return entity;
    };
    tangon['getComponent'] = golfie;
    michal['screen'] = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/definitions/AccountViewBackupCodesSetting.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();