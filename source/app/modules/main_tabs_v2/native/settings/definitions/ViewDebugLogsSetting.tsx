// app/modules/main_tabs_v2/native/settings/definitions/ViewDebugLogsSetting.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: ViewDebugLogsActionSheetRow
        entity = argFoo;
        golfie = entity.icon;
        oscard = entity.title;
        var _closure2_slot0 = oscard;
        michal = entity.screenKey;
        var _closure2_slot1 = michal;
        entity = entity.render;
        var _closure2_slot2 = entity;
        tangon = _closure1_slot3;
        michal = _closure1_slot0;
        zuuluu = _closure1_slot2;
        entity = 3;
        entity = zuuluu[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.ActionSheetRow;
        entity = {};
        entity['icon'] = golfie;
        entity['label'] = oscard;
        report = function() { // Original name: onPress
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            entity = 2;
            report = tangon[entity];
            entity = undefined;
            oscard = zuuluu.bind(entity)(report);
            report = oscard.hideActionSheet;
            michal = _closure1_slot5;
            michal = report.bind(oscard)(michal);
            michal = 4;
            michal = tangon[michal];
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.pushLazy;
            michal = global;
            oscard = michal.Promise;
            report = oscard.resolve;
            michal = {};
            golfie = function() { // Original name: default
                tangon = _closure1_slot3;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 5;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                oscard = _closure2_slot0;
                entity['title'] = oscard;
                oscard = _closure2_slot2;
                entity['render'] = oscard;
                report = _closure2_slot1;
                entity['screenKey'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            michal['default'] = golfie;
            michal = report.bind(oscard)(michal);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity['onPress'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    var _closure1_slot6 = entity;
    entity = function() { // Original name: ViewDebugLogsActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tangon = _closure1_slot3;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 6;
            entity = yankee[entity];
            zuuluu = undefined;
            entity = offset.bind(zuuluu)(entity);
            michal = entity.ActionSheet;
            entity = {};
            golfie = _closure1_slot3;
            report = 7;
            report = yankee[report];
            report = offset.bind(zuuluu)(report);
            oscard = report.BottomSheetTitleHeader;
            report = {};
            result = 8;
            option = yankee[result];
            option = offset.bind(zuuluu)(option);
            romeon = option.intl;
            verify = romeon.string;
            option = yankee[result];
            option = offset.bind(zuuluu)(option);
            option = option.t;
            option = option.BUOCPj;
            option = verify.bind(romeon)(option);
            report['title'] = option;
            report = golfie.bind(zuuluu)(oscard, report);
            entity['header'] = report;
            golfie = _closure1_slot4;
            report = 3;
            report = yankee[report];
            report = offset.bind(zuuluu)(report);
            report = report.ActionSheetRow;
            oscard = report.Group;
            report = {};
            option = true;
            report['hasIcons'] = option;
            verify = _closure1_slot3;
            kiloes = _closure1_slot6;
            option = {};
            romeon = 9;
            romeon = yankee[romeon];
            romeon = offset.bind(zuuluu)(romeon);
            sizing = romeon.WrenchIcon;
            romeon = {};
            romeon = verify.bind(zuuluu)(sizing, romeon);
            option['icon'] = romeon;
            romeon = yankee[result];
            romeon = offset.bind(zuuluu)(romeon);
            output = romeon.intl;
            sizing = output.string;
            romeon = yankee[result];
            romeon = offset.bind(zuuluu)(romeon);
            romeon = romeon.t;
            romeon = romeon.XpPGhI;
            romeon = sizing.bind(output)(romeon);
            option['title'] = romeon;
            romeon = 'debugLogs';
            option['screenKey'] = romeon;
            romeon = function() { // Original name: render
                tangon = _closure1_slot3;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 10;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            option['render'] = romeon;
            verify = verify.bind(zuuluu)(kiloes, option);
            option = new Array(3);
            option[0] = verify;
            romeon = _closure1_slot3;
            verify = {};
            sizing = 11;
            sizing = yankee[sizing];
            sizing = offset.bind(zuuluu)(sizing);
            output = sizing.ClockIcon;
            sizing = {};
            sizing = romeon.bind(zuuluu)(output, sizing);
            verify['icon'] = sizing;
            sizing = yankee[result];
            sizing = offset.bind(zuuluu)(sizing);
            echoed = sizing.intl;
            output = echoed.string;
            sizing = yankee[result];
            sizing = offset.bind(zuuluu)(sizing);
            sizing = sizing.t;
            sizing = sizing.b0nJvr;
            sizing = output.bind(echoed)(sizing);
            verify['title'] = sizing;
            sizing = 'startupTiming';
            verify['screenKey'] = sizing;
            sizing = function() { // Original name: render
                tangon = _closure1_slot3;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 12;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            verify['render'] = sizing;
            verify = romeon.bind(zuuluu)(kiloes, verify);
            option[1] = verify;
            verify = 13;
            verify = yankee[verify];
            offset = offset.bind(zuuluu)(verify);
            verify = offset.isAndroid;
            offset = verify.bind(offset)();
            verify = null;
            if(!offset) { _fun00002_ip = 563; continue _fun00001 }
 436:
            romeon = _closure1_slot3;
            yankee = _closure1_slot6;
            offset = {};
            output = _closure1_slot0;
            backup = _closure1_slot2;
            kiloes = 14;
            kiloes = backup[kiloes];
            kiloes = output.bind(zuuluu)(kiloes);
            sizing = kiloes.ChannelNotificationIcon;
            kiloes = {};
            kiloes = romeon.bind(zuuluu)(sizing, kiloes);
            offset['icon'] = kiloes;
            kiloes = backup[result];
            kiloes = output.bind(zuuluu)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = backup[result];
            backup = output.bind(zuuluu)(backup);
            backup = backup.t;
            backup = backup.Ljj0pq;
            backup = kiloes.bind(sizing)(backup);
            offset['title'] = backup;
            backup = 'pushNotificationLogs';
            offset['screenKey'] = backup;
            foxtra = function() { // Original name: render
                tangon = _closure1_slot3;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 15;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            offset['render'] = foxtra;
            verify = romeon.bind(zuuluu)(yankee, offset);
 563:
            option[2] = verify;
            report['children'] = option;
            report = golfie.bind(zuuluu)(oscard, report);
            entity['children'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot7 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    michal = {};
    tangon = true;
    michal['value'] = tangon;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    option = michal.RendererType;
    michal = 1;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    verify = michal.jsx;
    var _closure1_slot3 = verify;
    michal = michal.jsxs;
    var _closure1_slot4 = michal;
    michal = 'ViewDebugLogsActionSheet';
    var _closure1_slot5 = michal;
    michal = {};
    option = option.PRESSABLE;
    michal['type'] = option;
    option = function() { // Original name: title
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 8;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.BUOCPj;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['title'] = option;
    option = null;
    michal['parent'] = option;
    option = 16;
    option = oscard[option];
    option = report.bind(entity)(option);
    option = option.ChannelListMagnifyingGlassIcon;
    michal['IconComponent'] = option;
    option = 17;
    option = oscard[option];
    option = report.bind(entity)(option);
    option = option.DeveloperMode;
    option = option.useSetting;
    michal['usePredicate'] = option;
    golfie = function() { // Original name: handleViewDebugLogsSettingPress
        tangon = _closure1_slot1;
        zuuluu = _closure1_slot2;
        entity = 2;
        zuuluu = zuuluu[entity];
        entity = undefined;
        report = tangon.bind(entity)(zuuluu);
        tangon = report.openLazy;
        zuuluu = global;
        golfie = zuuluu.Promise;
        oscard = golfie.resolve;
        zuuluu = {};
        option = _closure1_slot7;
        zuuluu['default'] = option;
        zuuluu = oscard.bind(golfie)(zuuluu);
        michal = _closure1_slot5;
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    michal['onPress'] = golfie;
    michal['withArrow'] = tangon;
    tangon = 18;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/definitions/ViewDebugLogsSetting.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();