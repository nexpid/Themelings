// app/modules/main_tabs_v2/native/settings/definitions/ViewDebugLogsSetting.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: ViewDebugLogsActionSheetRow
        entity = argFoo;
        golf = entity.icon;
        oscar = entity.title;
        var _closure2_slot0 = oscar;
        mike = entity.screenKey;
        var _closure2_slot1 = mike;
        entity = entity.render;
        var _closure2_slot2 = entity;
        tango = _closure1_slot3;
        mike = _closure1_slot0;
        zulu = _closure1_slot2;
        entity = 3;
        entity = zulu[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.ActionSheetRow;
        entity = {};
        entity['icon'] = golf;
        entity['label'] = oscar;
        report = function() { // Original name: onPress
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            entity = 2;
            report = tango[entity];
            entity = undefined;
            oscar = zulu.bind(entity)(report);
            report = oscar.hideActionSheet;
            mike = _closure1_slot5;
            mike = report.bind(oscar)(mike);
            mike = 4;
            mike = tango[mike];
            tango = zulu.bind(entity)(mike);
            zulu = tango.pushLazy;
            mike = global;
            oscar = mike.Promise;
            report = oscar.resolve;
            mike = {};
            golf = function() { // Original name: default
                tango = _closure1_slot3;
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 5;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                oscar = _closure2_slot0;
                entity['title'] = oscar;
                oscar = _closure2_slot2;
                entity['render'] = oscar;
                report = _closure2_slot1;
                entity['screenKey'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            mike['default'] = golf;
            mike = report.bind(oscar)(mike);
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        entity['onPress'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    var _closure1_slot6 = entity;
    entity = function() { // Original name: ViewDebugLogsActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tango = _closure1_slot3;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 6;
            entity = yankee[entity];
            zulu = undefined;
            entity = offset.bind(zulu)(entity);
            mike = entity.ActionSheet;
            entity = {};
            golf = _closure1_slot3;
            report = 7;
            report = yankee[report];
            report = offset.bind(zulu)(report);
            oscar = report.BottomSheetTitleHeader;
            report = {};
            result = 8;
            options = yankee[result];
            options = offset.bind(zulu)(options);
            romeo = options.intl;
            verify = romeo.string;
            options = yankee[result];
            options = offset.bind(zulu)(options);
            options = options.t;
            options = options.BUOCPj;
            options = verify.bind(romeo)(options);
            report['title'] = options;
            report = golf.bind(zulu)(oscar, report);
            entity['header'] = report;
            golf = _closure1_slot4;
            report = 3;
            report = yankee[report];
            report = offset.bind(zulu)(report);
            report = report.ActionSheetRow;
            oscar = report.Group;
            report = {};
            options = true;
            report['hasIcons'] = options;
            verify = _closure1_slot3;
            kilo = _closure1_slot6;
            options = {};
            romeo = 9;
            romeo = yankee[romeo];
            romeo = offset.bind(zulu)(romeo);
            sizing = romeo.WrenchIcon;
            romeo = {};
            romeo = verify.bind(zulu)(sizing, romeo);
            options['icon'] = romeo;
            romeo = yankee[result];
            romeo = offset.bind(zulu)(romeo);
            output = romeo.intl;
            sizing = output.string;
            romeo = yankee[result];
            romeo = offset.bind(zulu)(romeo);
            romeo = romeo.t;
            romeo = romeo.XpPGhI;
            romeo = sizing.bind(output)(romeo);
            options['title'] = romeo;
            romeo = 'debugLogs';
            options['screenKey'] = romeo;
            romeo = function() { // Original name: render
                tango = _closure1_slot3;
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 10;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            options['render'] = romeo;
            verify = verify.bind(zulu)(kilo, options);
            options = new Array(3);
            options[0] = verify;
            romeo = _closure1_slot3;
            verify = {};
            sizing = 11;
            sizing = yankee[sizing];
            sizing = offset.bind(zulu)(sizing);
            output = sizing.ClockIcon;
            sizing = {};
            sizing = romeo.bind(zulu)(output, sizing);
            verify['icon'] = sizing;
            sizing = yankee[result];
            sizing = offset.bind(zulu)(sizing);
            echo = sizing.intl;
            output = echo.string;
            sizing = yankee[result];
            sizing = offset.bind(zulu)(sizing);
            sizing = sizing.t;
            sizing = sizing.b0nJvr;
            sizing = output.bind(echo)(sizing);
            verify['title'] = sizing;
            sizing = 'startupTiming';
            verify['screenKey'] = sizing;
            sizing = function() { // Original name: render
                tango = _closure1_slot3;
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 12;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            verify['render'] = sizing;
            verify = romeo.bind(zulu)(kilo, verify);
            options[1] = verify;
            verify = 13;
            verify = yankee[verify];
            offset = offset.bind(zulu)(verify);
            verify = offset.isAndroid;
            offset = verify.bind(offset)();
            verify = null;
            if(!offset) { _fun00002_ip = 561; continue _fun00001 }
 434:
            romeo = _closure1_slot3;
            yankee = _closure1_slot6;
            offset = {};
            output = _closure1_slot0;
            backup = _closure1_slot2;
            kilo = 14;
            kilo = backup[kilo];
            kilo = output.bind(zulu)(kilo);
            sizing = kilo.ChannelNotificationIcon;
            kilo = {};
            kilo = romeo.bind(zulu)(sizing, kilo);
            offset['icon'] = kilo;
            kilo = backup[result];
            kilo = output.bind(zulu)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = backup[result];
            backup = output.bind(zulu)(backup);
            backup = backup.t;
            backup = backup.Ljj0pq;
            backup = kilo.bind(sizing)(backup);
            offset['title'] = backup;
            backup = 'pushNotificationLogs';
            offset['screenKey'] = backup;
            foxtrot = function() { // Original name: render
                tango = _closure1_slot3;
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 15;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            offset['render'] = foxtrot;
            verify = romeo.bind(zulu)(yankee, offset);
 561:
            options[2] = verify;
            report['children'] = options;
            report = golf.bind(zulu)(oscar, report);
            entity['children'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot7 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    mike = {};
    tango = true;
    mike['value'] = tango;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, mike);
    entity = 0;
    mike = oscar[entity];
    entity = undefined;
    mike = report.bind(entity)(mike);
    options = mike.RendererType;
    mike = 1;
    verify = oscar[mike];
    verify = report.bind(entity)(verify);
    verify = verify.jsx;
    var _closure1_slot3 = verify;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot4 = mike;
    mike = 'ViewDebugLogsActionSheet';
    var _closure1_slot5 = mike;
    mike = {};
    options = options.PRESSABLE;
    mike['type'] = options;
    options = function() { // Original name: title
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 8;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.BUOCPj;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    mike['title'] = options;
    options = null;
    mike['parent'] = options;
    options = 16;
    options = oscar[options];
    options = report.bind(entity)(options);
    options = options.ChannelListMagnifyingGlassIcon;
    mike['IconComponent'] = options;
    options = 17;
    options = oscar[options];
    options = report.bind(entity)(options);
    options = options.DeveloperMode;
    options = options.useSetting;
    mike['usePredicate'] = options;
    golf = function() { // Original name: handleViewDebugLogsSettingPress
        tango = _closure1_slot1;
        zulu = _closure1_slot2;
        entity = 2;
        zulu = zulu[entity];
        entity = undefined;
        report = tango.bind(entity)(zulu);
        tango = report.openLazy;
        zulu = global;
        golf = zulu.Promise;
        oscar = golf.resolve;
        zulu = {};
        options = _closure1_slot7;
        zulu['default'] = options;
        zulu = oscar.bind(golf)(zulu);
        mike = _closure1_slot5;
        mike = tango.bind(report)(zulu, mike);
        return entity;
    };
    mike['onPress'] = golf;
    mike['withArrow'] = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/settings/definitions/ViewDebugLogsSetting.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();