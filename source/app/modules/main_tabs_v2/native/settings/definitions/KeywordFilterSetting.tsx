// app/modules/main_tabs_v2/native/settings/definitions/KeywordFilterSetting.tsx
export default (function(argFoo, argBar, _, __, ___, argFred, argPlugh) {
    golf = argBar;
    zulu = argFred;
    options = argPlugh;
    var _closure1_slot0 = golf;
    var _closure1_slot1 = options;
    tango = function(argFoo) { // Original name: onKeywordFilterSettingValueChange
        report = argFoo;
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 2;
        mike = mike[entity];
        entity = undefined;
        mike = zulu.bind(entity)(mike);
        tango = mike.KeywordFilterSettings;
        zulu = tango.updateSetting;
        mike = {};
        mike['profanity'] = report;
        mike['slurs'] = report;
        mike['sexualContent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    mike = function() { // Original name: useKeywordFilterSettingsEnabled
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 3;
        mike = mike[entity];
        entity = undefined;
        zulu = zulu.bind(entity)(mike);
        mike = zulu.useIsEligibleForKeywordFiltering;
        entity = {};
        tango = 'mobile_user_privacy_and_safety_settings';
        entity['location'] = tango;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    entity = global;
    offset = entity.Object;
    verify = offset.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = verify.bind(offset)(zulu, entity, report);
    entity = 0;
    report = options[entity];
    entity = undefined;
    report = golf.bind(entity)(report);
    verify = report.MobileSetting;
    report = {};
    offset = 1;
    offset = options[offset];
    offset = golf.bind(entity)(offset);
    offset = offset.RendererType;
    offset = offset.TOGGLE;
    report['type'] = offset;
    offset = function() { // Original name: title
        report = _closure1_slot0;
        oscar = _closure1_slot1;
        entity = 4;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.8QJcoa;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report['title'] = offset;
    verify = verify.CONTENT_AND_SOCIAL;
    report['parent'] = verify;
    verify = 5;
    verify = options[verify];
    verify = golf.bind(entity)(verify);
    verify = verify.useShouldFilterKeywords;
    report['useValue'] = verify;
    report['onValueChange'] = tango;
    report['usePredicate'] = mike;
    oscar = function() { // Original name: additionalSearchTerms
        report = _closure1_slot0;
        oscar = _closure1_slot1;
        entity = 4;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.xIk/iI;
        mike = mike.bind(zulu)(entity);
        entity = new Array(1);
        entity[0] = mike;
        return entity;
    };
    report['additionalSearchTerms'] = oscar;
    oscar = 6;
    oscar = options[oscar];
    options = golf.bind(entity)(oscar);
    golf = options.fileFinishedImporting;
    oscar = 'modules/main_tabs_v2/native/settings/definitions/KeywordFilterSetting.tsx';
    oscar = golf.bind(options)(oscar);
    zulu['default'] = report;
    zulu['onKeywordFilterSettingValueChange'] = tango;
    zulu['useKeywordFilterSettingsEnabled'] = mike;
    return entity;
})();