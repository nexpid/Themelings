// app/modules/main_tabs_v2/native/settings/definitions/GoreMediaFiltersNonFriendsDMsSetting.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    golfie = argBar;
    zuuluu = argFre;
    option = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = option;
    tangon = function() { // Original name: useGoreContentNonFriendsDmSettingValue
        zuuluu = _closure1_slot0;
        report = _closure1_slot1;
        entity = 2;
        entity = report[entity];
        michal = undefined;
        tangon = zuuluu.bind(michal)(entity);
        entity = tangon.useGoreContentSettingOrDefault;
        entity = entity.bind(tangon)();
        tangon = entity.goreContentNonFriendDm;
        entity = 3;
        entity = report[entity];
        zuuluu = zuuluu.bind(michal)(entity);
        entity = zuuluu.redactionSettingToRenderedString;
        entity = entity.bind(zuuluu)(tangon);
        entity = entity.bind(michal)();
        return entity;
    };
    michal = function() { // Original name: onGoreContentNonFriendsDmOnPress
        offset = _closure1_slot0;
        yankee = _closure1_slot1;
        entity = 4;
        michal = yankee[entity];
        entity = undefined;
        zuuluu = offset.bind(entity)(michal);
        michal = zuuluu.getGoreContentSettingOrDefault;
        michal = michal.bind(zuuluu)();
        report = michal.goreContentNonFriendDm;
        michal = 5;
        michal = yankee[michal];
        tangon = offset.bind(entity)(michal);
        zuuluu = tangon.handleSensitiveMediaFilterPress;
        michal = {};
        golfie = 6;
        option = yankee[golfie];
        option = offset.bind(entity)(option);
        verify = option.intl;
        option = verify.string;
        golfie = yankee[golfie];
        golfie = offset.bind(entity)(golfie);
        golfie = golfie.t;
        golfie = golfie.16/3Bg;
        golfie = option.bind(verify)(golfie);
        michal['title'] = golfie;
        oscard = _closure1_slot2;
        oscard = oscard.bind(entity)();
        michal['subtitle'] = oscard;
        oscard = function(argFoo) { // Original name: handlePress
            zuuluu = _closure1_slot0;
            michal = _closure1_slot1;
            entity = 4;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.updateGoreContentSetting;
            entity = {};
            tangon = argFoo;
            entity['goreContentNonFriendDm'] = tangon;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        michal['handlePress'] = oscard;
        michal['currentValue'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    offset = function() { // Original name: getTitle
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 6;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.Yh+HX1;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    var _closure1_slot2 = offset;
    entity = global;
    yankee = entity.Object;
    verify = yankee.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = verify.bind(yankee)(zuuluu, entity, report);
    entity = 0;
    report = option[entity];
    entity = undefined;
    report = golfie.bind(entity)(report);
    verify = report.MobileSetting;
    report = {};
    yankee = 1;
    yankee = option[yankee];
    yankee = golfie.bind(entity)(yankee);
    yankee = yankee.RendererType;
    yankee = yankee.PRESSABLE;
    report['type'] = yankee;
    report['title'] = offset;
    verify = verify.SENSITIVE_CONTENT_FILTERS;
    report['parent'] = verify;
    report['useTrailing'] = tangon;
    report['onPress'] = michal;
    verify = function() { // Original name: additionalSearchTerms
        oscard = _closure1_slot0;
        golfie = _closure1_slot1;
        michal = 6;
        entity = golfie[michal];
        report = undefined;
        entity = oscard.bind(report)(entity);
        tangon = entity.intl;
        zuuluu = tangon.string;
        entity = golfie[michal];
        entity = oscard.bind(report)(entity);
        entity = entity.t;
        entity = entity.N/oRIy;
        zuuluu = zuuluu.bind(tangon)(entity);
        entity = new Array(3);
        entity[0] = zuuluu;
        zuuluu = golfie[michal];
        zuuluu = oscard.bind(report)(zuuluu);
        option = zuuluu.intl;
        tangon = option.string;
        zuuluu = golfie[michal];
        zuuluu = oscard.bind(report)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.QVdYsL;
        zuuluu = tangon.bind(option)(zuuluu);
        entity[1] = zuuluu;
        zuuluu = golfie[michal];
        zuuluu = oscard.bind(report)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.string;
        michal = golfie[michal];
        michal = oscard.bind(report)(michal);
        michal = michal.t;
        michal = michal.K0OWPz;
        michal = zuuluu.bind(tangon)(michal);
        entity[2] = michal;
        return entity;
    };
    report['additionalSearchTerms'] = verify;
    oscard = function() { // Original name: usePredicate
        zuuluu = _closure1_slot0;
        michal = _closure1_slot1;
        entity = 7;
        michal = michal[entity];
        entity = undefined;
        zuuluu = zuuluu.bind(entity)(michal);
        michal = zuuluu.useIsEligibleForSensitiveContentGoreExperiment;
        entity = 'GoreMediaFiltersNonFriendsDMsSetting';
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report['usePredicate'] = oscard;
    oscard = 8;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/main_tabs_v2/native/settings/definitions/GoreMediaFiltersNonFriendsDMsSetting.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['default'] = report;
    zuuluu['useGoreContentNonFriendsDmSettingValue'] = tangon;
    zuuluu['onGoreContentNonFriendsDmOnPress'] = michal;
    return entity;
})();