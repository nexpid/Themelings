// app/modules/main_tabs_v2/native/settings/definitions/LogoutSetting.tsx
export default (function(_, argBar, argBaz, __, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: handleLogout
        report = _closure1_slot0;
        tango = _closure1_slot2;
        entity = 2;
        zulu = tango[entity];
        entity = undefined;
        zulu = report.bind(entity)(zulu);
        golf = zulu.Storage;
        oscar = golf.set;
        zulu = 3;
        zulu = tango[zulu];
        zulu = report.bind(entity)(zulu);
        zulu = zulu.StorageKeys;
        report = zulu.LOGOUT_TIMESTAMP_KEY;
        zulu = global;
        zulu = zulu.Date;
        options = zulu.prototype;
        options = Object.create(options, {constructor: {value: zulu}});
        yankee = options;
        zulu = new yankee[zulu](offset);
        options = zulu instanceof Object ? zulu : options;
        zulu = options.getTime;
        zulu = zulu.bind(options)();
        zulu = oscar.bind(golf)(report, zulu);
        zulu = _closure1_slot1;
        mike = 4;
        mike = tango[mike];
        report = zulu.bind(entity)(mike);
        mike = report.disconnect;
        mike = mike.bind(report)();
        mike = 5;
        mike = tango[mike];
        report = zulu.bind(entity)(mike);
        mike = report.clearAllNotifications;
        mike = mike.bind(report)();
        mike = 6;
        mike = tango[mike];
        report = zulu.bind(entity)(mike);
        mike = report.close;
        mike = mike.bind(report)();
        mike = 7;
        mike = tango[mike];
        zulu = zulu.bind(entity)(mike);
        mike = zulu.logout;
        mike = mike.bind(zulu)();
        return entity;
    };
    var _closure1_slot6 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, mike);
    entity = 0;
    mike = oscar[entity];
    entity = undefined;
    mike = report.bind(entity)(mike);
    golf = mike.RendererType;
    mike = 1;
    options = oscar[mike];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot3 = options;
    options = oscar[mike];
    options = report.bind(entity)(options);
    options = options.Fragment;
    var _closure1_slot4 = options;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot5 = mike;
    mike = {};
    golf = golf.PRESSABLE;
    mike['type'] = golf;
    golf = function() { // Original name: title
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 10;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.2jxGen;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    mike['title'] = golf;
    golf = 11;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.DoorExitIcon;
    mike['IconComponent'] = golf;
    golf = null;
    mike['parent'] = golf;
    golf = 'danger';
    mike['variant'] = golf;
    tango = function() { // Original name: showConfirmLogoutAlert
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        entity = 8;
        mike = output[entity];
        entity = undefined;
        report = sizing.bind(entity)(mike);
        tango = report.openAlert;
        oscar = _closure1_slot3;
        yankee = 9;
        mike = output[yankee];
        mike = sizing.bind(entity)(mike);
        zulu = mike.AlertModal;
        mike = {};
        foxtrot = 10;
        golf = output[foxtrot];
        golf = sizing.bind(entity)(golf);
        verify = golf.intl;
        options = verify.string;
        golf = output[foxtrot];
        golf = sizing.bind(entity)(golf);
        golf = golf.t;
        golf = golf.2jxGen;
        golf = options.bind(verify)(golf);
        mike['title'] = golf;
        golf = output[foxtrot];
        golf = sizing.bind(entity)(golf);
        verify = golf.intl;
        options = verify.string;
        golf = output[foxtrot];
        golf = sizing.bind(entity)(golf);
        golf = golf.t;
        golf = golf.SUnWBA;
        golf = options.bind(verify)(golf);
        mike['content'] = golf;
        verify = _closure1_slot5;
        options = _closure1_slot4;
        golf = {};
        offset = output[yankee];
        offset = sizing.bind(entity)(offset);
        romeo = offset.AlertActionButton;
        offset = {};
        kilo = output[foxtrot];
        kilo = sizing.bind(entity)(kilo);
        echo = kilo.intl;
        result = echo.string;
        kilo = output[foxtrot];
        kilo = sizing.bind(entity)(kilo);
        kilo = kilo.t;
        kilo = kilo.2jxGen;
        kilo = result.bind(echo)(kilo);
        offset['text'] = kilo;
        backup = _closure1_slot6;
        offset['onPress'] = backup;
        backup = 'destructive';
        offset['variant'] = backup;
        romeo = oscar.bind(entity)(romeo, offset);
        offset = new Array(2);
        offset[0] = romeo;
        yankee = output[yankee];
        yankee = sizing.bind(entity)(yankee);
        romeo = yankee.AlertActionButton;
        yankee = {};
        backup = 'secondary';
        yankee['variant'] = backup;
        backup = output[foxtrot];
        backup = sizing.bind(entity)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = output[foxtrot];
        foxtrot = sizing.bind(entity)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.13/7kZ;
        foxtrot = backup.bind(kilo)(foxtrot);
        yankee['text'] = foxtrot;
        yankee = oscar.bind(entity)(romeo, yankee);
        offset[1] = yankee;
        golf['children'] = offset;
        golf = verify.bind(entity)(options, golf);
        mike['actions'] = golf;
        zulu = oscar.bind(entity)(zulu, mike);
        mike = 'logout';
        mike = tango.bind(report)(mike, zulu);
        return entity;
    };
    mike['onPress'] = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/settings/definitions/LogoutSetting.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();