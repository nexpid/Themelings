// app/modules/main_tabs_v2/native/settings/definitions/LogoutSetting.tsx
export default (function(_, argBar, argBaz, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: handleLogout
        report = _closure1_slot0;
        tangon = _closure1_slot2;
        entity = 2;
        zuuluu = tangon[entity];
        entity = undefined;
        zuuluu = report.bind(entity)(zuuluu);
        golfie = zuuluu.Storage;
        oscard = golfie.set;
        zuuluu = 3;
        zuuluu = tangon[zuuluu];
        zuuluu = report.bind(entity)(zuuluu);
        zuuluu = zuuluu.StorageKeys;
        report = zuuluu.LOGOUT_TIMESTAMP_KEY;
        zuuluu = global;
        zuuluu = zuuluu.Date;
        option = zuuluu.prototype;
        option = Object.create(option, {constructor: {value: zuuluu}});
        yankee = option;
        zuuluu = new yankee[zuuluu](offset);
        option = zuuluu instanceof Object ? zuuluu : option;
        zuuluu = option.getTime;
        zuuluu = zuuluu.bind(option)();
        zuuluu = oscard.bind(golfie)(report, zuuluu);
        zuuluu = _closure1_slot1;
        michal = 4;
        michal = tangon[michal];
        report = zuuluu.bind(entity)(michal);
        michal = report.disconnect;
        michal = michal.bind(report)();
        michal = 5;
        michal = tangon[michal];
        report = zuuluu.bind(entity)(michal);
        michal = report.clearAllNotifications;
        michal = michal.bind(report)();
        michal = 6;
        michal = tangon[michal];
        report = zuuluu.bind(entity)(michal);
        michal = report.close;
        michal = michal.bind(report)();
        michal = 7;
        michal = tangon[michal];
        zuuluu = zuuluu.bind(entity)(michal);
        michal = zuuluu.logout;
        michal = michal.bind(zuuluu)();
        return entity;
    };
    var _closure1_slot6 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    golfie = michal.RendererType;
    michal = 1;
    option = oscard[michal];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot3 = option;
    option = oscard[michal];
    option = report.bind(entity)(option);
    option = option.Fragment;
    var _closure1_slot4 = option;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.jsxs;
    var _closure1_slot5 = michal;
    michal = {};
    golfie = golfie.PRESSABLE;
    michal['type'] = golfie;
    golfie = function() { // Original name: title
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 10;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.2jxGen;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['title'] = golfie;
    golfie = 11;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.DoorExitIcon;
    michal['IconComponent'] = golfie;
    golfie = null;
    michal['parent'] = golfie;
    golfie = 'danger';
    michal['variant'] = golfie;
    tangon = function() { // Original name: showConfirmLogoutAlert
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        entity = 8;
        michal = output[entity];
        entity = undefined;
        report = sizing.bind(entity)(michal);
        tangon = report.openAlert;
        oscard = _closure1_slot3;
        yankee = 9;
        michal = output[yankee];
        michal = sizing.bind(entity)(michal);
        zuuluu = michal.AlertModal;
        michal = {};
        foxtra = 10;
        golfie = output[foxtra];
        golfie = sizing.bind(entity)(golfie);
        verify = golfie.intl;
        option = verify.string;
        golfie = output[foxtra];
        golfie = sizing.bind(entity)(golfie);
        golfie = golfie.t;
        golfie = golfie.2jxGen;
        golfie = option.bind(verify)(golfie);
        michal['title'] = golfie;
        golfie = output[foxtra];
        golfie = sizing.bind(entity)(golfie);
        verify = golfie.intl;
        option = verify.string;
        golfie = output[foxtra];
        golfie = sizing.bind(entity)(golfie);
        golfie = golfie.t;
        golfie = golfie.SUnWBA;
        golfie = option.bind(verify)(golfie);
        michal['content'] = golfie;
        verify = _closure1_slot5;
        option = _closure1_slot4;
        golfie = {};
        offset = output[yankee];
        offset = sizing.bind(entity)(offset);
        romeon = offset.AlertActionButton;
        offset = {};
        kiloes = output[foxtra];
        kiloes = sizing.bind(entity)(kiloes);
        echoed = kiloes.intl;
        result = echoed.string;
        kiloes = output[foxtra];
        kiloes = sizing.bind(entity)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.2jxGen;
        kiloes = result.bind(echoed)(kiloes);
        offset['text'] = kiloes;
        backup = _closure1_slot6;
        offset['onPress'] = backup;
        backup = 'destructive';
        offset['variant'] = backup;
        romeon = oscard.bind(entity)(romeon, offset);
        offset = new Array(2);
        offset[0] = romeon;
        yankee = output[yankee];
        yankee = sizing.bind(entity)(yankee);
        romeon = yankee.AlertActionButton;
        yankee = {};
        backup = 'secondary';
        yankee['variant'] = backup;
        backup = output[foxtra];
        backup = sizing.bind(entity)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = output[foxtra];
        foxtra = sizing.bind(entity)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.13/7kZ;
        foxtra = backup.bind(kiloes)(foxtra);
        yankee['text'] = foxtra;
        yankee = oscard.bind(entity)(romeon, yankee);
        offset[1] = yankee;
        golfie['children'] = offset;
        golfie = verify.bind(entity)(option, golfie);
        michal['actions'] = golfie;
        zuuluu = oscard.bind(entity)(zuuluu, michal);
        michal = 'logout';
        michal = tangon.bind(report)(michal, zuuluu);
        return entity;
    };
    michal['onPress'] = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/definitions/LogoutSetting.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();