// app/modules/main_tabs_v2/native/settings/definitions/IOSConversationSuggestionsSetting.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = function(argFoo) { // Original name: setConversationSuggestionsEnabled
        entity = argFoo;
        var _closure2_slot0 = entity;
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot1;
        entity = 5;
        zuuluu = zuuluu[entity];
        entity = undefined;
        tangon = tangon.bind(entity)(zuuluu);
        zuuluu = tangon.batchUpdates;
        michal = function() {
            zuuluu = _closure1_slot3;
            michal = zuuluu.setState;
            entity = {};
            tangon = _closure2_slot0;
            entity['isEnabled'] = tangon;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    var _closure1_slot5 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, michal);
    entity = 0;
    golfie = oscard[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(golfie);
    var _closure1_slot2 = michal;
    michal = 1;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.NativeModules;
    golfie = 2;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.MobileSetting;
    option = 3;
    option = oscard[option];
    option = report.bind(entity)(option);
    option = option.RendererType;
    verify = 4;
    verify = oscard[verify];
    yankee = report.bind(entity)(verify);
    offset = yankee.createWithEqualityFn;
    verify = function() {
        entity = {};
        michal = true;
        entity['isEnabled'] = michal;
        return entity;
    };
    verify = offset.bind(yankee)(verify);
    var _closure1_slot3 = verify;
    michal = michal.IntentsHandler;
    var _closure1_slot4 = michal;
    michal = {};
    option = option.TOGGLE;
    michal['type'] = option;
    option = function() { // Original name: title
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 9;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.J8foZm;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['title'] = option;
    golfie = golfie.CONTENT_AND_SOCIAL_DISCORD;
    michal['parent'] = golfie;
    golfie = function() { // Original name: useIOSConversationSuggestionsSettingValue
        report = _closure1_slot2;
        tangon = report.useEffect;
        zuuluu = function() {
            michal = _closure1_slot4;
            entity = michal.getConversationSuggestionsEnabled;
            zuuluu = entity.bind(michal)();
            michal = zuuluu.then;
            entity = function(argFoo) {
                zuuluu = _closure1_slot5;
                entity = undefined;
                michal = argFoo;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            entity = undefined;
            return entity;
        };
        michal = new Array(0);
        michal = tangon.bind(report)(zuuluu, michal);
        michal = function() { // Original name: useConversationSuggestionsEnabled
            tangon = _closure1_slot3;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot1;
            entity = 6;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.shallow;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.isEnabled;
                return entity;
            };
            entity = tangon.bind(zuuluu)(entity, michal);
            return entity;
        };
        entity = undefined;
        entity = michal.bind(entity)();
        return entity;
    };
    michal['useValue'] = golfie;
    golfie = function(argFoo) { // Original name: onIOSConversationSuggestionsSettingValueChange
        tangon = _closure1_slot4;
        zuuluu = tangon.setConversationSuggestionsEnabled;
        michal = argFoo;
        tangon = zuuluu.bind(tangon)(michal);
        zuuluu = tangon.then;
        michal = function(argFoo) {
            zuuluu = _closure1_slot5;
            entity = undefined;
            michal = argFoo;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        zuuluu = zuuluu.bind(tangon)(michal);
        michal = zuuluu.catch;
        entity = function(argFoo) {
            zuuluu = _closure1_slot0;
            michal = _closure1_slot1;
            entity = 8;
            michal = michal[entity];
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            tangon = michal.Logger;
            michal = tangon.prototype;
            zuuluu = Object.create(michal, {constructor: {value: tangon}});
            golfie = 'ConversationSuggestions';
            option = zuuluu;
            michal = new option[tangon](golfie, oscard);
            report = michal instanceof Object ? michal : zuuluu;
            tangon = report.error;
            zuuluu = 'Error suggesting conversations';
            michal = argFoo;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        entity = michal.bind(zuuluu)(entity);
        entity = undefined;
        return entity;
    };
    michal['onValueChange'] = golfie;
    tangon = function() { // Original name: useHasIOSConversationSuggestionsSetting
        zuuluu = _closure1_slot0;
        michal = _closure1_slot1;
        entity = 7;
        michal = michal[entity];
        entity = undefined;
        michal = zuuluu.bind(entity)(michal);
        entity = michal.isAndroid;
        entity = entity.bind(michal)();
        entity = !entity;
        return entity;
    };
    michal['usePredicate'] = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/definitions/IOSConversationSuggestionsSetting.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();