// app/modules/main_tabs_v2/native/settings/definitions/IOSConversationSuggestionsSetting.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = function(argFoo) { // Original name: setConversationSuggestionsEnabled
        entity = argFoo;
        var _closure2_slot0 = entity;
        tango = _closure1_slot0;
        zulu = _closure1_slot1;
        entity = 5;
        zulu = zulu[entity];
        entity = undefined;
        tango = tango.bind(entity)(zulu);
        zulu = tango.batchUpdates;
        mike = function() {
            zulu = _closure1_slot3;
            mike = zulu.setState;
            entity = {};
            tango = _closure2_slot0;
            entity['isEnabled'] = tango;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    var _closure1_slot5 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, mike);
    entity = 0;
    golf = oscar[entity];
    mike = argCorge;
    entity = undefined;
    mike = mike.bind(entity)(golf);
    var _closure1_slot2 = mike;
    mike = 1;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    mike = mike.NativeModules;
    golf = 2;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.MobileSetting;
    options = 3;
    options = oscar[options];
    options = report.bind(entity)(options);
    options = options.RendererType;
    verify = 4;
    verify = oscar[verify];
    yankee = report.bind(entity)(verify);
    offset = yankee.createWithEqualityFn;
    verify = function() {
        entity = {};
        mike = true;
        entity['isEnabled'] = mike;
        return entity;
    };
    verify = offset.bind(yankee)(verify);
    var _closure1_slot3 = verify;
    mike = mike.IntentsHandler;
    var _closure1_slot4 = mike;
    mike = {};
    options = options.TOGGLE;
    mike['type'] = options;
    options = function() { // Original name: title
        report = _closure1_slot0;
        oscar = _closure1_slot1;
        entity = 9;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.J8foZm;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    mike['title'] = options;
    golf = golf.CONTENT_AND_SOCIAL;
    mike['parent'] = golf;
    golf = function() { // Original name: useIOSConversationSuggestionsSettingValue
        report = _closure1_slot2;
        tango = report.useEffect;
        zulu = function() {
            mike = _closure1_slot4;
            entity = mike.getConversationSuggestionsEnabled;
            zulu = entity.bind(mike)();
            mike = zulu.then;
            entity = function(argFoo) {
                zulu = _closure1_slot5;
                entity = undefined;
                mike = argFoo;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            entity = undefined;
            return entity;
        };
        mike = new Array(0);
        mike = tango.bind(report)(zulu, mike);
        mike = function() { // Original name: useConversationSuggestionsEnabled
            tango = _closure1_slot3;
            mike = _closure1_slot0;
            zulu = _closure1_slot1;
            entity = 6;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.shallow;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.isEnabled;
                return entity;
            };
            entity = tango.bind(zulu)(entity, mike);
            return entity;
        };
        entity = undefined;
        entity = mike.bind(entity)();
        return entity;
    };
    mike['useValue'] = golf;
    golf = function(argFoo) { // Original name: onIOSConversationSuggestionsSettingValueChange
        tango = _closure1_slot4;
        zulu = tango.setConversationSuggestionsEnabled;
        mike = argFoo;
        tango = zulu.bind(tango)(mike);
        zulu = tango.then;
        mike = function(argFoo) {
            zulu = _closure1_slot5;
            entity = undefined;
            mike = argFoo;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        zulu = zulu.bind(tango)(mike);
        mike = zulu.catch;
        entity = function(argFoo) {
            zulu = _closure1_slot0;
            mike = _closure1_slot1;
            entity = 8;
            mike = mike[entity];
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            tango = mike.Logger;
            mike = tango.prototype;
            zulu = Object.create(mike, {constructor: {value: tango}});
            golf = 'ConversationSuggestions';
            options = zulu;
            mike = new options[tango](golf, oscar);
            report = mike instanceof Object ? mike : zulu;
            tango = report.error;
            zulu = 'Error suggesting conversations';
            mike = argFoo;
            mike = tango.bind(report)(zulu, mike);
            return entity;
        };
        entity = mike.bind(zulu)(entity);
        entity = undefined;
        return entity;
    };
    mike['onValueChange'] = golf;
    tango = function() { // Original name: useHasIOSConversationSuggestionsSetting
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 7;
        mike = mike[entity];
        entity = undefined;
        mike = zulu.bind(entity)(mike);
        entity = mike.isAndroid;
        entity = entity.bind(mike)();
        entity = !entity;
        return entity;
    };
    mike['usePredicate'] = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/settings/definitions/IOSConversationSuggestionsSetting.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();