// app/modules/main_tabs_v2/native/settings/definitions/AnimateStickersSetting.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, michal);
    entity = 0;
    golfie = oscard[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(golfie);
    var _closure1_slot2 = michal;
    michal = 1;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    golfie = michal.MobileSetting;
    michal = 2;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    option = michal.RendererType;
    michal = 3;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.StickerAnimationSettings;
    var _closure1_slot3 = michal;
    michal = {};
    option = option.RADIO;
    michal['type'] = option;
    option = function() { // Original name: title
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 5;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.R5nQkZ;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['title'] = option;
    golfie = golfie.ACCESSIBILITY;
    michal['parent'] = golfie;
    golfie = 4;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.AnimateStickers;
    golfie = golfie.useSetting;
    michal['useValue'] = golfie;
    golfie = function(argFoo) { // Original name: onAnimateStickerSettingValueChange
        zuuluu = _closure1_slot0;
        michal = _closure1_slot1;
        entity = 4;
        michal = michal[entity];
        entity = undefined;
        michal = zuuluu.bind(entity)(michal);
        tangon = michal.AnimateStickers;
        zuuluu = tangon.updateSetting;
        michal = global;
        report = michal.Number;
        michal = argFoo;
        michal = report.bind(entity)(michal);
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    michal['onValueChange'] = golfie;
    tangon = function() { // Original name: useAnimateStickerSettingOptions
        tangon = _closure1_slot2;
        zuuluu = tangon.useMemo;
        michal = function() {
            michal = {};
            option = _closure1_slot0;
            verify = _closure1_slot1;
            tangon = 5;
            zuuluu = verify[tangon];
            golfie = undefined;
            zuuluu = option.bind(golfie)(zuuluu);
            oscard = zuuluu.intl;
            report = oscard.string;
            zuuluu = verify[tangon];
            zuuluu = option.bind(golfie)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu.Xp+X2d;
            zuuluu = report.bind(oscard)(zuuluu);
            michal['label'] = zuuluu;
            zuuluu = _closure1_slot3;
            entity = zuuluu.ALWAYS_ANIMATE;
            michal['value'] = entity;
            entity = new Array(3);
            entity[0] = michal;
            michal = {};
            report = verify[tangon];
            report = option.bind(golfie)(report);
            offset = report.intl;
            oscard = offset.string;
            report = verify[tangon];
            report = option.bind(golfie)(report);
            report = report.t;
            report = report.IlLT7e;
            report = oscard.bind(offset)(report);
            michal['label'] = report;
            report = zuuluu.ANIMATE_ON_INTERACTION;
            michal['value'] = report;
            entity[1] = michal;
            michal = {};
            report = verify[tangon];
            report = option.bind(golfie)(report);
            oscard = report.intl;
            report = oscard.string;
            tangon = verify[tangon];
            tangon = option.bind(golfie)(tangon);
            tangon = tangon.t;
            tangon = tangon.IGu8x8;
            tangon = report.bind(oscard)(tangon);
            michal['label'] = tangon;
            zuuluu = zuuluu.NEVER_ANIMATE;
            michal['value'] = zuuluu;
            entity[2] = michal;
            return entity;
        };
        entity = new Array(0);
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal['useOptions'] = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/definitions/AnimateStickersSetting.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();