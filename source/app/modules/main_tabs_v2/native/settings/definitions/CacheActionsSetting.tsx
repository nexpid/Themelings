// app/modules/main_tabs_v2/native/settings/definitions/CacheActionsSetting.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    options = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = options;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: handleCacheActionPress
        options = argFoo;
        tango = _closure1_slot1;
        report = _closure1_slot2;
        entity = 5;
        zulu = report[entity];
        entity = undefined;
        golf = tango.bind(entity)(zulu);
        oscar = golf.open;
        zulu = {};
        zulu['key'] = options;
        verify = function() { // Original name: icon
            tango = _closure1_slot5;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 6;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.CircleInformationIcon;
            entity = {};
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        zulu['icon'] = verify;
        zulu['content'] = options;
        zulu = oscar.bind(golf)(zulu);
        zulu = 4;
        zulu = report[zulu];
        tango = tango.bind(entity)(zulu);
        zulu = tango.hideActionSheet;
        mike = _closure1_slot7;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    var _closure1_slot8 = entity;
    entity = function() { // Original name: CacheActionsActionSheet
        tango = _closure1_slot5;
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        entity = 10;
        entity = output[entity];
        zulu = undefined;
        entity = sizing.bind(zulu)(entity);
        mike = entity.ActionSheet;
        entity = {};
        golf = _closure1_slot5;
        report = 11;
        report = output[report];
        report = sizing.bind(zulu)(report);
        oscar = report.BottomSheetTitleHeader;
        report = {};
        foxtrot = 7;
        options = output[foxtrot];
        options = sizing.bind(zulu)(options);
        offset = options.intl;
        verify = offset.string;
        options = output[foxtrot];
        options = sizing.bind(zulu)(options);
        options = options.t;
        options = options.ZVZVwc;
        options = verify.bind(offset)(options);
        report['title'] = options;
        report = golf.bind(zulu)(oscar, report);
        entity['header'] = report;
        golf = _closure1_slot6;
        verify = 12;
        report = output[verify];
        report = sizing.bind(zulu)(report);
        report = report.ActionSheetRow;
        oscar = report.Group;
        report = {};
        options = true;
        report['hasIcons'] = options;
        yankee = _closure1_slot5;
        options = output[verify];
        options = sizing.bind(zulu)(options);
        offset = options.ActionSheetRow;
        options = {};
        echo = _closure1_slot5;
        kilo = 13;
        kilo = output[kilo];
        kilo = sizing.bind(zulu)(kilo);
        result = kilo.FileUpIcon;
        kilo = {};
        kilo = echo.bind(zulu)(result, kilo);
        options['icon'] = kilo;
        kilo = output[foxtrot];
        kilo = sizing.bind(zulu)(kilo);
        echo = kilo.intl;
        result = echo.string;
        kilo = output[foxtrot];
        kilo = sizing.bind(zulu)(kilo);
        kilo = kilo.t;
        kilo = kilo./GUaXl;
        kilo = result.bind(echo)(kilo);
        options['label'] = kilo;
        result = _closure1_slot3;
        kilo = function* () {
            entity = function* () { // Original name: ?anon_0_
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                    if(mike) { _fun00002_ip = 124; continue _fun00001 }
 7:
                    report = _closure1_slot0;
                    zulu = _closure1_slot2;
                    mike = 14;
                    mike = zulu[mike];
                    zulu = undefined;
                    report = report.bind(zulu)(mike);
                    mike = report.writeCaches;
                    mike = mike.bind(report)();
                    SaveGenerator(address=46);
 44:
                    return mike;
 46:
                    ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                    if(report) { _fun00002_ip = 121; continue _fun00001 }
 52:
                    report = _closure1_slot8;
                    options = _closure1_slot0;
                    verify = _closure1_slot2;
                    tango = 7;
                    oscar = verify[tango];
                    oscar = options.bind(zulu)(oscar);
                    golf = oscar.intl;
                    oscar = golf.string;
                    tango = verify[tango];
                    tango = options.bind(zulu)(tango);
                    tango = tango.t;
                    tango = tango.GgUIfn;
                    tango = oscar.bind(golf)(tango);
                    tango = report.bind(zulu)(tango);
                    return zulu;
 121:
                    return mike;
 124:
                    return entity;
                }
            };
            return entity;
        };
        kilo = result.bind(zulu)(kilo);
        options['onPress'] = kilo;
        offset = yankee.bind(zulu)(offset, options);
        options = new Array(2);
        options[0] = offset;
        yankee = _closure1_slot5;
        verify = output[verify];
        verify = sizing.bind(zulu)(verify);
        offset = verify.ActionSheetRow;
        verify = {};
        kilo = 'danger';
        verify['variant'] = kilo;
        result = _closure1_slot5;
        backup = 15;
        backup = output[backup];
        backup = sizing.bind(zulu)(backup);
        kilo = backup.FileWarningIcon;
        backup = {};
        echo = 'text-danger';
        backup['color'] = echo;
        backup = result.bind(zulu)(kilo, backup);
        verify['icon'] = backup;
        backup = output[foxtrot];
        backup = sizing.bind(zulu)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = output[foxtrot];
        foxtrot = sizing.bind(zulu)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.tgwiMD;
        foxtrot = backup.bind(kilo)(foxtrot);
        verify['label'] = foxtrot;
        romeo = function() { // Original name: onPress
            oscar = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 14;
            zulu = golf[entity];
            entity = undefined;
            tango = oscar.bind(entity)(zulu);
            zulu = tango.clearCaches;
            zulu = zulu.bind(tango)();
            zulu = _closure1_slot8;
            mike = 7;
            tango = golf[mike];
            tango = oscar.bind(entity)(tango);
            report = tango.intl;
            tango = report.string;
            mike = golf[mike];
            mike = oscar.bind(entity)(mike);
            mike = mike.t;
            mike = mike.23xR5+;
            mike = tango.bind(report)(mike);
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        verify['onPress'] = romeo;
        verify = yankee.bind(zulu)(offset, verify);
        options[1] = verify;
        report['children'] = options;
        report = golf.bind(zulu)(oscar, report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = global;
    offset = entity.Object;
    verify = offset.defineProperty;
    mike = {};
    tango = true;
    mike['value'] = tango;
    entity = '__esModule';
    entity = verify.bind(offset)(zulu, entity, mike);
    entity = 0;
    mike = oscar[entity];
    entity = undefined;
    mike = options.bind(entity)(mike);
    var _closure1_slot3 = mike;
    mike = 1;
    mike = oscar[mike];
    mike = options.bind(entity)(mike);
    var _closure1_slot4 = mike;
    mike = 2;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    options = mike.RendererType;
    mike = 3;
    verify = oscar[mike];
    verify = report.bind(entity)(verify);
    verify = verify.jsx;
    var _closure1_slot5 = verify;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot6 = mike;
    mike = 'CacheActionsActionSheet';
    var _closure1_slot7 = mike;
    mike = {};
    options = options.PRESSABLE;
    mike['type'] = options;
    options = function() { // Original name: useCacheActionsTitle
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 7;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.ZVZVwc;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    mike['title'] = options;
    options = null;
    mike['parent'] = options;
    options = 15;
    options = oscar[options];
    options = report.bind(entity)(options);
    options = options.FileWarningIcon;
    mike['IconComponent'] = options;
    options = function() { // Original name: handleCacheActionsPress
        tango = _closure1_slot1;
        zulu = _closure1_slot2;
        entity = 4;
        zulu = zulu[entity];
        entity = undefined;
        report = tango.bind(entity)(zulu);
        tango = report.openLazy;
        zulu = global;
        golf = zulu.Promise;
        oscar = golf.resolve;
        zulu = {};
        options = _closure1_slot9;
        zulu['default'] = options;
        zulu = oscar.bind(golf)(zulu);
        mike = _closure1_slot7;
        mike = tango.bind(report)(zulu, mike);
        return entity;
    };
    mike['onPress'] = options;
    golf = function() { // Original name: useCacheActionsPredicate
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            tango = _closure1_slot0;
            report = _closure1_slot2;
            mike = 8;
            mike = report[mike];
            zulu = undefined;
            golf = tango.bind(zulu)(mike);
            oscar = golf.useStateFromStores;
            entity = _closure1_slot4;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure1_slot4;
                entity = mike.isConnected;
                entity = entity.bind(mike)();
                return entity;
            };
            mike = oscar.bind(golf)(mike, entity);
            entity = 9;
            entity = report[entity];
            entity = tango.bind(zulu)(entity);
            zulu = entity.DeveloperMode;
            entity = zulu.useSetting;
            entity = entity.bind(zulu)();
            if(!entity) { _fun00004_ip = 91; continue _fun00003 }
 88:
            entity = mike;
 91:
            return entity;
        }
    };
    mike['usePredicate'] = golf;
    mike['withArrow'] = tango;
    tango = 16;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/settings/definitions/CacheActionsSetting.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();