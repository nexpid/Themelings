// app/modules/main_tabs_v2/native/settings/definitions/CacheActionsSetting.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    option = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = option;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: handleCacheActionPress
        option = argFoo;
        tangon = _closure1_slot1;
        report = _closure1_slot2;
        entity = 5;
        zuuluu = report[entity];
        entity = undefined;
        golfie = tangon.bind(entity)(zuuluu);
        oscard = golfie.open;
        zuuluu = {};
        zuuluu['key'] = option;
        verify = function() { // Original name: icon
            tangon = _closure1_slot5;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 6;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.CircleInformationIcon;
            entity = {};
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu['icon'] = verify;
        zuuluu['content'] = option;
        zuuluu = oscard.bind(golfie)(zuuluu);
        zuuluu = 4;
        zuuluu = report[zuuluu];
        tangon = tangon.bind(entity)(zuuluu);
        zuuluu = tangon.hideActionSheet;
        michal = _closure1_slot7;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    var _closure1_slot8 = entity;
    entity = function() { // Original name: CacheActionsActionSheet
        tangon = _closure1_slot5;
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        entity = 10;
        entity = output[entity];
        zuuluu = undefined;
        entity = sizing.bind(zuuluu)(entity);
        michal = entity.ActionSheet;
        entity = {};
        golfie = _closure1_slot5;
        report = 11;
        report = output[report];
        report = sizing.bind(zuuluu)(report);
        oscard = report.BottomSheetTitleHeader;
        report = {};
        foxtra = 7;
        option = output[foxtra];
        option = sizing.bind(zuuluu)(option);
        offset = option.intl;
        verify = offset.string;
        option = output[foxtra];
        option = sizing.bind(zuuluu)(option);
        option = option.t;
        option = option.ZVZVwc;
        option = verify.bind(offset)(option);
        report['title'] = option;
        report = golfie.bind(zuuluu)(oscard, report);
        entity['header'] = report;
        golfie = _closure1_slot6;
        verify = 12;
        report = output[verify];
        report = sizing.bind(zuuluu)(report);
        report = report.ActionSheetRow;
        oscard = report.Group;
        report = {};
        option = true;
        report['hasIcons'] = option;
        yankee = _closure1_slot5;
        option = output[verify];
        option = sizing.bind(zuuluu)(option);
        offset = option.ActionSheetRow;
        option = {};
        echoed = _closure1_slot5;
        kiloes = 13;
        kiloes = output[kiloes];
        kiloes = sizing.bind(zuuluu)(kiloes);
        result = kiloes.FileUpIcon;
        kiloes = {};
        kiloes = echoed.bind(zuuluu)(result, kiloes);
        option['icon'] = kiloes;
        kiloes = output[foxtra];
        kiloes = sizing.bind(zuuluu)(kiloes);
        echoed = kiloes.intl;
        result = echoed.string;
        kiloes = output[foxtra];
        kiloes = sizing.bind(zuuluu)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes./GUaXl;
        kiloes = result.bind(echoed)(kiloes);
        option['label'] = kiloes;
        result = _closure1_slot3;
        kiloes = function* () {
            entity = function* () { // Original name: ?anon_0_
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                    if(michal) { _fun00002_ip = 124; continue _fun00001 }
 7:
                    report = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 14;
                    michal = zuuluu[michal];
                    zuuluu = undefined;
                    report = report.bind(zuuluu)(michal);
                    michal = report.writeCaches;
                    michal = michal.bind(report)();
                    SaveGenerator(address=46);
 44:
                    return michal;
 46:
                    ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                    if(report) { _fun00002_ip = 121; continue _fun00001 }
 52:
                    report = _closure1_slot8;
                    option = _closure1_slot0;
                    verify = _closure1_slot2;
                    tangon = 7;
                    oscard = verify[tangon];
                    oscard = option.bind(zuuluu)(oscard);
                    golfie = oscard.intl;
                    oscard = golfie.string;
                    tangon = verify[tangon];
                    tangon = option.bind(zuuluu)(tangon);
                    tangon = tangon.t;
                    tangon = tangon.GgUIfn;
                    tangon = oscard.bind(golfie)(tangon);
                    tangon = report.bind(zuuluu)(tangon);
                    return zuuluu;
 121:
                    return michal;
 124:
                    return entity;
                }
            };
            return entity;
        };
        kiloes = result.bind(zuuluu)(kiloes);
        option['onPress'] = kiloes;
        offset = yankee.bind(zuuluu)(offset, option);
        option = new Array(2);
        option[0] = offset;
        yankee = _closure1_slot5;
        verify = output[verify];
        verify = sizing.bind(zuuluu)(verify);
        offset = verify.ActionSheetRow;
        verify = {};
        kiloes = 'danger';
        verify['variant'] = kiloes;
        result = _closure1_slot5;
        backup = 15;
        backup = output[backup];
        backup = sizing.bind(zuuluu)(backup);
        kiloes = backup.FileWarningIcon;
        backup = {};
        echoed = 'text-danger';
        backup['color'] = echoed;
        backup = result.bind(zuuluu)(kiloes, backup);
        verify['icon'] = backup;
        backup = output[foxtra];
        backup = sizing.bind(zuuluu)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = output[foxtra];
        foxtra = sizing.bind(zuuluu)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.tgwiMD;
        foxtra = backup.bind(kiloes)(foxtra);
        verify['label'] = foxtra;
        romeon = function() { // Original name: onPress
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 14;
            zuuluu = golfie[entity];
            entity = undefined;
            tangon = oscard.bind(entity)(zuuluu);
            zuuluu = tangon.clearCaches;
            zuuluu = zuuluu.bind(tangon)();
            zuuluu = _closure1_slot8;
            michal = 7;
            tangon = golfie[michal];
            tangon = oscard.bind(entity)(tangon);
            report = tangon.intl;
            tangon = report.string;
            michal = golfie[michal];
            michal = oscard.bind(entity)(michal);
            michal = michal.t;
            michal = michal.23xR5+;
            michal = tangon.bind(report)(michal);
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        verify['onPress'] = romeon;
        verify = yankee.bind(zuuluu)(offset, verify);
        option[1] = verify;
        report['children'] = option;
        report = golfie.bind(zuuluu)(oscard, report);
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = global;
    offset = entity.Object;
    verify = offset.defineProperty;
    michal = {};
    tangon = true;
    michal['value'] = tangon;
    entity = '__esModule';
    entity = verify.bind(offset)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = option.bind(entity)(michal);
    var _closure1_slot3 = michal;
    michal = 1;
    michal = oscard[michal];
    michal = option.bind(entity)(michal);
    var _closure1_slot4 = michal;
    michal = 2;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    option = michal.RendererType;
    michal = 3;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    verify = michal.jsx;
    var _closure1_slot5 = verify;
    michal = michal.jsxs;
    var _closure1_slot6 = michal;
    michal = 'CacheActionsActionSheet';
    var _closure1_slot7 = michal;
    michal = {};
    option = option.PRESSABLE;
    michal['type'] = option;
    option = function() { // Original name: useCacheActionsTitle
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 7;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.ZVZVwc;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['title'] = option;
    option = null;
    michal['parent'] = option;
    option = 15;
    option = oscard[option];
    option = report.bind(entity)(option);
    option = option.FileWarningIcon;
    michal['IconComponent'] = option;
    option = function() { // Original name: handleCacheActionsPress
        tangon = _closure1_slot1;
        zuuluu = _closure1_slot2;
        entity = 4;
        zuuluu = zuuluu[entity];
        entity = undefined;
        report = tangon.bind(entity)(zuuluu);
        tangon = report.openLazy;
        zuuluu = global;
        golfie = zuuluu.Promise;
        oscard = golfie.resolve;
        zuuluu = {};
        option = _closure1_slot9;
        zuuluu['default'] = option;
        zuuluu = oscard.bind(golfie)(zuuluu);
        michal = _closure1_slot7;
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    michal['onPress'] = option;
    golfie = function() { // Original name: useCacheActionsPredicate
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            tangon = _closure1_slot0;
            report = _closure1_slot2;
            michal = 8;
            michal = report[michal];
            zuuluu = undefined;
            golfie = tangon.bind(zuuluu)(michal);
            oscard = golfie.useStateFromStores;
            entity = _closure1_slot4;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot4;
                entity = michal.isConnected;
                entity = entity.bind(michal)();
                return entity;
            };
            michal = oscard.bind(golfie)(michal, entity);
            entity = 9;
            entity = report[entity];
            entity = tangon.bind(zuuluu)(entity);
            zuuluu = entity.DeveloperMode;
            entity = zuuluu.useSetting;
            entity = entity.bind(zuuluu)();
            if(!entity) { _fun00004_ip = 91; continue _fun00003 }
 88:
            entity = michal;
 91:
            return entity;
        }
    };
    michal['usePredicate'] = golfie;
    michal['withArrow'] = tangon;
    tangon = 16;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/definitions/CacheActionsSetting.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();