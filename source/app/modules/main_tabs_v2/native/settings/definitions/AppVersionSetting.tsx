// app/modules/main_tabs_v2/native/settings/definitions/AppVersionSetting.tsx
export default (function(_, argBar, __, argCorge, ___, argFred, argPlugh) {
    report = argBar;
    options = argCorge;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = options;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    golf = verify.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(verify)(zulu, entity, mike);
    entity = 0;
    mike = oscar[entity];
    entity = undefined;
    mike = report.bind(entity)(mike);
    golf = mike.RendererType;
    mike = 1;
    mike = oscar[mike];
    options = options.bind(entity)(mike);
    mike = options.getConstants;
    mike = mike.bind(options)();
    var _closure1_slot3 = mike;
    mike = {};
    golf = golf.STATIC;
    mike['type'] = golf;
    golf = function() { // Original name: useAppVersionSettingTitle
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.H66MEh;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    mike['title'] = golf;
    golf = null;
    mike['parent'] = golf;
    golf = 4;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.ClydeIcon;
    mike['IconComponent'] = golf;
    tango = function() { // Original name: useAppVersionSettingTrailing
        _fun98162: for(var _fun98162_ip = 0; ; ) switch(_fun98162_ip) {
 0:
            mike = _closure1_slot0;
            verify = _closure1_slot2;
            options = 3;
            entity = verify[options];
            oscar = undefined;
            report = mike.bind(oscar)(entity);
            tango = report.getClientInfoString;
            entity = _closure1_slot3;
            entity = entity.ReleaseChannel;
            golf = tango.bind(report)(entity);
            entity = verify[options];
            tango = mike.bind(oscar)(entity);
            mike = tango.getClientInfoString;
            report = _closure1_slot1;
            entity = 1;
            entity = verify[entity];
            report = report.bind(oscar)(entity);
            entity = report.getBuildNumberLabel;
            entity = entity.bind(report)();
            mike = mike.bind(tango)(entity);
            tango = mike.includes;
            entity = 'dev';
            entity = tango.bind(mike)(entity);
            report = _closure1_slot0;
            tango = _closure1_slot2;
            tango = tango[options];
            report = report.bind(oscar)(tango);
            tango = report.getClientInfoString;
            zulu = _closure1_slot3;
            zulu = zulu.Version;
            oscar = tango.bind(report)(zulu);
            zulu = global;
            zulu = zulu.HermesInternal;
            report = zulu.concat;
            tango = '';
            zulu = ' (';
            if(entity) { _fun98162_ip = 199; continue _fun98162 }
 172:
            yankee = ') - ';
            kilo = tango;
            backup = oscar;
            foxtrot = zulu;
            romeo = mike;
            offset = golf;
            entity = kilo[report](backup, foxtrot, romeo, yankee, offset, verify);
            _fun98162_ip = 219; continue _fun98162;
 199:
            yankee = ')';
            kilo = tango;
            backup = oscar;
            foxtrot = zulu;
            romeo = golf;
            entity = kilo[report](backup, foxtrot, romeo, yankee, offset);
 219:
            return entity;
        }
    };
    mike['useTrailing'] = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.DeveloperMode;
    tango = tango.useSetting;
    mike['usePredicate'] = tango;
    tango = 6;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/settings/definitions/AppVersionSetting.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();