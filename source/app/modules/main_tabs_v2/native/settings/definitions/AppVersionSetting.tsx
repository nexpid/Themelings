// app/modules/main_tabs_v2/native/settings/definitions/AppVersionSetting.tsx
export default (function(_, argBar, __, argCor, ___, argFre, argPlu) {
    report = argBar;
    option = argCor;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = option;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    golfie = verify.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(verify)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    golfie = michal.RendererType;
    michal = 1;
    michal = oscard[michal];
    option = option.bind(entity)(michal);
    michal = option.getConstants;
    michal = michal.bind(option)();
    var _closure1_slot3 = michal;
    michal = {};
    golfie = golfie.STATIC;
    michal['type'] = golfie;
    golfie = function() { // Original name: useAppVersionSettingTitle
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.H66MEh;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['title'] = golfie;
    golfie = null;
    michal['parent'] = golfie;
    golfie = 4;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.ClydeIcon;
    michal['IconComponent'] = golfie;
    tangon = function() { // Original name: useAppVersionSettingTrailing
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = _closure1_slot0;
            verify = _closure1_slot2;
            option = 3;
            entity = verify[option];
            oscard = undefined;
            report = michal.bind(oscard)(entity);
            tangon = report.getClientInfoString;
            entity = _closure1_slot3;
            entity = entity.ReleaseChannel;
            golfie = tangon.bind(report)(entity);
            entity = verify[option];
            tangon = michal.bind(oscard)(entity);
            michal = tangon.getClientInfoString;
            report = _closure1_slot1;
            entity = 1;
            entity = verify[entity];
            report = report.bind(oscard)(entity);
            entity = report.getBuildNumberLabel;
            entity = entity.bind(report)();
            michal = michal.bind(tangon)(entity);
            tangon = michal.includes;
            entity = 'dev';
            entity = tangon.bind(michal)(entity);
            report = _closure1_slot0;
            tangon = _closure1_slot2;
            tangon = tangon[option];
            report = report.bind(oscard)(tangon);
            tangon = report.getClientInfoString;
            zuuluu = _closure1_slot3;
            zuuluu = zuuluu.Version;
            oscard = tangon.bind(report)(zuuluu);
            zuuluu = global;
            zuuluu = zuuluu.HermesInternal;
            report = zuuluu.concat;
            tangon = '';
            zuuluu = ' (';
            if(entity) { _fun00002_ip = 199; continue _fun00001 }
 172:
            yankee = ') - ';
            kiloes = tangon;
            backup = oscard;
            foxtra = zuuluu;
            romeon = michal;
            offset = golfie;
            entity = kiloes[report](backup, foxtra, romeon, yankee, offset, verify);
            _fun00002_ip = 219; continue _fun00001;
 199:
            yankee = ')';
            kiloes = tangon;
            backup = oscard;
            foxtra = zuuluu;
            romeon = golfie;
            entity = kiloes[report](backup, foxtra, romeon, yankee, offset);
 219:
            return entity;
        }
    };
    michal['useTrailing'] = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.DeveloperMode;
    tangon = tangon.useSetting;
    michal['usePredicate'] = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/definitions/AppVersionSetting.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();