// app/modules/main_tabs_v2/native/settings/definitions/AppVersionSetting.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var8 = metroImportAll;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var8;
    var _closure1_slot2 = var6;
    var1 = global;
    var9 = var1.Object;
    var7 = var9.defineProperty;
    var2 = {};
    var1 = true;
    var2['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var9)(var3, var1, var2);
    var1 = 0;
    var2 = var6[var1];
    var1 = undefined;
    var2 = var5.bind(var1)(var2);
    var7 = var2.RendererType;
    var2 = 1;
    var2 = var6[var2];
    var8 = var8.bind(var1)(var2);
    var2 = var8.getConstants;
    var2 = var2.bind(var8)();
    var _closure1_slot3 = var2;
    var2 = {};
    var7 = var7.STATIC;
    var2['type'] = var7;
    var7 = function useAppVersionSettingTitle() {
        var5 = _closure1_slot0;
        var6 = _closure1_slot2;
        var1 = 2;
        var2 = var6[var1];
        var4 = undefined;
        var2 = var5.bind(var4)(var2);
        var3 = var2.intl;
        var2 = var3.string;
        var1 = var6[var1];
        var1 = var5.bind(var4)(var1);
        var1 = var1.t;
        var1 = var1.H66MEh;
        var1 = var2.bind(var3)(var1);
        return var1;
    };
    var2['title'] = var7;
    var7 = null;
    var2['parent'] = var7;
    var7 = 4;
    var7 = var6[var7];
    var7 = var5.bind(var1)(var7);
    var7 = var7.ClydeIcon;
    var2['IconComponent'] = var7;
    var4 = function useAppVersionSettingTrailing() {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
            var2 = _closure1_slot0;
            var9 = _closure1_slot2;
            var8 = 3;
            var1 = var9[var8];
            var6 = undefined;
            var5 = var2.bind(var6)(var1);
            var4 = var5.getClientInfoString;
            var1 = _closure1_slot3;
            var1 = var1.ReleaseChannel;
            var7 = var4.bind(var5)(var1);
            var1 = var9[var8];
            var4 = var2.bind(var6)(var1);
            var2 = var4.getClientInfoString;
            var5 = _closure1_slot1;
            var1 = 1;
            var1 = var9[var1];
            var5 = var5.bind(var6)(var1);
            var1 = var5.getBuildNumberLabel;
            var1 = var1.bind(var5)();
            var2 = var2.bind(var4)(var1);
            var4 = var2.includes;
            var1 = 'dev';
            var1 = var4.bind(var2)(var1);
            var5 = _closure1_slot0;
            var4 = _closure1_slot2;
            var4 = var4[var8];
            var5 = var5.bind(var6)(var4);
            var4 = var5.getClientInfoString;
            var3 = _closure1_slot3;
            var3 = var3.Version;
            var6 = var4.bind(var5)(var3);
            var3 = global;
            var3 = var3.HermesInternal;
            var5 = var3.concat;
            var4 = '';
            var3 = ' (';
            if(var1) { _fun0001_ip = 199; continue _fun0001 }
 172:
            var11 = ') - ';
            var15 = var4;
            var14 = var6;
            var13 = var3;
            var12 = var2;
            var10 = var7;
            var1 = var15[var5](var14, var13, var12, var11, var10, var9);
            _fun0001_ip = 219; continue _fun0001;
 199:
            var11 = ')';
            var15 = var4;
            var14 = var6;
            var13 = var3;
            var12 = var7;
            var1 = var15[var5](var14, var13, var12, var11, var10);
 219:
            return var1;
        }
    };
    var2['useTrailing'] = var4;
    var4 = 5;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.DeveloperMode;
    var4 = var4.useSetting;
    var2['usePredicate'] = var4;
    var4 = 6;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/main_tabs_v2/native/settings/definitions/AppVersionSetting.tsx';
    var4 = var5.bind(var6)(var4);
    var3['default'] = var2;
    return var1;
})();