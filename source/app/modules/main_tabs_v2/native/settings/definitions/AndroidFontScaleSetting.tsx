// app/modules/main_tabs_v2/native/settings/definitions/AndroidFontScaleSetting.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, michal);
    entity = 0;
    golfie = oscard[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(golfie);
    var _closure1_slot2 = michal;
    michal = 1;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.useFontScaleStore;
    var _closure1_slot3 = michal;
    michal = 2;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    golfie = michal.MobileSetting;
    michal = 3;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    option = michal.RendererType;
    michal = 4;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.FontScales;
    var _closure1_slot4 = michal;
    michal = 5;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.jsx;
    var _closure1_slot5 = michal;
    michal = {};
    option = option.SLIDER;
    michal['type'] = option;
    option = function() { // Original name: title
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 9;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.i19n5O;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['title'] = option;
    golfie = golfie.APPEARANCE;
    michal['parent'] = golfie;
    tangon = function() { // Original name: useFontScaleSliderProps
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = _closure1_slot3;
            tangon = undefined;
            report = zuuluu.bind(tangon)();
            var _closure2_slot0 = report;
            oscard = report.persistedFontScale;
            zuuluu = null;
            zuuluu = zuuluu != oscard;
            golfie = undefined;
            if(!zuuluu) { _fun00002_ip = 56; continue _fun00001 }
 36:
            oscard = _closure1_slot4;
            tangon = oscard.indexOf;
            zuuluu = report.persistedFontScale;
            golfie = tangon.bind(oscard)(zuuluu);
 56:
            var _closure2_slot1 = golfie;
            tangon = _closure1_slot2;
            oscard = tangon.useCallback;
            zuuluu = function(argFoo) {
                entity = argFoo;
                var _closure3_slot0 = entity;
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot1;
                entity = 6;
                zuuluu = zuuluu[entity];
                entity = undefined;
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.batchUpdates;
                michal = function() {
                    zuuluu = _closure1_slot3;
                    michal = zuuluu.setState;
                    entity = {};
                    report = _closure1_slot4;
                    tangon = _closure3_slot0;
                    tangon = report[tangon];
                    entity['fontScale'] = tangon;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            michal = new Array(0);
            oscard = oscard.bind(tangon)(zuuluu, michal);
            var _closure2_slot2 = oscard;
            zuuluu = tangon.useMemo;
            michal = new Array(3);
            michal[0] = golfie;
            michal[1] = oscard;
            report = report.fontScale;
            michal[2] = report;
            entity = function() {
                entity = _closure2_slot0;
                entity = entity.fontScale;
                tangon = 1;
                michal = entity / tangon;
                entity = 100;
                michal = michal * entity;
                entity = '%';
                michal = michal + entity;
                entity = {};
                zuuluu = _closure2_slot1;
                entity['value'] = zuuluu;
                zuuluu = 0;
                entity['minimumValue'] = zuuluu;
                zuuluu = _closure1_slot4;
                golfie = zuuluu.length;
                golfie = golfie - tangon;
                entity['maximumValue'] = golfie;
                entity['step'] = tangon;
                oscard = _closure2_slot2;
                entity['onValueChange'] = oscard;
                golfie = _closure1_slot5;
                verify = _closure1_slot0;
                offset = _closure1_slot1;
                report = 7;
                report = offset[report];
                option = undefined;
                report = verify.bind(option)(report);
                oscard = report.CircleMinusIcon;
                report = {};
                report = golfie.bind(option)(oscard, report);
                entity['startIcon'] = report;
                report = 8;
                report = offset[report];
                report = verify.bind(option)(report);
                oscard = report.CirclePlusIcon;
                report = {};
                report = golfie.bind(option)(oscard, report);
                entity['endIcon'] = report;
                report = 9;
                oscard = offset[report];
                oscard = verify.bind(option)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = offset[report];
                report = verify.bind(option)(report);
                report = report.t;
                report = report.i19n5O;
                report = oscard.bind(golfie)(report);
                entity['accessibilityLabel'] = report;
                report = {};
                report['text'] = michal;
                entity['accessibilityValue'] = report;
                entity['valueLabel'] = michal;
                michal = zuuluu.indexOf;
                michal = michal.bind(zuuluu)(tangon);
                entity['defaultValue'] = michal;
                return entity;
            };
            entity = zuuluu.bind(tangon)(entity, michal);
            return entity;
        }
    };
    michal['useProps'] = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.isAndroid;
    michal['usePredicate'] = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/settings/definitions/AndroidFontScaleSetting.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();