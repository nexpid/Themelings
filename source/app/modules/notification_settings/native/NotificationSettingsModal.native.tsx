// app/modules/notification_settings/native/NotificationSettingsModal.native.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    romeo = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = golf;
    entity = function(argFoo, argBar, argBaz) { // Original name: _callSuper
        _fun127437: for(var _fun127437_ip = 0; ; ) switch(_fun127437_ip) {
 0:
            tango = argFoo;
            oscar = argBaz;
            mike = _closure1_slot8;
            zulu = undefined;
            entity = argBar;
            verify = mike.bind(zulu)(entity);
            mike = _closure1_slot7;
            entity = _closure1_slot39;
            entity = entity.bind(zulu)();
            if(entity) { _fun127437_ip = 51; continue _fun127437 }
 38:
            entity = verify.apply;
            entity = entity.bind(verify)(tango, oscar);
            _fun127437_ip = 92; continue _fun127437;
 51:
            golf = global;
            options = golf.Reflect;
            golf = options.construct;
            if(oscar) { _fun127437_ip = 71; continue _fun127437 }
 67:
            oscar = new Array(0);
 71:
            report = _closure1_slot8;
            report = report.bind(zulu)(tango);
            report = report.constructor;
            entity = golf.bind(options)(verify, oscar, report);
 92:
            entity = mike.bind(zulu)(tango, entity);
            return entity;
        }
    };
    var _closure1_slot38 = entity;
    entity = function() { // Original name: _isNativeReflectConstruct
        _fun127438: for(var _fun127438_ip = 0; ; ) switch(_fun127438_ip) {
 0:
 2: // try_start_0
            mike = global;
            zulu = mike.Boolean;
            zulu = zulu.prototype;
            tango = zulu.valueOf;
            zulu = tango.call;
            options = mike.Reflect;
            golf = options.construct;
            oscar = mike.Boolean;
            report = new Array(0);
            mike = function() {
                entity = undefined;
                return entity;
            };
            mike = golf.bind(options)(oscar, report, mike);
            mike = zulu.bind(tango)(mike);
            mike = !mike;
            var _closure2_slot0 = mike;
 72: // try_end0
            _fun127438_ip = 76; continue _fun127438;
 74: // catch_target0
            CatchBlockStart(arg_register=1);
 76:
            mike = function() { // Original name: _isNativeReflectConstruct
                entity = _closure2_slot0;
                entity = !entity;
                entity = !entity;
                return entity;
            };
            _closure1_slot39 = mike;
            entity = undefined;
            entity = mike.bind(entity)();
            return entity;
        }
    };
    var _closure1_slot39 = entity;
    entity = ['categories'];
    var _closure1_slot3 = entity;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    entity = 0;
    mike = golf[entity];
    entity = undefined;
    mike = romeo.bind(entity)(mike);
    var _closure1_slot4 = mike;
    mike = 1;
    mike = golf[mike];
    mike = romeo.bind(entity)(mike);
    var _closure1_slot5 = mike;
    mike = 2;
    mike = golf[mike];
    mike = romeo.bind(entity)(mike);
    var _closure1_slot6 = mike;
    mike = 3;
    mike = golf[mike];
    mike = romeo.bind(entity)(mike);
    var _closure1_slot7 = mike;
    mike = 4;
    mike = golf[mike];
    mike = romeo.bind(entity)(mike);
    var _closure1_slot8 = mike;
    mike = 5;
    mike = golf[mike];
    mike = romeo.bind(entity)(mike);
    var _closure1_slot9 = mike;
    mike = 6;
    report = golf[mike];
    mike = argCorge;
    mike = mike.bind(entity)(report);
    var _closure1_slot10 = mike;
    report = 7;
    report = golf[report];
    report = oscar.bind(entity)(report);
    options = report.View;
    var _closure1_slot11 = options;
    report = report.Linking;
    var _closure1_slot12 = report;
    report = 8;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.isGuildReadableType;
    var _closure1_slot13 = report;
    report = 9;
    report = golf[report];
    report = romeo.bind(entity)(report);
    var _closure1_slot14 = report;
    report = 10;
    report = golf[report];
    report = romeo.bind(entity)(report);
    var _closure1_slot15 = report;
    report = 11;
    report = golf[report];
    report = romeo.bind(entity)(report);
    var _closure1_slot16 = report;
    report = 12;
    report = golf[report];
    report = romeo.bind(entity)(report);
    var _closure1_slot17 = report;
    report = 13;
    report = golf[report];
    report = romeo.bind(entity)(report);
    var _closure1_slot18 = report;
    report = 14;
    report = golf[report];
    report = romeo.bind(entity)(report);
    var _closure1_slot19 = report;
    report = 15;
    report = golf[report];
    report = romeo.bind(entity)(report);
    var _closure1_slot20 = report;
    report = 16;
    report = golf[report];
    report = romeo.bind(entity)(report);
    var _closure1_slot21 = report;
    report = 17;
    report = golf[report];
    report = oscar.bind(entity)(report);
    options = report.AnalyticEvents;
    var _closure1_slot22 = options;
    options = report.UserNotificationSettings;
    var _closure1_slot23 = options;
    options = report.ChannelTypes;
    var _closure1_slot24 = options;
    options = report.NotificationSettingsSections;
    var _closure1_slot25 = options;
    options = report.SettingsPaneTypes;
    var _closure1_slot26 = options;
    options = report.MAX_MEMBERS_NOTIFY_ALL_MESSAGES;
    var _closure1_slot27 = options;
    options = report.GuildFeatures;
    var _closure1_slot28 = options;
    options = report.HighlightSettings;
    var _closure1_slot29 = options;
    options = report.HelpdeskArticles;
    var _closure1_slot30 = options;
    report = report.EMPTY_STRING_SNOWFLAKE_ID;
    var _closure1_slot31 = report;
    report = 18;
    options = golf[report];
    options = oscar.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot32 = options;
    options = golf[report];
    options = oscar.bind(entity)(options);
    options = options.jsxs;
    var _closure1_slot33 = options;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.Fragment;
    var _closure1_slot34 = report;
    report = 19;
    report = golf[report];
    verify = oscar.bind(entity)(report);
    options = verify.createLegacyClassComponentStyles;
    report = {};
    offset = {'height': 16, 'width': 16, 'opacity': 0.6};
    report['channelIcon'] = offset;
    offset = {'flexDirection': 'row', 'alignItems': 'center'};
    report['channelOverrideType'] = offset;
    offset = {};
    yankee = 'right';
    offset['textAlign'] = yankee;
    report['channelOverrideTypeText'] = offset;
    offset = {'fontSize': 12, 'color': null, 'paddingHorizontal': 12, 'marginTop': 4};
    yankee = 20;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.unsafe_rawColors;
    foxtrot = foxtrot.BLUE_345;
    offset['color'] = foxtrot;
    report['highlightsLearnMore'] = offset;
    offset = {'height': 1, 'backgroundColor': null, 'marginVertical': 24};
    yankee = golf[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BORDER_SUBTLE;
    offset['backgroundColor'] = yankee;
    report['separator'] = offset;
    report = options.bind(verify)(report);
    var _closure1_slot35 = report;
    report = mike.PureComponent;
    mike = function(argFoo) {
        tango = function(argFoo) { // Original name: NotificationSettings
            oscar = this;
            yankee = 0;
            golf = copyRestArgs(yankee);
            zulu = _closure1_slot5;
            report = _closure2_slot0;
            tango = undefined;
            zulu = zulu.bind(tango)(oscar, report);
            zulu = _closure1_slot38;
            entity = new Array(0);
            yankee = entity;
            offset = golf;
            verify = 0;
            golf = arraySpread(yankee, offset, verify);
            entity = zulu.bind(tango)(oscar, report, entity);
            var _closure3_slot0 = entity;
            zulu = function() {
                _fun127443: for(var _fun127443_ip = 0; ; ) switch(_fun127443_ip) {
 0:
                    entity = _closure3_slot0;
                    entity = entity.props;
                    report = entity.guildId;
                    entity = entity.muted;
                    zulu = _closure1_slot1;
                    verify = _closure1_slot2;
                    if(entity) { _fun127443_ip = 130; continue _fun127443 }
 37:
                    mike = 21;
                    mike = verify[mike];
                    yankee = undefined;
                    offset = zulu.bind(yankee)(mike);
                    options = offset.openLazy;
                    tango = _closure1_slot0;
                    mike = 23;
                    mike = verify[mike];
                    golf = tango.bind(yankee)(mike);
                    mike = 22;
                    tango = verify[mike];
                    mike = verify.paths;
                    golf = golf.bind(yankee)(tango, mike);
                    mike = global;
                    mike = mike.HermesInternal;
                    tango = mike.concat;
                    mike = 'muteSettings';
                    tango = tango.bind(mike)(report);
                    mike = {};
                    mike['guildId'] = report;
                    mike = options.bind(offset)(golf, tango, mike);
                    _fun127443_ip = 203; continue _fun127443;
 130:
                    mike = 24;
                    mike = verify[mike];
                    options = undefined;
                    tango = zulu.bind(options)(mike);
                    zulu = tango.updateGuildNotificationSettings;
                    mike = {};
                    golf = !entity;
                    mike['muted'] = golf;
                    golf = _closure1_slot0;
                    oscar = 25;
                    oscar = verify[oscar];
                    oscar = golf.bind(options)(oscar);
                    golf = oscar.NotificationLabel;
                    oscar = golf.muted;
                    entity = !entity;
                    entity = oscar.bind(golf)(entity);
                    entity = zulu.bind(tango)(report, mike, entity);
 203:
                    entity = undefined;
                    return entity;
                }
            };
            entity['handleMutePress'] = zulu;
            zulu = function(argFoo, argBar, argBaz) {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 24;
                mike = mike[entity];
                entity = undefined;
                oscar = zulu.bind(entity)(mike);
                report = oscar.updateGuildNotificationSettings;
                mike = _closure3_slot0;
                mike = mike.props;
                tango = mike.guildId;
                zulu = {};
                golf = argBar;
                mike = argFoo;
                zulu[mike] = golf;
                mike = argBaz;
                mike = report.bind(oscar)(tango, zulu, mike);
                return entity;
            };
            entity['handleToggleChange'] = zulu;
            zulu = function(argFoo) {
                options = argFoo;
                tango = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 24;
                zulu = verify[entity];
                entity = undefined;
                oscar = tango.bind(entity)(zulu);
                report = oscar.updateGuildNotificationSettings;
                zulu = _closure3_slot0;
                zulu = zulu.props;
                tango = zulu.guildId;
                zulu = {};
                zulu['message_notifications'] = options;
                golf = _closure1_slot0;
                mike = 25;
                mike = verify[mike];
                mike = golf.bind(entity)(mike);
                golf = mike.NotificationLabel;
                mike = golf.notifications;
                mike = mike.bind(golf)(options);
                mike = report.bind(oscar)(tango, zulu, mike);
                return entity;
            };
            entity['handleTypeChange'] = zulu;
            zulu = function() {
                entity = _closure3_slot0;
                entity = entity.props;
                report = entity.guildId;
                tango = entity.navigation;
                zulu = tango.push;
                entity = _closure1_slot25;
                mike = entity.ADD_OVERRIDE;
                entity = {};
                entity['guildId'] = report;
                entity = zulu.bind(tango)(mike, entity);
                entity = undefined;
                return entity;
            };
            entity['handleAddOverride'] = zulu;
            mike = function(argFoo) {
                entity = _closure3_slot0;
                entity = entity.props;
                tango = entity.navigation;
                zulu = tango.push;
                entity = _closure1_slot25;
                mike = entity.CHANNEL_OVERRIDE;
                entity = {};
                report = argFoo;
                entity['channelId'] = report;
                entity = zulu.bind(tango)(mike, entity);
                entity = undefined;
                return entity;
            };
            entity['handleChannelSelect'] = mike;
            return entity;
        };
        var _closure2_slot0 = tango;
        report = _closure1_slot9;
        zulu = undefined;
        mike = argFoo;
        mike = report.bind(zulu)(tango, mike);
        mike = _closure1_slot6;
        report = {};
        entity = 'componentDidMount';
        report['key'] = entity;
        entity = function() { // Original name: value
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 26;
            mike = mike[entity];
            entity = undefined;
            report = zulu.bind(entity)(mike);
            tango = report.trackWithMetadata;
            mike = _closure1_slot22;
            zulu = mike.SETTINGS_PANE_VIEWED;
            mike = {};
            golf = 'guild';
            mike['settings_type'] = golf;
            oscar = _closure1_slot26;
            oscar = oscar.GUILD_NOTIFICATION_SETTINGS;
            mike['destination_pane'] = oscar;
            mike = tango.bind(report)(zulu, mike);
            return entity;
        };
        report['value'] = entity;
        entity = new Array(8);
        entity[0] = report;
        report = {};
        golf = 'renderServerSettings';
        report['key'] = golf;
        golf = function() { // Original name: value
            _fun127449: for(var _fun127449_ip = 0; ; ) switch(_fun127449_ip) {
 0:
                foxtrot = this;
                var _closure3_slot0 = foxtrot;
                entity = foxtrot.props;
                romeo = entity.messageNotifications;
                kilo = entity.muted;
                echo = entity.guildMemberCount;
                entity = entity.shouldUseNewNotificationSystem;
                zulu = _closure1_slot35;
                mike = foxtrot.context;
                report = undefined;
                offset = zulu.bind(report)(mike);
                tango = _closure1_slot33;
                if(entity) { _fun127449_ip = 702; continue _fun127449 }
 67:
                source = _closure1_slot0;
                yankee = _closure1_slot2;
                oscar = 30;
                entity = yankee[oscar];
                entity = source.bind(report)(entity);
                mike = entity.FormRadioGroup;
                entity = {};
                update = 31;
                zulu = yankee[update];
                zulu = source.bind(report)(zulu);
                verify = zulu.intl;
                options = verify.string;
                zulu = yankee[update];
                zulu = source.bind(report)(zulu);
                zulu = zulu.t;
                zulu = zulu.lprV7e;
                zulu = options.bind(verify)(zulu);
                entity['title'] = zulu;
                entity['value'] = romeo;
                zulu = false;
                entity['hasIcons'] = zulu;
                verify = _closure1_slot32;
                zulu = yankee[oscar];
                zulu = source.bind(report)(zulu);
                options = zulu.FormRadioRow;
                zulu = {};
                output = 'right';
                zulu['align'] = output;
                sizing = yankee[update];
                sizing = source.bind(report)(sizing);
                result = sizing.intl;
                sizing = result.string;
                yankee = yankee[update];
                yankee = source.bind(report)(yankee);
                yankee = yankee.t;
                yankee = yankee.n/bTaW;
                yankee = sizing.bind(result)(yankee);
                zulu['label'] = yankee;
                zulu['disabled'] = kilo;
                yankee = _closure1_slot23;
                yankee = yankee.ALL_MESSAGES;
                zulu['value'] = yankee;
                result = null;
                sizing = result != echo;
                yankee = null;
                if(!sizing) { _fun127449_ip = 329; continue _fun127449 }
 264:
                sizing = _closure1_slot27;
                sizing = echo >= sizing;
                yankee = null;
                if(!sizing) { _fun127449_ip = 329; continue _fun127449 }
 277:
                source = _closure1_slot0;
                sizing = _closure1_slot2;
                result = sizing[update];
                result = source.bind(report)(result);
                echo = result.intl;
                result = echo.string;
                sizing = sizing[update];
                sizing = source.bind(report)(sizing);
                sizing = sizing.t;
                sizing = sizing.Dh5p5u;
                yankee = result.bind(echo)(sizing);
 329:
                zulu['subLabel'] = yankee;
                yankee = _closure1_slot23;
                sizing = yankee.ALL_MESSAGES;
                sizing = romeo === sizing;
                zulu['selected'] = sizing;
                sizing = function() { // Original name: onPress
                    zulu = _closure3_slot0;
                    mike = zulu.handleTypeChange;
                    entity = _closure1_slot23;
                    entity = entity.ALL_MESSAGES;
                    entity = mike.bind(zulu)(entity);
                    entity = undefined;
                    return entity;
                };
                zulu['onPress'] = sizing;
                options = verify.bind(report)(options, zulu);
                zulu = new Array(5);
                zulu[0] = options;
                verify = _closure1_slot32;
                echo = _closure1_slot0;
                sizing = _closure1_slot2;
                options = sizing[oscar];
                options = echo.bind(report)(options);
                result = options.FormDivider;
                options = {};
                options = verify.bind(report)(result, options);
                zulu[1] = options;
                options = sizing[oscar];
                options = echo.bind(report)(options);
                result = options.FormRadioRow;
                options = {};
                options['align'] = output;
                source = sizing[update];
                source = echo.bind(report)(source);
                sequence = source.intl;
                vacuum = sequence.format;
                source = sizing[update];
                source = echo.bind(report)(source);
                source = source.t;
                control = source.L2hmY2;
                source = {};
                source = vacuum.bind(sequence)(control, source);
                options['label'] = source;
                source = yankee.ONLY_MENTIONS;
                options['value'] = source;
                options['disabled'] = kilo;
                source = function() { // Original name: onPress
                    zulu = _closure3_slot0;
                    mike = zulu.handleTypeChange;
                    entity = _closure1_slot23;
                    entity = entity.ONLY_MENTIONS;
                    entity = mike.bind(zulu)(entity);
                    entity = undefined;
                    return entity;
                };
                options['onPress'] = source;
                source = yankee.ONLY_MENTIONS;
                source = romeo === source;
                options['selected'] = source;
                options = verify.bind(report)(result, options);
                zulu[2] = options;
                options = sizing[oscar];
                options = echo.bind(report)(options);
                result = options.FormDivider;
                options = {};
                options = verify.bind(report)(result, options);
                zulu[3] = options;
                oscar = sizing[oscar];
                oscar = echo.bind(report)(oscar);
                options = oscar.FormRadioRow;
                oscar = {};
                oscar['align'] = output;
                output = sizing[update];
                output = echo.bind(report)(output);
                result = output.intl;
                output = result.string;
                sizing = sizing[update];
                sizing = echo.bind(report)(sizing);
                sizing = sizing.t;
                sizing = sizing.CtVGyc;
                sizing = output.bind(result)(sizing);
                oscar['label'] = sizing;
                sizing = yankee.NO_MESSAGES;
                oscar['value'] = sizing;
                oscar['disabled'] = kilo;
                backup = function() { // Original name: onPress
                    zulu = _closure3_slot0;
                    mike = zulu.handleTypeChange;
                    entity = _closure1_slot23;
                    entity = entity.NO_MESSAGES;
                    entity = mike.bind(zulu)(entity);
                    entity = undefined;
                    return entity;
                };
                oscar['onPress'] = backup;
                yankee = yankee.NO_MESSAGES;
                yankee = romeo === yankee;
                oscar['selected'] = yankee;
                oscar = verify.bind(report)(options, oscar);
                zulu[4] = oscar;
                entity['children'] = zulu;
                entity = tango.bind(report)(mike, entity);
                _fun127449_ip = 949; continue _fun127449;
 702:
                zulu = _closure1_slot34;
                mike = {};
                verify = _closure1_slot11;
                oscar = {};
                options = {};
                yankee = 12;
                options['marginHorizontal'] = yankee;
                oscar['style'] = options;
                options = _closure1_slot32;
                romeo = _closure1_slot0;
                backup = _closure1_slot2;
                golf = 27;
                golf = backup[golf];
                golf = romeo.bind(report)(golf);
                yankee = golf.NotificationSettingsGuildPresets;
                golf = {};
                kilo = foxtrot.props;
                kilo = kilo.guildId;
                golf['guildId'] = kilo;
                yankee = options.bind(report)(yankee, golf);
                golf = new Array(3);
                golf[0] = yankee;
                yankee = 28;
                yankee = backup[yankee];
                yankee = romeo.bind(report)(yankee);
                sizing = yankee.NotificationSettingsGuildMessageNotification;
                yankee = {};
                output = {};
                kilo = 24;
                output['marginTop'] = kilo;
                yankee['style'] = output;
                output = foxtrot.props;
                output = output.guildId;
                yankee['guildId'] = output;
                yankee = options.bind(report)(sizing, yankee);
                golf[1] = yankee;
                yankee = 29;
                yankee = backup[yankee];
                yankee = romeo.bind(report)(yankee);
                romeo = yankee.NotificationSettingsGuildMessageUnread;
                yankee = {};
                backup = {};
                backup['marginTop'] = kilo;
                yankee['style'] = backup;
                foxtrot = foxtrot.props;
                foxtrot = foxtrot.guildId;
                yankee['guildId'] = foxtrot;
                yankee = options.bind(report)(romeo, yankee);
                golf[2] = yankee;
                oscar['children'] = golf;
                golf = tango.bind(report)(verify, oscar);
                oscar = new Array(2);
                oscar[0] = golf;
                golf = {};
                offset = offset.separator;
                golf['style'] = offset;
                golf = options.bind(report)(verify, golf);
                oscar[1] = golf;
                mike['children'] = oscar;
                entity = tango.bind(report)(zulu, mike);
 949:
                return entity;
            }
        };
        report['value'] = golf;
        entity[1] = report;
        report = {};
        golf = 'renderNotificationOptions';
        report['key'] = golf;
        golf = function() { // Original name: value
            _fun127453: for(var _fun127453_ip = 0; ; ) switch(_fun127453_ip) {
 0:
                entity = this;
                var _closure3_slot0 = entity;
                zulu = _closure1_slot35;
                mike = entity.context;
                tango = undefined;
                sequence = zulu.bind(tango)(mike);
                entity = entity.props;
                backup = entity.muted;
                yankee = entity.suppressEveryone;
                result = entity.suppressRoles;
                kilo = entity.mobilePush;
                output = entity.muteEvents;
                echo = entity.notifyHighlights;
                entity = entity.guildId;
                var _closure3_slot1 = entity;
                zulu = _closure1_slot33;
                mike = _closure1_slot34;
                entity = {};
                control = _closure1_slot0;
                sizing = _closure1_slot2;
                offset = 30;
                report = sizing[offset];
                report = control.bind(tango)(report);
                oscar = report.FormSection;
                report = {};
                golf = {};
                romeo = _closure1_slot32;
                options = sizing[offset];
                options = control.bind(tango)(options);
                source = options.FormHint;
                options = {};
                update = 31;
                vacuum = sizing[update];
                vacuum = control.bind(tango)(vacuum);
                record = vacuum.intl;
                config = record.string;
                vacuum = sizing[update];
                vacuum = control.bind(tango)(vacuum);
                vacuum = vacuum.t;
                vacuum = vacuum.Vw/Xn5;
                vacuum = config.bind(record)(vacuum);
                options['children'] = vacuum;
                source = romeo.bind(tango)(source, options);
                options = new Array(2);
                options[0] = source;
                source = 32;
                source = sizing[source];
                source = control.bind(tango)(source);
                vacuum = source.LegacyText;
                source = {};
                sequence = sequence.highlightsLearnMore;
                source['style'] = sequence;
                sequence = 'link';
                source['accessibilityRole'] = sequence;
                sequence = function() { // Original name: onPress
                    zulu = _closure1_slot12;
                    mike = zulu.openURL;
                    oscar = _closure1_slot1;
                    report = _closure1_slot2;
                    tango = 33;
                    report = report[tango];
                    tango = undefined;
                    report = oscar.bind(tango)(report);
                    tango = report.getArticleURL;
                    entity = _closure1_slot30;
                    entity = entity.HIGHLIGHTS;
                    entity = tango.bind(report)(entity);
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                source['onPress'] = sequence;
                sequence = sizing[update];
                sequence = control.bind(tango)(sequence);
                record = sequence.intl;
                config = record.string;
                sequence = sizing[update];
                sequence = control.bind(tango)(sequence);
                sequence = sequence.t;
                sequence = sequence.PRBn9P;
                sequence = config.bind(record)(sequence);
                source['children'] = sequence;
                source = romeo.bind(tango)(vacuum, source);
                options[1] = source;
                golf['children'] = options;
                golf = zulu.bind(tango)(mike, golf);
                report['hint'] = golf;
                golf = sizing[offset];
                golf = control.bind(tango)(golf);
                options = golf.FormSwitchRow;
                golf = {};
                source = sizing[update];
                source = control.bind(tango)(source);
                config = source.intl;
                sequence = config.format;
                source = sizing[update];
                source = control.bind(tango)(source);
                source = source.t;
                vacuum = source.OWiWAg;
                source = {};
                source = sequence.bind(config)(vacuum, source);
                golf['label'] = source;
                golf['value'] = yankee;
                yankee = function(argFoo) { // Original name: onValueChange
                    oscar = argFoo;
                    report = _closure3_slot0;
                    tango = report.handleToggleChange;
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 25;
                    mike = mike[entity];
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    zulu = mike.NotificationLabel;
                    mike = zulu.suppressEveryone;
                    zulu = mike.bind(zulu)(oscar);
                    mike = 'suppress_everyone';
                    mike = tango.bind(report)(mike, oscar, zulu);
                    return entity;
                };
                golf['onValueChange'] = yankee;
                options = romeo.bind(tango)(options, golf);
                golf = new Array(3);
                golf[0] = options;
                options = sizing[offset];
                options = control.bind(tango)(options);
                yankee = options.FormSwitchRow;
                options = {};
                source = sizing[update];
                source = control.bind(tango)(source);
                sequence = source.intl;
                vacuum = sequence.string;
                source = sizing[update];
                source = control.bind(tango)(source);
                source = source.t;
                source = source.O/QdoK;
                source = vacuum.bind(sequence)(source);
                options['label'] = source;
                options['value'] = result;
                result = function(argFoo) { // Original name: onValueChange
                    oscar = argFoo;
                    report = _closure3_slot0;
                    tango = report.handleToggleChange;
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 25;
                    mike = mike[entity];
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    zulu = mike.NotificationLabel;
                    mike = zulu.suppressRoles;
                    zulu = mike.bind(zulu)(oscar);
                    mike = 'suppress_roles';
                    mike = tango.bind(report)(mike, oscar, zulu);
                    return entity;
                };
                options['onValueChange'] = result;
                options = romeo.bind(tango)(yankee, options);
                golf[1] = options;
                options = sizing[offset];
                options = control.bind(tango)(options);
                yankee = options.FormSwitchRow;
                options = {};
                options['disabled'] = backup;
                result = sizing[update];
                result = control.bind(tango)(result);
                source = result.intl;
                result = source.string;
                sizing = sizing[update];
                sizing = control.bind(tango)(sizing);
                sizing = sizing.t;
                sizing = sizing.gPuteH;
                sizing = result.bind(source)(sizing);
                options['label'] = sizing;
                sizing = backup;
                if(sizing) { _fun127453_ip = 604; continue _fun127453 }
 590:
                result = _closure1_slot29;
                result = result.DISABLED;
                sizing = echo === result;
 604:
                options['value'] = sizing;
                sizing = function(argFoo) { // Original name: onValueChange
                    _fun127457: for(var _fun127457_ip = 0; ; ) switch(_fun127457_ip) {
 0:
                        mike = argFoo;
                        tango = _closure1_slot1;
                        zulu = _closure1_slot2;
                        entity = 24;
                        zulu = zulu[entity];
                        entity = undefined;
                        oscar = tango.bind(entity)(zulu);
                        report = oscar.updateGuildNotificationSettings;
                        tango = _closure3_slot1;
                        zulu = {};
                        verify = _closure1_slot29;
                        if(mike) { _fun127457_ip = 58; continue _fun127457 }
 50:
                        options = verify.ENABLED;
                        _fun127457_ip = 64; continue _fun127457;
 58:
                        options = verify.DISABLED;
 64:
                        zulu['notify_highlights'] = options;
                        options = _closure1_slot0;
                        verify = _closure1_slot2;
                        golf = 25;
                        golf = verify[golf];
                        golf = options.bind(entity)(golf);
                        options = golf.NotificationLabel;
                        golf = options.highlights;
                        mike = !mike;
                        mike = golf.bind(options)(mike);
                        mike = report.bind(oscar)(tango, zulu, mike);
                        return entity;
                    }
                };
                options['onValueChange'] = sizing;
                options = romeo.bind(tango)(yankee, options);
                golf[2] = options;
                report['children'] = golf;
                oscar = zulu.bind(tango)(oscar, report);
                report = new Array(2);
                report[0] = oscar;
                options = _closure1_slot33;
                echo = _closure1_slot0;
                sizing = _closure1_slot2;
                oscar = sizing[offset];
                oscar = echo.bind(tango)(oscar);
                golf = oscar.FormSection;
                oscar = {};
                romeo = _closure1_slot32;
                verify = sizing[offset];
                verify = echo.bind(tango)(verify);
                yankee = verify.FormSwitchRow;
                verify = {};
                result = sizing[update];
                result = echo.bind(tango)(result);
                control = result.intl;
                source = control.string;
                result = sizing[update];
                result = echo.bind(tango)(result);
                result = result.t;
                result = result.ONG3Y2;
                result = source.bind(control)(result);
                verify['label'] = result;
                verify['value'] = output;
                output = function(argFoo) { // Original name: onValueChange
                    oscar = argFoo;
                    report = _closure3_slot0;
                    tango = report.handleToggleChange;
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 25;
                    mike = mike[entity];
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    zulu = mike.NotificationLabel;
                    mike = zulu.mutedEvents;
                    zulu = mike.bind(zulu)(oscar);
                    mike = 'mute_scheduled_events';
                    mike = tango.bind(report)(mike, oscar, zulu);
                    return entity;
                };
                verify['onValueChange'] = output;
                yankee = romeo.bind(tango)(yankee, verify);
                verify = new Array(3);
                verify[0] = yankee;
                yankee = sizing[offset];
                yankee = echo.bind(tango)(yankee);
                output = yankee.FormDivider;
                yankee = {};
                yankee = romeo.bind(tango)(output, yankee);
                verify[1] = yankee;
                offset = sizing[offset];
                offset = echo.bind(tango)(offset);
                yankee = offset.FormSwitchRow;
                offset = {};
                offset['disabled'] = backup;
                output = sizing[update];
                output = echo.bind(tango)(output);
                result = output.intl;
                output = result.string;
                sizing = sizing[update];
                sizing = echo.bind(tango)(sizing);
                sizing = sizing.t;
                sizing = sizing.h1DL6+;
                sizing = output.bind(result)(sizing);
                offset['label'] = sizing;
                backup = !backup;
                if(!backup) { _fun127453_ip = 881; continue _fun127453 }
 878:
                backup = kilo;
 881:
                offset['value'] = backup;
                foxtrot = function(argFoo) { // Original name: onValueChange
                    oscar = argFoo;
                    report = _closure3_slot0;
                    tango = report.handleToggleChange;
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 25;
                    mike = mike[entity];
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    zulu = mike.NotificationLabel;
                    mike = zulu.mobilePush;
                    zulu = mike.bind(zulu)(oscar);
                    mike = 'mobile_push';
                    mike = tango.bind(report)(mike, oscar, zulu);
                    return entity;
                };
                offset['onValueChange'] = foxtrot;
                offset = romeo.bind(tango)(yankee, offset);
                verify[2] = offset;
                oscar['children'] = verify;
                oscar = options.bind(tango)(golf, oscar);
                report[1] = oscar;
                entity['children'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            }
        };
        report['value'] = golf;
        entity[2] = report;
        report = {};
        golf = 'renderMuteSection';
        report['key'] = golf;
        golf = function() { // Original name: value
            _fun127460: for(var _fun127460_ip = 0; ; ) switch(_fun127460_ip) {
 0:
                oscar = this;
                entity = oscar.props;
                mike = entity.muted;
                verify = entity.muteConfig;
                foxtrot = entity.guild;
                entity = entity.shouldUseNewNotificationSystem;
                if(entity) { _fun127460_ip = 469; continue _fun127460 }
 37:
                zulu = _closure1_slot0;
                entity = _closure1_slot2;
                romeo = 31;
                tango = entity[romeo];
                offset = undefined;
                tango = zulu.bind(offset)(tango);
                golf = tango.intl;
                report = golf.format;
                entity = entity[romeo];
                entity = zulu.bind(offset)(entity);
                entity = entity.t;
                if(mike) { _fun127460_ip = 125; continue _fun127460 }
 89:
                tango = entity.J+7D9P;
                zulu = {};
                options = null;
                backup = options == foxtrot;
                options = undefined;
                if(backup) { _fun127460_ip = 113; continue _fun127460 }
 108:
                options = foxtrot.name;
 113:
                zulu['name'] = options;
                zulu = report.bind(golf)(tango, zulu);
                _fun127460_ip = 159; continue _fun127460;
 125:
                tango = entity.e8hzDQ;
                entity = {};
                options = null;
                backup = options == foxtrot;
                options = undefined;
                if(backup) { _fun127460_ip = 149; continue _fun127460 }
 144:
                options = foxtrot.name;
 149:
                entity['name'] = options;
                zulu = report.bind(golf)(tango, entity);
 159:
                golf = _closure1_slot32;
                options = _closure1_slot0;
                entity = _closure1_slot2;
                sizing = 30;
                tango = entity[sizing];
                tango = options.bind(offset)(tango);
                report = tango.FormSection;
                tango = {};
                foxtrot = entity[sizing];
                foxtrot = options.bind(offset)(foxtrot);
                backup = foxtrot.FormHint;
                foxtrot = {};
                kilo = entity[romeo];
                kilo = options.bind(offset)(kilo);
                output = kilo.intl;
                kilo = output.string;
                romeo = entity[romeo];
                romeo = options.bind(offset)(romeo);
                romeo = romeo.t;
                romeo = romeo.8wbTQ0;
                romeo = kilo.bind(output)(romeo);
                foxtrot['children'] = romeo;
                romeo = 'mute-hint';
                romeo = golf.bind(offset)(backup, foxtrot, romeo);
                tango['hint'] = romeo;
                entity = entity[sizing];
                entity = options.bind(offset)(entity);
                options = entity.FormRow;
                entity = {};
                entity['label'] = zulu;
                zulu = oscar.handleMutePress;
                entity['onPress'] = zulu;
                romeo = null;
                if(mike) { _fun127460_ip = 351; continue _fun127460 }
 310:
                kilo = _closure1_slot32;
                backup = _closure1_slot0;
                foxtrot = _closure1_slot2;
                foxtrot = foxtrot[sizing];
                foxtrot = backup.bind(offset)(foxtrot);
                foxtrot = foxtrot.FormRow;
                backup = foxtrot.Arrow;
                foxtrot = {};
                romeo = kilo.bind(offset)(backup, foxtrot);
 351:
                entity['trailing'] = romeo;
                entity = golf.bind(offset)(options, entity);
                tango['children'] = entity;
                entity = 'mute';
                tango = golf.bind(offset)(report, tango, entity);
                entity = new Array(2);
                entity[0] = tango;
                zulu = null;
                if(!mike) { _fun127460_ip = 463; continue _fun127460 }
 390:
                options = _closure1_slot32;
                golf = _closure1_slot1;
                romeo = _closure1_slot2;
                tango = 35;
                report = romeo[tango];
                golf = golf.bind(offset)(report);
                report = {};
                report['muteConfig'] = verify;
                yankee = _closure1_slot0;
                tango = romeo[tango];
                tango = yankee.bind(offset)(tango);
                tango = tango.MuteSettingType;
                tango = tango.SERVER;
                report['type'] = tango;
                tango = 'muted-until';
                zulu = options.bind(offset)(golf, report, tango);
 463:
                entity[1] = zulu;
                return entity;
 469:
                entity = null;
                if(!mike) { _fun127460_ip = 625; continue _fun127460 }
 477:
                report = _closure1_slot32;
                options = _closure1_slot0;
                offset = _closure1_slot2;
                golf = 34;
                mike = offset[golf];
                tango = undefined;
                mike = options.bind(tango)(mike);
                zulu = mike.NotificationSettingsMuteBanner;
                mike = {};
                yankee = 31;
                romeo = offset[yankee];
                romeo = options.bind(tango)(romeo);
                foxtrot = romeo.intl;
                romeo = foxtrot.string;
                yankee = offset[yankee];
                yankee = options.bind(tango)(yankee);
                yankee = yankee.t;
                yankee = yankee.ZSkXJS;
                yankee = romeo.bind(foxtrot)(yankee);
                mike['title'] = yankee;
                golf = offset[golf];
                options = options.bind(tango)(golf);
                golf = options.getMuteBannerSubtitleFromConfig;
                golf = golf.bind(options)(verify);
                mike['subtitle'] = golf;
                golf = {'marginHorizontal': 12, 'marginBottom': 16};
                mike['style'] = golf;
                oscar = oscar.handleMutePress;
                mike['onPressUnmute'] = oscar;
                entity = report.bind(tango)(zulu, mike);
 625:
                return entity;
            }
        };
        report['value'] = golf;
        entity[3] = report;
        report = {};
        golf = 'renderChannels';
        report['key'] = golf;
        golf = function() { // Original name: value
            options = this;
            var _closure3_slot0 = options;
            oscar = _closure1_slot32;
            tango = _closure1_slot0;
            golf = _closure1_slot2;
            zulu = 30;
            entity = golf[zulu];
            report = undefined;
            entity = tango.bind(report)(entity);
            offset = entity.FormSection;
            verify = {};
            romeo = 31;
            entity = golf[romeo];
            entity = tango.bind(report)(entity);
            backup = entity.intl;
            yankee = backup.string;
            entity = golf[romeo];
            entity = tango.bind(report)(entity);
            entity = entity.t;
            entity = entity.O4TIvr;
            entity = yankee.bind(backup)(entity);
            verify['title'] = entity;
            entity = golf[zulu];
            entity = tango.bind(report)(entity);
            yankee = entity.FormRow;
            entity = {};
            sizing = _closure1_slot1;
            foxtrot = 36;
            foxtrot = golf[foxtrot];
            backup = sizing.bind(report)(foxtrot);
            foxtrot = {};
            kilo = 37;
            kilo = golf[kilo];
            kilo = sizing.bind(report)(kilo);
            foxtrot['source'] = kilo;
            foxtrot = oscar.bind(report)(backup, foxtrot);
            entity['leading'] = foxtrot;
            foxtrot = golf[romeo];
            foxtrot = tango.bind(report)(foxtrot);
            backup = foxtrot.intl;
            foxtrot = backup.string;
            romeo = golf[romeo];
            romeo = tango.bind(report)(romeo);
            romeo = romeo.t;
            romeo = romeo.quib7e;
            romeo = foxtrot.bind(backup)(romeo);
            entity['label'] = romeo;
            romeo = options.handleAddOverride;
            entity['onPress'] = romeo;
            entity = oscar.bind(report)(yankee, entity);
            verify['children'] = entity;
            entity = 'override-header';
            verify = oscar.bind(report)(offset, verify, entity);
            entity = new Array(2);
            entity[0] = verify;
            zulu = golf[zulu];
            zulu = tango.bind(report)(zulu);
            tango = zulu.FormSection;
            zulu = {};
            golf = options.getOverriddenChannels;
            options = golf.bind(options)();
            golf = options.map;
            mike = function(argFoo) {
                zulu = _closure3_slot0;
                mike = zulu.renderChannel;
                entity = argFoo;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            mike = golf.bind(options)(mike);
            zulu['children'] = mike;
            mike = 'override-channels';
            mike = oscar.bind(report)(tango, zulu, mike);
            entity[1] = mike;
            return entity;
        };
        report['value'] = golf;
        entity[4] = report;
        report = {};
        golf = 'renderChannel';
        report['key'] = golf;
        golf = function(argFoo) { // Original name: value
            _fun127463: for(var _fun127463_ip = 0; ; ) switch(_fun127463_ip) {
 0:
                entity = argFoo;
                mike = this;
                var _closure3_slot0 = mike;
                var _closure3_slot1 = entity;
                tango = _closure1_slot35;
                zulu = mike.context;
                report = undefined;
                sizing = tango.bind(report)(zulu);
                oscar = null;
                if(!(oscar == entity)) { _fun127463_ip = 43; continue _fun127463 }
 41:
                return report;
 43:
                zulu = mike.props;
                tango = zulu.channelOverrides;
                zulu = entity.id;
                zulu = tango[zulu];
                options = _closure1_slot0;
                offset = _closure1_slot2;
                tango = 38;
                tango = offset[tango];
                options = options.bind(report)(tango);
                tango = options.getChannelIcon;
                output = tango.bind(options)(entity);
                tango = entity.parent_id;
                tango = oscar != tango;
                romeo = undefined;
                if(!tango) { _fun127463_ip = 129; continue _fun127463 }
 109:
                offset = _closure1_slot14;
                options = offset.getChannel;
                tango = entity.parent_id;
                romeo = options.bind(offset)(tango);
 129:
                options = _closure1_slot0;
                offset = _closure1_slot2;
                tango = 39;
                tango = offset[tango];
                options = options.bind(report)(tango);
                tango = options.computeIsMuted;
                tango = tango.bind(options)(zulu);
                if(tango) { _fun127463_ip = 399; continue _fun127463 }
 166:
                tango = zulu.message_notifications;
                zulu = _closure1_slot23;
                zulu = zulu.ALL_MESSAGES;
                if(!(zulu !== tango)) { _fun127463_ip = 342; continue _fun127463 }
 189:
                zulu = _closure1_slot23;
                zulu = zulu.ONLY_MENTIONS;
                if(!(zulu !== tango)) { _fun127463_ip = 282; continue _fun127463 }
 203:
                zulu = _closure1_slot23;
                zulu = zulu.NO_MESSAGES;
                kilo = undefined;
                if(!(zulu === tango)) { _fun127463_ip = 454; continue _fun127463 }
 222:
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                zulu = 31;
                tango = yankee[zulu];
                tango = offset.bind(report)(tango);
                options = tango.intl;
                tango = options.string;
                zulu = yankee[zulu];
                zulu = offset.bind(report)(zulu);
                zulu = zulu.t;
                zulu = zulu.CtVGyc;
                kilo = tango.bind(options)(zulu);
                _fun127463_ip = 454; continue _fun127463;
 282:
                tango = _closure1_slot0;
                yankee = _closure1_slot2;
                zulu = 31;
                options = yankee[zulu];
                options = tango.bind(report)(options);
                offset = options.intl;
                options = offset.format;
                zulu = yankee[zulu];
                zulu = tango.bind(report)(zulu);
                zulu = zulu.t;
                tango = zulu.L2hmY2;
                zulu = {};
                kilo = options.bind(offset)(tango, zulu);
                _fun127463_ip = 454; continue _fun127463;
 342:
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                zulu = 31;
                tango = yankee[zulu];
                tango = offset.bind(report)(tango);
                options = tango.intl;
                tango = options.string;
                zulu = yankee[zulu];
                zulu = offset.bind(report)(zulu);
                zulu = zulu.t;
                zulu = zulu.n/bTaW;
                kilo = tango.bind(options)(zulu);
                _fun127463_ip = 454; continue _fun127463;
 399:
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                zulu = 31;
                tango = yankee[zulu];
                tango = offset.bind(report)(tango);
                options = tango.intl;
                tango = options.string;
                zulu = yankee[zulu];
                zulu = offset.bind(report)(zulu);
                zulu = zulu.t;
                zulu = zulu.fpKdS0;
                kilo = tango.bind(options)(zulu);
 454:
                mike = mike.props;
                mike = mike.shouldUseNewNotificationSystem;
                if(!mike) { _fun127463_ip = 546; continue _fun127463 }
 468:
                options = _closure1_slot0;
                offset = _closure1_slot2;
                mike = 40;
                zulu = offset[mike];
                tango = options.bind(report)(zulu);
                zulu = tango.presetName;
                mike = offset[mike];
                yankee = options.bind(report)(mike);
                offset = yankee.presetFromSettings;
                foxtrot = _closure1_slot20;
                mike = foxtrot.resolveUnreadSetting;
                options = mike.bind(foxtrot)(entity);
                mike = foxtrot.resolvedMessageNotifications;
                mike = mike.bind(foxtrot)(entity);
                mike = offset.bind(yankee)(options, mike);
                kilo = zulu.bind(tango)(mike);
 546:
                tango = _closure1_slot32;
                yankee = _closure1_slot0;
                options = _closure1_slot2;
                foxtrot = 30;
                mike = options[foxtrot];
                mike = yankee.bind(report)(mike);
                zulu = mike.FormRow;
                mike = {};
                echo = _closure1_slot1;
                result = 36;
                offset = options[result];
                backup = echo.bind(report)(offset);
                offset = {};
                result = options[result];
                result = echo.bind(report)(result);
                result = result.Sizes;
                result = result.CUSTOM;
                offset['size'] = result;
                offset['source'] = output;
                output = sizing.channelIcon;
                offset['style'] = output;
                offset = tango.bind(report)(backup, offset);
                mike['leading'] = offset;
                offset = 41;
                options = options[offset];
                output = yankee.bind(report)(options);
                backup = output.computeChannelName;
                yankee = _closure1_slot21;
                options = _closure1_slot19;
                options = backup.bind(output)(entity, yankee, options);
                mike['label'] = options;
                golf = function() { // Original name: onPress
                    zulu = _closure3_slot0;
                    mike = zulu.handleChannelSelect;
                    entity = _closure3_slot1;
                    entity = entity.id;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                mike['onPress'] = golf;
                golf = oscar != romeo;
                oscar = null;
                if(!golf) { _fun127463_ip = 741; continue _fun127463 }
 703:
                options = _closure1_slot0;
                golf = _closure1_slot2;
                golf = golf[offset];
                yankee = options.bind(report)(golf);
                offset = yankee.computeChannelName;
                options = _closure1_slot21;
                golf = _closure1_slot19;
                oscar = offset.bind(yankee)(romeo, options, golf);
 741:
                mike['subLabel'] = oscar;
                options = _closure1_slot33;
                golf = _closure1_slot11;
                oscar = {};
                offset = sizing.channelOverrideType;
                oscar['style'] = offset;
                romeo = _closure1_slot32;
                yankee = _closure1_slot0;
                offset = _closure1_slot2;
                verify = 42;
                verify = offset[verify];
                verify = yankee.bind(report)(verify);
                backup = verify.Text;
                verify = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted'};
                sizing = sizing.channelOverrideTypeText;
                verify['style'] = sizing;
                verify['children'] = kilo;
                backup = romeo.bind(report)(backup, verify);
                verify = new Array(2);
                verify[0] = backup;
                offset = offset[foxtrot];
                offset = yankee.bind(report)(offset);
                offset = offset.FormRow;
                yankee = offset.Arrow;
                offset = {};
                offset = romeo.bind(report)(yankee, offset);
                verify[1] = offset;
                oscar['children'] = verify;
                oscar = options.bind(report)(golf, oscar);
                mike['trailing'] = oscar;
                entity = entity.id;
                entity = tango.bind(report)(zulu, mike, entity);
                return entity;
            }
        };
        report['value'] = golf;
        entity[5] = report;
        report = {};
        golf = 'render';
        report['key'] = golf;
        golf = function() { // Original name: value
            _fun127465: for(var _fun127465_ip = 0; ; ) switch(_fun127465_ip) {
 0:
                golf = this;
                entity = golf.props;
                tango = entity.guild;
                entity = null;
                entity = entity == tango;
                report = undefined;
                mike = undefined;
                if(entity) { _fun127465_ip = 50; continue _fun127465 }
 26:
                zulu = tango.hasFeature;
                entity = _closure1_slot28;
                entity = entity.HUB;
                mike = zulu.bind(tango)(entity);
 50:
                entity = true;
                if(!(entity !== mike)) { _fun127465_ip = 169; continue _fun127465 }
 56:
                zulu = _closure1_slot33;
                mike = _closure1_slot0;
                tango = _closure1_slot2;
                entity = 30;
                entity = tango[entity];
                entity = mike.bind(report)(entity);
                mike = entity.Form;
                entity = {};
                tango = golf.renderMuteSection;
                oscar = tango.bind(golf)();
                tango = new Array(4);
                tango[0] = oscar;
                oscar = golf.renderServerSettings;
                oscar = oscar.bind(golf)();
                tango[1] = oscar;
                oscar = golf.renderNotificationOptions;
                oscar = oscar.bind(golf)();
                tango[2] = oscar;
                oscar = golf.renderChannels;
                oscar = oscar.bind(golf)();
                tango[3] = oscar;
                entity['children'] = tango;
                entity = zulu.bind(report)(mike, entity);
                _fun127465_ip = 224; continue _fun127465;
 169:
                tango = _closure1_slot32;
                zulu = _closure1_slot0;
                oscar = _closure1_slot2;
                mike = 30;
                mike = oscar[mike];
                mike = zulu.bind(report)(mike);
                zulu = mike.Form;
                mike = {};
                oscar = golf.renderMuteSection;
                oscar = oscar.bind(golf)();
                mike['children'] = oscar;
                entity = tango.bind(report)(zulu, mike);
 224:
                return entity;
            }
        };
        report['value'] = golf;
        entity[6] = report;
        report = {};
        golf = 'getOverriddenChannels';
        report['key'] = golf;
        oscar = function() { // Original name: value
            options = this;
            mike = options.props;
            tango = mike.channels;
            golf = mike.channelOverrides;
            mike = global;
            report = mike.Set;
            oscar = _closure1_slot0;
            zulu = _closure1_slot2;
            mike = 43;
            zulu = zulu[mike];
            mike = undefined;
            oscar = oscar.bind(mike)(zulu);
            zulu = oscar.filterOverrides;
            mike = {};
            verify = false;
            mike['ignoreNotificationSetting'] = verify;
            verify = options.props;
            verify = verify.shouldUseNewNotificationSystem;
            mike['ignoreMute'] = verify;
            options = options.props;
            options = options.shouldUseNewNotificationSystem;
            options = !options;
            mike['ignoreUnreadSetting'] = options;
            yankee = zulu.bind(oscar)(golf, mike);
            zulu = report.prototype;
            zulu = Object.create(zulu, {constructor: {value: report}});
            romeo = zulu;
            mike = new romeo[report](yankee, offset);
            mike = mike instanceof Object ? mike : zulu;
            var _closure3_slot0 = mike;
            zulu = tango.map;
            mike = function(argFoo) {
                _fun127467: for(var _fun127467_ip = 0; ; ) switch(_fun127467_ip) {
 0:
                    entity = argFoo;
                    mike = entity.channel;
                    tango = _closure3_slot0;
                    zulu = tango.has;
                    entity = mike.id;
                    zulu = zulu.bind(tango)(entity);
                    entity = null;
                    if(!zulu) { _fun127467_ip = 38; continue _fun127467 }
 35:
                    entity = mike;
 38:
                    return entity;
                }
            };
            zulu = zulu.bind(tango)(mike);
            mike = zulu.filter;
            entity = function(argFoo) {
                entity = argFoo;
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        report['value'] = oscar;
        entity[7] = report;
        entity = mike.bind(zulu)(tango, entity);
        return entity;
    };
    mike = mike.bind(entity)(report);
    var _closure1_slot36 = mike;
    report = 44;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.ThemeContext;
    mike['contextType'] = report;
    report = function(argFoo) { // Original name: ConnectedNotificationSettings
        mike = argFoo;
        foxtrot = mike.guildId;
        var _closure2_slot0 = foxtrot;
        mike = _closure1_slot0;
        golf = _closure1_slot2;
        zulu = 45;
        zulu = golf[zulu];
        tango = undefined;
        oscar = mike.bind(tango)(zulu);
        zulu = oscar.useNavigation;
        yankee = zulu.bind(oscar)();
        zulu = 46;
        zulu = golf[zulu];
        verify = mike.bind(tango)(zulu);
        options = verify.useStateFromStoresObject;
        zulu = _closure1_slot20;
        oscar = new Array(4);
        oscar[0] = zulu;
        zulu = _closure1_slot17;
        oscar[1] = zulu;
        zulu = _closure1_slot15;
        oscar[2] = zulu;
        zulu = _closure1_slot16;
        oscar[3] = zulu;
        zulu = function() {
            entity = {};
            report = _closure1_slot17;
            zulu = report.getGuild;
            tango = _closure2_slot0;
            zulu = zulu.bind(report)(tango);
            entity['guild'] = zulu;
            zulu = _closure1_slot20;
            report = zulu.isSuppressEveryoneEnabled;
            report = report.bind(zulu)(tango);
            entity['suppressEveryone'] = report;
            report = zulu.isSuppressRolesEnabled;
            report = report.bind(zulu)(tango);
            entity['suppressRoles'] = report;
            report = zulu.isMobilePushEnabled;
            report = report.bind(zulu)(tango);
            entity['mobilePush'] = report;
            report = zulu.isMuteScheduledEventsEnabled;
            report = report.bind(zulu)(tango);
            entity['muteEvents'] = report;
            report = zulu.isMuted;
            report = report.bind(zulu)(tango);
            entity['muted'] = report;
            report = zulu.getMuteConfig;
            report = report.bind(zulu)(tango);
            entity['muteConfig'] = report;
            report = zulu.getMessageNotifications;
            report = report.bind(zulu)(tango);
            entity['messageNotifications'] = report;
            report = zulu.getChannelOverrides;
            report = report.bind(zulu)(tango);
            entity['channelOverrides'] = report;
            oscar = _closure1_slot15;
            report = oscar.getCategories;
            report = report.bind(oscar)(tango);
            entity['categories'] = report;
            report = _closure1_slot16;
            mike = report.getMemberCount;
            mike = mike.bind(report)(tango);
            entity['guildMemberCount'] = mike;
            mike = zulu.getNotifyHighlights;
            mike = mike.bind(zulu)(tango);
            entity['notifyHighlights'] = mike;
            return entity;
        };
        verify = options.bind(verify)(oscar, zulu);
        zulu = 47;
        zulu = golf[zulu];
        oscar = mike.bind(tango)(zulu);
        zulu = oscar.useAndroidNavScrim;
        zulu = zulu.bind(oscar)();
        oscar = zulu.scrim;
        romeo = verify.categories;
        var _closure2_slot1 = romeo;
        options = _closure1_slot4;
        zulu = _closure1_slot3;
        verify = options.bind(tango)(verify, zulu);
        offset = _closure1_slot10;
        options = offset.useMemo;
        zulu = new Array(1);
        zulu[0] = romeo;
        entity = function() {
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 48;
            entity = zulu[entity];
            report = undefined;
            tango = mike.bind(report)(entity);
            zulu = _closure2_slot1;
            mike = zulu._categories;
            entity = function(argFoo) {
                _fun127472: for(var _fun127472_ip = 0; ; ) switch(_fun127472_ip) {
 0:
                    entity = argFoo;
                    entity = entity.channel;
                    zulu = entity.type;
                    tango = _closure1_slot13;
                    entity = undefined;
                    entity = tango.bind(entity)(zulu);
                    if(entity) { _fun127472_ip = 44; continue _fun127472 }
 30:
                    mike = _closure1_slot24;
                    mike = mike.GUILD_CATEGORY;
                    entity = zulu === mike;
 44:
                    return entity;
                }
            };
            entity = tango.bind(report)(mike, zulu, entity);
            return entity;
        };
        romeo = options.bind(offset)(entity, zulu);
        entity = 43;
        entity = golf[entity];
        options = mike.bind(tango)(entity);
        zulu = options.useShouldUseNewNotificationSystem;
        entity = 'NotificationSettingsModalNative';
        offset = zulu.bind(options)(entity);
        zulu = _closure1_slot33;
        entity = 49;
        entity = golf[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.RedesignCompat;
        entity = {};
        options = _closure1_slot32;
        golf = _closure1_slot36;
        report = {};
        report['guildId'] = foxtrot;
        report['channels'] = romeo;
        report['navigation'] = yankee;
        report['shouldUseNewNotificationSystem'] = offset;
        kilo = report;
        backup = verify;
        verify = copyDataProperties(kilo, backup);
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot37 = report;
    report = 54;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/notification_settings/native/NotificationSettingsModal.native.tsx';
    report = oscar.bind(golf)(report);
    tango = function() { // Original name: NotificationSettingsModal
        _fun127473: for(var _fun127473_ip = 0; ; ) switch(_fun127473_ip) {
 0:
            mike = _closure1_slot0;
            oscar = _closure1_slot2;
            zulu = 46;
            zulu = oscar[zulu];
            tango = undefined;
            verify = mike.bind(tango)(zulu);
            golf = verify.useStateFromStores;
            zulu = _closure1_slot18;
            report = new Array(1);
            report[0] = zulu;
            zulu = function() {
                mike = _closure1_slot18;
                entity = mike.getProps;
                entity = entity.bind(mike)();
                entity = entity.guildId;
                return entity;
            };
            golf = golf.bind(verify)(report, zulu);
            verify = _closure1_slot10;
            report = verify.useMemo;
            zulu = function() {
                mike = function() { // Original name: getScreens
                    entity = {};
                    mike = _closure1_slot25;
                    golf = mike.OVERVIEW;
                    zulu = {};
                    verify = _closure1_slot0;
                    offset = _closure1_slot2;
                    oscar = 50;
                    yankee = offset[oscar];
                    options = undefined;
                    romeo = verify.bind(options)(yankee);
                    yankee = romeo.getHeaderCloseButton;
                    foxtrot = _closure1_slot1;
                    report = 24;
                    report = offset[report];
                    report = foxtrot.bind(options)(report);
                    report = report.close;
                    report = yankee.bind(romeo)(report);
                    zulu['headerLeft'] = report;
                    report = 31;
                    yankee = offset[report];
                    yankee = verify.bind(options)(yankee);
                    foxtrot = yankee.intl;
                    romeo = foxtrot.string;
                    yankee = offset[report];
                    yankee = verify.bind(options)(yankee);
                    yankee = yankee.t;
                    yankee = yankee.h850Sk;
                    yankee = romeo.bind(foxtrot)(yankee);
                    zulu['title'] = yankee;
                    yankee = function(argFoo) { // Original name: render
                        entity = argFoo;
                        entity = entity.guildId;
                        tango = _closure1_slot32;
                        zulu = _closure1_slot37;
                        mike = {};
                        mike['guildId'] = entity;
                        entity = undefined;
                        entity = tango.bind(entity)(zulu, mike);
                        return entity;
                    };
                    zulu['render'] = yankee;
                    entity[golf] = zulu;
                    golf = mike.ADD_OVERRIDE;
                    zulu = {};
                    yankee = offset[report];
                    yankee = verify.bind(options)(yankee);
                    foxtrot = yankee.intl;
                    romeo = foxtrot.string;
                    yankee = offset[report];
                    yankee = verify.bind(options)(yankee);
                    yankee = yankee.t;
                    yankee = yankee.s7vIQU;
                    yankee = romeo.bind(foxtrot)(yankee);
                    zulu['title'] = yankee;
                    yankee = offset[oscar];
                    romeo = verify.bind(options)(yankee);
                    yankee = romeo.getHeaderBackButton;
                    yankee = yankee.bind(romeo)();
                    zulu['headerLeft'] = yankee;
                    yankee = function(argFoo, argBar) { // Original name: render
                        entity = argFoo;
                        report = entity.guildId;
                        tango = _closure1_slot32;
                        mike = _closure1_slot1;
                        zulu = _closure1_slot2;
                        entity = 51;
                        entity = zulu[entity];
                        zulu = undefined;
                        mike = mike.bind(zulu)(entity);
                        entity = {};
                        entity['guildId'] = report;
                        report = argBar;
                        entity['navigation'] = report;
                        entity = tango.bind(zulu)(mike, entity);
                        return entity;
                    };
                    zulu['render'] = yankee;
                    entity[golf] = zulu;
                    zulu = mike.CHANNEL_OVERRIDE;
                    mike = {};
                    oscar = offset[oscar];
                    golf = verify.bind(options)(oscar);
                    oscar = golf.getHeaderBackButton;
                    oscar = oscar.bind(golf)();
                    mike['headerLeft'] = oscar;
                    oscar = offset[report];
                    oscar = verify.bind(options)(oscar);
                    golf = oscar.intl;
                    oscar = golf.string;
                    report = offset[report];
                    report = verify.bind(options)(report);
                    report = report.t;
                    report = report.h850Sk;
                    report = oscar.bind(golf)(report);
                    mike['title'] = report;
                    tango = function(argFoo) { // Original name: render
                        entity = argFoo;
                        report = entity.channelId;
                        tango = _closure1_slot32;
                        mike = _closure1_slot1;
                        zulu = _closure1_slot2;
                        entity = 52;
                        entity = zulu[entity];
                        zulu = undefined;
                        mike = mike.bind(zulu)(entity);
                        entity = {};
                        entity['channelId'] = report;
                        report = true;
                        entity['inGuildContext'] = report;
                        entity = tango.bind(zulu)(mike, entity);
                        return entity;
                    };
                    mike['render'] = tango;
                    entity[zulu] = mike;
                    return entity;
                };
                entity = undefined;
                entity = mike.bind(entity)();
                return entity;
            };
            entity = new Array(0);
            report = report.bind(verify)(zulu, entity);
            zulu = _closure1_slot32;
            entity = 53;
            entity = oscar[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.Navigator;
            entity = {};
            entity['screens'] = report;
            oscar = {};
            report = _closure1_slot25;
            report = report.OVERVIEW;
            oscar['name'] = report;
            report = {};
            verify = null;
            if(!(verify == golf)) { _fun127473_ip = 140; continue _fun127473 }
 136:
            golf = _closure1_slot31;
 140:
            report['guildId'] = golf;
            oscar['params'] = report;
            report = new Array(1);
            report[0] = oscar;
            entity['initialRouteStack'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = tango;
    zulu['NotificationSettings'] = mike;
    return entity;
})();