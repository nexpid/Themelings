// app/modules/notification_settings/native/NotificationSettingsModal.native.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = golfie;
    entity = function() { // Original name: _isNativeReflectConstruct
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
 2: // try_start_0
            michal = global;
            zuuluu = michal.Boolean;
            zuuluu = zuuluu.prototype;
            tangon = zuuluu.valueOf;
            zuuluu = tangon.call;
            option = michal.Reflect;
            golfie = option.construct;
            oscard = michal.Boolean;
            report = new Array(0);
            michal = function() {
                entity = undefined;
                return entity;
            };
            michal = golfie.bind(option)(oscard, report, michal);
            michal = zuuluu.bind(tangon)(michal);
            michal = !michal;
            var _closure2_slot0 = michal;
 72: // try_end0
            _fun00002_ip = 76; continue _fun00001;
 74: // catch_target0
            CatchBlockStart(arg_register=1);
 76:
            michal = function() { // Original name: _isNativeReflectConstruct
                entity = _closure2_slot0;
                entity = !entity;
                entity = !entity;
                return entity;
            };
            _closure1_slot37 = michal;
            entity = undefined;
            entity = michal.bind(entity)();
            return entity;
        }
    };
    var _closure1_slot37 = entity;
    entity = ['categories'];
    var _closure1_slot3 = entity;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = golfie[entity];
    entity = undefined;
    michal = romeon.bind(entity)(michal);
    var _closure1_slot4 = michal;
    michal = 1;
    michal = golfie[michal];
    michal = romeon.bind(entity)(michal);
    var _closure1_slot5 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = romeon.bind(entity)(michal);
    var _closure1_slot6 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = romeon.bind(entity)(michal);
    var _closure1_slot7 = michal;
    michal = 4;
    michal = golfie[michal];
    michal = romeon.bind(entity)(michal);
    var _closure1_slot8 = michal;
    michal = 5;
    michal = golfie[michal];
    michal = romeon.bind(entity)(michal);
    var _closure1_slot9 = michal;
    michal = 6;
    report = golfie[michal];
    michal = argCor;
    michal = michal.bind(entity)(report);
    var _closure1_slot10 = michal;
    report = 7;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.View;
    var _closure1_slot11 = report;
    report = 8;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.isGuildReadableType;
    var _closure1_slot12 = report;
    report = 9;
    report = golfie[report];
    report = romeon.bind(entity)(report);
    var _closure1_slot13 = report;
    report = 10;
    report = golfie[report];
    report = romeon.bind(entity)(report);
    var _closure1_slot14 = report;
    report = 11;
    report = golfie[report];
    report = romeon.bind(entity)(report);
    var _closure1_slot15 = report;
    report = 12;
    report = golfie[report];
    report = romeon.bind(entity)(report);
    var _closure1_slot16 = report;
    report = 13;
    report = golfie[report];
    report = romeon.bind(entity)(report);
    var _closure1_slot17 = report;
    report = 14;
    report = golfie[report];
    report = romeon.bind(entity)(report);
    var _closure1_slot18 = report;
    report = 15;
    report = golfie[report];
    report = romeon.bind(entity)(report);
    var _closure1_slot19 = report;
    report = 16;
    report = golfie[report];
    report = romeon.bind(entity)(report);
    var _closure1_slot20 = report;
    report = 17;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.AnalyticEvents;
    var _closure1_slot21 = option;
    option = report.UserNotificationSettings;
    var _closure1_slot22 = option;
    option = report.ChannelTypes;
    var _closure1_slot23 = option;
    option = report.NotificationSettingsSections;
    var _closure1_slot24 = option;
    option = report.SettingsPaneTypes;
    var _closure1_slot25 = option;
    option = report.MAX_MEMBERS_NOTIFY_ALL_MESSAGES;
    var _closure1_slot26 = option;
    option = report.GuildFeatures;
    var _closure1_slot27 = option;
    option = report.HighlightSettings;
    var _closure1_slot28 = option;
    option = report.HelpdeskArticles;
    var _closure1_slot29 = option;
    report = report.EMPTY_STRING_SNOWFLAKE_ID;
    var _closure1_slot30 = report;
    report = 18;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.jsx;
    var _closure1_slot31 = option;
    option = report.jsxs;
    var _closure1_slot32 = option;
    report = report.Fragment;
    var _closure1_slot33 = report;
    report = 19;
    report = golfie[report];
    verify = oscard.bind(entity)(report);
    option = verify.createLegacyClassComponentStyles;
    report = {};
    offset = {'height': 16, 'width': 16, 'opacity': 0.6};
    report['channelIcon'] = offset;
    offset = {'flexDirection': 'row', 'alignItems': 'center'};
    report['channelOverrideType'] = offset;
    offset = {};
    yankee = 'right';
    offset['textAlign'] = yankee;
    report['channelOverrideTypeText'] = offset;
    offset = {'fontSize': 12, 'color': null, 'paddingHorizontal': 12, 'marginTop': 4};
    yankee = 20;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.unsafe_rawColors;
    foxtra = foxtra.BLUE_345;
    offset['color'] = foxtra;
    report['highlightsLearnMore'] = offset;
    offset = {'height': 1, 'backgroundColor': null, 'marginVertical': 24};
    yankee = golfie[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BORDER_SUBTLE;
    offset['backgroundColor'] = yankee;
    report['separator'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot34 = report;
    report = michal.PureComponent;
    michal = function(argFoo) {
        tangon = function(argFoo) { // Original name: NotificationSettings
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                report = this;
                foxtra = 0;
                entity = copyRestArgs(foxtra);
                option = _closure1_slot5;
                zuuluu = _closure2_slot0;
                tangon = undefined;
                option = option.bind(tangon)(report, zuuluu);
                offset = new Array(0);
                foxtra = offset;
                romeon = entity;
                yankee = 0;
                entity = arraySpread(foxtra, romeon, yankee);
                entity = _closure1_slot8;
                verify = entity.bind(tangon)(zuuluu);
                zuuluu = _closure1_slot7;
                entity = _closure1_slot37;
                entity = entity.bind(tangon)();
                if(entity) { _fun00004_ip = 86; continue _fun00003 }
 73:
                entity = verify.apply;
                entity = entity.bind(verify)(report, offset);
                _fun00004_ip = 120; continue _fun00003;
 86:
                golfie = global;
                option = golfie.Reflect;
                golfie = option.construct;
                oscard = _closure1_slot8;
                oscard = oscard.bind(tangon)(report);
                oscard = oscard.constructor;
                entity = golfie.bind(option)(verify, offset, oscard);
 120:
                entity = zuuluu.bind(tangon)(report, entity);
                var _closure3_slot0 = entity;
                zuuluu = function() {
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        entity = _closure3_slot0;
                        entity = entity.props;
                        report = entity.guildId;
                        entity = entity.muted;
                        zuuluu = _closure1_slot1;
                        verify = _closure1_slot2;
                        if(entity) { _fun00006_ip = 130; continue _fun00005 }
 37:
                        michal = 21;
                        michal = verify[michal];
                        yankee = undefined;
                        offset = zuuluu.bind(yankee)(michal);
                        option = offset.openLazy;
                        tangon = _closure1_slot0;
                        michal = 23;
                        michal = verify[michal];
                        golfie = tangon.bind(yankee)(michal);
                        michal = 22;
                        tangon = verify[michal];
                        michal = verify.paths;
                        golfie = golfie.bind(yankee)(tangon, michal);
                        michal = global;
                        michal = michal.HermesInternal;
                        tangon = michal.concat;
                        michal = 'muteSettings';
                        tangon = tangon.bind(michal)(report);
                        michal = {};
                        michal['guildId'] = report;
                        michal = option.bind(offset)(golfie, tangon, michal);
                        _fun00006_ip = 203; continue _fun00005;
 130:
                        michal = 24;
                        michal = verify[michal];
                        option = undefined;
                        tangon = zuuluu.bind(option)(michal);
                        zuuluu = tangon.updateGuildNotificationSettings;
                        michal = {};
                        golfie = !entity;
                        michal['muted'] = golfie;
                        golfie = _closure1_slot0;
                        oscard = 25;
                        oscard = verify[oscard];
                        oscard = golfie.bind(option)(oscard);
                        golfie = oscard.NotificationLabel;
                        oscard = golfie.muted;
                        entity = !entity;
                        entity = oscard.bind(golfie)(entity);
                        entity = zuuluu.bind(tangon)(report, michal, entity);
 203:
                        entity = undefined;
                        return entity;
                    }
                };
                entity['handleMutePress'] = zuuluu;
                zuuluu = function(argFoo, argBar, argBaz) {
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 24;
                    michal = michal[entity];
                    entity = undefined;
                    oscard = zuuluu.bind(entity)(michal);
                    report = oscard.updateGuildNotificationSettings;
                    michal = _closure3_slot0;
                    michal = michal.props;
                    tangon = michal.guildId;
                    zuuluu = {};
                    golfie = argBar;
                    michal = argFoo;
                    zuuluu[michal] = golfie;
                    michal = argBaz;
                    michal = report.bind(oscard)(tangon, zuuluu, michal);
                    return entity;
                };
                entity['handleToggleChange'] = zuuluu;
                zuuluu = function(argFoo) {
                    option = argFoo;
                    tangon = _closure1_slot1;
                    verify = _closure1_slot2;
                    entity = 24;
                    zuuluu = verify[entity];
                    entity = undefined;
                    oscard = tangon.bind(entity)(zuuluu);
                    report = oscard.updateGuildNotificationSettings;
                    zuuluu = _closure3_slot0;
                    zuuluu = zuuluu.props;
                    tangon = zuuluu.guildId;
                    zuuluu = {};
                    zuuluu['message_notifications'] = option;
                    golfie = _closure1_slot0;
                    michal = 25;
                    michal = verify[michal];
                    michal = golfie.bind(entity)(michal);
                    golfie = michal.NotificationLabel;
                    michal = golfie.notifications;
                    michal = michal.bind(golfie)(option);
                    michal = report.bind(oscard)(tangon, zuuluu, michal);
                    return entity;
                };
                entity['handleTypeChange'] = zuuluu;
                zuuluu = function() {
                    entity = _closure3_slot0;
                    entity = entity.props;
                    report = entity.guildId;
                    tangon = entity.navigation;
                    zuuluu = tangon.push;
                    entity = _closure1_slot24;
                    michal = entity.ADD_OVERRIDE;
                    entity = {};
                    entity['guildId'] = report;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    entity = undefined;
                    return entity;
                };
                entity['handleAddOverride'] = zuuluu;
                michal = function(argFoo) {
                    entity = _closure3_slot0;
                    entity = entity.props;
                    tangon = entity.navigation;
                    zuuluu = tangon.push;
                    entity = _closure1_slot24;
                    michal = entity.CHANNEL_OVERRIDE;
                    entity = {};
                    report = argFoo;
                    entity['channelId'] = report;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    entity = undefined;
                    return entity;
                };
                entity['handleChannelSelect'] = michal;
                return entity;
            }
        };
        var _closure2_slot0 = tangon;
        report = _closure1_slot9;
        zuuluu = undefined;
        michal = argFoo;
        michal = report.bind(zuuluu)(tangon, michal);
        michal = _closure1_slot6;
        report = {};
        entity = 'componentDidMount';
        report['key'] = entity;
        entity = function() { // Original name: value
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 26;
            michal = michal[entity];
            entity = undefined;
            report = zuuluu.bind(entity)(michal);
            tangon = report.trackWithMetadata;
            michal = _closure1_slot21;
            zuuluu = michal.SETTINGS_PANE_VIEWED;
            michal = {};
            golfie = 'guild';
            michal['settings_type'] = golfie;
            oscard = _closure1_slot25;
            oscard = oscard.GUILD_NOTIFICATION_SETTINGS;
            michal['destination_pane'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        report['value'] = entity;
        entity = new Array(8);
        entity[0] = report;
        report = {};
        golfie = 'renderServerSettings';
        report['key'] = golfie;
        golfie = function() { // Original name: value
            _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                foxtra = this;
                var _closure3_slot0 = foxtra;
                entity = foxtra.props;
                romeon = entity.messageNotifications;
                kiloes = entity.muted;
                echoed = entity.guildMemberCount;
                entity = entity.shouldUseNewNotificationSystem;
                zuuluu = _closure1_slot34;
                michal = foxtra.context;
                report = undefined;
                offset = zuuluu.bind(report)(michal);
                tangon = _closure1_slot32;
                if(entity) { _fun00008_ip = 704; continue _fun00007 }
 67:
                source = _closure1_slot0;
                yankee = _closure1_slot2;
                oscard = 30;
                entity = yankee[oscard];
                entity = source.bind(report)(entity);
                michal = entity.FormRadioGroup;
                entity = {};
                update = 31;
                zuuluu = yankee[update];
                zuuluu = source.bind(report)(zuuluu);
                verify = zuuluu.intl;
                option = verify.string;
                zuuluu = yankee[update];
                zuuluu = source.bind(report)(zuuluu);
                zuuluu = zuuluu.t;
                zuuluu = zuuluu.lprV7e;
                zuuluu = option.bind(verify)(zuuluu);
                entity['title'] = zuuluu;
                entity['value'] = romeon;
                zuuluu = false;
                entity['hasIcons'] = zuuluu;
                verify = _closure1_slot31;
                zuuluu = yankee[oscard];
                zuuluu = source.bind(report)(zuuluu);
                option = zuuluu.FormRadioRow;
                zuuluu = {};
                output = 'right';
                zuuluu['align'] = output;
                sizing = yankee[update];
                sizing = source.bind(report)(sizing);
                result = sizing.intl;
                sizing = result.string;
                yankee = yankee[update];
                yankee = source.bind(report)(yankee);
                yankee = yankee.t;
                yankee = yankee.n/bTaW;
                yankee = sizing.bind(result)(yankee);
                zuuluu['label'] = yankee;
                zuuluu['disabled'] = kiloes;
                yankee = _closure1_slot22;
                yankee = yankee.ALL_MESSAGES;
                zuuluu['value'] = yankee;
                result = null;
                sizing = result != echoed;
                yankee = null;
                if(!sizing) { _fun00008_ip = 331; continue _fun00007 }
 266:
                sizing = _closure1_slot26;
                sizing = echoed >= sizing;
                yankee = null;
                if(!sizing) { _fun00008_ip = 331; continue _fun00007 }
 279:
                source = _closure1_slot0;
                sizing = _closure1_slot2;
                result = sizing[update];
                result = source.bind(report)(result);
                echoed = result.intl;
                result = echoed.string;
                sizing = sizing[update];
                sizing = source.bind(report)(sizing);
                sizing = sizing.t;
                sizing = sizing.Dh5p5u;
                yankee = result.bind(echoed)(sizing);
 331:
                zuuluu['subLabel'] = yankee;
                yankee = _closure1_slot22;
                sizing = yankee.ALL_MESSAGES;
                sizing = romeon === sizing;
                zuuluu['selected'] = sizing;
                sizing = function() { // Original name: onPress
                    zuuluu = _closure3_slot0;
                    michal = zuuluu.handleTypeChange;
                    entity = _closure1_slot22;
                    entity = entity.ALL_MESSAGES;
                    entity = michal.bind(zuuluu)(entity);
                    entity = undefined;
                    return entity;
                };
                zuuluu['onPress'] = sizing;
                option = verify.bind(report)(option, zuuluu);
                zuuluu = new Array(5);
                zuuluu[0] = option;
                verify = _closure1_slot31;
                echoed = _closure1_slot0;
                sizing = _closure1_slot2;
                option = sizing[oscard];
                option = echoed.bind(report)(option);
                result = option.FormDivider;
                option = {};
                option = verify.bind(report)(result, option);
                zuuluu[1] = option;
                option = sizing[oscard];
                option = echoed.bind(report)(option);
                result = option.FormRadioRow;
                option = {};
                option['align'] = output;
                source = sizing[update];
                source = echoed.bind(report)(source);
                sequen = source.intl;
                vacuum = sequen.format;
                source = sizing[update];
                source = echoed.bind(report)(source);
                source = source.t;
                ctrled = source.L2hmY2;
                source = {};
                source = vacuum.bind(sequen)(ctrled, source);
                option['label'] = source;
                source = yankee.ONLY_MENTIONS;
                option['value'] = source;
                option['disabled'] = kiloes;
                source = function() { // Original name: onPress
                    zuuluu = _closure3_slot0;
                    michal = zuuluu.handleTypeChange;
                    entity = _closure1_slot22;
                    entity = entity.ONLY_MENTIONS;
                    entity = michal.bind(zuuluu)(entity);
                    entity = undefined;
                    return entity;
                };
                option['onPress'] = source;
                source = yankee.ONLY_MENTIONS;
                source = romeon === source;
                option['selected'] = source;
                option = verify.bind(report)(result, option);
                zuuluu[2] = option;
                option = sizing[oscard];
                option = echoed.bind(report)(option);
                result = option.FormDivider;
                option = {};
                option = verify.bind(report)(result, option);
                zuuluu[3] = option;
                oscard = sizing[oscard];
                oscard = echoed.bind(report)(oscard);
                option = oscard.FormRadioRow;
                oscard = {};
                oscard['align'] = output;
                output = sizing[update];
                output = echoed.bind(report)(output);
                result = output.intl;
                output = result.string;
                sizing = sizing[update];
                sizing = echoed.bind(report)(sizing);
                sizing = sizing.t;
                sizing = sizing.CtVGyc;
                sizing = output.bind(result)(sizing);
                oscard['label'] = sizing;
                sizing = yankee.NO_MESSAGES;
                oscard['value'] = sizing;
                oscard['disabled'] = kiloes;
                backup = function() { // Original name: onPress
                    zuuluu = _closure3_slot0;
                    michal = zuuluu.handleTypeChange;
                    entity = _closure1_slot22;
                    entity = entity.NO_MESSAGES;
                    entity = michal.bind(zuuluu)(entity);
                    entity = undefined;
                    return entity;
                };
                oscard['onPress'] = backup;
                yankee = yankee.NO_MESSAGES;
                yankee = romeon === yankee;
                oscard['selected'] = yankee;
                oscard = verify.bind(report)(option, oscard);
                zuuluu[4] = oscard;
                entity['children'] = zuuluu;
                entity = tangon.bind(report)(michal, entity);
                _fun00008_ip = 951; continue _fun00007;
 704:
                zuuluu = _closure1_slot33;
                michal = {};
                verify = _closure1_slot11;
                oscard = {};
                option = {};
                yankee = 12;
                option['marginHorizontal'] = yankee;
                oscard['style'] = option;
                option = _closure1_slot31;
                romeon = _closure1_slot0;
                backup = _closure1_slot2;
                golfie = 27;
                golfie = backup[golfie];
                golfie = romeon.bind(report)(golfie);
                yankee = golfie.NotificationSettingsGuildPresets;
                golfie = {};
                kiloes = foxtra.props;
                kiloes = kiloes.guildId;
                golfie['guildId'] = kiloes;
                yankee = option.bind(report)(yankee, golfie);
                golfie = new Array(3);
                golfie[0] = yankee;
                yankee = 28;
                yankee = backup[yankee];
                yankee = romeon.bind(report)(yankee);
                sizing = yankee.NotificationSettingsGuildMessageNotification;
                yankee = {};
                output = {};
                kiloes = 24;
                output['marginTop'] = kiloes;
                yankee['style'] = output;
                output = foxtra.props;
                output = output.guildId;
                yankee['guildId'] = output;
                yankee = option.bind(report)(sizing, yankee);
                golfie[1] = yankee;
                yankee = 29;
                yankee = backup[yankee];
                yankee = romeon.bind(report)(yankee);
                romeon = yankee.NotificationSettingsGuildMessageUnread;
                yankee = {};
                backup = {};
                backup['marginTop'] = kiloes;
                yankee['style'] = backup;
                foxtra = foxtra.props;
                foxtra = foxtra.guildId;
                yankee['guildId'] = foxtra;
                yankee = option.bind(report)(romeon, yankee);
                golfie[2] = yankee;
                oscard['children'] = golfie;
                golfie = tangon.bind(report)(verify, oscard);
                oscard = new Array(2);
                oscard[0] = golfie;
                golfie = {};
                offset = offset.separator;
                golfie['style'] = offset;
                golfie = option.bind(report)(verify, golfie);
                oscard[1] = golfie;
                michal['children'] = oscard;
                entity = tangon.bind(report)(zuuluu, michal);
 951:
                return entity;
            }
        };
        report['value'] = golfie;
        entity[1] = report;
        report = {};
        golfie = 'renderNotificationOptions';
        report['key'] = golfie;
        golfie = function() { // Original name: value
            _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                entity = this;
                var _closure3_slot0 = entity;
                zuuluu = _closure1_slot34;
                michal = entity.context;
                tangon = undefined;
                sequen = zuuluu.bind(tangon)(michal);
                entity = entity.props;
                backup = entity.muted;
                yankee = entity.suppressEveryone;
                result = entity.suppressRoles;
                kiloes = entity.mobilePush;
                output = entity.muteEvents;
                echoed = entity.notifyHighlights;
                entity = entity.guildId;
                var _closure3_slot1 = entity;
                zuuluu = _closure1_slot32;
                michal = _closure1_slot33;
                entity = {};
                ctrled = _closure1_slot0;
                sizing = _closure1_slot2;
                offset = 30;
                report = sizing[offset];
                report = ctrled.bind(tangon)(report);
                oscard = report.FormSection;
                report = {};
                golfie = {};
                romeon = _closure1_slot31;
                option = sizing[offset];
                option = ctrled.bind(tangon)(option);
                source = option.FormHint;
                option = {};
                update = 31;
                vacuum = sizing[update];
                vacuum = ctrled.bind(tangon)(vacuum);
                record = vacuum.intl;
                config = record.string;
                vacuum = sizing[update];
                vacuum = ctrled.bind(tangon)(vacuum);
                vacuum = vacuum.t;
                vacuum = vacuum.Vw/Xn5;
                vacuum = config.bind(record)(vacuum);
                option['children'] = vacuum;
                source = romeon.bind(tangon)(source, option);
                option = new Array(2);
                option[0] = source;
                source = 32;
                source = sizing[source];
                source = ctrled.bind(tangon)(source);
                vacuum = source.LegacyText;
                source = {};
                sequen = sequen.highlightsLearnMore;
                source['style'] = sequen;
                sequen = 'link';
                source['accessibilityRole'] = sequen;
                sequen = function() { // Original name: onPress
                    oscard = _closure1_slot1;
                    golfie = _closure1_slot2;
                    michal = 33;
                    michal = golfie[michal];
                    report = undefined;
                    zuuluu = oscard.bind(report)(michal);
                    michal = zuuluu.openURL;
                    tangon = 34;
                    tangon = golfie[tangon];
                    report = oscard.bind(report)(tangon);
                    tangon = report.getArticleURL;
                    entity = _closure1_slot29;
                    entity = entity.HIGHLIGHTS;
                    entity = tangon.bind(report)(entity);
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                source['onPress'] = sequen;
                sequen = sizing[update];
                sequen = ctrled.bind(tangon)(sequen);
                record = sequen.intl;
                config = record.string;
                sequen = sizing[update];
                sequen = ctrled.bind(tangon)(sequen);
                sequen = sequen.t;
                sequen = sequen.PRBn9P;
                sequen = config.bind(record)(sequen);
                source['children'] = sequen;
                source = romeon.bind(tangon)(vacuum, source);
                option[1] = source;
                golfie['children'] = option;
                golfie = zuuluu.bind(tangon)(michal, golfie);
                report['hint'] = golfie;
                golfie = sizing[offset];
                golfie = ctrled.bind(tangon)(golfie);
                option = golfie.FormSwitchRow;
                golfie = {};
                source = sizing[update];
                source = ctrled.bind(tangon)(source);
                config = source.intl;
                sequen = config.format;
                source = sizing[update];
                source = ctrled.bind(tangon)(source);
                source = source.t;
                vacuum = source.OWiWAg;
                source = {};
                source = sequen.bind(config)(vacuum, source);
                golfie['label'] = source;
                golfie['value'] = yankee;
                yankee = function(argFoo) { // Original name: onValueChange
                    oscard = argFoo;
                    report = _closure3_slot0;
                    tangon = report.handleToggleChange;
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 25;
                    michal = michal[entity];
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    zuuluu = michal.NotificationLabel;
                    michal = zuuluu.suppressEveryone;
                    zuuluu = michal.bind(zuuluu)(oscard);
                    michal = 'suppress_everyone';
                    michal = tangon.bind(report)(michal, oscard, zuuluu);
                    return entity;
                };
                golfie['onValueChange'] = yankee;
                option = romeon.bind(tangon)(option, golfie);
                golfie = new Array(3);
                golfie[0] = option;
                option = sizing[offset];
                option = ctrled.bind(tangon)(option);
                yankee = option.FormSwitchRow;
                option = {};
                source = sizing[update];
                source = ctrled.bind(tangon)(source);
                sequen = source.intl;
                vacuum = sequen.string;
                source = sizing[update];
                source = ctrled.bind(tangon)(source);
                source = source.t;
                source = source.O/QdoK;
                source = vacuum.bind(sequen)(source);
                option['label'] = source;
                option['value'] = result;
                result = function(argFoo) { // Original name: onValueChange
                    oscard = argFoo;
                    report = _closure3_slot0;
                    tangon = report.handleToggleChange;
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 25;
                    michal = michal[entity];
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    zuuluu = michal.NotificationLabel;
                    michal = zuuluu.suppressRoles;
                    zuuluu = michal.bind(zuuluu)(oscard);
                    michal = 'suppress_roles';
                    michal = tangon.bind(report)(michal, oscard, zuuluu);
                    return entity;
                };
                option['onValueChange'] = result;
                option = romeon.bind(tangon)(yankee, option);
                golfie[1] = option;
                option = sizing[offset];
                option = ctrled.bind(tangon)(option);
                yankee = option.FormSwitchRow;
                option = {};
                option['disabled'] = backup;
                result = sizing[update];
                result = ctrled.bind(tangon)(result);
                source = result.intl;
                result = source.string;
                sizing = sizing[update];
                sizing = ctrled.bind(tangon)(sizing);
                sizing = sizing.t;
                sizing = sizing.gPuteH;
                sizing = result.bind(source)(sizing);
                option['label'] = sizing;
                sizing = backup;
                if(sizing) { _fun00010_ip = 612; continue _fun00009 }
 598:
                result = _closure1_slot28;
                result = result.DISABLED;
                sizing = echoed === result;
 612:
                option['value'] = sizing;
                sizing = function(argFoo) { // Original name: onValueChange
                    _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                        michal = argFoo;
                        tangon = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 24;
                        zuuluu = zuuluu[entity];
                        entity = undefined;
                        oscard = tangon.bind(entity)(zuuluu);
                        report = oscard.updateGuildNotificationSettings;
                        tangon = _closure3_slot1;
                        zuuluu = {};
                        verify = _closure1_slot28;
                        if(michal) { _fun00012_ip = 58; continue _fun00011 }
 50:
                        option = verify.ENABLED;
                        _fun00012_ip = 64; continue _fun00011;
 58:
                        option = verify.DISABLED;
 64:
                        zuuluu['notify_highlights'] = option;
                        option = _closure1_slot0;
                        verify = _closure1_slot2;
                        golfie = 25;
                        golfie = verify[golfie];
                        golfie = option.bind(entity)(golfie);
                        option = golfie.NotificationLabel;
                        golfie = option.highlights;
                        michal = !michal;
                        michal = golfie.bind(option)(michal);
                        michal = report.bind(oscard)(tangon, zuuluu, michal);
                        return entity;
                    }
                };
                option['onValueChange'] = sizing;
                option = romeon.bind(tangon)(yankee, option);
                golfie[2] = option;
                report['children'] = golfie;
                oscard = zuuluu.bind(tangon)(oscard, report);
                report = new Array(2);
                report[0] = oscard;
                option = _closure1_slot32;
                echoed = _closure1_slot0;
                sizing = _closure1_slot2;
                oscard = sizing[offset];
                oscard = echoed.bind(tangon)(oscard);
                golfie = oscard.FormSection;
                oscard = {};
                romeon = _closure1_slot31;
                verify = sizing[offset];
                verify = echoed.bind(tangon)(verify);
                yankee = verify.FormSwitchRow;
                verify = {};
                result = sizing[update];
                result = echoed.bind(tangon)(result);
                ctrled = result.intl;
                source = ctrled.string;
                result = sizing[update];
                result = echoed.bind(tangon)(result);
                result = result.t;
                result = result.ONG3Y2;
                result = source.bind(ctrled)(result);
                verify['label'] = result;
                verify['value'] = output;
                output = function(argFoo) { // Original name: onValueChange
                    oscard = argFoo;
                    report = _closure3_slot0;
                    tangon = report.handleToggleChange;
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 25;
                    michal = michal[entity];
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    zuuluu = michal.NotificationLabel;
                    michal = zuuluu.mutedEvents;
                    zuuluu = michal.bind(zuuluu)(oscard);
                    michal = 'mute_scheduled_events';
                    michal = tangon.bind(report)(michal, oscard, zuuluu);
                    return entity;
                };
                verify['onValueChange'] = output;
                yankee = romeon.bind(tangon)(yankee, verify);
                verify = new Array(3);
                verify[0] = yankee;
                yankee = sizing[offset];
                yankee = echoed.bind(tangon)(yankee);
                output = yankee.FormDivider;
                yankee = {};
                yankee = romeon.bind(tangon)(output, yankee);
                verify[1] = yankee;
                offset = sizing[offset];
                offset = echoed.bind(tangon)(offset);
                yankee = offset.FormSwitchRow;
                offset = {};
                offset['disabled'] = backup;
                output = sizing[update];
                output = echoed.bind(tangon)(output);
                result = output.intl;
                output = result.string;
                sizing = sizing[update];
                sizing = echoed.bind(tangon)(sizing);
                sizing = sizing.t;
                sizing = sizing.h1DL6+;
                sizing = output.bind(result)(sizing);
                offset['label'] = sizing;
                backup = !backup;
                if(!backup) { _fun00010_ip = 891; continue _fun00009 }
 888:
                backup = kiloes;
 891:
                offset['value'] = backup;
                foxtra = function(argFoo) { // Original name: onValueChange
                    oscard = argFoo;
                    report = _closure3_slot0;
                    tangon = report.handleToggleChange;
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 25;
                    michal = michal[entity];
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    zuuluu = michal.NotificationLabel;
                    michal = zuuluu.mobilePush;
                    zuuluu = michal.bind(zuuluu)(oscard);
                    michal = 'mobile_push';
                    michal = tangon.bind(report)(michal, oscard, zuuluu);
                    return entity;
                };
                offset['onValueChange'] = foxtra;
                offset = romeon.bind(tangon)(yankee, offset);
                verify[2] = offset;
                oscard['children'] = verify;
                oscard = option.bind(tangon)(golfie, oscard);
                report[1] = oscard;
                entity['children'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            }
        };
        report['value'] = golfie;
        entity[2] = report;
        report = {};
        golfie = 'renderMuteSection';
        report['key'] = golfie;
        golfie = function() { // Original name: value
            _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                oscard = this;
                entity = oscard.props;
                michal = entity.muted;
                verify = entity.muteConfig;
                foxtra = entity.guild;
                entity = entity.shouldUseNewNotificationSystem;
                if(entity) { _fun00014_ip = 475; continue _fun00013 }
 37:
                zuuluu = _closure1_slot0;
                entity = _closure1_slot2;
                romeon = 31;
                tangon = entity[romeon];
                offset = undefined;
                tangon = zuuluu.bind(offset)(tangon);
                golfie = tangon.intl;
                report = golfie.format;
                entity = entity[romeon];
                entity = zuuluu.bind(offset)(entity);
                entity = entity.t;
                if(michal) { _fun00014_ip = 127; continue _fun00013 }
 89:
                tangon = entity.J+7D9P;
                zuuluu = {};
                option = null;
                backup = option == foxtra;
                option = undefined;
                if(backup) { _fun00014_ip = 115; continue _fun00013 }
 110:
                option = foxtra.name;
 115:
                zuuluu['name'] = option;
                zuuluu = report.bind(golfie)(tangon, zuuluu);
                _fun00014_ip = 163; continue _fun00013;
 127:
                tangon = entity.e8hzDQ;
                entity = {};
                option = null;
                backup = option == foxtra;
                option = undefined;
                if(backup) { _fun00014_ip = 153; continue _fun00013 }
 148:
                option = foxtra.name;
 153:
                entity['name'] = option;
                zuuluu = report.bind(golfie)(tangon, entity);
 163:
                golfie = _closure1_slot31;
                option = _closure1_slot0;
                entity = _closure1_slot2;
                sizing = 30;
                tangon = entity[sizing];
                tangon = option.bind(offset)(tangon);
                report = tangon.FormSection;
                tangon = {};
                foxtra = entity[sizing];
                foxtra = option.bind(offset)(foxtra);
                backup = foxtra.FormHint;
                foxtra = {};
                kiloes = entity[romeon];
                kiloes = option.bind(offset)(kiloes);
                output = kiloes.intl;
                kiloes = output.string;
                romeon = entity[romeon];
                romeon = option.bind(offset)(romeon);
                romeon = romeon.t;
                romeon = romeon.8wbTQ0;
                romeon = kiloes.bind(output)(romeon);
                foxtra['children'] = romeon;
                romeon = 'mute-hint';
                romeon = golfie.bind(offset)(backup, foxtra, romeon);
                tangon['hint'] = romeon;
                entity = entity[sizing];
                entity = option.bind(offset)(entity);
                option = entity.FormRow;
                entity = {};
                entity['label'] = zuuluu;
                zuuluu = oscard.handleMutePress;
                entity['onPress'] = zuuluu;
                romeon = null;
                if(michal) { _fun00014_ip = 357; continue _fun00013 }
 316:
                kiloes = _closure1_slot31;
                backup = _closure1_slot0;
                foxtra = _closure1_slot2;
                foxtra = foxtra[sizing];
                foxtra = backup.bind(offset)(foxtra);
                foxtra = foxtra.FormRow;
                backup = foxtra.Arrow;
                foxtra = {};
                romeon = kiloes.bind(offset)(backup, foxtra);
 357:
                entity['trailing'] = romeon;
                entity = golfie.bind(offset)(option, entity);
                tangon['children'] = entity;
                entity = 'mute';
                tangon = golfie.bind(offset)(report, tangon, entity);
                entity = new Array(2);
                entity[0] = tangon;
                zuuluu = null;
                if(!michal) { _fun00014_ip = 469; continue _fun00013 }
 396:
                option = _closure1_slot31;
                golfie = _closure1_slot1;
                romeon = _closure1_slot2;
                tangon = 36;
                report = romeon[tangon];
                golfie = golfie.bind(offset)(report);
                report = {};
                report['muteConfig'] = verify;
                yankee = _closure1_slot0;
                tangon = romeon[tangon];
                tangon = yankee.bind(offset)(tangon);
                tangon = tangon.MuteSettingType;
                tangon = tangon.SERVER;
                report['type'] = tangon;
                tangon = 'muted-until';
                zuuluu = option.bind(offset)(golfie, report, tangon);
 469:
                entity[1] = zuuluu;
                return entity;
 475:
                entity = null;
                if(!michal) { _fun00014_ip = 633; continue _fun00013 }
 483:
                report = _closure1_slot31;
                option = _closure1_slot0;
                offset = _closure1_slot2;
                golfie = 35;
                michal = offset[golfie];
                tangon = undefined;
                michal = option.bind(tangon)(michal);
                zuuluu = michal.NotificationSettingsMuteBanner;
                michal = {};
                yankee = 31;
                romeon = offset[yankee];
                romeon = option.bind(tangon)(romeon);
                foxtra = romeon.intl;
                romeon = foxtra.string;
                yankee = offset[yankee];
                yankee = option.bind(tangon)(yankee);
                yankee = yankee.t;
                yankee = yankee.ZSkXJS;
                yankee = romeon.bind(foxtra)(yankee);
                michal['title'] = yankee;
                golfie = offset[golfie];
                option = option.bind(tangon)(golfie);
                golfie = option.getMuteBannerSubtitleFromConfig;
                golfie = golfie.bind(option)(verify);
                michal['subtitle'] = golfie;
                golfie = {'marginHorizontal': 12, 'marginBottom': 16};
                michal['style'] = golfie;
                oscard = oscard.handleMutePress;
                michal['onPressUnmute'] = oscard;
                entity = report.bind(tangon)(zuuluu, michal);
 633:
                return entity;
            }
        };
        report['value'] = golfie;
        entity[3] = report;
        report = {};
        golfie = 'renderChannels';
        report['key'] = golfie;
        golfie = function() { // Original name: value
            option = this;
            var _closure3_slot0 = option;
            oscard = _closure1_slot31;
            tangon = _closure1_slot0;
            golfie = _closure1_slot2;
            zuuluu = 30;
            entity = golfie[zuuluu];
            report = undefined;
            entity = tangon.bind(report)(entity);
            offset = entity.FormSection;
            verify = {};
            romeon = 31;
            entity = golfie[romeon];
            entity = tangon.bind(report)(entity);
            backup = entity.intl;
            yankee = backup.string;
            entity = golfie[romeon];
            entity = tangon.bind(report)(entity);
            entity = entity.t;
            entity = entity.O4TIvr;
            entity = yankee.bind(backup)(entity);
            verify['title'] = entity;
            entity = golfie[zuuluu];
            entity = tangon.bind(report)(entity);
            yankee = entity.FormRow;
            entity = {};
            sizing = _closure1_slot1;
            foxtra = 37;
            foxtra = golfie[foxtra];
            backup = sizing.bind(report)(foxtra);
            foxtra = {};
            kiloes = 38;
            kiloes = golfie[kiloes];
            kiloes = sizing.bind(report)(kiloes);
            foxtra['source'] = kiloes;
            foxtra = oscard.bind(report)(backup, foxtra);
            entity['leading'] = foxtra;
            foxtra = golfie[romeon];
            foxtra = tangon.bind(report)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            romeon = golfie[romeon];
            romeon = tangon.bind(report)(romeon);
            romeon = romeon.t;
            romeon = romeon.quib7e;
            romeon = foxtra.bind(backup)(romeon);
            entity['label'] = romeon;
            romeon = option.handleAddOverride;
            entity['onPress'] = romeon;
            entity = oscard.bind(report)(yankee, entity);
            verify['children'] = entity;
            entity = 'override-header';
            verify = oscard.bind(report)(offset, verify, entity);
            entity = new Array(2);
            entity[0] = verify;
            zuuluu = golfie[zuuluu];
            zuuluu = tangon.bind(report)(zuuluu);
            tangon = zuuluu.FormSection;
            zuuluu = {};
            golfie = option.getOverriddenChannels;
            option = golfie.bind(option)();
            golfie = option.map;
            michal = function(argFoo) {
                zuuluu = _closure3_slot0;
                michal = zuuluu.renderChannel;
                entity = argFoo;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            michal = golfie.bind(option)(michal);
            zuuluu['children'] = michal;
            michal = 'override-channels';
            michal = oscard.bind(report)(tangon, zuuluu, michal);
            entity[1] = michal;
            return entity;
        };
        report['value'] = golfie;
        entity[4] = report;
        report = {};
        golfie = 'renderChannel';
        report['key'] = golfie;
        golfie = function(argFoo) { // Original name: value
            _fun00015: for(var _fun00016_ip = 0; ; ) switch(_fun00016_ip) {
 0:
                entity = argFoo;
                michal = this;
                var _closure3_slot0 = michal;
                var _closure3_slot1 = entity;
                tangon = _closure1_slot34;
                zuuluu = michal.context;
                report = undefined;
                sizing = tangon.bind(report)(zuuluu);
                oscard = null;
                if(!(oscard == entity)) { _fun00016_ip = 43; continue _fun00015 }
 41:
                return report;
 43:
                zuuluu = michal.props;
                tangon = zuuluu.channelOverrides;
                zuuluu = entity.id;
                zuuluu = tangon[zuuluu];
                option = _closure1_slot0;
                offset = _closure1_slot2;
                tangon = 39;
                tangon = offset[tangon];
                option = option.bind(report)(tangon);
                tangon = option.getChannelIcon;
                output = tangon.bind(option)(entity);
                tangon = entity.parent_id;
                tangon = oscard != tangon;
                romeon = undefined;
                if(!tangon) { _fun00016_ip = 129; continue _fun00015 }
 109:
                offset = _closure1_slot13;
                option = offset.getChannel;
                tangon = entity.parent_id;
                romeon = option.bind(offset)(tangon);
 129:
                option = _closure1_slot0;
                offset = _closure1_slot2;
                tangon = 40;
                tangon = offset[tangon];
                option = option.bind(report)(tangon);
                tangon = option.computeIsMuted;
                tangon = tangon.bind(option)(zuuluu);
                if(tangon) { _fun00016_ip = 399; continue _fun00015 }
 166:
                tangon = zuuluu.message_notifications;
                zuuluu = _closure1_slot22;
                zuuluu = zuuluu.ALL_MESSAGES;
                if(!(zuuluu !== tangon)) { _fun00016_ip = 342; continue _fun00015 }
 189:
                zuuluu = _closure1_slot22;
                zuuluu = zuuluu.ONLY_MENTIONS;
                if(!(zuuluu !== tangon)) { _fun00016_ip = 282; continue _fun00015 }
 203:
                zuuluu = _closure1_slot22;
                zuuluu = zuuluu.NO_MESSAGES;
                kiloes = undefined;
                if(!(zuuluu === tangon)) { _fun00016_ip = 456; continue _fun00015 }
 222:
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                zuuluu = 31;
                tangon = yankee[zuuluu];
                tangon = offset.bind(report)(tangon);
                option = tangon.intl;
                tangon = option.string;
                zuuluu = yankee[zuuluu];
                zuuluu = offset.bind(report)(zuuluu);
                zuuluu = zuuluu.t;
                zuuluu = zuuluu.CtVGyc;
                kiloes = tangon.bind(option)(zuuluu);
                _fun00016_ip = 456; continue _fun00015;
 282:
                tangon = _closure1_slot0;
                yankee = _closure1_slot2;
                zuuluu = 31;
                option = yankee[zuuluu];
                option = tangon.bind(report)(option);
                offset = option.intl;
                option = offset.format;
                zuuluu = yankee[zuuluu];
                zuuluu = tangon.bind(report)(zuuluu);
                zuuluu = zuuluu.t;
                tangon = zuuluu.L2hmY2;
                zuuluu = {};
                kiloes = option.bind(offset)(tangon, zuuluu);
                _fun00016_ip = 456; continue _fun00015;
 342:
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                zuuluu = 31;
                tangon = yankee[zuuluu];
                tangon = offset.bind(report)(tangon);
                option = tangon.intl;
                tangon = option.string;
                zuuluu = yankee[zuuluu];
                zuuluu = offset.bind(report)(zuuluu);
                zuuluu = zuuluu.t;
                zuuluu = zuuluu.n/bTaW;
                kiloes = tangon.bind(option)(zuuluu);
                _fun00016_ip = 456; continue _fun00015;
 399:
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                zuuluu = 31;
                tangon = yankee[zuuluu];
                tangon = offset.bind(report)(tangon);
                option = tangon.intl;
                tangon = option.string;
                zuuluu = yankee[zuuluu];
                zuuluu = offset.bind(report)(zuuluu);
                zuuluu = zuuluu.t;
                zuuluu = zuuluu.fpKdS0;
                kiloes = tangon.bind(option)(zuuluu);
 456:
                michal = michal.props;
                michal = michal.shouldUseNewNotificationSystem;
                if(!michal) { _fun00016_ip = 548; continue _fun00015 }
 470:
                option = _closure1_slot0;
                offset = _closure1_slot2;
                michal = 41;
                zuuluu = offset[michal];
                tangon = option.bind(report)(zuuluu);
                zuuluu = tangon.presetName;
                michal = offset[michal];
                yankee = option.bind(report)(michal);
                offset = yankee.presetFromSettings;
                foxtra = _closure1_slot19;
                michal = foxtra.resolveUnreadSetting;
                option = michal.bind(foxtra)(entity);
                michal = foxtra.resolvedMessageNotifications;
                michal = michal.bind(foxtra)(entity);
                michal = offset.bind(yankee)(option, michal);
                kiloes = zuuluu.bind(tangon)(michal);
 548:
                tangon = _closure1_slot31;
                yankee = _closure1_slot0;
                option = _closure1_slot2;
                foxtra = 30;
                michal = option[foxtra];
                michal = yankee.bind(report)(michal);
                zuuluu = michal.FormRow;
                michal = {};
                echoed = _closure1_slot1;
                result = 37;
                offset = option[result];
                backup = echoed.bind(report)(offset);
                offset = {};
                result = option[result];
                result = echoed.bind(report)(result);
                result = result.Sizes;
                result = result.CUSTOM;
                offset['size'] = result;
                offset['source'] = output;
                output = sizing.channelIcon;
                offset['style'] = output;
                offset = tangon.bind(report)(backup, offset);
                michal['leading'] = offset;
                offset = 42;
                option = option[offset];
                output = yankee.bind(report)(option);
                backup = output.computeChannelName;
                yankee = _closure1_slot20;
                option = _closure1_slot18;
                option = backup.bind(output)(entity, yankee, option);
                michal['label'] = option;
                golfie = function() { // Original name: onPress
                    zuuluu = _closure3_slot0;
                    michal = zuuluu.handleChannelSelect;
                    entity = _closure3_slot1;
                    entity = entity.id;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                michal['onPress'] = golfie;
                golfie = oscard != romeon;
                oscard = null;
                if(!golfie) { _fun00016_ip = 743; continue _fun00015 }
 705:
                option = _closure1_slot0;
                golfie = _closure1_slot2;
                golfie = golfie[offset];
                yankee = option.bind(report)(golfie);
                offset = yankee.computeChannelName;
                option = _closure1_slot20;
                golfie = _closure1_slot18;
                oscard = offset.bind(yankee)(romeon, option, golfie);
 743:
                michal['subLabel'] = oscard;
                option = _closure1_slot32;
                golfie = _closure1_slot11;
                oscard = {};
                offset = sizing.channelOverrideType;
                oscard['style'] = offset;
                romeon = _closure1_slot31;
                yankee = _closure1_slot0;
                offset = _closure1_slot2;
                verify = 43;
                verify = offset[verify];
                verify = yankee.bind(report)(verify);
                backup = verify.Text;
                verify = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted'};
                sizing = sizing.channelOverrideTypeText;
                verify['style'] = sizing;
                verify['children'] = kiloes;
                backup = romeon.bind(report)(backup, verify);
                verify = new Array(2);
                verify[0] = backup;
                offset = offset[foxtra];
                offset = yankee.bind(report)(offset);
                offset = offset.FormRow;
                yankee = offset.Arrow;
                offset = {};
                offset = romeon.bind(report)(yankee, offset);
                verify[1] = offset;
                oscard['children'] = verify;
                oscard = option.bind(report)(golfie, oscard);
                michal['trailing'] = oscard;
                entity = entity.id;
                entity = tangon.bind(report)(zuuluu, michal, entity);
                return entity;
            }
        };
        report['value'] = golfie;
        entity[5] = report;
        report = {};
        golfie = 'render';
        report['key'] = golfie;
        golfie = function() { // Original name: value
            _fun00017: for(var _fun00018_ip = 0; ; ) switch(_fun00018_ip) {
 0:
                golfie = this;
                entity = golfie.props;
                tangon = entity.guild;
                entity = null;
                entity = entity == tangon;
                report = undefined;
                michal = undefined;
                if(entity) { _fun00018_ip = 50; continue _fun00017 }
 26:
                zuuluu = tangon.hasFeature;
                entity = _closure1_slot27;
                entity = entity.HUB;
                michal = zuuluu.bind(tangon)(entity);
 50:
                entity = true;
                if(!(entity !== michal)) { _fun00018_ip = 169; continue _fun00017 }
 56:
                zuuluu = _closure1_slot32;
                michal = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 30;
                entity = tangon[entity];
                entity = michal.bind(report)(entity);
                michal = entity.Form;
                entity = {};
                tangon = golfie.renderMuteSection;
                oscard = tangon.bind(golfie)();
                tangon = new Array(4);
                tangon[0] = oscard;
                oscard = golfie.renderServerSettings;
                oscard = oscard.bind(golfie)();
                tangon[1] = oscard;
                oscard = golfie.renderNotificationOptions;
                oscard = oscard.bind(golfie)();
                tangon[2] = oscard;
                oscard = golfie.renderChannels;
                oscard = oscard.bind(golfie)();
                tangon[3] = oscard;
                entity['children'] = tangon;
                entity = zuuluu.bind(report)(michal, entity);
                _fun00018_ip = 224; continue _fun00017;
 169:
                tangon = _closure1_slot31;
                zuuluu = _closure1_slot0;
                oscard = _closure1_slot2;
                michal = 30;
                michal = oscard[michal];
                michal = zuuluu.bind(report)(michal);
                zuuluu = michal.Form;
                michal = {};
                oscard = golfie.renderMuteSection;
                oscard = oscard.bind(golfie)();
                michal['children'] = oscard;
                entity = tangon.bind(report)(zuuluu, michal);
 224:
                return entity;
            }
        };
        report['value'] = golfie;
        entity[6] = report;
        report = {};
        golfie = 'getOverriddenChannels';
        report['key'] = golfie;
        oscard = function() { // Original name: value
            option = this;
            michal = option.props;
            tangon = michal.channels;
            golfie = michal.channelOverrides;
            michal = global;
            report = michal.Set;
            oscard = _closure1_slot0;
            zuuluu = _closure1_slot2;
            michal = 44;
            zuuluu = zuuluu[michal];
            michal = undefined;
            oscard = oscard.bind(michal)(zuuluu);
            zuuluu = oscard.filterOverrides;
            michal = {};
            verify = false;
            michal['ignoreNotificationSetting'] = verify;
            verify = option.props;
            verify = verify.shouldUseNewNotificationSystem;
            michal['ignoreMute'] = verify;
            option = option.props;
            option = option.shouldUseNewNotificationSystem;
            option = !option;
            michal['ignoreUnreadSetting'] = option;
            yankee = zuuluu.bind(oscard)(golfie, michal);
            zuuluu = report.prototype;
            zuuluu = Object.create(zuuluu, {constructor: {value: report}});
            romeon = zuuluu;
            michal = new romeon[report](yankee, offset);
            michal = michal instanceof Object ? michal : zuuluu;
            var _closure3_slot0 = michal;
            zuuluu = tangon.map;
            michal = function(argFoo) {
                _fun00019: for(var _fun00020_ip = 0; ; ) switch(_fun00020_ip) {
 0:
                    entity = argFoo;
                    michal = entity.channel;
                    tangon = _closure3_slot0;
                    zuuluu = tangon.has;
                    entity = michal.id;
                    zuuluu = zuuluu.bind(tangon)(entity);
                    entity = null;
                    if(!zuuluu) { _fun00020_ip = 38; continue _fun00019 }
 35:
                    entity = michal;
 38:
                    return entity;
                }
            };
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.filter;
            entity = function(argFoo) {
                entity = argFoo;
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        report['value'] = oscard;
        entity[7] = report;
        entity = michal.bind(zuuluu)(tangon, entity);
        return entity;
    };
    michal = michal.bind(entity)(report);
    var _closure1_slot35 = michal;
    report = 45;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.ThemeContext;
    michal['contextType'] = report;
    report = function(argFoo) { // Original name: ConnectedNotificationSettings
        michal = argFoo;
        backup = michal.guildId;
        var _closure2_slot0 = backup;
        golfie = _closure1_slot0;
        verify = _closure1_slot2;
        michal = 46;
        michal = verify[michal];
        tangon = undefined;
        zuuluu = golfie.bind(tangon)(michal);
        michal = zuuluu.useNavigation;
        romeon = michal.bind(zuuluu)();
        michal = 47;
        michal = verify[michal];
        option = golfie.bind(tangon)(michal);
        oscard = option.useStateFromStoresObject;
        michal = _closure1_slot19;
        zuuluu = new Array(4);
        zuuluu[0] = michal;
        michal = _closure1_slot16;
        zuuluu[1] = michal;
        michal = _closure1_slot14;
        zuuluu[2] = michal;
        michal = _closure1_slot15;
        zuuluu[3] = michal;
        michal = function() {
            entity = {};
            report = _closure1_slot16;
            zuuluu = report.getGuild;
            tangon = _closure2_slot0;
            zuuluu = zuuluu.bind(report)(tangon);
            entity['guild'] = zuuluu;
            zuuluu = _closure1_slot19;
            report = zuuluu.isSuppressEveryoneEnabled;
            report = report.bind(zuuluu)(tangon);
            entity['suppressEveryone'] = report;
            report = zuuluu.isSuppressRolesEnabled;
            report = report.bind(zuuluu)(tangon);
            entity['suppressRoles'] = report;
            report = zuuluu.isMobilePushEnabled;
            report = report.bind(zuuluu)(tangon);
            entity['mobilePush'] = report;
            report = zuuluu.isMuteScheduledEventsEnabled;
            report = report.bind(zuuluu)(tangon);
            entity['muteEvents'] = report;
            report = zuuluu.isMuted;
            report = report.bind(zuuluu)(tangon);
            entity['muted'] = report;
            report = zuuluu.getMuteConfig;
            report = report.bind(zuuluu)(tangon);
            entity['muteConfig'] = report;
            report = zuuluu.getMessageNotifications;
            report = report.bind(zuuluu)(tangon);
            entity['messageNotifications'] = report;
            report = zuuluu.getChannelOverrides;
            report = report.bind(zuuluu)(tangon);
            entity['channelOverrides'] = report;
            oscard = _closure1_slot14;
            report = oscard.getCategories;
            report = report.bind(oscard)(tangon);
            entity['categories'] = report;
            report = _closure1_slot15;
            michal = report.getMemberCount;
            michal = michal.bind(report)(tangon);
            entity['guildMemberCount'] = michal;
            michal = zuuluu.getNotifyHighlights;
            michal = michal.bind(zuuluu)(tangon);
            entity['notifyHighlights'] = michal;
            return entity;
        };
        oscard = oscard.bind(option)(zuuluu, michal);
        option = oscard.categories;
        var _closure2_slot1 = option;
        zuuluu = _closure1_slot4;
        michal = _closure1_slot3;
        offset = zuuluu.bind(tangon)(oscard, michal);
        oscard = _closure1_slot10;
        zuuluu = oscard.useMemo;
        michal = new Array(1);
        michal[0] = option;
        entity = function() {
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 48;
            entity = zuuluu[entity];
            report = undefined;
            tangon = michal.bind(report)(entity);
            zuuluu = _closure2_slot1;
            michal = zuuluu._categories;
            entity = function(argFoo) {
                _fun00021: for(var _fun00022_ip = 0; ; ) switch(_fun00022_ip) {
 0:
                    entity = argFoo;
                    entity = entity.channel;
                    zuuluu = entity.type;
                    tangon = _closure1_slot12;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu);
                    if(entity) { _fun00022_ip = 44; continue _fun00021 }
 30:
                    michal = _closure1_slot23;
                    michal = michal.GUILD_CATEGORY;
                    entity = zuuluu === michal;
 44:
                    return entity;
                }
            };
            entity = tangon.bind(report)(michal, zuuluu, entity);
            return entity;
        };
        foxtra = zuuluu.bind(oscard)(entity, michal);
        entity = 44;
        entity = verify[entity];
        zuuluu = golfie.bind(tangon)(entity);
        michal = zuuluu.useShouldUseNewNotificationSystem;
        entity = 'NotificationSettingsModalNative';
        yankee = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot32;
        entity = 49;
        entity = verify[entity];
        entity = golfie.bind(tangon)(entity);
        michal = entity.RedesignCompat;
        entity = {};
        option = _closure1_slot31;
        oscard = _closure1_slot35;
        report = {};
        report['guildId'] = backup;
        report['channels'] = foxtra;
        report['navigation'] = romeon;
        report['shouldUseNewNotificationSystem'] = yankee;
        sizing = report;
        kiloes = offset;
        offset = copyDataProperties(sizing, kiloes);
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = 50;
        oscard = verify[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.NavScrim;
        oscard = {};
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot36 = report;
    report = 55;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/notification_settings/native/NotificationSettingsModal.native.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function() { // Original name: NotificationSettingsModal
        _fun00023: for(var _fun00024_ip = 0; ; ) switch(_fun00024_ip) {
 0:
            michal = _closure1_slot0;
            oscard = _closure1_slot2;
            zuuluu = 47;
            zuuluu = oscard[zuuluu];
            tangon = undefined;
            verify = michal.bind(tangon)(zuuluu);
            golfie = verify.useStateFromStores;
            zuuluu = _closure1_slot17;
            report = new Array(1);
            report[0] = zuuluu;
            zuuluu = function() {
                michal = _closure1_slot17;
                entity = michal.getProps;
                entity = entity.bind(michal)();
                entity = entity.guildId;
                return entity;
            };
            golfie = golfie.bind(verify)(report, zuuluu);
            verify = _closure1_slot10;
            report = verify.useMemo;
            zuuluu = function() {
                michal = function() { // Original name: getScreens
                    entity = {};
                    michal = _closure1_slot24;
                    golfie = michal.OVERVIEW;
                    zuuluu = {};
                    verify = _closure1_slot0;
                    offset = _closure1_slot2;
                    oscard = 51;
                    yankee = offset[oscard];
                    option = undefined;
                    romeon = verify.bind(option)(yankee);
                    yankee = romeon.getHeaderCloseButton;
                    foxtra = _closure1_slot1;
                    report = 24;
                    report = offset[report];
                    report = foxtra.bind(option)(report);
                    report = report.close;
                    report = yankee.bind(romeon)(report);
                    zuuluu['headerLeft'] = report;
                    report = 31;
                    yankee = offset[report];
                    yankee = verify.bind(option)(yankee);
                    foxtra = yankee.intl;
                    romeon = foxtra.string;
                    yankee = offset[report];
                    yankee = verify.bind(option)(yankee);
                    yankee = yankee.t;
                    yankee = yankee.h850Sk;
                    yankee = romeon.bind(foxtra)(yankee);
                    zuuluu['title'] = yankee;
                    yankee = function(argFoo) { // Original name: render
                        entity = argFoo;
                        entity = entity.guildId;
                        tangon = _closure1_slot31;
                        zuuluu = _closure1_slot36;
                        michal = {};
                        michal['guildId'] = entity;
                        entity = undefined;
                        entity = tangon.bind(entity)(zuuluu, michal);
                        return entity;
                    };
                    zuuluu['render'] = yankee;
                    entity[golfie] = zuuluu;
                    golfie = michal.ADD_OVERRIDE;
                    zuuluu = {};
                    yankee = offset[report];
                    yankee = verify.bind(option)(yankee);
                    foxtra = yankee.intl;
                    romeon = foxtra.string;
                    yankee = offset[report];
                    yankee = verify.bind(option)(yankee);
                    yankee = yankee.t;
                    yankee = yankee.s7vIQU;
                    yankee = romeon.bind(foxtra)(yankee);
                    zuuluu['title'] = yankee;
                    yankee = offset[oscard];
                    romeon = verify.bind(option)(yankee);
                    yankee = romeon.getHeaderBackButton;
                    yankee = yankee.bind(romeon)();
                    zuuluu['headerLeft'] = yankee;
                    yankee = function(argFoo, argBar) { // Original name: render
                        entity = argFoo;
                        report = entity.guildId;
                        tangon = _closure1_slot31;
                        michal = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 52;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)(entity);
                        entity = {};
                        entity['guildId'] = report;
                        report = argBar;
                        entity['navigation'] = report;
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    zuuluu['render'] = yankee;
                    entity[golfie] = zuuluu;
                    zuuluu = michal.CHANNEL_OVERRIDE;
                    michal = {};
                    oscard = offset[oscard];
                    golfie = verify.bind(option)(oscard);
                    oscard = golfie.getHeaderBackButton;
                    oscard = oscard.bind(golfie)();
                    michal['headerLeft'] = oscard;
                    oscard = offset[report];
                    oscard = verify.bind(option)(oscard);
                    golfie = oscard.intl;
                    oscard = golfie.string;
                    report = offset[report];
                    report = verify.bind(option)(report);
                    report = report.t;
                    report = report.h850Sk;
                    report = oscard.bind(golfie)(report);
                    michal['title'] = report;
                    tangon = function(argFoo) { // Original name: render
                        entity = argFoo;
                        report = entity.channelId;
                        tangon = _closure1_slot31;
                        michal = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 53;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)(entity);
                        entity = {};
                        entity['channelId'] = report;
                        report = true;
                        entity['inGuildContext'] = report;
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    michal['render'] = tangon;
                    entity[zuuluu] = michal;
                    return entity;
                };
                entity = undefined;
                entity = michal.bind(entity)();
                return entity;
            };
            entity = new Array(0);
            report = report.bind(verify)(zuuluu, entity);
            zuuluu = _closure1_slot31;
            entity = 54;
            entity = oscard[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.Navigator;
            entity = {};
            entity['screens'] = report;
            oscard = {};
            report = _closure1_slot24;
            report = report.OVERVIEW;
            oscard['name'] = report;
            report = {};
            verify = null;
            if(!(verify == golfie)) { _fun00024_ip = 140; continue _fun00023 }
 136:
            golfie = _closure1_slot30;
 140:
            report['guildId'] = golfie;
            oscard['params'] = report;
            report = new Array(1);
            report[0] = oscard;
            entity['initialRouteStack'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['NotificationSettings'] = michal;
    return entity;
})();