// app/modules/emojis/FrecencyListSplitExperiment.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    tangon = {};
    romeon = true;
    tangon['value'] = romeon;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = golfie[entity];
    entity = undefined;
    verify = oscard.bind(entity)(tangon);
    option = verify.createExperiment;
    tangon = {'kind': 'user', 'id': '2024-06_frecency_list_split', 'label': 'Frecency List Split'};
    report = {};
    offset = false;
    report['canSplitFrecencyList'] = offset;
    tangon['defaultConfig'] = report;
    yankee = {'id': 1, 'label': 'Split frecency emoji messages from reactions'};
    report = 1;
    offset = {};
    offset['canSplitFrecencyList'] = romeon;
    yankee['config'] = offset;
    offset = new Array(1);
    offset[0] = yankee;
    tangon['treatments'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot0 = tangon;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/emojis/FrecencyListSplitExperiment.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    michal = function(argFoo) { // Original name: useCanSplitFrecencyList
        entity = argFoo;
        michal = entity.location;
        oscard = entity.autoTrackExposure;
        entity = {};
        report = _closure1_slot0;
        tangon = report.useExperiment;
        zuuluu = {};
        zuuluu['location'] = michal;
        michal = {};
        michal['autoTrackExposure'] = oscard;
        michal = tangon.bind(report)(zuuluu, michal);
        michal = michal.canSplitFrecencyList;
        entity['canSplitFrecencyList'] = michal;
        return entity;
    };
    zuuluu['useCanSplitFrecencyList'] = michal;
    return entity;
})();