// app/modules/create_guild/native/components/GuildTemplates.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: GuildTemplatesItem
        entity = argFoo;
        oscar = entity.guildTemplate;
        var _closure2_slot0 = oscar;
        entity = entity.onGuildTemplatePress;
        var _closure2_slot1 = entity;
        tango = _closure1_slot14;
        mike = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 17;
        entity = verify[entity];
        zulu = undefined;
        mike = mike.bind(zulu)(entity);
        entity = {};
        options = _closure1_slot0;
        golf = 18;
        golf = verify[golf];
        golf = options.bind(zulu)(golf);
        options = golf.GUILD_TEMPLATE_ICONS;
        golf = oscar.id;
        golf = options[golf];
        entity['icon'] = golf;
        oscar = oscar.label;
        entity['message'] = oscar;
        report = function() { // Original name: onPress
            zulu = _closure2_slot1;
            mike = _closure2_slot0;
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            return entity;
        };
        entity['onPress'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    var _closure1_slot19 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    yankee = 1;
    golf = oscar[yankee];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    tango = tango.ScrollView;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.getGuildTemplatesMap;
    var _closure1_slot7 = golf;
    tango = tango.GuildTemplateId;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.CreateGuildModalStates;
    var _closure1_slot9 = golf;
    golf = tango.GuildTemplateTriggers;
    var _closure1_slot10 = golf;
    tango = tango.NUXGuildTemplatesAnalytics;
    var _closure1_slot11 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticEvents;
    var _closure1_slot12 = golf;
    tango = tango.AnalyticsLocations;
    var _closure1_slot13 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot14 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot15 = tango;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flex'] = yankee;
    tango['flex'] = verify;
    verify = {};
    offset = 8;
    foxtrot = oscar[offset];
    foxtrot = report.bind(entity)(foxtrot);
    foxtrot = foxtrot.NAV_BAR_HEIGHT;
    verify['marginTop'] = foxtrot;
    tango['contentContainer'] = verify;
    verify = {};
    verify['flex'] = yankee;
    yankee = 9;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_MOBILE_PRIMARY;
    verify['backgroundColor'] = foxtrot;
    tango['scrollContainer'] = verify;
    verify = {'alignItems': 'center', 'paddingTop': 20, 'paddingBottom': 20, 'paddingHorizontal': 16};
    tango['headerContainer'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 8};
    tango['headerTitle'] = verify;
    verify = {'lineHeight': 18, 'textAlign': 'center'};
    tango['headerDescription'] = verify;
    verify = {'paddingTop': 20, 'paddingBottom': 4, 'paddingHorizontal': 16};
    tango['subHeader'] = verify;
    verify = {'backgroundColor': null, 'position': 'absolute', 'bottom': 0, 'width': '100%'};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = yankee;
    tango['footerSafeAreaContainer'] = verify;
    verify = {'padding': 16, 'gap': 16, 'minHeight': 110, 'justifyContent': 'center'};
    tango['footerContainer'] = verify;
    verify = {'alignSelf': 'center', 'textAlign': 'center'};
    tango['footerTitle'] = verify;
    verify = {};
    verify['flexGrow'] = entity;
    tango['footerButton'] = verify;
    verify = {};
    verify['marginLeft'] = offset;
    tango['backButton'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot16 = tango;
    tango = function() { // Original name: GuildTemplatesHeader
        entity = _closure1_slot16;
        tango = undefined;
        offset = entity.bind(tango)();
        zulu = _closure1_slot15;
        mike = _closure1_slot5;
        entity = {};
        report = offset.headerContainer;
        entity['style'] = report;
        yankee = _closure1_slot14;
        romeo = _closure1_slot0;
        foxtrot = _closure1_slot2;
        oscar = 10;
        report = foxtrot[oscar];
        report = romeo.bind(tango)(report);
        options = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        verify = offset.headerTitle;
        report['style'] = verify;
        verify = 11;
        backup = foxtrot[verify];
        backup = romeo.bind(tango)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[verify];
        backup = romeo.bind(tango)(backup);
        backup = backup.t;
        backup = backup.5HZu09;
        backup = kilo.bind(sizing)(backup);
        report['children'] = backup;
        options = yankee.bind(tango)(options, report);
        report = new Array(2);
        report[0] = options;
        options = _closure1_slot14;
        oscar = foxtrot[oscar];
        oscar = romeo.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        offset = offset.headerDescription;
        oscar['style'] = offset;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        verify = verify.t;
        verify = verify./k/L/v;
        verify = offset.bind(yankee)(verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot17 = tango;
    tango = function(argFoo) { // Original name: GuildTemplatesJoinFooter
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            zulu = entity.trigger;
            var _closure2_slot0 = zulu;
            entity = entity.onHeightChange;
            var _closure2_slot1 = entity;
            mike = _closure1_slot16;
            tango = undefined;
            foxtrot = mike.bind(tango)();
            report = _closure1_slot0;
            oscar = _closure1_slot2;
            mike = 12;
            mike = oscar[mike];
            report = report.bind(tango)(mike);
            mike = report.useNavigation;
            mike = mike.bind(report)();
            var _closure2_slot2 = mike;
            report = _closure1_slot1;
            mike = 13;
            mike = oscar[mike];
            mike = report.bind(tango)(mike);
            mike = mike.bind(tango)();
            verify = mike.bottom;
            mike = _closure1_slot10;
            mike = mike.NUF;
            if(!(zulu !== mike)) { _fun00002_ip = 168; continue _fun00001 }
 111:
            oscar = _closure1_slot0;
            golf = _closure1_slot2;
            mike = 11;
            zulu = golf[mike];
            zulu = oscar.bind(tango)(zulu);
            report = zulu.intl;
            zulu = report.string;
            mike = golf[mike];
            mike = oscar.bind(tango)(mike);
            mike = mike.t;
            mike = mike.riOUtL;
            romeo = zulu.bind(report)(mike);
            _fun00002_ip = 225; continue _fun00001;
 168:
            oscar = _closure1_slot0;
            golf = _closure1_slot2;
            mike = 11;
            zulu = golf[mike];
            zulu = oscar.bind(tango)(zulu);
            report = zulu.intl;
            zulu = report.string;
            mike = golf[mike];
            mike = oscar.bind(tango)(mike);
            mike = mike.t;
            mike = mike.INo2ND;
            romeo = zulu.bind(report)(mike);
 225:
            report = _closure1_slot4;
            zulu = report.useCallback;
            mike = new Array(1);
            mike[0] = entity;
            entity = function(argFoo) {
                zulu = _closure2_slot1;
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                mike = entity.height;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            report = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot14;
            mike = _closure1_slot5;
            entity = {};
            golf = foxtrot.footerSafeAreaContainer;
            oscar = new Array(2);
            oscar[0] = golf;
            golf = {};
            golf['paddingBottom'] = verify;
            oscar[1] = golf;
            entity['style'] = oscar;
            entity['onLayout'] = report;
            oscar = _closure1_slot15;
            report = {};
            golf = foxtrot.footerContainer;
            report['style'] = golf;
            offset = _closure1_slot14;
            result = _closure1_slot0;
            backup = _closure1_slot2;
            golf = 10;
            golf = backup[golf];
            golf = result.bind(tango)(golf);
            verify = golf.Text;
            golf = {'style': null, 'variant': 'heading-lg/semibold', 'color': 'header-primary'};
            kilo = foxtrot.footerTitle;
            golf['style'] = kilo;
            kilo = 11;
            sizing = backup[kilo];
            sizing = result.bind(tango)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kilo = backup[kilo];
            kilo = result.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.N+Mi/f;
            kilo = sizing.bind(output)(kilo);
            golf['children'] = kilo;
            verify = offset.bind(tango)(verify, golf);
            golf = new Array(2);
            golf[0] = verify;
            offset = _closure1_slot14;
            verify = _closure1_slot1;
            options = 14;
            options = backup[options];
            verify = verify.bind(tango)(options);
            options = {};
            foxtrot = foxtrot.footerButton;
            options['style'] = foxtrot;
            options['text'] = romeo;
            yankee = function() { // Original name: onPress
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tango = _closure2_slot0;
                    zulu = _closure1_slot10;
                    zulu = zulu.NUF;
                    if(!(tango !== zulu)) { _fun00004_ip = 107; continue _fun00003 }
 24:
                    tango = _closure2_slot0;
                    zulu = _closure1_slot10;
                    zulu = zulu.IN_APP;
                    if(!(tango === zulu)) { _fun00004_ip = 203; continue _fun00003 }
 45:
                    report = _closure1_slot1;
                    tango = _closure1_slot2;
                    zulu = 16;
                    tango = tango[zulu];
                    zulu = undefined;
                    oscar = report.bind(zulu)(tango);
                    report = oscar.track;
                    zulu = _closure1_slot12;
                    tango = zulu.JOIN_GUILD_VIEWED;
                    zulu = {};
                    golf = _closure1_slot13;
                    golf = golf.CREATE_JOIN_GUILD_MODAL;
                    zulu['location_section'] = golf;
                    zulu = report.bind(oscar)(tango, zulu);
                    _fun00004_ip = 203; continue _fun00003;
 107:
                    tango = _closure1_slot0;
                    oscar = _closure1_slot2;
                    zulu = 15;
                    zulu = oscar[zulu];
                    report = undefined;
                    verify = tango.bind(report)(zulu);
                    options = verify.trackNUFStep;
                    zulu = _closure1_slot11;
                    golf = zulu.STEP_GUILD_TEMPLATE;
                    tango = zulu.STEP_GUILD_JOIN;
                    zulu = {};
                    offset = false;
                    zulu['skip'] = offset;
                    zulu = options.bind(verify)(golf, tango, zulu);
                    tango = _closure1_slot1;
                    zulu = 16;
                    zulu = oscar[zulu];
                    report = tango.bind(report)(zulu);
                    tango = report.track;
                    zulu = _closure1_slot12;
                    zulu = zulu.JOIN_GUILD_VIEWED;
                    zulu = tango.bind(report)(zulu);
 203:
                    tango = _closure2_slot2;
                    zulu = tango.push;
                    entity = _closure1_slot9;
                    mike = entity.JOIN_SERVER;
                    entity = {};
                    entity = zulu.bind(tango)(mike, entity);
                    entity = undefined;
                    return entity;
                }
            };
            options['onPress'] = yankee;
            options = offset.bind(tango)(verify, options);
            golf[1] = options;
            report['children'] = golf;
            report = oscar.bind(tango)(mike, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot18 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/create_guild/native/components/GuildTemplates.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildTemplates
        mike = argFoo;
        foxtrot = mike.trigger;
        var _closure2_slot0 = foxtrot;
        golf = mike.location;
        var _closure2_slot1 = golf;
        mike = mike.fromStep;
        var _closure2_slot2 = mike;
        zulu = _closure1_slot16;
        tango = undefined;
        yankee = zulu.bind(tango)();
        report = _closure1_slot1;
        sequence = _closure1_slot2;
        zulu = 13;
        zulu = sequence[zulu];
        zulu = report.bind(tango)(zulu);
        zulu = zulu.bind(tango)();
        kilo = zulu.bottom;
        vacuum = _closure1_slot0;
        zulu = 12;
        zulu = sequence[zulu];
        report = vacuum.bind(tango)(zulu);
        zulu = report.useNavigation;
        zulu = zulu.bind(report)();
        var _closure2_slot3 = zulu;
        report = _closure1_slot4;
        oscar = report.useEffect;
        zulu = new Array(3);
        zulu[0] = foxtrot;
        zulu[1] = golf;
        zulu[2] = mike;
        mike = function() {
            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                tango = _closure2_slot0;
                zulu = _closure1_slot10;
                zulu = zulu.NUF;
                if(!(tango !== zulu)) { _fun00006_ip = 129; continue _fun00005 }
 24:
                tango = _closure2_slot0;
                zulu = _closure1_slot10;
                zulu = zulu.IN_APP;
                if(!(tango === zulu)) { _fun00006_ip = 209; continue _fun00005 }
 45:
                report = _closure1_slot1;
                tango = _closure1_slot2;
                zulu = 16;
                tango = tango[zulu];
                zulu = undefined;
                oscar = report.bind(zulu)(tango);
                report = oscar.track;
                zulu = _closure1_slot12;
                tango = zulu.OPEN_MODAL;
                zulu = {};
                golf = 'Create Guild Templates';
                zulu['type'] = golf;
                options = _closure2_slot1;
                golf = null;
                options = golf != options;
                golf = 'Guild List';
                if(!options) { _fun00006_ip = 117; continue _fun00005 }
 113:
                golf = _closure2_slot1;
 117:
                zulu['source'] = golf;
                zulu = report.bind(oscar)(tango, zulu);
                _fun00006_ip = 209; continue _fun00005;
 129:
                report = _closure1_slot0;
                tango = _closure1_slot2;
                zulu = 15;
                tango = tango[zulu];
                zulu = undefined;
                report = report.bind(zulu)(tango);
                tango = report.trackNUFStep;
                oscar = _closure2_slot2;
                zulu = null;
                if(!(zulu == oscar)) { _fun00006_ip = 179; continue _fun00005 }
 167:
                zulu = _closure1_slot11;
                zulu = zulu.STEP_REGISTRATION;
                _fun00006_ip = 183; continue _fun00005;
 179:
                zulu = _closure2_slot2;
 183:
                entity = _closure1_slot11;
                mike = entity.STEP_GUILD_TEMPLATE;
                entity = {};
                oscar = false;
                entity['skip'] = oscar;
                entity = tango.bind(report)(zulu, mike, entity);
 209:
                entity = undefined;
                return entity;
            }
        };
        mike = oscar.bind(report)(mike, zulu);
        update = function(argFoo) { // Original name: onGuildTemplatePress
            _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                report = argFoo;
                golf = _closure2_slot3;
                oscar = golf.push;
                mike = _closure1_slot9;
                tango = mike.CREATION_INTENT;
                mike = {};
                mike['guildTemplate'] = report;
                zulu = _closure2_slot0;
                mike['trigger'] = zulu;
                mike = oscar.bind(golf)(tango, mike);
                mike = _closure1_slot10;
                mike = mike.IN_APP;
                if(!(zulu === mike)) { _fun00008_ip = 119; continue _fun00007 }
 64:
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                mike = 16;
                zulu = zulu[mike];
                mike = undefined;
                tango = tango.bind(mike)(zulu);
                zulu = tango.track;
                entity = _closure1_slot12;
                mike = entity.GUILD_TEMPLATE_SELECTED;
                entity = {};
                report = report.id;
                entity['template_name'] = report;
                entity = zulu.bind(tango)(mike, entity);
 119:
                entity = undefined;
                return entity;
            }
        };
        zulu = report.useState;
        mike = _closure1_slot7;
        mike = mike.bind(tango)();
        mike = zulu.bind(report)(mike);
        options = _closure1_slot3;
        zulu = 1;
        mike = options.bind(tango)(mike, zulu);
        oscar = 0;
        control = mike[oscar];
        golf = report.useState;
        mike = 110;
        golf = golf.bind(report)(mike);
        mike = 2;
        mike = options.bind(tango)(golf, mike);
        backup = mike[oscar];
        mike = mike[zulu];
        var _closure2_slot4 = mike;
        zulu = report.useCallback;
        mike = function(argFoo) {
            zulu = _closure2_slot4;
            entity = undefined;
            mike = argFoo;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        entity = new Array(0);
        romeo = zulu.bind(report)(mike, entity);
        zulu = _closure1_slot14;
        entity = 19;
        entity = sequence[entity];
        entity = vacuum.bind(tango)(entity);
        mike = entity.SafeAreaPaddingView;
        entity = {};
        report = true;
        entity['top'] = report;
        oscar = yankee.flex;
        report = new Array(2);
        report[0] = oscar;
        oscar = yankee.contentContainer;
        report[1] = oscar;
        entity['style'] = report;
        golf = _closure1_slot15;
        oscar = _closure1_slot5;
        report = {};
        options = yankee.flex;
        report['style'] = options;
        offset = _closure1_slot6;
        options = {};
        yankee = yankee.scrollContainer;
        options['style'] = yankee;
        yankee = {};
        kilo = backup + kilo;
        backup = 16;
        backup = kilo + backup;
        yankee['paddingBottom'] = backup;
        options['contentContainerStyle'] = yankee;
        kilo = _closure1_slot14;
        backup = _closure1_slot17;
        yankee = {};
        backup = kilo.bind(tango)(backup, yankee);
        yankee = new Array(3);
        yankee[0] = backup;
        output = _closure1_slot14;
        backup = 20;
        kilo = sequence[backup];
        kilo = vacuum.bind(tango)(kilo);
        sizing = kilo.FormSection;
        kilo = {};
        config = _closure1_slot14;
        echo = _closure1_slot19;
        result = {};
        source = _closure1_slot8;
        record = source.CREATE;
        record = control[record];
        result['guildTemplate'] = record;
        result['onGuildTemplatePress'] = update;
        result = config.bind(tango)(echo, result);
        kilo['children'] = result;
        kilo = output.bind(tango)(sizing, kilo);
        yankee[1] = kilo;
        backup = sequence[backup];
        backup = vacuum.bind(tango)(backup);
        kilo = backup.FormSection;
        backup = {};
        sizing = 11;
        output = sequence[sizing];
        output = vacuum.bind(tango)(output);
        result = output.intl;
        output = result.string;
        sizing = sequence[sizing];
        sizing = vacuum.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.JGDkfn;
        sizing = output.bind(result)(sizing);
        backup['title'] = sizing;
        output = _closure1_slot14;
        sizing = {};
        result = source.GAMING;
        result = control[result];
        sizing['guildTemplate'] = result;
        sizing['onGuildTemplatePress'] = update;
        output = output.bind(tango)(echo, sizing);
        sizing = new Array(6);
        sizing[0] = output;
        result = _closure1_slot14;
        output = {};
        vacuum = source.SCHOOL_CLUB;
        vacuum = control[vacuum];
        output['guildTemplate'] = vacuum;
        output['onGuildTemplatePress'] = update;
        output = result.bind(tango)(echo, output);
        sizing[1] = output;
        result = _closure1_slot14;
        output = {};
        vacuum = source.STUDY;
        vacuum = control[vacuum];
        output['guildTemplate'] = vacuum;
        output['onGuildTemplatePress'] = update;
        output = result.bind(tango)(echo, output);
        sizing[2] = output;
        result = _closure1_slot14;
        output = {};
        vacuum = source.FRIENDS;
        vacuum = control[vacuum];
        output['guildTemplate'] = vacuum;
        output['onGuildTemplatePress'] = update;
        output = result.bind(tango)(echo, output);
        sizing[3] = output;
        result = _closure1_slot14;
        output = {};
        vacuum = source.CREATORS;
        vacuum = control[vacuum];
        output['guildTemplate'] = vacuum;
        output['onGuildTemplatePress'] = update;
        output = result.bind(tango)(echo, output);
        sizing[4] = output;
        result = _closure1_slot14;
        output = {};
        source = source.LOCAL_COMMUNITY;
        source = control[source];
        output['guildTemplate'] = source;
        output['onGuildTemplatePress'] = update;
        output = result.bind(tango)(echo, output);
        sizing[5] = output;
        backup['children'] = sizing;
        backup = golf.bind(tango)(kilo, backup);
        yankee[2] = backup;
        options['children'] = yankee;
        offset = golf.bind(tango)(offset, options);
        options = new Array(2);
        options[0] = offset;
        yankee = _closure1_slot14;
        offset = _closure1_slot18;
        verify = {};
        verify['trigger'] = foxtrot;
        verify['onHeightChange'] = romeo;
        verify = yankee.bind(tango)(offset, verify);
        options[1] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();