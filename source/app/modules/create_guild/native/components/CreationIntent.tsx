// app/modules/create_guild/native/components/CreationIntent.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    tango = global;
    verify = tango.Object;
    options = verify.defineProperty;
    golf = {};
    entity = true;
    golf['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, golf);
    entity = 0;
    options = oscar[entity];
    golf = argCorge;
    entity = undefined;
    golf = golf.bind(entity)(options);
    var _closure1_slot3 = golf;
    yankee = 1;
    golf = oscar[yankee];
    golf = report.bind(entity)(golf);
    options = golf.View;
    var _closure1_slot4 = options;
    golf = golf.ScrollView;
    var _closure1_slot5 = golf;
    golf = 2;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    options = golf.CreateGuildModalStates;
    var _closure1_slot6 = options;
    options = golf.GuildTemplateTriggers;
    var _closure1_slot7 = options;
    golf = golf.NUXGuildTemplatesAnalytics;
    var _closure1_slot8 = golf;
    golf = 3;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    options = golf.AnalyticEvents;
    var _closure1_slot9 = options;
    golf = golf.AnalyticsLocations;
    var _closure1_slot10 = golf;
    golf = 4;
    options = oscar[golf];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot11 = options;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot12 = golf;
    golf = 5;
    golf = oscar[golf];
    verify = report.bind(entity)(golf);
    options = verify.createStyles;
    golf = {};
    offset = {};
    offset['flex'] = yankee;
    foxtrot = 6;
    foxtrot = oscar[foxtrot];
    foxtrot = report.bind(entity)(foxtrot);
    foxtrot = foxtrot.NAV_BAR_HEIGHT;
    offset['marginTop'] = foxtrot;
    golf['contentContainer'] = offset;
    offset = {};
    offset['flex'] = yankee;
    yankee = 7;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_MOBILE_PRIMARY;
    offset['backgroundColor'] = yankee;
    golf['scrollContainer'] = offset;
    offset = {'alignItems': 'center', 'paddingVertical': 20, 'paddingHorizontal': 16};
    golf['headerContainer'] = offset;
    offset = {'textAlign': 'center', 'marginBottom': 8};
    golf['headerTitle'] = offset;
    offset = {'lineHeight': 18, 'textAlign': 'center'};
    golf['headerDescription'] = offset;
    offset = {'marginTop': 16, 'paddingHorizontal': 16, 'lineHeight': 18, 'textAlign': 'center'};
    golf['skipDescription'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot13 = golf;
    golf = tango.Math;
    tango = golf.random;
    golf = tango.bind(golf)();
    tango = 0.5;
    tango = golf < tango;
    var _closure1_slot14 = tango;
    tango = 19;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/create_guild/native/components/CreationIntent.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: CreationIntent
        _fun93529: for(var _fun93529_ip = 0; ; ) switch(_fun93529_ip) {
 0:
            entity = argFoo;
            mike = entity.guildTemplate;
            var _closure2_slot0 = mike;
            entity = entity.trigger;
            var _closure2_slot1 = entity;
            tango = undefined;
            var _closure2_slot2 = tango;
            mike = function(argFoo) { // Original name: onPress
                _fun93530: for(var _fun93530_ip = 0; ; ) switch(_fun93530_ip) {
 0:
                    offset = argFoo;
                    tango = _closure1_slot1;
                    entity = _closure1_slot2;
                    report = 10;
                    zulu = entity[report];
                    entity = undefined;
                    golf = tango.bind(entity)(zulu);
                    oscar = golf.track;
                    zulu = _closure1_slot9;
                    tango = zulu.GUILD_CREATION_INTENT_SELECTED;
                    zulu = {};
                    options = null;
                    verify = options == offset;
                    zulu['skipped'] = verify;
                    verify = options != offset;
                    if(!verify) { _fun93530_ip = 66; continue _fun93530 }
 63:
                    verify = offset;
 66:
                    zulu['is_community'] = verify;
                    zulu = oscar.bind(golf)(tango, zulu);
                    verify = _closure2_slot2;
                    oscar = verify.push;
                    zulu = _closure1_slot6;
                    tango = zulu.CREATE_SERVER;
                    zulu = {};
                    yankee = _closure2_slot0;
                    zulu['guildTemplate'] = yankee;
                    zulu['isCommunityIntent'] = offset;
                    zulu = oscar.bind(verify)(tango, zulu);
                    tango = _closure2_slot1;
                    zulu = _closure1_slot7;
                    zulu = zulu.NUF;
                    if(!(tango !== zulu)) { _fun93530_ip = 298; continue _fun93530 }
 144:
                    tango = _closure2_slot1;
                    zulu = _closure1_slot7;
                    zulu = zulu.IN_APP;
                    if(!(tango === zulu)) { _fun93530_ip = 419; continue _fun93530 }
 165:
                    oscar = _closure1_slot1;
                    tango = _closure1_slot2;
                    zulu = tango[report];
                    foxtrot = oscar.bind(entity)(zulu);
                    romeo = foxtrot.track;
                    zulu = _closure1_slot9;
                    yankee = zulu.OPEN_MODAL;
                    verify = {};
                    offset = 'Create Guild Step 2';
                    verify['type'] = offset;
                    offset = _closure1_slot10;
                    backup = offset.CREATE_JOIN_GUILD_MODAL;
                    verify['location_section'] = backup;
                    verify = romeo.bind(foxtrot)(yankee, verify);
                    tango = tango[report];
                    verify = oscar.bind(entity)(tango);
                    oscar = verify.track;
                    tango = zulu.CREATE_GUILD_VIEWED;
                    zulu = {};
                    offset = offset.CREATE_JOIN_GUILD_MODAL;
                    zulu['location_section'] = offset;
                    offset = _closure2_slot0;
                    yankee = options == offset;
                    offset = undefined;
                    if(yankee) { _fun93530_ip = 285; continue _fun93530 }
 276:
                    yankee = _closure2_slot0;
                    offset = yankee.id;
 285:
                    zulu['guild_template_name'] = offset;
                    zulu = oscar.bind(verify)(tango, zulu);
                    _fun93530_ip = 419; continue _fun93530;
 298:
                    oscar = _closure1_slot0;
                    zulu = _closure1_slot2;
                    tango = 9;
                    tango = zulu[tango];
                    yankee = oscar.bind(entity)(tango);
                    offset = yankee.trackNUFStep;
                    tango = _closure1_slot8;
                    verify = tango.STEP_CREATION_INTENT;
                    oscar = tango.STEP_GUILD_CREATE;
                    tango = {};
                    romeo = false;
                    tango['skip'] = romeo;
                    tango = offset.bind(yankee)(verify, oscar, tango);
                    tango = _closure1_slot1;
                    zulu = zulu[report];
                    report = tango.bind(entity)(zulu);
                    tango = report.track;
                    mike = _closure1_slot9;
                    zulu = mike.CREATE_GUILD_VIEWED;
                    mike = {};
                    oscar = _closure2_slot0;
                    options = options == oscar;
                    oscar = undefined;
                    if(options) { _fun93530_ip = 408; continue _fun93530 }
 399:
                    golf = _closure2_slot0;
                    oscar = golf.id;
 408:
                    mike['guild_template_name'] = oscar;
                    mike = tango.bind(report)(zulu, mike);
 419:
                    return entity;
                }
            };
            var _closure2_slot3 = mike;
            mike = _closure1_slot13;
            backup = mike.bind(tango)();
            yankee = _closure1_slot0;
            romeo = _closure1_slot2;
            mike = 8;
            mike = romeo[mike];
            zulu = yankee.bind(tango)(mike);
            mike = zulu.useNavigation;
            mike = mike.bind(zulu)();
            _closure2_slot2 = mike;
            report = _closure1_slot3;
            zulu = report.useEffect;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                _fun93531: for(var _fun93531_ip = 0; ; ) switch(_fun93531_ip) {
 0:
                    tango = _closure2_slot1;
                    zulu = _closure1_slot7;
                    zulu = zulu.NUF;
                    if(!(tango !== zulu)) { _fun93531_ip = 99; continue _fun93531 }
 24:
                    zulu = _closure2_slot1;
                    mike = _closure1_slot7;
                    mike = mike.IN_APP;
                    if(!(zulu === mike)) { _fun93531_ip = 159; continue _fun93531 }
 42:
                    tango = _closure1_slot1;
                    zulu = _closure1_slot2;
                    mike = 10;
                    zulu = zulu[mike];
                    mike = undefined;
                    report = tango.bind(mike)(zulu);
                    tango = report.track;
                    mike = _closure1_slot9;
                    zulu = mike.OPEN_MODAL;
                    mike = {};
                    oscar = 'Server Intent Discovery';
                    mike['type'] = oscar;
                    mike = tango.bind(report)(zulu, mike);
                    _fun93531_ip = 159; continue _fun93531;
 99:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    mike = 9;
                    zulu = zulu[mike];
                    mike = undefined;
                    report = tango.bind(mike)(zulu);
                    tango = report.trackNUFStep;
                    entity = _closure1_slot8;
                    zulu = entity.STEP_GUILD_TEMPLATE;
                    mike = entity.STEP_CREATION_INTENT;
                    entity = {};
                    oscar = false;
                    entity['skip'] = oscar;
                    entity = tango.bind(report)(zulu, mike, entity);
 159:
                    entity = undefined;
                    return entity;
                }
            };
            entity = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot11;
            entity = 11;
            entity = romeo[entity];
            entity = yankee.bind(tango)(entity);
            mike = entity.SafeAreaPaddingView;
            entity = {};
            report = true;
            entity['top'] = report;
            report = backup.contentContainer;
            entity['style'] = report;
            golf = _closure1_slot12;
            oscar = _closure1_slot5;
            report = {};
            options = backup.scrollContainer;
            report['style'] = options;
            offset = _closure1_slot4;
            options = {};
            foxtrot = backup.headerContainer;
            options['style'] = foxtrot;
            kilo = 12;
            foxtrot = romeo[kilo];
            foxtrot = yankee.bind(tango)(foxtrot);
            result = foxtrot.Text;
            foxtrot = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            output = backup.headerTitle;
            foxtrot['style'] = output;
            output = 13;
            echo = romeo[output];
            echo = yankee.bind(tango)(echo);
            source = echo.intl;
            update = source.string;
            echo = romeo[output];
            echo = yankee.bind(tango)(echo);
            echo = echo.t;
            echo = echo.f3MvGR;
            echo = update.bind(source)(echo);
            foxtrot['children'] = echo;
            result = zulu.bind(tango)(result, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = result;
            kilo = romeo[kilo];
            kilo = yankee.bind(tango)(kilo);
            result = kilo.Text;
            kilo = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            echo = backup.headerDescription;
            kilo['style'] = echo;
            echo = romeo[output];
            echo = yankee.bind(tango)(echo);
            source = echo.intl;
            update = source.string;
            echo = romeo[output];
            echo = yankee.bind(tango)(echo);
            echo = echo.t;
            echo = echo.nOzc7+;
            echo = update.bind(source)(echo);
            kilo['children'] = echo;
            kilo = zulu.bind(tango)(result, kilo);
            foxtrot[1] = kilo;
            options['children'] = foxtrot;
            offset = golf.bind(tango)(offset, options);
            options = new Array(3);
            options[0] = offset;
            offset = 14;
            offset = romeo[offset];
            offset = yankee.bind(tango)(offset);
            yankee = offset.FormSection;
            offset = _closure1_slot14;
            romeo = {};
            echo = _closure1_slot11;
            control = _closure1_slot1;
            update = _closure1_slot2;
            kilo = 15;
            foxtrot = update[kilo];
            result = control.bind(tango)(foxtrot);
            foxtrot = {};
            if(offset) { _fun93529_ip = 674; continue _fun93529 }
 473:
            offset = 17;
            offset = update[offset];
            offset = control.bind(tango)(offset);
            foxtrot['icon'] = offset;
            context = _closure1_slot0;
            offset = update[output];
            offset = context.bind(tango)(offset);
            vacuum = offset.intl;
            source = vacuum.string;
            offset = update[output];
            offset = context.bind(tango)(offset);
            offset = offset.t;
            offset = offset.h9Q1lJ;
            offset = source.bind(vacuum)(offset);
            foxtrot['message'] = offset;
            offset = function() { // Original name: onPress
                zulu = _closure2_slot3;
                entity = undefined;
                mike = true;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            foxtrot['onPress'] = offset;
            source = echo.bind(tango)(result, foxtrot);
            offset = new Array(2);
            offset[0] = source;
            source = update[kilo];
            vacuum = control.bind(tango)(source);
            source = {};
            sequence = 16;
            sequence = update[sequence];
            sequence = control.bind(tango)(sequence);
            source['icon'] = sequence;
            sequence = update[output];
            sequence = context.bind(tango)(sequence);
            record = sequence.intl;
            config = record.string;
            sequence = update[output];
            sequence = context.bind(tango)(sequence);
            sequence = sequence.t;
            sequence = sequence.uE7zcn;
            sequence = config.bind(record)(sequence);
            source['message'] = sequence;
            sequence = function() { // Original name: onPress
                zulu = _closure2_slot3;
                entity = undefined;
                mike = false;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            source['onPress'] = sequence;
            source = echo.bind(tango)(vacuum, source);
            offset[1] = source;
            romeo['children'] = offset;
            offset = romeo;
            _fun93529_ip = 870; continue _fun93529;
 674:
            source = 16;
            source = update[source];
            source = control.bind(tango)(source);
            foxtrot['icon'] = source;
            vacuum = _closure1_slot0;
            source = update[output];
            source = vacuum.bind(tango)(source);
            config = source.intl;
            sequence = config.string;
            source = update[output];
            source = vacuum.bind(tango)(source);
            source = source.t;
            source = source.uE7zcn;
            source = sequence.bind(config)(source);
            foxtrot['message'] = source;
            source = function() { // Original name: onPress
                zulu = _closure2_slot3;
                entity = undefined;
                mike = false;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            foxtrot['onPress'] = source;
            result = echo.bind(tango)(result, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = result;
            kilo = update[kilo];
            result = control.bind(tango)(kilo);
            kilo = {};
            source = 17;
            source = update[source];
            source = control.bind(tango)(source);
            kilo['icon'] = source;
            source = update[output];
            source = vacuum.bind(tango)(source);
            control = source.intl;
            source = control.string;
            update = update[output];
            update = vacuum.bind(tango)(update);
            update = update.t;
            update = update.h9Q1lJ;
            update = source.bind(control)(update);
            kilo['message'] = update;
            update = function() { // Original name: onPress
                zulu = _closure2_slot3;
                entity = undefined;
                mike = true;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            kilo['onPress'] = update;
            kilo = echo.bind(tango)(result, kilo);
            foxtrot[1] = kilo;
            romeo['children'] = foxtrot;
            offset = romeo;
 870:
            offset = golf.bind(tango)(yankee, offset);
            options[1] = offset;
            yankee = _closure1_slot11;
            foxtrot = _closure1_slot0;
            romeo = _closure1_slot2;
            verify = 18;
            verify = romeo[verify];
            verify = foxtrot.bind(tango)(verify);
            offset = verify.TextWithIOSLinkWorkaround;
            verify = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            backup = backup.skipDescription;
            verify['style'] = backup;
            backup = romeo[output];
            backup = foxtrot.bind(tango)(backup);
            kilo = backup.intl;
            backup = kilo.format;
            romeo = romeo[output];
            romeo = foxtrot.bind(tango)(romeo);
            romeo = romeo.t;
            foxtrot = romeo.SMc+Gx;
            romeo = {};
            sizing = function() { // Original name: onSkip
                zulu = _closure2_slot3;
                entity = undefined;
                mike = null;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            romeo['onSkip'] = sizing;
            romeo = backup.bind(kilo)(foxtrot, romeo);
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[2] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();