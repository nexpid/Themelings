// app/modules/create_guild/CreateGuildConstants.tsx
export default (function(_, argBar, __, argCor, ___, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    entity = argCor;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = golfie[entity];
    entity = undefined;
    tangon = oscard.bind(entity)(tangon);
    report = tangon.ChannelTypes;
    var _closure1_slot3 = report;
    tangon = tangon.Permissions;
    var _closure1_slot4 = tangon;
    tangon = {};
    report = 'CREATE';
    tangon['CREATE'] = report;
    report = 'GAMING';
    tangon['GAMING'] = report;
    report = 'FRIENDS';
    tangon['FRIENDS'] = report;
    report = 'STUDY';
    tangon['STUDY'] = report;
    report = 'CLUBS';
    tangon['CLUBS'] = report;
    report = 'CREATORS';
    tangon['CREATORS'] = report;
    report = 'LOCAL_COMMUNITY';
    tangon['LOCAL_COMMUNITY'] = report;
    report = 'SCHOOL_CLUB';
    tangon['SCHOOL_CLUB'] = report;
    var _closure1_slot5 = tangon;
    report = 4;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/create_guild/CreateGuildConstants.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['GuildTemplateId'] = tangon;
    michal = function() { // Original name: getGuildTemplatesMap
        entity = {};
        report = _closure1_slot5;
        zuuluu = report.CREATE;
        michal = {};
        tangon = report.CREATE;
        michal['id'] = tangon;
        tangon = '2TffvPucqHkN';
        michal['code'] = tangon;
        kiloes = _closure1_slot0;
        yankee = _closure1_slot2;
        romeon = 1;
        tangon = yankee[romeon];
        offset = undefined;
        tangon = kiloes.bind(offset)(tangon);
        option = tangon.intl;
        oscard = option.string;
        tangon = yankee[romeon];
        tangon = kiloes.bind(offset)(tangon);
        tangon = tangon.t;
        tangon = tangon.H3+6BA;
        tangon = oscard.bind(option)(tangon);
        michal['label'] = tangon;
        tangon = new Array(0);
        michal['channels'] = tangon;
        tangon = null;
        michal['system_channel_id'] = tangon;
        entity[zuuluu] = michal;
        zuuluu = report.GAMING;
        michal = {};
        tangon = report.GAMING;
        michal['id'] = tangon;
        tangon = 'hvtBQMfw6uSJ';
        michal['code'] = tangon;
        tangon = yankee[romeon];
        tangon = kiloes.bind(offset)(tangon);
        option = tangon.intl;
        oscard = option.string;
        tangon = yankee[romeon];
        tangon = kiloes.bind(offset)(tangon);
        tangon = tangon.t;
        tangon = tangon.wdOb3N;
        tangon = oscard.bind(option)(tangon);
        michal['label'] = tangon;
        tangon = {'id': '00', 'parent_id': null};
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        verify = oscard.intl;
        option = verify.string;
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        oscard = oscard.t;
        oscard = oscard.mobYpK;
        oscard = option.bind(verify)(oscard);
        tangon['name'] = oscard;
        verify = _closure1_slot3;
        oscard = verify.GUILD_CATEGORY;
        tangon['type'] = oscard;
        option = new Array(6);
        option[0] = tangon;
        tangon = {'id': '01', 'parent_id': '00'};
        oscard = '01';
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.ao2wxs;
        foxtra = backup.bind(sizing)(foxtra);
        tangon['name'] = foxtra;
        foxtra = verify.GUILD_TEXT;
        tangon['type'] = foxtra;
        option[1] = tangon;
        tangon = {'id': '02', 'parent_id': '00'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.C3TN9/;
        foxtra = backup.bind(sizing)(foxtra);
        tangon['name'] = foxtra;
        foxtra = verify.GUILD_TEXT;
        tangon['type'] = foxtra;
        option[2] = tangon;
        tangon = {'id': '10', 'parent_id': null};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.vcKDMj;
        foxtra = backup.bind(sizing)(foxtra);
        tangon['name'] = foxtra;
        foxtra = verify.GUILD_CATEGORY;
        tangon['type'] = foxtra;
        option[3] = tangon;
        foxtra = {'id': '11', 'parent_id': '10'};
        tangon = '11';
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.a7GzDw;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_VOICE;
        foxtra['type'] = backup;
        option[4] = foxtra;
        foxtra = {'id': '12', 'parent_id': '10'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.2COskZ;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_VOICE;
        foxtra['type'] = backup;
        option[5] = foxtra;
        michal['channels'] = option;
        michal['system_channel_id'] = oscard;
        entity[zuuluu] = michal;
        zuuluu = report.FRIENDS;
        michal = {};
        option = report.FRIENDS;
        michal['id'] = option;
        option = 'hgM48av5Q69A';
        michal['code'] = option;
        option = yankee[romeon];
        option = kiloes.bind(offset)(option);
        backup = option.intl;
        foxtra = backup.string;
        option = yankee[romeon];
        option = kiloes.bind(offset)(option);
        option = option.t;
        option = option.OVHBtb;
        option = foxtra.bind(backup)(option);
        michal['label'] = option;
        foxtra = {'id': '00', 'parent_id': null};
        option = yankee[romeon];
        option = kiloes.bind(offset)(option);
        sizing = option.intl;
        backup = sizing.string;
        option = yankee[romeon];
        option = kiloes.bind(offset)(option);
        option = option.t;
        option = option.mobYpK;
        option = backup.bind(sizing)(option);
        foxtra['name'] = option;
        option = verify.GUILD_CATEGORY;
        foxtra['type'] = option;
        option = new Array(7);
        option[0] = foxtra;
        foxtra = {'id': '01', 'parent_id': '00'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.ao2wxs;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        option[1] = foxtra;
        foxtra = {'id': '02', 'parent_id': '00'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.cd5smJ;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        option[2] = foxtra;
        foxtra = {'id': '03', 'parent_id': '00'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.OcnR8/;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        option[3] = foxtra;
        foxtra = {'id': '10', 'parent_id': null};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.vcKDMj;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_CATEGORY;
        foxtra['type'] = backup;
        option[4] = foxtra;
        foxtra = {'id': '11', 'parent_id': '10'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.XS6gcH;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_VOICE;
        foxtra['type'] = backup;
        option[5] = foxtra;
        foxtra = {'id': '12', 'parent_id': '10'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.5aYFRk;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_VOICE;
        foxtra['type'] = backup;
        option[6] = foxtra;
        michal['channels'] = option;
        michal['system_channel_id'] = oscard;
        entity[zuuluu] = michal;
        zuuluu = report.STUDY;
        michal = {};
        oscard = report.STUDY;
        michal['id'] = oscard;
        oscard = 'FbwUwRp4j8Es';
        michal['code'] = oscard;
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        foxtra = oscard.intl;
        option = foxtra.string;
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        oscard = oscard.t;
        oscard = oscard.fYwSi4;
        oscard = option.bind(foxtra)(oscard);
        michal['label'] = oscard;
        option = {'id': '00', 'parent_id': null};
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        backup = oscard.intl;
        foxtra = backup.string;
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        oscard = oscard.t;
        oscard = oscard.VCAA/f;
        oscard = foxtra.bind(backup)(oscard);
        option['name'] = oscard;
        oscard = verify.GUILD_CATEGORY;
        option['type'] = oscard;
        oscard = new Array(12);
        oscard[0] = option;
        option = {'id': '01', 'parent_id': '00'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.GHQoER;
        foxtra = backup.bind(sizing)(foxtra);
        option['name'] = foxtra;
        foxtra = verify.GUILD_TEXT;
        option['type'] = foxtra;
        oscard[1] = option;
        option = {'id': '02', 'parent_id': '00'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.3eM+Li;
        foxtra = backup.bind(sizing)(foxtra);
        option['name'] = foxtra;
        foxtra = verify.GUILD_TEXT;
        option['type'] = foxtra;
        oscard[2] = option;
        option = {'id': '10', 'parent_id': null};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.mobYpK;
        foxtra = backup.bind(sizing)(foxtra);
        option['name'] = foxtra;
        foxtra = verify.GUILD_CATEGORY;
        option['type'] = foxtra;
        oscard[3] = option;
        option = {'id': '11', 'parent_id': '10'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.ao2wxs;
        foxtra = backup.bind(sizing)(foxtra);
        option['name'] = foxtra;
        foxtra = verify.GUILD_TEXT;
        option['type'] = foxtra;
        oscard[4] = option;
        option = {'id': '12', 'parent_id': '10'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.YjGYMD;
        foxtra = backup.bind(sizing)(foxtra);
        option['name'] = foxtra;
        foxtra = verify.GUILD_TEXT;
        option['type'] = foxtra;
        oscard[5] = option;
        option = {'id': '13', 'parent_id': '10'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.MBCSqa;
        foxtra = backup.bind(sizing)(foxtra);
        option['name'] = foxtra;
        foxtra = verify.GUILD_TEXT;
        option['type'] = foxtra;
        oscard[6] = option;
        option = {'id': '14', 'parent_id': '10'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.AIszv7;
        foxtra = backup.bind(sizing)(foxtra);
        option['name'] = foxtra;
        foxtra = verify.GUILD_TEXT;
        option['type'] = foxtra;
        oscard[7] = option;
        option = {'id': '20', 'parent_id': null};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.vcKDMj;
        foxtra = backup.bind(sizing)(foxtra);
        option['name'] = foxtra;
        foxtra = verify.GUILD_CATEGORY;
        option['type'] = foxtra;
        oscard[8] = option;
        option = {'id': '21', 'parent_id': '20'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.XS6gcH;
        foxtra = backup.bind(sizing)(foxtra);
        option['name'] = foxtra;
        foxtra = verify.GUILD_VOICE;
        option['type'] = foxtra;
        oscard[9] = option;
        option = {'id': '22', 'parent_id': '20'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        output = foxtra.intl;
        sizing = output.formatToPlainString;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        backup = foxtra.LuNsNT;
        foxtra = {};
        foxtra['number'] = romeon;
        foxtra = sizing.bind(output)(backup, foxtra);
        option['name'] = foxtra;
        foxtra = verify.GUILD_VOICE;
        option['type'] = foxtra;
        oscard[10] = option;
        foxtra = {'id': '23', 'parent_id': '20'};
        option = yankee[romeon];
        option = kiloes.bind(offset)(option);
        result = option.intl;
        output = result.formatToPlainString;
        option = yankee[romeon];
        option = kiloes.bind(offset)(option);
        option = option.t;
        sizing = option.LuNsNT;
        backup = {};
        option = 2;
        backup['number'] = option;
        backup = output.bind(result)(sizing, backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_VOICE;
        foxtra['type'] = backup;
        oscard[11] = foxtra;
        michal['channels'] = oscard;
        michal['system_channel_id'] = tangon;
        entity[zuuluu] = michal;
        zuuluu = report.CLUBS;
        michal = {};
        oscard = report.CLUBS;
        michal['id'] = oscard;
        oscard = 's4WNnBxTDPsY';
        michal['code'] = oscard;
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        backup = oscard.intl;
        foxtra = backup.string;
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        oscard = oscard.t;
        oscard = oscard.ZRpilp;
        oscard = foxtra.bind(backup)(oscard);
        michal['label'] = oscard;
        foxtra = {'id': '00', 'parent_id': null};
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        sizing = oscard.intl;
        backup = sizing.string;
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        oscard = oscard.t;
        oscard = oscard.VCAA/f;
        oscard = backup.bind(sizing)(oscard);
        foxtra['name'] = oscard;
        oscard = verify.GUILD_CATEGORY;
        foxtra['type'] = oscard;
        oscard = new Array(9);
        oscard[0] = foxtra;
        foxtra = {'id': '01', 'parent_id': '00'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.GHQoER;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        oscard[1] = foxtra;
        foxtra = {'id': '02', 'parent_id': '00'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.nSsoSE;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        oscard[2] = foxtra;
        foxtra = {'id': '10', 'parent_id': null};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.mobYpK;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_CATEGORY;
        foxtra['type'] = backup;
        oscard[3] = foxtra;
        foxtra = {'id': '11', 'parent_id': '10'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.ao2wxs;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        oscard[4] = foxtra;
        foxtra = {'id': '12', 'parent_id': '10'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.z3KWvr;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        oscard[5] = foxtra;
        foxtra = {'id': '20', 'parent_id': null};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.vcKDMj;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_CATEGORY;
        foxtra['type'] = backup;
        oscard[6] = foxtra;
        foxtra = {'id': '21', 'parent_id': '20'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.XS6gcH;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_VOICE;
        foxtra['type'] = backup;
        oscard[7] = foxtra;
        foxtra = {'id': '22', 'parent_id': '20'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.3xFaKi;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_VOICE;
        foxtra['type'] = backup;
        oscard[8] = foxtra;
        michal['channels'] = oscard;
        michal['system_channel_id'] = tangon;
        entity[zuuluu] = michal;
        zuuluu = report.CREATORS;
        michal = {};
        oscard = report.CREATORS;
        michal['id'] = oscard;
        oscard = '6exdzMgjZgah';
        michal['code'] = oscard;
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        backup = oscard.intl;
        foxtra = backup.string;
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        oscard = oscard.t;
        oscard = oscard.+HJio6;
        oscard = foxtra.bind(backup)(oscard);
        michal['label'] = oscard;
        foxtra = {'id': '00', 'parent_id': null};
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        sizing = oscard.intl;
        backup = sizing.string;
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        oscard = oscard.t;
        oscard = oscard.VCAA/f;
        oscard = backup.bind(sizing)(oscard);
        foxtra['name'] = oscard;
        oscard = verify.GUILD_CATEGORY;
        foxtra['type'] = oscard;
        oscard = new Array(11);
        oscard[0] = foxtra;
        foxtra = {'id': '01', 'parent_id': '00'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.GHQoER;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        oscard[1] = foxtra;
        foxtra = {'id': '02', 'parent_id': '00'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.nSsoSE;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        oscard[2] = foxtra;
        foxtra = {'id': '10', 'parent_id': null};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.mobYpK;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_CATEGORY;
        foxtra['type'] = backup;
        oscard[3] = foxtra;
        foxtra = {'id': '11', 'parent_id': '10'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.ao2wxs;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        oscard[4] = foxtra;
        foxtra = {'id': '12', 'parent_id': '10'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.FvD6y8;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        oscard[5] = foxtra;
        foxtra = {'id': '13', 'parent_id': '10'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.DmviYW;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        oscard[6] = foxtra;
        foxtra = {'id': '20', 'parent_id': null};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.vcKDMj;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_CATEGORY;
        foxtra['type'] = backup;
        oscard[7] = foxtra;
        foxtra = {'id': '21', 'parent_id': '20'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.XS6gcH;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_VOICE;
        foxtra['type'] = backup;
        oscard[8] = foxtra;
        foxtra = {'id': '22', 'parent_id': '20'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.g/Jx6e;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_VOICE;
        foxtra['type'] = backup;
        oscard[9] = foxtra;
        foxtra = {'id': '23', 'parent_id': '20'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.5aYFRk;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_VOICE;
        foxtra['type'] = backup;
        oscard[10] = foxtra;
        michal['channels'] = oscard;
        michal['system_channel_id'] = tangon;
        entity[zuuluu] = michal;
        zuuluu = report.LOCAL_COMMUNITY;
        michal = {};
        oscard = report.LOCAL_COMMUNITY;
        michal['id'] = oscard;
        oscard = '64UDvRNCC52Y';
        michal['code'] = oscard;
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        backup = oscard.intl;
        foxtra = backup.string;
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        oscard = oscard.t;
        oscard = oscard.8EUbzs;
        oscard = foxtra.bind(backup)(oscard);
        michal['label'] = oscard;
        foxtra = {'id': '00', 'parent_id': null};
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        sizing = oscard.intl;
        backup = sizing.string;
        oscard = yankee[romeon];
        oscard = kiloes.bind(offset)(oscard);
        oscard = oscard.t;
        oscard = oscard.VCAA/f;
        oscard = backup.bind(sizing)(oscard);
        foxtra['name'] = oscard;
        oscard = verify.GUILD_CATEGORY;
        foxtra['type'] = oscard;
        oscard = new Array(11);
        oscard[0] = foxtra;
        foxtra = {'id': '01', 'parent_id': '00'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.GHQoER;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        oscard[1] = foxtra;
        foxtra = {'id': '02', 'parent_id': '00'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.nSsoSE;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        oscard[2] = foxtra;
        foxtra = {'id': '03', 'parent_id': '00'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.yZCzMT;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        oscard[3] = foxtra;
        foxtra = {'id': '10', 'parent_id': null};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.mobYpK;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_CATEGORY;
        foxtra['type'] = backup;
        oscard[4] = foxtra;
        foxtra = {'id': '11', 'parent_id': '10'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.ao2wxs;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        oscard[5] = foxtra;
        foxtra = {'id': '12', 'parent_id': '10'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.z3KWvr;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        oscard[6] = foxtra;
        foxtra = {'id': '13', 'parent_id': '10'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.AIszv7;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_TEXT;
        foxtra['type'] = backup;
        oscard[7] = foxtra;
        foxtra = {'id': '20', 'parent_id': null};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.vcKDMj;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_CATEGORY;
        foxtra['type'] = backup;
        oscard[8] = foxtra;
        foxtra = {'id': '21', 'parent_id': '20'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.XS6gcH;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_VOICE;
        foxtra['type'] = backup;
        oscard[9] = foxtra;
        foxtra = {'id': '22', 'parent_id': '20'};
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = yankee[romeon];
        backup = kiloes.bind(offset)(backup);
        backup = backup.t;
        backup = backup.3xFaKi;
        backup = sizing.bind(output)(backup);
        foxtra['name'] = backup;
        backup = verify.GUILD_VOICE;
        foxtra['type'] = backup;
        oscard[10] = foxtra;
        michal['channels'] = oscard;
        michal['system_channel_id'] = tangon;
        entity[zuuluu] = michal;
        zuuluu = report.SCHOOL_CLUB;
        michal = {};
        report = report.SCHOOL_CLUB;
        michal['id'] = report;
        report = 'Ctg7PUHcQmZu';
        michal['code'] = report;
        report = yankee[romeon];
        report = kiloes.bind(offset)(report);
        foxtra = report.intl;
        oscard = foxtra.string;
        report = yankee[romeon];
        report = kiloes.bind(offset)(report);
        report = report.t;
        report = report.mmFA5+;
        report = oscard.bind(foxtra)(report);
        michal['label'] = report;
        oscard = {'id': '00', 'parent_id': null};
        report = yankee[romeon];
        report = kiloes.bind(offset)(report);
        backup = report.intl;
        foxtra = backup.string;
        report = yankee[romeon];
        report = kiloes.bind(offset)(report);
        report = report.t;
        report = report.VCAA/f;
        report = foxtra.bind(backup)(report);
        oscard['name'] = report;
        report = verify.GUILD_CATEGORY;
        oscard['type'] = report;
        report = new Array(12);
        report[0] = oscard;
        oscard = {'id': '01', 'parent_id': '00'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.GHQoER;
        foxtra = backup.bind(sizing)(foxtra);
        oscard['name'] = foxtra;
        foxtra = verify.GUILD_TEXT;
        oscard['type'] = foxtra;
        report[1] = oscard;
        oscard = {'id': '02', 'parent_id': '00'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.nSsoSE;
        foxtra = backup.bind(sizing)(foxtra);
        oscard['name'] = foxtra;
        foxtra = verify.GUILD_TEXT;
        oscard['type'] = foxtra;
        report[2] = oscard;
        oscard = {'id': '03', 'parent_id': '00'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.yZCzMT;
        foxtra = backup.bind(sizing)(foxtra);
        oscard['name'] = foxtra;
        foxtra = verify.GUILD_TEXT;
        oscard['type'] = foxtra;
        report[3] = oscard;
        oscard = {'id': '10', 'parent_id': null};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.mobYpK;
        foxtra = backup.bind(sizing)(foxtra);
        oscard['name'] = foxtra;
        foxtra = verify.GUILD_CATEGORY;
        oscard['type'] = foxtra;
        report[4] = oscard;
        oscard = {'id': '11', 'parent_id': '10'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.ao2wxs;
        foxtra = backup.bind(sizing)(foxtra);
        oscard['name'] = foxtra;
        foxtra = verify.GUILD_TEXT;
        oscard['type'] = foxtra;
        report[5] = oscard;
        oscard = {'id': '12', 'parent_id': '10'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.z3KWvr;
        foxtra = backup.bind(sizing)(foxtra);
        oscard['name'] = foxtra;
        foxtra = verify.GUILD_TEXT;
        oscard['type'] = foxtra;
        report[6] = oscard;
        oscard = {'id': '13', 'parent_id': '10'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.AIszv7;
        foxtra = backup.bind(sizing)(foxtra);
        oscard['name'] = foxtra;
        foxtra = verify.GUILD_TEXT;
        oscard['type'] = foxtra;
        report[7] = oscard;
        oscard = {'id': '20', 'parent_id': null};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.vcKDMj;
        foxtra = backup.bind(sizing)(foxtra);
        oscard['name'] = foxtra;
        foxtra = verify.GUILD_CATEGORY;
        oscard['type'] = foxtra;
        report[8] = oscard;
        oscard = {'id': '21', 'parent_id': '20'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.XS6gcH;
        foxtra = backup.bind(sizing)(foxtra);
        oscard['name'] = foxtra;
        foxtra = verify.GUILD_VOICE;
        oscard['type'] = foxtra;
        report[9] = oscard;
        oscard = {'id': '22', 'parent_id': '20'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        sizing = foxtra.intl;
        backup = sizing.string;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.hi1Ykp;
        foxtra = backup.bind(sizing)(foxtra);
        oscard['name'] = foxtra;
        foxtra = verify.GUILD_VOICE;
        oscard['type'] = foxtra;
        report[10] = oscard;
        oscard = {'id': '22', 'parent_id': '20'};
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(offset)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = yankee[romeon];
        romeon = kiloes.bind(offset)(romeon);
        romeon = romeon.t;
        romeon = romeon.vw8oaW;
        romeon = foxtra.bind(backup)(romeon);
        oscard['name'] = romeon;
        verify = verify.GUILD_VOICE;
        oscard['type'] = verify;
        report[11] = oscard;
        michal['channels'] = report;
        oscard = {'id': '00', 'name': '@everyone'};
        verify = _closure1_slot1;
        report = yankee[option];
        report = verify.bind(offset)(report);
        report = report.DEFAULT;
        oscard['permissions'] = report;
        report = new Array(2);
        report[0] = oscard;
        oscard = {'id': '01', 'name': 'officers (example)', 'mentionable': true, 'hoist': true, 'permissions': null, 'color': 3066993};
        romeon = 3;
        romeon = yankee[romeon];
        output = verify.bind(offset)(romeon);
        sizing = output.combine;
        option = yankee[option];
        option = verify.bind(offset)(option);
        papara = option.DEFAULT;
        golfie = _closure1_slot4;
        cntext = golfie.MANAGE_ROLES;
        record = golfie.MANAGE_CHANNELS;
        config = golfie.KICK_MEMBERS;
        sequen = golfie.BAN_MEMBERS;
        vacuum = golfie.MANAGE_NICKNAMES;
        ctrled = golfie.MANAGE_GUILD_EXPRESSIONS;
        source = golfie.MANAGE_MESSAGES;
        update = golfie.SEND_TTS_MESSAGES;
        target = output;
        golfie = target[sizing](papara, cntext, record, config, sequen, vacuum, ctrled, source, update, echoed);
        oscard['permissions'] = golfie;
        report[1] = oscard;
        michal['roles'] = report;
        michal['system_channel_id'] = tangon;
        entity[zuuluu] = michal;
        return entity;
    };
    zuuluu['getGuildTemplatesMap'] = michal;
    return entity;
})();