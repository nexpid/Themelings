// app/modules/guilds_bar/native/GuildsBar.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    verify = tangon.StyleSheet;
    tangon = 2;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot3 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    option = verify.create;
    tangon = {};
    offset = {'position': 'relative', 'flex': 1};
    tangon['wrapper'] = offset;
    offset = {'opacity': 0.5, 'position': 'absolute', 'left': 0, 'width': 72, 'height': 40, 'backgroundColor': 'black', 'zIndex': 100, 'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center', 'color': 'white'};
    tangon['toggleWrapper'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot5 = tangon;
    tangon = golfie.memo;
    michal = function() { // Original name: GuildsBar
        romeon = _closure1_slot1;
        foxtra = _closure1_slot2;
        entity = 3;
        entity = foxtra[entity];
        tangon = undefined;
        entity = romeon.bind(tangon)(entity);
        entity = entity.bind(tangon)();
        output = entity.scrollPosition;
        golfie = entity.gesture;
        kiloes = entity.scrollerRef;
        echoed = entity.fastListRef;
        sizing = entity.persistantKeys;
        result = entity.onFastListScroll;
        entity = 4;
        entity = foxtra[entity];
        entity = romeon.bind(tangon)(entity);
        entity = entity.bind(tangon)(echoed);
        source = entity.listProps;
        backup = entity.listDataProps;
        zuuluu = _closure1_slot3;
        report = 5;
        entity = foxtra[report];
        michal = romeon.bind(tangon)(entity);
        entity = {};
        oscard = _closure1_slot0;
        report = foxtra[report];
        report = oscard.bind(tangon)(report);
        report = report.Profiles;
        report = report.Guilds;
        entity['profile'] = report;
        report = 6;
        report = foxtra[report];
        report = oscard.bind(tangon)(report);
        oscard = report.GestureDetector;
        report = {};
        report['gesture'] = golfie;
        verify = _closure1_slot4;
        golfie = 7;
        golfie = foxtra[golfie];
        option = romeon.bind(tangon)(golfie);
        golfie = {};
        offset = _closure1_slot5;
        offset = offset.wrapper;
        golfie['style'] = offset;
        offset = false;
        golfie['collapsable'] = offset;
        offset = 8;
        offset = foxtra[offset];
        yankee = romeon.bind(tangon)(offset);
        offset = {};
        ctrled = offset;
        update = copyDataProperties(ctrled, source);
        ctrled = offset;
        source = backup;
        backup = copyDataProperties(ctrled, source);
        backup = 'ref';
        offset[backup] = echoed;
        backup = 'manualRef';
        offset[backup] = kiloes;
        kiloes = true;
        backup = 'disableContentWrappers';
        offset[backup] = kiloes;
        backup = 'onScroll';
        offset[backup] = result;
        backup = 'scrollPosValue';
        offset[backup] = output;
        output = 'sticky-mount';
        backup = 'stickySectionsVariant';
        offset[backup] = output;
        backup = 'optimizeListItemRender';
        offset[backup] = kiloes;
        backup = 'persistantKeys';
        offset[backup] = sizing;
        backup = 'disableRecyclingOnFullCompute';
        offset[backup] = kiloes;
        yankee = zuuluu.bind(tangon)(yankee, offset);
        offset = new Array(2);
        offset[0] = yankee;
        yankee = 9;
        yankee = foxtra[yankee];
        romeon = romeon.bind(tangon)(yankee);
        yankee = {};
        yankee = zuuluu.bind(tangon)(romeon, yankee);
        offset[1] = yankee;
        golfie['children'] = offset;
        golfie = verify.bind(tangon)(option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guilds_bar/native/GuildsBar.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();