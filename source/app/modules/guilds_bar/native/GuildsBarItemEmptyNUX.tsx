// app/modules/guilds_bar/native/GuildsBarItemEmptyNUX.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    option = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = option;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    golfie = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    verify = tangon.Pressable;
    var _closure1_slot4 = verify;
    verify = tangon.Image;
    var _closure1_slot5 = verify;
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    backup = 2;
    tangon = oscard[backup];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    romeon = 3;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    yankee = tangon.GUILD_ITEM_SIZE;
    kiloes = tangon.GUILD_ITEM_PADDING;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    foxtra = tangon.DM_WIDTH;
    tangon = tangon.EMPTY_NUX_SERVER;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.MODE_CHANGE_PHYSICS;
    var _closure1_slot9 = tangon;
    tangon = 6;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot10 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot11 = tangon;
    tangon = {'top': 4, 'left': 12, 'bottom': 4, 'right': 12};
    var _closure1_slot12 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'position': 'relative', 'flexDirection': 'row', 'alignItems': 'center', 'marginTop': null, 'height': 55};
    offset['marginTop'] = kiloes;
    offset['width'] = yankee;
    tangon['container'] = offset;
    offset = {'position': 'absolute', 'left': null, 'top': 4};
    foxtra = foxtra - yankee;
    foxtra = -foxtra;
    foxtra = foxtra / backup;
    offset['left'] = foxtra;
    tangon['guildIndicator'] = offset;
    offset = {'width': 59, 'height': 55, 'marginLeft': 4294967293, 'marginRight': 4294967290};
    tangon['icon'] = offset;
    offset = {'position': 'absolute', 'top': 16};
    offset['width'] = yankee;
    foxtra = 10;
    foxtra = yankee - foxtra;
    offset['height'] = foxtra;
    yankee = yankee / romeon;
    offset['borderRadius'] = yankee;
    tangon['backdrop'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot13 = tangon;
    tangon = {};
    option = "function GuildsBarItemEmptyNUXTsx1(){const{withSpring,selected,activeColor,inactiveColor,MODE_CHANGE_PHYSICS}=this.__closure;return{backgroundColor:withSpring(selected?activeColor:inactiveColor,MODE_CHANGE_PHYSICS,'animate-always')};}";
    tangon['code'] = option;
    var _closure1_slot14 = tangon;
    tangon = golfie.memo;
    michal = function() { // Original name: GuildsBarEmptyNUX
        michal = _closure1_slot13;
        tangon = undefined;
        verify = michal.bind(tangon)();
        offset = _closure1_slot0;
        foxtra = _closure1_slot2;
        michal = 8;
        michal = foxtra[michal];
        golfie = offset.bind(tangon)(michal);
        report = golfie.useStateFromStores;
        michal = _closure1_slot7;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            zuuluu = _closure1_slot7;
            michal = zuuluu.getGuildId;
            michal = michal.bind(zuuluu)();
            entity = _closure1_slot8;
            entity = michal === entity;
            return entity;
        };
        romeon = report.bind(golfie)(zuuluu, michal);
        var _closure2_slot0 = romeon;
        backup = _closure1_slot3;
        zuuluu = backup.useContext;
        michal = 9;
        michal = foxtra[michal];
        michal = offset.bind(tangon)(michal);
        michal = michal.HomeDrawerStateContext;
        michal = zuuluu.bind(backup)(michal);
        michal = michal.setDrawerState;
        var _closure2_slot1 = michal;
        report = backup.useCallback;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            zuuluu = _closure2_slot1;
            entity = undefined;
            michal = 'closed';
            michal = zuuluu.bind(entity)(michal);
            tangon = _closure1_slot0;
            report = _closure1_slot2;
            zuuluu = 10;
            zuuluu = report[zuuluu];
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.transitionToGuild;
            michal = _closure1_slot8;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        golfie = report.bind(backup)(michal, zuuluu);
        report = 11;
        michal = foxtra[report];
        option = offset.bind(tangon)(michal);
        zuuluu = option.useSharedValue;
        michal = false;
        michal = zuuluu.bind(option)(michal);
        var _closure2_slot2 = michal;
        yankee = backup.useCallback;
        option = new Array(1);
        option[0] = michal;
        zuuluu = function() {
            zuuluu = _closure2_slot2;
            michal = zuuluu.set;
            entity = true;
            entity = michal.bind(zuuluu)(entity);
            entity = undefined;
            return entity;
        };
        yankee = yankee.bind(backup)(zuuluu, option);
        option = backup.useCallback;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            zuuluu = _closure2_slot2;
            michal = zuuluu.set;
            entity = false;
            entity = michal.bind(zuuluu)(entity);
            entity = undefined;
            return entity;
        };
        option = option.bind(backup)(michal, zuuluu);
        zuuluu = 12;
        michal = foxtra[zuuluu];
        output = offset.bind(tangon)(michal);
        kiloes = output.useToken;
        sizing = _closure1_slot1;
        michal = 13;
        backup = foxtra[michal];
        backup = sizing.bind(tangon)(backup);
        backup = backup.colors;
        backup = backup.BACKGROUND_SECONDARY;
        kiloes = kiloes.bind(output)(backup);
        var _closure2_slot3 = kiloes;
        zuuluu = foxtra[zuuluu];
        backup = offset.bind(tangon)(zuuluu);
        zuuluu = backup.useToken;
        michal = foxtra[michal];
        michal = sizing.bind(tangon)(michal);
        michal = michal.colors;
        michal = michal.BG_BRAND;
        output = zuuluu.bind(backup)(michal);
        var _closure2_slot4 = output;
        michal = foxtra[report];
        zuuluu = offset.bind(tangon)(michal);
        michal = zuuluu.useAnimatedStyle;
        entity = function() { // Original name: o
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = {};
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                zuuluu = 14;
                tangon = tangon[zuuluu];
                zuuluu = undefined;
                oscard = report.bind(zuuluu)(tangon);
                report = oscard.withSpring;
                tangon = _closure2_slot0;
                if(tangon) { _fun00002_ip = 48; continue _fun00001 }
 42:
                tangon = _closure2_slot3;
                _fun00002_ip = 52; continue _fun00001;
 48:
                tangon = _closure2_slot4;
 52:
                zuuluu = _closure1_slot9;
                michal = 'animate-always';
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                entity['backgroundColor'] = michal;
                return entity;
            }
        };
        backup = {};
        result = 14;
        result = foxtra[result];
        result = offset.bind(tangon)(result);
        result = result.withSpring;
        backup['withSpring'] = result;
        backup['selected'] = romeon;
        backup['activeColor'] = output;
        backup['inactiveColor'] = kiloes;
        kiloes = _closure1_slot9;
        backup['MODE_CHANGE_PHYSICS'] = kiloes;
        entity['__closure'] = backup;
        backup = 15012639840543.0;
        entity['__workletHash'] = backup;
        backup = _closure1_slot14;
        entity['__initData'] = backup;
        kiloes = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot11;
        michal = _closure1_slot4;
        entity = {};
        backup = verify.container;
        entity['style'] = backup;
        entity['onPressIn'] = yankee;
        entity['onPressOut'] = option;
        entity['onPress'] = golfie;
        yankee = true;
        entity['accessible'] = yankee;
        golfie = 'button';
        entity['accessibilityRole'] = golfie;
        golfie = 15;
        option = foxtra[golfie];
        option = offset.bind(tangon)(option);
        backup = option.intl;
        option = backup.string;
        golfie = foxtra[golfie];
        golfie = offset.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.3S2xmp;
        golfie = option.bind(backup)(golfie);
        entity['accessibilityLabel'] = golfie;
        golfie = {};
        golfie['selected'] = romeon;
        entity['accessibilityState'] = golfie;
        golfie = _closure1_slot12;
        entity['hitSlop'] = golfie;
        option = _closure1_slot10;
        report = foxtra[report];
        report = sizing.bind(tangon)(report);
        golfie = report.View;
        report = {};
        output = verify.backdrop;
        backup = new Array(2);
        backup[0] = output;
        backup[1] = kiloes;
        report['style'] = backup;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(3);
        report[0] = golfie;
        backup = _closure1_slot5;
        golfie = {};
        kiloes = verify.icon;
        golfie['style'] = kiloes;
        kiloes = 16;
        kiloes = foxtra[kiloes];
        kiloes = sizing.bind(tangon)(kiloes);
        golfie['source'] = kiloes;
        kiloes = 'contain';
        golfie['resizeMode'] = kiloes;
        golfie = option.bind(tangon)(backup, golfie);
        report[1] = golfie;
        golfie = _closure1_slot6;
        oscard = {};
        verify = verify.guildIndicator;
        oscard['style'] = verify;
        verify = 17;
        verify = foxtra[verify];
        verify = offset.bind(tangon)(verify);
        offset = verify.UnreadIndicator;
        verify = {};
        yankee = yankee === romeon;
        verify['selected'] = yankee;
        verify = option.bind(tangon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 18;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guilds_bar/native/GuildsBarItemEmptyNUX.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();