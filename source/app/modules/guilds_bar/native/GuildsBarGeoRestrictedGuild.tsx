// app/modules/guilds_bar/native/GuildsBarGeoRestrictedGuild.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    options = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = options;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    golf = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(verify)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot3 = golf;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    yankee = tango.StyleSheet;
    tango = 2;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    tango = verify.GUILD_ITEM_BADGE_SIZE;
    foxtrot = verify.GUILD_ITEM_SIZE;
    verify = 3;
    verify = oscar[verify];
    verify = report.bind(entity)(verify);
    verify = verify.jsx;
    var _closure1_slot4 = verify;
    offset = yankee.create;
    verify = {};
    romeo = {};
    romeo['width'] = foxtrot;
    romeo['height'] = foxtrot;
    verify['guildIcon'] = romeo;
    romeo = {'borderColor': 'transparent', 'width': null, 'height': null, 'bottom': 4, 'right': 12};
    romeo['width'] = tango;
    romeo['height'] = tango;
    tango = 4;
    verify['geoRestrictedBadge'] = romeo;
    verify = offset.bind(yankee)(verify);
    var _closure1_slot5 = verify;
    tango = oscar[tango];
    options = options.bind(entity)(tango);
    tango = {};
    verify = 'bottom-right';
    tango['position'] = verify;
    options = options.bind(entity)(tango);
    tango = new Array(1);
    tango[0] = options;
    var _closure1_slot6 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: GuildsBarGeoRestrictedGuild
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.restrictedGuild;
            var _closure2_slot0 = yankee;
            report = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 5;
            zulu = zulu[entity];
            tango = undefined;
            oscar = report.bind(tango)(zulu);
            report = oscar.useGuildsBarAnimatedWrapperStyles;
            zulu = true;
            romeo = report.bind(oscar)(zulu, zulu);
            zulu = yankee.icon;
            report = null;
            zulu = report != zulu;
            offset = null;
            if(!zulu) { _fun00002_ip = 111; continue _fun00001 }
 70:
            oscar = _closure1_slot1;
            golf = _closure1_slot2;
            zulu = 6;
            zulu = golf[zulu];
            options = oscar.bind(tango)(zulu);
            golf = options.getAnimatableSourceWithFallback;
            oscar = false;
            zulu = function(argFoo) {
                mike = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 6;
                entity = verify[entity];
                options = undefined;
                zulu = mike.bind(options)(entity);
                mike = zulu.getGuildIconSource;
                entity = {};
                tango = _closure2_slot0;
                oscar = tango.id;
                entity['id'] = oscar;
                golf = _closure1_slot0;
                report = 7;
                oscar = verify[report];
                oscar = golf.bind(options)(oscar);
                oscar = oscar.ImageSizes;
                report = verify[report];
                report = golf.bind(options)(report);
                report = report.GuildIconSizes;
                report = report.LARGE;
                report = oscar[report];
                entity['size'] = report;
                tango = tango.icon;
                entity['icon'] = tango;
                tango = argFoo;
                entity['canAnimate'] = tango;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            offset = golf.bind(options)(oscar, zulu);
 111:
            golf = _closure1_slot3;
            oscar = golf.useMemo;
            options = yankee.id;
            zulu = new Array(2);
            zulu[0] = options;
            options = yankee.name;
            zulu[1] = options;
            mike = function() {
                entity = {};
                mike = function() { // Original name: onPress
                    zulu = _closure1_slot1;
                    verify = _closure1_slot2;
                    entity = 8;
                    mike = verify[entity];
                    entity = undefined;
                    tango = zulu.bind(entity)(mike);
                    zulu = tango.show;
                    mike = {};
                    options = _closure1_slot0;
                    report = 9;
                    oscar = verify[report];
                    oscar = options.bind(entity)(oscar);
                    offset = oscar.intl;
                    golf = offset.string;
                    oscar = verify[report];
                    oscar = options.bind(entity)(oscar);
                    oscar = oscar.t;
                    oscar = oscar.aCAiGh;
                    oscar = golf.bind(offset)(oscar);
                    mike['title'] = oscar;
                    oscar = verify[report];
                    oscar = options.bind(entity)(oscar);
                    yankee = oscar.intl;
                    offset = yankee.format;
                    oscar = verify[report];
                    oscar = options.bind(entity)(oscar);
                    oscar = oscar.t;
                    golf = oscar.4cJV9f;
                    oscar = {};
                    romeo = _closure2_slot0;
                    romeo = romeo.name;
                    oscar['serverName'] = romeo;
                    oscar = offset.bind(yankee)(golf, oscar);
                    mike['body'] = oscar;
                    oscar = verify[report];
                    oscar = options.bind(entity)(oscar);
                    golf = oscar.intl;
                    oscar = golf.string;
                    report = verify[report];
                    report = options.bind(entity)(report);
                    report = report.t;
                    report = report.J2TBi4;
                    report = oscar.bind(golf)(report);
                    mike['cancelText'] = report;
                    report = function() { // Original name: onCancel
                        zulu = _closure1_slot1;
                        mike = _closure1_slot2;
                        entity = 10;
                        mike = mike[entity];
                        entity = undefined;
                        tango = zulu.bind(entity)(mike);
                        zulu = tango.leaveGuild;
                        mike = _closure2_slot0;
                        mike = mike.id;
                        mike = zulu.bind(tango)(mike);
                        return entity;
                    };
                    mike['onCancel'] = report;
                    mike = zulu.bind(tango)(mike);
                    return entity;
                };
                entity['onPress'] = mike;
                return entity;
            };
            oscar = oscar.bind(golf)(mike, zulu);
            zulu = _closure1_slot4;
            golf = _closure1_slot1;
            options = _closure1_slot2;
            entity = options[entity];
            mike = golf.bind(tango)(entity);
            entity = {'selected': false, 'unread': false, 'circle': true, 'styles': null, 'label': null, 'isDragTarget': false};
            entity['styles'] = romeo;
            romeo = yankee.name;
            entity['label'] = romeo;
            entity['config'] = oscar;
            oscar = _closure1_slot6;
            entity['cutouts'] = oscar;
            entity['overState'] = tango;
            oscar = 11;
            oscar = options[oscar];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            options = _closure1_slot5;
            options = options.geoRestrictedBadge;
            oscar['style'] = options;
            oscar = zulu.bind(tango)(golf, oscar);
            entity['externalChildren'] = oscar;
            if(!(report == offset)) { _fun00002_ip = 350; continue _fun00001 }
 268:
            golf = _closure1_slot4;
            oscar = _closure1_slot1;
            romeo = _closure1_slot2;
            options = 7;
            report = romeo[options];
            oscar = oscar.bind(tango)(report);
            report = {'value': null, 'selected': false, 'animate': false};
            yankee = yankee.name;
            report['value'] = yankee;
            yankee = _closure1_slot0;
            options = romeo[options];
            options = yankee.bind(tango)(options);
            options = options.GuildIconSizes;
            options = options.LARGE;
            report['size'] = options;
            report = golf.bind(tango)(oscar, report);
            _fun00002_ip = 407; continue _fun00001;
 350:
            options = _closure1_slot4;
            golf = _closure1_slot1;
            yankee = _closure1_slot2;
            oscar = 12;
            oscar = yankee[oscar];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            oscar['source'] = offset;
            verify = _closure1_slot5;
            verify = verify.guildIcon;
            oscar['style'] = verify;
            verify = 0;
            oscar['fadeDuration'] = verify;
            report = options.bind(tango)(golf, oscar);
 407:
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guilds_bar/native/GuildsBarGeoRestrictedGuild.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();