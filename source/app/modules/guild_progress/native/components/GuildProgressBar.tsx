// app/modules/guild_progress/native/components/GuildProgressBar.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'relative';
    verify['position'] = offset;
    offset = 4;
    offset = oscard[offset];
    offset = report.bind(entity)(offset);
    offset = offset.PROGRESS_BACKGROUND_COLOR;
    verify['backgroundColor'] = offset;
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.xs;
    verify['borderRadius'] = romeon;
    romeon = 8;
    verify['height'] = romeon;
    tangon['wrapper'] = verify;
    verify = {'position': 'absolute', 'height': 8};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_BRAND;
    verify['backgroundColor'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.xs;
    verify['borderRadius'] = offset;
    tangon['progress'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = {};
    golfie = 'function GuildProgressBarTsx1(){const{percentWidth}=this.__closure;return{width:percentWidth.get()+"%"};}';
    tangon['code'] = golfie;
    var _closure1_slot7 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_progress/native/components/GuildProgressBar.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildProgressBar
        zuuluu = argFoo;
        michal = zuuluu.percent;
        var _closure2_slot0 = michal;
        yankee = zuuluu.style;
        zuuluu = _closure1_slot6;
        tangon = undefined;
        golfie = zuuluu.bind(tangon)();
        zuuluu = _closure1_slot0;
        verify = _closure1_slot2;
        report = 6;
        option = verify[report];
        romeon = zuuluu.bind(tangon)(option);
        offset = romeon.useSharedValue;
        option = 0;
        offset = offset.bind(romeon)(option);
        var _closure2_slot1 = offset;
        foxtra = _closure1_slot3;
        romeon = foxtra.useEffect;
        option = new Array(2);
        option[0] = michal;
        option[1] = offset;
        michal = function() {
            tangon = _closure2_slot1;
            zuuluu = tangon.set;
            option = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 7;
            report = verify[entity];
            entity = undefined;
            golfie = option.bind(entity)(report);
            oscard = golfie.withTiming;
            report = _closure2_slot0;
            michal = 8;
            michal = verify[michal];
            michal = option.bind(entity)(michal);
            michal = michal.timingSlow;
            michal = oscard.bind(golfie)(report, michal);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        michal = romeon.bind(foxtra)(michal, option);
        michal = verify[report];
        zuuluu = zuuluu.bind(tangon)(michal);
        michal = zuuluu.useAnimatedStyle;
        entity = function() { // Original name: h
            entity = {};
            zuuluu = _closure2_slot1;
            michal = zuuluu.get;
            report = michal.bind(zuuluu)();
            michal = global;
            michal = michal.HermesInternal;
            tangon = michal.concat;
            zuuluu = '';
            michal = '%';
            michal = tangon.bind(zuuluu)(report, michal);
            entity['width'] = michal;
            return entity;
        };
        option = {};
        option['percentWidth'] = offset;
        entity['__closure'] = option;
        option = 14122394499539.0;
        entity['__workletHash'] = option;
        option = _closure1_slot7;
        entity['__initData'] = option;
        option = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot5;
        michal = _closure1_slot4;
        entity = {};
        romeon = golfie.wrapper;
        offset = new Array(2);
        offset[0] = romeon;
        offset[1] = yankee;
        entity['style'] = offset;
        oscard = _closure1_slot1;
        report = verify[report];
        report = oscard.bind(tangon)(report);
        oscard = report.View;
        report = {};
        verify = golfie.progress;
        golfie = new Array(2);
        golfie[0] = verify;
        golfie[1] = option;
        report['style'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();