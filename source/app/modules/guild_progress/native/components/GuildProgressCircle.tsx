// app/modules/guild_progress/native/components/GuildProgressCircle.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 'relative';
    verify['position'] = offset;
    tango['wrapper'] = verify;
    verify = {};
    offset = 'absolute';
    verify['position'] = offset;
    tango['circle'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_progress/native/components/GuildProgressCircle.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildProgressCircle
        _fun93477: for(var _fun93477_ip = 0; ; ) switch(_fun93477_ip) {
 0:
            entity = argFoo;
            verify = entity.percent;
            oscar = entity.style;
            foxtrot = entity.size;
            tango = undefined;
            if(!(foxtrot === tango)) { _fun93477_ip = 28; continue _fun93477 }
 25:
            foxtrot = 32;
 28:
            entity = _closure1_slot6;
            backup = entity.bind(tango)();
            kilo = {};
            kilo['width'] = foxtrot;
            kilo['height'] = foxtrot;
            entity = 2;
            entity = foxtrot / entity;
            kilo['borderRadius'] = entity;
            zulu = _closure1_slot5;
            mike = _closure1_slot3;
            entity = {};
            options = backup.wrapper;
            report = new Array(3);
            report[0] = options;
            report[1] = oscar;
            report[2] = kilo;
            entity['style'] = report;
            options = _closure1_slot4;
            yankee = _closure1_slot1;
            romeo = _closure1_slot2;
            offset = 4;
            report = romeo[offset];
            oscar = yankee.bind(tango)(report);
            report = {};
            output = backup.circle;
            sizing = new Array(2);
            sizing[0] = output;
            sizing[1] = kilo;
            report['style'] = sizing;
            report['size'] = foxtrot;
            report['strokeWidth'] = offset;
            sizing = 100;
            report['percent'] = sizing;
            sizing = _closure1_slot0;
            golf = 5;
            golf = romeo[golf];
            golf = sizing.bind(tango)(golf);
            golf = golf.PROGRESS_BACKGROUND_COLOR;
            report['color'] = golf;
            oscar = options.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            oscar = romeo[offset];
            golf = yankee.bind(tango)(oscar);
            oscar = {};
            sizing = backup.circle;
            backup = new Array(2);
            backup[0] = sizing;
            backup[1] = kilo;
            oscar['style'] = backup;
            oscar['size'] = foxtrot;
            oscar['strokeWidth'] = offset;
            offset = 6;
            offset = romeo[offset];
            offset = yankee.bind(tango)(offset);
            offset = offset.unsafe_rawColors;
            offset = offset.BRAND_500;
            oscar['color'] = offset;
            oscar['percent'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();