// app/modules/guild_progress/native/components/GuildProgressCircle.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'relative';
    verify['position'] = offset;
    tangon['wrapper'] = verify;
    verify = {};
    offset = 'absolute';
    verify['position'] = offset;
    tangon['circle'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_progress/native/components/GuildProgressCircle.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildProgressCircle
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            verify = entity.percent;
            oscard = entity.style;
            foxtra = entity.size;
            tangon = undefined;
            if(!(foxtra === tangon)) { _fun00002_ip = 28; continue _fun00001 }
 25:
            foxtra = 32;
 28:
            entity = _closure1_slot6;
            backup = entity.bind(tangon)();
            kiloes = {};
            kiloes['width'] = foxtra;
            kiloes['height'] = foxtra;
            entity = 2;
            entity = foxtra / entity;
            kiloes['borderRadius'] = entity;
            zuuluu = _closure1_slot5;
            michal = _closure1_slot3;
            entity = {};
            option = backup.wrapper;
            report = new Array(3);
            report[0] = option;
            report[1] = oscard;
            report[2] = kiloes;
            entity['style'] = report;
            option = _closure1_slot4;
            yankee = _closure1_slot1;
            romeon = _closure1_slot2;
            offset = 4;
            report = romeon[offset];
            oscard = yankee.bind(tangon)(report);
            report = {};
            output = backup.circle;
            sizing = new Array(2);
            sizing[0] = output;
            sizing[1] = kiloes;
            report['style'] = sizing;
            report['size'] = foxtra;
            report['strokeWidth'] = offset;
            sizing = 100;
            report['percent'] = sizing;
            sizing = _closure1_slot0;
            golfie = 5;
            golfie = romeon[golfie];
            golfie = sizing.bind(tangon)(golfie);
            golfie = golfie.PROGRESS_BACKGROUND_COLOR;
            report['color'] = golfie;
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = romeon[offset];
            golfie = yankee.bind(tangon)(oscard);
            oscard = {};
            sizing = backup.circle;
            backup = new Array(2);
            backup[0] = sizing;
            backup[1] = kiloes;
            oscard['style'] = backup;
            oscard['size'] = foxtra;
            oscard['strokeWidth'] = offset;
            offset = 6;
            offset = romeon[offset];
            offset = yankee.bind(tangon)(offset);
            offset = offset.unsafe_rawColors;
            offset = offset.BRAND_500;
            oscard['color'] = offset;
            oscard['percent'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();