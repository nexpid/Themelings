// app/modules/guild_progress/native/action_sheet/GuildProgressActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    kilo = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = kilo;
    var _closure1_slot2 = golf;
    mike = function(argFoo) { // Original name: GuildProgressHeader
        _fun93450: for(var _fun93450_ip = 0; ; ) switch(_fun93450_ip) {
 0:
            entity = argFoo;
            backup = entity.title;
            verify = entity.subtitle;
            echo = entity.percentCompleted;
            entity = _closure1_slot15;
            tango = undefined;
            offset = entity.bind(tango)();
            zulu = _closure1_slot14;
            mike = _closure1_slot5;
            entity = {};
            report = offset.header;
            entity['style'] = report;
            romeo = _closure1_slot14;
            options = _closure1_slot5;
            report = {};
            golf = offset.progress;
            report['style'] = golf;
            foxtrot = _closure1_slot13;
            yankee = _closure1_slot1;
            kilo = _closure1_slot2;
            golf = 31;
            golf = kilo[golf];
            yankee = yankee.bind(tango)(golf);
            golf = {};
            kilo = 96;
            golf['size'] = kilo;
            golf['percent'] = echo;
            golf = foxtrot.bind(tango)(yankee, golf);
            foxtrot = new Array(3);
            foxtrot[0] = golf;
            kilo = _closure1_slot13;
            yankee = _closure1_slot5;
            golf = {};
            output = offset.progressCenter;
            sizing = new Array(2);
            sizing[0] = output;
            result = 100;
            output = null;
            if(!(result === echo)) { _fun93450_ip = 163; continue _fun93450 }
 157:
            output = offset.progressCenterCompleted;
 163:
            sizing[1] = output;
            golf['style'] = sizing;
            golf = kilo.bind(tango)(yankee, golf);
            foxtrot[1] = golf;
            result = _closure1_slot13;
            kilo = _closure1_slot1;
            yankee = _closure1_slot2;
            golf = 32;
            sizing = yankee[golf];
            output = kilo.bind(tango)(sizing);
            sizing = {};
            echo = offset.progressArt;
            sizing['style'] = echo;
            echo = 33;
            echo = yankee[echo];
            echo = kilo.bind(tango)(echo);
            sizing['source'] = echo;
            sizing = result.bind(tango)(output, sizing);
            foxtrot[2] = sizing;
            report['children'] = foxtrot;
            options = romeo.bind(tango)(options, report);
            report = new Array(4);
            report[0] = options;
            romeo = _closure1_slot13;
            golf = yankee[golf];
            options = kilo.bind(tango)(golf);
            golf = {};
            foxtrot = offset.progressSparkles;
            golf['style'] = foxtrot;
            foxtrot = 34;
            foxtrot = yankee[foxtrot];
            foxtrot = kilo.bind(tango)(foxtrot);
            golf['source'] = foxtrot;
            golf = romeo.bind(tango)(options, golf);
            report[1] = golf;
            foxtrot = _closure1_slot13;
            golf = _closure1_slot0;
            options = 26;
            options = yankee[options];
            options = golf.bind(tango)(options);
            romeo = options.Text;
            options = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary', 'accessibilityRole': 'header'};
            kilo = offset.headerTitle;
            options['style'] = kilo;
            options['children'] = backup;
            options = foxtrot.bind(tango)(romeo, options);
            report[2] = options;
            options = _closure1_slot13;
            oscar = 35;
            oscar = yankee[oscar];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.LegacyText;
            oscar = {};
            offset = offset.headerSubtitle;
            oscar['style'] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[3] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot16 = mike;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, report);
    entity = 0;
    report = golf[entity];
    entity = undefined;
    report = kilo.bind(entity)(report);
    var _closure1_slot3 = report;
    yankee = 1;
    options = golf[yankee];
    report = argCorge;
    report = report.bind(entity)(options);
    var _closure1_slot4 = report;
    report = 2;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.View;
    var _closure1_slot5 = report;
    report = 3;
    report = golf[report];
    report = kilo.bind(entity)(report);
    var _closure1_slot6 = report;
    foxtrot = 4;
    report = golf[foxtrot];
    report = kilo.bind(entity)(report);
    var _closure1_slot7 = report;
    report = 5;
    report = golf[report];
    report = oscar.bind(entity)(report);
    options = report.AnalyticsSetupTypes;
    var _closure1_slot8 = options;
    report = report.AnalyticsActions;
    var _closure1_slot9 = report;
    report = 6;
    report = golf[report];
    report = oscar.bind(entity)(report);
    options = report.UPLOAD_MEDIUM_SIZE;
    var _closure1_slot10 = options;
    options = report.AnalyticEvents;
    var _closure1_slot11 = options;
    report = report.ComponentActions;
    var _closure1_slot12 = report;
    report = 7;
    options = golf[report];
    options = oscar.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot13 = options;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot14 = report;
    report = 8;
    report = golf[report];
    verify = oscar.bind(entity)(report);
    options = verify.createStyles;
    report = {};
    offset = {};
    romeo = 16;
    offset['padding'] = romeo;
    report['container'] = offset;
    romeo = 'center';
    offset = {'alignItems': 'center', 'paddingTop': 8, 'paddingBottom': 16};
    report['header'] = offset;
    offset = {'justifyContent': 'center', 'alignItems': 'center', 'position': 'relative', 'marginBottom': 12};
    report['progress'] = offset;
    offset = {'position': 'absolute', 'backgroundColor': null, 'width': 84, 'height': 84, 'borderRadius': 44};
    backup = 9;
    backup = golf[backup];
    backup = oscar.bind(entity)(backup);
    backup = backup.PROGRESS_BACKGROUND_COLOR;
    offset['backgroundColor'] = backup;
    report['progressCenter'] = offset;
    offset = {};
    backup = 10;
    sizing = golf[backup];
    sizing = kilo.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BG_BRAND;
    offset['backgroundColor'] = sizing;
    report['progressCenterCompleted'] = offset;
    offset = {'position': 'absolute', 'width': 56, 'height': 46};
    report['progressArt'] = offset;
    offset = {'position': 'absolute', 'top': 8, 'width': 160, 'height': 51};
    report['progressSparkles'] = offset;
    offset = {'marginBottom': 8, 'textAlign': 'center'};
    report['headerTitle'] = offset;
    offset = {'fontSize': 14, 'fontWeight': '500'};
    backup = golf[backup];
    backup = kilo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_SECONDARY;
    offset['color'] = backup;
    report['headerSubtitle'] = offset;
    offset = {};
    offset['marginTop'] = foxtrot;
    report['footer'] = offset;
    offset = {};
    offset['alignItems'] = romeo;
    report['center'] = offset;
    offset = {};
    offset['flex'] = yankee;
    report['button'] = offset;
    report = options.bind(verify)(report);
    var _closure1_slot15 = report;
    report = 36;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/guild_progress/native/action_sheet/GuildProgressActionSheet.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: GuildProgressActionSheet
        _fun93451: for(var _fun93451_ip = 0; ; ) switch(_fun93451_ip) {
 0:
            entity = argFoo;
            mike = entity.guild;
            var _closure2_slot0 = mike;
            entity = _closure1_slot15;
            tango = undefined;
            foxtrot = entity.bind(tango)();
            output = _closure1_slot0;
            sizing = _closure1_slot2;
            zulu = 11;
            entity = sizing[zulu];
            options = output.bind(tango)(entity);
            golf = options.useStateFromStores;
            entity = _closure1_slot7;
            oscar = new Array(1);
            oscar[0] = entity;
            entity = function() {
                zulu = _closure1_slot7;
                mike = zulu.getDefaultChannel;
                entity = _closure2_slot0;
                entity = entity.id;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            entity = golf.bind(options)(oscar, entity);
            var _closure2_slot1 = entity;
            entity = 9;
            oscar = sizing[entity];
            golf = output.bind(tango)(oscar);
            oscar = golf.useIOSCompletionStates;
            oscar = oscar.bind(golf)(mike);
            golf = oscar.guildPopulated;
            romeo = oscar.guildPersonalized;
            yankee = oscar.guildMessaged;
            vacuum = oscar.numFinished;
            var _closure2_slot2 = vacuum;
            control = oscar.totalSteps;
            var _closure2_slot3 = control;
            zulu = sizing[zulu];
            verify = output.bind(tango)(zulu);
            options = verify.useStateFromStoresObject;
            zulu = _closure1_slot6;
            oscar = new Array(1);
            oscar[0] = zulu;
            zulu = function() {
                mike = _closure1_slot6;
                entity = mike.getErrors;
                entity = entity.bind(mike)();
                return entity;
            };
            zulu = options.bind(verify)(oscar, zulu);
            var _closure2_slot4 = zulu;
            mike = mike.id;
            var _closure2_slot5 = mike;
            options = _closure1_slot4;
            verify = options.useLayoutEffect;
            zulu = zulu.message;
            oscar = new Array(1);
            oscar[0] = zulu;
            zulu = function() {
                _fun93454: for(var _fun93454_ip = 0; ; ) switch(_fun93454_ip) {
 0:
                    mike = _closure2_slot4;
                    zulu = mike.message;
                    mike = null;
                    if(!(mike != zulu)) { _fun93454_ip = 63; continue _fun93454 }
 18:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    mike = 12;
                    zulu = zulu[mike];
                    mike = undefined;
                    zulu = tango.bind(mike)(zulu);
                    mike = zulu.presentError;
                    entity = _closure2_slot4;
                    entity = entity.message;
                    entity = mike.bind(zulu)(entity);
 63:
                    entity = undefined;
                    return entity;
                }
            };
            zulu = verify.bind(options)(zulu, oscar);
            verify = options.useEffect;
            oscar = new Array(1);
            oscar[0] = mike;
            zulu = function() {
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 13;
                zulu = zulu[entity];
                entity = undefined;
                report = tango.bind(entity)(zulu);
                tango = report.track;
                mike = _closure1_slot11;
                zulu = mike.OPEN_POPOUT;
                mike = {};
                oscar = 'Guild Progress Sheet';
                mike['type'] = oscar;
                oscar = _closure2_slot5;
                mike['guild_id'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            zulu = verify.bind(options)(zulu, oscar);
            oscar = options.useEffect;
            zulu = new Array(3);
            zulu[0] = mike;
            zulu[1] = control;
            zulu[2] = vacuum;
            mike = function() {
                _fun93456: for(var _fun93456_ip = 0; ; ) switch(_fun93456_ip) {
 0:
                    zulu = _closure2_slot2;
                    mike = _closure2_slot3;
                    if(!(zulu === mike)) { _fun93456_ip = 55; continue _fun93456 }
 15:
                    tango = _closure1_slot1;
                    zulu = _closure1_slot2;
                    mike = 14;
                    zulu = zulu[mike];
                    mike = undefined;
                    zulu = tango.bind(mike)(zulu);
                    mike = zulu.markCompletedProgressSeen;
                    entity = _closure2_slot5;
                    entity = mike.bind(zulu)(entity);
 55:
                    entity = undefined;
                    return entity;
                }
            };
            mike = oscar.bind(options)(mike, zulu);
            options = _closure1_slot13;
            backup = _closure1_slot1;
            mike = 15;
            zulu = sizing[mike];
            oscar = backup.bind(tango)(zulu);
            zulu = {};
            verify = function() { // Original name: onPress
                _fun93457: for(var _fun93457_ip = 0; ; ) switch(_fun93457_ip) {
 0:
                    zulu = _closure2_slot1;
                    mike = null;
                    if(!(mike != zulu)) { _fun93457_ip = 60; continue _fun93457 }
 13:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    mike = 16;
                    zulu = zulu[mike];
                    mike = undefined;
                    tango = tango.bind(mike)(zulu);
                    zulu = tango.showInstantInviteActionSheet;
                    mike = _closure2_slot1;
                    entity = 'Guild Progress';
                    entity = zulu.bind(tango)(mike, entity);
 60:
                    entity = undefined;
                    return entity;
                }
            };
            zulu['onPress'] = verify;
            verify = 17;
            verify = sizing[verify];
            verify = backup.bind(tango)(verify);
            zulu['source'] = verify;
            result = 18;
            verify = sizing[result];
            verify = output.bind(tango)(verify);
            kilo = verify.intl;
            offset = kilo.string;
            verify = sizing[result];
            verify = output.bind(tango)(verify);
            verify = verify.t;
            verify = verify.q9n0TU;
            verify = offset.bind(kilo)(verify);
            zulu['title'] = verify;
            zulu['isCompleted'] = golf;
            offset = _closure1_slot8;
            golf = offset.GUILD_PROGRESS;
            zulu['analyticsSetupType'] = golf;
            golf = _closure1_slot9;
            verify = golf.INVITE;
            zulu['analyticsAction'] = verify;
            verify = options.bind(tango)(oscar, zulu);
            zulu = function() {
                tango = _closure1_slot3;
                zulu = undefined;
                mike = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun93460: for(var _fun93460_ip = 0; ; ) switch(_fun93460_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(mike) { _fun93460_ip = 171; continue _fun93460 }
 10:
                            oscar = _closure1_slot1;
                            options = _closure1_slot2;
                            golf = 19;
                            mike = options[golf];
                            zulu = undefined;
                            offset = oscar.bind(zulu)(mike);
                            verify = offset.init;
                            mike = _closure2_slot5;
                            mike = verify.bind(offset)(mike);
                            verify = _closure1_slot0;
                            mike = 9;
                            mike = options[mike];
                            offset = verify.bind(zulu)(mike);
                            verify = offset.hideActionSheet;
                            mike = _closure2_slot0;
                            mike = mike.id;
                            mike = verify.bind(offset)(mike);
                            mike = 20;
                            mike = options[mike];
                            options = oscar.bind(zulu)(mike);
                            oscar = options.openImagePicker;
                            mike = _closure1_slot10;
                            mike = oscar.bind(options)(mike);
                            SaveGenerator(address=120);
 118:
                            return mike;
 120:
                            ResumeGenerator(result_out_reg=1, return_bool_out_reg=5);
                            if(oscar) { _fun93460_ip = 168; continue _fun93460 }
 126:
                            oscar = null;
                            if(!(oscar != mike)) { _fun93460_ip = 165; continue _fun93460 }
 132:
                            oscar = _closure1_slot1;
                            report = _closure1_slot2;
                            report = report[golf];
                            oscar = oscar.bind(zulu)(report);
                            report = oscar.updateIcon;
                            tango = _closure2_slot5;
                            tango = report.bind(oscar)(tango, mike);
 165:
                            return zulu;
 168:
                            return mike;
 171:
                            return entity;
                        }
                    };
                    return entity;
                };
                mike = tango.bind(zulu)(mike);
                var _closure3_slot0 = mike;
                entity = function() {
                    entity = undefined;
                    tango = _closure3_slot0;
                    zulu = tango.apply;
                    entity = arguments;
                    mike = entity;
                    entity = this;
                    entity = zulu.bind(tango)(entity, mike);
                    return entity;
                };
                return entity;
            };
            kilo = zulu.bind(tango)();
            options = _closure1_slot13;
            zulu = sizing[mike];
            oscar = backup.bind(tango)(zulu);
            zulu = {};
            zulu['onPress'] = kilo;
            kilo = 21;
            kilo = sizing[kilo];
            kilo = backup.bind(tango)(kilo);
            zulu['source'] = kilo;
            kilo = sizing[result];
            kilo = output.bind(tango)(kilo);
            update = kilo.intl;
            echo = update.string;
            kilo = sizing[result];
            kilo = output.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.DWB2YW;
            kilo = echo.bind(update)(kilo);
            zulu['title'] = kilo;
            zulu['isCompleted'] = romeo;
            romeo = offset.GUILD_PROGRESS;
            zulu['analyticsSetupType'] = romeo;
            romeo = golf.PERSONALIZE_SERVER;
            zulu['analyticsAction'] = romeo;
            options = options.bind(tango)(oscar, zulu);
            oscar = _closure1_slot13;
            mike = sizing[mike];
            zulu = backup.bind(tango)(mike);
            mike = {};
            romeo = function() { // Original name: onPress
                _fun93462: for(var _fun93462_ip = 0; ; ) switch(_fun93462_ip) {
 0:
                    entity = _closure2_slot1;
                    report = null;
                    if(!(report != entity)) { _fun93462_ip = 58; continue _fun93462 }
 13:
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 22;
                    mike = mike[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.transitionToChannel;
                    entity = _closure2_slot1;
                    entity = entity.id;
                    entity = mike.bind(zulu)(entity);
 58:
                    oscar = _closure1_slot1;
                    zulu = _closure1_slot2;
                    entity = 23;
                    zulu = zulu[entity];
                    entity = undefined;
                    oscar = oscar.bind(entity)(zulu);
                    zulu = oscar.hideActionSheet;
                    zulu = zulu.bind(oscar)();
                    zulu = _closure2_slot1;
                    zulu = report != zulu;
                    report = undefined;
                    if(!zulu) { _fun93462_ip = 124; continue _fun93462 }
 106:
                    zulu = {};
                    tango = _closure2_slot1;
                    tango = tango.id;
                    zulu['channelId'] = tango;
                    report = zulu;
 124:
                    tango = _closure1_slot0;
                    oscar = _closure1_slot2;
                    zulu = 24;
                    zulu = oscar[zulu];
                    zulu = tango.bind(entity)(zulu);
                    tango = zulu.ComponentDispatch;
                    zulu = tango.dispatch;
                    mike = _closure1_slot12;
                    mike = mike.TEXTAREA_FOCUS;
                    mike = zulu.bind(tango)(mike, report);
                    return entity;
                }
            };
            mike['onPress'] = romeo;
            romeo = 25;
            romeo = sizing[romeo];
            romeo = backup.bind(tango)(romeo);
            mike['source'] = romeo;
            romeo = sizing[result];
            romeo = output.bind(tango)(romeo);
            kilo = romeo.intl;
            backup = kilo.string;
            romeo = sizing[result];
            romeo = output.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.dNktpq;
            romeo = backup.bind(kilo)(romeo);
            mike['title'] = romeo;
            mike['isCompleted'] = yankee;
            offset = offset.GUILD_PROGRESS;
            mike['analyticsSetupType'] = offset;
            golf = golf.SEND_MESSAGE;
            mike['analyticsAction'] = golf;
            golf = oscar.bind(tango)(zulu, mike);
            offset = vacuum === control;
            mike = global;
            oscar = mike.Math;
            zulu = oscar.max;
            entity = sizing[entity];
            entity = output.bind(tango)(entity);
            mike = entity.MIN_PROGRESS_PERCENT;
            entity = 100;
            entity = entity * vacuum;
            entity = entity / control;
            backup = zulu.bind(oscar)(mike, entity);
            kilo = function() { // Original name: handleDismissGuildProgress
                zulu = _closure1_slot1;
                tango = _closure1_slot2;
                entity = 14;
                mike = tango[entity];
                entity = undefined;
                verify = zulu.bind(entity)(mike);
                options = verify.dismissProgress;
                mike = _closure2_slot0;
                report = mike.id;
                report = options.bind(verify)(report);
                report = 23;
                report = tango[report];
                options = zulu.bind(entity)(report);
                report = options.hideActionSheet;
                offset = mike.id;
                mike = global;
                mike = mike.HermesInternal;
                verify = mike.concat;
                mike = 'guild-progress-';
                mike = verify.bind(mike)(offset);
                mike = report.bind(options)(mike);
                mike = 13;
                mike = tango[mike];
                report = zulu.bind(entity)(mike);
                tango = report.track;
                mike = _closure1_slot11;
                zulu = mike.SERVER_SETUP_CTA_CLICKED;
                mike = {};
                options = _closure1_slot9;
                options = options.DISMISS_GUILD_PROGRESS;
                mike['action'] = options;
                golf = _closure1_slot8;
                golf = golf.GUILD_PROGRESS;
                mike['setup_type'] = golf;
                golf = _closure2_slot3;
                mike['num_total_actions'] = golf;
                oscar = _closure2_slot2;
                mike['num_actions_completed'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            zulu = _closure1_slot14;
            mike = _closure1_slot5;
            entity = {};
            oscar = foxtrot.container;
            entity['style'] = oscar;
            romeo = _closure1_slot13;
            yankee = _closure1_slot16;
            oscar = {};
            echo = sizing[result];
            echo = output.bind(tango)(echo);
            sequence = echo.intl;
            update = sequence.string;
            echo = sizing[result];
            echo = output.bind(tango)(echo);
            echo = echo.t;
            echo = echo.tu/tr6;
            echo = update.bind(sequence)(echo);
            oscar['title'] = echo;
            echo = sizing[result];
            echo = output.bind(tango)(echo);
            update = echo.intl;
            echo = update.format;
            sizing = sizing[result];
            sizing = output.bind(tango)(sizing);
            sizing = sizing.t;
            output = sizing.l6iRLi;
            sizing = {};
            sizing['numFinished'] = vacuum;
            sizing['total'] = control;
            source = function(argFoo, argBar) { // Original name: stepsHook
                report = _closure1_slot13;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 26;
                entity = zulu[entity];
                tango = undefined;
                entity = mike.bind(tango)(entity);
                zulu = entity.Text;
                mike = {'variant': 'text-sm/medium', 'color': 'header-primary'};
                entity = argFoo;
                mike['children'] = entity;
                entity = argBar;
                entity = report.bind(tango)(zulu, mike, entity);
                return entity;
            };
            sizing['stepsHook'] = source;
            sizing = echo.bind(update)(output, sizing);
            oscar['subtitle'] = sizing;
            oscar['percentCompleted'] = backup;
            yankee = romeo.bind(tango)(yankee, oscar);
            oscar = new Array(5);
            oscar[0] = yankee;
            oscar[1] = verify;
            oscar[2] = options;
            oscar[3] = golf;
            verify = _closure1_slot13;
            options = _closure1_slot5;
            golf = {};
            romeo = foxtrot.footer;
            yankee = new Array(2);
            yankee[0] = romeo;
            romeo = null;
            if(offset) { _fun93451_ip = 955; continue _fun93451 }
 949:
            romeo = foxtrot.center;
 955:
            yankee[1] = romeo;
            golf['style'] = yankee;
            foxtrot = _closure1_slot13;
            if(offset) { _fun93451_ip = 1114; continue _fun93451 }
 973:
            source = _closure1_slot0;
            output = _closure1_slot2;
            offset = 28;
            offset = output[offset];
            offset = source.bind(tango)(offset);
            yankee = offset.PressableOpacity;
            offset = {};
            romeo = 'button';
            offset['accessibilityRole'] = romeo;
            offset['onPress'] = kilo;
            sizing = _closure1_slot13;
            romeo = 26;
            romeo = output[romeo];
            romeo = source.bind(tango)(romeo);
            backup = romeo.Text;
            romeo = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
            echo = output[result];
            echo = source.bind(tango)(echo);
            update = echo.intl;
            echo = update.string;
            output = output[result];
            output = source.bind(tango)(output);
            output = output.t;
            output = output.9E36wc;
            output = echo.bind(update)(output);
            romeo['children'] = output;
            romeo = sizing.bind(tango)(backup, romeo);
            offset['children'] = romeo;
            offset = foxtrot.bind(tango)(yankee, offset);
            _fun93451_ip = 1198; continue _fun93451;
 1114:
            romeo = _closure1_slot1;
            backup = _closure1_slot2;
            yankee = 27;
            yankee = backup[yankee];
            romeo = romeo.bind(tango)(yankee);
            yankee = {};
            yankee['onPress'] = kilo;
            output = _closure1_slot0;
            kilo = backup[result];
            kilo = output.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = backup[result];
            backup = output.bind(tango)(backup);
            backup = backup.t;
            backup = backup.0/5zho;
            backup = kilo.bind(sizing)(backup);
            yankee['text'] = backup;
            offset = foxtrot.bind(tango)(romeo, yankee);
 1198:
            golf['children'] = offset;
            golf = verify.bind(tango)(options, golf);
            oscar[4] = golf;
            entity['children'] = oscar;
            options = zulu.bind(tango)(mike, entity);
            zulu = _closure1_slot13;
            oscar = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 29;
            entity = verify[entity];
            entity = oscar.bind(tango)(entity);
            mike = entity.RedesignCompat;
            entity = {};
            golf = _closure1_slot13;
            report = 30;
            report = verify[report];
            report = oscar.bind(tango)(report);
            oscar = report.ActionSheet;
            report = {'showGradient': true, 'startExpanded': true};
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = tango;
    zulu['GuildProgressHeader'] = mike;
    return entity;
})();