// app/modules/guild_progress/native/action_sheet/GuildProgressActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    kiloes = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = kiloes;
    var _closure1_slot2 = golfie;
    michal = function(argFoo) { // Original name: GuildProgressHeader
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            backup = entity.title;
            verify = entity.subtitle;
            echoed = entity.percentCompleted;
            entity = _closure1_slot15;
            tangon = undefined;
            offset = entity.bind(tangon)();
            zuuluu = _closure1_slot14;
            michal = _closure1_slot5;
            entity = {};
            report = offset.header;
            entity['style'] = report;
            romeon = _closure1_slot14;
            option = _closure1_slot5;
            report = {};
            golfie = offset.progress;
            report['style'] = golfie;
            foxtra = _closure1_slot13;
            yankee = _closure1_slot1;
            kiloes = _closure1_slot2;
            golfie = 31;
            golfie = kiloes[golfie];
            yankee = yankee.bind(tangon)(golfie);
            golfie = {};
            kiloes = 96;
            golfie['size'] = kiloes;
            golfie['percent'] = echoed;
            golfie = foxtra.bind(tangon)(yankee, golfie);
            foxtra = new Array(3);
            foxtra[0] = golfie;
            kiloes = _closure1_slot13;
            yankee = _closure1_slot5;
            golfie = {};
            output = offset.progressCenter;
            sizing = new Array(2);
            sizing[0] = output;
            result = 100;
            output = null;
            if(!(result === echoed)) { _fun00002_ip = 163; continue _fun00001 }
 157:
            output = offset.progressCenterCompleted;
 163:
            sizing[1] = output;
            golfie['style'] = sizing;
            golfie = kiloes.bind(tangon)(yankee, golfie);
            foxtra[1] = golfie;
            result = _closure1_slot13;
            kiloes = _closure1_slot1;
            yankee = _closure1_slot2;
            golfie = 32;
            sizing = yankee[golfie];
            output = kiloes.bind(tangon)(sizing);
            sizing = {};
            echoed = offset.progressArt;
            sizing['style'] = echoed;
            echoed = 33;
            echoed = yankee[echoed];
            echoed = kiloes.bind(tangon)(echoed);
            sizing['source'] = echoed;
            sizing = result.bind(tangon)(output, sizing);
            foxtra[2] = sizing;
            report['children'] = foxtra;
            option = romeon.bind(tangon)(option, report);
            report = new Array(4);
            report[0] = option;
            romeon = _closure1_slot13;
            golfie = yankee[golfie];
            option = kiloes.bind(tangon)(golfie);
            golfie = {};
            foxtra = offset.progressSparkles;
            golfie['style'] = foxtra;
            foxtra = 34;
            foxtra = yankee[foxtra];
            foxtra = kiloes.bind(tangon)(foxtra);
            golfie['source'] = foxtra;
            golfie = romeon.bind(tangon)(option, golfie);
            report[1] = golfie;
            foxtra = _closure1_slot13;
            golfie = _closure1_slot0;
            option = 26;
            option = yankee[option];
            option = golfie.bind(tangon)(option);
            romeon = option.Text;
            option = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary', 'accessibilityRole': 'header'};
            kiloes = offset.headerTitle;
            option['style'] = kiloes;
            option['children'] = backup;
            option = foxtra.bind(tangon)(romeon, option);
            report[2] = option;
            option = _closure1_slot13;
            oscard = 35;
            oscard = yankee[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.LegacyText;
            oscard = {};
            offset = offset.headerSubtitle;
            oscard['style'] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot16 = michal;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    entity = 0;
    report = golfie[entity];
    entity = undefined;
    report = kiloes.bind(entity)(report);
    var _closure1_slot3 = report;
    yankee = 1;
    option = golfie[yankee];
    report = argCor;
    report = report.bind(entity)(option);
    var _closure1_slot4 = report;
    report = 2;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.View;
    var _closure1_slot5 = report;
    report = 3;
    report = golfie[report];
    report = kiloes.bind(entity)(report);
    var _closure1_slot6 = report;
    foxtra = 4;
    report = golfie[foxtra];
    report = kiloes.bind(entity)(report);
    var _closure1_slot7 = report;
    report = 5;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.AnalyticsSetupTypes;
    var _closure1_slot8 = option;
    report = report.AnalyticsActions;
    var _closure1_slot9 = report;
    report = 6;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.UPLOAD_MEDIUM_SIZE;
    var _closure1_slot10 = option;
    option = report.AnalyticEvents;
    var _closure1_slot11 = option;
    report = report.ComponentActions;
    var _closure1_slot12 = report;
    report = 7;
    option = golfie[report];
    option = oscard.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot13 = option;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot14 = report;
    report = 8;
    report = golfie[report];
    verify = oscard.bind(entity)(report);
    option = verify.createStyles;
    report = {};
    offset = {};
    romeon = 16;
    offset['padding'] = romeon;
    report['container'] = offset;
    romeon = 'center';
    offset = {'alignItems': 'center', 'paddingTop': 8, 'paddingBottom': 16};
    report['header'] = offset;
    offset = {'justifyContent': 'center', 'alignItems': 'center', 'position': 'relative', 'marginBottom': 12};
    report['progress'] = offset;
    offset = {'position': 'absolute', 'backgroundColor': null, 'width': 84, 'height': 84, 'borderRadius': 44};
    backup = 9;
    backup = golfie[backup];
    backup = oscard.bind(entity)(backup);
    backup = backup.PROGRESS_BACKGROUND_COLOR;
    offset['backgroundColor'] = backup;
    report['progressCenter'] = offset;
    offset = {};
    backup = 10;
    sizing = golfie[backup];
    sizing = kiloes.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BG_BRAND;
    offset['backgroundColor'] = sizing;
    report['progressCenterCompleted'] = offset;
    offset = {'position': 'absolute', 'width': 56, 'height': 46};
    report['progressArt'] = offset;
    offset = {'position': 'absolute', 'top': 8, 'width': 160, 'height': 51};
    report['progressSparkles'] = offset;
    offset = {'marginBottom': 8, 'textAlign': 'center'};
    report['headerTitle'] = offset;
    offset = {'fontSize': 14, 'fontWeight': '500'};
    backup = golfie[backup];
    backup = kiloes.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_SECONDARY;
    offset['color'] = backup;
    report['headerSubtitle'] = offset;
    offset = {};
    offset['marginTop'] = foxtra;
    report['footer'] = offset;
    offset = {};
    offset['alignItems'] = romeon;
    report['center'] = offset;
    offset = {};
    offset['flex'] = yankee;
    report['button'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot15 = report;
    report = 36;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/guild_progress/native/action_sheet/GuildProgressActionSheet.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: GuildProgressActionSheet
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            michal = entity.guild;
            var _closure2_slot0 = michal;
            entity = _closure1_slot15;
            tangon = undefined;
            foxtra = entity.bind(tangon)();
            output = _closure1_slot0;
            sizing = _closure1_slot2;
            zuuluu = 11;
            entity = sizing[zuuluu];
            option = output.bind(tangon)(entity);
            golfie = option.useStateFromStores;
            entity = _closure1_slot7;
            oscard = new Array(1);
            oscard[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot7;
                michal = zuuluu.getDefaultChannel;
                entity = _closure2_slot0;
                entity = entity.id;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity = golfie.bind(option)(oscard, entity);
            var _closure2_slot1 = entity;
            entity = 9;
            oscard = sizing[entity];
            golfie = output.bind(tangon)(oscard);
            oscard = golfie.useIOSCompletionStates;
            oscard = oscard.bind(golfie)(michal);
            golfie = oscard.guildPopulated;
            romeon = oscard.guildPersonalized;
            yankee = oscard.guildMessaged;
            vacuum = oscard.numFinished;
            var _closure2_slot2 = vacuum;
            ctrled = oscard.totalSteps;
            var _closure2_slot3 = ctrled;
            zuuluu = sizing[zuuluu];
            verify = output.bind(tangon)(zuuluu);
            option = verify.useStateFromStoresObject;
            zuuluu = _closure1_slot6;
            oscard = new Array(1);
            oscard[0] = zuuluu;
            zuuluu = function() {
                michal = _closure1_slot6;
                entity = michal.getErrors;
                entity = entity.bind(michal)();
                return entity;
            };
            zuuluu = option.bind(verify)(oscard, zuuluu);
            var _closure2_slot4 = zuuluu;
            michal = michal.id;
            var _closure2_slot5 = michal;
            option = _closure1_slot4;
            verify = option.useLayoutEffect;
            zuuluu = zuuluu.message;
            oscard = new Array(1);
            oscard[0] = zuuluu;
            zuuluu = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    michal = _closure2_slot4;
                    zuuluu = michal.message;
                    michal = null;
                    if(!(michal != zuuluu)) { _fun00006_ip = 63; continue _fun00005 }
 18:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 12;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    zuuluu = tangon.bind(michal)(zuuluu);
                    michal = zuuluu.presentError;
                    entity = _closure2_slot4;
                    entity = entity.message;
                    entity = michal.bind(zuuluu)(entity);
 63:
                    entity = undefined;
                    return entity;
                }
            };
            zuuluu = verify.bind(option)(zuuluu, oscard);
            verify = option.useEffect;
            oscard = new Array(1);
            oscard[0] = michal;
            zuuluu = function() {
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 13;
                zuuluu = zuuluu[entity];
                entity = undefined;
                report = tangon.bind(entity)(zuuluu);
                tangon = report.track;
                michal = _closure1_slot11;
                zuuluu = michal.OPEN_POPOUT;
                michal = {};
                oscard = 'Guild Progress Sheet';
                michal['type'] = oscard;
                oscard = _closure2_slot5;
                michal['guild_id'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            zuuluu = verify.bind(option)(zuuluu, oscard);
            oscard = option.useEffect;
            zuuluu = new Array(3);
            zuuluu[0] = michal;
            zuuluu[1] = ctrled;
            zuuluu[2] = vacuum;
            michal = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    zuuluu = _closure2_slot2;
                    michal = _closure2_slot3;
                    if(!(zuuluu === michal)) { _fun00008_ip = 55; continue _fun00007 }
 15:
                    tangon = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    michal = 14;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    zuuluu = tangon.bind(michal)(zuuluu);
                    michal = zuuluu.markCompletedProgressSeen;
                    entity = _closure2_slot5;
                    entity = michal.bind(zuuluu)(entity);
 55:
                    entity = undefined;
                    return entity;
                }
            };
            michal = oscard.bind(option)(michal, zuuluu);
            option = _closure1_slot13;
            backup = _closure1_slot1;
            michal = 15;
            zuuluu = sizing[michal];
            oscard = backup.bind(tangon)(zuuluu);
            zuuluu = {};
            verify = function() { // Original name: onPress
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    zuuluu = _closure2_slot1;
                    michal = null;
                    if(!(michal != zuuluu)) { _fun00010_ip = 60; continue _fun00009 }
 13:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 16;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    tangon = tangon.bind(michal)(zuuluu);
                    zuuluu = tangon.showInstantInviteActionSheet;
                    michal = _closure2_slot1;
                    entity = 'Guild Progress';
                    entity = zuuluu.bind(tangon)(michal, entity);
 60:
                    entity = undefined;
                    return entity;
                }
            };
            zuuluu['onPress'] = verify;
            verify = 17;
            verify = sizing[verify];
            verify = backup.bind(tangon)(verify);
            zuuluu['source'] = verify;
            result = 18;
            verify = sizing[result];
            verify = output.bind(tangon)(verify);
            kiloes = verify.intl;
            offset = kiloes.string;
            verify = sizing[result];
            verify = output.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.q9n0TU;
            verify = offset.bind(kiloes)(verify);
            zuuluu['title'] = verify;
            zuuluu['isCompleted'] = golfie;
            offset = _closure1_slot8;
            golfie = offset.GUILD_PROGRESS;
            zuuluu['analyticsSetupType'] = golfie;
            golfie = _closure1_slot9;
            verify = golfie.INVITE;
            zuuluu['analyticsAction'] = verify;
            verify = option.bind(tangon)(oscard, zuuluu);
            zuuluu = function() {
                tangon = _closure1_slot3;
                zuuluu = undefined;
                michal = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(michal) { _fun00012_ip = 171; continue _fun00011 }
 10:
                            oscard = _closure1_slot1;
                            option = _closure1_slot2;
                            golfie = 19;
                            michal = option[golfie];
                            zuuluu = undefined;
                            offset = oscard.bind(zuuluu)(michal);
                            verify = offset.init;
                            michal = _closure2_slot5;
                            michal = verify.bind(offset)(michal);
                            verify = _closure1_slot0;
                            michal = 9;
                            michal = option[michal];
                            offset = verify.bind(zuuluu)(michal);
                            verify = offset.hideActionSheet;
                            michal = _closure2_slot0;
                            michal = michal.id;
                            michal = verify.bind(offset)(michal);
                            michal = 20;
                            michal = option[michal];
                            option = oscard.bind(zuuluu)(michal);
                            oscard = option.openImagePicker;
                            michal = _closure1_slot10;
                            michal = oscard.bind(option)(michal);
                            SaveGenerator(address=120);
 118:
                            return michal;
 120:
                            ResumeGenerator(result_out_reg=1, return_bool_out_reg=5);
                            if(oscard) { _fun00012_ip = 168; continue _fun00011 }
 126:
                            oscard = null;
                            if(!(oscard != michal)) { _fun00012_ip = 165; continue _fun00011 }
 132:
                            oscard = _closure1_slot1;
                            report = _closure1_slot2;
                            report = report[golfie];
                            oscard = oscard.bind(zuuluu)(report);
                            report = oscard.updateIcon;
                            tangon = _closure2_slot5;
                            tangon = report.bind(oscard)(tangon, michal);
 165:
                            return zuuluu;
 168:
                            return michal;
 171:
                            return entity;
                        }
                    };
                    return entity;
                };
                michal = tangon.bind(zuuluu)(michal);
                var _closure3_slot0 = michal;
                entity = function() {
                    entity = undefined;
                    tangon = _closure3_slot0;
                    zuuluu = tangon.apply;
                    entity = arguments;
                    michal = entity;
                    entity = this;
                    entity = zuuluu.bind(tangon)(entity, michal);
                    return entity;
                };
                return entity;
            };
            kiloes = zuuluu.bind(tangon)();
            option = _closure1_slot13;
            zuuluu = sizing[michal];
            oscard = backup.bind(tangon)(zuuluu);
            zuuluu = {};
            zuuluu['onPress'] = kiloes;
            kiloes = 21;
            kiloes = sizing[kiloes];
            kiloes = backup.bind(tangon)(kiloes);
            zuuluu['source'] = kiloes;
            kiloes = sizing[result];
            kiloes = output.bind(tangon)(kiloes);
            update = kiloes.intl;
            echoed = update.string;
            kiloes = sizing[result];
            kiloes = output.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.DWB2YW;
            kiloes = echoed.bind(update)(kiloes);
            zuuluu['title'] = kiloes;
            zuuluu['isCompleted'] = romeon;
            romeon = offset.GUILD_PROGRESS;
            zuuluu['analyticsSetupType'] = romeon;
            romeon = golfie.PERSONALIZE_SERVER;
            zuuluu['analyticsAction'] = romeon;
            option = option.bind(tangon)(oscard, zuuluu);
            oscard = _closure1_slot13;
            michal = sizing[michal];
            zuuluu = backup.bind(tangon)(michal);
            michal = {};
            romeon = function() { // Original name: onPress
                _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                    entity = _closure2_slot1;
                    report = null;
                    if(!(report != entity)) { _fun00014_ip = 58; continue _fun00013 }
 13:
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 22;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.transitionToChannel;
                    entity = _closure2_slot1;
                    entity = entity.id;
                    entity = michal.bind(zuuluu)(entity);
 58:
                    oscard = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 23;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    oscard = oscard.bind(entity)(zuuluu);
                    zuuluu = oscard.hideActionSheet;
                    zuuluu = zuuluu.bind(oscard)();
                    zuuluu = _closure2_slot1;
                    zuuluu = report != zuuluu;
                    report = undefined;
                    if(!zuuluu) { _fun00014_ip = 124; continue _fun00013 }
 106:
                    zuuluu = {};
                    tangon = _closure2_slot1;
                    tangon = tangon.id;
                    zuuluu['channelId'] = tangon;
                    report = zuuluu;
 124:
                    tangon = _closure1_slot0;
                    oscard = _closure1_slot2;
                    zuuluu = 24;
                    zuuluu = oscard[zuuluu];
                    zuuluu = tangon.bind(entity)(zuuluu);
                    tangon = zuuluu.ComponentDispatch;
                    zuuluu = tangon.dispatch;
                    michal = _closure1_slot12;
                    michal = michal.TEXTAREA_FOCUS;
                    michal = zuuluu.bind(tangon)(michal, report);
                    return entity;
                }
            };
            michal['onPress'] = romeon;
            romeon = 25;
            romeon = sizing[romeon];
            romeon = backup.bind(tangon)(romeon);
            michal['source'] = romeon;
            romeon = sizing[result];
            romeon = output.bind(tangon)(romeon);
            kiloes = romeon.intl;
            backup = kiloes.string;
            romeon = sizing[result];
            romeon = output.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.dNktpq;
            romeon = backup.bind(kiloes)(romeon);
            michal['title'] = romeon;
            michal['isCompleted'] = yankee;
            offset = offset.GUILD_PROGRESS;
            michal['analyticsSetupType'] = offset;
            golfie = golfie.SEND_MESSAGE;
            michal['analyticsAction'] = golfie;
            golfie = oscard.bind(tangon)(zuuluu, michal);
            offset = vacuum === ctrled;
            michal = global;
            oscard = michal.Math;
            zuuluu = oscard.max;
            entity = sizing[entity];
            entity = output.bind(tangon)(entity);
            michal = entity.MIN_PROGRESS_PERCENT;
            entity = 100;
            entity = entity * vacuum;
            entity = entity / ctrled;
            backup = zuuluu.bind(oscard)(michal, entity);
            kiloes = function() { // Original name: handleDismissGuildProgress
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 14;
                michal = tangon[entity];
                entity = undefined;
                verify = zuuluu.bind(entity)(michal);
                option = verify.dismissProgress;
                michal = _closure2_slot0;
                report = michal.id;
                report = option.bind(verify)(report);
                report = 23;
                report = tangon[report];
                option = zuuluu.bind(entity)(report);
                report = option.hideActionSheet;
                offset = michal.id;
                michal = global;
                michal = michal.HermesInternal;
                verify = michal.concat;
                michal = 'guild-progress-';
                michal = verify.bind(michal)(offset);
                michal = report.bind(option)(michal);
                michal = 13;
                michal = tangon[michal];
                report = zuuluu.bind(entity)(michal);
                tangon = report.track;
                michal = _closure1_slot11;
                zuuluu = michal.SERVER_SETUP_CTA_CLICKED;
                michal = {};
                option = _closure1_slot9;
                option = option.DISMISS_GUILD_PROGRESS;
                michal['action'] = option;
                golfie = _closure1_slot8;
                golfie = golfie.GUILD_PROGRESS;
                michal['setup_type'] = golfie;
                golfie = _closure2_slot3;
                michal['num_total_actions'] = golfie;
                oscard = _closure2_slot2;
                michal['num_actions_completed'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            zuuluu = _closure1_slot14;
            michal = _closure1_slot5;
            entity = {};
            oscard = foxtra.container;
            entity['style'] = oscard;
            romeon = _closure1_slot13;
            yankee = _closure1_slot16;
            oscard = {};
            echoed = sizing[result];
            echoed = output.bind(tangon)(echoed);
            sequen = echoed.intl;
            update = sequen.string;
            echoed = sizing[result];
            echoed = output.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.tu/tr6;
            echoed = update.bind(sequen)(echoed);
            oscard['title'] = echoed;
            echoed = sizing[result];
            echoed = output.bind(tangon)(echoed);
            update = echoed.intl;
            echoed = update.format;
            sizing = sizing[result];
            sizing = output.bind(tangon)(sizing);
            sizing = sizing.t;
            output = sizing.l6iRLi;
            sizing = {};
            sizing['numFinished'] = vacuum;
            sizing['total'] = ctrled;
            source = function(argFoo, argBar) { // Original name: stepsHook
                report = _closure1_slot13;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 26;
                entity = zuuluu[entity];
                tangon = undefined;
                entity = michal.bind(tangon)(entity);
                zuuluu = entity.Text;
                michal = {'variant': 'text-sm/medium', 'color': 'header-primary'};
                entity = argFoo;
                michal['children'] = entity;
                entity = argBar;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            sizing['stepsHook'] = source;
            sizing = echoed.bind(update)(output, sizing);
            oscard['subtitle'] = sizing;
            oscard['percentCompleted'] = backup;
            yankee = romeon.bind(tangon)(yankee, oscard);
            oscard = new Array(5);
            oscard[0] = yankee;
            oscard[1] = verify;
            oscard[2] = option;
            oscard[3] = golfie;
            verify = _closure1_slot13;
            option = _closure1_slot5;
            golfie = {};
            romeon = foxtra.footer;
            yankee = new Array(2);
            yankee[0] = romeon;
            romeon = null;
            if(offset) { _fun00004_ip = 957; continue _fun00003 }
 951:
            romeon = foxtra.center;
 957:
            yankee[1] = romeon;
            golfie['style'] = yankee;
            foxtra = _closure1_slot13;
            if(offset) { _fun00004_ip = 1116; continue _fun00003 }
 975:
            source = _closure1_slot0;
            output = _closure1_slot2;
            offset = 28;
            offset = output[offset];
            offset = source.bind(tangon)(offset);
            yankee = offset.PressableOpacity;
            offset = {};
            romeon = 'button';
            offset['accessibilityRole'] = romeon;
            offset['onPress'] = kiloes;
            sizing = _closure1_slot13;
            romeon = 26;
            romeon = output[romeon];
            romeon = source.bind(tangon)(romeon);
            backup = romeon.Text;
            romeon = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
            echoed = output[result];
            echoed = source.bind(tangon)(echoed);
            update = echoed.intl;
            echoed = update.string;
            output = output[result];
            output = source.bind(tangon)(output);
            output = output.t;
            output = output.9E36wc;
            output = echoed.bind(update)(output);
            romeon['children'] = output;
            romeon = sizing.bind(tangon)(backup, romeon);
            offset['children'] = romeon;
            offset = foxtra.bind(tangon)(yankee, offset);
            _fun00004_ip = 1200; continue _fun00003;
 1116:
            romeon = _closure1_slot1;
            backup = _closure1_slot2;
            yankee = 27;
            yankee = backup[yankee];
            romeon = romeon.bind(tangon)(yankee);
            yankee = {};
            yankee['onPress'] = kiloes;
            output = _closure1_slot0;
            kiloes = backup[result];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = backup[result];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.0/5zho;
            backup = kiloes.bind(sizing)(backup);
            yankee['text'] = backup;
            offset = foxtra.bind(tangon)(romeon, yankee);
 1200:
            golfie['children'] = offset;
            golfie = verify.bind(tangon)(option, golfie);
            oscard[4] = golfie;
            entity['children'] = oscard;
            option = zuuluu.bind(tangon)(michal, entity);
            zuuluu = _closure1_slot13;
            oscard = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 29;
            entity = verify[entity];
            entity = oscard.bind(tangon)(entity);
            michal = entity.RedesignCompat;
            entity = {};
            golfie = _closure1_slot13;
            report = 30;
            report = verify[report];
            report = oscard.bind(tangon)(report);
            oscard = report.ActionSheet;
            report = {'showGradient': true, 'startExpanded': true};
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['GuildProgressHeader'] = michal;
    return entity;
})();