// app/modules/directory_channels/native/components/GuildDirectoryAddAlert.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 16;
    verify['marginBottom'] = offset;
    offset = 4;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    tango['guildIcon'] = verify;
    offset = 'center';
    verify = {'marginBottom': 8, 'textAlign': 'center'};
    tango['title'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tango['description'] = verify;
    verify = {'alignItems': 'center', 'justifyContent': 'center'};
    tango['container'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/directory_channels/native/components/GuildDirectoryAddAlert.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        entity = argFoo;
        oscar = entity.onClose;
        backup = entity.guild;
        kilo = entity.directoryGuildName;
        entity = _closure1_slot6;
        tango = undefined;
        foxtrot = entity.bind(tango)();
        zulu = _closure1_slot4;
        verify = _closure1_slot1;
        sizing = _closure1_slot2;
        entity = 5;
        entity = sizing[entity];
        mike = verify.bind(tango)(entity);
        entity = {};
        romeo = _closure1_slot0;
        yankee = 6;
        golf = sizing[yankee];
        golf = romeo.bind(tango)(golf);
        offset = golf.intl;
        options = offset.string;
        golf = sizing[yankee];
        golf = romeo.bind(tango)(golf);
        golf = golf.t;
        golf = golf.X0WK+/;
        golf = options.bind(offset)(golf);
        entity['confirmText'] = golf;
        entity['onConfirm'] = oscar;
        golf = _closure1_slot5;
        oscar = _closure1_slot3;
        report = {};
        options = foxtrot.container;
        report['style'] = options;
        offset = 7;
        options = sizing[offset];
        verify = verify.bind(tango)(options);
        options = {};
        output = foxtrot.guildIcon;
        options['style'] = output;
        options['guild'] = backup;
        offset = sizing[offset];
        offset = romeo.bind(tango)(offset);
        offset = offset.GuildIconSizes;
        offset = offset.XLARGE;
        options['size'] = offset;
        verify = zulu.bind(tango)(verify, options);
        options = new Array(3);
        options[0] = verify;
        verify = 8;
        offset = sizing[verify];
        offset = romeo.bind(tango)(offset);
        backup = offset.Text;
        offset = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-lg/bold', 'color': 'header-primary'};
        output = foxtrot.title;
        offset['style'] = output;
        output = sizing[yankee];
        output = romeo.bind(tango)(output);
        echo = output.intl;
        result = echo.string;
        output = sizing[yankee];
        output = romeo.bind(tango)(output);
        output = output.t;
        output = output.CueiPT;
        output = result.bind(echo)(output);
        offset['children'] = output;
        offset = zulu.bind(tango)(backup, offset);
        options[1] = offset;
        verify = sizing[verify];
        verify = romeo.bind(tango)(verify);
        offset = verify.Text;
        verify = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        foxtrot = foxtrot.description;
        verify['style'] = foxtrot;
        foxtrot = sizing[yankee];
        foxtrot = romeo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.format;
        yankee = sizing[yankee];
        yankee = romeo.bind(tango)(yankee);
        yankee = yankee.t;
        romeo = yankee.R7Pqn5;
        yankee = {};
        yankee['guildName'] = kilo;
        yankee = foxtrot.bind(backup)(romeo, yankee);
        verify['children'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[2] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();