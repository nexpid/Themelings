// app/modules/directory_channels/native/components/GuildDirectoryAddAlert.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 16;
    verify['marginBottom'] = offset;
    offset = 4;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    tangon['guildIcon'] = verify;
    offset = 'center';
    verify = {'marginBottom': 8, 'textAlign': 'center'};
    tangon['title'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tangon['description'] = verify;
    verify = {'alignItems': 'center', 'justifyContent': 'center'};
    tangon['container'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/directory_channels/native/components/GuildDirectoryAddAlert.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        entity = argFoo;
        oscard = entity.onClose;
        backup = entity.guild;
        kiloes = entity.directoryGuildName;
        entity = _closure1_slot6;
        tangon = undefined;
        foxtra = entity.bind(tangon)();
        zuuluu = _closure1_slot4;
        verify = _closure1_slot1;
        sizing = _closure1_slot2;
        entity = 5;
        entity = sizing[entity];
        michal = verify.bind(tangon)(entity);
        entity = {};
        romeon = _closure1_slot0;
        yankee = 6;
        golfie = sizing[yankee];
        golfie = romeon.bind(tangon)(golfie);
        offset = golfie.intl;
        option = offset.string;
        golfie = sizing[yankee];
        golfie = romeon.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.X0WK+/;
        golfie = option.bind(offset)(golfie);
        entity['confirmText'] = golfie;
        entity['onConfirm'] = oscard;
        golfie = _closure1_slot5;
        oscard = _closure1_slot3;
        report = {};
        option = foxtra.container;
        report['style'] = option;
        offset = 7;
        option = sizing[offset];
        verify = verify.bind(tangon)(option);
        option = {};
        output = foxtra.guildIcon;
        option['style'] = output;
        option['guild'] = backup;
        offset = sizing[offset];
        offset = romeon.bind(tangon)(offset);
        offset = offset.GuildIconSizes;
        offset = offset.XLARGE;
        option['size'] = offset;
        verify = zuuluu.bind(tangon)(verify, option);
        option = new Array(3);
        option[0] = verify;
        verify = 8;
        offset = sizing[verify];
        offset = romeon.bind(tangon)(offset);
        backup = offset.Text;
        offset = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-lg/bold', 'color': 'header-primary'};
        output = foxtra.title;
        offset['style'] = output;
        output = sizing[yankee];
        output = romeon.bind(tangon)(output);
        echoed = output.intl;
        result = echoed.string;
        output = sizing[yankee];
        output = romeon.bind(tangon)(output);
        output = output.t;
        output = output.CueiPT;
        output = result.bind(echoed)(output);
        offset['children'] = output;
        offset = zuuluu.bind(tangon)(backup, offset);
        option[1] = offset;
        verify = sizing[verify];
        verify = romeon.bind(tangon)(verify);
        offset = verify.Text;
        verify = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        foxtra = foxtra.description;
        verify['style'] = foxtra;
        foxtra = sizing[yankee];
        foxtra = romeon.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.format;
        yankee = sizing[yankee];
        yankee = romeon.bind(tangon)(yankee);
        yankee = yankee.t;
        romeon = yankee.R7Pqn5;
        yankee = {};
        yankee['guildName'] = kiloes;
        yankee = foxtra.bind(backup)(romeon, yankee);
        verify['children'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[2] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();