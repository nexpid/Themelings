// app/modules/directory_channels/native/components/GuildDirectoryEmpty.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot3 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    romeon = tangon.Fonts;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'justifyContent': 'flex-end', 'padding': 16};
    offset = 6;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = foxtra;
    tangon['container'] = verify;
    verify = {'marginBottom': 16, 'alignSelf': 'center'};
    tangon['header'] = verify;
    verify = {'fontFamily': null, 'color': null, 'fontSize': 24, 'textAlign': 'center', 'marginBottom': 8, 'alignSelf': 'center'};
    romeon = romeon.PRIMARY_BOLD;
    verify['fontFamily'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_PRIMARY;
    verify['color'] = offset;
    offset = 8;
    tangon['title'] = verify;
    verify = {'textAlign': 'center', 'alignSelf': 'center', 'marginBottom': 24};
    tangon['description'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tangon['ctaContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 19;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/directory_channels/native/components/GuildDirectoryEmpty.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            source = entity.guild;
            var _closure2_slot0 = source;
            zuuluu = entity.channel;
            var _closure2_slot1 = zuuluu;
            entity = _closure1_slot8;
            tangon = undefined;
            backup = entity.bind(tangon)();
            foxtra = _closure1_slot1;
            romeon = _closure1_slot2;
            entity = 7;
            entity = romeon[entity];
            entity = foxtra.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            option = entity.bottom;
            result = _closure1_slot0;
            entity = 8;
            entity = romeon[entity];
            oscard = result.bind(tangon)(entity);
            report = oscard.useStateFromStores;
            entity = _closure1_slot5;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot5;
                michal = zuuluu.getChannels;
                entity = _closure2_slot0;
                entity = entity.id;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity = report.bind(oscard)(michal, entity);
            var _closure2_slot2 = entity;
            entity = 9;
            entity = romeon[entity];
            michal = result.bind(tangon)(entity);
            entity = michal.useCanCreateOrAddGuildInDirectory;
            golfie = entity.bind(michal)(zuuluu);
            zuuluu = _closure1_slot7;
            michal = _closure1_slot4;
            entity = {};
            oscard = backup.container;
            report = new Array(2);
            report[0] = oscard;
            oscard = {};
            kiloes = 16;
            option = option + kiloes;
            oscard['paddingBottom'] = option;
            report[1] = oscard;
            entity['contentContainerStyle'] = report;
            verify = _closure1_slot6;
            oscard = _closure1_slot3;
            report = {};
            option = 10;
            option = romeon[option];
            option = foxtra.bind(tangon)(option);
            report['source'] = option;
            option = backup.header;
            report['style'] = option;
            oscard = verify.bind(tangon)(oscard, report);
            report = new Array(5);
            report[0] = oscard;
            oscard = 11;
            oscard = romeon[oscard];
            oscard = result.bind(tangon)(oscard);
            option = oscard.LegacyText;
            oscard = {};
            foxtra = backup.title;
            oscard['style'] = foxtra;
            foxtra = 'header';
            oscard['accessibilityRole'] = foxtra;
            foxtra = 12;
            sizing = romeon[foxtra];
            sizing = result.bind(tangon)(sizing);
            update = sizing.intl;
            echoed = update.format;
            sizing = romeon[foxtra];
            sizing = result.bind(tangon)(sizing);
            sizing = sizing.t;
            output = sizing.vyvrpK;
            sizing = {};
            source = source.name;
            sizing['guildName'] = source;
            sizing = echoed.bind(update)(output, sizing);
            oscard['children'] = sizing;
            oscard = verify.bind(tangon)(option, oscard);
            report[1] = oscard;
            oscard = 13;
            oscard = romeon[oscard];
            oscard = result.bind(tangon)(oscard);
            option = oscard.Text;
            oscard = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            sizing = backup.description;
            oscard['style'] = sizing;
            sizing = romeon[foxtra];
            sizing = result.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.string;
            romeon = romeon[foxtra];
            romeon = result.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.WypE0t;
            romeon = sizing.bind(output)(romeon);
            oscard['children'] = romeon;
            oscard = verify.bind(tangon)(option, oscard);
            report[2] = oscard;
            oscard = null;
            if(!golfie) { _fun00002_ip = 583; continue _fun00001 }
 456:
            verify = _closure1_slot6;
            output = _closure1_slot0;
            romeon = _closure1_slot2;
            golfie = 14;
            golfie = romeon[golfie];
            golfie = output.bind(tangon)(golfie);
            option = golfie.FormCTA;
            golfie = {};
            sizing = backup.ctaContainer;
            golfie['style'] = sizing;
            sizing = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 15;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.open;
                entity = {};
                report = _closure2_slot0;
                oscard = report.name;
                entity['directoryGuildName'] = oscard;
                report = report.id;
                entity['directoryGuildId'] = report;
                tangon = _closure2_slot1;
                tangon = tangon.id;
                entity['directoryChannelId'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            golfie['onPress'] = sizing;
            sizing = _closure1_slot1;
            kiloes = romeon[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            golfie['iconSource'] = kiloes;
            kiloes = romeon[foxtra];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            romeon = romeon[foxtra];
            romeon = output.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.hyK15u;
            romeon = kiloes.bind(sizing)(romeon);
            golfie['title'] = romeon;
            oscard = verify.bind(tangon)(option, golfie);
 583:
            report[3] = oscard;
            option = _closure1_slot6;
            romeon = _closure1_slot0;
            verify = _closure1_slot2;
            oscard = 14;
            oscard = verify[oscard];
            oscard = romeon.bind(tangon)(oscard);
            golfie = oscard.FormCTA;
            oscard = {};
            backup = backup.ctaContainer;
            oscard['style'] = backup;
            yankee = function() { // Original name: onPress
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 17;
                michal = michal[entity];
                entity = undefined;
                oscard = zuuluu.bind(entity)(michal);
                report = oscard.handleOpenInviteActionsheet;
                offset = _closure2_slot0;
                michal = _closure2_slot1;
                verify = michal.id;
                option = _closure2_slot2;
                golfie = 'Hub Empty State';
                yankee = oscard;
                entity = yankee[report](offset, verify, option, golfie, oscard);
                return entity;
            };
            oscard['onPress'] = yankee;
            yankee = _closure1_slot1;
            offset = 18;
            offset = verify[offset];
            offset = yankee.bind(tangon)(offset);
            oscard['iconSource'] = offset;
            offset = verify[foxtra];
            offset = romeon.bind(tangon)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = verify[foxtra];
            verify = romeon.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.L4bwJy;
            verify = offset.bind(yankee)(verify);
            oscard['title'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[4] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();