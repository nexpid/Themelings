// app/modules/directory_channels/native/components/GuildDirectoryEmpty.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Image;
    var _closure1_slot3 = golf;
    tango = tango.ScrollView;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    romeo = tango.Fonts;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'justifyContent': 'flex-end', 'padding': 16};
    offset = 6;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = foxtrot;
    tango['container'] = verify;
    verify = {'marginBottom': 16, 'alignSelf': 'center'};
    tango['header'] = verify;
    verify = {'fontFamily': null, 'color': null, 'fontSize': 24, 'textAlign': 'center', 'marginBottom': 8, 'alignSelf': 'center'};
    romeo = romeo.PRIMARY_BOLD;
    verify['fontFamily'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_PRIMARY;
    verify['color'] = offset;
    offset = 8;
    tango['title'] = verify;
    verify = {'textAlign': 'center', 'alignSelf': 'center', 'marginBottom': 24};
    tango['description'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tango['ctaContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 19;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/directory_channels/native/components/GuildDirectoryEmpty.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            source = entity.guild;
            var _closure2_slot0 = source;
            zulu = entity.channel;
            var _closure2_slot1 = zulu;
            entity = _closure1_slot8;
            tango = undefined;
            backup = entity.bind(tango)();
            foxtrot = _closure1_slot1;
            romeo = _closure1_slot2;
            entity = 7;
            entity = romeo[entity];
            entity = foxtrot.bind(tango)(entity);
            entity = entity.bind(tango)();
            options = entity.bottom;
            result = _closure1_slot0;
            entity = 8;
            entity = romeo[entity];
            oscar = result.bind(tango)(entity);
            report = oscar.useStateFromStores;
            entity = _closure1_slot5;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                zulu = _closure1_slot5;
                mike = zulu.getChannels;
                entity = _closure2_slot0;
                entity = entity.id;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            entity = report.bind(oscar)(mike, entity);
            var _closure2_slot2 = entity;
            entity = 9;
            entity = romeo[entity];
            mike = result.bind(tango)(entity);
            entity = mike.useCanCreateOrAddGuildInDirectory;
            golf = entity.bind(mike)(zulu);
            zulu = _closure1_slot7;
            mike = _closure1_slot4;
            entity = {};
            oscar = backup.container;
            report = new Array(2);
            report[0] = oscar;
            oscar = {};
            kilo = 16;
            options = options + kilo;
            oscar['paddingBottom'] = options;
            report[1] = oscar;
            entity['contentContainerStyle'] = report;
            verify = _closure1_slot6;
            oscar = _closure1_slot3;
            report = {};
            options = 10;
            options = romeo[options];
            options = foxtrot.bind(tango)(options);
            report['source'] = options;
            options = backup.header;
            report['style'] = options;
            oscar = verify.bind(tango)(oscar, report);
            report = new Array(5);
            report[0] = oscar;
            oscar = 11;
            oscar = romeo[oscar];
            oscar = result.bind(tango)(oscar);
            options = oscar.LegacyText;
            oscar = {};
            foxtrot = backup.title;
            oscar['style'] = foxtrot;
            foxtrot = 'header';
            oscar['accessibilityRole'] = foxtrot;
            foxtrot = 12;
            sizing = romeo[foxtrot];
            sizing = result.bind(tango)(sizing);
            update = sizing.intl;
            echo = update.format;
            sizing = romeo[foxtrot];
            sizing = result.bind(tango)(sizing);
            sizing = sizing.t;
            output = sizing.vyvrpK;
            sizing = {};
            source = source.name;
            sizing['guildName'] = source;
            sizing = echo.bind(update)(output, sizing);
            oscar['children'] = sizing;
            oscar = verify.bind(tango)(options, oscar);
            report[1] = oscar;
            oscar = 13;
            oscar = romeo[oscar];
            oscar = result.bind(tango)(oscar);
            options = oscar.Text;
            oscar = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            sizing = backup.description;
            oscar['style'] = sizing;
            sizing = romeo[foxtrot];
            sizing = result.bind(tango)(sizing);
            output = sizing.intl;
            sizing = output.string;
            romeo = romeo[foxtrot];
            romeo = result.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.WypE0t;
            romeo = sizing.bind(output)(romeo);
            oscar['children'] = romeo;
            oscar = verify.bind(tango)(options, oscar);
            report[2] = oscar;
            oscar = null;
            if(!golf) { _fun00002_ip = 577; continue _fun00001 }
 452:
            verify = _closure1_slot6;
            output = _closure1_slot0;
            romeo = _closure1_slot2;
            golf = 14;
            golf = romeo[golf];
            golf = output.bind(tango)(golf);
            options = golf.FormCTA;
            golf = {};
            sizing = backup.ctaContainer;
            golf['style'] = sizing;
            sizing = function() { // Original name: onPress
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 15;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.open;
                entity = {};
                report = _closure2_slot0;
                oscar = report.name;
                entity['directoryGuildName'] = oscar;
                report = report.id;
                entity['directoryGuildId'] = report;
                tango = _closure2_slot1;
                tango = tango.id;
                entity['directoryChannelId'] = tango;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            golf['onPress'] = sizing;
            sizing = _closure1_slot1;
            kilo = romeo[kilo];
            kilo = sizing.bind(tango)(kilo);
            golf['iconSource'] = kilo;
            kilo = romeo[foxtrot];
            kilo = output.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            romeo = romeo[foxtrot];
            romeo = output.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.hyK15u;
            romeo = kilo.bind(sizing)(romeo);
            golf['title'] = romeo;
            oscar = verify.bind(tango)(options, golf);
 577:
            report[3] = oscar;
            options = _closure1_slot6;
            romeo = _closure1_slot0;
            verify = _closure1_slot2;
            oscar = 14;
            oscar = verify[oscar];
            oscar = romeo.bind(tango)(oscar);
            golf = oscar.FormCTA;
            oscar = {};
            backup = backup.ctaContainer;
            oscar['style'] = backup;
            yankee = function() { // Original name: onPress
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 17;
                mike = mike[entity];
                entity = undefined;
                oscar = zulu.bind(entity)(mike);
                report = oscar.handleOpenInviteActionsheet;
                offset = _closure2_slot0;
                mike = _closure2_slot1;
                verify = mike.id;
                options = _closure2_slot2;
                golf = 'Hub Empty State';
                yankee = oscar;
                entity = yankee[report](offset, verify, options, golf, oscar);
                return entity;
            };
            oscar['onPress'] = yankee;
            yankee = _closure1_slot1;
            offset = 18;
            offset = verify[offset];
            offset = yankee.bind(tango)(offset);
            oscar['iconSource'] = offset;
            offset = verify[foxtrot];
            offset = romeo.bind(tango)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = verify[foxtrot];
            verify = romeo.bind(tango)(verify);
            verify = verify.t;
            verify = verify.L4bwJy;
            verify = offset.bind(yankee)(verify);
            oscar['title'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[4] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();