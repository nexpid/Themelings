// app/modules/directory_channels/native/components/GuildDirectoryCategorySelector.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    golf = argCorge;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = golf;
    var _closure1_slot3 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.DirectoryEntryCategories;
    var _closure1_slot7 = golf;
    tango = tango.getHubCategories;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    romeo = tango.Fonts;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot10 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 7;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = foxtrot;
    tango['categoriesListWrapper'] = verify;
    foxtrot = 16;
    verify = {'paddingVertical': 16, 'paddingRight': 24};
    tango['categoriesList'] = verify;
    verify = {};
    verify['fontSize'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.INTERACTIVE_NORMAL;
    verify['color'] = foxtrot;
    tango['categoryText'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.WHITE;
    verify['color'] = foxtrot;
    romeo = romeo.PRIMARY_SEMIBOLD;
    verify['fontFamily'] = romeo;
    tango['selectedCategoryText'] = verify;
    verify = {'paddingVertical': 2, 'paddingHorizontal': 8, 'marginLeft': 16, 'marginRight': 4294967288, 'borderRadius': null, 'borderBottomWidth': 0};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.xs;
    verify['borderRadius'] = romeo;
    tango['categoryTab'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_BRAND;
    verify['backgroundColor'] = offset;
    tango['categoryTabSelected'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/directory_channels/native/components/GuildDirectoryCategorySelector.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        entity = argFoo;
        mike = entity.channel;
        var _closure2_slot0 = mike;
        entity = entity.onCategorySelected;
        var _closure2_slot1 = entity;
        entity = _closure1_slot11;
        tango = undefined;
        yankee = entity.bind(tango)();
        var _closure2_slot2 = yankee;
        zulu = _closure1_slot0;
        romeo = _closure1_slot3;
        entity = 9;
        entity = romeo[entity];
        oscar = zulu.bind(tango)(entity);
        report = oscar.useStateFromStores;
        entity = _closure1_slot6;
        zulu = new Array(1);
        zulu[0] = entity;
        entity = function() {
            zulu = _closure1_slot6;
            mike = zulu.getCurrentCategoryId;
            entity = _closure2_slot0;
            entity = entity.id;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        entity = report.bind(oscar)(zulu, entity);
        var _closure2_slot3 = entity;
        report = _closure1_slot4;
        oscar = report.useMemo;
        mike = mike.id;
        zulu = new Array(1);
        zulu[0] = mike;
        mike = function() {
            entity = _closure2_slot0;
            tango = entity.id;
            report = {};
            entity = _closure1_slot7;
            entity = entity.ALL;
            report['value'] = entity;
            options = _closure1_slot0;
            verify = _closure1_slot3;
            entity = 8;
            oscar = verify[entity];
            zulu = undefined;
            oscar = options.bind(zulu)(oscar);
            golf = oscar.intl;
            oscar = golf.string;
            entity = verify[entity];
            entity = options.bind(zulu)(entity);
            entity = entity.t;
            entity = entity.hEAa2d;
            entity = oscar.bind(golf)(entity);
            report['label'] = entity;
            entity = 70;
            report['idealSize'] = entity;
            entity = new Array(1);
            entity[0] = report;
            mike = _closure1_slot8;
            yankee = mike.bind(zulu)(tango);
            offset = 1;
            romeo = entity;
            mike = arraySpread(romeo, yankee, offset);
            return entity;
        };
        backup = oscar.bind(report)(mike, zulu);
        var _closure2_slot4 = backup;
        zulu = report.useMemo;
        mike = new Array(2);
        mike[0] = backup;
        mike[1] = entity;
        entity = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zulu = _closure2_slot4;
                mike = zulu.findIndex;
                entity = function(argFoo) {
                    entity = argFoo;
                    mike = entity.value;
                    entity = _closure2_slot3;
                    entity = mike === entity;
                    return entity;
                };
                mike = mike.bind(zulu)(entity);
                zulu = -1;
                entity = 0;
                if(!(zulu !== mike)) { _fun00002_ip = 42; continue _fun00001 }
 39:
                entity = mike;
 42:
                return entity;
            }
        };
        offset = zulu.bind(report)(entity, mike);
        var _closure2_slot5 = offset;
        zulu = _closure1_slot9;
        mike = _closure1_slot10;
        entity = {};
        oscar = _closure1_slot5;
        report = {};
        options = yankee.categoriesListWrapper;
        report['style'] = options;
        options = _closure1_slot1;
        golf = 11;
        golf = romeo[golf];
        options = options.bind(tango)(golf);
        golf = {};
        romeo = yankee.categoriesList;
        golf['containerStyle'] = romeo;
        foxtrot = backup.map;
        romeo = function(argFoo, argBar) {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                report = argBar;
                entity = argFoo;
                options = entity.label;
                tango = _closure1_slot9;
                zulu = _closure1_slot5;
                mike = {'accessibilityRole': 'tab', 'accessible': true};
                mike['accessibilityLabel'] = options;
                oscar = {};
                golf = _closure2_slot5;
                romeo = report === golf;
                oscar['selected'] = romeo;
                mike['accessibilityState'] = oscar;
                golf = _closure1_slot0;
                oscar = _closure1_slot3;
                entity = 12;
                oscar = oscar[entity];
                entity = undefined;
                oscar = golf.bind(entity)(oscar);
                golf = oscar.LegacyText;
                oscar = {};
                verify = _closure2_slot2;
                offset = verify.categoryText;
                verify = new Array(2);
                verify[0] = offset;
                offset = null;
                if(!romeo) { _fun00004_ip = 122; continue _fun00003 }
 112:
                yankee = _closure2_slot2;
                offset = yankee.selectedCategoryText;
 122:
                verify[1] = offset;
                oscar['style'] = verify;
                oscar['children'] = options;
                oscar = tango.bind(entity)(golf, oscar);
                mike['children'] = oscar;
                entity = tango.bind(entity)(zulu, mike, report);
                return entity;
            }
        };
        romeo = foxtrot.bind(backup)(romeo);
        golf['tabs'] = romeo;
        romeo = yankee.categoryTab;
        golf['tabStyle'] = romeo;
        yankee = yankee.categoryTabSelected;
        golf['tabStyleSelected'] = yankee;
        golf['tabIndexSelected'] = offset;
        verify = function(argFoo) { // Original name: onSelect
            zulu = _closure2_slot4;
            entity = argFoo;
            entity = zulu[entity];
            oscar = entity.value;
            tango = _closure1_slot2;
            zulu = _closure1_slot3;
            entity = 10;
            zulu = zulu[entity];
            entity = undefined;
            report = tango.bind(entity)(zulu);
            tango = report.selectDirectoryCategory;
            zulu = _closure2_slot0;
            zulu = zulu.id;
            zulu = tango.bind(report)(zulu, oscar);
            mike = _closure2_slot1;
            mike = mike.bind(entity)();
            return entity;
        };
        golf['onSelect'] = verify;
        verify = true;
        golf['hideHorizontalScrollbar'] = verify;
        golf = zulu.bind(tango)(options, golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();