// app/modules/directory_channels/native/components/GuildDirectoryTemplates.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golfie;
    michal = function(argFoo) { // Original name: GuildTemplatesItem
        entity = argFoo;
        oscard = entity.guildTemplate;
        var _closure2_slot0 = oscard;
        entity = entity.onGuildTemplatePress;
        var _closure2_slot1 = entity;
        tangon = _closure1_slot9;
        michal = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 6;
        entity = verify[entity];
        zuuluu = undefined;
        michal = michal.bind(zuuluu)(entity);
        entity = {};
        option = _closure1_slot0;
        golfie = 7;
        golfie = verify[golfie];
        golfie = option.bind(zuuluu)(golfie);
        option = golfie.GUILD_TEMPLATE_ICONS;
        golfie = oscard.id;
        golfie = option[golfie];
        entity['icon'] = golfie;
        oscard = oscard.label;
        entity['message'] = oscard;
        report = function() { // Original name: onPress
            zuuluu = _closure2_slot1;
            michal = _closure2_slot0;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        entity['onPress'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    var _closure1_slot12 = michal;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    entity = 0;
    option = golfie[entity];
    report = argCor;
    entity = undefined;
    report = report.bind(entity)(option);
    var _closure1_slot3 = report;
    report = 1;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.View;
    var _closure1_slot4 = option;
    report = report.ScrollView;
    var _closure1_slot5 = report;
    report = 2;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.getHubGuildTemplatesMap;
    var _closure1_slot6 = option;
    report = report.HubGuildTemplateId;
    var _closure1_slot7 = report;
    report = 3;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.GuildDirectoryCreate;
    var _closure1_slot8 = report;
    report = 4;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.jsx;
    var _closure1_slot9 = option;
    report = report.jsxs;
    var _closure1_slot10 = report;
    report = 5;
    report = golfie[report];
    verify = oscard.bind(entity)(report);
    option = verify.createStyles;
    report = {};
    yankee = 16;
    offset = {'marginTop': 16, 'marginLeft': 16, 'marginBottom': 8};
    report['label'] = offset;
    romeon = 'center';
    offset = {'marginBottom': 8, 'textAlign': 'center'};
    report['title'] = offset;
    offset = {};
    offset['textAlign'] = romeon;
    report['description'] = offset;
    offset = {'alignItems': 'center', 'justifyContent': 'center', 'padding': 16};
    report['header'] = offset;
    offset = {};
    offset['marginHorizontal'] = yankee;
    report['templateGroup'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot11 = report;
    report = 15;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/directory_channels/native/components/GuildDirectoryTemplates.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: _default
        record = argFoo;
        var _closure2_slot0 = record;
        michal = _closure1_slot11;
        tangon = undefined;
        sizing = michal.bind(tangon)();
        report = _closure1_slot3;
        michal = report.useRef;
        michal = michal.bind(report)(record);
        var _closure2_slot1 = michal;
        foxtra = _closure1_slot0;
        backup = _closure1_slot2;
        michal = 8;
        michal = backup[michal];
        zuuluu = foxtra.bind(tangon)(michal);
        michal = zuuluu.useNavigation;
        oscard = michal.bind(zuuluu)();
        var _closure2_slot2 = oscard;
        michal = _closure1_slot6;
        update = michal.bind(tangon)();
        offset = _closure1_slot1;
        michal = 9;
        michal = backup[michal];
        michal = offset.bind(tangon)(michal);
        michal = michal.bind(tangon)();
        yankee = michal.bottom;
        zuuluu = report.useEffect;
        michal = function() {
            michal = _closure2_slot1;
            entity = _closure2_slot0;
            michal['current'] = entity;
            entity = undefined;
            return entity;
        };
        michal = zuuluu.bind(report)(michal);
        zuuluu = report.useCallback;
        michal = new Array(1);
        michal[0] = oscard;
        entity = function(argFoo) {
            tangon = _closure2_slot2;
            zuuluu = tangon.push;
            entity = _closure1_slot8;
            michal = entity.CREATE;
            entity = {};
            report = _closure2_slot1;
            report = report.current;
            report = report.onHubGuildInfoSet;
            entity['onHubGuildInfoSet'] = report;
            report = argFoo;
            entity['guildTemplate'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            entity = undefined;
            return entity;
        };
        result = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot9;
        entity = 10;
        entity = backup[entity];
        entity = foxtra.bind(tangon)(entity);
        michal = entity.GuildDirectoryAddModalScreen;
        entity = {};
        golfie = _closure1_slot10;
        oscard = _closure1_slot5;
        report = {};
        option = {};
        verify = 16;
        verify = yankee + verify;
        option['paddingBottom'] = verify;
        report['contentContainerStyle'] = option;
        yankee = _closure1_slot4;
        option = {};
        verify = sizing.header;
        option['style'] = verify;
        echoed = _closure1_slot9;
        romeon = 11;
        verify = backup[romeon];
        verify = foxtra.bind(tangon)(verify);
        output = verify.Text;
        verify = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        source = sizing.title;
        verify['style'] = source;
        ctrled = 12;
        source = backup[ctrled];
        source = foxtra.bind(tangon)(source);
        config = source.intl;
        sequen = config.format;
        source = backup[ctrled];
        source = foxtra.bind(tangon)(source);
        source = source.t;
        vacuum = source.T7aLYW;
        source = {};
        record = record.directoryGuildName;
        source['guildName'] = record;
        source = sequen.bind(config)(vacuum, source);
        verify['children'] = source;
        output = echoed.bind(tangon)(output, verify);
        verify = new Array(2);
        verify[0] = output;
        echoed = _closure1_slot9;
        romeon = backup[romeon];
        romeon = foxtra.bind(tangon)(romeon);
        output = romeon.Text;
        romeon = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        source = sizing.description;
        romeon['style'] = source;
        source = backup[ctrled];
        source = foxtra.bind(tangon)(source);
        sequen = source.intl;
        vacuum = sequen.string;
        source = backup[ctrled];
        source = foxtra.bind(tangon)(source);
        source = source.t;
        source = source.RA+St7;
        source = vacuum.bind(sequen)(source);
        romeon['children'] = source;
        romeon = echoed.bind(tangon)(output, romeon);
        verify[1] = romeon;
        option['children'] = verify;
        verify = golfie.bind(tangon)(yankee, option);
        option = new Array(4);
        option[0] = verify;
        source = _closure1_slot9;
        verify = {};
        romeon = sizing.templateGroup;
        verify['style'] = romeon;
        config = _closure1_slot9;
        romeon = 13;
        output = backup[romeon];
        output = foxtra.bind(tangon)(output);
        sequen = output.TableRowGroup;
        vacuum = {};
        cntext = _closure1_slot9;
        output = _closure1_slot12;
        record = {};
        papara = {};
        echoed = _closure1_slot7;
        target = echoed.CREATE;
        limora = update[target];
        whisks = papara;
        target = copyDataProperties(whisks, limora);
        target = backup[ctrled];
        target = foxtra.bind(tangon)(target);
        sierra = target.intl;
        status = sierra.string;
        target = backup[ctrled];
        target = foxtra.bind(tangon)(target);
        target = target.t;
        target = target.WqJbLi;
        status = status.bind(sierra)(target);
        target = 'label';
        papara[target] = status;
        record['guildTemplate'] = papara;
        record['onGuildTemplatePress'] = result;
        record = cntext.bind(tangon)(output, record);
        vacuum['children'] = record;
        vacuum = config.bind(tangon)(sequen, vacuum);
        verify['children'] = vacuum;
        verify = source.bind(tangon)(yankee, verify);
        option[1] = verify;
        source = _closure1_slot9;
        verify = 14;
        verify = backup[verify];
        offset = offset.bind(tangon)(verify);
        verify = {};
        vacuum = sizing.label;
        verify['style'] = vacuum;
        vacuum = backup[ctrled];
        vacuum = foxtra.bind(tangon)(vacuum);
        sequen = vacuum.intl;
        vacuum = sequen.string;
        ctrled = backup[ctrled];
        ctrled = foxtra.bind(tangon)(ctrled);
        ctrled = ctrled.t;
        ctrled = ctrled.JGDkfn;
        ctrled = vacuum.bind(sequen)(ctrled);
        verify['children'] = ctrled;
        verify = source.bind(tangon)(offset, verify);
        option[2] = verify;
        offset = _closure1_slot9;
        verify = {};
        sizing = sizing.templateGroup;
        verify['style'] = sizing;
        romeon = backup[romeon];
        romeon = foxtra.bind(tangon)(romeon);
        foxtra = romeon.TableRowGroup;
        romeon = {};
        sizing = _closure1_slot9;
        backup = {};
        source = echoed.HUB_STUDY;
        source = update[source];
        backup['guildTemplate'] = source;
        backup['onGuildTemplatePress'] = result;
        sizing = sizing.bind(tangon)(output, backup);
        backup = new Array(6);
        backup[0] = sizing;
        source = _closure1_slot9;
        sizing = {};
        ctrled = echoed.HUB_SCHOOL_CLUB;
        ctrled = update[ctrled];
        sizing['guildTemplate'] = ctrled;
        sizing['onGuildTemplatePress'] = result;
        sizing = source.bind(tangon)(output, sizing);
        backup[1] = sizing;
        source = _closure1_slot9;
        sizing = {};
        ctrled = echoed.HUB_CLASS;
        ctrled = update[ctrled];
        sizing['guildTemplate'] = ctrled;
        sizing['onGuildTemplatePress'] = result;
        sizing = source.bind(tangon)(output, sizing);
        backup[2] = sizing;
        source = _closure1_slot9;
        sizing = {};
        ctrled = echoed.HUB_SOCIAL;
        ctrled = update[ctrled];
        sizing['guildTemplate'] = ctrled;
        sizing['onGuildTemplatePress'] = result;
        sizing = source.bind(tangon)(output, sizing);
        backup[3] = sizing;
        source = _closure1_slot9;
        sizing = {};
        ctrled = echoed.HUB_MAJOR;
        ctrled = update[ctrled];
        sizing['guildTemplate'] = ctrled;
        sizing['onGuildTemplatePress'] = result;
        sizing = source.bind(tangon)(output, sizing);
        backup[4] = sizing;
        sizing = _closure1_slot9;
        kiloes = {};
        echoed = echoed.HUB_DORM;
        echoed = update[echoed];
        kiloes['guildTemplate'] = echoed;
        kiloes['onGuildTemplatePress'] = result;
        kiloes = sizing.bind(tangon)(output, kiloes);
        backup[5] = kiloes;
        romeon['children'] = backup;
        romeon = golfie.bind(tangon)(foxtra, romeon);
        verify['children'] = romeon;
        verify = offset.bind(tangon)(yankee, verify);
        option[3] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    zuuluu['GuildTemplatesItem'] = michal;
    return entity;
})();