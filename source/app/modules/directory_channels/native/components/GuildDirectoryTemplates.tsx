// app/modules/directory_channels/native/components/GuildDirectoryTemplates.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golf;
    mike = function(argFoo) { // Original name: GuildTemplatesItem
        entity = argFoo;
        oscar = entity.guildTemplate;
        var _closure2_slot0 = oscar;
        entity = entity.onGuildTemplatePress;
        var _closure2_slot1 = entity;
        tango = _closure1_slot9;
        mike = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 6;
        entity = verify[entity];
        zulu = undefined;
        mike = mike.bind(zulu)(entity);
        entity = {};
        options = _closure1_slot0;
        golf = 7;
        golf = verify[golf];
        golf = options.bind(zulu)(golf);
        options = golf.GUILD_TEMPLATE_ICONS;
        golf = oscar.id;
        golf = options[golf];
        entity['icon'] = golf;
        oscar = oscar.label;
        entity['message'] = oscar;
        report = function() { // Original name: onPress
            zulu = _closure2_slot1;
            mike = _closure2_slot0;
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            return entity;
        };
        entity['onPress'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    var _closure1_slot12 = mike;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, report);
    entity = 0;
    options = golf[entity];
    report = argCorge;
    entity = undefined;
    report = report.bind(entity)(options);
    var _closure1_slot3 = report;
    report = 1;
    report = golf[report];
    report = oscar.bind(entity)(report);
    options = report.View;
    var _closure1_slot4 = options;
    report = report.ScrollView;
    var _closure1_slot5 = report;
    report = 2;
    report = golf[report];
    report = oscar.bind(entity)(report);
    options = report.getHubGuildTemplatesMap;
    var _closure1_slot6 = options;
    report = report.HubGuildTemplateId;
    var _closure1_slot7 = report;
    report = 3;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.GuildDirectoryCreate;
    var _closure1_slot8 = report;
    report = 4;
    options = golf[report];
    options = oscar.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot9 = options;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot10 = report;
    report = 5;
    report = golf[report];
    verify = oscar.bind(entity)(report);
    options = verify.createStyles;
    report = {};
    offset = {'marginTop': 16, 'marginLeft': 16, 'marginBottom': 8};
    report['label'] = offset;
    yankee = 'center';
    offset = {'marginBottom': 8, 'textAlign': 'center'};
    report['title'] = offset;
    offset = {};
    offset['textAlign'] = yankee;
    report['description'] = offset;
    offset = {'alignItems': 'center', 'justifyContent': 'center', 'padding': 16};
    report['header'] = offset;
    report = options.bind(verify)(report);
    var _closure1_slot11 = report;
    report = 14;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/directory_channels/native/components/GuildDirectoryTemplates.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: _default
        record = argFoo;
        var _closure2_slot0 = record;
        mike = _closure1_slot11;
        tango = undefined;
        result = mike.bind(tango)();
        report = _closure1_slot3;
        mike = report.useRef;
        mike = mike.bind(report)(record);
        var _closure2_slot1 = mike;
        update = _closure1_slot0;
        source = _closure1_slot2;
        mike = 8;
        mike = source[mike];
        zulu = update.bind(tango)(mike);
        mike = zulu.useNavigation;
        oscar = mike.bind(zulu)();
        var _closure2_slot2 = oscar;
        mike = _closure1_slot6;
        backup = mike.bind(tango)();
        kilo = _closure1_slot1;
        mike = 9;
        mike = source[mike];
        mike = kilo.bind(tango)(mike);
        mike = mike.bind(tango)();
        yankee = mike.bottom;
        zulu = report.useEffect;
        mike = function() {
            mike = _closure2_slot1;
            entity = _closure2_slot0;
            mike['current'] = entity;
            entity = undefined;
            return entity;
        };
        mike = zulu.bind(report)(mike);
        zulu = report.useCallback;
        mike = new Array(1);
        mike[0] = oscar;
        entity = function(argFoo) {
            tango = _closure2_slot2;
            zulu = tango.push;
            entity = _closure1_slot8;
            mike = entity.CREATE;
            entity = {};
            report = _closure2_slot1;
            report = report.current;
            report = report.onHubGuildInfoSet;
            entity['onHubGuildInfoSet'] = report;
            report = argFoo;
            entity['guildTemplate'] = report;
            entity = zulu.bind(tango)(mike, entity);
            entity = undefined;
            return entity;
        };
        romeo = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot9;
        entity = 10;
        entity = source[entity];
        entity = update.bind(tango)(entity);
        mike = entity.GuildDirectoryAddModalScreen;
        entity = {};
        golf = _closure1_slot10;
        oscar = _closure1_slot5;
        report = {};
        options = {};
        offset = 16;
        offset = yankee + offset;
        options['paddingBottom'] = offset;
        report['contentContainerStyle'] = options;
        offset = _closure1_slot4;
        options = {};
        yankee = result.header;
        options['style'] = yankee;
        echo = _closure1_slot9;
        foxtrot = 11;
        yankee = source[foxtrot];
        yankee = update.bind(tango)(yankee);
        sizing = yankee.Text;
        yankee = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        output = result.title;
        yankee['style'] = output;
        output = 12;
        control = source[output];
        control = update.bind(tango)(control);
        config = control.intl;
        sequence = config.format;
        control = source[output];
        control = update.bind(tango)(control);
        control = control.t;
        vacuum = control.T7aLYW;
        control = {};
        record = record.directoryGuildName;
        control['guildName'] = record;
        control = sequence.bind(config)(vacuum, control);
        yankee['children'] = control;
        sizing = echo.bind(tango)(sizing, yankee);
        yankee = new Array(2);
        yankee[0] = sizing;
        echo = _closure1_slot9;
        foxtrot = source[foxtrot];
        foxtrot = update.bind(tango)(foxtrot);
        sizing = foxtrot.Text;
        foxtrot = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        control = result.description;
        foxtrot['style'] = control;
        control = source[output];
        control = update.bind(tango)(control);
        sequence = control.intl;
        vacuum = sequence.string;
        control = source[output];
        control = update.bind(tango)(control);
        control = control.t;
        control = control.RA+St7;
        control = vacuum.bind(sequence)(control);
        foxtrot['children'] = control;
        foxtrot = echo.bind(tango)(sizing, foxtrot);
        yankee[1] = foxtrot;
        options['children'] = yankee;
        offset = golf.bind(tango)(offset, options);
        options = new Array(9);
        options[0] = offset;
        sizing = _closure1_slot9;
        yankee = _closure1_slot12;
        offset = {};
        echo = {};
        foxtrot = _closure1_slot7;
        control = foxtrot.CREATE;
        context = backup[control];
        papa = echo;
        control = copyDataProperties(papa, context);
        control = source[output];
        control = update.bind(tango)(control);
        sequence = control.intl;
        vacuum = sequence.string;
        control = source[output];
        control = update.bind(tango)(control);
        control = control.t;
        control = control.WqJbLi;
        vacuum = vacuum.bind(sequence)(control);
        control = 'label';
        echo[control] = vacuum;
        offset['guildTemplate'] = echo;
        offset['onGuildTemplatePress'] = romeo;
        offset = sizing.bind(tango)(yankee, offset);
        options[1] = offset;
        sizing = _closure1_slot9;
        offset = 13;
        offset = source[offset];
        kilo = kilo.bind(tango)(offset);
        offset = {};
        result = result.label;
        offset['style'] = result;
        result = source[output];
        result = update.bind(tango)(result);
        echo = result.intl;
        result = echo.string;
        output = source[output];
        output = update.bind(tango)(output);
        output = output.t;
        output = output.JGDkfn;
        output = result.bind(echo)(output);
        offset['children'] = output;
        offset = sizing.bind(tango)(kilo, offset);
        options[2] = offset;
        kilo = _closure1_slot9;
        offset = {};
        sizing = foxtrot.HUB_STUDY;
        sizing = backup[sizing];
        offset['guildTemplate'] = sizing;
        offset['onGuildTemplatePress'] = romeo;
        offset = kilo.bind(tango)(yankee, offset);
        options[3] = offset;
        kilo = _closure1_slot9;
        offset = {};
        sizing = foxtrot.HUB_SCHOOL_CLUB;
        sizing = backup[sizing];
        offset['guildTemplate'] = sizing;
        offset['onGuildTemplatePress'] = romeo;
        offset = kilo.bind(tango)(yankee, offset);
        options[4] = offset;
        kilo = _closure1_slot9;
        offset = {};
        sizing = foxtrot.HUB_CLASS;
        sizing = backup[sizing];
        offset['guildTemplate'] = sizing;
        offset['onGuildTemplatePress'] = romeo;
        offset = kilo.bind(tango)(yankee, offset);
        options[5] = offset;
        kilo = _closure1_slot9;
        offset = {};
        sizing = foxtrot.HUB_SOCIAL;
        sizing = backup[sizing];
        offset['guildTemplate'] = sizing;
        offset['onGuildTemplatePress'] = romeo;
        offset = kilo.bind(tango)(yankee, offset);
        options[6] = offset;
        kilo = _closure1_slot9;
        offset = {};
        sizing = foxtrot.HUB_MAJOR;
        sizing = backup[sizing];
        offset['guildTemplate'] = sizing;
        offset['onGuildTemplatePress'] = romeo;
        offset = kilo.bind(tango)(yankee, offset);
        options[7] = offset;
        offset = _closure1_slot9;
        verify = {};
        foxtrot = foxtrot.HUB_DORM;
        foxtrot = backup[foxtrot];
        verify['guildTemplate'] = foxtrot;
        verify['onGuildTemplatePress'] = romeo;
        verify = offset.bind(tango)(yankee, verify);
        options[8] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = tango;
    zulu['GuildTemplatesItem'] = mike;
    return entity;
})();