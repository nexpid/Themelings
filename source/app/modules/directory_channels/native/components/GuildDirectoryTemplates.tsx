// app/modules/directory_channels/native/components/GuildDirectoryTemplates.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golfie;
    michal = function(argFoo) { // Original name: GuildTemplatesItem
        entity = argFoo;
        oscard = entity.guildTemplate;
        var _closure2_slot0 = oscard;
        entity = entity.onGuildTemplatePress;
        var _closure2_slot1 = entity;
        tangon = _closure1_slot9;
        michal = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 6;
        entity = verify[entity];
        zuuluu = undefined;
        michal = michal.bind(zuuluu)(entity);
        entity = {};
        option = _closure1_slot0;
        golfie = 7;
        golfie = verify[golfie];
        golfie = option.bind(zuuluu)(golfie);
        option = golfie.GUILD_TEMPLATE_ICONS;
        golfie = oscard.id;
        golfie = option[golfie];
        entity['icon'] = golfie;
        oscard = oscard.label;
        entity['message'] = oscard;
        report = function() { // Original name: onPress
            zuuluu = _closure2_slot1;
            michal = _closure2_slot0;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        entity['onPress'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    var _closure1_slot12 = michal;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    entity = 0;
    option = golfie[entity];
    report = argCor;
    entity = undefined;
    report = report.bind(entity)(option);
    var _closure1_slot3 = report;
    report = 1;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.View;
    var _closure1_slot4 = option;
    report = report.ScrollView;
    var _closure1_slot5 = report;
    report = 2;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.getHubGuildTemplatesMap;
    var _closure1_slot6 = option;
    report = report.HubGuildTemplateId;
    var _closure1_slot7 = report;
    report = 3;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.GuildDirectoryCreate;
    var _closure1_slot8 = report;
    report = 4;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.jsx;
    var _closure1_slot9 = option;
    report = report.jsxs;
    var _closure1_slot10 = report;
    report = 5;
    report = golfie[report];
    verify = oscard.bind(entity)(report);
    option = verify.createStyles;
    report = {};
    offset = {'marginTop': 16, 'marginLeft': 16, 'marginBottom': 8};
    report['label'] = offset;
    yankee = 'center';
    offset = {'marginBottom': 8, 'textAlign': 'center'};
    report['title'] = offset;
    offset = {};
    offset['textAlign'] = yankee;
    report['description'] = offset;
    offset = {'alignItems': 'center', 'justifyContent': 'center', 'padding': 16};
    report['header'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot11 = report;
    report = 14;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/directory_channels/native/components/GuildDirectoryTemplates.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: _default
        record = argFoo;
        var _closure2_slot0 = record;
        michal = _closure1_slot11;
        tangon = undefined;
        result = michal.bind(tangon)();
        report = _closure1_slot3;
        michal = report.useRef;
        michal = michal.bind(report)(record);
        var _closure2_slot1 = michal;
        update = _closure1_slot0;
        source = _closure1_slot2;
        michal = 8;
        michal = source[michal];
        zuuluu = update.bind(tangon)(michal);
        michal = zuuluu.useNavigation;
        oscard = michal.bind(zuuluu)();
        var _closure2_slot2 = oscard;
        michal = _closure1_slot6;
        backup = michal.bind(tangon)();
        kiloes = _closure1_slot1;
        michal = 9;
        michal = source[michal];
        michal = kiloes.bind(tangon)(michal);
        michal = michal.bind(tangon)();
        yankee = michal.bottom;
        zuuluu = report.useEffect;
        michal = function() {
            michal = _closure2_slot1;
            entity = _closure2_slot0;
            michal['current'] = entity;
            entity = undefined;
            return entity;
        };
        michal = zuuluu.bind(report)(michal);
        zuuluu = report.useCallback;
        michal = new Array(1);
        michal[0] = oscard;
        entity = function(argFoo) {
            tangon = _closure2_slot2;
            zuuluu = tangon.push;
            entity = _closure1_slot8;
            michal = entity.CREATE;
            entity = {};
            report = _closure2_slot1;
            report = report.current;
            report = report.onHubGuildInfoSet;
            entity['onHubGuildInfoSet'] = report;
            report = argFoo;
            entity['guildTemplate'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            entity = undefined;
            return entity;
        };
        romeon = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot9;
        entity = 10;
        entity = source[entity];
        entity = update.bind(tangon)(entity);
        michal = entity.GuildDirectoryAddModalScreen;
        entity = {};
        golfie = _closure1_slot10;
        oscard = _closure1_slot5;
        report = {};
        option = {};
        offset = 16;
        offset = yankee + offset;
        option['paddingBottom'] = offset;
        report['contentContainerStyle'] = option;
        offset = _closure1_slot4;
        option = {};
        yankee = result.header;
        option['style'] = yankee;
        echoed = _closure1_slot9;
        foxtra = 11;
        yankee = source[foxtra];
        yankee = update.bind(tangon)(yankee);
        sizing = yankee.Text;
        yankee = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        output = result.title;
        yankee['style'] = output;
        output = 12;
        ctrled = source[output];
        ctrled = update.bind(tangon)(ctrled);
        config = ctrled.intl;
        sequen = config.format;
        ctrled = source[output];
        ctrled = update.bind(tangon)(ctrled);
        ctrled = ctrled.t;
        vacuum = ctrled.T7aLYW;
        ctrled = {};
        record = record.directoryGuildName;
        ctrled['guildName'] = record;
        ctrled = sequen.bind(config)(vacuum, ctrled);
        yankee['children'] = ctrled;
        sizing = echoed.bind(tangon)(sizing, yankee);
        yankee = new Array(2);
        yankee[0] = sizing;
        echoed = _closure1_slot9;
        foxtra = source[foxtra];
        foxtra = update.bind(tangon)(foxtra);
        sizing = foxtra.Text;
        foxtra = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        ctrled = result.description;
        foxtra['style'] = ctrled;
        ctrled = source[output];
        ctrled = update.bind(tangon)(ctrled);
        sequen = ctrled.intl;
        vacuum = sequen.string;
        ctrled = source[output];
        ctrled = update.bind(tangon)(ctrled);
        ctrled = ctrled.t;
        ctrled = ctrled.RA+St7;
        ctrled = vacuum.bind(sequen)(ctrled);
        foxtra['children'] = ctrled;
        foxtra = echoed.bind(tangon)(sizing, foxtra);
        yankee[1] = foxtra;
        option['children'] = yankee;
        offset = golfie.bind(tangon)(offset, option);
        option = new Array(9);
        option[0] = offset;
        sizing = _closure1_slot9;
        yankee = _closure1_slot12;
        offset = {};
        echoed = {};
        foxtra = _closure1_slot7;
        ctrled = foxtra.CREATE;
        cntext = backup[ctrled];
        papara = echoed;
        ctrled = copyDataProperties(papara, cntext);
        ctrled = source[output];
        ctrled = update.bind(tangon)(ctrled);
        sequen = ctrled.intl;
        vacuum = sequen.string;
        ctrled = source[output];
        ctrled = update.bind(tangon)(ctrled);
        ctrled = ctrled.t;
        ctrled = ctrled.WqJbLi;
        vacuum = vacuum.bind(sequen)(ctrled);
        ctrled = 'label';
        echoed[ctrled] = vacuum;
        offset['guildTemplate'] = echoed;
        offset['onGuildTemplatePress'] = romeon;
        offset = sizing.bind(tangon)(yankee, offset);
        option[1] = offset;
        sizing = _closure1_slot9;
        offset = 13;
        offset = source[offset];
        kiloes = kiloes.bind(tangon)(offset);
        offset = {};
        result = result.label;
        offset['style'] = result;
        result = source[output];
        result = update.bind(tangon)(result);
        echoed = result.intl;
        result = echoed.string;
        output = source[output];
        output = update.bind(tangon)(output);
        output = output.t;
        output = output.JGDkfn;
        output = result.bind(echoed)(output);
        offset['children'] = output;
        offset = sizing.bind(tangon)(kiloes, offset);
        option[2] = offset;
        kiloes = _closure1_slot9;
        offset = {};
        sizing = foxtra.HUB_STUDY;
        sizing = backup[sizing];
        offset['guildTemplate'] = sizing;
        offset['onGuildTemplatePress'] = romeon;
        offset = kiloes.bind(tangon)(yankee, offset);
        option[3] = offset;
        kiloes = _closure1_slot9;
        offset = {};
        sizing = foxtra.HUB_SCHOOL_CLUB;
        sizing = backup[sizing];
        offset['guildTemplate'] = sizing;
        offset['onGuildTemplatePress'] = romeon;
        offset = kiloes.bind(tangon)(yankee, offset);
        option[4] = offset;
        kiloes = _closure1_slot9;
        offset = {};
        sizing = foxtra.HUB_CLASS;
        sizing = backup[sizing];
        offset['guildTemplate'] = sizing;
        offset['onGuildTemplatePress'] = romeon;
        offset = kiloes.bind(tangon)(yankee, offset);
        option[5] = offset;
        kiloes = _closure1_slot9;
        offset = {};
        sizing = foxtra.HUB_SOCIAL;
        sizing = backup[sizing];
        offset['guildTemplate'] = sizing;
        offset['onGuildTemplatePress'] = romeon;
        offset = kiloes.bind(tangon)(yankee, offset);
        option[6] = offset;
        kiloes = _closure1_slot9;
        offset = {};
        sizing = foxtra.HUB_MAJOR;
        sizing = backup[sizing];
        offset['guildTemplate'] = sizing;
        offset['onGuildTemplatePress'] = romeon;
        offset = kiloes.bind(tangon)(yankee, offset);
        option[7] = offset;
        offset = _closure1_slot9;
        verify = {};
        foxtra = foxtra.HUB_DORM;
        foxtra = backup[foxtra];
        verify['guildTemplate'] = foxtra;
        verify['onGuildTemplatePress'] = romeon;
        verify = offset.bind(tangon)(yankee, verify);
        option[8] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    zuuluu['GuildTemplatesItem'] = michal;
    return entity;
})();