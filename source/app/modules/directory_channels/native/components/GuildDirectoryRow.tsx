// app/modules/directory_channels/native/components/GuildDirectoryRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    backup = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    romeon = 0;
    tangon = oscard[romeon];
    entity = undefined;
    tangon = backup.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    yankee = 1;
    tangon = oscard[yankee];
    tangon = backup.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    tangon = argCor;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot5 = golfie;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = backup.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = backup.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = backup.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.JoinGuildSources;
    var _closure1_slot10 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot11 = option;
    option = tangon.Fragment;
    var _closure1_slot12 = option;
    tangon = tangon.jsxs;
    var _closure1_slot13 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    kiloes = 16;
    offset = {'flexDirection': 'row', 'padding': 16};
    tangon['container'] = offset;
    offset = {};
    foxtra = 'column';
    offset['flexDirection'] = foxtra;
    tangon['guildInfoContainer'] = offset;
    offset = {};
    foxtra = 10;
    sizing = oscard[foxtra];
    sizing = backup.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.sm;
    offset['borderRadius'] = sizing;
    offset['marginRight'] = kiloes;
    tangon['guildIcon'] = offset;
    offset = {};
    offset['flex'] = yankee;
    tangon['guildWrapper'] = offset;
    offset = {'flexDirection': 'row', 'alignItems': 'center', 'flex': 1};
    tangon['guildCountsWrapper'] = offset;
    offset = {};
    kiloes = 'visible';
    offset['overflow'] = kiloes;
    tangon['guildBadgeIcon'] = offset;
    offset = {};
    offset['flex'] = yankee;
    tangon['guildName'] = offset;
    offset = {'flexShrink': 1, 'marginBottom': 8};
    tangon['guildDescription'] = offset;
    offset = {'flexDirection': 'row', 'alignItems': 'center', 'marginBottom': 8};
    tangon['memberInfo'] = offset;
    offset = {'width': 8, 'height': 8, 'borderRadius': null, 'marginRight': 4};
    kiloes = oscard[foxtra];
    kiloes = backup.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.sm;
    offset['borderRadius'] = kiloes;
    kiloes = oscard[foxtra];
    kiloes = backup.bind(entity)(kiloes);
    kiloes = kiloes.unsafe_rawColors;
    kiloes = kiloes.GREEN_360;
    offset['backgroundColor'] = kiloes;
    tangon['dotOnline'] = offset;
    offset = {'width': 8, 'height': 8, 'borderRadius': null, 'marginRight': 4, 'marginLeft': 16};
    kiloes = oscard[foxtra];
    kiloes = backup.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.sm;
    offset['borderRadius'] = kiloes;
    kiloes = oscard[foxtra];
    kiloes = backup.bind(entity)(kiloes);
    kiloes = kiloes.unsafe_rawColors;
    kiloes = kiloes.PRIMARY_400;
    offset['backgroundColor'] = kiloes;
    tangon['dotOffline'] = offset;
    offset = {};
    foxtra = oscard[foxtra];
    foxtra = backup.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_ACCENT;
    offset['backgroundColor'] = foxtra;
    tangon['grey'] = offset;
    offset = {'flexDirection': 'row', 'marginBottom': 4};
    tangon['titleContainer'] = offset;
    offset = {};
    offset['flexGrow'] = romeon;
    tangon['cta'] = offset;
    offset = {};
    offset['flex'] = yankee;
    tangon['flex'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot14 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            vacuum = entity.entry;
            var _closure2_slot0 = vacuum;
            entity = _closure1_slot14;
            tangon = undefined;
            output = entity.bind(tangon)();
            config = vacuum.name;
            echoed = vacuum.description;
            variable37 = vacuum.approximateMemberCount;
            variable36 = vacuum.approximatePresenceCount;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 11;
            entity = zuuluu[entity];
            golfie = michal.bind(tangon)(entity);
            oscard = golfie.useStateFromStores;
            entity = _closure1_slot9;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot9;
                michal = zuuluu.getGuild;
                entity = _closure2_slot0;
                entity = entity.guildId;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity = oscard.bind(golfie)(michal, entity);
            verify = null;
            result = verify != entity;
            var _closure2_slot1 = result;
            michal = _closure1_slot5;
            entity = michal.useState;
            kiloes = false;
            oscard = entity.bind(michal)(kiloes);
            michal = _closure1_slot4;
            entity = 2;
            michal = michal.bind(tangon)(oscard, entity);
            entity = 0;
            sizing = michal[entity];
            entity = 1;
            entity = michal[entity];
            var _closure2_slot2 = entity;
            entity = function() {
                tangon = _closure1_slot3;
                zuuluu = undefined;
                michal = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(michal) { _fun00004_ip = 345; continue _fun00003 }
 10:
                            report = undefined;
                            oscard = undefined;
                            tangon = _closure2_slot2;
                            michal = true;
                            michal = tangon.bind(report)(michal);
 28: // try_start_0
                            tangon = _closure2_slot1;
                            if(tangon) { _fun00004_ip = 274; continue _fun00003 }
 41:
                            golfie = _closure1_slot1;
                            option = _closure1_slot2;
                            tangon = 13;
                            tangon = option[tangon];
                            verify = golfie.bind(report)(tangon);
                            option = verify.joinGuild;
                            tangon = _closure2_slot0;
                            golfie = tangon.guildId;
                            tangon = {};
                            offset = _closure1_slot10;
                            offset = offset.DIRECTORY_ENTRY;
                            tangon['source'] = offset;
                            tangon = option.bind(verify)(golfie, tangon);
                            SaveGenerator(address=102);
 100:
                            return tangon;
 102:
                            ResumeGenerator(result_out_reg=3, return_bool_out_reg=6);
                            if(golfie) { _fun00004_ip = 260; continue _fun00003 }
 111:
                            verify = _closure1_slot8;
                            option = verify.getChannel;
                            golfie = _closure2_slot0;
                            golfie = golfie.channelId;
                            golfie = option.bind(verify)(golfie);
                            oscard = golfie;
                            offset = null;
                            if(!(offset != golfie)) { _fun00004_ip = 246; continue _fun00003 }
 143:
                            option = _closure1_slot0;
                            verify = _closure1_slot2;
                            golfie = 14;
                            golfie = verify[golfie];
                            verify = option.bind(report)(golfie);
                            option = verify.setHubProgressActionComplete;
                            golfie = oscard;
                            offset = offset == golfie;
                            golfie = undefined;
                            if(offset) { _fun00004_ip = 194; continue _fun00003 }
 181:
                            offset = oscard;
                            oscard = offset.getGuildId;
                            golfie = oscard.bind(offset)();
 194:
                            offset = _closure1_slot0;
                            yankee = _closure1_slot2;
                            oscard = 15;
                            oscard = yankee[oscard];
                            oscard = offset.bind(report)(oscard);
                            oscard = oscard.HubProgressStep;
                            oscard = oscard.JOIN_GUILD;
                            oscard = option.bind(verify)(golfie, oscard);
 232: // try_end0
                            golfie = _closure2_slot2;
                            oscard = false;
                            oscard = golfie.bind(report)(oscard);
                            return report;
 246:
                            golfie = _closure2_slot2;
                            oscard = false;
                            oscard = golfie.bind(report)(oscard);
                            return report;
 260:
                            golfie = _closure2_slot2;
                            oscard = false;
                            oscard = golfie.bind(report)(oscard);
                            return tangon;
 274: // try_start_1
                            tangon = _closure1_slot0;
                            oscard = _closure1_slot2;
                            michal = 12;
                            michal = oscard[michal];
                            oscard = tangon.bind(report)(michal);
                            tangon = oscard.transitionToGuild;
                            michal = _closure2_slot0;
                            michal = michal.guildId;
                            michal = tangon.bind(oscard)(michal);
 314: // try_end1
                            oscard = _closure2_slot2;
                            tangon = false;
                            tangon = oscard.bind(report)(tangon);
                            michal = undefined;
                            return michal;
 330: // catch_target0 // catch_target1
                            CatchBlockStart(arg_register=1);
                            tangon = _closure2_slot2;
                            zuuluu = false;
                            zuuluu = tangon.bind(report)(zuuluu);
                            throw michal;
 345:
                            return entity;
                        }
                    };
                    return entity;
                };
                michal = tangon.bind(zuuluu)(michal);
                var _closure3_slot0 = michal;
                entity = function() {
                    entity = undefined;
                    tangon = _closure3_slot0;
                    zuuluu = tangon.apply;
                    entity = arguments;
                    michal = entity;
                    entity = this;
                    entity = zuuluu.bind(tangon)(entity, michal);
                    return entity;
                };
                return entity;
            };
            backup = entity.bind(tangon)();
            michal = _closure1_slot1;
            entity = 16;
            entity = zuuluu[entity];
            zuuluu = michal.bind(tangon)(entity);
            michal = zuuluu.getGuildIconURL;
            entity = {};
            oscard = vacuum.guildId;
            entity['id'] = oscard;
            oscard = vacuum.icon;
            entity['icon'] = oscard;
            oscard = 40;
            entity['size'] = oscard;
            entity = michal.bind(zuuluu)(entity);
            michal = verify != entity;
            update = undefined;
            if(!michal) { _fun00002_ip = 229; continue _fun00001 }
 226:
            update = entity;
 229:
            oscard = _closure1_slot0;
            entity = _closure1_slot2;
            variable38 = 17;
            michal = entity[variable38];
            michal = oscard.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = entity[variable38];
            entity = oscard.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.VJlc0d;
            romeon = michal.bind(zuuluu)(entity);
            if(!result) { _fun00002_ip = 341; continue _fun00001 }
 287:
            oscard = _closure1_slot0;
            entity = _closure1_slot2;
            michal = entity[variable38];
            michal = oscard.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = entity[variable38];
            entity = oscard.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.cqWE2d;
            romeon = michal.bind(zuuluu)(entity);
 341:
            zuuluu = _closure1_slot11;
            yankee = _closure1_slot1;
            source = _closure1_slot2;
            entity = 18;
            entity = source[entity];
            michal = yankee.bind(tangon)(entity);
            entity = {};
            report = function() { // Original name: onLongPress
                report = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 19;
                tangon = michal[entity];
                entity = undefined;
                oscard = report.bind(entity)(tangon);
                report = oscard.openLazy;
                tangon = _closure1_slot0;
                zuuluu = 21;
                zuuluu = michal[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = 20;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                tangon = tangon.bind(entity)(zuuluu, michal);
                zuuluu = {};
                michal = _closure2_slot0;
                zuuluu['entry'] = michal;
                michal = 'GuildDirectoryMoreActionSheet';
                michal = report.bind(oscard)(tangon, michal, zuuluu);
                return entity;
            };
            entity['onLongPress'] = report;
            report = output.container;
            entity['style'] = report;
            golfie = _closure1_slot13;
            oscard = _closure1_slot6;
            report = {};
            option = output.guildWrapper;
            report['style'] = option;
            option = {};
            offset = output.titleContainer;
            option['style'] = offset;
            offset = 22;
            offset = source[offset];
            yankee = yankee.bind(tangon)(offset);
            offset = {};
            source = output.guildIcon;
            offset['style'] = source;
            offset['icon'] = update;
            source = verify == update;
            update = undefined;
            if(!source) { _fun00002_ip = 482; continue _fun00001 }
 455:
            source = _closure1_slot7;
            ctrled = source.prototype;
            ctrled = Object.create(ctrled, {constructor: {value: source}});
            variable41 = ctrled;
            variable40 = vacuum;
            source = new variable41[source](variable40, variable39);
            update = source instanceof Object ? source : ctrled;
 482:
            offset['guild'] = update;
            offset['selected'] = kiloes;
            yankee = zuuluu.bind(tangon)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            source = _closure1_slot13;
            kiloes = _closure1_slot6;
            yankee = {};
            update = output.guildInfoContainer;
            yankee['style'] = update;
            sequen = _closure1_slot11;
            vacuum = _closure1_slot0;
            ctrled = _closure1_slot2;
            update = 23;
            ctrled = ctrled[update];
            ctrled = vacuum.bind(tangon)(ctrled);
            vacuum = ctrled.Text;
            ctrled = {'style': null, 'variant': 'text-md/semibold', 'color': 'header-primary'};
            record = output.guildName;
            ctrled['style'] = record;
            ctrled['children'] = config;
            vacuum = sequen.bind(tangon)(vacuum, ctrled);
            ctrled = new Array(2);
            ctrled[0] = vacuum;
            vacuum = {};
            sequen = output.memberInfo;
            vacuum['style'] = sequen;
            sequen = verify != variable36;
            config = null;
            if(!sequen) { _fun00002_ip = 778; continue _fun00001 }
 622:
            cntext = _closure1_slot13;
            record = _closure1_slot12;
            sequen = {};
            sierra = _closure1_slot11;
            target = _closure1_slot6;
            papara = {};
            status = output.dotOnline;
            papara['style'] = status;
            target = sierra.bind(tangon)(target, papara);
            papara = new Array(2);
            papara[0] = target;
            whisks = _closure1_slot0;
            limora = _closure1_slot2;
            target = limora[update];
            target = whisks.bind(tangon)(target);
            status = target.Text;
            target = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            equals = limora[variable38];
            equals = whisks.bind(tangon)(equals);
            quebec = equals.intl;
            equals = quebec.format;
            limora = limora[variable38];
            limora = whisks.bind(tangon)(limora);
            limora = limora.t;
            whisks = limora.LC+S+v;
            limora = {};
            limora['membersOnline'] = variable36;
            limora = equals.bind(quebec)(whisks, limora);
            target['children'] = limora;
            target = sierra.bind(tangon)(status, target);
            papara[1] = target;
            sequen['children'] = papara;
            config = cntext.bind(tangon)(record, sequen);
 778:
            sequen = new Array(2);
            sequen[0] = config;
            record = verify != variable37;
            config = null;
            if(!record) { _fun00002_ip = 953; continue _fun00001 }
 798:
            papara = _closure1_slot13;
            cntext = _closure1_slot12;
            record = {};
            limora = _closure1_slot11;
            status = _closure1_slot6;
            target = {};
            sierra = output.dotOffline;
            target['style'] = sierra;
            status = limora.bind(tangon)(status, target);
            target = new Array(2);
            target[0] = status;
            equals = _closure1_slot0;
            whisks = _closure1_slot2;
            status = whisks[update];
            status = equals.bind(tangon)(status);
            sierra = status.Text;
            status = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            quebec = whisks[variable38];
            quebec = equals.bind(tangon)(quebec);
            variable36 = quebec.intl;
            quebec = variable36.format;
            whisks = whisks[variable38];
            whisks = equals.bind(tangon)(whisks);
            whisks = whisks.t;
            equals = whisks.zRl6XV;
            whisks = {};
            whisks['count'] = variable37;
            whisks = quebec.bind(variable36)(equals, whisks);
            status['children'] = whisks;
            status = limora.bind(tangon)(sierra, status);
            target[1] = status;
            record['children'] = target;
            config = papara.bind(tangon)(cntext, record);
 953:
            sequen[1] = config;
            vacuum['children'] = sequen;
            vacuum = source.bind(tangon)(kiloes, vacuum);
            ctrled[1] = vacuum;
            yankee['children'] = ctrled;
            yankee = source.bind(tangon)(kiloes, yankee);
            offset[1] = yankee;
            option['children'] = offset;
            offset = golfie.bind(tangon)(oscard, option);
            option = new Array(4);
            option[0] = offset;
            verify = verify != echoed;
            if(!verify) { _fun00002_ip = 1018; continue _fun00001 }
 1010:
            offset = '';
            verify = offset !== echoed;
 1018:
            if(!verify) { _fun00002_ip = 1083; continue _fun00001 }
 1021:
            kiloes = _closure1_slot11;
            yankee = _closure1_slot0;
            offset = _closure1_slot2;
            offset = offset[update];
            offset = yankee.bind(tangon)(offset);
            yankee = offset.Text;
            offset = {'lineClamp': 3, 'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            update = output.guildDescription;
            offset['style'] = update;
            offset['children'] = echoed;
            verify = kiloes.bind(tangon)(yankee, offset);
 1083:
            option[1] = verify;
            yankee = _closure1_slot11;
            offset = _closure1_slot6;
            verify = {};
            kiloes = output.flex;
            verify['style'] = kiloes;
            verify = yankee.bind(tangon)(offset, verify);
            option[2] = verify;
            offset = _closure1_slot1;
            verify = _closure1_slot2;
            kiloes = 24;
            verify = verify[kiloes];
            offset = offset.bind(tangon)(verify);
            verify = {};
            verify['loading'] = sizing;
            verify['onPress'] = backup;
            sizing = output.cta;
            backup = new Array(2);
            backup[0] = sizing;
            sizing = undefined;
            if(!result) { _fun00002_ip = 1172; continue _fun00001 }
 1166:
            sizing = output.grey;
 1172:
            backup[1] = sizing;
            verify['style'] = backup;
            backup = _closure1_slot1;
            foxtra = _closure1_slot2;
            foxtra = foxtra[kiloes];
            foxtra = backup.bind(tangon)(foxtra);
            foxtra = foxtra.Colors;
            foxtra = foxtra.GREEN;
            verify['color'] = foxtra;
            verify['text'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[3] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 25;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/directory_channels/native/components/GuildDirectoryRow.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();