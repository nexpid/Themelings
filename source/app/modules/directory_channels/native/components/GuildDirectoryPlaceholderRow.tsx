// app/modules/directory_channels/native/components/GuildDirectoryPlaceholderRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    yankee = 1;
    tangon = oscard[yankee];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot3 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'flexDirection': 'row', 'padding': 16};
    tangon['row'] = offset;
    offset = {};
    offset['flex'] = yankee;
    tangon['rowInner'] = offset;
    offset = {'width': 40, 'height': 40, 'borderRadius': null, 'overflow': 'hidden', 'marginRight': 16};
    yankee = 4;
    romeon = oscard[yankee];
    yankee = argBaz;
    yankee = yankee.bind(entity)(romeon);
    yankee = yankee.radii;
    yankee = yankee.sm;
    offset['borderRadius'] = yankee;
    yankee = 5;
    romeon = oscard[yankee];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.DARK_PRIMARY_500_LIGHT_PRIMARY_230;
    offset['backgroundColor'] = romeon;
    tangon['placeholderAvatar'] = offset;
    offset = {'height': 15, 'borderRadius': 5};
    yankee = oscard[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.DARK_PRIMARY_500_LIGHT_PRIMARY_230;
    offset['backgroundColor'] = yankee;
    tangon['placeholderText'] = offset;
    offset = {'width': '100%', 'marginTop': 10};
    tangon['placeholderBody'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot5 = tangon;
    tangon = golfie.memo;
    michal = function() {
        entity = _closure1_slot5;
        tangon = undefined;
        romeon = entity.bind(tangon)();
        var _closure2_slot0 = romeon;
        verify = global;
        oscard = verify.Math;
        zuuluu = oscard.floor;
        michal = verify.Math;
        entity = michal.random;
        entity = entity.bind(michal)();
        michal = 2;
        entity = michal * entity;
        entity = zuuluu.bind(oscard)(entity);
        yankee = entity + michal;
        oscard = verify.Math;
        zuuluu = oscard.floor;
        michal = verify.Math;
        entity = michal.random;
        entity = entity.bind(michal)();
        michal = 10;
        entity = michal * entity;
        entity = zuuluu.bind(oscard)(entity);
        var _closure2_slot1 = entity;
        oscard = verify.Math;
        zuuluu = oscard.floor;
        golfie = verify.Math;
        entity = golfie.random;
        golfie = entity.bind(golfie)();
        entity = 50;
        entity = entity * golfie;
        entity = zuuluu.bind(oscard)(entity);
        output = entity + michal;
        zuuluu = _closure1_slot4;
        michal = _closure1_slot2;
        entity = {};
        oscard = romeon.row;
        entity['style'] = oscard;
        offset = _closure1_slot3;
        report = {};
        oscard = romeon.placeholderAvatar;
        report['style'] = oscard;
        oscard = offset.bind(tangon)(michal, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = {};
        golfie = romeon.rowInner;
        oscard['style'] = golfie;
        golfie = {};
        foxtra = romeon.placeholderText;
        romeon = new Array(2);
        romeon[0] = foxtra;
        foxtra = {};
        backup = verify.HermesInternal;
        sizing = backup.concat;
        kiloes = '';
        backup = '%';
        backup = sizing.bind(kiloes)(output, backup);
        foxtra['width'] = backup;
        romeon[1] = foxtra;
        golfie['style'] = romeon;
        offset = offset.bind(tangon)(michal, golfie);
        golfie = new Array(2);
        golfie[0] = offset;
        verify = verify.Array;
        offset = verify.prototype;
        offset = Object.create(offset, {constructor: {value: verify}});
        update = offset;
        echoed = yankee;
        verify = new update[verify](echoed, result);
        offset = verify instanceof Object ? verify : offset;
        verify = offset.fill;
        offset = verify.bind(offset)(tangon);
        verify = offset.map;
        option = function(argFoo, argBar) {
            report = argBar;
            tangon = _closure1_slot3;
            zuuluu = _closure1_slot2;
            michal = {};
            golfie = _closure2_slot0;
            verify = golfie.placeholderText;
            oscard = new Array(3);
            oscard[0] = verify;
            golfie = golfie.placeholderBody;
            oscard[1] = golfie;
            golfie = {};
            offset = _closure1_slot0;
            verify = _closure1_slot1;
            entity = 6;
            verify = verify[entity];
            entity = undefined;
            offset = offset.bind(entity)(verify);
            verify = offset.placeholderRowWidth;
            option = _closure2_slot1;
            option = option + report;
            yankee = verify.bind(offset)(option);
            option = global;
            option = option.HermesInternal;
            offset = option.concat;
            verify = '';
            option = '%';
            option = offset.bind(verify)(yankee, option);
            golfie['width'] = option;
            oscard[2] = golfie;
            michal['style'] = oscard;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        option = verify.bind(offset)(option);
        golfie[1] = option;
        oscard['children'] = golfie;
        oscard = zuuluu.bind(tangon)(michal, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/directory_channels/native/components/GuildDirectoryPlaceholderRow.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();