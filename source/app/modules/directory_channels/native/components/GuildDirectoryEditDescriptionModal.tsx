// app/modules/directory_channels/native/components/GuildDirectoryEditDescriptionModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    options = argBaz;
    golf = argCorge;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = options;
    var _closure1_slot2 = golf;
    var _closure1_slot3 = oscar;
    entity = function(argFoo) { // Original name: GuildDirectoryEditDescription
        mike = argFoo;
        romeo = mike.entry;
        var _closure2_slot0 = romeo;
        mike = _closure1_slot9;
        tango = undefined;
        foxtrot = mike.bind(tango)();
        entity = function() {
            tango = _closure1_slot4;
            zulu = undefined;
            mike = function* (argFoo, argBar) {
                entity = function* (argFoo, argBar) { // Original name: ?anon_0_
                    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                        if(mike) { _fun00002_ip = 114; continue _fun00001 }
 7:
                        report = _closure1_slot2;
                        zulu = _closure1_slot3;
                        mike = 6;
                        mike = zulu[mike];
                        zulu = undefined;
                        verify = report.bind(zulu)(mike);
                        options = verify.updateDirectoryEntry;
                        mike = _closure2_slot0;
                        foxtrot = mike.channelId;
                        romeo = mike.guildId;
                        yankee = argFoo;
                        offset = argBar;
                        backup = verify;
                        mike = backup[options](foxtrot, romeo, yankee, offset, verify);
                        SaveGenerator(address=72);
 70:
                        return mike;
 72:
                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                        if(report) { _fun00002_ip = 111; continue _fun00001 }
 78:
                        report = _closure1_slot1;
                        oscar = _closure1_slot3;
                        tango = 7;
                        tango = oscar[tango];
                        report = report.bind(zulu)(tango);
                        tango = report.close;
                        tango = tango.bind(report)();
                        return zulu;
 111:
                        return mike;
 114:
                        return entity;
                    }
                };
                return entity;
            };
            mike = tango.bind(zulu)(mike);
            var _closure3_slot0 = mike;
            entity = function() {
                entity = undefined;
                tango = _closure3_slot0;
                zulu = tango.apply;
                entity = arguments;
                mike = entity;
                entity = this;
                entity = zulu.bind(tango)(entity, mike);
                return entity;
            };
            return entity;
        };
        backup = entity.bind(tango)();
        zulu = _closure1_slot7;
        sizing = _closure1_slot0;
        output = _closure1_slot3;
        entity = 8;
        entity = output[entity];
        entity = sizing.bind(tango)(entity);
        mike = entity.SafeAreaPaddingView;
        entity = {};
        report = true;
        entity['top'] = report;
        report = foxtrot.safeArea;
        entity['style'] = report;
        golf = _closure1_slot8;
        oscar = _closure1_slot6;
        report = {};
        options = foxtrot.container;
        report['style'] = options;
        options = 'handled';
        report['keyboardShouldPersistTaps'] = options;
        yankee = _closure1_slot7;
        offset = _closure1_slot5;
        options = {};
        kilo = foxtrot.header;
        options['style'] = kilo;
        echo = _closure1_slot7;
        kilo = 9;
        kilo = output[kilo];
        kilo = sizing.bind(tango)(kilo);
        result = kilo.Text;
        kilo = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        foxtrot = foxtrot.title;
        kilo['style'] = foxtrot;
        foxtrot = 10;
        update = output[foxtrot];
        update = sizing.bind(tango)(update);
        vacuum = update.intl;
        control = vacuum.format;
        update = output[foxtrot];
        update = sizing.bind(tango)(update);
        update = update.t;
        source = update.w9tsNj;
        update = {};
        sequence = romeo.name;
        update['guildName'] = sequence;
        update = control.bind(vacuum)(source, update);
        kilo['children'] = update;
        kilo = echo.bind(tango)(result, kilo);
        options['children'] = kilo;
        offset = yankee.bind(tango)(offset, options);
        options = new Array(2);
        options[0] = offset;
        yankee = _closure1_slot7;
        offset = _closure1_slot1;
        verify = 11;
        verify = output[verify];
        offset = offset.bind(tango)(verify);
        verify = {};
        verify['onSubmit'] = backup;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = output[foxtrot];
        foxtrot = sizing.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.R3BPHx;
        foxtrot = backup.bind(kilo)(foxtrot);
        verify['buttonLabel'] = foxtrot;
        verify['entry'] = romeo;
        romeo = romeo.channelId;
        verify['directoryChannelId'] = romeo;
        verify = yankee.bind(tango)(offset, verify);
        options[1] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = function(argFoo) { // Original name: getScreens
        entity = argFoo;
        var _closure2_slot0 = entity;
        entity = {};
        zulu = _closure1_slot10;
        mike = {};
        oscar = true;
        mike['fullscreen'] = oscar;
        golf = _closure1_slot0;
        offset = _closure1_slot3;
        oscar = 12;
        oscar = offset[oscar];
        verify = undefined;
        golf = golf.bind(verify)(oscar);
        oscar = golf.getHeaderCloseButton;
        options = _closure1_slot1;
        report = 7;
        report = offset[report];
        report = options.bind(verify)(report);
        report = report.close;
        report = oscar.bind(golf)(report);
        mike['headerLeft'] = report;
        report = function() { // Original name: headerTitle
            entity = null;
            return entity;
        };
        mike['headerTitle'] = report;
        tango = function() { // Original name: render
            tango = _closure1_slot7;
            zulu = _closure1_slot11;
            mike = {};
            report = _closure2_slot0;
            oscar = mike;
            entity = copyDataProperties(oscar, report);
            entity = undefined;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        mike['render'] = tango;
        entity[zulu] = mike;
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = global;
    offset = entity.Object;
    verify = offset.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = verify.bind(offset)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = options.bind(entity)(tango);
    var _closure1_slot4 = tango;
    offset = 1;
    tango = oscar[offset];
    tango = golf.bind(entity)(tango);
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    tango = tango.ScrollView;
    var _closure1_slot6 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    yankee = 5;
    yankee = oscar[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.NAV_BAR_HEIGHT;
    verify['marginTop'] = yankee;
    verify['flex'] = offset;
    tango['safeArea'] = verify;
    verify = {};
    verify['flex'] = offset;
    tango['container'] = verify;
    offset = 8;
    verify = {'marginBottom': 8, 'textAlign': 'center'};
    tango['title'] = verify;
    verify = {'alignItems': 'center', 'justifyContent': 'center', 'padding': 16};
    tango['header'] = verify;
    verify = {};
    verify['marginLeft'] = offset;
    tango['closeIcon'] = verify;
    verify = {'backgroundColor': 'transparent', 'borderBottomWidth': 0};
    tango['navbar'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 'EDIT_DESCRIPTION';
    var _closure1_slot10 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/directory_channels/native/components/GuildDirectoryEditDescriptionModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildDirectoryEditDescriptionModal
        tango = _closure1_slot7;
        mike = _closure1_slot0;
        zulu = _closure1_slot3;
        entity = 13;
        entity = zulu[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.Navigator;
        entity = {};
        golf = _closure1_slot12;
        oscar = argFoo;
        oscar = golf.bind(zulu)(oscar);
        entity['screens'] = oscar;
        report = _closure1_slot10;
        entity['initialRouteName'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();