// app/modules/directory_channels/native/components/GuildDirectoryNicknameUpsellModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: GuildDirectoryNicknameUpsell
        _fun89468: for(var _fun89468_ip = 0; ; ) switch(_fun89468_ip) {
 0:
            entity = argFoo;
            mike = entity.guildId;
            var _closure2_slot0 = mike;
            entity = entity.handleClose;
            var _closure2_slot1 = entity;
            entity = _closure1_slot13;
            tango = undefined;
            foxtrot = entity.bind(tango)();
            mike = _closure1_slot0;
            report = _closure1_slot2;
            entity = 11;
            zulu = report[entity];
            options = mike.bind(tango)(zulu);
            golf = options.useStateFromStores;
            zulu = _closure1_slot8;
            oscar = new Array(1);
            oscar[0] = zulu;
            zulu = function() {
                zulu = _closure1_slot8;
                mike = zulu.getGuild;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            status = golf.bind(options)(oscar, zulu);
            oscar = _closure1_slot1;
            zulu = 12;
            zulu = report[zulu];
            zulu = oscar.bind(tango)(zulu);
            zulu = zulu.bind(tango)();
            offset = zulu.bottom;
            oscar = _closure1_slot5;
            zulu = oscar.useState;
            sizing = null;
            oscar = zulu.bind(oscar)(sizing);
            zulu = _closure1_slot4;
            verify = 2;
            zulu = zulu.bind(tango)(oscar, verify);
            golf = 0;
            echo = zulu[golf];
            oscar = 1;
            zulu = zulu[oscar];
            var _closure2_slot2 = zulu;
            yankee = _closure1_slot5;
            options = yankee.useState;
            zulu = '';
            options = options.bind(yankee)(zulu);
            zulu = _closure1_slot4;
            zulu = zulu.bind(tango)(options, verify);
            control = zulu[golf];
            var _closure2_slot3 = control;
            output = zulu[oscar];
            entity = report[entity];
            golf = mike.bind(tango)(entity);
            oscar = golf.useStateFromStores;
            entity = _closure1_slot9;
            zulu = new Array(1);
            zulu[0] = entity;
            entity = function() {
                entity = _closure1_slot9;
                entity = entity.keyboardOpen;
                return entity;
            };
            result = oscar.bind(golf)(zulu, entity);
            zulu = _closure1_slot5;
            entity = zulu.useRef;
            options = entity.bind(zulu)(sizing);
            var _closure2_slot4 = options;
            entity = function() {
                tango = _closure1_slot3;
                zulu = undefined;
                mike = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun89473: for(var _fun89473_ip = 0; ; ) switch(_fun89473_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(mike) { _fun89473_ip = 165; continue _fun89473 }
 10:
                            report = _closure2_slot2;
                            mike = undefined;
                            tango = null;
                            tango = report.bind(mike)(tango);
 26: // try_start_0
                            report = _closure1_slot0;
                            oscar = _closure1_slot2;
                            tango = 13;
                            tango = oscar[tango];
                            golf = report.bind(mike)(tango);
                            oscar = golf.updateGuildSelfMember;
                            report = _closure2_slot0;
                            tango = {};
                            options = _closure2_slot3;
                            tango['nick'] = options;
                            tango = oscar.bind(golf)(report, tango);
                            SaveGenerator(address=80);
 78:
                            return tango;
 80:
                            ResumeGenerator(result_out_reg=3, return_bool_out_reg=4);
                            if(report) { _fun89473_ip = 96; continue _fun89473 }
 86:
                            report = _closure2_slot1;
                            report = report.bind(mike)();
 94: // try_end0
                            _fun89473_ip = 162; continue _fun89473;
 96:
                            return tango;
 99: // catch_target0
                            CatchBlockStart(arg_register=5);
                            tango = _closure2_slot2;
                            report = _closure1_slot0;
                            golf = _closure1_slot2;
                            zulu = 14;
                            zulu = golf[zulu];
                            zulu = report.bind(mike)(zulu);
                            zulu = zulu.APIError;
                            report = zulu.prototype;
                            report = Object.create(report, {constructor: {value: zulu}});
                            yankee = report;
                            offset = oscar;
                            zulu = new yankee[zulu](offset, verify);
                            zulu = zulu instanceof Object ? zulu : report;
                            zulu = tango.bind(mike)(zulu);
 162:
                            return mike;
 165:
                            return entity;
                        }
                    };
                    return entity;
                };
                mike = tango.bind(zulu)(mike);
                var _closure3_slot0 = mike;
                entity = function() {
                    entity = undefined;
                    tango = _closure3_slot0;
                    zulu = tango.apply;
                    entity = arguments;
                    mike = entity;
                    entity = this;
                    entity = zulu.bind(tango)(entity, mike);
                    return entity;
                };
                return entity;
            };
            kilo = entity.bind(tango)();
            zulu = _closure1_slot11;
            entity = 15;
            entity = report[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.SafeAreaPaddingView;
            entity = {};
            report = true;
            entity['top'] = report;
            report = foxtrot.container;
            entity['style'] = report;
            golf = _closure1_slot12;
            oscar = _closure1_slot7;
            report = {};
            report['ref'] = options;
            options = 'handled';
            report['keyboardShouldPersistTaps'] = options;
            verify = foxtrot.scrollViewContainer;
            options = new Array(2);
            options[0] = verify;
            verify = {};
            update = _closure1_slot1;
            source = _closure1_slot2;
            yankee = 10;
            yankee = source[yankee];
            yankee = update.bind(tango)(yankee);
            yankee = yankee.spacing;
            yankee = yankee.PX_16;
            if(result) { _fun89468_ip = 384; continue _fun89468 }
 378:
            offset = offset + yankee;
            _fun89468_ip = 387; continue _fun89468;
 384:
            offset = yankee;
 387:
            verify['paddingBottom'] = offset;
            options[1] = verify;
            report['contentContainerStyle'] = options;
            offset = _closure1_slot11;
            verify = _closure1_slot1;
            config = _closure1_slot2;
            yankee = 16;
            options = config[yankee];
            verify = verify.bind(tango)(options);
            options = {};
            result = foxtrot.guildIcon;
            options['style'] = result;
            options['guild'] = status;
            record = _closure1_slot0;
            yankee = config[yankee];
            yankee = record.bind(tango)(yankee);
            yankee = yankee.GuildIconSizes;
            yankee = yankee.XLARGE;
            options['size'] = yankee;
            verify = offset.bind(tango)(verify, options);
            options = new Array(5);
            options[0] = verify;
            yankee = _closure1_slot12;
            offset = _closure1_slot6;
            verify = {};
            result = foxtrot.header;
            verify['style'] = result;
            vacuum = _closure1_slot11;
            sequence = 17;
            result = config[sequence];
            result = record.bind(tango)(result);
            source = result.Text;
            result = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            update = foxtrot.title;
            result['style'] = update;
            update = 18;
            context = config[update];
            context = record.bind(tango)(context);
            papa = context.intl;
            context = papa.format;
            config = config[update];
            config = record.bind(tango)(config);
            config = config.t;
            record = config.d+6kzs;
            config = {};
            sierra = sizing == status;
            target = undefined;
            if(sierra) { _fun89468_ip = 607; continue _fun89468 }
 602:
            target = status.name;
 607:
            config['guildName'] = target;
            config = context.bind(papa)(record, config);
            result['children'] = config;
            result = vacuum.bind(tango)(source, result);
            vacuum = new Array(2);
            vacuum[0] = result;
            record = _closure1_slot11;
            result = _closure1_slot0;
            source = _closure1_slot2;
            sequence = source[sequence];
            sequence = result.bind(tango)(sequence);
            config = sequence.Text;
            sequence = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            context = foxtrot.description;
            sequence['style'] = context;
            context = source[update];
            context = result.bind(tango)(context);
            target = context.intl;
            papa = target.string;
            context = source[update];
            context = result.bind(tango)(context);
            context = context.t;
            context = context.b3L8y8;
            context = papa.bind(target)(context);
            sequence['children'] = context;
            sequence = record.bind(tango)(config, sequence);
            vacuum[1] = sequence;
            verify['children'] = vacuum;
            verify = yankee.bind(tango)(offset, verify);
            options[1] = verify;
            yankee = _closure1_slot11;
            offset = _closure1_slot1;
            verify = 19;
            verify = source[verify];
            offset = offset.bind(tango)(verify);
            verify = {};
            vacuum = source[update];
            vacuum = result.bind(tango)(vacuum);
            config = vacuum.intl;
            sequence = config.string;
            vacuum = source[update];
            vacuum = result.bind(tango)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.ilDlmZ;
            vacuum = sequence.bind(config)(vacuum);
            verify['label'] = vacuum;
            vacuum = source[update];
            vacuum = result.bind(tango)(vacuum);
            config = vacuum.intl;
            sequence = config.string;
            vacuum = source[update];
            vacuum = result.bind(tango)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.RfWvWF;
            vacuum = sequence.bind(config)(vacuum);
            verify['placeholder'] = vacuum;
            verify['value'] = control;
            verify['onChangeText'] = output;
            output = foxtrot.input;
            verify['style'] = output;
            output = foxtrot.redesignTextInput;
            verify['textStyle'] = output;
            output = 20;
            output = source[output];
            output = result.bind(tango)(output);
            output = output.ClearButtonVisibility;
            output = output.WITH_CONTENT;
            verify['clearButtonVisibility'] = output;
            output = sizing == echo;
            sizing = undefined;
            if(output) { _fun89468_ip = 961; continue _fun89468 }
 946:
            result = echo.getFirstFieldErrorMessage;
            output = 'name';
            sizing = result.bind(echo)(output);
 961:
            verify['error'] = sizing;
            sizing = function() { // Original name: onFocus
                entity = global;
                tango = entity.setTimeout;
                entity = undefined;
                zulu = function() {
                    _fun89476: for(var _fun89476_ip = 0; ; ) switch(_fun89476_ip) {
 0:
                        entity = _closure2_slot4;
                        mike = entity.current;
                        entity = null;
                        if(!(entity != mike)) { _fun89476_ip = 28; continue _fun89476 }
 18:
                        entity = mike.scrollToEnd;
                        entity = entity.bind(mike)();
 28:
                        entity = undefined;
                        return entity;
                    }
                };
                mike = 100;
                mike = tango.bind(entity)(zulu, mike);
                return entity;
            };
            verify['onFocus'] = sizing;
            backup = function() { // Original name: onBlur
                entity = global;
                tango = entity.setTimeout;
                entity = undefined;
                zulu = function() {
                    _fun89478: for(var _fun89478_ip = 0; ; ) switch(_fun89478_ip) {
 0:
                        entity = _closure2_slot4;
                        mike = entity.current;
                        entity = null;
                        if(!(entity != mike)) { _fun89478_ip = 28; continue _fun89478 }
 18:
                        entity = mike.scrollToEnd;
                        entity = entity.bind(mike)();
 28:
                        entity = undefined;
                        return entity;
                    }
                };
                mike = 100;
                mike = tango.bind(entity)(zulu, mike);
                return entity;
            };
            verify['onBlur'] = backup;
            verify = yankee.bind(tango)(offset, verify);
            options[2] = verify;
            yankee = _closure1_slot11;
            offset = _closure1_slot6;
            verify = {};
            backup = foxtrot.redesignGrowSpacing;
            verify['style'] = backup;
            verify = yankee.bind(tango)(offset, verify);
            options[3] = verify;
            yankee = _closure1_slot11;
            offset = _closure1_slot6;
            verify = {};
            foxtrot = foxtrot.redesignButtonContainer;
            verify['style'] = foxtrot;
            backup = _closure1_slot11;
            echo = _closure1_slot0;
            sizing = _closure1_slot2;
            romeo = 21;
            romeo = sizing[romeo];
            romeo = echo.bind(tango)(romeo);
            foxtrot = romeo.Button;
            romeo = {};
            output = 'lg';
            romeo['size'] = output;
            output = sizing[update];
            output = echo.bind(tango)(output);
            result = output.intl;
            output = result.string;
            sizing = sizing[update];
            sizing = echo.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.Np4yXV;
            sizing = output.bind(result)(sizing);
            romeo['text'] = sizing;
            romeo['onPress'] = kilo;
            romeo = backup.bind(tango)(foxtrot, romeo);
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[4] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot14 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    yankee = 1;
    tango = oscar[yankee];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot4 = tango;
    foxtrot = 2;
    golf = oscar[foxtrot];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot6 = golf;
    tango = tango.ScrollView;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.GuildPrompts;
    var _closure1_slot10 = tango;
    tango = 7;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot11 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot12 = tango;
    offset = 8;
    tango = oscar[offset];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flex'] = yankee;
    yankee = 9;
    yankee = oscar[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.NAV_BAR_HEIGHT;
    verify['marginTop'] = yankee;
    tango['container'] = verify;
    backup = 'center';
    yankee = 16;
    verify = {'alignSelf': 'center', 'marginTop': 16};
    tango['guildIcon'] = verify;
    verify = {'marginBottom': 8, 'textAlign': 'center'};
    tango['title'] = verify;
    verify = {};
    verify['textAlign'] = backup;
    tango['description'] = verify;
    verify = {'alignItems': 'center', 'justifyContent': 'center', 'padding': 16};
    tango['header'] = verify;
    verify = {};
    verify['marginHorizontal'] = yankee;
    tango['input'] = verify;
    verify = {};
    verify['flexGrow'] = foxtrot;
    tango['scrollViewContainer'] = verify;
    verify = {};
    yankee = 10;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.lg;
    verify['borderRadius'] = backup;
    tango['redesignTextInput'] = verify;
    verify = {};
    verify['flexGrow'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_24;
    verify['minHeight'] = foxtrot;
    tango['redesignGrowSpacing'] = verify;
    verify = {};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_16;
    verify['paddingHorizontal'] = yankee;
    tango['redesignButtonContainer'] = verify;
    verify = {'backgroundColor': 'transparent', 'borderBottomWidth': 0};
    tango['navbar'] = verify;
    verify = {};
    verify['marginLeft'] = offset;
    tango['closeIcon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot13 = tango;
    tango = 27;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/directory_channels/native/components/GuildDirectoryNicknameUpsellModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildDirectoryNicknameUpsellModal
        entity = argFoo;
        var _closure2_slot0 = entity;
        tango = _closure1_slot11;
        mike = _closure1_slot0;
        options = _closure1_slot2;
        entity = 25;
        entity = options[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.Navigator;
        entity = {};
        golf = _closure1_slot1;
        oscar = 26;
        oscar = options[oscar];
        oscar = golf.bind(zulu)(oscar);
        report = function() {
            zulu = _closure2_slot0;
            mike = function(argFoo) { // Original name: getScreens
                entity = argFoo;
                zulu = entity.guildId;
                var _closure4_slot0 = zulu;
                entity = entity.onHide;
                var _closure4_slot1 = entity;
                oscar = function() { // Original name: handleClose
                    zulu = _closure1_slot1;
                    tango = _closure1_slot2;
                    entity = 22;
                    report = tango[entity];
                    entity = undefined;
                    options = zulu.bind(entity)(report);
                    golf = options.viewPrompt;
                    mike = _closure1_slot10;
                    oscar = mike.REAL_NAME_PROMPT;
                    report = _closure4_slot0;
                    report = golf.bind(options)(oscar, report);
                    mike = _closure4_slot1;
                    mike = mike.bind(entity)();
                    mike = 23;
                    mike = tango[mike];
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.close;
                    mike = mike.bind(zulu)();
                    return entity;
                };
                var _closure4_slot2 = oscar;
                entity = {};
                zulu = {};
                tango = true;
                zulu['fullscreen'] = tango;
                golf = _closure1_slot0;
                report = _closure1_slot2;
                tango = 24;
                report = report[tango];
                tango = undefined;
                report = golf.bind(tango)(report);
                tango = report.getHeaderCloseButton;
                tango = tango.bind(report)(oscar);
                zulu['headerLeft'] = tango;
                tango = function() { // Original name: headerTitle
                    entity = null;
                    return entity;
                };
                zulu['headerTitle'] = tango;
                mike = function() { // Original name: render
                    tango = _closure1_slot11;
                    zulu = _closure1_slot14;
                    mike = {};
                    report = _closure4_slot0;
                    mike['guildId'] = report;
                    entity = _closure4_slot2;
                    mike['handleClose'] = entity;
                    entity = undefined;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                zulu['render'] = mike;
                mike = 'UPSELL_SCREEN_KEY';
                entity[mike] = zulu;
                return entity;
            };
            entity = undefined;
            entity = mike.bind(entity)(zulu);
            return entity;
        };
        report = oscar.bind(zulu)(report);
        entity['screens'] = report;
        report = 'UPSELL_SCREEN_KEY';
        entity['initialRouteName'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();