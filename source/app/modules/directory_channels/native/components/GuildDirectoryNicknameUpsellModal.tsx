// app/modules/directory_channels/native/components/GuildDirectoryNicknameUpsellModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: GuildDirectoryNicknameUpsell
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.guildId;
            var _closure2_slot0 = michal;
            entity = entity.handleClose;
            var _closure2_slot1 = entity;
            entity = _closure1_slot12;
            tangon = undefined;
            offset = entity.bind(tangon)();
            vacuum = _closure1_slot0;
            ctrled = _closure1_slot2;
            entity = 10;
            entity = ctrled[entity];
            report = vacuum.bind(tangon)(entity);
            zuuluu = report.useStateFromStores;
            entity = _closure1_slot8;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot8;
                michal = zuuluu.getGuild;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            cntext = zuuluu.bind(report)(michal, entity);
            oscard = _closure1_slot1;
            entity = 11;
            entity = ctrled[entity];
            entity = oscard.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            option = entity.insets;
            michal = _closure1_slot5;
            entity = michal.useState;
            foxtra = null;
            michal = entity.bind(michal)(foxtra);
            entity = _closure1_slot4;
            golfie = 2;
            entity = entity.bind(tangon)(michal, golfie);
            zuuluu = 0;
            sizing = entity[zuuluu];
            michal = 1;
            entity = entity[michal];
            var _closure2_slot2 = entity;
            romeon = _closure1_slot5;
            report = romeon.useState;
            entity = '';
            report = report.bind(romeon)(entity);
            entity = _closure1_slot4;
            entity = entity.bind(tangon)(report, golfie);
            echoed = entity[zuuluu];
            var _closure2_slot3 = echoed;
            backup = entity[michal];
            michal = _closure1_slot5;
            entity = michal.useRef;
            report = entity.bind(michal)(foxtra);
            var _closure2_slot4 = report;
            entity = function() {
                tangon = _closure1_slot3;
                zuuluu = undefined;
                michal = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(michal) { _fun00004_ip = 165; continue _fun00003 }
 10:
                            report = _closure2_slot2;
                            michal = undefined;
                            tangon = null;
                            tangon = report.bind(michal)(tangon);
 26: // try_start_0
                            report = _closure1_slot0;
                            oscard = _closure1_slot2;
                            tangon = 12;
                            tangon = oscard[tangon];
                            golfie = report.bind(michal)(tangon);
                            oscard = golfie.updateGuildSelfMember;
                            report = _closure2_slot0;
                            tangon = {};
                            option = _closure2_slot3;
                            tangon['nick'] = option;
                            tangon = oscard.bind(golfie)(report, tangon);
                            SaveGenerator(address=80);
 78:
                            return tangon;
 80:
                            ResumeGenerator(result_out_reg=3, return_bool_out_reg=4);
                            if(report) { _fun00004_ip = 96; continue _fun00003 }
 86:
                            report = _closure2_slot1;
                            report = report.bind(michal)();
 94: // try_end0
                            _fun00004_ip = 162; continue _fun00003;
 96:
                            return tangon;
 99: // catch_target0
                            CatchBlockStart(arg_register=5);
                            tangon = _closure2_slot2;
                            report = _closure1_slot0;
                            golfie = _closure1_slot2;
                            zuuluu = 13;
                            zuuluu = golfie[zuuluu];
                            zuuluu = report.bind(michal)(zuuluu);
                            zuuluu = zuuluu.APIError;
                            report = zuuluu.prototype;
                            report = Object.create(report, {constructor: {value: zuuluu}});
                            yankee = report;
                            offset = oscard;
                            zuuluu = new yankee[zuuluu](offset, verify);
                            zuuluu = zuuluu instanceof Object ? zuuluu : report;
                            zuuluu = tangon.bind(michal)(zuuluu);
 162:
                            return michal;
 165:
                            return entity;
                        }
                    };
                    return entity;
                };
                michal = tangon.bind(zuuluu)(michal);
                var _closure3_slot0 = michal;
                entity = function() {
                    entity = undefined;
                    tangon = _closure3_slot0;
                    zuuluu = tangon.apply;
                    entity = arguments;
                    michal = entity;
                    entity = this;
                    entity = zuuluu.bind(tangon)(entity, michal);
                    return entity;
                };
                return entity;
            };
            romeon = entity.bind(tangon)();
            zuuluu = _closure1_slot11;
            michal = _closure1_slot7;
            entity = {};
            entity['ref'] = report;
            golfie = offset.container;
            report = new Array(2);
            report[0] = golfie;
            golfie = {};
            output = option.bottom;
            kiloes = 9;
            kiloes = ctrled[kiloes];
            kiloes = oscard.bind(tangon)(kiloes);
            kiloes = kiloes.spacing;
            kiloes = kiloes.PX_16;
            kiloes = output + kiloes;
            golfie['paddingBottom'] = kiloes;
            option = option.top;
            golfie['paddingTop'] = option;
            report[1] = golfie;
            entity['contentContainerStyle'] = report;
            golfie = _closure1_slot10;
            option = 14;
            report = ctrled[option];
            oscard = oscard.bind(tangon)(report);
            report = {};
            kiloes = offset.guildIcon;
            report['style'] = kiloes;
            report['guild'] = cntext;
            option = ctrled[option];
            option = vacuum.bind(tangon)(option);
            option = option.GuildIconSizes;
            option = option.XLARGE;
            report['size'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(5);
            report[0] = oscard;
            option = _closure1_slot11;
            golfie = _closure1_slot6;
            oscard = {};
            kiloes = offset.header;
            oscard['style'] = kiloes;
            update = _closure1_slot10;
            source = 15;
            kiloes = ctrled[source];
            kiloes = vacuum.bind(tangon)(kiloes);
            result = kiloes.Text;
            kiloes = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            output = offset.title;
            kiloes['style'] = output;
            output = 16;
            sequen = ctrled[output];
            sequen = vacuum.bind(tangon)(sequen);
            config = sequen.intl;
            sequen = config.format;
            ctrled = ctrled[output];
            ctrled = vacuum.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            vacuum = ctrled.d+6kzs;
            ctrled = {};
            papara = foxtra == cntext;
            record = undefined;
            if(papara) { _fun00002_ip = 508; continue _fun00001 }
 503:
            record = cntext.name;
 508:
            ctrled['guildName'] = record;
            ctrled = sequen.bind(config)(vacuum, ctrled);
            kiloes['children'] = ctrled;
            kiloes = update.bind(tangon)(result, kiloes);
            update = new Array(2);
            update[0] = kiloes;
            vacuum = _closure1_slot10;
            kiloes = _closure1_slot0;
            result = _closure1_slot2;
            source = result[source];
            source = kiloes.bind(tangon)(source);
            ctrled = source.Text;
            source = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            sequen = offset.description;
            source['style'] = sequen;
            sequen = result[output];
            sequen = kiloes.bind(tangon)(sequen);
            record = sequen.intl;
            config = record.string;
            sequen = result[output];
            sequen = kiloes.bind(tangon)(sequen);
            sequen = sequen.t;
            sequen = sequen.b3L8y8;
            sequen = config.bind(record)(sequen);
            source['children'] = sequen;
            source = vacuum.bind(tangon)(ctrled, source);
            update[1] = source;
            oscard['children'] = update;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            option = _closure1_slot10;
            golfie = _closure1_slot1;
            oscard = 17;
            oscard = result[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            update = result[output];
            update = kiloes.bind(tangon)(update);
            ctrled = update.intl;
            source = ctrled.string;
            update = result[output];
            update = kiloes.bind(tangon)(update);
            update = update.t;
            update = update.ilDlmZ;
            update = source.bind(ctrled)(update);
            oscard['label'] = update;
            update = result[output];
            update = kiloes.bind(tangon)(update);
            ctrled = update.intl;
            source = ctrled.string;
            update = result[output];
            update = kiloes.bind(tangon)(update);
            update = update.t;
            update = update.RfWvWF;
            update = source.bind(ctrled)(update);
            oscard['placeholder'] = update;
            oscard['value'] = echoed;
            oscard['onChangeText'] = backup;
            backup = offset.input;
            oscard['style'] = backup;
            backup = offset.redesignTextInput;
            oscard['textStyle'] = backup;
            backup = 18;
            backup = result[backup];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.ClearButtonVisibility;
            backup = backup.WITH_CONTENT;
            oscard['clearButtonVisibility'] = backup;
            backup = foxtra == sizing;
            foxtra = undefined;
            if(backup) { _fun00002_ip = 868; continue _fun00001 }
 853:
            kiloes = sizing.getFirstFieldErrorMessage;
            backup = 'name';
            foxtra = kiloes.bind(sizing)(backup);
 868:
            oscard['error'] = foxtra;
            foxtra = function() { // Original name: onFocus
                entity = global;
                tangon = entity.setTimeout;
                entity = undefined;
                zuuluu = function() {
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        entity = _closure2_slot4;
                        michal = entity.current;
                        entity = null;
                        if(!(entity != michal)) { _fun00006_ip = 28; continue _fun00005 }
 18:
                        entity = michal.scrollToEnd;
                        entity = entity.bind(michal)();
 28:
                        entity = undefined;
                        return entity;
                    }
                };
                michal = 100;
                michal = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            oscard['onFocus'] = foxtra;
            yankee = function() { // Original name: onBlur
                entity = global;
                tangon = entity.setTimeout;
                entity = undefined;
                zuuluu = function() {
                    _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                        entity = _closure2_slot4;
                        michal = entity.current;
                        entity = null;
                        if(!(entity != michal)) { _fun00008_ip = 28; continue _fun00007 }
 18:
                        entity = michal.scrollToEnd;
                        entity = entity.bind(michal)();
 28:
                        entity = undefined;
                        return entity;
                    }
                };
                michal = 100;
                michal = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            oscard['onBlur'] = yankee;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            option = _closure1_slot10;
            golfie = _closure1_slot6;
            oscard = {};
            yankee = offset.redesignGrowSpacing;
            oscard['style'] = yankee;
            oscard = option.bind(tangon)(golfie, oscard);
            report[3] = oscard;
            option = _closure1_slot10;
            golfie = _closure1_slot6;
            oscard = {};
            offset = offset.redesignButtonContainer;
            oscard['style'] = offset;
            yankee = _closure1_slot10;
            sizing = _closure1_slot0;
            foxtra = _closure1_slot2;
            verify = 19;
            verify = foxtra[verify];
            verify = sizing.bind(tangon)(verify);
            offset = verify.Button;
            verify = {};
            backup = 'lg';
            verify['size'] = backup;
            backup = foxtra[output];
            backup = sizing.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = foxtra[output];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.Np4yXV;
            foxtra = backup.bind(kiloes)(foxtra);
            verify['text'] = foxtra;
            verify['onPress'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[4] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot13 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    foxtra = 2;
    golfie = oscard[foxtra];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot6 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.GuildPrompts;
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot10 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot11 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'flexGrow': 2};
    offset = 8;
    yankee = oscard[offset];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.NAV_BAR_HEIGHT;
    verify['marginTop'] = yankee;
    tangon['container'] = verify;
    backup = 'center';
    yankee = 16;
    verify = {'alignSelf': 'center', 'marginTop': 16};
    tangon['guildIcon'] = verify;
    verify = {'marginBottom': 8, 'textAlign': 'center'};
    tangon['title'] = verify;
    verify = {};
    verify['textAlign'] = backup;
    tangon['description'] = verify;
    verify = {'alignItems': 'center', 'justifyContent': 'center', 'padding': 16};
    tangon['header'] = verify;
    verify = {};
    verify['marginHorizontal'] = yankee;
    tangon['input'] = verify;
    verify = {};
    yankee = 9;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.lg;
    verify['borderRadius'] = backup;
    tangon['redesignTextInput'] = verify;
    verify = {};
    verify['flexGrow'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    verify['minHeight'] = foxtra;
    tangon['redesignGrowSpacing'] = verify;
    verify = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_16;
    verify['paddingHorizontal'] = yankee;
    tangon['redesignButtonContainer'] = verify;
    verify = {'backgroundColor': 'transparent', 'borderBottomWidth': 0};
    tangon['navbar'] = verify;
    verify = {};
    verify['marginLeft'] = offset;
    tangon['closeIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 25;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/directory_channels/native/components/GuildDirectoryNicknameUpsellModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildDirectoryNicknameUpsellModal
        entity = argFoo;
        var _closure2_slot0 = entity;
        tangon = _closure1_slot10;
        michal = _closure1_slot0;
        option = _closure1_slot2;
        entity = 23;
        entity = option[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.Navigator;
        entity = {};
        golfie = _closure1_slot1;
        oscard = 24;
        oscard = option[oscard];
        oscard = golfie.bind(zuuluu)(oscard);
        report = function() {
            zuuluu = _closure2_slot0;
            michal = function(argFoo) { // Original name: getScreens
                entity = argFoo;
                zuuluu = entity.guildId;
                var _closure4_slot0 = zuuluu;
                entity = entity.onHide;
                var _closure4_slot1 = entity;
                oscard = function() { // Original name: handleClose
                    zuuluu = _closure1_slot1;
                    tangon = _closure1_slot2;
                    entity = 20;
                    report = tangon[entity];
                    entity = undefined;
                    option = zuuluu.bind(entity)(report);
                    golfie = option.viewPrompt;
                    michal = _closure1_slot9;
                    oscard = michal.REAL_NAME_PROMPT;
                    report = _closure4_slot0;
                    report = golfie.bind(option)(oscard, report);
                    michal = _closure4_slot1;
                    michal = michal.bind(entity)();
                    michal = 21;
                    michal = tangon[michal];
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.close;
                    michal = michal.bind(zuuluu)();
                    return entity;
                };
                var _closure4_slot2 = oscard;
                entity = {};
                zuuluu = {};
                tangon = true;
                zuuluu['fullscreen'] = tangon;
                golfie = _closure1_slot0;
                report = _closure1_slot2;
                tangon = 22;
                report = report[tangon];
                tangon = undefined;
                report = golfie.bind(tangon)(report);
                tangon = report.getHeaderCloseButton;
                tangon = tangon.bind(report)(oscard);
                zuuluu['headerLeft'] = tangon;
                tangon = function() { // Original name: headerTitle
                    entity = null;
                    return entity;
                };
                zuuluu['headerTitle'] = tangon;
                michal = function() { // Original name: render
                    tangon = _closure1_slot10;
                    zuuluu = _closure1_slot13;
                    michal = {};
                    report = _closure4_slot0;
                    michal['guildId'] = report;
                    entity = _closure4_slot2;
                    michal['handleClose'] = entity;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                zuuluu['render'] = michal;
                michal = 'UPSELL_SCREEN_KEY';
                entity[michal] = zuuluu;
                return entity;
            };
            entity = undefined;
            entity = michal.bind(entity)(zuuluu);
            return entity;
        };
        report = oscard.bind(zuuluu)(report);
        entity['screens'] = report;
        report = 'UPSELL_SCREEN_KEY';
        entity['initialRouteName'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();