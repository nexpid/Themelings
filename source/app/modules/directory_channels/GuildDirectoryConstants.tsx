// app/modules/directory_channels/GuildDirectoryConstants.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    verify = argBar;
    zulu = argFred;
    offset = argPlugh;
    var _closure1_slot0 = verify;
    entity = argCorge;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = offset;
    entity = global;
    oscar = entity.Object;
    report = oscar.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscar)(zulu, entity, tango);
    romeo = 0;
    tango = offset[romeo];
    entity = undefined;
    tango = verify.bind(entity)(tango);
    report = tango.ChannelTypes;
    var _closure1_slot3 = report;
    tango = tango.Permissions;
    var _closure1_slot4 = tango;
    golf = {};
    golf['GUILD'] = romeo;
    tango = 'GUILD';
    golf[romeo] = tango;
    yankee = 1;
    golf['GUILD_SCHEDULED_EVENT'] = yankee;
    tango = 'GUILD_SCHEDULED_EVENT';
    golf[yankee] = tango;
    oscar = {};
    tango = 'guild-templates';
    oscar['GUILD_TEMPLATES'] = tango;
    tango = 'customize-new-guild';
    oscar['CUSTOMIZE_NEW_GUILD'] = tango;
    tango = 'choose-guild';
    oscar['CHOOSE_GUILD'] = tango;
    tango = 'customize-existing-guild';
    oscar['CUSTOMIZE_EXISTING_GUILD'] = tango;
    tango = 'confirmation';
    oscar['CONFIRMATION'] = tango;
    report = {};
    tango = 'CREATE';
    report['CREATE'] = tango;
    tango = 'HUB_SCHOOL_CLUB';
    report['HUB_SCHOOL_CLUB'] = tango;
    tango = 'HUB_STUDY';
    report['HUB_STUDY'] = tango;
    tango = 'HUB_CLASS';
    report['HUB_CLASS'] = tango;
    tango = 'HUB_SOCIAL';
    report['HUB_SOCIAL'] = tango;
    tango = 'HUB_MAJOR';
    report['HUB_MAJOR'] = tango;
    tango = 'HUB_DORM';
    report['HUB_DORM'] = tango;
    var _closure1_slot5 = report;
    tango = {};
    foxtrot = -1;
    tango['ALL'] = foxtrot;
    options = 'ALL';
    tango[foxtrot] = options;
    tango['UNCATEGORIZED'] = romeo;
    options = 'UNCATEGORIZED';
    tango[romeo] = options;
    tango['SCHOOL_CLUB'] = yankee;
    options = 'SCHOOL_CLUB';
    tango[yankee] = options;
    yankee = 2;
    tango['CLASS'] = yankee;
    options = 'CLASS';
    tango[yankee] = options;
    yankee = 3;
    tango['STUDY_SOCIAL'] = yankee;
    options = 'STUDY_SOCIAL';
    tango[yankee] = options;
    yankee = 5;
    tango['MISC'] = yankee;
    options = 'MISC';
    tango[yankee] = options;
    var _closure1_slot6 = tango;
    options = 4;
    options = offset[options];
    offset = verify.bind(entity)(options);
    verify = offset.fileFinishedImporting;
    options = 'modules/directory_channels/GuildDirectoryConstants.tsx';
    options = verify.bind(offset)(options);
    zulu['DirectoryEntryTypes'] = golf;
    zulu['CreateOrAddGuildSlideTypes'] = oscar;
    zulu['HubGuildTemplateId'] = report;
    zulu['DirectoryEntryCategories'] = tango;
    tango = '883060064561299456';
    zulu['HQ_CHANNEL_ID'] = tango;
    tango = function(argFoo) { // Original name: getHubCategories
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = argFoo;
            entity = '883060064561299456';
            if(!(mike !== entity)) { _fun00002_ip = 325; continue _fun00001 }
 16:
            mike = {};
            tango = _closure1_slot6;
            zulu = tango.SCHOOL_CLUB;
            mike['value'] = zulu;
            golf = _closure1_slot0;
            options = _closure1_slot2;
            zulu = 1;
            entity = options[zulu];
            oscar = undefined;
            entity = golf.bind(oscar)(entity);
            verify = entity.intl;
            report = verify.string;
            entity = options[zulu];
            entity = golf.bind(oscar)(entity);
            entity = entity.t;
            entity = entity.oNHFUF;
            entity = report.bind(verify)(entity);
            mike['label'] = entity;
            entity = 100;
            mike['idealSize'] = entity;
            entity = new Array(4);
            entity[0] = mike;
            mike = {};
            report = tango.CLASS;
            mike['value'] = report;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            offset = report.intl;
            verify = offset.string;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            report = report.t;
            report = report.V1i8nZ;
            report = verify.bind(offset)(report);
            mike['label'] = report;
            entity[1] = mike;
            mike = {};
            report = tango.STUDY_SOCIAL;
            mike['value'] = report;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            offset = report.intl;
            verify = offset.string;
            report = options[zulu];
            report = golf.bind(oscar)(report);
            report = report.t;
            report = report.Z2ygQk;
            report = verify.bind(offset)(report);
            mike['label'] = report;
            report = 50;
            mike['idealSize'] = report;
            entity[2] = mike;
            mike = {};
            tango = tango.MISC;
            mike['value'] = tango;
            tango = options[zulu];
            tango = golf.bind(oscar)(tango);
            report = tango.intl;
            tango = report.string;
            zulu = options[zulu];
            zulu = golf.bind(oscar)(zulu);
            zulu = zulu.t;
            zulu = zulu.0Bg9LS;
            zulu = tango.bind(report)(zulu);
            mike['label'] = zulu;
            entity[3] = mike;
            _fun00002_ip = 616; continue _fun00001;
 325:
            zulu = {};
            report = _closure1_slot6;
            tango = report.SCHOOL_CLUB;
            zulu['value'] = tango;
            options = _closure1_slot0;
            verify = _closure1_slot2;
            tango = 1;
            mike = verify[tango];
            golf = undefined;
            mike = options.bind(golf)(mike);
            offset = mike.intl;
            oscar = offset.string;
            mike = verify[tango];
            mike = options.bind(golf)(mike);
            mike = mike.t;
            mike = mike.Z+MPNz;
            mike = oscar.bind(offset)(mike);
            zulu['label'] = mike;
            mike = new Array(4);
            mike[0] = zulu;
            zulu = {};
            oscar = report.CLASS;
            zulu['value'] = oscar;
            oscar = verify[tango];
            oscar = options.bind(golf)(oscar);
            yankee = oscar.intl;
            offset = yankee.string;
            oscar = verify[tango];
            oscar = options.bind(golf)(oscar);
            oscar = oscar.t;
            oscar = oscar.dV9uBg;
            oscar = offset.bind(yankee)(oscar);
            zulu['label'] = oscar;
            mike[1] = zulu;
            zulu = {};
            oscar = report.STUDY_SOCIAL;
            zulu['value'] = oscar;
            oscar = verify[tango];
            oscar = options.bind(golf)(oscar);
            yankee = oscar.intl;
            offset = yankee.string;
            oscar = verify[tango];
            oscar = options.bind(golf)(oscar);
            oscar = oscar.t;
            oscar = oscar.xoHQcn;
            oscar = offset.bind(yankee)(oscar);
            zulu['label'] = oscar;
            mike[2] = zulu;
            zulu = {};
            report = report.MISC;
            zulu['value'] = report;
            report = verify[tango];
            report = options.bind(golf)(report);
            oscar = report.intl;
            report = oscar.string;
            tango = verify[tango];
            tango = options.bind(golf)(tango);
            tango = tango.t;
            tango = tango.Ao41rq;
            tango = report.bind(oscar)(tango);
            zulu['label'] = tango;
            mike[3] = zulu;
            entity = mike;
 616:
            return entity;
        }
    };
    zulu['getHubCategories'] = tango;
    mike = function() { // Original name: getHubGuildTemplatesMap
        entity = {};
        report = _closure1_slot5;
        zulu = report.CREATE;
        mike = {};
        tango = report.CREATE;
        mike['id'] = tango;
        tango = '2TffvPucqHkN';
        mike['code'] = tango;
        romeo = _closure1_slot0;
        foxtrot = _closure1_slot2;
        options = 1;
        tango = foxtrot[options];
        yankee = undefined;
        tango = romeo.bind(yankee)(tango);
        golf = tango.intl;
        oscar = golf.string;
        tango = foxtrot[options];
        tango = romeo.bind(yankee)(tango);
        tango = tango.t;
        tango = tango.H3+6BA;
        tango = oscar.bind(golf)(tango);
        mike['label'] = tango;
        tango = new Array(0);
        mike['channels'] = tango;
        tango = null;
        mike['system_channel_id'] = tango;
        entity[zulu] = mike;
        zulu = report.HUB_SCHOOL_CLUB;
        mike = {};
        tango = report.HUB_SCHOOL_CLUB;
        mike['id'] = tango;
        tango = 'UMUbvRpRZhS6';
        mike['code'] = tango;
        tango = foxtrot[options];
        tango = romeo.bind(yankee)(tango);
        golf = tango.intl;
        oscar = golf.string;
        tango = foxtrot[options];
        tango = romeo.bind(yankee)(tango);
        tango = tango.t;
        tango = tango.mmFA5+;
        tango = oscar.bind(golf)(tango);
        mike['label'] = tango;
        tango = {'id': '00', 'parent_id': null};
        oscar = foxtrot[options];
        oscar = romeo.bind(yankee)(oscar);
        verify = oscar.intl;
        golf = verify.string;
        oscar = foxtrot[options];
        oscar = romeo.bind(yankee)(oscar);
        oscar = oscar.t;
        oscar = oscar.VCAA/f;
        oscar = golf.bind(verify)(oscar);
        tango['name'] = oscar;
        golf = _closure1_slot3;
        oscar = golf.GUILD_CATEGORY;
        tango['type'] = oscar;
        verify = new Array(12);
        verify[0] = tango;
        tango = {'id': '01', 'parent_id': '00'};
        oscar = foxtrot[options];
        oscar = romeo.bind(yankee)(oscar);
        kilo = oscar.intl;
        offset = kilo.string;
        oscar = foxtrot[options];
        oscar = romeo.bind(yankee)(oscar);
        oscar = oscar.t;
        oscar = oscar.GHQoER;
        oscar = offset.bind(kilo)(oscar);
        tango['name'] = oscar;
        oscar = golf.GUILD_TEXT;
        tango['type'] = oscar;
        verify[1] = tango;
        tango = {'id': '02', 'parent_id': '00'};
        oscar = '02';
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        sizing = offset.intl;
        kilo = sizing.string;
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        offset = offset.t;
        offset = offset.nSsoSE;
        offset = kilo.bind(sizing)(offset);
        tango['name'] = offset;
        offset = golf.GUILD_TEXT;
        tango['type'] = offset;
        verify[2] = tango;
        tango = {'id': '03', 'parent_id': '00'};
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        sizing = offset.intl;
        kilo = sizing.string;
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        offset = offset.t;
        offset = offset.yZCzMT;
        offset = kilo.bind(sizing)(offset);
        tango['name'] = offset;
        offset = golf.GUILD_TEXT;
        tango['type'] = offset;
        verify[3] = tango;
        tango = {'id': '10', 'parent_id': null};
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        sizing = offset.intl;
        kilo = sizing.string;
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        offset = offset.t;
        offset = offset.mobYpK;
        offset = kilo.bind(sizing)(offset);
        tango['name'] = offset;
        offset = golf.GUILD_CATEGORY;
        tango['type'] = offset;
        verify[4] = tango;
        tango = {'id': '11', 'parent_id': '10'};
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        sizing = offset.intl;
        kilo = sizing.string;
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        offset = offset.t;
        offset = offset.pIOigI;
        offset = kilo.bind(sizing)(offset);
        tango['name'] = offset;
        offset = golf.GUILD_TEXT;
        tango['type'] = offset;
        verify[5] = tango;
        offset = {'id': '12', 'parent_id': '10'};
        tango = '12';
        kilo = foxtrot[options];
        kilo = romeo.bind(yankee)(kilo);
        output = kilo.intl;
        sizing = output.string;
        kilo = foxtrot[options];
        kilo = romeo.bind(yankee)(kilo);
        kilo = kilo.t;
        kilo = kilo.ao2wxs;
        kilo = sizing.bind(output)(kilo);
        offset['name'] = kilo;
        kilo = golf.GUILD_TEXT;
        offset['type'] = kilo;
        verify[6] = offset;
        offset = {'id': '13', 'parent_id': '10'};
        kilo = foxtrot[options];
        kilo = romeo.bind(yankee)(kilo);
        output = kilo.intl;
        sizing = output.string;
        kilo = foxtrot[options];
        kilo = romeo.bind(yankee)(kilo);
        kilo = kilo.t;
        kilo = kilo.AIszv7;
        kilo = sizing.bind(output)(kilo);
        offset['name'] = kilo;
        kilo = golf.GUILD_TEXT;
        offset['type'] = kilo;
        verify[7] = offset;
        offset = {'id': '20', 'parent_id': null};
        kilo = foxtrot[options];
        kilo = romeo.bind(yankee)(kilo);
        output = kilo.intl;
        sizing = output.string;
        kilo = foxtrot[options];
        kilo = romeo.bind(yankee)(kilo);
        kilo = kilo.t;
        kilo = kilo.vcKDMj;
        kilo = sizing.bind(output)(kilo);
        offset['name'] = kilo;
        kilo = golf.GUILD_CATEGORY;
        offset['type'] = kilo;
        verify[8] = offset;
        offset = {'id': '21', 'parent_id': '20'};
        kilo = foxtrot[options];
        kilo = romeo.bind(yankee)(kilo);
        output = kilo.intl;
        sizing = output.string;
        kilo = foxtrot[options];
        kilo = romeo.bind(yankee)(kilo);
        kilo = kilo.t;
        kilo = kilo.XS6gcH;
        kilo = sizing.bind(output)(kilo);
        offset['name'] = kilo;
        kilo = golf.GUILD_VOICE;
        offset['type'] = kilo;
        verify[9] = offset;
        offset = {'id': '22', 'parent_id': '20'};
        kilo = foxtrot[options];
        kilo = romeo.bind(yankee)(kilo);
        output = kilo.intl;
        sizing = output.string;
        kilo = foxtrot[options];
        kilo = romeo.bind(yankee)(kilo);
        kilo = kilo.t;
        kilo = kilo.hi1Ykp;
        kilo = sizing.bind(output)(kilo);
        offset['name'] = kilo;
        kilo = golf.GUILD_VOICE;
        offset['type'] = kilo;
        verify[10] = offset;
        offset = {'id': '22', 'parent_id': '20'};
        kilo = foxtrot[options];
        kilo = romeo.bind(yankee)(kilo);
        output = kilo.intl;
        sizing = output.string;
        kilo = foxtrot[options];
        kilo = romeo.bind(yankee)(kilo);
        kilo = kilo.t;
        kilo = kilo.vw8oaW;
        kilo = sizing.bind(output)(kilo);
        offset['name'] = kilo;
        kilo = golf.GUILD_VOICE;
        offset['type'] = kilo;
        verify[11] = offset;
        mike['channels'] = verify;
        offset = {'id': '00', 'name': '@everyone'};
        sizing = _closure1_slot1;
        output = 2;
        verify = foxtrot[output];
        verify = sizing.bind(yankee)(verify);
        verify = verify.DEFAULT;
        offset['permissions'] = verify;
        verify = new Array(2);
        verify[0] = offset;
        offset = {'id': '01', 'name': 'officers (example)', 'mentionable': true, 'hoist': true, 'permissions': null, 'color': 3066993};
        kilo = 3;
        kilo = foxtrot[kilo];
        config = sizing.bind(yankee)(kilo);
        sequence = config.combine;
        kilo = foxtrot[output];
        kilo = sizing.bind(yankee)(kilo);
        equality = kilo.DEFAULT;
        backup = _closure1_slot4;
        whiskey = backup.MANAGE_ROLES;
        lima = backup.MANAGE_CHANNELS;
        sierra = backup.KICK_MEMBERS;
        status = backup.BAN_MEMBERS;
        target = backup.MANAGE_NICKNAMES;
        papa = backup.MANAGE_GUILD_EXPRESSIONS;
        context = backup.MANAGE_MESSAGES;
        record = backup.SEND_TTS_MESSAGES;
        quebec = config;
        backup = quebec[sequence](equality, whiskey, lima, sierra, status, target, papa, context, record, config);
        offset['permissions'] = backup;
        verify[1] = offset;
        mike['roles'] = verify;
        mike['system_channel_id'] = tango;
        entity[zulu] = mike;
        zulu = report.HUB_STUDY;
        mike = {};
        verify = report.HUB_STUDY;
        mike['id'] = verify;
        verify = '2JBhzzca2vfT';
        mike['code'] = verify;
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        backup = verify.intl;
        offset = backup.string;
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        verify = verify.t;
        verify = verify.fYwSi4;
        verify = offset.bind(backup)(verify);
        mike['label'] = verify;
        offset = {'id': '00', 'parent_id': null};
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        kilo = verify.intl;
        backup = kilo.string;
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        verify = verify.t;
        verify = verify.HY+vdH;
        verify = backup.bind(kilo)(verify);
        offset['name'] = verify;
        verify = golf.GUILD_CATEGORY;
        offset['type'] = verify;
        verify = new Array(11);
        verify[0] = offset;
        offset = {'id': '01', 'parent_id': '00'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.3eM+Li;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_TEXT;
        offset['type'] = backup;
        verify[1] = offset;
        offset = {'id': '02', 'parent_id': '00'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.Qi0D7e;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_TEXT;
        offset['type'] = backup;
        verify[2] = offset;
        offset = {'id': '10', 'parent_id': null};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.yZIUV1;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_CATEGORY;
        offset['type'] = backup;
        verify[3] = offset;
        offset = {'id': '11', 'parent_id': '10'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.pIOigI;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_TEXT;
        offset['type'] = backup;
        verify[4] = offset;
        offset = {'id': '12', 'parent_id': '10'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.ao2wxs;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_TEXT;
        offset['type'] = backup;
        verify[5] = offset;
        offset = {'id': '12', 'parent_id': '10'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.AIszv7;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_TEXT;
        offset['type'] = backup;
        verify[6] = offset;
        offset = {'id': '20', 'parent_id': null};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.vcKDMj;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_CATEGORY;
        offset['type'] = backup;
        verify[7] = offset;
        offset = {'id': '21', 'parent_id': '20'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.XS6gcH;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_VOICE;
        offset['type'] = backup;
        verify[8] = offset;
        offset = {'id': '22', 'parent_id': '20'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        result = backup.intl;
        sizing = result.formatToPlainString;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        kilo = backup.LuNsNT;
        backup = {};
        backup['number'] = options;
        backup = sizing.bind(result)(kilo, backup);
        offset['name'] = backup;
        backup = golf.GUILD_VOICE;
        offset['type'] = backup;
        verify[9] = offset;
        offset = {'id': '23', 'parent_id': '20'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        result = backup.intl;
        sizing = result.formatToPlainString;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        kilo = backup.LuNsNT;
        backup = {};
        backup['number'] = output;
        backup = sizing.bind(result)(kilo, backup);
        offset['name'] = backup;
        backup = golf.GUILD_VOICE;
        offset['type'] = backup;
        verify[10] = offset;
        mike['channels'] = verify;
        mike['system_channel_id'] = tango;
        entity[zulu] = mike;
        zulu = report.HUB_CLASS;
        mike = {};
        verify = report.HUB_CLASS;
        mike['id'] = verify;
        verify = 'r86WWBwTGspb';
        mike['code'] = verify;
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        backup = verify.intl;
        offset = backup.string;
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        verify = verify.t;
        verify = verify.e5gFS0;
        verify = offset.bind(backup)(verify);
        mike['label'] = verify;
        offset = {'id': '00', 'parent_id': null};
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        kilo = verify.intl;
        backup = kilo.string;
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        verify = verify.t;
        verify = verify.HY+vdH;
        verify = backup.bind(kilo)(verify);
        offset['name'] = verify;
        verify = golf.GUILD_CATEGORY;
        offset['type'] = verify;
        verify = new Array(11);
        verify[0] = offset;
        offset = {'id': '01', 'parent_id': '00'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.710tNj;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_TEXT;
        offset['type'] = backup;
        verify[1] = offset;
        offset = {'id': '02', 'parent_id': '00'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.Qi0D7e;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_TEXT;
        offset['type'] = backup;
        verify[2] = offset;
        offset = {'id': '10', 'parent_id': null};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.yZIUV1;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_CATEGORY;
        offset['type'] = backup;
        verify[3] = offset;
        offset = {'id': '11', 'parent_id': '10'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.pIOigI;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_TEXT;
        offset['type'] = backup;
        verify[4] = offset;
        offset = {'id': '12', 'parent_id': '10'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.ao2wxs;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_TEXT;
        offset['type'] = backup;
        verify[5] = offset;
        offset = {'id': '13', 'parent_id': '10'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.AIszv7;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_TEXT;
        offset['type'] = backup;
        verify[6] = offset;
        offset = {'id': '20', 'parent_id': null};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.vcKDMj;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_CATEGORY;
        offset['type'] = backup;
        verify[7] = offset;
        offset = {'id': '21', 'parent_id': '20'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.XS6gcH;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_VOICE;
        offset['type'] = backup;
        verify[8] = offset;
        offset = {'id': '22', 'parent_id': '20'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        result = backup.intl;
        sizing = result.formatToPlainString;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        kilo = backup.LuNsNT;
        backup = {};
        backup['number'] = options;
        backup = sizing.bind(result)(kilo, backup);
        offset['name'] = backup;
        backup = golf.GUILD_VOICE;
        offset['type'] = backup;
        verify[9] = offset;
        offset = {'id': '23', 'parent_id': '20'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        result = backup.intl;
        sizing = result.formatToPlainString;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        kilo = backup.LuNsNT;
        backup = {};
        backup['number'] = output;
        backup = sizing.bind(result)(kilo, backup);
        offset['name'] = backup;
        backup = golf.GUILD_VOICE;
        offset['type'] = backup;
        verify[10] = offset;
        mike['channels'] = verify;
        mike['system_channel_id'] = tango;
        entity[zulu] = mike;
        zulu = report.HUB_SOCIAL;
        mike = {};
        verify = report.HUB_SOCIAL;
        mike['id'] = verify;
        verify = 'AvvtXE3mfbCR';
        mike['code'] = verify;
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        backup = verify.intl;
        offset = backup.string;
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        verify = verify.t;
        verify = verify.oOj7Ii;
        verify = offset.bind(backup)(verify);
        mike['label'] = verify;
        offset = {'id': '00', 'parent_id': null};
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        kilo = verify.intl;
        backup = kilo.string;
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        verify = verify.t;
        verify = verify.yZIUV1;
        verify = backup.bind(kilo)(verify);
        offset['name'] = verify;
        verify = golf.GUILD_CATEGORY;
        offset['type'] = verify;
        verify = new Array(9);
        verify[0] = offset;
        offset = {'id': '01', 'parent_id': '00'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.pIOigI;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_TEXT;
        offset['type'] = backup;
        verify[1] = offset;
        offset = {'id': '02', 'parent_id': '00'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.ao2wxs;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_TEXT;
        offset['type'] = backup;
        verify[2] = offset;
        offset = {'id': '03', 'parent_id': '00'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.AIszv7;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_TEXT;
        offset['type'] = backup;
        verify[3] = offset;
        offset = {'id': '04', 'parent_id': '00'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.d4F8gI;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_TEXT;
        offset['type'] = backup;
        verify[4] = offset;
        offset = {'id': '10', 'parent_id': null};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.vcKDMj;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_CATEGORY;
        offset['type'] = backup;
        verify[5] = offset;
        offset = {'id': '11', 'parent_id': '10'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.CLWKNj;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_VOICE;
        offset['type'] = backup;
        verify[6] = offset;
        offset = {'id': '12', 'parent_id': '10'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.g3qPRk;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_VOICE;
        offset['type'] = backup;
        verify[7] = offset;
        offset = {'id': '13', 'parent_id': '10'};
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[options];
        backup = romeo.bind(yankee)(backup);
        backup = backup.t;
        backup = backup.yQZpe3;
        backup = kilo.bind(sizing)(backup);
        offset['name'] = backup;
        backup = golf.GUILD_VOICE;
        offset['type'] = backup;
        verify[8] = offset;
        mike['channels'] = verify;
        mike['system_channel_id'] = oscar;
        entity[zulu] = mike;
        zulu = report.HUB_MAJOR;
        mike = {};
        oscar = report.HUB_MAJOR;
        mike['id'] = oscar;
        oscar = 'FhmfDR6Arvsc';
        mike['code'] = oscar;
        oscar = foxtrot[options];
        oscar = romeo.bind(yankee)(oscar);
        offset = oscar.intl;
        verify = offset.string;
        oscar = foxtrot[options];
        oscar = romeo.bind(yankee)(oscar);
        oscar = oscar.t;
        oscar = oscar.9kly4e;
        oscar = verify.bind(offset)(oscar);
        mike['label'] = oscar;
        verify = {'id': '00', 'parent_id': null};
        oscar = foxtrot[options];
        oscar = romeo.bind(yankee)(oscar);
        backup = oscar.intl;
        offset = backup.string;
        oscar = foxtrot[options];
        oscar = romeo.bind(yankee)(oscar);
        oscar = oscar.t;
        oscar = oscar.HY+vdH;
        oscar = offset.bind(backup)(oscar);
        verify['name'] = oscar;
        oscar = golf.GUILD_CATEGORY;
        verify['type'] = oscar;
        oscar = new Array(11);
        oscar[0] = verify;
        verify = {'id': '01', 'parent_id': '00'};
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        kilo = offset.intl;
        backup = kilo.string;
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        offset = offset.t;
        offset = offset.yZCzMT;
        offset = backup.bind(kilo)(offset);
        verify['name'] = offset;
        offset = golf.GUILD_TEXT;
        verify['type'] = offset;
        oscar[1] = verify;
        verify = {'id': '02', 'parent_id': '00'};
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        kilo = offset.intl;
        backup = kilo.string;
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        offset = offset.t;
        offset = offset.Qi0D7e;
        offset = backup.bind(kilo)(offset);
        verify['name'] = offset;
        offset = golf.GUILD_TEXT;
        verify['type'] = offset;
        oscar[2] = verify;
        verify = {'id': '10', 'parent_id': null};
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        kilo = offset.intl;
        backup = kilo.string;
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        offset = offset.t;
        offset = offset.yZIUV1;
        offset = backup.bind(kilo)(offset);
        verify['name'] = offset;
        offset = golf.GUILD_CATEGORY;
        verify['type'] = offset;
        oscar[3] = verify;
        verify = {'id': '11', 'parent_id': '10'};
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        kilo = offset.intl;
        backup = kilo.string;
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        offset = offset.t;
        offset = offset.pIOigI;
        offset = backup.bind(kilo)(offset);
        verify['name'] = offset;
        offset = golf.GUILD_TEXT;
        verify['type'] = offset;
        oscar[4] = verify;
        verify = {'id': '12', 'parent_id': '10'};
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        kilo = offset.intl;
        backup = kilo.string;
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        offset = offset.t;
        offset = offset.ao2wxs;
        offset = backup.bind(kilo)(offset);
        verify['name'] = offset;
        offset = golf.GUILD_TEXT;
        verify['type'] = offset;
        oscar[5] = verify;
        verify = {'id': '13', 'parent_id': '10'};
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        kilo = offset.intl;
        backup = kilo.string;
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        offset = offset.t;
        offset = offset.AIszv7;
        offset = backup.bind(kilo)(offset);
        verify['name'] = offset;
        offset = golf.GUILD_TEXT;
        verify['type'] = offset;
        oscar[6] = verify;
        verify = {'id': '20', 'parent_id': null};
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        kilo = offset.intl;
        backup = kilo.string;
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        offset = offset.t;
        offset = offset.vcKDMj;
        offset = backup.bind(kilo)(offset);
        verify['name'] = offset;
        offset = golf.GUILD_CATEGORY;
        verify['type'] = offset;
        oscar[7] = verify;
        verify = {'id': '21', 'parent_id': '20'};
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        kilo = offset.intl;
        backup = kilo.string;
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        offset = offset.t;
        offset = offset.XS6gcH;
        offset = backup.bind(kilo)(offset);
        verify['name'] = offset;
        offset = golf.GUILD_VOICE;
        verify['type'] = offset;
        oscar[8] = verify;
        verify = {'id': '22', 'parent_id': '20'};
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        sizing = offset.intl;
        kilo = sizing.formatToPlainString;
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        offset = offset.t;
        backup = offset.LuNsNT;
        offset = {};
        offset['number'] = options;
        offset = kilo.bind(sizing)(backup, offset);
        verify['name'] = offset;
        offset = golf.GUILD_VOICE;
        verify['type'] = offset;
        oscar[9] = verify;
        verify = {'id': '23', 'parent_id': '20'};
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        sizing = offset.intl;
        kilo = sizing.formatToPlainString;
        offset = foxtrot[options];
        offset = romeo.bind(yankee)(offset);
        offset = offset.t;
        backup = offset.LuNsNT;
        offset = {};
        offset['number'] = output;
        offset = kilo.bind(sizing)(backup, offset);
        verify['name'] = offset;
        offset = golf.GUILD_VOICE;
        verify['type'] = offset;
        oscar[10] = verify;
        mike['channels'] = oscar;
        mike['system_channel_id'] = tango;
        entity[zulu] = mike;
        zulu = report.HUB_DORM;
        mike = {};
        report = report.HUB_DORM;
        mike['id'] = report;
        report = 'fkq8xHfrGE58';
        mike['code'] = report;
        report = foxtrot[options];
        report = romeo.bind(yankee)(report);
        verify = report.intl;
        oscar = verify.string;
        report = foxtrot[options];
        report = romeo.bind(yankee)(report);
        report = report.t;
        report = report.ppGw/P;
        report = oscar.bind(verify)(report);
        mike['label'] = report;
        oscar = {'id': '00', 'parent_id': null};
        report = foxtrot[options];
        report = romeo.bind(yankee)(report);
        offset = report.intl;
        verify = offset.string;
        report = foxtrot[options];
        report = romeo.bind(yankee)(report);
        report = report.t;
        report = report.HY+vdH;
        report = verify.bind(offset)(report);
        oscar['name'] = report;
        report = golf.GUILD_CATEGORY;
        oscar['type'] = report;
        report = new Array(10);
        report[0] = oscar;
        oscar = {'id': '01', 'parent_id': '00'};
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        backup = verify.intl;
        offset = backup.string;
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        verify = verify.t;
        verify = verify.b2+FCQ;
        verify = offset.bind(backup)(verify);
        oscar['name'] = verify;
        verify = golf.GUILD_TEXT;
        oscar['type'] = verify;
        report[1] = oscar;
        oscar = {'id': '10', 'parent_id': null};
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        backup = verify.intl;
        offset = backup.string;
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        verify = verify.t;
        verify = verify.yZIUV1;
        verify = offset.bind(backup)(verify);
        oscar['name'] = verify;
        verify = golf.GUILD_CATEGORY;
        oscar['type'] = verify;
        report[2] = oscar;
        oscar = {'id': '11', 'parent_id': '10'};
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        backup = verify.intl;
        offset = backup.string;
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        verify = verify.t;
        verify = verify.pIOigI;
        verify = offset.bind(backup)(verify);
        oscar['name'] = verify;
        verify = golf.GUILD_TEXT;
        oscar['type'] = verify;
        report[3] = oscar;
        oscar = {'id': '12', 'parent_id': '10'};
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        backup = verify.intl;
        offset = backup.string;
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        verify = verify.t;
        verify = verify.ao2wxs;
        verify = offset.bind(backup)(verify);
        oscar['name'] = verify;
        verify = golf.GUILD_TEXT;
        oscar['type'] = verify;
        report[4] = oscar;
        oscar = {'id': '13', 'parent_id': '10'};
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        backup = verify.intl;
        offset = backup.string;
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        verify = verify.t;
        verify = verify.AIszv7;
        verify = offset.bind(backup)(verify);
        oscar['name'] = verify;
        verify = golf.GUILD_TEXT;
        oscar['type'] = verify;
        report[5] = oscar;
        oscar = {'id': '20', 'parent_id': null};
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        backup = verify.intl;
        offset = backup.string;
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        verify = verify.t;
        verify = verify.vcKDMj;
        verify = offset.bind(backup)(verify);
        oscar['name'] = verify;
        verify = golf.GUILD_CATEGORY;
        oscar['type'] = verify;
        report[6] = oscar;
        oscar = {'id': '21', 'parent_id': '20'};
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        backup = verify.intl;
        offset = backup.string;
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        verify = verify.t;
        verify = verify.XS6gcH;
        verify = offset.bind(backup)(verify);
        oscar['name'] = verify;
        verify = golf.GUILD_VOICE;
        oscar['type'] = verify;
        report[7] = oscar;
        oscar = {'id': '22', 'parent_id': '20'};
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        backup = verify.intl;
        offset = backup.string;
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        verify = verify.t;
        verify = verify.g3qPRk;
        verify = offset.bind(backup)(verify);
        oscar['name'] = verify;
        verify = golf.GUILD_VOICE;
        oscar['type'] = verify;
        report[8] = oscar;
        oscar = {'id': '23', 'parent_id': '20'};
        verify = foxtrot[options];
        verify = romeo.bind(yankee)(verify);
        offset = verify.intl;
        verify = offset.string;
        options = foxtrot[options];
        options = romeo.bind(yankee)(options);
        options = options.t;
        options = options.CLWKNj;
        options = verify.bind(offset)(options);
        oscar['name'] = options;
        golf = golf.GUILD_VOICE;
        oscar['type'] = golf;
        report[9] = oscar;
        mike['channels'] = report;
        mike['system_channel_id'] = tango;
        entity[zulu] = mike;
        return entity;
    };
    zulu['getHubGuildTemplatesMap'] = mike;
    return entity;
})();