// app/modules/dismissible_content/native/SelectedDismissibleContent.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argBaz;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot2 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot3 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 5;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/dismissible_content/native/SelectedDismissibleContent.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: SelectedDismissibleContent
        entity = argFoo;
        offset = entity.contentTypes;
        oscar = entity.children;
        options = entity.groupName;
        report = entity.bypassAutoDismiss;
        zulu = _closure1_slot0;
        verify = _closure1_slot1;
        mike = 3;
        mike = verify[mike];
        tango = undefined;
        golf = zulu.bind(tango)(mike);
        mike = golf.useGetDismissibleContent;
        options = mike.bind(golf)(offset, options);
        golf = _closure1_slot2;
        mike = 2;
        golf = golf.bind(tango)(options, mike);
        mike = 0;
        options = golf[mike];
        mike = 1;
        golf = golf[mike];
        mike = 4;
        mike = verify[mike];
        zulu = zulu.bind(tango)(mike);
        mike = zulu.useSelectedDismissibleContentShared;
        mike = mike.bind(zulu)(options, golf, report);
        zulu = _closure1_slot4;
        mike = _closure1_slot3;
        entity = {};
        report = {};
        report['visibleContent'] = options;
        report['markAsDismissed'] = golf;
        report = oscar.bind(tango)(report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = tango;
    tango = function(argFoo, argBar) { // Original name: useSelectedDismissibleContent
        _fun77532: for(var _fun77532_ip = 0; ; ) switch(_fun77532_ip) {
 0:
            report = arguments[2];
            oscar = undefined;
            if(!(report === oscar)) { _fun77532_ip = 11; continue _fun77532 }
 9:
            report = false;
 11:
            tango = _closure1_slot0;
            golf = _closure1_slot1;
            mike = 3;
            mike = golf[mike];
            verify = tango.bind(oscar)(mike);
            options = verify.useGetDismissibleContent;
            zulu = argFoo;
            mike = argBar;
            zulu = options.bind(verify)(zulu, mike);
            mike = _closure1_slot2;
            entity = 2;
            mike = mike.bind(oscar)(zulu, entity);
            entity = 0;
            zulu = mike[entity];
            entity = 1;
            mike = mike[entity];
            entity = 4;
            entity = golf[entity];
            tango = tango.bind(oscar)(entity);
            entity = tango.useSelectedDismissibleContentShared;
            entity = entity.bind(tango)(zulu, mike, report);
            entity = new Array(2);
            entity[0] = zulu;
            entity[1] = mike;
            return entity;
        }
    };
    zulu['useSelectedDismissibleContent'] = tango;
    tango = function(argFoo, argBar, argBaz) { // Original name: useSelectedVersionedDismissibleContent
        _fun77533: for(var _fun77533_ip = 0; ; ) switch(_fun77533_ip) {
 0:
            report = arguments[3];
            oscar = undefined;
            if(!(report === oscar)) { _fun77533_ip = 11; continue _fun77533 }
 9:
            report = false;
 11:
            tango = _closure1_slot0;
            golf = _closure1_slot1;
            mike = 3;
            mike = golf[mike];
            offset = tango.bind(oscar)(mike);
            verify = offset.useGetVersionedDismissibleContent;
            options = argFoo;
            zulu = argBar;
            mike = argBaz;
            zulu = verify.bind(offset)(options, zulu, mike);
            mike = _closure1_slot2;
            entity = 2;
            mike = mike.bind(oscar)(zulu, entity);
            entity = 0;
            zulu = mike[entity];
            entity = 1;
            mike = mike[entity];
            entity = 4;
            entity = golf[entity];
            tango = tango.bind(oscar)(entity);
            entity = tango.useSelectedDismissibleContentShared;
            entity = entity.bind(tango)(zulu, mike, report);
            entity = new Array(2);
            entity[0] = zulu;
            entity[1] = mike;
            return entity;
        }
    };
    zulu['useSelectedVersionedDismissibleContent'] = tango;
    tango = function(argFoo, argBar, argBaz) { // Original name: useSelectedTimeRecurringDismissibleContent
        _fun77534: for(var _fun77534_ip = 0; ; ) switch(_fun77534_ip) {
 0:
            report = arguments[3];
            oscar = undefined;
            if(!(report === oscar)) { _fun77534_ip = 11; continue _fun77534 }
 9:
            report = false;
 11:
            tango = _closure1_slot0;
            golf = _closure1_slot1;
            mike = 3;
            mike = golf[mike];
            offset = tango.bind(oscar)(mike);
            verify = offset.useGetTimeRecurringDismissibleContent;
            options = argFoo;
            zulu = argBar;
            mike = argBaz;
            zulu = verify.bind(offset)(options, zulu, mike);
            mike = _closure1_slot2;
            entity = 2;
            mike = mike.bind(oscar)(zulu, entity);
            entity = 0;
            zulu = mike[entity];
            entity = 1;
            mike = mike[entity];
            entity = 4;
            entity = golf[entity];
            tango = tango.bind(oscar)(entity);
            entity = tango.useSelectedDismissibleContentShared;
            entity = entity.bind(tango)(zulu, mike, report);
            entity = new Array(2);
            entity[0] = zulu;
            entity[1] = mike;
            return entity;
        }
    };
    zulu['useSelectedTimeRecurringDismissibleContent'] = tango;
    tango = function(argFoo) { // Original name: SelectedVersionedDismissibleContent
        entity = argFoo;
        yankee = entity.contentType;
        offset = entity.latestVersion;
        options = entity.groupName;
        report = entity.bypassAutoDismiss;
        oscar = entity.children;
        zulu = _closure1_slot0;
        verify = _closure1_slot1;
        mike = 3;
        mike = verify[mike];
        tango = undefined;
        golf = zulu.bind(tango)(mike);
        mike = golf.useGetVersionedDismissibleContent;
        options = mike.bind(golf)(yankee, offset, options);
        golf = _closure1_slot2;
        mike = 2;
        golf = golf.bind(tango)(options, mike);
        mike = 0;
        options = golf[mike];
        mike = 1;
        golf = golf[mike];
        mike = 4;
        mike = verify[mike];
        zulu = zulu.bind(tango)(mike);
        mike = zulu.useSelectedDismissibleContentShared;
        mike = mike.bind(zulu)(options, golf, report);
        zulu = _closure1_slot4;
        mike = _closure1_slot3;
        entity = {};
        report = {};
        report['visibleContent'] = options;
        report['markAsDismissed'] = golf;
        report = oscar.bind(tango)(report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['SelectedVersionedDismissibleContent'] = tango;
    mike = function(argFoo) { // Original name: SelectedTimeRecurringDismissibleContent
        entity = argFoo;
        yankee = entity.contentType;
        offset = entity.timeRecurringConfig;
        options = entity.groupName;
        report = entity.bypassAutoDismiss;
        oscar = entity.children;
        zulu = _closure1_slot0;
        verify = _closure1_slot1;
        mike = 3;
        mike = verify[mike];
        tango = undefined;
        golf = zulu.bind(tango)(mike);
        mike = golf.useGetTimeRecurringDismissibleContent;
        options = mike.bind(golf)(yankee, offset, options);
        golf = _closure1_slot2;
        mike = 2;
        golf = golf.bind(tango)(options, mike);
        mike = 0;
        options = golf[mike];
        mike = 1;
        golf = golf[mike];
        mike = 4;
        mike = verify[mike];
        zulu = zulu.bind(tango)(mike);
        mike = zulu.useSelectedDismissibleContentShared;
        mike = mike.bind(zulu)(options, golf, report);
        zulu = _closure1_slot4;
        mike = _closure1_slot3;
        entity = {};
        report = {};
        report['visibleContent'] = options;
        report['markAsDismissed'] = golf;
        report = oscar.bind(tango)(report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['SelectedTimeRecurringDismissibleContent'] = mike;
    return entity;
})();