// app/modules/dismissible_content/DismissibleContentFatigueConfig.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    mike = true;
    tango['value'] = mike;
    mike = '__esModule';
    mike = golf.bind(options)(zulu, mike, tango);
    golf = entity.Set;
    tango = 0;
    mike = oscar[tango];
    entity = undefined;
    mike = report.bind(entity)(mike);
    mike = mike.DismissibleContent;
    options = mike.APPLICATION_COMMAND_TOOLTIP;
    mike = new Array(83);
    mike[0] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.NOW_PLAYING_CONSENT_CARD;
    mike[1] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.GUILD_INSIGHTS_ACCESS_RATE_NEW;
    mike[2] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.FORUM_CHANNEL_UPSELL_MODAL;
    mike[3] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.FORUM_CHANNEL_HELPER_CARD;
    mike[4] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.AUTH_SESSIONS_NEW;
    mike[5] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.COMMANDS_MIGRATION_UPSELL_MODAL;
    mike[6] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.HUB_BACK_TO_SCHOOL_UPSELL;
    mike[7] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.CHANNEL_BROWSER_NUX;
    mike[8] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.BLACK_FRIDAY_2022_BOGO_ANNOUNCEMENT_MODAL;
    mike[9] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.GG_ANNOUNCEMENT;
    mike[10] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.GUILD_ONBOARDING_UPSELL_MODAL;
    mike[11] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.SEASONAL_GIFTING_COACHMARK_2022;
    mike[12] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.CLIENT_THEMES_SETTINGS_BADGE;
    mike[13] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.CLIENT_THEMES_SPARKLE_PREVIEW;
    mike[14] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.QUEST_1_COMPLETION_TOOLTIP;
    mike[15] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.SOUNDBOARD_VOLUME_EDUCATION;
    mike[16] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.REMIXING_ENTRYPOINT_EDUCATION_UPSELLS_MOBILE;
    mike[17] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.GUEST_VOICE_INVITES_MENU_ITEM_NEW_BADGE;
    mike[18] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.CUSTOM_CALL_SOUNDS_PICKER_UPSELL;
    mike[19] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.CLIPS_ONBOARDING_CLIP_BUTTON_COACHMARK;
    mike[20] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.CUSTOM_APP_ICONS_NEW_BADGE;
    mike[21] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.DEKSTOP_CUSTOM_APP_ICON_BADGE;
    mike[22] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.RECURRING_CONTACT_SYNC_PROMPT;
    mike[23] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.NUX_GUILD_CHANNEL_EXPLAINER;
    mike[24] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.SUPER_REACTION_TOGGLE_EDUCATION_MOBILE;
    mike[25] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.SUPER_REACTION_TOGGLE_EDUCATION_DESKTOP;
    mike[26] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.FRIEND_FINDER_CONTACTS_IN_NOTIFICATIONS;
    mike[27] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.VOICE_CALL_BG_PICKER_NEW_BADGE;
    mike[28] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.TENURE_REWARD_PENDING;
    mike[29] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.TENURE_REWARD_REDEEMABLE;
    mike[30] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.WHATS_NEW_TENURE_BADGE_REWARD;
    mike[31] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.ACTIVITIES_CHAT_MENU_NEW_BADGE;
    mike[32] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.ACTIVITIES_CHAT_BUTTON_NUX_V2;
    mike[33] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.TENURE_REWARD_REDEEMABLE_CONFETTI;
    mike[34] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.APP_LAUNCHER_ONBOARDING_ACTIVITIES_BANNER;
    mike[35] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.APP_LAUNCHER_ONBOARDING_APPS_BANNER;
    mike[36] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.APP_LAUNCHER_ONBOARDING_BOTS_BANNER;
    mike[37] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.PREMIUM_CUSTOM_NOTIFICATION_SOUNDS_GDM_DM_BADGE;
    mike[38] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.PREMIUM_SUBSCRIPTION_APRIL_MARKETING_DECO_TOOLTIP;
    mike[39] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.CHANNEL_LIST_CLAN_ADMIN_UPSELL;
    mike[40] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.GUILD_LIST_CLAN_ADMIN_UPSELL;
    mike[41] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.BRAND_REFRESH_NEW_BADGE;
    mike[42] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.BRAND_REFRESH_CLIENT_THEME_BADGE;
    mike[43] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.APP_LAUNCHER_USER_APP_BETA_NOTICE;
    mike[44] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.QUEST_HOME_FRIENDS_LIST_NEW_BADGE;
    mike[45] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.WHATS_NEW_APP_STYLES_JUNE_2024_FLIP;
    mike[46] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.WHATS_NEW_REFERRAL_PROGRAM_FLIP;
    mike[47] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.WHATS_NEW_APP_STYLES_JUNE_2024_NITRO_BADGE;
    mike[48] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.WHATS_NEW_REFERRAL_PROGRAM_NITRO_BADGE;
    mike[49] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.WHATS_NEW_SERVER_PROFILE_FLIP;
    mike[50] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.WHATS_NEW_SERVER_PROFILE_BADGE;
    mike[51] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.DESKTOP_APP_LAUNCHER_ONBOARDING;
    mike[52] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.ICYMI_ALPHA_UPSELL;
    mike[53] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.PASSWORDLESS_UPSELL;
    mike[54] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.CHANNEL_LINKED_LOBBY_EDUCATION_TOOLTIP;
    mike[55] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.REVERSE_TRIAL_NITRO_TAB_BADGE;
    mike[56] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.REVERSE_TRIAL_ENDED_UPSELL;
    mike[57] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.REVERSE_TRIAL_STREAM_POPOUT;
    mike[58] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.REVERSE_TRIAL_EMOJI_BUTTON;
    mike[59] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.REVERSE_TRIAL_EMOJI_PICKER;
    mike[60] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.NITROWEEN_ANIMATED_GIFTING_ICON;
    mike[61] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.TRIAL_FOR_ALL_INITIAL_UPSELL;
    mike[62] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.TRIAL_FOR_ALL_MOBILE_SETTINGS_NOTICE;
    mike[63] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.USER_PROFILE_PREMIUM_AND_SHOP_ENTRY_POINTS;
    mike[64] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.FRACTIONAL_NITRO_DURATION_LEFT_PILL;
    mike[65] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.RESTRICTED_ACCOUNTS_SETTING_NOTICE;
    mike[66] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.IGNORE_USER_NEW_BADGE;
    mike[67] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.SOUNDMOJI_BADGE;
    mike[68] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.TRIAL_NUX_EMOJI_BUTTON;
    mike[69] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.TRIAL_NUX_EMOJI_PICKER;
    mike[70] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.TRIAL_NUX_STREAM_COACH_MARK;
    mike[71] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.VIRTUAL_CURRENCY_ONBOARDING_ANNOUNCEMENT_MODAL;
    mike[72] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.Q1_2025_MARKETING_MOMENT_PROMO_SHEET;
    mike[73] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.VOICE_FILTER_LOOPBACK_COACHMARK;
    mike[74] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.OVERLAY_OOP_SETTINGS_NUX;
    mike[75] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.OVERLAY_OOP_WELCOME_BACKGROUND_NUX;
    mike[76] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.OVERLAY_OOP_WELCOME_BACKGROUND_SWITCH_FROM_IP_NUX;
    mike[77] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.OVERLAY_OOP_WELCOME_NUX;
    mike[78] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.OVERLAY_OOP_WELCOME_SWITCH_FROM_IP_NUX;
    mike[79] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.REVERSE_TRIAL_NITRO_TAB_BADGE_V2;
    mike[80] = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.DismissibleContent;
    options = options.Q1_2025_REVERSE_TRIAL;
    mike[81] = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.DismissibleContent;
    tango = tango.Q1_2025_FOLLOW_UP_REVERSE_TRIAL_OFFER;
    mike[82] = tango;
    tango = golf.prototype;
    tango = Object.create(tango, {constructor: {value: golf}});
    romeo = tango;
    yankee = mike;
    mike = new romeo[golf](yankee, offset);
    mike = mike instanceof Object ? mike : tango;
    tango = 1;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/dismissible_content/DismissibleContentFatigueConfig.tsx';
    tango = report.bind(oscar)(tango);
    zulu['CONTENT_TYPES_WITH_BYPASS_FATIGUE'] = mike;
    return entity;
})();