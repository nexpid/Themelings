// app/modules/toast/native/ToastUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    tangon = tangon.VerificationCriteria;
    var _closure1_slot3 = tangon;
    tangon = 33;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/toast/native/ToastUtils.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'TOAST_ADD_FRIEND';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.Fn5bwM;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 3;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 'status-positive';
        michal['iconColor'] = report;
        report = 4;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.FriendsIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentAddedFriendToast'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'TOAST_FRIEND_REQUEST_ACCEPTED';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.UhJna2;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 5;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 6;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.UserPlusIcon;
        michal['IconComponent'] = report;
        report = 'status-positive';
        michal['iconColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentFriendRequestAcceptedToast'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'TOAST_GAME_FRIEND_REQUEST_ACCEPTED';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.xjNLeX;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 5;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 7;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.UserPlatformIcon;
        michal['IconComponent'] = report;
        report = 'status-positive';
        michal['iconColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentGameFriendRequestAcceptedToast'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'TOAST_FRIEND_REQUEST_IGNORED';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.YlavlZ;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 8;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 9;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.UserMinusIcon;
        michal['IconComponent'] = report;
        report = 'status-danger';
        michal['iconColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentFriendRequestIgnoredToast'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'TOAST_GAME_FRIEND_REQUEST_IGNORED';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.P6BzJC;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 8;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 9;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.UserMinusIcon;
        michal['IconComponent'] = report;
        report = 'status-danger';
        michal['iconColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentGameFriendRequestIgnoredToast'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'LINK_COPIED';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.+5kSoa;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 10;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 11;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.LinkIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentLinkCopied'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'INVITE_SENT';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.sVwWdX;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 12;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 13;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.SendMessageIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentInviteSent'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'TOAST_ID_COPIED';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.eNjAam;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 14;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 15;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.CopyIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentIdCopied'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'TOAST_IMAGE_SAVED';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.cqpdJS;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 16;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 17;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.DownloadIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentImageSaved'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'TOAST_REMIX_LANGUAGE_SUPPORT_WARNING';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.wk1Ay8;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 18;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 19;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.TextIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentRemixLanguageSupportWarning'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'TOAST_VIDEO_SAVED';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.cEK+1t;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 16;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 17;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.DownloadIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentVideoSaved'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'TOAST_GIF_SAVED';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.LktEtL;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 16;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 17;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.DownloadIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentGifSaved'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'TOAST_MESSAGE_COPIED';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.R3o53d;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 14;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 15;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.CopyIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentMessageCopied'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'TOAST_MESSAGE_ID_COPIED';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.svRBmJ;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 14;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 15;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.CopyIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentMessageIdCopied'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'TOAST_FORUM_POST_ID_COPIED';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.aBQ2RE;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 14;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 15;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.CopyIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentPostIdCopied'] = tangon;
    tangon = function() {
        oscard = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = oscard.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        option = 'TOAST_USERNAME_SAVED';
        michal['key'] = option;
        offset = _closure1_slot0;
        report = 2;
        option = golfie[report];
        option = offset.bind(entity)(option);
        verify = option.intl;
        option = verify.string;
        report = golfie[report];
        report = offset.bind(entity)(report);
        report = report.t;
        report = report.FHVR//;
        report = option.bind(verify)(report);
        michal['content'] = report;
        report = 20;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        michal['icon'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentUsernameCopied'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'TOAST_FEEDBACK_SENT';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.xpiDtr;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 21;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 22;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.CheckmarkLargeIcon;
        michal['IconComponent'] = report;
        report = 'status-positive';
        michal['iconColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentFeedbackSent'] = tangon;
    tangon = function(argFoo) {
        golfie = argFoo;
        zuuluu = _closure1_slot1;
        tangon = _closure1_slot2;
        entity = 23;
        michal = tangon[entity];
        entity = undefined;
        oscard = zuuluu.bind(entity)(michal);
        report = oscard.getEmojiURL;
        michal = {};
        option = golfie.id;
        michal['id'] = option;
        option = golfie.animated;
        michal['animated'] = option;
        option = 48;
        michal['size'] = option;
        oscard = report.bind(oscard)(michal);
        michal = 1;
        michal = tangon[michal];
        tangon = zuuluu.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        offset = golfie.id;
        report = global;
        option = report.HermesInternal;
        verify = option.concat;
        option = 'PRESENT_EMOJI-';
        option = verify.bind(option)(offset);
        michal['key'] = option;
        option = golfie.name;
        report = report.HermesInternal;
        golfie = report.concat;
        report = ':';
        report = golfie.bind(report)(option, report);
        michal['content'] = report;
        report = {};
        report['uri'] = oscard;
        michal['icon'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentEmoji'] = tangon;
    tangon = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            oscard = argFoo;
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 1;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.open;
            michal = {};
            golfie = 'NOISE_CANCELLATION_TOGGLE';
            michal['key'] = golfie;
            option = _closure1_slot0;
            yankee = _closure1_slot2;
            golfie = 2;
            verify = yankee[golfie];
            verify = option.bind(entity)(verify);
            offset = verify.intl;
            verify = offset.string;
            golfie = yankee[golfie];
            golfie = option.bind(entity)(golfie);
            option = golfie.t;
            if(oscard) { _fun00002_ip = 108; continue _fun00001 }
 93:
            golfie = option.hEMHnJ;
            golfie = verify.bind(offset)(golfie);
            _fun00002_ip = 121; continue _fun00001;
 108:
            option = option.Q+fhfn;
            golfie = verify.bind(offset)(option);
 121:
            michal['content'] = golfie;
            option = _closure1_slot1;
            offset = _closure1_slot2;
            if(oscard) { _fun00002_ip = 145; continue _fun00001 }
 136:
            golfie = 24;
            golfie = offset[golfie];
            _fun00002_ip = 152; continue _fun00001;
 145:
            verify = 21;
            golfie = offset[verify];
 152:
            golfie = option.bind(entity)(golfie);
            michal['icon'] = golfie;
            option = _closure1_slot0;
            verify = _closure1_slot2;
            if(oscard) { _fun00002_ip = 192; continue _fun00001 }
 172:
            report = 25;
            report = verify[report];
            report = option.bind(entity)(report);
            report = report.XLargeIcon;
            _fun00002_ip = 210; continue _fun00001;
 192:
            golfie = 22;
            golfie = verify[golfie];
            golfie = option.bind(entity)(golfie);
            report = golfie.CheckmarkLargeIcon;
 210:
            michal['IconComponent'] = report;
            report = 'status-danger';
            if(!oscard) { _fun00002_ip = 230; continue _fun00001 }
 224:
            report = 'status-positive';
 230:
            michal['iconColor'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        }
    };
    zuuluu['presentNoiseCancellation'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'MOBILE_NOISE_CANCELLATION_CPU_OVERUSE';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.DnmX2N;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 24;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 25;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.XLargeIcon;
        michal['IconComponent'] = report;
        report = 'status-danger';
        michal['iconColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentNoiseCancellationError'] = tangon;
    tangon = function(argFoo) {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'ERROR';
        michal['key'] = oscard;
        oscard = argFoo;
        michal['content'] = oscard;
        oscard = 24;
        oscard = golfie[oscard];
        oscard = option.bind(entity)(oscard);
        michal['icon'] = oscard;
        oscard = _closure1_slot0;
        report = 25;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.XLargeIcon;
        michal['IconComponent'] = report;
        report = 'status-danger';
        michal['iconColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentError'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'MOBILE_ADVANCED_VOICE_ACTIVITY_CPU_OVERUSE';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.zz1Tfn;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 24;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 25;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.XLargeIcon;
        michal['IconComponent'] = report;
        report = 'status-danger';
        michal['iconColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentVoiceActivityDetectionError'] = tangon;
    tangon = function(argFoo) {
        romeon = argFoo;
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = global;
        oscard = oscard.HermesInternal;
        verify = oscard.concat;
        oscard = 'ROLE_ID_COPIED-';
        oscard = verify.bind(oscard)(romeon);
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        yankee = verify.intl;
        offset = yankee.formatToPlainString;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        verify = report.iOWpeH;
        report = {};
        report['role'] = romeon;
        report = offset.bind(yankee)(verify, report);
        michal['content'] = report;
        report = 14;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 15;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.CopyIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['roleIdCopied'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'ENABLE_COMMUNITY_MODAL_REQUIREMENT_SATISFIED_TOOLTIP';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.PHjrpq;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 21;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 22;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.CheckmarkLargeIcon;
        michal['IconComponent'] = report;
        report = 'status-positive';
        michal['iconColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['communityRequirementSatisfied'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'GUILD_SETTINGS_COMMUNITY_ADMINISTRATOR_ONLY';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.pjG+T0;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 26;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 27;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.CircleInformationIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['communityAdminOnly'] = tangon;
    tangon = function(argFoo) {
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            michal = argFoo;
            report = michal.notClaimed;
            zuuluu = michal.notEmailVerified;
            tangon = michal.notPhoneVerified;
            entity = michal.newAccount;
            michal = michal.newMember;
            if(report) { _fun00004_ip = 361; continue _fun00003 }
 39:
            if(tangon) { _fun00004_ip = 297; continue _fun00003 }
 45:
            if(zuuluu) { _fun00004_ip = 230; continue _fun00003 }
 51:
            if(michal) { _fun00004_ip = 146; continue _fun00003 }
 54:
            report = null;
            if(!entity) { _fun00004_ip = 423; continue _fun00003 }
 62:
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            entity = 2;
            zuuluu = option[entity];
            michal = undefined;
            zuuluu = golfie.bind(michal)(zuuluu);
            tangon = zuuluu.intl;
            zuuluu = tangon.formatToPlainString;
            entity = option[entity];
            entity = golfie.bind(michal)(entity);
            entity = entity.t;
            michal = entity.sncw4+;
            entity = {};
            oscard = _closure1_slot3;
            oscard = oscard.ACCOUNT_AGE;
            entity['min'] = oscard;
            report = zuuluu.bind(tangon)(michal, entity);
            _fun00004_ip = 423; continue _fun00003;
 146:
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            entity = 2;
            zuuluu = option[entity];
            michal = undefined;
            zuuluu = golfie.bind(michal)(zuuluu);
            tangon = zuuluu.intl;
            zuuluu = tangon.formatToPlainString;
            entity = option[entity];
            entity = golfie.bind(michal)(entity);
            entity = entity.t;
            michal = entity.v1ktYW;
            entity = {};
            oscard = _closure1_slot3;
            oscard = oscard.MEMBER_AGE;
            entity['min'] = oscard;
            report = zuuluu.bind(tangon)(michal, entity);
            _fun00004_ip = 423; continue _fun00003;
 230:
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 2;
            michal = golfie[entity];
            tangon = undefined;
            michal = oscard.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = golfie[entity];
            entity = oscard.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.vdSOp6;
            report = michal.bind(zuuluu)(entity);
            _fun00004_ip = 423; continue _fun00003;
 297:
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 2;
            michal = golfie[entity];
            tangon = undefined;
            michal = oscard.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = golfie[entity];
            entity = oscard.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.vW8iUF;
            report = michal.bind(zuuluu)(entity);
            _fun00004_ip = 423; continue _fun00003;
 361:
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 2;
            michal = golfie[entity];
            tangon = undefined;
            michal = oscard.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = golfie[entity];
            entity = oscard.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.IRxUlJ;
            report = michal.bind(zuuluu)(entity);
 423:
            entity = null;
            if(!(entity != report)) { _fun00004_ip = 524; continue _fun00003 }
 429:
            option = _closure1_slot1;
            golfie = _closure1_slot2;
            entity = 1;
            entity = golfie[entity];
            oscard = undefined;
            zuuluu = option.bind(oscard)(entity);
            michal = zuuluu.open;
            entity = {};
            verify = 'UNVERIFIED_VOICE_GATE';
            entity['key'] = verify;
            entity['content'] = report;
            report = 26;
            report = golfie[report];
            report = option.bind(oscard)(report);
            entity['icon'] = report;
            report = _closure1_slot0;
            tangon = 27;
            tangon = golfie[tangon];
            tangon = report.bind(oscard)(tangon);
            tangon = tangon.CircleInformationIcon;
            entity['IconComponent'] = tangon;
            entity = michal.bind(zuuluu)(entity);
 524:
            entity = undefined;
            return entity;
        }
    };
    zuuluu['unverifiedVoiceGate'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'TRANSFER_OWNERSHIP_PROTECTED_GUILD';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.wDkfrK;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 26;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 27;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.CircleInformationIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['transferOwnershipProtected'] = tangon;
    tangon = function(argFoo) {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'PRIVATE_CHANNEL_MEMBERS_REMOVED';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        yankee = verify.intl;
        offset = yankee.formatToPlainString;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        verify = report.vJGtXV;
        report = {};
        romeon = argFoo;
        report['name'] = romeon;
        report = offset.bind(yankee)(verify, report);
        michal['content'] = report;
        report = 28;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 29;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.TrashIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['memberOrRoleRemovedToast'] = tangon;
    tangon = function(argFoo, argBar) {
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            oscard = argFoo;
            golfie = argBar;
            entity = 0;
            if(!(oscard > entity)) { _fun00006_ip = 19; continue _fun00005 }
 12:
            if(!(!(golfie > entity))) { _fun00006_ip = 180; continue _fun00005 }
 19:
            if(!(!(oscard > entity))) { _fun00006_ip = 109; continue _fun00005 }
 23:
            entity = golfie > entity;
            option = undefined;
            report = undefined;
            if(!entity) { _fun00006_ip = 242; continue _fun00005 }
 37:
            michal = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 2;
            zuuluu = verify[entity];
            zuuluu = michal.bind(option)(zuuluu);
            tangon = zuuluu.intl;
            zuuluu = tangon.formatToPlainString;
            entity = verify[entity];
            entity = michal.bind(option)(entity);
            entity = entity.t;
            michal = entity.yvV5YW;
            entity = {};
            entity['count'] = golfie;
            report = zuuluu.bind(tangon)(michal, entity);
            _fun00006_ip = 242; continue _fun00005;
 109:
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            entity = 2;
            zuuluu = option[entity];
            michal = undefined;
            zuuluu = golfie.bind(michal)(zuuluu);
            tangon = zuuluu.intl;
            zuuluu = tangon.formatToPlainString;
            entity = option[entity];
            entity = golfie.bind(michal)(entity);
            entity = entity.t;
            michal = entity.yM/8JC;
            entity = {};
            entity['count'] = oscard;
            report = zuuluu.bind(tangon)(michal, entity);
            _fun00006_ip = 242; continue _fun00005;
 180:
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 2;
            michal = golfie[entity];
            tangon = undefined;
            michal = oscard.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = golfie[entity];
            entity = oscard.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.fRD8wc;
            report = michal.bind(zuuluu)(entity);
 242:
            entity = null;
            if(!(entity != report)) { _fun00006_ip = 354; continue _fun00005 }
 248:
            option = _closure1_slot1;
            golfie = _closure1_slot2;
            entity = 1;
            entity = golfie[entity];
            oscard = undefined;
            zuuluu = option.bind(oscard)(entity);
            michal = zuuluu.open;
            entity = {};
            verify = 'MEMBER_OR_ROLE_ADDED';
            entity['key'] = verify;
            entity['content'] = report;
            report = 21;
            report = golfie[report];
            report = option.bind(oscard)(report);
            entity['icon'] = report;
            report = _closure1_slot0;
            tangon = 22;
            tangon = golfie[tangon];
            tangon = report.bind(oscard)(tangon);
            tangon = tangon.CheckmarkLargeIcon;
            entity['IconComponent'] = tangon;
            tangon = 'status-positive';
            entity['iconColor'] = tangon;
            entity = michal.bind(zuuluu)(entity);
 354:
            entity = undefined;
            return entity;
        }
    };
    zuuluu['memberOrRoleAddedToast'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'ROLE_PERMISSION_TEMPLATE_SELECT_CONFIRMATION_TOAST';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.e6xHUV;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 21;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 22;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.CheckmarkLargeIcon;
        michal['IconComponent'] = report;
        report = 'status-positive';
        michal['iconColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['roleTemplateAppliedToast'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'ROLE_CREATED_TOAST';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.kubT4e;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 21;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 22;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.CheckmarkLargeIcon;
        michal['IconComponent'] = report;
        report = 'status-positive';
        michal['iconColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['roleCreatedToast'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'ROLE_CREATION_FAILED';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.hbr6Ul;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 24;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 25;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.XLargeIcon;
        michal['IconComponent'] = report;
        report = 'status-danger';
        michal['iconColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['roleCreateFailedToast'] = tangon;
    tangon = function(argFoo) {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'FAILED';
        michal['key'] = oscard;
        oscard = 24;
        oscard = golfie[oscard];
        oscard = option.bind(entity)(oscard);
        michal['icon'] = oscard;
        oscard = argFoo;
        michal['content'] = oscard;
        oscard = _closure1_slot0;
        report = 25;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.XLargeIcon;
        michal['IconComponent'] = report;
        report = 'status-danger';
        michal['iconColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentFailedToast'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'TOAST_COMMAND_COPIED';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.U989cn;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 10;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 11;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.LinkIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentCommandCopied'] = tangon;
    tangon = function(argFoo, argBar) {
        entity = argBar;
        var _closure2_slot0 = entity;
        zuuluu = _closure1_slot1;
        offset = _closure1_slot2;
        entity = 1;
        michal = offset[entity];
        entity = undefined;
        tangon = zuuluu.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        golfie = 'GUILD_IDENTITY_BIO_TOAST';
        michal['key'] = golfie;
        golfie = _closure1_slot0;
        oscard = 2;
        option = offset[oscard];
        option = golfie.bind(entity)(option);
        verify = option.intl;
        option = verify.formatToPlainString;
        oscard = offset[oscard];
        oscard = golfie.bind(entity)(oscard);
        oscard = oscard.t;
        golfie = oscard.pOy2tr;
        oscard = {};
        offset = argFoo;
        oscard['guildName'] = offset;
        oscard = option.bind(verify)(golfie, oscard);
        michal['content'] = oscard;
        report = function() { // Original name: icon
            entity = _closure2_slot0;
            return entity;
        };
        michal['icon'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentGuildMemberBio'] = tangon;
    tangon = function(argFoo, argBar) {
        entity = argBar;
        var _closure2_slot0 = entity;
        zuuluu = _closure1_slot1;
        offset = _closure1_slot2;
        entity = 1;
        michal = offset[entity];
        entity = undefined;
        tangon = zuuluu.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        golfie = 'GUILD_IDENTITY_PRONOUNS_TOAST';
        michal['key'] = golfie;
        golfie = _closure1_slot0;
        oscard = 2;
        option = offset[oscard];
        option = golfie.bind(entity)(option);
        verify = option.intl;
        option = verify.formatToPlainString;
        oscard = offset[oscard];
        oscard = golfie.bind(entity)(oscard);
        oscard = oscard.t;
        golfie = oscard.gPVLS0;
        oscard = {};
        offset = argFoo;
        oscard['guildName'] = offset;
        oscard = option.bind(verify)(golfie, oscard);
        michal['content'] = oscard;
        report = function() { // Original name: icon
            entity = _closure2_slot0;
            return entity;
        };
        michal['icon'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentGuildMemberPronouns'] = tangon;
    tangon = function() {
        zuuluu = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 1;
        michal = verify[entity];
        entity = undefined;
        tangon = zuuluu.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'USER_POPOUT_PRONOUNS';
        michal['key'] = oscard;
        option = _closure1_slot0;
        report = 2;
        oscard = verify[report];
        oscard = option.bind(entity)(oscard);
        golfie = oscard.intl;
        oscard = golfie.string;
        report = verify[report];
        report = option.bind(entity)(report);
        report = report.t;
        report = report.1w6dr6;
        report = oscard.bind(golfie)(report);
        michal['content'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentUserPronouns'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = _closure1_slot0;
        report = 30;
        report = golfie[report];
        verify = oscard.bind(entity)(report);
        report = verify.v4;
        offset = report.bind(verify)();
        report = global;
        report = report.HermesInternal;
        verify = report.concat;
        report = 'COPIED_TEXT_';
        report = verify.bind(report)(offset);
        michal['key'] = report;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.mGZ66O;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 14;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 15;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.CopyIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentCopiedToClipboard'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'GUILD_ROLE_SUBSCRIPTION_MANAGE_SUBSCRIPTION_PAGE_TRIAL_PRICE_INFO';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report./q6fpa;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 26;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 27;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.CircleInformationIcon;
        michal['IconComponent'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['presentGuildRoleSubscriptionTrialTierMonthCost'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'VOICE_MESSAGES_RECORDING_FAILED';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.H03AqK;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 24;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 25;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.XLargeIcon;
        michal['IconComponent'] = report;
        report = 'status-danger';
        michal['iconColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['showVoiceRecordingFailed'] = tangon;
    tangon = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'GROUP_DM_INVITE_FULL_MAIN';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.OtTQDw;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 24;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 25;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.XLargeIcon;
        michal['IconComponent'] = report;
        report = 'status-danger';
        michal['iconColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['showMaxGroupMembers'] = tangon;
    tangon = function() {
        golfie = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 1;
        michal = verify[entity];
        entity = undefined;
        tangon = golfie.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'TRANSFER_OWNERSHIP_SUCCESS';
        michal['key'] = oscard;
        oscard = 21;
        oscard = verify[oscard];
        oscard = golfie.bind(entity)(oscard);
        michal['icon'] = oscard;
        option = _closure1_slot0;
        report = 2;
        oscard = verify[report];
        oscard = option.bind(entity)(oscard);
        golfie = oscard.intl;
        oscard = golfie.string;
        report = verify[report];
        report = option.bind(entity)(report);
        report = report.t;
        report = report.2Eyydn;
        report = oscard.bind(golfie)(report);
        michal['content'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['showTransferOwnershipSuccess'] = tangon;
    tangon = function(argFoo, argBar) {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = argFoo;
        michal['key'] = oscard;
        oscard = argBar;
        michal['content'] = oscard;
        oscard = 31;
        oscard = golfie[oscard];
        oscard = option.bind(entity)(oscard);
        michal['icon'] = oscard;
        oscard = _closure1_slot0;
        report = 32;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.CircleCheckIcon;
        michal['IconComponent'] = report;
        report = 'status-positive';
        michal['iconColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['showSafetySuccess'] = tangon;
    michal = function() {
        option = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 1;
        michal = golfie[entity];
        entity = undefined;
        tangon = option.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'VERIFICATION_RESENT';
        michal['key'] = oscard;
        oscard = _closure1_slot0;
        report = 2;
        verify = golfie[report];
        verify = oscard.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.t;
        report = report.gI8ISU;
        report = verify.bind(offset)(report);
        michal['content'] = report;
        report = 21;
        report = golfie[report];
        report = option.bind(entity)(report);
        michal['icon'] = report;
        report = 22;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.CheckmarkLargeIcon;
        michal['IconComponent'] = report;
        report = 'status-positive';
        michal['iconColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['showVerificationSent'] = michal;
    return entity;
})();