// app/modules/toast/native/ToastUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    tango = tango.VerificationCriteria;
    var _closure1_slot3 = tango;
    tango = 33;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/toast/native/ToastUtils.tsx';
    tango = report.bind(oscar)(tango);
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'TOAST_ADD_FRIEND';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.Fn5bwM;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 3;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 'status-positive';
        mike['iconColor'] = report;
        report = 4;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.FriendsIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentAddedFriendToast'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'TOAST_FRIEND_REQUEST_ACCEPTED';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.UhJna2;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 5;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 6;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.UserPlusIcon;
        mike['IconComponent'] = report;
        report = 'status-positive';
        mike['iconColor'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentFriendRequestAcceptedToast'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'TOAST_GAME_FRIEND_REQUEST_ACCEPTED';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.xjNLeX;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 5;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 7;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.UserPlatformIcon;
        mike['IconComponent'] = report;
        report = 'status-positive';
        mike['iconColor'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentGameFriendRequestAcceptedToast'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'TOAST_FRIEND_REQUEST_IGNORED';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.YlavlZ;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 8;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 9;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.UserMinusIcon;
        mike['IconComponent'] = report;
        report = 'status-danger';
        mike['iconColor'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentFriendRequestIgnoredToast'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'TOAST_GAME_FRIEND_REQUEST_IGNORED';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.P6BzJC;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 8;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 9;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.UserMinusIcon;
        mike['IconComponent'] = report;
        report = 'status-danger';
        mike['iconColor'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentGameFriendRequestIgnoredToast'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'LINK_COPIED';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.+5kSoa;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 10;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 11;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.LinkIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentLinkCopied'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'INVITE_SENT';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.sVwWdX;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 12;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 13;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.SendMessageIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentInviteSent'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'TOAST_ID_COPIED';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.eNjAam;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 14;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 15;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.CopyIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentIdCopied'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'TOAST_IMAGE_SAVED';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.cqpdJS;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 16;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 17;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.DownloadIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentImageSaved'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'TOAST_REMIX_LANGUAGE_SUPPORT_WARNING';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.wk1Ay8;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 18;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 19;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.TextIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentRemixLanguageSupportWarning'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'TOAST_VIDEO_SAVED';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.cEK+1t;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 16;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 17;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.DownloadIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentVideoSaved'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'TOAST_GIF_SAVED';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.LktEtL;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 16;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 17;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.DownloadIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentGifSaved'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'TOAST_MESSAGE_COPIED';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.R3o53d;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 14;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 15;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.CopyIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentMessageCopied'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'TOAST_MESSAGE_ID_COPIED';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.svRBmJ;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 14;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 15;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.CopyIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentMessageIdCopied'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'TOAST_FORUM_POST_ID_COPIED';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.aBQ2RE;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 14;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 15;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.CopyIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentPostIdCopied'] = tango;
    tango = function() {
        oscar = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = oscar.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        options = 'TOAST_USERNAME_SAVED';
        mike['key'] = options;
        offset = _closure1_slot0;
        report = 2;
        options = golf[report];
        options = offset.bind(entity)(options);
        verify = options.intl;
        options = verify.string;
        report = golf[report];
        report = offset.bind(entity)(report);
        report = report.t;
        report = report.FHVR//;
        report = options.bind(verify)(report);
        mike['content'] = report;
        report = 20;
        report = golf[report];
        report = oscar.bind(entity)(report);
        mike['icon'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentUsernameCopied'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'TOAST_FEEDBACK_SENT';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.xpiDtr;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 21;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 22;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.CheckmarkLargeIcon;
        mike['IconComponent'] = report;
        report = 'status-positive';
        mike['iconColor'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentFeedbackSent'] = tango;
    tango = function(argFoo) {
        golf = argFoo;
        zulu = _closure1_slot1;
        tango = _closure1_slot2;
        entity = 23;
        mike = tango[entity];
        entity = undefined;
        oscar = zulu.bind(entity)(mike);
        report = oscar.getEmojiURL;
        mike = {};
        options = golf.id;
        mike['id'] = options;
        options = golf.animated;
        mike['animated'] = options;
        options = 48;
        mike['size'] = options;
        oscar = report.bind(oscar)(mike);
        mike = 1;
        mike = tango[mike];
        tango = zulu.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        offset = golf.id;
        report = global;
        options = report.HermesInternal;
        verify = options.concat;
        options = 'PRESENT_EMOJI-';
        options = verify.bind(options)(offset);
        mike['key'] = options;
        options = golf.name;
        report = report.HermesInternal;
        golf = report.concat;
        report = ':';
        report = golf.bind(report)(options, report);
        mike['content'] = report;
        report = {};
        report['uri'] = oscar;
        mike['icon'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentEmoji'] = tango;
    tango = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            oscar = argFoo;
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 1;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.open;
            mike = {};
            golf = 'NOISE_CANCELLATION_TOGGLE';
            mike['key'] = golf;
            options = _closure1_slot0;
            yankee = _closure1_slot2;
            golf = 2;
            verify = yankee[golf];
            verify = options.bind(entity)(verify);
            offset = verify.intl;
            verify = offset.string;
            golf = yankee[golf];
            golf = options.bind(entity)(golf);
            options = golf.t;
            if(oscar) { _fun00002_ip = 106; continue _fun00001 }
 93:
            golf = options.hEMHnJ;
            golf = verify.bind(offset)(golf);
            _fun00002_ip = 117; continue _fun00001;
 106:
            options = options.Q+fhfn;
            golf = verify.bind(offset)(options);
 117:
            mike['content'] = golf;
            options = _closure1_slot1;
            offset = _closure1_slot2;
            if(oscar) { _fun00002_ip = 141; continue _fun00001 }
 132:
            golf = 24;
            golf = offset[golf];
            _fun00002_ip = 148; continue _fun00001;
 141:
            verify = 21;
            golf = offset[verify];
 148:
            golf = options.bind(entity)(golf);
            mike['icon'] = golf;
            options = _closure1_slot0;
            verify = _closure1_slot2;
            if(oscar) { _fun00002_ip = 188; continue _fun00001 }
 168:
            report = 25;
            report = verify[report];
            report = options.bind(entity)(report);
            report = report.XLargeIcon;
            _fun00002_ip = 206; continue _fun00001;
 188:
            golf = 22;
            golf = verify[golf];
            golf = options.bind(entity)(golf);
            report = golf.CheckmarkLargeIcon;
 206:
            mike['IconComponent'] = report;
            report = 'status-danger';
            if(!oscar) { _fun00002_ip = 226; continue _fun00001 }
 220:
            report = 'status-positive';
 226:
            mike['iconColor'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        }
    };
    zulu['presentNoiseCancellation'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'MOBILE_NOISE_CANCELLATION_CPU_OVERUSE';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.DnmX2N;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 24;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 25;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.XLargeIcon;
        mike['IconComponent'] = report;
        report = 'status-danger';
        mike['iconColor'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentNoiseCancellationError'] = tango;
    tango = function(argFoo) {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'ERROR';
        mike['key'] = oscar;
        oscar = argFoo;
        mike['content'] = oscar;
        oscar = 24;
        oscar = golf[oscar];
        oscar = options.bind(entity)(oscar);
        mike['icon'] = oscar;
        oscar = _closure1_slot0;
        report = 25;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.XLargeIcon;
        mike['IconComponent'] = report;
        report = 'status-danger';
        mike['iconColor'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentError'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'MOBILE_ADVANCED_VOICE_ACTIVITY_CPU_OVERUSE';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.zz1Tfn;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 24;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 25;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.XLargeIcon;
        mike['IconComponent'] = report;
        report = 'status-danger';
        mike['iconColor'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentVoiceActivityDetectionError'] = tango;
    tango = function(argFoo) {
        romeo = argFoo;
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = global;
        oscar = oscar.HermesInternal;
        verify = oscar.concat;
        oscar = 'ROLE_ID_COPIED-';
        oscar = verify.bind(oscar)(romeo);
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        yankee = verify.intl;
        offset = yankee.formatToPlainString;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        verify = report.iOWpeH;
        report = {};
        report['role'] = romeo;
        report = offset.bind(yankee)(verify, report);
        mike['content'] = report;
        report = 14;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 15;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.CopyIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['roleIdCopied'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'ENABLE_COMMUNITY_MODAL_REQUIREMENT_SATISFIED_TOOLTIP';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.PHjrpq;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 21;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 22;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.CheckmarkLargeIcon;
        mike['IconComponent'] = report;
        report = 'status-positive';
        mike['iconColor'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['communityRequirementSatisfied'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'GUILD_SETTINGS_COMMUNITY_ADMINISTRATOR_ONLY';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.pjG+T0;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 26;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 27;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.CircleInformationIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['communityAdminOnly'] = tango;
    tango = function(argFoo) {
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            mike = argFoo;
            report = mike.notClaimed;
            zulu = mike.notEmailVerified;
            tango = mike.notPhoneVerified;
            entity = mike.newAccount;
            mike = mike.newMember;
            if(report) { _fun00004_ip = 350; continue _fun00003 }
 39:
            if(tango) { _fun00004_ip = 288; continue _fun00003 }
 45:
            if(zulu) { _fun00004_ip = 226; continue _fun00003 }
 51:
            if(mike) { _fun00004_ip = 144; continue _fun00003 }
 54:
            report = null;
            if(!entity) { _fun00004_ip = 410; continue _fun00003 }
 62:
            golf = _closure1_slot0;
            options = _closure1_slot2;
            entity = 2;
            zulu = options[entity];
            mike = undefined;
            zulu = golf.bind(mike)(zulu);
            tango = zulu.intl;
            zulu = tango.formatToPlainString;
            entity = options[entity];
            entity = golf.bind(mike)(entity);
            entity = entity.t;
            mike = entity.sncw4+;
            entity = {};
            oscar = _closure1_slot3;
            oscar = oscar.ACCOUNT_AGE;
            entity['min'] = oscar;
            report = zulu.bind(tango)(mike, entity);
            _fun00004_ip = 410; continue _fun00003;
 144:
            golf = _closure1_slot0;
            options = _closure1_slot2;
            entity = 2;
            zulu = options[entity];
            mike = undefined;
            zulu = golf.bind(mike)(zulu);
            tango = zulu.intl;
            zulu = tango.formatToPlainString;
            entity = options[entity];
            entity = golf.bind(mike)(entity);
            entity = entity.t;
            mike = entity.v1ktYW;
            entity = {};
            oscar = _closure1_slot3;
            oscar = oscar.MEMBER_AGE;
            entity['min'] = oscar;
            report = zulu.bind(tango)(mike, entity);
            _fun00004_ip = 410; continue _fun00003;
 226:
            oscar = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 2;
            mike = golf[entity];
            tango = undefined;
            mike = oscar.bind(tango)(mike);
            zulu = mike.intl;
            mike = zulu.string;
            entity = golf[entity];
            entity = oscar.bind(tango)(entity);
            entity = entity.t;
            entity = entity.vdSOp6;
            report = mike.bind(zulu)(entity);
            _fun00004_ip = 410; continue _fun00003;
 288:
            oscar = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 2;
            mike = golf[entity];
            tango = undefined;
            mike = oscar.bind(tango)(mike);
            zulu = mike.intl;
            mike = zulu.string;
            entity = golf[entity];
            entity = oscar.bind(tango)(entity);
            entity = entity.t;
            entity = entity.vW8iUF;
            report = mike.bind(zulu)(entity);
            _fun00004_ip = 410; continue _fun00003;
 350:
            oscar = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 2;
            mike = golf[entity];
            tango = undefined;
            mike = oscar.bind(tango)(mike);
            zulu = mike.intl;
            mike = zulu.string;
            entity = golf[entity];
            entity = oscar.bind(tango)(entity);
            entity = entity.t;
            entity = entity.IRxUlJ;
            report = mike.bind(zulu)(entity);
 410:
            entity = null;
            if(!(entity != report)) { _fun00004_ip = 511; continue _fun00003 }
 416:
            options = _closure1_slot1;
            golf = _closure1_slot2;
            entity = 1;
            entity = golf[entity];
            oscar = undefined;
            zulu = options.bind(oscar)(entity);
            mike = zulu.open;
            entity = {};
            verify = 'UNVERIFIED_VOICE_GATE';
            entity['key'] = verify;
            entity['content'] = report;
            report = 26;
            report = golf[report];
            report = options.bind(oscar)(report);
            entity['icon'] = report;
            report = _closure1_slot0;
            tango = 27;
            tango = golf[tango];
            tango = report.bind(oscar)(tango);
            tango = tango.CircleInformationIcon;
            entity['IconComponent'] = tango;
            entity = mike.bind(zulu)(entity);
 511:
            entity = undefined;
            return entity;
        }
    };
    zulu['unverifiedVoiceGate'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'TRANSFER_OWNERSHIP_PROTECTED_GUILD';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.wDkfrK;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 26;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 27;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.CircleInformationIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['transferOwnershipProtected'] = tango;
    tango = function(argFoo) {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'PRIVATE_CHANNEL_MEMBERS_REMOVED';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        yankee = verify.intl;
        offset = yankee.formatToPlainString;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        verify = report.vJGtXV;
        report = {};
        romeo = argFoo;
        report['name'] = romeo;
        report = offset.bind(yankee)(verify, report);
        mike['content'] = report;
        report = 28;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 29;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.TrashIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['memberOrRoleRemovedToast'] = tango;
    tango = function(argFoo, argBar) {
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            oscar = argFoo;
            golf = argBar;
            entity = 0;
            if(!(oscar > entity)) { _fun00006_ip = 19; continue _fun00005 }
 12:
            if(!(!(golf > entity))) { _fun00006_ip = 176; continue _fun00005 }
 19:
            if(!(!(oscar > entity))) { _fun00006_ip = 107; continue _fun00005 }
 23:
            entity = golf > entity;
            options = undefined;
            report = undefined;
            if(!entity) { _fun00006_ip = 236; continue _fun00005 }
 37:
            mike = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 2;
            zulu = verify[entity];
            zulu = mike.bind(options)(zulu);
            tango = zulu.intl;
            zulu = tango.formatToPlainString;
            entity = verify[entity];
            entity = mike.bind(options)(entity);
            entity = entity.t;
            mike = entity.yvV5YW;
            entity = {};
            entity['count'] = golf;
            report = zulu.bind(tango)(mike, entity);
            _fun00006_ip = 236; continue _fun00005;
 107:
            golf = _closure1_slot0;
            options = _closure1_slot2;
            entity = 2;
            zulu = options[entity];
            mike = undefined;
            zulu = golf.bind(mike)(zulu);
            tango = zulu.intl;
            zulu = tango.formatToPlainString;
            entity = options[entity];
            entity = golf.bind(mike)(entity);
            entity = entity.t;
            mike = entity.yM/8JC;
            entity = {};
            entity['count'] = oscar;
            report = zulu.bind(tango)(mike, entity);
            _fun00006_ip = 236; continue _fun00005;
 176:
            oscar = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 2;
            mike = golf[entity];
            tango = undefined;
            mike = oscar.bind(tango)(mike);
            zulu = mike.intl;
            mike = zulu.string;
            entity = golf[entity];
            entity = oscar.bind(tango)(entity);
            entity = entity.t;
            entity = entity.fRD8wc;
            report = mike.bind(zulu)(entity);
 236:
            entity = null;
            if(!(entity != report)) { _fun00006_ip = 348; continue _fun00005 }
 242:
            options = _closure1_slot1;
            golf = _closure1_slot2;
            entity = 1;
            entity = golf[entity];
            oscar = undefined;
            zulu = options.bind(oscar)(entity);
            mike = zulu.open;
            entity = {};
            verify = 'MEMBER_OR_ROLE_ADDED';
            entity['key'] = verify;
            entity['content'] = report;
            report = 21;
            report = golf[report];
            report = options.bind(oscar)(report);
            entity['icon'] = report;
            report = _closure1_slot0;
            tango = 22;
            tango = golf[tango];
            tango = report.bind(oscar)(tango);
            tango = tango.CheckmarkLargeIcon;
            entity['IconComponent'] = tango;
            tango = 'status-positive';
            entity['iconColor'] = tango;
            entity = mike.bind(zulu)(entity);
 348:
            entity = undefined;
            return entity;
        }
    };
    zulu['memberOrRoleAddedToast'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'ROLE_PERMISSION_TEMPLATE_SELECT_CONFIRMATION_TOAST';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.e6xHUV;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 21;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 22;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.CheckmarkLargeIcon;
        mike['IconComponent'] = report;
        report = 'status-positive';
        mike['iconColor'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['roleTemplateAppliedToast'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'ROLE_CREATED_TOAST';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.kubT4e;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 21;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 22;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.CheckmarkLargeIcon;
        mike['IconComponent'] = report;
        report = 'status-positive';
        mike['iconColor'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['roleCreatedToast'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'ROLE_CREATION_FAILED';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.hbr6Ul;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 24;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 25;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.XLargeIcon;
        mike['IconComponent'] = report;
        report = 'status-danger';
        mike['iconColor'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['roleCreateFailedToast'] = tango;
    tango = function(argFoo) {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'FAILED';
        mike['key'] = oscar;
        oscar = 24;
        oscar = golf[oscar];
        oscar = options.bind(entity)(oscar);
        mike['icon'] = oscar;
        oscar = argFoo;
        mike['content'] = oscar;
        oscar = _closure1_slot0;
        report = 25;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.XLargeIcon;
        mike['IconComponent'] = report;
        report = 'status-danger';
        mike['iconColor'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentFailedToast'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'TOAST_COMMAND_COPIED';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.U989cn;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 10;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 11;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.LinkIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentCommandCopied'] = tango;
    tango = function(argFoo, argBar) {
        entity = argBar;
        var _closure2_slot0 = entity;
        zulu = _closure1_slot1;
        offset = _closure1_slot2;
        entity = 1;
        mike = offset[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        golf = 'GUILD_IDENTITY_BIO_TOAST';
        mike['key'] = golf;
        golf = _closure1_slot0;
        oscar = 2;
        options = offset[oscar];
        options = golf.bind(entity)(options);
        verify = options.intl;
        options = verify.formatToPlainString;
        oscar = offset[oscar];
        oscar = golf.bind(entity)(oscar);
        oscar = oscar.t;
        golf = oscar.pOy2tr;
        oscar = {};
        offset = argFoo;
        oscar['guildName'] = offset;
        oscar = options.bind(verify)(golf, oscar);
        mike['content'] = oscar;
        report = function() { // Original name: icon
            entity = _closure2_slot0;
            return entity;
        };
        mike['icon'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentGuildMemberBio'] = tango;
    tango = function(argFoo, argBar) {
        entity = argBar;
        var _closure2_slot0 = entity;
        zulu = _closure1_slot1;
        offset = _closure1_slot2;
        entity = 1;
        mike = offset[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        golf = 'GUILD_IDENTITY_PRONOUNS_TOAST';
        mike['key'] = golf;
        golf = _closure1_slot0;
        oscar = 2;
        options = offset[oscar];
        options = golf.bind(entity)(options);
        verify = options.intl;
        options = verify.formatToPlainString;
        oscar = offset[oscar];
        oscar = golf.bind(entity)(oscar);
        oscar = oscar.t;
        golf = oscar.gPVLS0;
        oscar = {};
        offset = argFoo;
        oscar['guildName'] = offset;
        oscar = options.bind(verify)(golf, oscar);
        mike['content'] = oscar;
        report = function() { // Original name: icon
            entity = _closure2_slot0;
            return entity;
        };
        mike['icon'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentGuildMemberPronouns'] = tango;
    tango = function() {
        zulu = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 1;
        mike = verify[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'USER_POPOUT_PRONOUNS';
        mike['key'] = oscar;
        options = _closure1_slot0;
        report = 2;
        oscar = verify[report];
        oscar = options.bind(entity)(oscar);
        golf = oscar.intl;
        oscar = golf.string;
        report = verify[report];
        report = options.bind(entity)(report);
        report = report.t;
        report = report.1w6dr6;
        report = oscar.bind(golf)(report);
        mike['content'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentUserPronouns'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = _closure1_slot0;
        report = 30;
        report = golf[report];
        verify = oscar.bind(entity)(report);
        report = verify.v4;
        offset = report.bind(verify)();
        report = global;
        report = report.HermesInternal;
        verify = report.concat;
        report = 'COPIED_TEXT_';
        report = verify.bind(report)(offset);
        mike['key'] = report;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.mGZ66O;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 14;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 15;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.CopyIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentCopiedToClipboard'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'GUILD_ROLE_SUBSCRIPTION_MANAGE_SUBSCRIPTION_PAGE_TRIAL_PRICE_INFO';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report./q6fpa;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 26;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 27;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.CircleInformationIcon;
        mike['IconComponent'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['presentGuildRoleSubscriptionTrialTierMonthCost'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'VOICE_MESSAGES_RECORDING_FAILED';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.H03AqK;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 24;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 25;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.XLargeIcon;
        mike['IconComponent'] = report;
        report = 'status-danger';
        mike['iconColor'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['showVoiceRecordingFailed'] = tango;
    tango = function() {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'GROUP_DM_INVITE_FULL_MAIN';
        mike['key'] = oscar;
        oscar = _closure1_slot0;
        report = 2;
        verify = golf[report];
        verify = oscar.bind(entity)(verify);
        offset = verify.intl;
        verify = offset.string;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.t;
        report = report.OtTQDw;
        report = verify.bind(offset)(report);
        mike['content'] = report;
        report = 24;
        report = golf[report];
        report = options.bind(entity)(report);
        mike['icon'] = report;
        report = 25;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.XLargeIcon;
        mike['IconComponent'] = report;
        report = 'status-danger';
        mike['iconColor'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['showMaxGroupMembers'] = tango;
    tango = function() {
        golf = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 1;
        mike = verify[entity];
        entity = undefined;
        tango = golf.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'TRANSFER_OWNERSHIP_SUCCESS';
        mike['key'] = oscar;
        oscar = 21;
        oscar = verify[oscar];
        oscar = golf.bind(entity)(oscar);
        mike['icon'] = oscar;
        options = _closure1_slot0;
        report = 2;
        oscar = verify[report];
        oscar = options.bind(entity)(oscar);
        golf = oscar.intl;
        oscar = golf.string;
        report = verify[report];
        report = options.bind(entity)(report);
        report = report.t;
        report = report.2Eyydn;
        report = oscar.bind(golf)(report);
        mike['content'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['showTransferOwnershipSuccess'] = tango;
    mike = function(argFoo, argBar) {
        options = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 1;
        mike = golf[entity];
        entity = undefined;
        tango = options.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = argFoo;
        mike['key'] = oscar;
        oscar = argBar;
        mike['content'] = oscar;
        oscar = 31;
        oscar = golf[oscar];
        oscar = options.bind(entity)(oscar);
        mike['icon'] = oscar;
        oscar = _closure1_slot0;
        report = 32;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.CircleCheckIcon;
        mike['IconComponent'] = report;
        report = 'status-positive';
        mike['iconColor'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['showSafetySuccess'] = mike;
    return entity;
})();