// app/modules/application_commands/native/ApplicationSectionHeader.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    romeo = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = golf;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    entity = 0;
    report = golf[entity];
    mike = argCorge;
    entity = undefined;
    mike = mike.bind(entity)(report);
    mike = 1;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.View;
    var _closure1_slot3 = mike;
    mike = 2;
    report = golf[mike];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot4 = report;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot5 = mike;
    mike = 3;
    mike = golf[mike];
    verify = oscar.bind(entity)(mike);
    options = verify.createStyles;
    report = {};
    offset = {'flexDirection': 'row', 'alignItems': 'center', 'height': 32, 'backgroundColor': null, 'paddingHorizontal': 16};
    mike = 32;
    yankee = 4;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = foxtrot;
    report['applicationHeaderWrapper'] = offset;
    offset = {'width': 16, 'height': 16, 'borderRadius': null, 'marginRight': 8};
    yankee = golf[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.sm;
    offset['borderRadius'] = yankee;
    report['applicationIcon'] = offset;
    report = options.bind(verify)(report);
    var _closure1_slot6 = report;
    report = 9;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/application_commands/native/ApplicationSectionHeader.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: _default
        _fun100923: for(var _fun100923_ip = 0; ; ) switch(_fun100923_ip) {
 0:
            entity = argFoo;
            verify = entity.section;
            entity = _closure1_slot6;
            tango = undefined;
            romeo = entity.bind(tango)();
            golf = _closure1_slot0;
            foxtrot = _closure1_slot2;
            entity = 5;
            entity = foxtrot[entity];
            mike = golf.bind(tango)(entity);
            entity = mike.getApplicationCommandsIconSource;
            yankee = entity.bind(mike)(verify);
            zulu = _closure1_slot5;
            mike = _closure1_slot3;
            entity = {};
            report = romeo.applicationHeaderWrapper;
            entity['style'] = report;
            report = 6;
            options = foxtrot[report];
            options = golf.bind(tango)(options);
            offset = options.intl;
            options = offset.formatToPlainString;
            report = foxtrot[report];
            report = golf.bind(tango)(report);
            report = report.t;
            golf = report.Ocw/sL;
            report = {};
            foxtrot = verify.name;
            report['applicationName'] = foxtrot;
            report = options.bind(offset)(golf, report);
            entity['accessibilityLabel'] = report;
            report = null;
            golf = report != yankee;
            if(!golf) { _fun100923_ip = 191; continue _fun100923 }
 145:
            offset = _closure1_slot4;
            options = _closure1_slot1;
            foxtrot = _closure1_slot2;
            report = 7;
            report = foxtrot[report];
            options = options.bind(tango)(report);
            report = {};
            romeo = romeo.applicationIcon;
            report['style'] = romeo;
            report['source'] = yankee;
            golf = offset.bind(tango)(options, report);
 191:
            report = new Array(2);
            report[0] = golf;
            options = _closure1_slot4;
            golf = _closure1_slot0;
            offset = _closure1_slot2;
            oscar = 8;
            oscar = offset[oscar];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.Text;
            oscar = {'variant': 'eyebrow', 'color': 'interactive-normal'};
            verify = verify.name;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = tango;
    zulu['APPLICATION_SECTION_HEADER_HEIGHT'] = mike;
    return entity;
})();