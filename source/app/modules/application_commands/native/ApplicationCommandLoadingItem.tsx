// app/modules/application_commands/native/ApplicationCommandLoadingItem.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot0 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    offset = tangon.AUTOCOMPLETE_ROW_HEIGHT;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot1 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot2 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flexDirection': 'row', 'paddingVertical': 4, 'paddingHorizontal': 16, 'alignItems': 'center'};
    verify['height'] = offset;
    tangon['applicationCommandLoadingItem'] = verify;
    verify = {'flexDirection': 'column', 'width': '75%', 'height': '100%', 'justifyContent': 'space-between'};
    tangon['applicationCommandLoadingLeftWrapper'] = verify;
    verify = {'backgroundColor': null, 'height': 16, 'borderRadius': 16, 'width': '20%'};
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_ACCENT;
    verify['backgroundColor'] = romeon;
    tangon['applicationCommandLoadingName'] = verify;
    verify = {'backgroundColor': null, 'height': 16, 'borderRadius': 16, 'width': '80%'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeon;
    tangon['applicationCommandLoadingDescription'] = verify;
    verify = {'backgroundColor': null, 'paddingLeft': 16, 'width': '25%', 'marginLeft': 'auto', 'height': 16, 'borderRadius': 16};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_ACCENT;
    verify['backgroundColor'] = offset;
    tangon['applicationCommandLoadingSectionName'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/application_commands/native/ApplicationCommandLoadingItem.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: _default
        entity = _closure1_slot3;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot2;
        michal = _closure1_slot0;
        entity = {};
        report = option.applicationCommandLoadingItem;
        entity['style'] = report;
        report = {};
        golfie = option.applicationCommandLoadingLeftWrapper;
        report['style'] = golfie;
        golfie = _closure1_slot1;
        oscard = {};
        verify = option.applicationCommandLoadingName;
        oscard['style'] = verify;
        verify = golfie.bind(tangon)(michal, oscard);
        oscard = new Array(2);
        oscard[0] = verify;
        verify = {};
        offset = option.applicationCommandLoadingDescription;
        verify['style'] = offset;
        verify = golfie.bind(tangon)(michal, verify);
        oscard[1] = verify;
        report['children'] = oscard;
        oscard = zuuluu.bind(tangon)(michal, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = {};
        option = option.applicationCommandLoadingSectionName;
        oscard['style'] = option;
        oscard = golfie.bind(tangon)(michal, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();