// app/modules/people/native/AcceptRequestConfirmationModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'textAlign': 'center', 'alignItems': 'center'};
    offset = 'center';
    yankee = 4;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_8;
    verify['gap'] = yankee;
    tango['bodyText'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tango['text'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/people/native/AcceptRequestConfirmationModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: AcceptRequestConfirmationModal
        entity = argFoo;
        oscar = entity.onCancel;
        golf = entity.onConfirm;
        entity = _closure1_slot6;
        tango = undefined;
        romeo = entity.bind(tango)();
        zulu = _closure1_slot4;
        mike = _closure1_slot1;
        kilo = _closure1_slot2;
        entity = 5;
        entity = kilo[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        backup = _closure1_slot0;
        yankee = 6;
        options = kilo[yankee];
        options = backup.bind(tango)(options);
        offset = options.intl;
        verify = offset.string;
        options = kilo[yankee];
        options = backup.bind(tango)(options);
        options = options.t;
        options = options.MMlhsr;
        options = verify.bind(offset)(options);
        entity['confirmText'] = options;
        options = kilo[yankee];
        options = backup.bind(tango)(options);
        offset = options.intl;
        verify = offset.string;
        options = kilo[yankee];
        options = backup.bind(tango)(options);
        options = options.t;
        options = options.ETE/oK;
        options = verify.bind(offset)(options);
        entity['cancelText'] = options;
        entity['onConfirm'] = golf;
        entity['onCancel'] = oscar;
        golf = _closure1_slot5;
        oscar = _closure1_slot3;
        report = {};
        options = romeo.bodyText;
        report['style'] = options;
        verify = 7;
        options = kilo[verify];
        options = backup.bind(tango)(options);
        offset = options.Text;
        options = {'variant': 'heading-lg/bold', 'color': 'text-primary'};
        foxtrot = romeo.text;
        options['style'] = foxtrot;
        foxtrot = kilo[yankee];
        foxtrot = backup.bind(tango)(foxtrot);
        output = foxtrot.intl;
        sizing = output.string;
        foxtrot = kilo[yankee];
        foxtrot = backup.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.eJzSDQ;
        foxtrot = sizing.bind(output)(foxtrot);
        options['children'] = foxtrot;
        offset = zulu.bind(tango)(offset, options);
        options = new Array(2);
        options[0] = offset;
        verify = kilo[verify];
        verify = backup.bind(tango)(verify);
        offset = verify.Text;
        verify = {'variant': 'text-md/medium', 'color': 'text-secondary'};
        romeo = romeo.text;
        verify['style'] = romeo;
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        yankee = kilo[yankee];
        yankee = backup.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.GB4jU1;
        yankee = romeo.bind(foxtrot)(yankee);
        verify['children'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[1] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();