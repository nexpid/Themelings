// app/modules/people/native/AcceptRequestConfirmationModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'textAlign': 'center', 'alignItems': 'center'};
    offset = 'center';
    yankee = 4;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_8;
    verify['gap'] = yankee;
    tangon['bodyText'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tangon['text'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/people/native/AcceptRequestConfirmationModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AcceptRequestConfirmationModal
        entity = argFoo;
        oscard = entity.onCancel;
        entity = entity.onConfirm;
        var _closure2_slot0 = entity;
        entity = _closure1_slot6;
        tangon = undefined;
        romeon = entity.bind(tangon)();
        zuuluu = _closure1_slot4;
        michal = _closure1_slot1;
        kiloes = _closure1_slot2;
        entity = 5;
        entity = kiloes[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        backup = _closure1_slot0;
        yankee = 6;
        option = kiloes[yankee];
        option = backup.bind(tangon)(option);
        offset = option.intl;
        verify = offset.string;
        option = kiloes[yankee];
        option = backup.bind(tangon)(option);
        option = option.t;
        option = option.MMlhsr;
        option = verify.bind(offset)(option);
        entity['confirmText'] = option;
        option = kiloes[yankee];
        option = backup.bind(tangon)(option);
        offset = option.intl;
        verify = offset.string;
        option = kiloes[yankee];
        option = backup.bind(tangon)(option);
        option = option.t;
        option = option.ETE/oK;
        option = verify.bind(offset)(option);
        entity['cancelText'] = option;
        golfie = function() { // Original name: onConfirm
            michal = _closure2_slot0;
            entity = undefined;
            michal = michal.bind(entity)();
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            michal = 7;
            michal = tangon[michal];
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.close;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        entity['onConfirm'] = golfie;
        entity['onCancel'] = oscard;
        golfie = _closure1_slot5;
        oscard = _closure1_slot3;
        report = {};
        option = romeon.bodyText;
        report['style'] = option;
        verify = 8;
        option = kiloes[verify];
        option = backup.bind(tangon)(option);
        offset = option.Text;
        option = {'variant': 'heading-lg/bold', 'color': 'text-primary'};
        foxtra = romeon.text;
        option['style'] = foxtra;
        foxtra = kiloes[yankee];
        foxtra = backup.bind(tangon)(foxtra);
        output = foxtra.intl;
        sizing = output.string;
        foxtra = kiloes[yankee];
        foxtra = backup.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.eJzSDQ;
        foxtra = sizing.bind(output)(foxtra);
        option['children'] = foxtra;
        offset = zuuluu.bind(tangon)(offset, option);
        option = new Array(2);
        option[0] = offset;
        verify = kiloes[verify];
        verify = backup.bind(tangon)(verify);
        offset = verify.Text;
        verify = {'variant': 'text-md/medium', 'color': 'text-secondary'};
        romeon = romeon.text;
        verify['style'] = romeon;
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        yankee = kiloes[yankee];
        yankee = backup.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.GB4jU1;
        yankee = romeon.bind(foxtra)(yankee);
        verify['children'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[1] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();