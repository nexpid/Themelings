// app/modules/self_remediation_feedback/Constants.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    golfie = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, tangon);
    report = {};
    entity = 'too_many_notifications';
    report['TOO_MANY_NOTIFICATIONS'] = entity;
    entity = 'temporary_break';
    report['TEMPORARY_BREAK'] = entity;
    entity = 'annoying';
    report['ANNOYING'] = entity;
    entity = 'unsafe';
    report['UNSAFE'] = entity;
    entity = 'spam';
    report['SPAM'] = entity;
    entity = 'other';
    report['OTHER'] = entity;
    var _closure1_slot2 = report;
    tangon = {};
    entity = 'confusion';
    tangon['CONFUSION'] = entity;
    entity = 'does_not_achieve_wants';
    tangon['DOES_NOT_ACHIEVE_WANTS'] = entity;
    entity = 'hard_to_access';
    tangon['HARD_TO_ACCESS'] = entity;
    entity = 'something_else';
    tangon['SOMETHING_ELSE'] = entity;
    var _closure1_slot3 = tangon;
    entity = 1;
    oscard = oscard[entity];
    entity = undefined;
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/self_remediation_feedback/Constants.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['MuteFeedbackReasons'] = report;
    report = function() { // Original name: getMuteFeedbackOptions
        michal = {};
        tangon = _closure1_slot2;
        zuuluu = tangon.TOO_MANY_NOTIFICATIONS;
        michal['value'] = zuuluu;
        golfie = _closure1_slot0;
        option = _closure1_slot1;
        zuuluu = 0;
        entity = option[zuuluu];
        oscard = undefined;
        entity = golfie.bind(oscard)(entity);
        verify = entity.intl;
        report = verify.string;
        entity = option[zuuluu];
        entity = golfie.bind(oscard)(entity);
        entity = entity.t;
        entity = entity.bQHhT0;
        entity = report.bind(verify)(entity);
        michal['label'] = entity;
        entity = new Array(6);
        entity[0] = michal;
        michal = {};
        report = tangon.TEMPORARY_BREAK;
        michal['value'] = report;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        offset = report.intl;
        verify = offset.string;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        report = report.t;
        report = report.OuPkvL;
        report = verify.bind(offset)(report);
        michal['label'] = report;
        entity[1] = michal;
        michal = {};
        report = tangon.ANNOYING;
        michal['value'] = report;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        offset = report.intl;
        verify = offset.string;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        report = report.t;
        report = report.3kmAMD;
        report = verify.bind(offset)(report);
        michal['label'] = report;
        entity[2] = michal;
        michal = {};
        report = tangon.UNSAFE;
        michal['value'] = report;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        offset = report.intl;
        verify = offset.string;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        report = report.t;
        report = report.nmW7jI;
        report = verify.bind(offset)(report);
        michal['label'] = report;
        entity[3] = michal;
        michal = {};
        report = tangon.SPAM;
        michal['value'] = report;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        offset = report.intl;
        verify = offset.string;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        report = report.t;
        report = report.cCPYjo;
        report = verify.bind(offset)(report);
        michal['label'] = report;
        entity[4] = michal;
        michal = {};
        tangon = tangon.OTHER;
        michal['value'] = tangon;
        tangon = option[zuuluu];
        tangon = golfie.bind(oscard)(tangon);
        report = tangon.intl;
        tangon = report.string;
        zuuluu = option[zuuluu];
        zuuluu = golfie.bind(oscard)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.7ZIIJy;
        zuuluu = tangon.bind(report)(zuuluu);
        michal['label'] = zuuluu;
        entity[5] = michal;
        return entity;
    };
    zuuluu['getMuteFeedbackOptions'] = report;
    zuuluu['BlockUserFeedbackReasons'] = tangon;
    michal = function() { // Original name: getBlockUserFeedbackOptions
        michal = {};
        tangon = _closure1_slot3;
        zuuluu = tangon.CONFUSION;
        michal['value'] = zuuluu;
        golfie = _closure1_slot0;
        option = _closure1_slot1;
        zuuluu = 0;
        entity = option[zuuluu];
        oscard = undefined;
        entity = golfie.bind(oscard)(entity);
        verify = entity.intl;
        report = verify.string;
        entity = option[zuuluu];
        entity = golfie.bind(oscard)(entity);
        entity = entity.t;
        entity = entity.64Oph4;
        entity = report.bind(verify)(entity);
        michal['label'] = entity;
        entity = new Array(4);
        entity[0] = michal;
        michal = {};
        report = tangon.DOES_NOT_ACHIEVE_WANTS;
        michal['value'] = report;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        offset = report.intl;
        verify = offset.string;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        report = report.t;
        report = report.wH5R/v;
        report = verify.bind(offset)(report);
        michal['label'] = report;
        entity[1] = michal;
        michal = {};
        report = tangon.HARD_TO_ACCESS;
        michal['value'] = report;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        offset = report.intl;
        verify = offset.string;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        report = report.t;
        report = report.4uZBRk;
        report = verify.bind(offset)(report);
        michal['label'] = report;
        entity[2] = michal;
        michal = {};
        tangon = tangon.SOMETHING_ELSE;
        michal['value'] = tangon;
        tangon = option[zuuluu];
        tangon = golfie.bind(oscard)(tangon);
        report = tangon.intl;
        tangon = report.string;
        zuuluu = option[zuuluu];
        zuuluu = golfie.bind(oscard)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.YicFbG;
        zuuluu = tangon.bind(report)(zuuluu);
        michal['label'] = zuuluu;
        entity[3] = michal;
        return entity;
    };
    zuuluu['getBlockUserFeedbackOptions'] = michal;
    return entity;
})();