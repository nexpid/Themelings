// app/modules/self_remediation_feedback/Constants.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    option = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = option;
    var _closure1_slot1 = golfie;
    entity = global;
    oscard = entity.Object;
    report = oscard.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscard)(zuuluu, entity, tangon);
    oscard = {};
    entity = 'too_many_notifications';
    oscard['TOO_MANY_NOTIFICATIONS'] = entity;
    entity = 'temporary_break';
    oscard['TEMPORARY_BREAK'] = entity;
    entity = 'annoying';
    oscard['ANNOYING'] = entity;
    entity = 'unsafe';
    oscard['UNSAFE'] = entity;
    entity = 'spam';
    oscard['SPAM'] = entity;
    entity = 'other';
    oscard['OTHER'] = entity;
    var _closure1_slot2 = oscard;
    report = {};
    yankee = 'confusion';
    report['CONFUSION'] = yankee;
    offset = 'does_not_achieve_wants';
    report['DOES_NOT_ACHIEVE_WANTS'] = offset;
    verify = 'hard_to_access';
    report['HARD_TO_ACCESS'] = verify;
    entity = 'something_else';
    report['SOMETHING_ELSE'] = entity;
    var _closure1_slot3 = report;
    tangon = {};
    tangon['CONFUSION'] = yankee;
    tangon['DOES_NOT_ACHIEVE_WANTS'] = offset;
    tangon['HARD_TO_ACCESS'] = verify;
    tangon['SOMETHING_ELSE'] = entity;
    var _closure1_slot4 = tangon;
    entity = 1;
    golfie = golfie[entity];
    entity = undefined;
    verify = option.bind(entity)(golfie);
    option = verify.fileFinishedImporting;
    golfie = 'modules/self_remediation_feedback/Constants.tsx';
    golfie = option.bind(verify)(golfie);
    zuuluu['MuteFeedbackReasons'] = oscard;
    oscard = function() { // Original name: getMuteFeedbackOptions
        michal = {};
        tangon = _closure1_slot2;
        zuuluu = tangon.TOO_MANY_NOTIFICATIONS;
        michal['value'] = zuuluu;
        golfie = _closure1_slot0;
        option = _closure1_slot1;
        zuuluu = 0;
        entity = option[zuuluu];
        oscard = undefined;
        entity = golfie.bind(oscard)(entity);
        verify = entity.intl;
        report = verify.string;
        entity = option[zuuluu];
        entity = golfie.bind(oscard)(entity);
        entity = entity.t;
        entity = entity.bQHhT0;
        entity = report.bind(verify)(entity);
        michal['label'] = entity;
        entity = new Array(6);
        entity[0] = michal;
        michal = {};
        report = tangon.TEMPORARY_BREAK;
        michal['value'] = report;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        offset = report.intl;
        verify = offset.string;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        report = report.t;
        report = report.OuPkvL;
        report = verify.bind(offset)(report);
        michal['label'] = report;
        entity[1] = michal;
        michal = {};
        report = tangon.ANNOYING;
        michal['value'] = report;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        offset = report.intl;
        verify = offset.string;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        report = report.t;
        report = report.3kmAMD;
        report = verify.bind(offset)(report);
        michal['label'] = report;
        entity[2] = michal;
        michal = {};
        report = tangon.UNSAFE;
        michal['value'] = report;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        offset = report.intl;
        verify = offset.string;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        report = report.t;
        report = report.nmW7jI;
        report = verify.bind(offset)(report);
        michal['label'] = report;
        entity[3] = michal;
        michal = {};
        report = tangon.SPAM;
        michal['value'] = report;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        offset = report.intl;
        verify = offset.string;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        report = report.t;
        report = report.cCPYjo;
        report = verify.bind(offset)(report);
        michal['label'] = report;
        entity[4] = michal;
        michal = {};
        tangon = tangon.OTHER;
        michal['value'] = tangon;
        tangon = option[zuuluu];
        tangon = golfie.bind(oscard)(tangon);
        report = tangon.intl;
        tangon = report.string;
        zuuluu = option[zuuluu];
        zuuluu = golfie.bind(oscard)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.7ZIIJy;
        zuuluu = tangon.bind(report)(zuuluu);
        michal['label'] = zuuluu;
        entity[5] = michal;
        return entity;
    };
    zuuluu['getMuteFeedbackOptions'] = oscard;
    zuuluu['BlockUserFeedbackReasons'] = report;
    report = function() { // Original name: getBlockUserFeedbackOptions
        michal = {};
        tangon = _closure1_slot3;
        zuuluu = tangon.CONFUSION;
        michal['value'] = zuuluu;
        golfie = _closure1_slot0;
        option = _closure1_slot1;
        zuuluu = 0;
        entity = option[zuuluu];
        oscard = undefined;
        entity = golfie.bind(oscard)(entity);
        verify = entity.intl;
        report = verify.string;
        entity = option[zuuluu];
        entity = golfie.bind(oscard)(entity);
        entity = entity.t;
        entity = entity.64Oph4;
        entity = report.bind(verify)(entity);
        michal['label'] = entity;
        entity = new Array(4);
        entity[0] = michal;
        michal = {};
        report = tangon.DOES_NOT_ACHIEVE_WANTS;
        michal['value'] = report;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        offset = report.intl;
        verify = offset.string;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        report = report.t;
        report = report.wH5R/v;
        report = verify.bind(offset)(report);
        michal['label'] = report;
        entity[1] = michal;
        michal = {};
        report = tangon.HARD_TO_ACCESS;
        michal['value'] = report;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        offset = report.intl;
        verify = offset.string;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        report = report.t;
        report = report.4uZBRk;
        report = verify.bind(offset)(report);
        michal['label'] = report;
        entity[2] = michal;
        michal = {};
        tangon = tangon.SOMETHING_ELSE;
        michal['value'] = tangon;
        tangon = option[zuuluu];
        tangon = golfie.bind(oscard)(tangon);
        report = tangon.intl;
        tangon = report.string;
        zuuluu = option[zuuluu];
        zuuluu = golfie.bind(oscard)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.YicFbG;
        zuuluu = tangon.bind(report)(zuuluu);
        michal['label'] = zuuluu;
        entity[3] = michal;
        return entity;
    };
    zuuluu['getBlockUserFeedbackOptions'] = report;
    zuuluu['IgnoreUserFeedbackReasons'] = tangon;
    michal = function() { // Original name: getIgnoreUserFeedbackOptions
        michal = {};
        tangon = _closure1_slot4;
        zuuluu = tangon.CONFUSION;
        michal['value'] = zuuluu;
        golfie = _closure1_slot0;
        option = _closure1_slot1;
        zuuluu = 0;
        entity = option[zuuluu];
        oscard = undefined;
        entity = golfie.bind(oscard)(entity);
        verify = entity.intl;
        report = verify.string;
        entity = option[zuuluu];
        entity = golfie.bind(oscard)(entity);
        entity = entity.t;
        entity = entity.IumZmp;
        entity = report.bind(verify)(entity);
        michal['label'] = entity;
        entity = new Array(4);
        entity[0] = michal;
        michal = {};
        report = tangon.DOES_NOT_ACHIEVE_WANTS;
        michal['value'] = report;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        offset = report.intl;
        verify = offset.string;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        report = report.t;
        report = report.mXkYyc;
        report = verify.bind(offset)(report);
        michal['label'] = report;
        entity[1] = michal;
        michal = {};
        report = tangon.HARD_TO_ACCESS;
        michal['value'] = report;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        offset = report.intl;
        verify = offset.string;
        report = option[zuuluu];
        report = golfie.bind(oscard)(report);
        report = report.t;
        report = report.eg1hVF;
        report = verify.bind(offset)(report);
        michal['label'] = report;
        entity[2] = michal;
        michal = {};
        tangon = tangon.SOMETHING_ELSE;
        michal['value'] = tangon;
        tangon = option[zuuluu];
        tangon = golfie.bind(oscard)(tangon);
        report = tangon.intl;
        tangon = report.string;
        zuuluu = option[zuuluu];
        zuuluu = golfie.bind(oscard)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.WAYoT0;
        zuuluu = tangon.bind(report)(zuuluu);
        michal['label'] = zuuluu;
        entity[3] = michal;
        return entity;
    };
    zuuluu['getIgnoreUserFeedbackOptions'] = michal;
    return entity;
})();