// app/modules/in_app_reports/native/components/InAppReportsTextLineElement.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    golfie = argCor;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = golfie;
    var _closure1_slot3 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot7 = golfie;
    golfie = tangon.Linking;
    var _closure1_slot8 = golfie;
    tangon = tangon.Platform;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    romeon = tangon.Fonts;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot9 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    offset = 16;
    verify = {'marginBottom': 16, 'paddingHorizontal': 16};
    tangon['container'] = verify;
    verify = {};
    foxtra = 8;
    verify['marginBottom'] = foxtra;
    tangon['header'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tangon['description'] = verify;
    verify = {'paddingHorizontal': 8, 'flexGrow': 0};
    tangon['trailingButton'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    tangon['smsInfoContainer'] = verify;
    verify = {'flex': 1, 'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'space-between', 'borderRadius': null, 'borderColor': null, 'borderWidth': 1, 'padding': 8, 'backgroundColor': null, 'marginBottom': 8};
    offset = 7;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xs;
    verify['borderRadius'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_TERTIARY;
    verify['borderColor'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = backup;
    tangon['smsNumberContainer'] = verify;
    verify = {};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.STATUS_POSITIVE_BACKGROUND;
    verify['borderColor'] = backup;
    tangon['smsNumberContainerSuccess'] = verify;
    verify = {};
    foxtra = oscard[foxtra];
    foxtra = yankee.bind(entity)(foxtra);
    romeon = romeon.DISPLAY_SEMIBOLD;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    yankee = offset.INTERACTIVE_ACTIVE;
    offset = 14;
    sizing = foxtra.bind(entity)(romeon, yankee, offset);
    output = verify;
    offset = copyDataProperties(output, sizing);
    tangon['smsNumberText'] = verify;
    verify = {'paddingHorizontal': 12, 'marginBottom': 8, 'marginLeft': 12};
    tangon['startButton'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 18;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/in_app_reports/native/components/InAppReportsTextLineElement.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: TextLineElement
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.element;
            entity = entity.data;
            update = entity.title;
            result = entity.body;
            sizing = entity.sms;
            var _closure2_slot0 = sizing;
            michal = entity.sms_body;
            var _closure2_slot1 = michal;
            entity = entity.is_localized;
            michal = _closure1_slot11;
            tangon = undefined;
            backup = michal.bind(tangon)();
            report = _closure1_slot6;
            zuuluu = report.useState;
            michal = false;
            report = zuuluu.bind(report)(michal);
            zuuluu = _closure1_slot5;
            michal = 2;
            zuuluu = zuuluu.bind(tangon)(report, michal);
            michal = 0;
            kiloes = zuuluu[michal];
            michal = 1;
            michal = zuuluu[michal];
            var _closure2_slot2 = michal;
            zuuluu = _closure1_slot1;
            report = _closure1_slot3;
            michal = 9;
            michal = report[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = function() {
                zuuluu = _closure1_slot2;
                michal = _closure1_slot3;
                entity = 10;
                michal = michal[entity];
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                entity = michal.getParser;
                entity = entity.bind(michal)();
                return entity;
            };
            option = zuuluu.bind(tangon)(michal);
            if(entity) { _fun00002_ip = 150; continue _fun00001 }
 146:
            entity = null;
            return entity;
 150:
            entity = function() {
                tangon = _closure1_slot4;
                zuuluu = undefined;
                michal = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(michal) { _fun00004_ip = 169; continue _fun00003 }
 10:
                            report = _closure2_slot0;
                            golfie = _closure2_slot1;
                            tangon = global;
                            michal = tangon.HermesInternal;
                            zuuluu = michal.concat;
                            michal = 'sms:';
                            zuuluu = zuuluu.bind(michal)(report);
                            michal = null;
                            report = michal != golfie;
                            michal = '';
                            if(!report) { _fun00004_ip = 93; continue _fun00003 }
 58:
                            oscard = tangon.encodeURIComponent;
                            report = undefined;
                            oscard = oscard.bind(report)(golfie);
                            tangon = tangon.HermesInternal;
                            report = tangon.concat;
                            tangon = '?body=';
                            michal = report.bind(tangon)(oscard);
 93:
                            report = zuuluu + michal;
                            tangon = _closure1_slot8;
                            michal = tangon.canOpenURL;
                            michal = michal.bind(tangon)(report);
                            SaveGenerator(address=119);
 117:
                            return michal;
 119:
                            ResumeGenerator(result_out_reg=1, return_bool_out_reg=3);
                            if(tangon) { _fun00004_ip = 166; continue _fun00003 }
 125:
                            if(!michal) { _fun00004_ip = 161; continue _fun00003 }
 128:
                            oscard = _closure1_slot1;
                            tangon = _closure1_slot3;
                            zuuluu = 11;
                            tangon = tangon[zuuluu];
                            zuuluu = undefined;
                            tangon = oscard.bind(zuuluu)(tangon);
                            zuuluu = tangon.openURL;
                            zuuluu = zuuluu.bind(tangon)(report);
 161:
                            zuuluu = undefined;
                            return zuuluu;
 166:
                            return michal;
 169:
                            return entity;
                        }
                    };
                    return entity;
                };
                michal = tangon.bind(zuuluu)(michal);
                var _closure3_slot0 = michal;
                entity = function() {
                    entity = undefined;
                    tangon = _closure3_slot0;
                    zuuluu = tangon.apply;
                    entity = arguments;
                    michal = entity;
                    entity = this;
                    entity = zuuluu.bind(tangon)(entity, michal);
                    return entity;
                };
                return entity;
            };
            foxtra = entity.bind(tangon)();
            if(kiloes) { _fun00002_ip = 166; continue _fun00001 }
 162:
            output = {};
            _fun00002_ip = 172; continue _fun00001;
 166:
            output = backup.smsNumberContainerSuccess;
 172:
            zuuluu = _closure1_slot10;
            michal = _closure1_slot7;
            entity = {};
            report = backup.container;
            entity['style'] = report;
            yankee = _closure1_slot9;
            offset = _closure1_slot0;
            verify = _closure1_slot3;
            oscard = 12;
            report = verify[oscard];
            report = offset.bind(tangon)(report);
            golfie = report.Text;
            report = {'style': null, 'variant': 'heading-md/extrabold', 'color': 'header-primary'};
            source = backup.header;
            report['style'] = source;
            report['children'] = update;
            golfie = yankee.bind(tangon)(golfie, report);
            report = new Array(3);
            report[0] = golfie;
            oscard = verify[oscard];
            oscard = offset.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {};
            update = backup.description;
            oscard['style'] = update;
            update = 'text-md/medium';
            oscard['variant'] = update;
            option = option.bind(tangon)(result);
            oscard['children'] = option;
            oscard = yankee.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            oscard = {};
            golfie = backup.smsInfoContainer;
            oscard['style'] = golfie;
            golfie = {};
            result = backup.smsNumberContainer;
            option = new Array(2);
            option[0] = result;
            option[1] = output;
            golfie['style'] = option;
            option = 13;
            option = verify[option];
            option = offset.bind(tangon)(option);
            offset = option.LegacyText;
            option = {};
            output = backup.smsNumberText;
            option['style'] = output;
            option['children'] = sizing;
            offset = yankee.bind(tangon)(offset, option);
            option = new Array(2);
            option[0] = offset;
            offset = _closure1_slot1;
            output = 14;
            verify = verify[output];
            offset = offset.bind(tangon)(verify);
            verify = {};
            ctrled = _closure1_slot0;
            sizing = _closure1_slot3;
            result = 15;
            update = sizing[result];
            update = ctrled.bind(tangon)(update);
            source = update.intl;
            update = source.string;
            sizing = sizing[result];
            sizing = ctrled.bind(tangon)(sizing);
            sizing = sizing.t;
            if(kiloes) { _fun00002_ip = 473; continue _fun00001 }
 460:
            kiloes = sizing.OpuAlJ;
            kiloes = update.bind(source)(kiloes);
            _fun00002_ip = 484; continue _fun00001;
 473:
            sizing = sizing.t5VZ8/;
            kiloes = update.bind(source)(sizing);
 484:
            verify['text'] = kiloes;
            sizing = _closure1_slot1;
            kiloes = _closure1_slot3;
            update = kiloes[output];
            update = sizing.bind(tangon)(update);
            update = update.Sizes;
            update = update.SMALL;
            verify['size'] = update;
            update = backup.trailingButton;
            verify['style'] = update;
            romeon = function() { // Original name: onPress
                tangon = _closure1_slot0;
                report = _closure1_slot3;
                entity = 16;
                michal = report[entity];
                entity = undefined;
                golfie = tangon.bind(entity)(michal);
                oscard = golfie.copy;
                zuuluu = _closure2_slot0;
                zuuluu = oscard.bind(golfie)(zuuluu);
                zuuluu = 17;
                zuuluu = report[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.presentCopiedToClipboard;
                zuuluu = zuuluu.bind(tangon)();
                zuuluu = _closure2_slot2;
                michal = true;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            verify['onPress'] = romeon;
            romeon = kiloes[output];
            romeon = sizing.bind(tangon)(romeon);
            romeon = romeon.Colors;
            romeon = romeon.GREY;
            verify['color'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[1] = verify;
            golfie['children'] = option;
            option = zuuluu.bind(tangon)(michal, golfie);
            golfie = new Array(2);
            golfie[0] = option;
            offset = _closure1_slot9;
            verify = _closure1_slot7;
            option = {};
            yankee = kiloes[output];
            romeon = sizing.bind(tangon)(yankee);
            yankee = {};
            source = _closure1_slot0;
            echoed = kiloes[result];
            echoed = source.bind(tangon)(echoed);
            update = echoed.intl;
            echoed = update.string;
            result = kiloes[result];
            result = source.bind(tangon)(result);
            result = result.t;
            result = result.BDYHSU;
            result = echoed.bind(update)(result);
            yankee['text'] = result;
            kiloes = kiloes[output];
            kiloes = sizing.bind(tangon)(kiloes);
            kiloes = kiloes.Sizes;
            kiloes = kiloes.MEDIUM;
            yankee['size'] = kiloes;
            backup = backup.startButton;
            yankee['style'] = backup;
            yankee['onPress'] = foxtra;
            yankee = offset.bind(tangon)(romeon, yankee);
            option['children'] = yankee;
            option = offset.bind(tangon)(verify, option);
            golfie[1] = option;
            oscard['children'] = golfie;
            oscard = zuuluu.bind(tangon)(michal, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();