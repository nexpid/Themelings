// app/modules/in_app_reports/native/components/InAppReportsMessagePreview.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot4 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'alignSelf': 'stretch', 'marginHorizontal': 16, 'marginBottom': 16};
    tangon['container'] = offset;
    offset = {};
    yankee = 4;
    romeon = oscard[yankee];
    romeon = golfie.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.HEADER_PRIMARY;
    offset['color'] = romeon;
    tangon['borderColor'] = offset;
    offset = {'lineHeight': 16, 'marginBottom': 8};
    tangon['title'] = offset;
    offset = {'minHeight': 40, 'borderRadius': null, 'borderWidth': 1, 'padding': 8};
    yankee = oscard[yankee];
    yankee = golfie.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.sm;
    offset['borderRadius'] = yankee;
    tangon['chatItemContainer'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    golfie = tangon.prototype;
    golfie = Object.create(golfie, {constructor: {value: tangon}});
    sizing = golfie;
    tangon = new sizing[tangon](kiloes);
    option = tangon instanceof Object ? tangon : golfie;
    var _closure1_slot7 = option;
    golfie = option.setOptions;
    tangon = {'renderCodedLinks': false, 'renderGiftCode': false, 'renderActivityInstanceEmbed': false, 'renderActivityInviteEmbed': false, 'renderEmbeds': true, 'ignoreMentioned': true, 'inlineAttachmentMedia': false, 'inlineEmbedMedia': true, 'renderReactions': false, 'renderShortcuts': false};
    tangon = golfie.bind(option)(tangon);
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/in_app_reports/native/components/InAppReportsMessagePreview.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: MessagePreview
        entity = argFoo;
        offset = entity.message;
        entity = _closure1_slot6;
        tangon = undefined;
        option = entity.bind(tangon)();
        sizing = _closure1_slot0;
        romeon = _closure1_slot2;
        entity = 6;
        entity = romeon[entity];
        report = sizing.bind(tangon)(entity);
        zuuluu = report.hexWithOpacity;
        entity = option.borderColor;
        michal = entity.color;
        entity = 0.08;
        foxtra = zuuluu.bind(report)(michal, entity);
        zuuluu = _closure1_slot5;
        michal = _closure1_slot3;
        entity = {};
        report = option.container;
        entity['style'] = report;
        golfie = _closure1_slot4;
        report = 7;
        report = romeon[report];
        report = sizing.bind(tangon)(report);
        oscard = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-xs/bold'};
        verify = option.title;
        report['style'] = verify;
        verify = 8;
        backup = romeon[verify];
        backup = sizing.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        verify = romeon[verify];
        verify = sizing.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.iouM3d;
        verify = backup.bind(kiloes)(verify);
        report['children'] = verify;
        oscard = golfie.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = {};
        verify = option.chatItemContainer;
        option = new Array(2);
        option[0] = verify;
        verify = {};
        verify['borderColor'] = foxtra;
        option[1] = verify;
        oscard['style'] = option;
        verify = _closure1_slot1;
        option = 9;
        option = romeon[option];
        verify = verify.bind(tangon)(option);
        option = {};
        yankee = _closure1_slot7;
        option['rowGenerator'] = yankee;
        yankee = 120;
        option['maxHeight'] = yankee;
        option['message'] = offset;
        offset = true;
        option['useDarkGradient'] = offset;
        option = golfie.bind(tangon)(verify, option);
        oscard['children'] = option;
        oscard = golfie.bind(tangon)(michal, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();