// app/modules/in_app_reports/native/components/InAppReportsMessagePreview.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot4 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {'alignSelf': 'stretch', 'marginHorizontal': 16, 'marginBottom': 16};
    tango['container'] = offset;
    offset = {};
    yankee = 4;
    romeo = oscar[yankee];
    romeo = golf.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.HEADER_PRIMARY;
    offset['color'] = romeo;
    tango['borderColor'] = offset;
    offset = {'lineHeight': 16, 'marginBottom': 8};
    tango['title'] = offset;
    offset = {'minHeight': 40, 'borderRadius': null, 'borderWidth': 1, 'padding': 8};
    yankee = oscar[yankee];
    yankee = golf.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.sm;
    offset['borderRadius'] = yankee;
    tango['chatItemContainer'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot6 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    golf = tango.prototype;
    golf = Object.create(golf, {constructor: {value: tango}});
    sizing = golf;
    tango = new sizing[tango](kilo);
    options = tango instanceof Object ? tango : golf;
    var _closure1_slot7 = options;
    golf = options.setOptions;
    tango = {'renderCodedLinks': false, 'renderGiftCode': false, 'renderActivityInstanceEmbed': false, 'renderActivityInviteEmbed': false, 'renderEmbeds': true, 'ignoreMentioned': true, 'inlineAttachmentMedia': false, 'inlineEmbedMedia': true, 'renderReactions': false, 'renderShortcuts': false};
    tango = golf.bind(options)(tango);
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/in_app_reports/native/components/InAppReportsMessagePreview.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: MessagePreview
        entity = argFoo;
        offset = entity.message;
        entity = _closure1_slot6;
        tango = undefined;
        options = entity.bind(tango)();
        sizing = _closure1_slot0;
        romeo = _closure1_slot2;
        entity = 6;
        entity = romeo[entity];
        report = sizing.bind(tango)(entity);
        zulu = report.hexWithOpacity;
        entity = options.borderColor;
        mike = entity.color;
        entity = 0.08;
        foxtrot = zulu.bind(report)(mike, entity);
        zulu = _closure1_slot5;
        mike = _closure1_slot3;
        entity = {};
        report = options.container;
        entity['style'] = report;
        golf = _closure1_slot4;
        report = 7;
        report = romeo[report];
        report = sizing.bind(tango)(report);
        oscar = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-xs/bold'};
        verify = options.title;
        report['style'] = verify;
        verify = 8;
        backup = romeo[verify];
        backup = sizing.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        verify = romeo[verify];
        verify = sizing.bind(tango)(verify);
        verify = verify.t;
        verify = verify.iouM3d;
        verify = backup.bind(kilo)(verify);
        report['children'] = verify;
        oscar = golf.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = {};
        verify = options.chatItemContainer;
        options = new Array(2);
        options[0] = verify;
        verify = {};
        verify['borderColor'] = foxtrot;
        options[1] = verify;
        oscar['style'] = options;
        verify = _closure1_slot1;
        options = 9;
        options = romeo[options];
        verify = verify.bind(tango)(options);
        options = {};
        yankee = _closure1_slot7;
        options['rowGenerator'] = yankee;
        yankee = 120;
        options['maxHeight'] = yankee;
        options['message'] = offset;
        offset = true;
        options['useDarkGradient'] = offset;
        options = golf.bind(tango)(verify, options);
        oscar['children'] = options;
        oscar = golf.bind(tango)(mike, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();