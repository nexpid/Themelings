// app/modules/in_app_reports/native/components/InAppReportsDeleteMessageElement.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    option = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot7 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/in_app_reports/native/components/InAppReportsDeleteMessageElement.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: DeleteMessageElement
        entity = argFoo;
        yankee = entity.message;
        var _closure2_slot0 = yankee;
        offset = entity.reportId;
        var _closure2_slot1 = offset;
        verify = _closure1_slot4;
        tangon = verify.useState;
        zuuluu = false;
        oscard = tangon.bind(verify)(zuuluu);
        report = _closure1_slot3;
        tangon = undefined;
        zuuluu = 2;
        report = report.bind(tangon)(oscard, zuuluu);
        zuuluu = 0;
        option = report[zuuluu];
        zuuluu = 1;
        zuuluu = report[zuuluu];
        var _closure2_slot2 = zuuluu;
        oscard = _closure1_slot0;
        golfie = _closure1_slot2;
        zuuluu = 5;
        zuuluu = golfie[zuuluu];
        backup = oscard.bind(tangon)(zuuluu);
        foxtra = backup.useStateFromStores;
        zuuluu = _closure1_slot5;
        romeon = new Array(1);
        romeon[0] = zuuluu;
        report = new Array(1);
        report[0] = yankee;
        zuuluu = function() {
            tangon = _closure1_slot5;
            zuuluu = tangon.getMessage;
            entity = _closure2_slot0;
            michal = entity.getChannelId;
            michal = michal.bind(entity)();
            entity = entity.id;
            michal = zuuluu.bind(tangon)(michal, entity);
            entity = null;
            entity = entity == michal;
            return entity;
        };
        zuuluu = foxtra.bind(backup)(romeon, zuuluu, report);
        var _closure2_slot3 = zuuluu;
        romeon = verify.useEffect;
        report = new Array(1);
        report[0] = zuuluu;
        zuuluu = function() {
            zuuluu = _closure2_slot2;
            michal = _closure2_slot3;
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        zuuluu = romeon.bind(verify)(zuuluu, report);
        report = verify.useCallback;
        zuuluu = new Array(2);
        zuuluu[0] = yankee;
        zuuluu[1] = offset;
        michal = function() {
            tangon = _closure2_slot2;
            entity = undefined;
            zuuluu = true;
            zuuluu = tangon.bind(entity)(zuuluu);
            tangon = _closure1_slot1;
            report = _closure1_slot2;
            oscard = 6;
            oscard = report[oscard];
            option = tangon.bind(entity)(oscard);
            golfie = option.trackWithMetadata;
            zuuluu = _closure1_slot6;
            oscard = zuuluu.IAR_DELETE_MESSAGE_BUTTON_CLICKED;
            zuuluu = {};
            verify = _closure2_slot1;
            zuuluu['report_id'] = verify;
            zuuluu = golfie.bind(option)(oscard, zuuluu);
            zuuluu = 7;
            zuuluu = report[zuuluu];
            report = tangon.bind(entity)(zuuluu);
            tangon = report.deleteMessage;
            michal = _closure2_slot0;
            zuuluu = michal.getChannelId;
            zuuluu = zuuluu.bind(michal)();
            michal = michal.id;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        report = report.bind(verify)(michal, zuuluu);
        zuuluu = _closure1_slot7;
        michal = _closure1_slot1;
        entity = 8;
        entity = golfie[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        verify = 9;
        offset = golfie[verify];
        offset = oscard.bind(tangon)(offset);
        romeon = offset.intl;
        yankee = romeon.string;
        offset = golfie[verify];
        offset = oscard.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.c9BHLy;
        offset = yankee.bind(romeon)(offset);
        entity['title'] = offset;
        offset = golfie[verify];
        offset = oscard.bind(tangon)(offset);
        romeon = offset.intl;
        yankee = romeon.string;
        offset = golfie[verify];
        offset = oscard.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.AT2KSU;
        offset = yankee.bind(romeon)(offset);
        entity['disabledTitle'] = offset;
        offset = golfie[verify];
        offset = oscard.bind(tangon)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = golfie[verify];
        verify = oscard.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.dK8S09;
        verify = offset.bind(yankee)(verify);
        entity['description'] = verify;
        entity['disabled'] = option;
        option = 'danger';
        entity['variant'] = option;
        entity['onPress'] = report;
        report = 10;
        report = golfie[report];
        report = oscard.bind(tangon)(report);
        oscard = report.TrashIcon;
        report = {};
        golfie = 'text-danger';
        report['color'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['icon'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();