// app/modules/in_app_reports/native/components/InAppReportsGuildPreviewElement.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'alignSelf': 'stretch', 'marginHorizontal': 16, 'marginBottom': 16};
    tangon['container'] = verify;
    verify = {};
    yankee = 4;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_PRIMARY;
    verify['color'] = offset;
    tangon['borderColor'] = verify;
    offset = 8;
    verify = {'lineHeight': 16, 'marginBottom': 8};
    tangon['title'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'flex-start', 'minHeight': 40, 'borderRadius': null, 'borderWidth': 1, 'padding': 12};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.sm;
    verify['borderRadius'] = yankee;
    tangon['guildContainer'] = verify;
    verify = {};
    verify['marginLeft'] = offset;
    tangon['guildInfo'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/in_app_reports/native/components/InAppReportsGuildPreviewElement.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildPreview
        entity = argFoo;
        yankee = entity.guild;
        entity = _closure1_slot6;
        tangon = undefined;
        romeon = entity.bind(tangon)();
        verify = _closure1_slot0;
        foxtra = _closure1_slot2;
        entity = 5;
        entity = foxtra[entity];
        report = verify.bind(tangon)(entity);
        zuuluu = report.hexWithOpacity;
        entity = romeon.borderColor;
        michal = entity.color;
        entity = 0.08;
        sizing = zuuluu.bind(report)(michal, entity);
        zuuluu = _closure1_slot5;
        michal = _closure1_slot3;
        entity = {};
        report = romeon.container;
        entity['style'] = report;
        offset = _closure1_slot4;
        option = 6;
        report = foxtra[option];
        report = verify.bind(tangon)(report);
        oscard = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-xs/bold'};
        backup = romeon.title;
        report['style'] = backup;
        backup = 7;
        kiloes = foxtra[backup];
        kiloes = verify.bind(tangon)(kiloes);
        output = kiloes.intl;
        kiloes = output.string;
        backup = foxtra[backup];
        backup = verify.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.0ox7Hh;
        kiloes = kiloes.bind(output)(backup);
        backup = kiloes.toUpperCase;
        backup = backup.bind(kiloes)();
        report['children'] = backup;
        oscard = offset.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = {};
        kiloes = romeon.guildContainer;
        backup = new Array(2);
        backup[0] = kiloes;
        kiloes = {};
        kiloes['borderColor'] = sizing;
        backup[1] = kiloes;
        oscard['style'] = backup;
        backup = _closure1_slot1;
        kiloes = 8;
        golfie = foxtra[kiloes];
        backup = backup.bind(tangon)(golfie);
        golfie = {};
        kiloes = foxtra[kiloes];
        kiloes = verify.bind(tangon)(kiloes);
        kiloes = kiloes.GuildIconSizes;
        kiloes = kiloes.LARGE;
        golfie['size'] = kiloes;
        golfie['guild'] = yankee;
        backup = offset.bind(tangon)(backup, golfie);
        golfie = new Array(2);
        golfie[0] = backup;
        option = foxtra[option];
        option = verify.bind(tangon)(option);
        verify = option.Text;
        option = {'variant': 'text-md/semibold', 'color': 'header-primary'};
        romeon = romeon.guildInfo;
        option['style'] = romeon;
        yankee = yankee.name;
        option['children'] = yankee;
        option = offset.bind(tangon)(verify, option);
        golfie[1] = option;
        oscard['children'] = golfie;
        oscard = zuuluu.bind(tangon)(michal, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();