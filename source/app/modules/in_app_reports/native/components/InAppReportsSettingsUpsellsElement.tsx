// app/modules/in_app_reports/native/components/InAppReportsSettingsUpsellsElement.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: SettingsUpsellsTableRow
        entity = argFoo;
        yankee = entity.title;
        offset = entity.disabledTitle;
        verify = entity.description;
        michal = entity.onButtonClick;
        var _closure2_slot0 = michal;
        entity = entity.trackSettingsUpsellsAction;
        var _closure2_slot1 = entity;
        zuuluu = _closure1_slot4;
        michal = zuuluu.useState;
        entity = false;
        zuuluu = michal.bind(zuuluu)(entity);
        michal = _closure1_slot3;
        tangon = undefined;
        entity = 2;
        michal = michal.bind(tangon)(zuuluu, entity);
        entity = 0;
        golfie = michal[entity];
        entity = 1;
        entity = michal[entity];
        var _closure2_slot2 = entity;
        michal = _closure1_slot1;
        option = _closure1_slot2;
        entity = 8;
        entity = option[entity];
        zuuluu = michal.bind(tangon)(entity);
        entity = function() {
            zuuluu = _closure2_slot1;
            tangon = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 9;
            michal = michal[entity];
            entity = undefined;
            michal = tangon.bind(entity)(michal);
            michal = michal.TrackIarSettingsUpsellsActionType;
            michal = michal.SETTINGS_UPSELLS_VIEWED;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        entity = zuuluu.bind(tangon)(entity);
        zuuluu = _closure1_slot9;
        entity = 10;
        entity = option[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        entity['title'] = yankee;
        entity['disabledTitle'] = offset;
        entity['description'] = verify;
        entity['disabled'] = golfie;
        oscard = function() { // Original name: onPress
            zuuluu = _closure2_slot0;
            entity = undefined;
            zuuluu = zuuluu.bind(entity)();
            tangon = _closure2_slot2;
            zuuluu = true;
            zuuluu = tangon.bind(entity)(zuuluu);
            zuuluu = _closure2_slot1;
            tangon = _closure1_slot0;
            report = _closure1_slot2;
            michal = 9;
            michal = report[michal];
            michal = tangon.bind(entity)(michal);
            michal = michal.TrackIarSettingsUpsellsActionType;
            michal = michal.SETTINGS_UPSELLS_APPLY_CLICKED;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        entity['onPress'] = oscard;
        golfie = _closure1_slot9;
        oscard = _closure1_slot0;
        report = 11;
        report = option[report];
        report = oscard.bind(tangon)(report);
        oscard = report.SettingsIcon;
        report = {};
        report = golfie.bind(tangon)(oscard, report);
        entity['icon'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticEvents;
    var _closure1_slot7 = golfie;
    tangon = tangon.UserSettingsSections;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot9 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 7;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingHorizontal'] = romeon;
    tangon['container'] = verify;
    verify = {};
    romeon = '100%';
    verify['width'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['marginBottom'] = romeon;
    tangon['settingsContainer'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_4;
    verify['marginTop'] = offset;
    tangon['goToSettingsText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 19;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/in_app_reports/native/components/InAppReportsSettingsUpsellsElement.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SettingsUpsellElement
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            offset = entity.settingsUpsells;
            var _closure2_slot0 = offset;
            michal = entity.channelId;
            var _closure2_slot1 = michal;
            option = entity.reportId;
            var _closure2_slot2 = option;
            oscard = entity.reportType;
            var _closure2_slot3 = oscard;
            tangon = entity.reportSubType;
            var _closure2_slot4 = tangon;
            report = undefined;
            var _closure2_slot5 = report;
            entity = _closure1_slot11;
            romeon = entity.bind(report)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 12;
            entity = zuuluu[entity];
            foxtra = michal.bind(report)(entity);
            yankee = foxtra.useStateFromStores;
            entity = _closure1_slot6;
            verify = new Array(1);
            verify[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot6;
                michal = zuuluu.getChannel;
                entity = _closure2_slot1;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            yankee = yankee.bind(foxtra)(verify, entity);
            entity = 13;
            entity = zuuluu[entity];
            verify = michal.bind(report)(entity);
            zuuluu = verify.useSettingsUpsellsConfigs;
            entity = null;
            foxtra = entity == yankee;
            michal = undefined;
            if(foxtra) { _fun00002_ip = 155; continue _fun00001 }
 150:
            michal = yankee.type;
 155:
            echoed = zuuluu.bind(verify)(offset, michal);
            zuuluu = _closure1_slot0;
            verify = _closure1_slot2;
            michal = 9;
            michal = verify[michal];
            zuuluu = zuuluu.bind(report)(michal);
            michal = zuuluu.useTrackSettingsUpsellsAction;
            michal = michal.bind(zuuluu)(oscard, tangon, option);
            _closure2_slot5 = michal;
            zuuluu = echoed.length;
            michal = 0;
            entity = null;
            if(!(michal !== zuuluu)) { _fun00002_ip = 508; continue _fun00001 }
 214:
            tangon = _closure1_slot10;
            zuuluu = _closure1_slot5;
            michal = {};
            oscard = romeon.container;
            michal['style'] = oscard;
            option = _closure1_slot9;
            oscard = {};
            verify = romeon.settingsContainer;
            oscard['style'] = verify;
            sizing = _closure1_slot9;
            yankee = _closure1_slot0;
            kiloes = _closure1_slot2;
            verify = 14;
            verify = kiloes[verify];
            verify = yankee.bind(report)(verify);
            foxtra = verify.TableRowGroup;
            verify = {};
            offset = 15;
            output = kiloes[offset];
            output = yankee.bind(report)(output);
            update = output.intl;
            result = update.string;
            output = kiloes[offset];
            output = yankee.bind(report)(output);
            output = output.t;
            output = output.1yxTIC;
            output = result.bind(update)(output);
            verify['title'] = output;
            result = echoed.map;
            output = function(argFoo, argBar) {
                entity = argFoo;
                report = argBar;
                verify = entity.getTitle;
                option = entity.getDisabledTitle;
                golfie = entity.getDescription;
                oscard = entity.onApply;
                tangon = _closure1_slot9;
                zuuluu = _closure1_slot12;
                michal = {};
                entity = undefined;
                verify = verify.bind(entity)();
                michal['title'] = verify;
                option = option.bind(entity)();
                michal['disabledTitle'] = option;
                golfie = golfie.bind(entity)();
                michal['description'] = golfie;
                michal['onButtonClick'] = oscard;
                golfie = _closure2_slot5;
                oscard = _closure2_slot0;
                oscard = oscard[report];
                oscard = golfie.bind(entity)(oscard);
                michal['trackSettingsUpsellsAction'] = oscard;
                entity = tangon.bind(entity)(zuuluu, michal, report);
                return entity;
            };
            output = result.bind(echoed)(output);
            verify['children'] = output;
            verify = sizing.bind(report)(foxtra, verify);
            oscard['children'] = verify;
            option = option.bind(report)(zuuluu, oscard);
            oscard = new Array(2);
            oscard[0] = option;
            verify = _closure1_slot9;
            golfie = 16;
            golfie = kiloes[golfie];
            golfie = yankee.bind(report)(golfie);
            option = golfie.TextWithIOSLinkWorkaround;
            golfie = {};
            foxtra = 'text-sm/medium';
            golfie['variant'] = foxtra;
            romeon = romeon.goToSettingsText;
            golfie['style'] = romeon;
            romeon = kiloes[offset];
            romeon = yankee.bind(report)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.format;
            offset = kiloes[offset];
            offset = yankee.bind(report)(offset);
            offset = offset.t;
            yankee = offset.u7mo+v;
            offset = {};
            backup = function() { // Original name: goToSettingsHook
                golfie = _closure1_slot0;
                option = _closure1_slot2;
                entity = 17;
                zuuluu = option[entity];
                entity = undefined;
                report = golfie.bind(entity)(zuuluu);
                tangon = report.openUserSettings;
                zuuluu = {};
                oscard = _closure1_slot8;
                oscard = oscard.CONTENT_AND_SOCIAL;
                zuuluu['screen'] = oscard;
                zuuluu = tangon.bind(report)(zuuluu);
                tangon = _closure1_slot1;
                zuuluu = 18;
                zuuluu = option[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                tangon = report.trackWithMetadata;
                michal = _closure1_slot7;
                zuuluu = michal.IAR_SETTINGS_UPSELLS_ACTION;
                michal = {};
                verify = _closure2_slot2;
                michal['report_id'] = verify;
                verify = _closure2_slot3;
                verify = verify.name;
                michal['report_type'] = verify;
                oscard = _closure2_slot4;
                michal['report_subtype'] = oscard;
                oscard = 9;
                oscard = option[oscard];
                oscard = golfie.bind(entity)(oscard);
                oscard = oscard.TrackIarSettingsUpsellsActionType;
                oscard = oscard.SETTINGS_UPSELLS_GO_TO_SETTINGS_LINK_CLICKED;
                michal['action'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            offset['goToSettingsHook'] = backup;
            offset = romeon.bind(foxtra)(yankee, offset);
            golfie['children'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 508:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();