// app/modules/in_app_reports/native/components/InAppReportsSettingsUpsellsElement.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: SettingsUpsellsTableRow
        entity = argFoo;
        yankee = entity.title;
        offset = entity.disabledTitle;
        verify = entity.description;
        mike = entity.onButtonClick;
        var _closure2_slot0 = mike;
        entity = entity.trackSettingsUpsellsAction;
        var _closure2_slot1 = entity;
        zulu = _closure1_slot4;
        mike = zulu.useState;
        entity = false;
        zulu = mike.bind(zulu)(entity);
        mike = _closure1_slot3;
        tango = undefined;
        entity = 2;
        mike = mike.bind(tango)(zulu, entity);
        entity = 0;
        golf = mike[entity];
        entity = 1;
        entity = mike[entity];
        var _closure2_slot2 = entity;
        mike = _closure1_slot1;
        options = _closure1_slot2;
        entity = 8;
        entity = options[entity];
        zulu = mike.bind(tango)(entity);
        entity = function() {
            zulu = _closure2_slot1;
            tango = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 9;
            mike = mike[entity];
            entity = undefined;
            mike = tango.bind(entity)(mike);
            mike = mike.TrackIarSettingsUpsellsActionType;
            mike = mike.SETTINGS_UPSELLS_VIEWED;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        entity = zulu.bind(tango)(entity);
        zulu = _closure1_slot9;
        entity = 10;
        entity = options[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        entity['title'] = yankee;
        entity['disabledTitle'] = offset;
        entity['description'] = verify;
        entity['disabled'] = golf;
        oscar = function() { // Original name: onPress
            zulu = _closure2_slot0;
            entity = undefined;
            zulu = zulu.bind(entity)();
            tango = _closure2_slot2;
            zulu = true;
            zulu = tango.bind(entity)(zulu);
            zulu = _closure2_slot1;
            tango = _closure1_slot0;
            report = _closure1_slot2;
            mike = 9;
            mike = report[mike];
            mike = tango.bind(entity)(mike);
            mike = mike.TrackIarSettingsUpsellsActionType;
            mike = mike.SETTINGS_UPSELLS_APPLY_CLICKED;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        entity['onPress'] = oscar;
        golf = _closure1_slot9;
        oscar = _closure1_slot0;
        report = 11;
        report = options[report];
        report = oscar.bind(tango)(report);
        oscar = report.SettingsIcon;
        report = {};
        report = golf.bind(tango)(oscar, report);
        entity['icon'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticEvents;
    var _closure1_slot7 = golf;
    tango = tango.UserSettingsSections;
    var _closure1_slot8 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot10 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 7;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['paddingHorizontal'] = romeo;
    tango['container'] = verify;
    verify = {};
    romeo = '100%';
    verify['width'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_8;
    verify['marginBottom'] = romeo;
    tango['settingsContainer'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_4;
    verify['marginTop'] = offset;
    tango['goToSettingsText'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = 19;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/in_app_reports/native/components/InAppReportsSettingsUpsellsElement.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SettingsUpsellElement
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            offset = entity.settingsUpsells;
            var _closure2_slot0 = offset;
            mike = entity.channelId;
            var _closure2_slot1 = mike;
            options = entity.reportId;
            var _closure2_slot2 = options;
            oscar = entity.reportType;
            var _closure2_slot3 = oscar;
            tango = entity.reportSubType;
            var _closure2_slot4 = tango;
            report = undefined;
            var _closure2_slot5 = report;
            entity = _closure1_slot11;
            romeo = entity.bind(report)();
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 12;
            entity = zulu[entity];
            foxtrot = mike.bind(report)(entity);
            yankee = foxtrot.useStateFromStores;
            entity = _closure1_slot6;
            verify = new Array(1);
            verify[0] = entity;
            entity = function() {
                zulu = _closure1_slot6;
                mike = zulu.getChannel;
                entity = _closure2_slot1;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            yankee = yankee.bind(foxtrot)(verify, entity);
            entity = 13;
            entity = zulu[entity];
            verify = mike.bind(report)(entity);
            zulu = verify.useSettingsUpsellsConfigs;
            entity = null;
            foxtrot = entity == yankee;
            mike = undefined;
            if(foxtrot) { _fun00002_ip = 155; continue _fun00001 }
 150:
            mike = yankee.type;
 155:
            echo = zulu.bind(verify)(offset, mike);
            zulu = _closure1_slot0;
            verify = _closure1_slot2;
            mike = 9;
            mike = verify[mike];
            zulu = zulu.bind(report)(mike);
            mike = zulu.useTrackSettingsUpsellsAction;
            mike = mike.bind(zulu)(oscar, tango, options);
            _closure2_slot5 = mike;
            zulu = echo.length;
            mike = 0;
            entity = null;
            if(!(mike !== zulu)) { _fun00002_ip = 504; continue _fun00001 }
 214:
            tango = _closure1_slot10;
            zulu = _closure1_slot5;
            mike = {};
            oscar = romeo.container;
            mike['style'] = oscar;
            options = _closure1_slot9;
            oscar = {};
            verify = romeo.settingsContainer;
            oscar['style'] = verify;
            sizing = _closure1_slot9;
            yankee = _closure1_slot0;
            kilo = _closure1_slot2;
            verify = 14;
            verify = kilo[verify];
            verify = yankee.bind(report)(verify);
            foxtrot = verify.TableRowGroup;
            verify = {};
            offset = 15;
            output = kilo[offset];
            output = yankee.bind(report)(output);
            update = output.intl;
            result = update.string;
            output = kilo[offset];
            output = yankee.bind(report)(output);
            output = output.t;
            output = output.1yxTIC;
            output = result.bind(update)(output);
            verify['title'] = output;
            result = echo.map;
            output = function(argFoo, argBar) {
                entity = argFoo;
                report = argBar;
                verify = entity.getTitle;
                options = entity.getDisabledTitle;
                golf = entity.getDescription;
                oscar = entity.onApply;
                tango = _closure1_slot9;
                zulu = _closure1_slot12;
                mike = {};
                entity = undefined;
                verify = verify.bind(entity)();
                mike['title'] = verify;
                options = options.bind(entity)();
                mike['disabledTitle'] = options;
                golf = golf.bind(entity)();
                mike['description'] = golf;
                mike['onButtonClick'] = oscar;
                golf = _closure2_slot5;
                oscar = _closure2_slot0;
                oscar = oscar[report];
                oscar = golf.bind(entity)(oscar);
                mike['trackSettingsUpsellsAction'] = oscar;
                entity = tango.bind(entity)(zulu, mike, report);
                return entity;
            };
            output = result.bind(echo)(output);
            verify['children'] = output;
            verify = sizing.bind(report)(foxtrot, verify);
            oscar['children'] = verify;
            options = options.bind(report)(zulu, oscar);
            oscar = new Array(2);
            oscar[0] = options;
            verify = _closure1_slot9;
            golf = 16;
            golf = kilo[golf];
            golf = yankee.bind(report)(golf);
            options = golf.TextWithIOSLinkWorkaround;
            golf = {};
            foxtrot = 'text-sm/medium';
            golf['variant'] = foxtrot;
            romeo = romeo.goToSettingsText;
            golf['style'] = romeo;
            romeo = kilo[offset];
            romeo = yankee.bind(report)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.format;
            offset = kilo[offset];
            offset = yankee.bind(report)(offset);
            offset = offset.t;
            yankee = offset.u7mo+v;
            offset = {};
            backup = function() { // Original name: goToSettingsHook
                golf = _closure1_slot0;
                options = _closure1_slot2;
                entity = 17;
                zulu = options[entity];
                entity = undefined;
                report = golf.bind(entity)(zulu);
                tango = report.openUserSettings;
                zulu = {};
                oscar = _closure1_slot8;
                oscar = oscar.CONTENT_AND_SOCIAL;
                zulu['screen'] = oscar;
                zulu = tango.bind(report)(zulu);
                tango = _closure1_slot1;
                zulu = 18;
                zulu = options[zulu];
                report = tango.bind(entity)(zulu);
                tango = report.trackWithMetadata;
                mike = _closure1_slot7;
                zulu = mike.IAR_SETTINGS_UPSELLS_ACTION;
                mike = {};
                verify = _closure2_slot2;
                mike['report_id'] = verify;
                verify = _closure2_slot3;
                verify = verify.name;
                mike['report_type'] = verify;
                oscar = _closure2_slot4;
                mike['report_subtype'] = oscar;
                oscar = 9;
                oscar = options[oscar];
                oscar = golf.bind(entity)(oscar);
                oscar = oscar.TrackIarSettingsUpsellsActionType;
                oscar = oscar.SETTINGS_UPSELLS_GO_TO_SETTINGS_LINK_CLICKED;
                mike['action'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            offset['goToSettingsHook'] = backup;
            offset = romeo.bind(foxtrot)(yankee, offset);
            golf['children'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 504:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();