// app/modules/in_app_reports/native/components/InAppReportsLeaveGuildElement.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/in_app_reports/native/components/InAppReportsLeaveGuildElement.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: LeaveGuildElement
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            foxtra = entity.guild;
            var _closure2_slot0 = foxtra;
            verify = entity.addCallback;
            var _closure2_slot1 = verify;
            entity = entity.reportId;
            var _closure2_slot2 = entity;
            option = _closure1_slot4;
            zuuluu = option.useState;
            michal = false;
            golfie = zuuluu.bind(option)(michal);
            zuuluu = _closure1_slot3;
            tangon = undefined;
            michal = 2;
            zuuluu = zuuluu.bind(tangon)(golfie, michal);
            michal = 0;
            golfie = zuuluu[michal];
            michal = 1;
            michal = zuuluu[michal];
            var _closure2_slot3 = michal;
            romeon = null;
            michal = romeon != foxtra;
            var _closure2_slot4 = michal;
            offset = option.useEffect;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                zuuluu = _closure2_slot3;
                entity = _closure2_slot4;
                michal = !entity;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal = offset.bind(option)(michal, zuuluu);
            zuuluu = option.useCallback;
            michal = new Array(3);
            michal[0] = verify;
            michal[1] = entity;
            michal[2] = foxtra;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot0;
                    michal = null;
                    if(!(michal != zuuluu)) { _fun00004_ip = 113; continue _fun00003 }
 13:
                    tangon = _closure2_slot1;
                    zuuluu = undefined;
                    michal = function() {
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 4;
                        michal = michal[entity];
                        entity = undefined;
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = zuuluu.leaveGuild;
                        entity = _closure2_slot0;
                        entity = entity.id;
                        entity = michal.bind(zuuluu)(entity);
                        return entity;
                    };
                    michal = tangon.bind(zuuluu)(michal);
                    report = _closure1_slot1;
                    oscard = _closure1_slot2;
                    tangon = 5;
                    tangon = oscard[tangon];
                    oscard = report.bind(zuuluu)(tangon);
                    report = oscard.trackWithMetadata;
                    michal = _closure1_slot5;
                    tangon = michal.IAR_LEAVE_GUILD_BUTTON_CLICKED;
                    michal = {};
                    golfie = _closure2_slot0;
                    golfie = golfie.id;
                    michal['guild_id'] = golfie;
                    golfie = _closure2_slot2;
                    michal['report_id'] = golfie;
                    michal = report.bind(oscard)(tangon, michal);
                    michal = _closure2_slot3;
                    entity = true;
                    entity = michal.bind(zuuluu)(entity);
 113:
                    entity = undefined;
                    return entity;
                }
            };
            entity = zuuluu.bind(option)(entity, michal);
            var _closure2_slot5 = entity;
            zuuluu = _closure1_slot6;
            michal = _closure1_slot1;
            backup = _closure1_slot2;
            entity = 6;
            entity = backup[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            verify = _closure1_slot0;
            option = 7;
            offset = backup[option];
            offset = verify.bind(tangon)(offset);
            kiloes = offset.intl;
            yankee = kiloes.string;
            offset = backup[option];
            offset = verify.bind(tangon)(offset);
            offset = offset.t;
            offset = offset.cU96io;
            offset = yankee.bind(kiloes)(offset);
            entity['title'] = offset;
            offset = backup[option];
            offset = verify.bind(tangon)(offset);
            kiloes = offset.intl;
            yankee = kiloes.string;
            offset = backup[option];
            offset = verify.bind(tangon)(offset);
            offset = offset.t;
            offset = offset.rJGMXV;
            offset = yankee.bind(kiloes)(offset);
            entity['disabledTitle'] = offset;
            offset = backup[option];
            offset = verify.bind(tangon)(offset);
            yankee = offset.intl;
            offset = yankee.formatToPlainString;
            option = backup[option];
            option = verify.bind(tangon)(option);
            option = option.t;
            verify = option.26mR6+;
            option = {};
            backup = romeon == foxtra;
            romeon = undefined;
            if(backup) { _fun00002_ip = 350; continue _fun00001 }
 345:
            romeon = foxtra.name;
 350:
            option['guildName'] = romeon;
            option = offset.bind(yankee)(verify, option);
            entity['description'] = option;
            entity['disabled'] = golfie;
            golfie = 'danger';
            entity['variant'] = golfie;
            oscard = function() { // Original name: onPress
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = _closure1_slot1;
                    oscard = _closure1_slot2;
                    entity = 8;
                    michal = oscard[entity];
                    entity = undefined;
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.show;
                    michal = {};
                    golfie = _closure1_slot0;
                    option = 7;
                    verify = oscard[option];
                    verify = golfie.bind(entity)(verify);
                    yankee = verify.intl;
                    offset = yankee.string;
                    verify = oscard[option];
                    verify = golfie.bind(entity)(verify);
                    verify = verify.t;
                    verify = verify.J2TBi4;
                    verify = offset.bind(yankee)(verify);
                    michal['title'] = verify;
                    verify = oscard[option];
                    verify = golfie.bind(entity)(verify);
                    yankee = verify.intl;
                    offset = yankee.formatToPlainString;
                    oscard = oscard[option];
                    oscard = golfie.bind(entity)(oscard);
                    oscard = oscard.t;
                    verify = oscard.TB1og4;
                    golfie = {};
                    foxtra = _closure2_slot0;
                    romeon = null;
                    foxtra = romeon == foxtra;
                    romeon = undefined;
                    if(foxtra) { _fun00006_ip = 156; continue _fun00005 }
 147:
                    foxtra = _closure2_slot0;
                    romeon = foxtra.name;
 156:
                    golfie['name'] = romeon;
                    golfie = offset.bind(yankee)(verify, golfie);
                    michal['body'] = golfie;
                    yankee = _closure1_slot0;
                    golfie = _closure1_slot2;
                    verify = golfie[option];
                    verify = yankee.bind(entity)(verify);
                    romeon = verify.intl;
                    offset = romeon.string;
                    verify = golfie[option];
                    verify = yankee.bind(entity)(verify);
                    verify = verify.t;
                    verify = verify.p89ACg;
                    verify = offset.bind(romeon)(verify);
                    michal['confirmText'] = verify;
                    verify = golfie[option];
                    verify = yankee.bind(entity)(verify);
                    offset = verify.intl;
                    verify = offset.string;
                    option = golfie[option];
                    option = yankee.bind(entity)(option);
                    option = option.t;
                    option = option.gm1Ven;
                    option = verify.bind(offset)(option);
                    michal['cancelText'] = option;
                    oscard = _closure2_slot5;
                    michal['onConfirm'] = oscard;
                    oscard = _closure1_slot1;
                    report = 9;
                    report = golfie[report];
                    report = oscard.bind(entity)(report);
                    report = report.Colors;
                    report = report.RED;
                    michal['confirmColor'] = report;
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                }
            };
            entity['onPress'] = oscard;
            golfie = _closure1_slot6;
            oscard = _closure1_slot0;
            option = _closure1_slot2;
            report = 10;
            report = option[report];
            report = oscard.bind(tangon)(report);
            oscard = report.DoorExitIcon;
            report = {};
            option = 'text-danger';
            report['color'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['icon'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();