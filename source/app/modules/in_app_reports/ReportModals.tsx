// app/modules/in_app_reports/ReportModals.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: _submitHamReportForFirstDM
        report = undefined;
        entity = undefined;
        tango = _closure1_slot3;
        zulu = function* (argFoo, argBar) {
            entity = function* (argFoo, argBar) { // Original name: ?anon_0_
                _fun68828: for(var _fun68828_ip = 0; ; ) switch(_fun68828_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=3);
                    if(tango) { _fun68828_ip = 135; continue _fun68828 }
 10:
                    mike = argFoo;
                    zulu = argBar;
 16: // try_start_0
                    verify = _closure1_slot0;
                    offset = _closure1_slot2;
                    tango = 7;
                    report = offset[tango];
                    tango = undefined;
                    golf = verify.bind(tango)(report);
                    oscar = golf.submitHeadlessReport;
                    report = {};
                    options = 5;
                    options = offset[options];
                    options = verify.bind(tango)(options);
                    options = options.ReportNames;
                    options = options.FIRST_DM;
                    report['name'] = options;
                    report['record'] = mike;
                    mike = {};
                    options = '_first_dm_ham_v1';
                    mike['variant'] = options;
                    mike = oscar.bind(golf)(report, mike);
                    SaveGenerator(address=104);
 102:
                    return mike;
 104:
                    ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                    if(report) { _fun68828_ip = 125; continue _fun68828 }
 110:
                    oscar = zulu;
                    report = null;
                    if(!(report != oscar)) { _fun68828_ip = 123; continue _fun68828 }
 119:
                    zulu = zulu.bind(tango)();
 123: // try_end0
                    _fun68828_ip = 130; continue _fun68828;
 125:
                    return mike;
 128: // catch_target0
                    CatchBlockStart(arg_register=1);
 130:
                    mike = undefined;
                    return mike;
 135:
                    return entity;
                }
            };
            return entity;
        };
        tango = tango.bind(report)(zulu);
        _closure1_slot8 = tango;
        zulu = tango.apply;
        entity = arguments;
        mike = entity;
        entity = this;
        entity = zulu.bind(tango)(entity, mike);
        return entity;
    };
    var _closure1_slot8 = entity;
    entity = function() { // Original name: _submitReportForInappropriateConversationSafetyAlert
        report = undefined;
        entity = undefined;
        tango = _closure1_slot3;
        zulu = function* (argFoo, argBar, argBaz) {
            entity = function* (argFoo, argBar, argBaz) { // Original name: ?anon_0_
                _fun68831: for(var _fun68831_ip = 0; ; ) switch(_fun68831_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=4);
                    if(report) { _fun68831_ip = 156; continue _fun68831 }
 10:
                    zulu = argFoo;
                    tango = argBar;
                    mike = argBaz;
 19: // try_start_0
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    report = 7;
                    oscar = yankee[report];
                    report = undefined;
                    options = offset.bind(report)(oscar);
                    golf = options.submitHeadlessReport;
                    oscar = {};
                    verify = 5;
                    verify = yankee[verify];
                    verify = offset.bind(report)(verify);
                    verify = verify.ReportNames;
                    verify = verify.MESSAGE;
                    oscar['name'] = verify;
                    oscar['record'] = zulu;
                    zulu = {};
                    verify = 'safety_alerts_headless_v1';
                    zulu['variant'] = verify;
                    zulu = golf.bind(options)(oscar, zulu);
                    SaveGenerator(address=107);
 105:
                    return zulu;
 107:
                    ResumeGenerator(result_out_reg=2, return_bool_out_reg=5);
                    if(oscar) { _fun68831_ip = 128; continue _fun68831 }
 113:
                    golf = tango;
                    oscar = null;
                    if(!(oscar != golf)) { _fun68831_ip = 126; continue _fun68831 }
 122:
                    tango = tango.bind(report)();
 126: // try_end0
                    _fun68831_ip = 151; continue _fun68831;
 128:
                    return zulu;
 131: // catch_target0
                    CatchBlockStart(arg_register=2);
                    tango = mike;
                    zulu = null;
                    if(!(zulu != tango)) { _fun68831_ip = 151; continue _fun68831 }
 142:
                    zulu = mike;
                    mike = undefined;
                    mike = zulu.bind(mike)();
 151:
                    mike = undefined;
                    return mike;
 156:
                    return entity;
                }
            };
            return entity;
        };
        tango = tango.bind(report)(zulu);
        _closure1_slot9 = tango;
        zulu = tango.apply;
        entity = arguments;
        mike = entity;
        entity = this;
        entity = zulu.bind(tango)(entity, mike);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = function(argFoo, argBar) { // Original name: trackShowReportModalAnalytics
        tango = _closure1_slot1;
        zulu = _closure1_slot2;
        entity = 8;
        zulu = zulu[entity];
        entity = undefined;
        report = tango.bind(entity)(zulu);
        tango = report.trackWithMetadata;
        mike = _closure1_slot7;
        zulu = mike.IAR_MODAL_OPEN;
        mike = {};
        oscar = argFoo;
        mike['report_type'] = oscar;
        golf = argBar;
        options = mike;
        oscar = copyDataProperties(options, golf);
        mike = tango.bind(report)(zulu, mike);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot7 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/in_app_reports/ReportModals.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo, argBar) { // Original name: showReportModalForGuild
        mike = argFoo;
        oscar = _closure1_slot10;
        golf = _closure1_slot0;
        options = _closure1_slot2;
        zulu = 5;
        tango = options[zulu];
        entity = undefined;
        tango = golf.bind(entity)(tango);
        tango = tango.ReportNames;
        report = tango.GUILD;
        tango = {};
        verify = mike.id;
        tango['guild_id'] = verify;
        tango = oscar.bind(entity)(report, tango);
        tango = 6;
        tango = options[tango];
        oscar = golf.bind(entity)(tango);
        report = oscar.showReportModal;
        tango = {};
        zulu = options[zulu];
        zulu = golf.bind(entity)(zulu);
        zulu = zulu.ReportNames;
        zulu = zulu.GUILD;
        tango['name'] = zulu;
        tango['record'] = mike;
        zulu = {};
        mike = argBar;
        zulu['onSubmit'] = mike;
        mike = {};
        mike = report.bind(oscar)(tango, mike, zulu);
        return entity;
    };
    zulu['showReportModalForGuild'] = tango;
    tango = function(argFoo, argBar) { // Original name: showReportModalForGuildDirectoryEntry
        mike = argFoo;
        oscar = _closure1_slot10;
        golf = _closure1_slot0;
        options = _closure1_slot2;
        zulu = 5;
        tango = options[zulu];
        entity = undefined;
        tango = golf.bind(entity)(tango);
        tango = tango.ReportNames;
        report = tango.GUILD_DIRECTORY_ENTRY;
        tango = {};
        verify = mike.channelId;
        tango['channel_id'] = verify;
        verify = mike.guildId;
        tango['guild_id'] = verify;
        tango = oscar.bind(entity)(report, tango);
        tango = 6;
        tango = options[tango];
        oscar = golf.bind(entity)(tango);
        report = oscar.showReportModal;
        tango = {};
        zulu = options[zulu];
        zulu = golf.bind(entity)(zulu);
        zulu = zulu.ReportNames;
        zulu = zulu.GUILD_DIRECTORY_ENTRY;
        tango['name'] = zulu;
        tango['record'] = mike;
        zulu = {};
        mike = argBar;
        zulu['onSubmit'] = mike;
        mike = {};
        mike = report.bind(oscar)(tango, mike, zulu);
        return entity;
    };
    zulu['showReportModalForGuildDirectoryEntry'] = tango;
    tango = function(argFoo, argBar, argBaz) { // Original name: showReportModalForMessage
        mike = argFoo;
        oscar = _closure1_slot10;
        golf = _closure1_slot0;
        options = _closure1_slot2;
        zulu = 5;
        tango = options[zulu];
        entity = undefined;
        tango = golf.bind(entity)(tango);
        tango = tango.ReportNames;
        report = tango.MESSAGE;
        tango = {};
        verify = mike.id;
        tango['message_id'] = verify;
        verify = mike.channel_id;
        tango['channel_id'] = verify;
        tango = oscar.bind(entity)(report, tango);
        tango = 6;
        tango = options[tango];
        oscar = golf.bind(entity)(tango);
        report = oscar.showReportModal;
        tango = {};
        zulu = options[zulu];
        zulu = golf.bind(entity)(zulu);
        zulu = zulu.ReportNames;
        zulu = zulu.MESSAGE;
        tango['name'] = zulu;
        tango['record'] = mike;
        zulu = {};
        mike = argBaz;
        zulu['onSubmit'] = mike;
        mike = {};
        mike = report.bind(oscar)(tango, mike, zulu);
        return entity;
    };
    zulu['showReportModalForMessage'] = tango;
    tango = function(argFoo, argBar, argBaz) { // Original name: showStaffTestReportModalForMessage
        mike = argFoo;
        oscar = _closure1_slot10;
        golf = _closure1_slot0;
        options = _closure1_slot2;
        zulu = 5;
        tango = options[zulu];
        entity = undefined;
        tango = golf.bind(entity)(tango);
        tango = tango.ReportNames;
        report = tango.MESSAGE;
        tango = {};
        verify = mike.id;
        tango['message_id'] = verify;
        verify = mike.channel_id;
        tango['channel_id'] = verify;
        tango = oscar.bind(entity)(report, tango);
        tango = 6;
        tango = options[tango];
        oscar = golf.bind(entity)(tango);
        report = oscar.showReportModal;
        tango = {};
        zulu = options[zulu];
        zulu = golf.bind(entity)(zulu);
        zulu = zulu.ReportNames;
        zulu = zulu.MESSAGE;
        tango['name'] = zulu;
        tango['record'] = mike;
        zulu = {};
        mike = 'staff';
        zulu['variant'] = mike;
        mike = {};
        golf = argBaz;
        mike['onSubmit'] = golf;
        mike = report.bind(oscar)(tango, zulu, mike);
        return entity;
    };
    zulu['showStaffTestReportModalForMessage'] = tango;
    tango = function(argFoo, argBar) { // Original name: showReportModalForStageChannel
        _fun68837: for(var _fun68837_ip = 0; ; ) switch(_fun68837_ip) {
 0:
            tango = _closure1_slot4;
            zulu = tango.getStageInstanceByChannel;
            entity = argFoo;
            entity = entity.id;
            entity = zulu.bind(tango)(entity);
            zulu = null;
            if(!(zulu != entity)) { _fun68837_ip = 178; continue _fun68837 }
 35:
            report = _closure1_slot10;
            golf = _closure1_slot0;
            options = _closure1_slot2;
            mike = 5;
            zulu = options[mike];
            oscar = undefined;
            zulu = golf.bind(oscar)(zulu);
            zulu = zulu.ReportNames;
            tango = zulu.STAGE_CHANNEL;
            zulu = {};
            verify = entity.id;
            zulu['stage_instance_id'] = verify;
            verify = entity.channel_id;
            zulu['channel_id'] = verify;
            verify = entity.guild_id;
            zulu['guild_id'] = verify;
            zulu = report.bind(oscar)(tango, zulu);
            zulu = 6;
            zulu = options[zulu];
            report = golf.bind(oscar)(zulu);
            tango = report.showReportModal;
            zulu = {};
            mike = options[mike];
            mike = golf.bind(oscar)(mike);
            mike = mike.ReportNames;
            mike = mike.STAGE_CHANNEL;
            zulu['name'] = mike;
            zulu['record'] = entity;
            mike = {};
            entity = argBar;
            mike['onSubmit'] = entity;
            entity = {};
            entity = tango.bind(report)(zulu, entity, mike);
 178:
            entity = undefined;
            return entity;
        }
    };
    zulu['showReportModalForStageChannel'] = tango;
    tango = function(argFoo, argBar) { // Original name: showReportModalForGuildScheduledEvent
        _fun68838: for(var _fun68838_ip = 0; ; ) switch(_fun68838_ip) {
 0:
            mike = argFoo;
            oscar = _closure1_slot10;
            report = _closure1_slot0;
            entity = _closure1_slot2;
            options = 5;
            tango = entity[options];
            entity = undefined;
            tango = report.bind(entity)(tango);
            tango = tango.ReportNames;
            report = tango.GUILD_SCHEDULED_EVENT;
            tango = {};
            golf = mike.id;
            tango['guild_scheduled_event_id'] = golf;
            golf = mike.guild_id;
            tango['guild_id'] = golf;
            verify = mike.channel_id;
            golf = null;
            offset = golf != verify;
            golf = undefined;
            if(!offset) { _fun68838_ip = 84; continue _fun68838 }
 81:
            golf = verify;
 84:
            tango['channel_id'] = golf;
            tango = oscar.bind(entity)(report, tango);
            golf = _closure1_slot0;
            zulu = _closure1_slot2;
            tango = 6;
            tango = zulu[tango];
            oscar = golf.bind(entity)(tango);
            report = oscar.showReportModal;
            tango = {};
            zulu = zulu[options];
            zulu = golf.bind(entity)(zulu);
            zulu = zulu.ReportNames;
            zulu = zulu.GUILD_SCHEDULED_EVENT;
            tango['name'] = zulu;
            tango['record'] = mike;
            zulu = {};
            mike = argBar;
            zulu['onSubmit'] = mike;
            mike = {};
            mike = report.bind(oscar)(tango, mike, zulu);
            return entity;
        }
    };
    zulu['showReportModalForGuildScheduledEvent'] = tango;
    tango = function(argFoo, argBar) { // Original name: showReportModalForFirstDM
        mike = argFoo;
        oscar = _closure1_slot10;
        golf = _closure1_slot0;
        options = _closure1_slot2;
        zulu = 5;
        tango = options[zulu];
        entity = undefined;
        tango = golf.bind(entity)(tango);
        tango = tango.ReportNames;
        report = tango.FIRST_DM;
        tango = {};
        verify = mike.id;
        tango['message_id'] = verify;
        verify = mike.channel_id;
        tango['channel_id'] = verify;
        tango = oscar.bind(entity)(report, tango);
        tango = 6;
        tango = options[tango];
        oscar = golf.bind(entity)(tango);
        report = oscar.showReportModal;
        tango = {};
        zulu = options[zulu];
        zulu = golf.bind(entity)(zulu);
        zulu = zulu.ReportNames;
        zulu = zulu.FIRST_DM;
        tango['name'] = zulu;
        tango['record'] = mike;
        zulu = {};
        mike = argBar;
        zulu['onSubmit'] = mike;
        mike = false;
        zulu['isEligibleForFeedback'] = mike;
        mike = {};
        mike = report.bind(oscar)(tango, mike, zulu);
        return entity;
    };
    zulu['showReportModalForFirstDM'] = tango;
    tango = function() { // Original name: submitHamReportForFirstDM
        entity = undefined;
        tango = _closure1_slot8;
        zulu = tango.apply;
        entity = arguments;
        mike = entity;
        entity = this;
        entity = zulu.bind(tango)(entity, mike);
        return entity;
    };
    zulu['submitHamReportForFirstDM'] = tango;
    tango = function(argFoo, argBar, argBaz, argCorge) { // Original name: showReportModalForUser
        mike = argFoo;
        oscar = _closure1_slot10;
        golf = _closure1_slot0;
        options = _closure1_slot2;
        zulu = 5;
        tango = options[zulu];
        entity = undefined;
        tango = golf.bind(entity)(tango);
        tango = tango.ReportNames;
        report = tango.USER;
        tango = {};
        verify = mike.id;
        tango['reported_user_id'] = verify;
        tango = oscar.bind(entity)(report, tango);
        tango = 6;
        tango = options[tango];
        oscar = golf.bind(entity)(tango);
        report = oscar.showReportModal;
        tango = {};
        zulu = options[zulu];
        zulu = golf.bind(entity)(zulu);
        zulu = zulu.ReportNames;
        zulu = zulu.USER;
        tango['name'] = zulu;
        tango['record'] = mike;
        mike = argBar;
        tango['contextualGuildId'] = mike;
        zulu = {};
        mike = argBaz;
        zulu['onSubmit'] = mike;
        mike = argCorge;
        zulu['appContext'] = mike;
        mike = {};
        mike = report.bind(oscar)(tango, mike, zulu);
        return entity;
    };
    zulu['showReportModalForUser'] = tango;
    tango = function(argFoo, argBar, argBaz, argCorge) { // Original name: showStaffTestReportModalForUser
        mike = argFoo;
        oscar = _closure1_slot10;
        golf = _closure1_slot0;
        options = _closure1_slot2;
        zulu = 5;
        tango = options[zulu];
        entity = undefined;
        tango = golf.bind(entity)(tango);
        tango = tango.ReportNames;
        report = tango.USER;
        tango = {};
        verify = mike.id;
        tango['reported_user_id'] = verify;
        tango = oscar.bind(entity)(report, tango);
        tango = 6;
        tango = options[tango];
        oscar = golf.bind(entity)(tango);
        report = oscar.showReportModal;
        tango = {};
        zulu = options[zulu];
        zulu = golf.bind(entity)(zulu);
        zulu = zulu.ReportNames;
        zulu = zulu.USER;
        tango['name'] = zulu;
        tango['record'] = mike;
        mike = argBar;
        tango['contextualGuildId'] = mike;
        zulu = {};
        mike = 'staff';
        zulu['variant'] = mike;
        mike = {};
        golf = argBaz;
        mike['onSubmit'] = golf;
        golf = false;
        mike['isEligibleForFeedback'] = golf;
        golf = argCorge;
        mike['appContext'] = golf;
        mike = report.bind(oscar)(tango, zulu, mike);
        return entity;
    };
    zulu['showStaffTestReportModalForUser'] = tango;
    tango = function(argFoo, argBar) { // Original name: showUnauthenticatedReportModalForUser
        tango = _closure1_slot6;
        mike = tango.prototype;
        zulu = Object.create(mike, {constructor: {value: tango}});
        romeo = {};
        foxtrot = zulu;
        mike = new foxtrot[tango](romeo, yankee);
        mike = mike instanceof Object ? mike : zulu;
        oscar = _closure1_slot10;
        golf = _closure1_slot0;
        options = _closure1_slot2;
        zulu = 5;
        tango = options[zulu];
        entity = undefined;
        tango = golf.bind(entity)(tango);
        tango = tango.UnauthenticatedReportNames;
        report = tango.USER;
        tango = {};
        verify = mike.id;
        tango['reported_user_id'] = verify;
        tango = oscar.bind(entity)(report, tango);
        tango = 6;
        tango = options[tango];
        oscar = golf.bind(entity)(tango);
        report = oscar.showReportModal;
        tango = {};
        zulu = options[zulu];
        zulu = golf.bind(entity)(zulu);
        zulu = zulu.UnauthenticatedReportNames;
        zulu = zulu.USER;
        tango['name'] = zulu;
        tango['record'] = mike;
        zulu = {'onSubmit': null, 'isEligibleForFeedback': false, 'isAuthenticated': false};
        mike = argBar;
        zulu['onSubmit'] = mike;
        mike = argFoo;
        zulu['emailToken'] = mike;
        mike = {};
        mike = report.bind(oscar)(tango, mike, zulu);
        return entity;
    };
    zulu['showUnauthenticatedReportModalForUser'] = tango;
    tango = function(argFoo, argBar) { // Original name: showUnauthenticatedReportModalForMessage
        tango = _closure1_slot5;
        mike = tango.prototype;
        zulu = Object.create(mike, {constructor: {value: tango}});
        romeo = {};
        foxtrot = zulu;
        mike = new foxtrot[tango](romeo, yankee);
        mike = mike instanceof Object ? mike : zulu;
        oscar = _closure1_slot10;
        golf = _closure1_slot0;
        options = _closure1_slot2;
        zulu = 5;
        tango = options[zulu];
        entity = undefined;
        tango = golf.bind(entity)(tango);
        tango = tango.UnauthenticatedReportNames;
        report = tango.MESSAGE;
        tango = {};
        tango['message_id'] = entity;
        tango['channel_id'] = entity;
        tango = oscar.bind(entity)(report, tango);
        tango = 6;
        tango = options[tango];
        oscar = golf.bind(entity)(tango);
        report = oscar.showReportModal;
        tango = {};
        zulu = options[zulu];
        zulu = golf.bind(entity)(zulu);
        zulu = zulu.UnauthenticatedReportNames;
        zulu = zulu.MESSAGE;
        tango['name'] = zulu;
        tango['record'] = mike;
        zulu = {'onSubmit': null, 'isEligibleForFeedback': false, 'isAuthenticated': false};
        mike = argBar;
        zulu['onSubmit'] = mike;
        mike = argFoo;
        zulu['emailToken'] = mike;
        mike = {};
        mike = report.bind(oscar)(tango, mike, zulu);
        return entity;
    };
    zulu['showUnauthenticatedReportModalForMessage'] = tango;
    tango = function() { // Original name: submitReportForInappropriateConversationSafetyAlert
        entity = undefined;
        tango = _closure1_slot9;
        zulu = tango.apply;
        entity = arguments;
        mike = entity;
        entity = this;
        entity = zulu.bind(tango)(entity, mike);
        return entity;
    };
    zulu['submitReportForInappropriateConversationSafetyAlert'] = tango;
    tango = function(argFoo, argBar) { // Original name: showReportModalForInappropriateConversationSafetyAlert
        mike = argFoo;
        oscar = _closure1_slot10;
        golf = _closure1_slot0;
        options = _closure1_slot2;
        zulu = 5;
        tango = options[zulu];
        entity = undefined;
        tango = golf.bind(entity)(tango);
        tango = tango.ReportNames;
        report = tango.MESSAGE;
        tango = {};
        verify = mike.id;
        tango['message_id'] = verify;
        verify = mike.channel_id;
        tango['channel_id'] = verify;
        tango = oscar.bind(entity)(report, tango);
        tango = 6;
        tango = options[tango];
        oscar = golf.bind(entity)(tango);
        report = oscar.showReportModal;
        tango = {};
        zulu = options[zulu];
        zulu = golf.bind(entity)(zulu);
        zulu = zulu.ReportNames;
        zulu = zulu.MESSAGE;
        tango['name'] = zulu;
        tango['record'] = mike;
        zulu = {};
        mike = 'safety_alerts_v1';
        zulu['variant'] = mike;
        mike = {};
        golf = argBar;
        mike['onSubmit'] = golf;
        mike = report.bind(oscar)(tango, zulu, mike);
        return entity;
    };
    zulu['showReportModalForInappropriateConversationSafetyAlert'] = tango;
    mike = function(argFoo) { // Original name: showReportModalForApp
        entity = argFoo;
        verify = entity.application;
        zulu = entity.entrypoint;
        options = entity.contextualGuildId;
        golf = entity.contextualChannelId;
        mike = entity.onSubmit;
        oscar = _closure1_slot1;
        romeo = _closure1_slot2;
        entity = 8;
        report = romeo[entity];
        entity = undefined;
        yankee = oscar.bind(entity)(report);
        offset = yankee.trackWithMetadata;
        report = _closure1_slot7;
        oscar = report.REPORT_APPLICATION_CLICKED;
        report = {};
        foxtrot = verify.id;
        report['application_id'] = foxtrot;
        report['location'] = zulu;
        report = offset.bind(yankee)(oscar, report);
        oscar = _closure1_slot10;
        yankee = _closure1_slot0;
        offset = 5;
        tango = romeo[offset];
        tango = yankee.bind(entity)(tango);
        tango = tango.ReportNames;
        report = tango.APPLICATION;
        tango = {};
        foxtrot = verify.id;
        tango['application_id'] = foxtrot;
        tango['guild_id'] = options;
        tango['channel_id'] = golf;
        tango = oscar.bind(entity)(report, tango);
        tango = 6;
        tango = romeo[tango];
        oscar = yankee.bind(entity)(tango);
        report = oscar.showReportModal;
        tango = {};
        offset = romeo[offset];
        offset = yankee.bind(entity)(offset);
        offset = offset.ReportNames;
        offset = offset.APPLICATION;
        tango['name'] = offset;
        tango['record'] = verify;
        tango['contextualGuildId'] = options;
        tango['contextualChannelId'] = golf;
        tango['entrypoint'] = zulu;
        zulu = {};
        zulu['onSubmit'] = mike;
        mike = {};
        mike = report.bind(oscar)(tango, mike, zulu);
        return entity;
    };
    zulu['showReportModalForApp'] = mike;
    return entity;
})();