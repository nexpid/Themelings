// app/modules/in_app_reports/ReportModals.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: _submitHamReportForFirstDM
        report = undefined;
        entity = undefined;
        tangon = _closure1_slot3;
        zuuluu = function* (argFoo, argBar) {
            entity = function* (argFoo, argBar) { // Original name: ?anon_0_
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=3);
                    if(tangon) { _fun00002_ip = 135; continue _fun00001 }
 10:
                    michal = argFoo;
                    zuuluu = argBar;
 16: // try_start_0
                    verify = _closure1_slot0;
                    offset = _closure1_slot2;
                    tangon = 8;
                    report = offset[tangon];
                    tangon = undefined;
                    golfie = verify.bind(tangon)(report);
                    oscard = golfie.submitHeadlessReport;
                    report = {};
                    option = 6;
                    option = offset[option];
                    option = verify.bind(tangon)(option);
                    option = option.ReportNames;
                    option = option.FIRST_DM;
                    report['name'] = option;
                    report['record'] = michal;
                    michal = {};
                    option = '_first_dm_ham_v1';
                    michal['variant'] = option;
                    michal = oscard.bind(golfie)(report, michal);
                    SaveGenerator(address=104);
 102:
                    return michal;
 104:
                    ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                    if(report) { _fun00002_ip = 125; continue _fun00001 }
 110:
                    oscard = zuuluu;
                    report = null;
                    if(!(report != oscard)) { _fun00002_ip = 123; continue _fun00001 }
 119:
                    zuuluu = zuuluu.bind(tangon)();
 123: // try_end0
                    _fun00002_ip = 130; continue _fun00001;
 125:
                    return michal;
 128: // catch_target0
                    CatchBlockStart(arg_register=1);
 130:
                    michal = undefined;
                    return michal;
 135:
                    return entity;
                }
            };
            return entity;
        };
        tangon = tangon.bind(report)(zuuluu);
        _closure1_slot9 = tangon;
        zuuluu = tangon.apply;
        entity = arguments;
        michal = entity;
        entity = this;
        entity = zuuluu.bind(tangon)(entity, michal);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = function() { // Original name: _submitReportForInappropriateConversationSafetyAlert
        report = undefined;
        entity = undefined;
        tangon = _closure1_slot3;
        zuuluu = function* (argFoo, argBar, argBaz) {
            entity = function* (argFoo, argBar, argBaz) { // Original name: ?anon_0_
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=4);
                    if(report) { _fun00004_ip = 156; continue _fun00003 }
 10:
                    zuuluu = argFoo;
                    tangon = argBar;
                    michal = argBaz;
 19: // try_start_0
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    report = 8;
                    oscard = yankee[report];
                    report = undefined;
                    option = offset.bind(report)(oscard);
                    golfie = option.submitHeadlessReport;
                    oscard = {};
                    verify = 6;
                    verify = yankee[verify];
                    verify = offset.bind(report)(verify);
                    verify = verify.ReportNames;
                    verify = verify.MESSAGE;
                    oscard['name'] = verify;
                    oscard['record'] = zuuluu;
                    zuuluu = {};
                    verify = 'safety_alerts_headless_v1';
                    zuuluu['variant'] = verify;
                    zuuluu = golfie.bind(option)(oscard, zuuluu);
                    SaveGenerator(address=107);
 105:
                    return zuuluu;
 107:
                    ResumeGenerator(result_out_reg=2, return_bool_out_reg=5);
                    if(oscard) { _fun00004_ip = 128; continue _fun00003 }
 113:
                    golfie = tangon;
                    oscard = null;
                    if(!(oscard != golfie)) { _fun00004_ip = 126; continue _fun00003 }
 122:
                    tangon = tangon.bind(report)();
 126: // try_end0
                    _fun00004_ip = 151; continue _fun00003;
 128:
                    return zuuluu;
 131: // catch_target0
                    CatchBlockStart(arg_register=2);
                    tangon = michal;
                    zuuluu = null;
                    if(!(zuuluu != tangon)) { _fun00004_ip = 151; continue _fun00003 }
 142:
                    zuuluu = michal;
                    michal = undefined;
                    michal = zuuluu.bind(michal)();
 151:
                    michal = undefined;
                    return michal;
 156:
                    return entity;
                }
            };
            return entity;
        };
        tangon = tangon.bind(report)(zuuluu);
        _closure1_slot10 = tangon;
        zuuluu = tangon.apply;
        entity = arguments;
        michal = entity;
        entity = this;
        entity = zuuluu.bind(tangon)(entity, michal);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = function(argFoo, argBar) { // Original name: trackShowReportModalAnalytics
        tangon = _closure1_slot1;
        zuuluu = _closure1_slot2;
        entity = 9;
        zuuluu = zuuluu[entity];
        entity = undefined;
        report = tangon.bind(entity)(zuuluu);
        tangon = report.trackWithMetadata;
        michal = _closure1_slot8;
        zuuluu = michal.IAR_MODAL_OPEN;
        michal = {};
        oscard = argFoo;
        michal['report_type'] = oscard;
        golfie = argBar;
        option = michal;
        oscard = copyDataProperties(option, golfie);
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot8 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/in_app_reports/ReportModals.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo, argBar) { // Original name: showReportModalForGuild
        michal = argFoo;
        oscard = _closure1_slot11;
        golfie = _closure1_slot0;
        option = _closure1_slot2;
        zuuluu = 6;
        tangon = option[zuuluu];
        entity = undefined;
        tangon = golfie.bind(entity)(tangon);
        tangon = tangon.ReportNames;
        report = tangon.GUILD;
        tangon = {};
        verify = michal.id;
        tangon['guild_id'] = verify;
        tangon = oscard.bind(entity)(report, tangon);
        tangon = 7;
        tangon = option[tangon];
        oscard = golfie.bind(entity)(tangon);
        report = oscard.showReportModal;
        tangon = {};
        zuuluu = option[zuuluu];
        zuuluu = golfie.bind(entity)(zuuluu);
        zuuluu = zuuluu.ReportNames;
        zuuluu = zuuluu.GUILD;
        tangon['name'] = zuuluu;
        tangon['record'] = michal;
        zuuluu = {};
        michal = argBar;
        zuuluu['onSubmit'] = michal;
        michal = {};
        michal = report.bind(oscard)(tangon, michal, zuuluu);
        return entity;
    };
    zuuluu['showReportModalForGuild'] = tangon;
    tangon = function(argFoo, argBar) { // Original name: showReportModalForGuildDirectoryEntry
        michal = argFoo;
        oscard = _closure1_slot11;
        golfie = _closure1_slot0;
        option = _closure1_slot2;
        zuuluu = 6;
        tangon = option[zuuluu];
        entity = undefined;
        tangon = golfie.bind(entity)(tangon);
        tangon = tangon.ReportNames;
        report = tangon.GUILD_DIRECTORY_ENTRY;
        tangon = {};
        verify = michal.channelId;
        tangon['channel_id'] = verify;
        verify = michal.guildId;
        tangon['guild_id'] = verify;
        tangon = oscard.bind(entity)(report, tangon);
        tangon = 7;
        tangon = option[tangon];
        oscard = golfie.bind(entity)(tangon);
        report = oscard.showReportModal;
        tangon = {};
        zuuluu = option[zuuluu];
        zuuluu = golfie.bind(entity)(zuuluu);
        zuuluu = zuuluu.ReportNames;
        zuuluu = zuuluu.GUILD_DIRECTORY_ENTRY;
        tangon['name'] = zuuluu;
        tangon['record'] = michal;
        zuuluu = {};
        michal = argBar;
        zuuluu['onSubmit'] = michal;
        michal = {};
        michal = report.bind(oscard)(tangon, michal, zuuluu);
        return entity;
    };
    zuuluu['showReportModalForGuildDirectoryEntry'] = tangon;
    tangon = function(argFoo, argBar, argBaz) { // Original name: showReportModalForMessage
        michal = argFoo;
        oscard = _closure1_slot11;
        golfie = _closure1_slot0;
        option = _closure1_slot2;
        zuuluu = 6;
        tangon = option[zuuluu];
        entity = undefined;
        tangon = golfie.bind(entity)(tangon);
        tangon = tangon.ReportNames;
        report = tangon.MESSAGE;
        tangon = {};
        verify = michal.id;
        tangon['message_id'] = verify;
        verify = michal.channel_id;
        tangon['channel_id'] = verify;
        tangon = oscard.bind(entity)(report, tangon);
        tangon = 7;
        tangon = option[tangon];
        oscard = golfie.bind(entity)(tangon);
        report = oscard.showReportModal;
        tangon = {};
        zuuluu = option[zuuluu];
        zuuluu = golfie.bind(entity)(zuuluu);
        zuuluu = zuuluu.ReportNames;
        zuuluu = zuuluu.MESSAGE;
        tangon['name'] = zuuluu;
        tangon['record'] = michal;
        zuuluu = {};
        michal = argBaz;
        zuuluu['onSubmit'] = michal;
        michal = {};
        michal = report.bind(oscard)(tangon, michal, zuuluu);
        return entity;
    };
    zuuluu['showReportModalForMessage'] = tangon;
    tangon = function(argFoo, argBar, argBaz) { // Original name: showStaffTestReportModalForMessage
        michal = argFoo;
        oscard = _closure1_slot11;
        golfie = _closure1_slot0;
        option = _closure1_slot2;
        zuuluu = 6;
        tangon = option[zuuluu];
        entity = undefined;
        tangon = golfie.bind(entity)(tangon);
        tangon = tangon.ReportNames;
        report = tangon.MESSAGE;
        tangon = {};
        verify = michal.id;
        tangon['message_id'] = verify;
        verify = michal.channel_id;
        tangon['channel_id'] = verify;
        tangon = oscard.bind(entity)(report, tangon);
        tangon = 7;
        tangon = option[tangon];
        oscard = golfie.bind(entity)(tangon);
        report = oscard.showReportModal;
        tangon = {};
        zuuluu = option[zuuluu];
        zuuluu = golfie.bind(entity)(zuuluu);
        zuuluu = zuuluu.ReportNames;
        zuuluu = zuuluu.MESSAGE;
        tangon['name'] = zuuluu;
        tangon['record'] = michal;
        zuuluu = {};
        michal = 'staff';
        zuuluu['variant'] = michal;
        michal = {};
        golfie = argBaz;
        michal['onSubmit'] = golfie;
        michal = report.bind(oscard)(tangon, zuuluu, michal);
        return entity;
    };
    zuuluu['showStaffTestReportModalForMessage'] = tangon;
    tangon = function(argFoo, argBar, argBaz) { // Original name: showStaffTestReportModalForGuild
        michal = argFoo;
        oscard = _closure1_slot11;
        golfie = _closure1_slot0;
        option = _closure1_slot2;
        zuuluu = 6;
        tangon = option[zuuluu];
        entity = undefined;
        tangon = golfie.bind(entity)(tangon);
        tangon = tangon.ReportNames;
        report = tangon.GUILD;
        tangon = {};
        verify = michal.id;
        tangon['guild_id'] = verify;
        tangon = oscard.bind(entity)(report, tangon);
        tangon = 7;
        tangon = option[tangon];
        oscard = golfie.bind(entity)(tangon);
        report = oscard.showReportModal;
        tangon = {};
        zuuluu = option[zuuluu];
        zuuluu = golfie.bind(entity)(zuuluu);
        zuuluu = zuuluu.ReportNames;
        zuuluu = zuuluu.GUILD;
        tangon['name'] = zuuluu;
        tangon['record'] = michal;
        zuuluu = {};
        michal = 'staff';
        zuuluu['variant'] = michal;
        michal = {};
        golfie = argBaz;
        michal['onSubmit'] = golfie;
        michal = report.bind(oscard)(tangon, zuuluu, michal);
        return entity;
    };
    zuuluu['showStaffTestReportModalForGuild'] = tangon;
    tangon = function(argFoo, argBar) { // Original name: showReportModalForStageChannel
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            tangon = _closure1_slot4;
            zuuluu = tangon.getStageInstanceByChannel;
            entity = argFoo;
            entity = entity.id;
            entity = zuuluu.bind(tangon)(entity);
            zuuluu = null;
            if(!(zuuluu != entity)) { _fun00006_ip = 178; continue _fun00005 }
 35:
            report = _closure1_slot11;
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            michal = 6;
            zuuluu = option[michal];
            oscard = undefined;
            zuuluu = golfie.bind(oscard)(zuuluu);
            zuuluu = zuuluu.ReportNames;
            tangon = zuuluu.STAGE_CHANNEL;
            zuuluu = {};
            verify = entity.id;
            zuuluu['stage_instance_id'] = verify;
            verify = entity.channel_id;
            zuuluu['channel_id'] = verify;
            verify = entity.guild_id;
            zuuluu['guild_id'] = verify;
            zuuluu = report.bind(oscard)(tangon, zuuluu);
            zuuluu = 7;
            zuuluu = option[zuuluu];
            report = golfie.bind(oscard)(zuuluu);
            tangon = report.showReportModal;
            zuuluu = {};
            michal = option[michal];
            michal = golfie.bind(oscard)(michal);
            michal = michal.ReportNames;
            michal = michal.STAGE_CHANNEL;
            zuuluu['name'] = michal;
            zuuluu['record'] = entity;
            michal = {};
            entity = argBar;
            michal['onSubmit'] = entity;
            entity = {};
            entity = tangon.bind(report)(zuuluu, entity, michal);
 178:
            entity = undefined;
            return entity;
        }
    };
    zuuluu['showReportModalForStageChannel'] = tangon;
    tangon = function(argFoo, argBar) { // Original name: showReportModalForGuildScheduledEvent
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            michal = argFoo;
            oscard = _closure1_slot11;
            report = _closure1_slot0;
            entity = _closure1_slot2;
            option = 6;
            tangon = entity[option];
            entity = undefined;
            tangon = report.bind(entity)(tangon);
            tangon = tangon.ReportNames;
            report = tangon.GUILD_SCHEDULED_EVENT;
            tangon = {};
            golfie = michal.id;
            tangon['guild_scheduled_event_id'] = golfie;
            golfie = michal.guild_id;
            tangon['guild_id'] = golfie;
            verify = michal.channel_id;
            golfie = null;
            offset = golfie != verify;
            golfie = undefined;
            if(!offset) { _fun00008_ip = 84; continue _fun00007 }
 81:
            golfie = verify;
 84:
            tangon['channel_id'] = golfie;
            tangon = oscard.bind(entity)(report, tangon);
            golfie = _closure1_slot0;
            zuuluu = _closure1_slot2;
            tangon = 7;
            tangon = zuuluu[tangon];
            oscard = golfie.bind(entity)(tangon);
            report = oscard.showReportModal;
            tangon = {};
            zuuluu = zuuluu[option];
            zuuluu = golfie.bind(entity)(zuuluu);
            zuuluu = zuuluu.ReportNames;
            zuuluu = zuuluu.GUILD_SCHEDULED_EVENT;
            tangon['name'] = zuuluu;
            tangon['record'] = michal;
            zuuluu = {};
            michal = argBar;
            zuuluu['onSubmit'] = michal;
            michal = {};
            michal = report.bind(oscard)(tangon, michal, zuuluu);
            return entity;
        }
    };
    zuuluu['showReportModalForGuildScheduledEvent'] = tangon;
    tangon = function(argFoo, argBar) { // Original name: showReportModalForFirstDM
        michal = argFoo;
        oscard = _closure1_slot11;
        golfie = _closure1_slot0;
        option = _closure1_slot2;
        zuuluu = 6;
        tangon = option[zuuluu];
        entity = undefined;
        tangon = golfie.bind(entity)(tangon);
        tangon = tangon.ReportNames;
        report = tangon.FIRST_DM;
        tangon = {};
        verify = michal.id;
        tangon['message_id'] = verify;
        verify = michal.channel_id;
        tangon['channel_id'] = verify;
        tangon = oscard.bind(entity)(report, tangon);
        tangon = 7;
        tangon = option[tangon];
        oscard = golfie.bind(entity)(tangon);
        report = oscard.showReportModal;
        tangon = {};
        zuuluu = option[zuuluu];
        zuuluu = golfie.bind(entity)(zuuluu);
        zuuluu = zuuluu.ReportNames;
        zuuluu = zuuluu.FIRST_DM;
        tangon['name'] = zuuluu;
        tangon['record'] = michal;
        zuuluu = {};
        michal = argBar;
        zuuluu['onSubmit'] = michal;
        michal = false;
        zuuluu['isEligibleForFeedback'] = michal;
        michal = {};
        michal = report.bind(oscard)(tangon, michal, zuuluu);
        return entity;
    };
    zuuluu['showReportModalForFirstDM'] = tangon;
    tangon = function() { // Original name: submitHamReportForFirstDM
        entity = undefined;
        tangon = _closure1_slot9;
        zuuluu = tangon.apply;
        entity = arguments;
        michal = entity;
        entity = this;
        entity = zuuluu.bind(tangon)(entity, michal);
        return entity;
    };
    zuuluu['submitHamReportForFirstDM'] = tangon;
    tangon = function(argFoo, argBar, argBaz, argCor) { // Original name: showReportModalForUser
        michal = argFoo;
        oscard = _closure1_slot11;
        golfie = _closure1_slot0;
        option = _closure1_slot2;
        zuuluu = 6;
        tangon = option[zuuluu];
        entity = undefined;
        tangon = golfie.bind(entity)(tangon);
        tangon = tangon.ReportNames;
        report = tangon.USER;
        tangon = {};
        verify = michal.id;
        tangon['reported_user_id'] = verify;
        tangon = oscard.bind(entity)(report, tangon);
        tangon = 7;
        tangon = option[tangon];
        oscard = golfie.bind(entity)(tangon);
        report = oscard.showReportModal;
        tangon = {};
        zuuluu = option[zuuluu];
        zuuluu = golfie.bind(entity)(zuuluu);
        zuuluu = zuuluu.ReportNames;
        zuuluu = zuuluu.USER;
        tangon['name'] = zuuluu;
        tangon['record'] = michal;
        michal = argBar;
        tangon['contextualGuildId'] = michal;
        zuuluu = {};
        michal = argBaz;
        zuuluu['onSubmit'] = michal;
        michal = argCor;
        zuuluu['appContext'] = michal;
        michal = {};
        michal = report.bind(oscard)(tangon, michal, zuuluu);
        return entity;
    };
    zuuluu['showReportModalForUser'] = tangon;
    tangon = function(argFoo, argBar, argBaz, argCor) { // Original name: showStaffTestReportModalForUser
        michal = argFoo;
        oscard = _closure1_slot11;
        golfie = _closure1_slot0;
        option = _closure1_slot2;
        zuuluu = 6;
        tangon = option[zuuluu];
        entity = undefined;
        tangon = golfie.bind(entity)(tangon);
        tangon = tangon.ReportNames;
        report = tangon.USER;
        tangon = {};
        verify = michal.id;
        tangon['reported_user_id'] = verify;
        tangon = oscard.bind(entity)(report, tangon);
        tangon = 7;
        tangon = option[tangon];
        oscard = golfie.bind(entity)(tangon);
        report = oscard.showReportModal;
        tangon = {};
        zuuluu = option[zuuluu];
        zuuluu = golfie.bind(entity)(zuuluu);
        zuuluu = zuuluu.ReportNames;
        zuuluu = zuuluu.USER;
        tangon['name'] = zuuluu;
        tangon['record'] = michal;
        michal = argBar;
        tangon['contextualGuildId'] = michal;
        zuuluu = {};
        michal = 'staff';
        zuuluu['variant'] = michal;
        michal = {};
        golfie = argBaz;
        michal['onSubmit'] = golfie;
        golfie = false;
        michal['isEligibleForFeedback'] = golfie;
        golfie = argCor;
        michal['appContext'] = golfie;
        michal = report.bind(oscard)(tangon, zuuluu, michal);
        return entity;
    };
    zuuluu['showStaffTestReportModalForUser'] = tangon;
    tangon = function(argFoo, argBar) { // Original name: showUnauthenticatedReportModalForUser
        tangon = _closure1_slot7;
        michal = tangon.prototype;
        zuuluu = Object.create(michal, {constructor: {value: tangon}});
        romeon = {};
        foxtra = zuuluu;
        michal = new foxtra[tangon](romeon, yankee);
        michal = michal instanceof Object ? michal : zuuluu;
        oscard = _closure1_slot11;
        golfie = _closure1_slot0;
        option = _closure1_slot2;
        zuuluu = 6;
        tangon = option[zuuluu];
        entity = undefined;
        tangon = golfie.bind(entity)(tangon);
        tangon = tangon.UnauthenticatedReportNames;
        report = tangon.USER;
        tangon = {};
        verify = michal.id;
        tangon['reported_user_id'] = verify;
        tangon = oscard.bind(entity)(report, tangon);
        tangon = 7;
        tangon = option[tangon];
        oscard = golfie.bind(entity)(tangon);
        report = oscard.showReportModal;
        tangon = {};
        zuuluu = option[zuuluu];
        zuuluu = golfie.bind(entity)(zuuluu);
        zuuluu = zuuluu.UnauthenticatedReportNames;
        zuuluu = zuuluu.USER;
        tangon['name'] = zuuluu;
        tangon['record'] = michal;
        zuuluu = {'onSubmit': null, 'isEligibleForFeedback': false, 'isAuthenticated': false};
        michal = argBar;
        zuuluu['onSubmit'] = michal;
        michal = argFoo;
        zuuluu['emailToken'] = michal;
        michal = {};
        michal = report.bind(oscard)(tangon, michal, zuuluu);
        return entity;
    };
    zuuluu['showUnauthenticatedReportModalForUser'] = tangon;
    tangon = function(argFoo, argBar) { // Original name: showUnauthenticatedReportModalForGuild
        tangon = _closure1_slot5;
        michal = tangon.prototype;
        zuuluu = Object.create(michal, {constructor: {value: tangon}});
        romeon = {};
        foxtra = zuuluu;
        michal = new foxtra[tangon](romeon, yankee);
        michal = michal instanceof Object ? michal : zuuluu;
        oscard = _closure1_slot11;
        golfie = _closure1_slot0;
        option = _closure1_slot2;
        zuuluu = 6;
        tangon = option[zuuluu];
        entity = undefined;
        tangon = golfie.bind(entity)(tangon);
        tangon = tangon.UnauthenticatedReportNames;
        report = tangon.GUILD;
        tangon = {};
        verify = michal.id;
        tangon['guild_id'] = verify;
        tangon = oscard.bind(entity)(report, tangon);
        tangon = 7;
        tangon = option[tangon];
        oscard = golfie.bind(entity)(tangon);
        report = oscard.showReportModal;
        tangon = {};
        zuuluu = option[zuuluu];
        zuuluu = golfie.bind(entity)(zuuluu);
        zuuluu = zuuluu.UnauthenticatedReportNames;
        zuuluu = zuuluu.GUILD;
        tangon['name'] = zuuluu;
        tangon['record'] = michal;
        zuuluu = {'onSubmit': null, 'isEligibleForFeedback': false, 'isAuthenticated': false};
        michal = argBar;
        zuuluu['onSubmit'] = michal;
        michal = argFoo;
        zuuluu['emailToken'] = michal;
        michal = {};
        michal = report.bind(oscard)(tangon, michal, zuuluu);
        return entity;
    };
    zuuluu['showUnauthenticatedReportModalForGuild'] = tangon;
    tangon = function(argFoo, argBar) { // Original name: showUnauthenticatedReportModalForMessage
        tangon = _closure1_slot6;
        michal = tangon.prototype;
        zuuluu = Object.create(michal, {constructor: {value: tangon}});
        romeon = {};
        foxtra = zuuluu;
        michal = new foxtra[tangon](romeon, yankee);
        michal = michal instanceof Object ? michal : zuuluu;
        oscard = _closure1_slot11;
        golfie = _closure1_slot0;
        option = _closure1_slot2;
        zuuluu = 6;
        tangon = option[zuuluu];
        entity = undefined;
        tangon = golfie.bind(entity)(tangon);
        tangon = tangon.UnauthenticatedReportNames;
        report = tangon.MESSAGE;
        tangon = {};
        tangon['message_id'] = entity;
        tangon['channel_id'] = entity;
        tangon = oscard.bind(entity)(report, tangon);
        tangon = 7;
        tangon = option[tangon];
        oscard = golfie.bind(entity)(tangon);
        report = oscard.showReportModal;
        tangon = {};
        zuuluu = option[zuuluu];
        zuuluu = golfie.bind(entity)(zuuluu);
        zuuluu = zuuluu.UnauthenticatedReportNames;
        zuuluu = zuuluu.MESSAGE;
        tangon['name'] = zuuluu;
        tangon['record'] = michal;
        zuuluu = {'onSubmit': null, 'isEligibleForFeedback': false, 'isAuthenticated': false};
        michal = argBar;
        zuuluu['onSubmit'] = michal;
        michal = argFoo;
        zuuluu['emailToken'] = michal;
        michal = {};
        michal = report.bind(oscard)(tangon, michal, zuuluu);
        return entity;
    };
    zuuluu['showUnauthenticatedReportModalForMessage'] = tangon;
    tangon = function() { // Original name: submitReportForInappropriateConversationSafetyAlert
        entity = undefined;
        tangon = _closure1_slot10;
        zuuluu = tangon.apply;
        entity = arguments;
        michal = entity;
        entity = this;
        entity = zuuluu.bind(tangon)(entity, michal);
        return entity;
    };
    zuuluu['submitReportForInappropriateConversationSafetyAlert'] = tangon;
    tangon = function(argFoo, argBar) { // Original name: showReportModalForInappropriateConversationSafetyAlert
        michal = argFoo;
        oscard = _closure1_slot11;
        golfie = _closure1_slot0;
        option = _closure1_slot2;
        zuuluu = 6;
        tangon = option[zuuluu];
        entity = undefined;
        tangon = golfie.bind(entity)(tangon);
        tangon = tangon.ReportNames;
        report = tangon.MESSAGE;
        tangon = {};
        verify = michal.id;
        tangon['message_id'] = verify;
        verify = michal.channel_id;
        tangon['channel_id'] = verify;
        tangon = oscard.bind(entity)(report, tangon);
        tangon = 7;
        tangon = option[tangon];
        oscard = golfie.bind(entity)(tangon);
        report = oscard.showReportModal;
        tangon = {};
        zuuluu = option[zuuluu];
        zuuluu = golfie.bind(entity)(zuuluu);
        zuuluu = zuuluu.ReportNames;
        zuuluu = zuuluu.MESSAGE;
        tangon['name'] = zuuluu;
        tangon['record'] = michal;
        zuuluu = {};
        michal = 'safety_alerts_v1';
        zuuluu['variant'] = michal;
        michal = {};
        golfie = argBar;
        michal['onSubmit'] = golfie;
        michal = report.bind(oscard)(tangon, zuuluu, michal);
        return entity;
    };
    zuuluu['showReportModalForInappropriateConversationSafetyAlert'] = tangon;
    michal = function(argFoo) { // Original name: showReportModalForApp
        entity = argFoo;
        offset = entity.application;
        zuuluu = entity.entrypoint;
        verify = entity.contextualGuildId;
        option = entity.contextualChannelId;
        golfie = entity.onSubmit;
        michal = entity.appContext;
        oscard = _closure1_slot1;
        foxtra = _closure1_slot2;
        entity = 9;
        report = foxtra[entity];
        entity = undefined;
        romeon = oscard.bind(entity)(report);
        yankee = romeon.trackWithMetadata;
        report = _closure1_slot8;
        oscard = report.REPORT_APPLICATION_CLICKED;
        report = {};
        backup = offset.id;
        report['application_id'] = backup;
        report['location'] = zuuluu;
        report = yankee.bind(romeon)(oscard, report);
        oscard = _closure1_slot11;
        romeon = _closure1_slot0;
        yankee = 6;
        tangon = foxtra[yankee];
        tangon = romeon.bind(entity)(tangon);
        tangon = tangon.ReportNames;
        report = tangon.APPLICATION;
        tangon = {};
        backup = offset.id;
        tangon['application_id'] = backup;
        tangon['guild_id'] = verify;
        tangon['channel_id'] = option;
        tangon = oscard.bind(entity)(report, tangon);
        tangon = 7;
        tangon = foxtra[tangon];
        oscard = romeon.bind(entity)(tangon);
        report = oscard.showReportModal;
        tangon = {};
        yankee = foxtra[yankee];
        yankee = romeon.bind(entity)(yankee);
        yankee = yankee.ReportNames;
        yankee = yankee.APPLICATION;
        tangon['name'] = yankee;
        tangon['record'] = offset;
        tangon['contextualGuildId'] = verify;
        tangon['contextualChannelId'] = option;
        tangon['entrypoint'] = zuuluu;
        zuuluu = {};
        zuuluu['onSubmit'] = golfie;
        zuuluu['appContext'] = michal;
        michal = {};
        michal = report.bind(oscard)(tangon, michal, zuuluu);
        return entity;
    };
    zuuluu['showReportModalForApp'] = michal;
    return entity;
})();