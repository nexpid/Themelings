// app/modules/guild_communication_disabled/native/GuildDisableCommunication.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    tango = argCorge;
    golf = tango.bind(entity)(golf);
    var _closure1_slot5 = golf;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.View;
    var _closure1_slot6 = options;
    tango = tango.ScrollView;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    verify = tango.DisableCommunicationDuration;
    options = tango.GUILD_COMMUNICATION_DISABLED_RESOURCE_LINK;
    var _closure1_slot8 = options;
    tango = tango.SET_COMMUNICATION_DISABLED_MODAL_NAME;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot10 = tango;
    tango = 6;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot11 = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.Fragment;
    var _closure1_slot12 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot13 = tango;
    options = {};
    tango = verify.DURATION_60_SEC;
    options['value'] = tango;
    tango = function() { // Original name: getLabel
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 7;
        zulu = oscar[entity];
        mike = undefined;
        zulu = report.bind(mike)(zulu);
        tango = zulu.intl;
        zulu = tango.formatToPlainString;
        entity = oscar[entity];
        entity = report.bind(mike)(entity);
        entity = entity.t;
        mike = entity.iruf5O;
        entity = {};
        report = 1;
        entity['minutes'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    options['getLabel'] = tango;
    tango = new Array(6);
    tango[0] = options;
    options = {};
    offset = verify.DURATION_5_MIN;
    options['value'] = offset;
    offset = function() { // Original name: getLabel
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 7;
        zulu = oscar[entity];
        mike = undefined;
        zulu = report.bind(mike)(zulu);
        tango = zulu.intl;
        zulu = tango.formatToPlainString;
        entity = oscar[entity];
        entity = report.bind(mike)(entity);
        entity = entity.t;
        mike = entity.iruf5O;
        entity = {};
        report = 5;
        entity['minutes'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    options['getLabel'] = offset;
    tango[1] = options;
    options = {};
    offset = verify.DURATION_10_MIN;
    options['value'] = offset;
    offset = function() { // Original name: getLabel
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 7;
        zulu = oscar[entity];
        mike = undefined;
        zulu = report.bind(mike)(zulu);
        tango = zulu.intl;
        zulu = tango.formatToPlainString;
        entity = oscar[entity];
        entity = report.bind(mike)(entity);
        entity = entity.t;
        mike = entity.iruf5O;
        entity = {};
        report = 10;
        entity['minutes'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    options['getLabel'] = offset;
    tango[2] = options;
    options = {};
    offset = verify.DURATION_1_HOUR;
    options['value'] = offset;
    offset = function() { // Original name: getLabel
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 7;
        zulu = oscar[entity];
        mike = undefined;
        zulu = report.bind(mike)(zulu);
        tango = zulu.intl;
        zulu = tango.formatToPlainString;
        entity = oscar[entity];
        entity = report.bind(mike)(entity);
        entity = entity.t;
        mike = entity.LnvrAw;
        entity = {};
        report = 1;
        entity['hours'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    options['getLabel'] = offset;
    tango[3] = options;
    options = {};
    offset = verify.DURATION_1_DAY;
    options['value'] = offset;
    offset = function() { // Original name: getLabel
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 7;
        zulu = oscar[entity];
        mike = undefined;
        zulu = report.bind(mike)(zulu);
        tango = zulu.intl;
        zulu = tango.formatToPlainString;
        entity = oscar[entity];
        entity = report.bind(mike)(entity);
        entity = entity.t;
        mike = entity.jzH70d;
        entity = {};
        report = 1;
        entity['days'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    options['getLabel'] = offset;
    tango[4] = options;
    options = {};
    verify = verify.DURATION_1_WEEK;
    options['value'] = verify;
    verify = function() { // Original name: getLabel
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 7;
        zulu = oscar[entity];
        mike = undefined;
        zulu = report.bind(mike)(zulu);
        tango = zulu.intl;
        zulu = tango.formatToPlainString;
        entity = oscar[entity];
        entity = report.bind(mike)(entity);
        entity = entity.t;
        mike = entity.iVZYys;
        entity = {};
        report = 1;
        entity['weeks'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    options['getLabel'] = verify;
    tango[5] = options;
    var _closure1_slot14 = tango;
    tango = 8;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {};
    yankee = 9;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_BASE_PRIMARY;
    offset['backgroundColor'] = foxtrot;
    tango['container'] = offset;
    offset = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    offset['marginVertical'] = foxtrot;
    tango['reasonTextArea'] = offset;
    offset = {};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_16;
    offset['marginBottom'] = yankee;
    tango['buttonContainer'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot15 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: GuildDisableCommunication
        entity = argFoo;
        mike = entity.user;
        var _closure2_slot0 = mike;
        mike = entity.guildId;
        var _closure2_slot1 = mike;
        entity = entity.onClose;
        var _closure2_slot2 = entity;
        entity = _closure1_slot15;
        tango = undefined;
        yankee = entity.bind(tango)();
        zulu = _closure1_slot5;
        entity = zulu.useState;
        echo = 0;
        report = entity.bind(zulu)(echo);
        mike = _closure1_slot4;
        entity = 2;
        mike = mike.bind(tango)(report, entity);
        entity = mike[echo];
        var _closure2_slot3 = entity;
        entity = 1;
        entity = mike[entity];
        var _closure2_slot4 = entity;
        mike = zulu.useRef;
        entity = '';
        entity = mike.bind(zulu)(entity);
        var _closure2_slot5 = entity;
        entity = zulu.useRef;
        mike = null;
        oscar = entity.bind(zulu)(mike);
        entity = zulu.useRef;
        sizing = entity.bind(zulu)(mike);
        update = _closure1_slot1;
        result = _closure1_slot2;
        entity = 10;
        entity = result[entity];
        mike = update.bind(tango)(entity);
        entity = {};
        zulu = true;
        entity['includeKeyboardHeightIOS'] = zulu;
        entity['scrollViewRef'] = oscar;
        zulu = new Array(1);
        zulu[0] = sizing;
        entity['scrollTargets'] = zulu;
        entity = mike.bind(tango)(entity);
        golf = entity.insets;
        report = entity.onScroll;
        entity = 11;
        entity = result[entity];
        mike = update.bind(tango)(entity);
        entity = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 12;
            mike = mike[entity];
            entity = undefined;
            report = zulu.bind(entity)(mike);
            tango = report.track;
            mike = _closure1_slot10;
            zulu = mike.OPEN_MODAL;
            mike = {};
            oscar = _closure1_slot9;
            mike['type'] = oscar;
            golf = _closure2_slot1;
            mike['guild_id'] = golf;
            oscar = _closure2_slot0;
            oscar = oscar.id;
            mike['other_user_id'] = oscar;
            mike = tango.bind(report)(zulu, mike);
            return entity;
        };
        entity = mike.bind(tango)(entity);
        entity = function() {
            tango = _closure1_slot3;
            zulu = undefined;
            mike = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                        if(mike) { _fun00002_ip = 295; continue _fun00001 }
 10:
                        tango = _closure1_slot1;
                        zulu = _closure1_slot2;
                        mike = 13;
                        mike = zulu[mike];
                        zulu = undefined;
                        offset = tango.bind(zulu)(mike);
                        verify = offset.setCommunicationDisabledDuration;
                        source = _closure2_slot1;
                        mike = _closure2_slot0;
                        update = mike.id;
                        report = _closure1_slot14;
                        mike = _closure2_slot3;
                        mike = report[mike];
                        echo = mike.value;
                        mike = _closure2_slot5;
                        result = mike.current;
                        control = offset;
                        mike = control[verify](source, update, echo, result, output);
                        SaveGenerator(address=94);
 92:
                        return mike;
 94:
                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                        if(report) { _fun00002_ip = 292; continue _fun00001 }
 103:
                        backup = _closure1_slot1;
                        kilo = _closure1_slot2;
                        report = 14;
                        report = kilo[report];
                        golf = backup.bind(zulu)(report);
                        oscar = golf.open;
                        report = {};
                        verify = 'GUILD_COMMUNICATION_DISABLED_SUCCESS';
                        report['key'] = verify;
                        offset = _closure1_slot0;
                        verify = 7;
                        yankee = kilo[verify];
                        yankee = offset.bind(zulu)(yankee);
                        romeo = yankee.intl;
                        yankee = romeo.formatToPlainString;
                        verify = kilo[verify];
                        verify = offset.bind(zulu)(verify);
                        verify = verify.t;
                        offset = verify.O9C3Nj;
                        verify = {};
                        foxtrot = 15;
                        foxtrot = kilo[foxtrot];
                        output = backup.bind(zulu)(foxtrot);
                        sizing = output.getName;
                        kilo = _closure2_slot1;
                        backup = _closure2_slot0;
                        foxtrot = null;
                        backup = sizing.bind(output)(kilo, foxtrot, backup);
                        kilo = foxtrot != backup;
                        foxtrot = '';
                        if(!kilo) { _fun00002_ip = 238; continue _fun00001 }
 235:
                        foxtrot = backup;
 238:
                        verify['user'] = foxtrot;
                        verify = yankee.bind(romeo)(offset, verify);
                        report['content'] = verify;
                        verify = _closure1_slot1;
                        offset = _closure1_slot2;
                        options = 16;
                        options = offset[options];
                        options = verify.bind(zulu)(options);
                        report['icon'] = options;
                        report = oscar.bind(golf)(report);
                        tango = _closure2_slot2;
                        tango = tango.bind(zulu)();
                        return zulu;
 292:
                        return mike;
 295:
                        return entity;
                    }
                };
                return entity;
            };
            mike = tango.bind(zulu)(mike);
            var _closure3_slot0 = mike;
            entity = function() {
                entity = undefined;
                tango = _closure3_slot0;
                zulu = tango.apply;
                entity = arguments;
                mike = entity;
                entity = this;
                entity = zulu.bind(tango)(entity, mike);
                return entity;
            };
            return entity;
        };
        foxtrot = entity.bind(tango)();
        zulu = _closure1_slot11;
        mike = _closure1_slot7;
        entity = {};
        options = yankee.container;
        entity['style'] = options;
        entity['ref'] = oscar;
        oscar = {};
        backup = 9;
        options = result[backup];
        options = update.bind(tango)(options);
        options = options.spacing;
        options = options.PX_12;
        oscar['paddingHorizontal'] = options;
        golf = golf.bottom;
        oscar['paddingBottom'] = golf;
        entity['contentContainerStyle'] = oscar;
        entity['onScroll'] = report;
        golf = _closure1_slot13;
        oscar = _closure1_slot12;
        report = {};
        output = _closure1_slot0;
        options = 17;
        options = result[options];
        options = output.bind(tango)(options);
        offset = options.TextWithIOSLinkWorkaround;
        options = {};
        romeo = {};
        backup = result[backup];
        backup = update.bind(tango)(backup);
        backup = backup.spacing;
        backup = backup.PX_16;
        romeo['marginVertical'] = backup;
        options['style'] = romeo;
        romeo = 'heading-md/semibold';
        options['variant'] = romeo;
        backup = 7;
        romeo = result[backup];
        romeo = output.bind(tango)(romeo);
        control = romeo.intl;
        source = control.format;
        romeo = result[backup];
        romeo = output.bind(tango)(romeo);
        romeo = romeo.t;
        update = romeo.Ns83GR;
        romeo = {};
        vacuum = _closure1_slot8;
        romeo['helpdeskArticle'] = vacuum;
        romeo = source.bind(control)(update, romeo);
        options['children'] = romeo;
        offset = zulu.bind(tango)(offset, options);
        options = new Array(4);
        options[0] = offset;
        offset = 18;
        offset = result[offset];
        offset = output.bind(tango)(offset);
        romeo = offset.TableRadioGroup;
        offset = {};
        update = result[backup];
        update = output.bind(tango)(update);
        control = update.intl;
        source = control.string;
        update = result[backup];
        update = output.bind(tango)(update);
        update = update.t;
        update = update.9XsExs;
        update = source.bind(control)(update);
        offset['title'] = update;
        offset['value'] = echo;
        echo = function(argFoo) { // Original name: onChange
            zulu = _closure2_slot4;
            entity = undefined;
            mike = argFoo;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        offset['onChange'] = echo;
        source = _closure1_slot14;
        update = source.map;
        echo = function(argFoo, argBar) {
            golf = argFoo;
            report = argBar;
            tango = _closure1_slot11;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 19;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.TableRadioRow;
            entity = {};
            entity['value'] = report;
            oscar = golf.getLabel;
            oscar = oscar.bind(golf)();
            entity['label'] = oscar;
            entity = tango.bind(zulu)(mike, entity, report);
            return entity;
        };
        echo = update.bind(source)(echo);
        offset['children'] = echo;
        offset = zulu.bind(tango)(romeo, offset);
        options[1] = offset;
        offset = 20;
        offset = result[offset];
        offset = output.bind(tango)(offset);
        romeo = offset.TextAreaScrollTarget;
        offset = {};
        offset['ref'] = sizing;
        sizing = yankee.reasonTextArea;
        offset['containerStyle'] = sizing;
        sizing = result[backup];
        sizing = output.bind(tango)(sizing);
        update = sizing.intl;
        echo = update.string;
        sizing = result[backup];
        sizing = output.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.GakiHx;
        sizing = echo.bind(update)(sizing);
        offset['placeholder'] = sizing;
        sizing = result[backup];
        sizing = output.bind(tango)(sizing);
        update = sizing.intl;
        echo = update.string;
        sizing = result[backup];
        sizing = output.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.ewHW19;
        sizing = echo.bind(update)(sizing);
        offset['label'] = sizing;
        sizing = 512;
        offset['maxLength'] = sizing;
        kilo = function(argFoo) { // Original name: onChange
            mike = _closure2_slot5;
            entity = argFoo;
            mike['current'] = entity;
            entity = undefined;
            return entity;
        };
        offset['onChange'] = kilo;
        offset = zulu.bind(tango)(romeo, offset);
        options[2] = offset;
        offset = _closure1_slot6;
        verify = {};
        yankee = yankee.buttonContainer;
        verify['style'] = yankee;
        yankee = 21;
        yankee = result[yankee];
        yankee = output.bind(tango)(yankee);
        romeo = yankee.Button;
        yankee = {};
        kilo = 'primary';
        yankee['variant'] = kilo;
        kilo = result[backup];
        kilo = output.bind(tango)(kilo);
        sizing = kilo.intl;
        kilo = sizing.string;
        backup = result[backup];
        backup = output.bind(tango)(backup);
        backup = backup.t;
        backup = backup.MlPTIi;
        backup = kilo.bind(sizing)(backup);
        yankee['text'] = backup;
        yankee['onPress'] = foxtrot;
        yankee = zulu.bind(tango)(romeo, yankee);
        verify['children'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[3] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 22;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_communication_disabled/native/GuildDisableCommunication.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();