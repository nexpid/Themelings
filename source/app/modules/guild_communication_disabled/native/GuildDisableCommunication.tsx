// app/modules/guild_communication_disabled/native/GuildDisableCommunication.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    tangon = argCor;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot5 = golfie;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.View;
    var _closure1_slot6 = option;
    tangon = tangon.ScrollView;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    verify = tangon.DisableCommunicationDuration;
    option = tangon.GUILD_COMMUNICATION_DISABLED_RESOURCE_LINK;
    var _closure1_slot8 = option;
    tangon = tangon.SET_COMMUNICATION_DISABLED_MODAL_NAME;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot10 = tangon;
    tangon = 6;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot11 = option;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.Fragment;
    var _closure1_slot12 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot13 = tangon;
    option = {};
    tangon = verify.DURATION_60_SEC;
    option['value'] = tangon;
    tangon = function() { // Original name: getLabel
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 7;
        zuuluu = oscard[entity];
        michal = undefined;
        zuuluu = report.bind(michal)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.formatToPlainString;
        entity = oscard[entity];
        entity = report.bind(michal)(entity);
        entity = entity.t;
        michal = entity.iruf5O;
        entity = {};
        report = 1;
        entity['minutes'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    option['getLabel'] = tangon;
    tangon = new Array(6);
    tangon[0] = option;
    option = {};
    offset = verify.DURATION_5_MIN;
    option['value'] = offset;
    offset = function() { // Original name: getLabel
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 7;
        zuuluu = oscard[entity];
        michal = undefined;
        zuuluu = report.bind(michal)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.formatToPlainString;
        entity = oscard[entity];
        entity = report.bind(michal)(entity);
        entity = entity.t;
        michal = entity.iruf5O;
        entity = {};
        report = 5;
        entity['minutes'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    option['getLabel'] = offset;
    tangon[1] = option;
    option = {};
    offset = verify.DURATION_10_MIN;
    option['value'] = offset;
    offset = function() { // Original name: getLabel
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 7;
        zuuluu = oscard[entity];
        michal = undefined;
        zuuluu = report.bind(michal)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.formatToPlainString;
        entity = oscard[entity];
        entity = report.bind(michal)(entity);
        entity = entity.t;
        michal = entity.iruf5O;
        entity = {};
        report = 10;
        entity['minutes'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    option['getLabel'] = offset;
    tangon[2] = option;
    option = {};
    offset = verify.DURATION_1_HOUR;
    option['value'] = offset;
    offset = function() { // Original name: getLabel
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 7;
        zuuluu = oscard[entity];
        michal = undefined;
        zuuluu = report.bind(michal)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.formatToPlainString;
        entity = oscard[entity];
        entity = report.bind(michal)(entity);
        entity = entity.t;
        michal = entity.LnvrAw;
        entity = {};
        report = 1;
        entity['hours'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    option['getLabel'] = offset;
    tangon[3] = option;
    option = {};
    offset = verify.DURATION_1_DAY;
    option['value'] = offset;
    offset = function() { // Original name: getLabel
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 7;
        zuuluu = oscard[entity];
        michal = undefined;
        zuuluu = report.bind(michal)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.formatToPlainString;
        entity = oscard[entity];
        entity = report.bind(michal)(entity);
        entity = entity.t;
        michal = entity.jzH70d;
        entity = {};
        report = 1;
        entity['days'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    option['getLabel'] = offset;
    tangon[4] = option;
    option = {};
    verify = verify.DURATION_1_WEEK;
    option['value'] = verify;
    verify = function() { // Original name: getLabel
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 7;
        zuuluu = oscard[entity];
        michal = undefined;
        zuuluu = report.bind(michal)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.formatToPlainString;
        entity = oscard[entity];
        entity = report.bind(michal)(entity);
        entity = entity.t;
        michal = entity.iVZYys;
        entity = {};
        report = 1;
        entity['weeks'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    option['getLabel'] = verify;
    tangon[5] = option;
    var _closure1_slot14 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    yankee = 9;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_BASE_PRIMARY;
    offset['backgroundColor'] = foxtra;
    tangon['container'] = offset;
    offset = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    offset['marginVertical'] = foxtra;
    tangon['reasonTextArea'] = offset;
    offset = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_16;
    offset['marginBottom'] = yankee;
    tangon['buttonContainer'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot15 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: GuildDisableCommunication
        entity = argFoo;
        michal = entity.user;
        var _closure2_slot0 = michal;
        michal = entity.guildId;
        var _closure2_slot1 = michal;
        entity = entity.onClose;
        var _closure2_slot2 = entity;
        entity = _closure1_slot15;
        tangon = undefined;
        yankee = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        entity = zuuluu.useState;
        echoed = 0;
        report = entity.bind(zuuluu)(echoed);
        michal = _closure1_slot4;
        entity = 2;
        michal = michal.bind(tangon)(report, entity);
        entity = michal[echoed];
        var _closure2_slot3 = entity;
        entity = 1;
        entity = michal[entity];
        var _closure2_slot4 = entity;
        michal = zuuluu.useRef;
        entity = '';
        entity = michal.bind(zuuluu)(entity);
        var _closure2_slot5 = entity;
        entity = zuuluu.useRef;
        michal = null;
        oscard = entity.bind(zuuluu)(michal);
        entity = zuuluu.useRef;
        sizing = entity.bind(zuuluu)(michal);
        update = _closure1_slot1;
        result = _closure1_slot2;
        entity = 10;
        entity = result[entity];
        michal = update.bind(tangon)(entity);
        entity = {};
        zuuluu = true;
        entity['includeKeyboardHeightIOS'] = zuuluu;
        entity['scrollViewRef'] = oscard;
        zuuluu = new Array(1);
        zuuluu[0] = sizing;
        entity['scrollTargets'] = zuuluu;
        entity = michal.bind(tangon)(entity);
        golfie = entity.insets;
        report = entity.onScroll;
        entity = 11;
        entity = result[entity];
        michal = update.bind(tangon)(entity);
        entity = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 12;
            michal = michal[entity];
            entity = undefined;
            report = zuuluu.bind(entity)(michal);
            tangon = report.track;
            michal = _closure1_slot10;
            zuuluu = michal.OPEN_MODAL;
            michal = {};
            oscard = _closure1_slot9;
            michal['type'] = oscard;
            golfie = _closure2_slot1;
            michal['guild_id'] = golfie;
            oscard = _closure2_slot0;
            oscard = oscard.id;
            michal['other_user_id'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        entity = michal.bind(tangon)(entity);
        entity = function() {
            tangon = _closure1_slot3;
            zuuluu = undefined;
            michal = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                        if(michal) { _fun00002_ip = 297; continue _fun00001 }
 10:
                        tangon = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        michal = 13;
                        michal = zuuluu[michal];
                        zuuluu = undefined;
                        offset = tangon.bind(zuuluu)(michal);
                        verify = offset.setCommunicationDisabledDuration;
                        source = _closure2_slot1;
                        michal = _closure2_slot0;
                        update = michal.id;
                        report = _closure1_slot14;
                        michal = _closure2_slot3;
                        michal = report[michal];
                        echoed = michal.value;
                        michal = _closure2_slot5;
                        result = michal.current;
                        ctrled = offset;
                        michal = ctrled[verify](source, update, echoed, result, output);
                        SaveGenerator(address=94);
 92:
                        return michal;
 94:
                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                        if(report) { _fun00002_ip = 294; continue _fun00001 }
 103:
                        backup = _closure1_slot1;
                        kiloes = _closure1_slot2;
                        report = 14;
                        report = kiloes[report];
                        golfie = backup.bind(zuuluu)(report);
                        oscard = golfie.open;
                        report = {};
                        verify = 'GUILD_COMMUNICATION_DISABLED_SUCCESS';
                        report['key'] = verify;
                        offset = _closure1_slot0;
                        verify = 7;
                        yankee = kiloes[verify];
                        yankee = offset.bind(zuuluu)(yankee);
                        romeon = yankee.intl;
                        yankee = romeon.formatToPlainString;
                        verify = kiloes[verify];
                        verify = offset.bind(zuuluu)(verify);
                        verify = verify.t;
                        offset = verify.O9C3Nj;
                        verify = {};
                        foxtra = 15;
                        foxtra = kiloes[foxtra];
                        output = backup.bind(zuuluu)(foxtra);
                        sizing = output.getName;
                        kiloes = _closure2_slot1;
                        backup = _closure2_slot0;
                        foxtra = null;
                        backup = sizing.bind(output)(kiloes, foxtra, backup);
                        kiloes = foxtra != backup;
                        foxtra = '';
                        if(!kiloes) { _fun00002_ip = 240; continue _fun00001 }
 237:
                        foxtra = backup;
 240:
                        verify['user'] = foxtra;
                        verify = yankee.bind(romeon)(offset, verify);
                        report['content'] = verify;
                        verify = _closure1_slot1;
                        offset = _closure1_slot2;
                        option = 16;
                        option = offset[option];
                        option = verify.bind(zuuluu)(option);
                        report['icon'] = option;
                        report = oscard.bind(golfie)(report);
                        tangon = _closure2_slot2;
                        tangon = tangon.bind(zuuluu)();
                        return zuuluu;
 294:
                        return michal;
 297:
                        return entity;
                    }
                };
                return entity;
            };
            michal = tangon.bind(zuuluu)(michal);
            var _closure3_slot0 = michal;
            entity = function() {
                entity = undefined;
                tangon = _closure3_slot0;
                zuuluu = tangon.apply;
                entity = arguments;
                michal = entity;
                entity = this;
                entity = zuuluu.bind(tangon)(entity, michal);
                return entity;
            };
            return entity;
        };
        foxtra = entity.bind(tangon)();
        zuuluu = _closure1_slot11;
        michal = _closure1_slot7;
        entity = {};
        option = yankee.container;
        entity['style'] = option;
        entity['ref'] = oscard;
        oscard = {};
        backup = 9;
        option = result[backup];
        option = update.bind(tangon)(option);
        option = option.spacing;
        option = option.PX_12;
        oscard['paddingHorizontal'] = option;
        golfie = golfie.bottom;
        oscard['paddingBottom'] = golfie;
        entity['contentContainerStyle'] = oscard;
        entity['onScroll'] = report;
        golfie = _closure1_slot13;
        oscard = _closure1_slot12;
        report = {};
        output = _closure1_slot0;
        option = 17;
        option = result[option];
        option = output.bind(tangon)(option);
        offset = option.TextWithIOSLinkWorkaround;
        option = {};
        romeon = {};
        backup = result[backup];
        backup = update.bind(tangon)(backup);
        backup = backup.spacing;
        backup = backup.PX_16;
        romeon['marginVertical'] = backup;
        option['style'] = romeon;
        romeon = 'heading-md/semibold';
        option['variant'] = romeon;
        backup = 7;
        romeon = result[backup];
        romeon = output.bind(tangon)(romeon);
        ctrled = romeon.intl;
        source = ctrled.format;
        romeon = result[backup];
        romeon = output.bind(tangon)(romeon);
        romeon = romeon.t;
        update = romeon.Ns83GR;
        romeon = {};
        vacuum = _closure1_slot8;
        romeon['helpdeskArticle'] = vacuum;
        romeon = source.bind(ctrled)(update, romeon);
        option['children'] = romeon;
        offset = zuuluu.bind(tangon)(offset, option);
        option = new Array(4);
        option[0] = offset;
        offset = 18;
        offset = result[offset];
        offset = output.bind(tangon)(offset);
        romeon = offset.TableRadioGroup;
        offset = {};
        update = result[backup];
        update = output.bind(tangon)(update);
        ctrled = update.intl;
        source = ctrled.string;
        update = result[backup];
        update = output.bind(tangon)(update);
        update = update.t;
        update = update.9XsExs;
        update = source.bind(ctrled)(update);
        offset['title'] = update;
        offset['value'] = echoed;
        echoed = function(argFoo) { // Original name: onChange
            zuuluu = _closure2_slot4;
            entity = undefined;
            michal = argFoo;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        offset['onChange'] = echoed;
        source = _closure1_slot14;
        update = source.map;
        echoed = function(argFoo, argBar) {
            golfie = argFoo;
            report = argBar;
            tangon = _closure1_slot11;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 19;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.TableRadioRow;
            entity = {};
            entity['value'] = report;
            oscard = golfie.getLabel;
            oscard = oscard.bind(golfie)();
            entity['label'] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity, report);
            return entity;
        };
        echoed = update.bind(source)(echoed);
        offset['children'] = echoed;
        offset = zuuluu.bind(tangon)(romeon, offset);
        option[1] = offset;
        offset = 20;
        offset = result[offset];
        offset = output.bind(tangon)(offset);
        romeon = offset.TextAreaScrollTarget;
        offset = {};
        offset['ref'] = sizing;
        sizing = yankee.reasonTextArea;
        offset['containerStyle'] = sizing;
        sizing = result[backup];
        sizing = output.bind(tangon)(sizing);
        update = sizing.intl;
        echoed = update.string;
        sizing = result[backup];
        sizing = output.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.GakiHx;
        sizing = echoed.bind(update)(sizing);
        offset['placeholder'] = sizing;
        sizing = result[backup];
        sizing = output.bind(tangon)(sizing);
        update = sizing.intl;
        echoed = update.string;
        sizing = result[backup];
        sizing = output.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.ewHW19;
        sizing = echoed.bind(update)(sizing);
        offset['label'] = sizing;
        sizing = 512;
        offset['maxLength'] = sizing;
        kiloes = function(argFoo) { // Original name: onChange
            michal = _closure2_slot5;
            entity = argFoo;
            michal['current'] = entity;
            entity = undefined;
            return entity;
        };
        offset['onChange'] = kiloes;
        offset = zuuluu.bind(tangon)(romeon, offset);
        option[2] = offset;
        offset = _closure1_slot6;
        verify = {};
        yankee = yankee.buttonContainer;
        verify['style'] = yankee;
        yankee = 21;
        yankee = result[yankee];
        yankee = output.bind(tangon)(yankee);
        romeon = yankee.Button;
        yankee = {};
        kiloes = 'primary';
        yankee['variant'] = kiloes;
        kiloes = result[backup];
        kiloes = output.bind(tangon)(kiloes);
        sizing = kiloes.intl;
        kiloes = sizing.string;
        backup = result[backup];
        backup = output.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.MlPTIi;
        backup = kiloes.bind(sizing)(backup);
        yankee['text'] = backup;
        yankee['onPress'] = foxtra;
        yankee = zuuluu.bind(tangon)(romeon, yankee);
        verify['children'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[3] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 22;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_communication_disabled/native/GuildDisableCommunication.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();