// app/modules/guild_communication_disabled/native/GuildEnableCommunicationAlert.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    options = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(options);
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.CLEAR_COMMUNICATION_DISABLED_MODAL_NAME;
    var _closure1_slot7 = golf;
    tango = tango.GUILD_COMMUNICATION_DISABLED_RESOURCE_LINK;
    var _closure1_slot8 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticEvents;
    var _closure1_slot9 = golf;
    offset = tango.Fonts;
    tango = 7;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot10 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot11 = tango;
    yankee = 8;
    tango = oscar[yankee];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    romeo = 16;
    verify['padding'] = romeo;
    tango['wrapper'] = verify;
    verify = {};
    verify['paddingTop'] = romeo;
    tango['body'] = verify;
    verify = {};
    romeo = 18;
    verify['lineHeight'] = romeo;
    tango['description'] = verify;
    verify = {};
    verify['paddingTop'] = yankee;
    tango['cta'] = verify;
    verify = {};
    offset = offset.PRIMARY_SEMIBOLD;
    verify['fontFamily'] = offset;
    tango['countdown'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot12 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_communication_disabled/native/GuildEnableCommunicationAlert.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildEnableCommunicationAlert
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tango = argFoo;
            sequence = tango.guildId;
            var _closure2_slot0 = sequence;
            vacuum = tango.userId;
            var _closure2_slot1 = vacuum;
            golf = tango.onCancel;
            mike = {'guildId': 0, 'userId': 0, 'onCancel': 0};
            update = null;
            papa = mike;
            context = null;
            entity = silentSetPrototypeOf(papa, context);
            zulu = 0;
            papa = {};
            context = tango;
            record = mike;
            report = copyDataProperties(papa, context, record);
            entity = _closure1_slot12;
            tango = undefined;
            result = entity.bind(tango)();
            var _closure2_slot2 = result;
            mike = _closure1_slot1;
            options = _closure1_slot2;
            entity = 9;
            entity = options[entity];
            entity = mike.bind(tango)(entity);
            verify = entity.bind(tango)(vacuum, sequence);
            oscar = _closure1_slot4;
            entity = 1;
            entity = oscar.bind(tango)(verify, entity);
            entity = entity[zulu];
            var _closure2_slot3 = entity;
            entity = 10;
            entity = options[entity];
            zulu = mike.bind(tango)(entity);
            entity = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 11;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.track;
                mike = _closure1_slot9;
                zulu = mike.OPEN_MODAL;
                mike = {};
                oscar = _closure1_slot7;
                mike['type'] = oscar;
                golf = _closure2_slot0;
                mike['guild_id'] = golf;
                oscar = _closure2_slot1;
                mike['other_user_id'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            entity = zulu.bind(tango)(entity);
            entity = function() {
                tango = _closure1_slot3;
                zulu = undefined;
                mike = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(mike) { _fun00004_ip = 190; continue _fun00003 }
 10:
                            tango = _closure1_slot1;
                            zulu = _closure1_slot2;
                            mike = 12;
                            mike = zulu[mike];
                            zulu = undefined;
                            oscar = tango.bind(zulu)(mike);
                            report = oscar.setCommunicationDisabledDuration;
                            tango = _closure2_slot0;
                            mike = _closure2_slot1;
                            mike = report.bind(oscar)(tango, mike);
                            SaveGenerator(address=62);
 60:
                            return mike;
 62:
                            ResumeGenerator(result_out_reg=1, return_bool_out_reg=3);
                            if(tango) { _fun00004_ip = 187; continue _fun00003 }
 68:
                            options = _closure1_slot1;
                            verify = _closure1_slot2;
                            tango = 13;
                            tango = verify[tango];
                            oscar = options.bind(zulu)(tango);
                            report = oscar.open;
                            tango = {};
                            offset = 'GUILD_ENABLE_COMMUNICATION_SUCCESS';
                            tango['key'] = offset;
                            romeo = _closure1_slot0;
                            golf = 14;
                            offset = verify[golf];
                            offset = romeo.bind(zulu)(offset);
                            yankee = offset.intl;
                            offset = yankee.string;
                            golf = verify[golf];
                            golf = romeo.bind(zulu)(golf);
                            golf = golf.t;
                            golf = golf./Mmbfn;
                            golf = offset.bind(yankee)(golf);
                            tango['content'] = golf;
                            golf = 15;
                            golf = verify[golf];
                            golf = options.bind(zulu)(golf);
                            tango['icon'] = golf;
                            tango = report.bind(oscar)(tango);
                            return zulu;
 187:
                            return mike;
 190:
                            return entity;
                        }
                    };
                    return entity;
                };
                mike = tango.bind(zulu)(mike);
                var _closure3_slot0 = mike;
                entity = function() {
                    entity = undefined;
                    tango = _closure3_slot0;
                    zulu = tango.apply;
                    entity = arguments;
                    mike = entity;
                    entity = this;
                    entity = zulu.bind(tango)(entity, mike);
                    return entity;
                };
                return entity;
            };
            oscar = entity.bind(tango)();
            zulu = _closure1_slot10;
            entity = 16;
            entity = options[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            papa = entity;
            context = report;
            verify = copyDataProperties(papa, context);
            yankee = _closure1_slot0;
            output = 14;
            verify = options[output];
            verify = yankee.bind(tango)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = options[output];
            verify = yankee.bind(tango)(verify);
            verify = verify.t;
            verify = verify.+ZD3oq;
            offset = offset.bind(romeo)(verify);
            verify = 'title';
            entity[verify] = offset;
            offset = result.wrapper;
            verify = 'style';
            entity[verify] = offset;
            verify = options[output];
            verify = yankee.bind(tango)(verify);
            offset = verify.intl;
            verify = offset.string;
            options = options[output];
            options = yankee.bind(tango)(options);
            options = options.t;
            options = options.ETE/oK;
            verify = verify.bind(offset)(options);
            options = 'cancelText';
            entity[options] = verify;
            verify = update == report;
            options = undefined;
            if(verify) { _fun00002_ip = 332; continue _fun00001 }
 326:
            options = report.onClose;
 332:
            report = 'onClose';
            entity[report] = options;
            report = 'onCancel';
            entity[report] = golf;
            romeo = _closure1_slot0;
            config = _closure1_slot2;
            report = config[output];
            report = romeo.bind(tango)(report);
            options = report.intl;
            golf = options.string;
            report = config[output];
            report = romeo.bind(tango)(report);
            report = report.t;
            report = report.qXtNtb;
            golf = golf.bind(options)(report);
            report = 'confirmText';
            entity[report] = golf;
            report = 'onConfirm';
            entity[report] = oscar;
            golf = _closure1_slot11;
            oscar = _closure1_slot5;
            report = {};
            options = result.body;
            report['style'] = options;
            offset = _closure1_slot10;
            options = 17;
            options = config[options];
            options = romeo.bind(tango)(options);
            verify = options.Text;
            options = {};
            yankee = result.description;
            options['style'] = yankee;
            backup = 'text-sm/medium';
            options['variant'] = backup;
            yankee = config[output];
            yankee = romeo.bind(tango)(yankee);
            kilo = yankee.intl;
            foxtrot = kilo.format;
            yankee = config[output];
            yankee = romeo.bind(tango)(yankee);
            yankee = yankee.t;
            romeo = yankee.t+abNT;
            yankee = {};
            control = _closure1_slot6;
            source = control.getUser;
            vacuum = source.bind(control)(vacuum);
            control = _closure1_slot1;
            source = 18;
            source = config[source];
            control = control.bind(tango)(source);
            source = control.getName;
            source = source.bind(control)(sequence, update, vacuum);
            control = update != source;
            update = '';
            if(!control) { _fun00002_ip = 580; continue _fun00001 }
 577:
            update = source;
 580:
            yankee['username'] = update;
            echo = function() { // Original name: countdown
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    mike = _closure2_slot3;
                    entity = null;
                    entity = entity != mike;
                    report = 0;
                    if(!entity) { _fun00006_ip = 50; continue _fun00005 }
 18:
                    entity = global;
                    zulu = entity.Date;
                    options = _closure2_slot3;
                    mike = zulu.prototype;
                    mike = Object.create(mike, {constructor: {value: zulu}});
                    verify = mike;
                    entity = new verify[zulu](options, golf);
                    report = entity instanceof Object ? entity : mike;
 50:
                    tango = _closure1_slot10;
                    mike = _closure1_slot1;
                    zulu = _closure1_slot2;
                    entity = 19;
                    entity = zulu[entity];
                    zulu = undefined;
                    mike = mike.bind(zulu)(entity);
                    entity = {};
                    oscar = _closure2_slot2;
                    oscar = oscar.countdown;
                    entity['style'] = oscar;
                    entity['deadline'] = report;
                    report = true;
                    entity['withUnits'] = report;
                    entity = tango.bind(zulu)(mike, entity);
                    return entity;
                }
            };
            yankee['countdown'] = echo;
            yankee = foxtrot.bind(kilo)(romeo, yankee);
            options['children'] = yankee;
            verify = offset.bind(tango)(verify, options);
            options = new Array(2);
            options[0] = verify;
            yankee = _closure1_slot10;
            foxtrot = _closure1_slot0;
            romeo = _closure1_slot2;
            verify = 20;
            verify = romeo[verify];
            verify = foxtrot.bind(tango)(verify);
            offset = verify.TextWithIOSLinkWorkaround;
            verify = {};
            echo = result.cta;
            kilo = new Array(2);
            kilo[0] = echo;
            result = result.description;
            kilo[1] = result;
            verify['style'] = kilo;
            verify['variant'] = backup;
            backup = romeo[output];
            backup = foxtrot.bind(tango)(backup);
            kilo = backup.intl;
            backup = kilo.format;
            romeo = romeo[output];
            romeo = foxtrot.bind(tango)(romeo);
            romeo = romeo.t;
            foxtrot = romeo.KtENkJ;
            romeo = {};
            sizing = _closure1_slot8;
            romeo['link'] = sizing;
            romeo = backup.bind(kilo)(foxtrot, romeo);
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[1] = verify;
            report['children'] = options;
            oscar = golf.bind(tango)(oscar, report);
            report = 'children';
            entity[report] = oscar;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();