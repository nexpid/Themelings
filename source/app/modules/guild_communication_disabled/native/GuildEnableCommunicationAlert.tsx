// app/modules/guild_communication_disabled/native/GuildEnableCommunicationAlert.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    option = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(option);
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.CLEAR_COMMUNICATION_DISABLED_MODAL_NAME;
    var _closure1_slot7 = golfie;
    tangon = tangon.GUILD_COMMUNICATION_DISABLED_RESOURCE_LINK;
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticEvents;
    var _closure1_slot9 = golfie;
    offset = tangon.Fonts;
    tangon = 7;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot11 = tangon;
    yankee = 8;
    tangon = oscard[yankee];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    romeon = 16;
    verify['padding'] = romeon;
    tangon['wrapper'] = verify;
    verify = {};
    verify['paddingTop'] = romeon;
    tangon['body'] = verify;
    verify = {};
    romeon = 18;
    verify['lineHeight'] = romeon;
    tangon['description'] = verify;
    verify = {};
    verify['paddingTop'] = yankee;
    tangon['cta'] = verify;
    verify = {};
    offset = offset.PRIMARY_SEMIBOLD;
    verify['fontFamily'] = offset;
    tangon['countdown'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_communication_disabled/native/GuildEnableCommunicationAlert.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildEnableCommunicationAlert
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tangon = argFoo;
            sequen = tangon.guildId;
            var _closure2_slot0 = sequen;
            vacuum = tangon.userId;
            var _closure2_slot1 = vacuum;
            golfie = tangon.onCancel;
            michal = {'guildId': 0, 'userId': 0, 'onCancel': 0};
            update = null;
            papara = michal;
            cntext = null;
            entity = silentSetPrototypeOf(papara, cntext);
            zuuluu = 0;
            papara = {};
            cntext = tangon;
            record = michal;
            report = copyDataProperties(papara, cntext, record);
            entity = _closure1_slot12;
            tangon = undefined;
            result = entity.bind(tangon)();
            var _closure2_slot2 = result;
            michal = _closure1_slot1;
            option = _closure1_slot2;
            entity = 9;
            entity = option[entity];
            entity = michal.bind(tangon)(entity);
            verify = entity.bind(tangon)(vacuum, sequen);
            oscard = _closure1_slot4;
            entity = 1;
            entity = oscard.bind(tangon)(verify, entity);
            entity = entity[zuuluu];
            var _closure2_slot3 = entity;
            entity = 10;
            entity = option[entity];
            zuuluu = michal.bind(tangon)(entity);
            entity = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 11;
                michal = michal[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                tangon = report.track;
                michal = _closure1_slot9;
                zuuluu = michal.OPEN_MODAL;
                michal = {};
                oscard = _closure1_slot7;
                michal['type'] = oscard;
                golfie = _closure2_slot0;
                michal['guild_id'] = golfie;
                oscard = _closure2_slot1;
                michal['other_user_id'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            entity = zuuluu.bind(tangon)(entity);
            entity = function() {
                tangon = _closure1_slot3;
                zuuluu = undefined;
                michal = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(michal) { _fun00004_ip = 190; continue _fun00003 }
 10:
                            tangon = _closure1_slot1;
                            zuuluu = _closure1_slot2;
                            michal = 12;
                            michal = zuuluu[michal];
                            zuuluu = undefined;
                            oscard = tangon.bind(zuuluu)(michal);
                            report = oscard.setCommunicationDisabledDuration;
                            tangon = _closure2_slot0;
                            michal = _closure2_slot1;
                            michal = report.bind(oscard)(tangon, michal);
                            SaveGenerator(address=62);
 60:
                            return michal;
 62:
                            ResumeGenerator(result_out_reg=1, return_bool_out_reg=3);
                            if(tangon) { _fun00004_ip = 187; continue _fun00003 }
 68:
                            option = _closure1_slot1;
                            verify = _closure1_slot2;
                            tangon = 13;
                            tangon = verify[tangon];
                            oscard = option.bind(zuuluu)(tangon);
                            report = oscard.open;
                            tangon = {};
                            offset = 'GUILD_ENABLE_COMMUNICATION_SUCCESS';
                            tangon['key'] = offset;
                            romeon = _closure1_slot0;
                            golfie = 14;
                            offset = verify[golfie];
                            offset = romeon.bind(zuuluu)(offset);
                            yankee = offset.intl;
                            offset = yankee.string;
                            golfie = verify[golfie];
                            golfie = romeon.bind(zuuluu)(golfie);
                            golfie = golfie.t;
                            golfie = golfie./Mmbfn;
                            golfie = offset.bind(yankee)(golfie);
                            tangon['content'] = golfie;
                            golfie = 15;
                            golfie = verify[golfie];
                            golfie = option.bind(zuuluu)(golfie);
                            tangon['icon'] = golfie;
                            tangon = report.bind(oscard)(tangon);
                            return zuuluu;
 187:
                            return michal;
 190:
                            return entity;
                        }
                    };
                    return entity;
                };
                michal = tangon.bind(zuuluu)(michal);
                var _closure3_slot0 = michal;
                entity = function() {
                    entity = undefined;
                    tangon = _closure3_slot0;
                    zuuluu = tangon.apply;
                    entity = arguments;
                    michal = entity;
                    entity = this;
                    entity = zuuluu.bind(tangon)(entity, michal);
                    return entity;
                };
                return entity;
            };
            oscard = entity.bind(tangon)();
            zuuluu = _closure1_slot10;
            entity = 16;
            entity = option[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            papara = entity;
            cntext = report;
            verify = copyDataProperties(papara, cntext);
            yankee = _closure1_slot0;
            output = 14;
            verify = option[output];
            verify = yankee.bind(tangon)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = option[output];
            verify = yankee.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.+ZD3oq;
            offset = offset.bind(romeon)(verify);
            verify = 'title';
            entity[verify] = offset;
            offset = result.wrapper;
            verify = 'style';
            entity[verify] = offset;
            verify = option[output];
            verify = yankee.bind(tangon)(verify);
            offset = verify.intl;
            verify = offset.string;
            option = option[output];
            option = yankee.bind(tangon)(option);
            option = option.t;
            option = option.ETE/oK;
            verify = verify.bind(offset)(option);
            option = 'cancelText';
            entity[option] = verify;
            verify = update == report;
            option = undefined;
            if(verify) { _fun00002_ip = 336; continue _fun00001 }
 330:
            option = report.onClose;
 336:
            report = 'onClose';
            entity[report] = option;
            report = 'onCancel';
            entity[report] = golfie;
            romeon = _closure1_slot0;
            config = _closure1_slot2;
            report = config[output];
            report = romeon.bind(tangon)(report);
            option = report.intl;
            golfie = option.string;
            report = config[output];
            report = romeon.bind(tangon)(report);
            report = report.t;
            report = report.qXtNtb;
            golfie = golfie.bind(option)(report);
            report = 'confirmText';
            entity[report] = golfie;
            report = 'onConfirm';
            entity[report] = oscard;
            golfie = _closure1_slot11;
            oscard = _closure1_slot5;
            report = {};
            option = result.body;
            report['style'] = option;
            offset = _closure1_slot10;
            option = 17;
            option = config[option];
            option = romeon.bind(tangon)(option);
            verify = option.Text;
            option = {};
            yankee = result.description;
            option['style'] = yankee;
            backup = 'text-sm/medium';
            option['variant'] = backup;
            yankee = config[output];
            yankee = romeon.bind(tangon)(yankee);
            kiloes = yankee.intl;
            foxtra = kiloes.format;
            yankee = config[output];
            yankee = romeon.bind(tangon)(yankee);
            yankee = yankee.t;
            romeon = yankee.t+abNT;
            yankee = {};
            ctrled = _closure1_slot6;
            source = ctrled.getUser;
            vacuum = source.bind(ctrled)(vacuum);
            ctrled = _closure1_slot1;
            source = 18;
            source = config[source];
            ctrled = ctrled.bind(tangon)(source);
            source = ctrled.getName;
            source = source.bind(ctrled)(sequen, update, vacuum);
            ctrled = update != source;
            update = '';
            if(!ctrled) { _fun00002_ip = 584; continue _fun00001 }
 581:
            update = source;
 584:
            yankee['username'] = update;
            echoed = function() { // Original name: countdown
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    michal = _closure2_slot3;
                    entity = null;
                    entity = entity != michal;
                    report = 0;
                    if(!entity) { _fun00006_ip = 50; continue _fun00005 }
 18:
                    entity = global;
                    zuuluu = entity.Date;
                    option = _closure2_slot3;
                    michal = zuuluu.prototype;
                    michal = Object.create(michal, {constructor: {value: zuuluu}});
                    verify = michal;
                    entity = new verify[zuuluu](option, golfie);
                    report = entity instanceof Object ? entity : michal;
 50:
                    tangon = _closure1_slot10;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 19;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    oscard = _closure2_slot2;
                    oscard = oscard.countdown;
                    entity['style'] = oscard;
                    entity['deadline'] = report;
                    report = true;
                    entity['withUnits'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                }
            };
            yankee['countdown'] = echoed;
            yankee = foxtra.bind(kiloes)(romeon, yankee);
            option['children'] = yankee;
            verify = offset.bind(tangon)(verify, option);
            option = new Array(2);
            option[0] = verify;
            yankee = _closure1_slot10;
            foxtra = _closure1_slot0;
            romeon = _closure1_slot2;
            verify = 20;
            verify = romeon[verify];
            verify = foxtra.bind(tangon)(verify);
            offset = verify.TextWithIOSLinkWorkaround;
            verify = {};
            echoed = result.cta;
            kiloes = new Array(2);
            kiloes[0] = echoed;
            result = result.description;
            kiloes[1] = result;
            verify['style'] = kiloes;
            verify['variant'] = backup;
            backup = romeon[output];
            backup = foxtra.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.format;
            romeon = romeon[output];
            romeon = foxtra.bind(tangon)(romeon);
            romeon = romeon.t;
            foxtra = romeon.KtENkJ;
            romeon = {};
            sizing = _closure1_slot8;
            romeon['link'] = sizing;
            romeon = backup.bind(kiloes)(foxtra, romeon);
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[1] = verify;
            report['children'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = 'children';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();