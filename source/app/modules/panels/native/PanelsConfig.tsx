// app/modules/panels/native/PanelsConfig.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var9 = require;
    var3 = exports;
    var10 = dependencyMap;
    var2 = global;
    var6 = var2.Object;
    var5 = var6.defineProperty;
    var4 = {};
    var2 = true;
    var4['value'] = var2;
    var2 = '__esModule';
    var2 = var5.bind(var6)(var3, var2, var4);
    var2 = {};
    var4 = 'function isTimingConfig_PanelsConfigTsx1(obj){return obj!=null&&obj.duration!=null;}';
    var2['code'] = var4;
    var _closure1_slot0 = var2;
    var2 = function() {
        var1 = function isTimingConfig(arg1) {
            _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
                var2 = arg1;
                var3 = null;
                var1 = var3 != var2;
                if(!var1) { _fun0001_ip = 21; continue _fun0001 }
 12:
                var2 = var2.duration;
                var1 = var3 != var2;
 21:
                return var1;
            }
        };
        var2 = {};
        var1['__closure'] = var2;
        var2 = 14033676769786.0;
        var1['__workletHash'] = var2;
        var2 = _closure1_slot0;
        var1['__initData'] = var2;
        return var1;
    };
    var1 = undefined;
    var7 = var2.bind(var1)();
    var4 = {'mass': 1, 'stiffness': 250, 'overshootClamping': true, 'restSpeedThreshold': 0.001, 'restDisplacementThreshold': 0.001};
    var8 = 1;
    var6 = 250;
    var11 = {};
    var2 = 30;
    var11['damping'] = var2;
    var20 = var11;
    var19 = var4;
    var2 = copyDataProperties(var20, var19);
    var2 = {};
    var5 = 20;
    var2['damping'] = var5;
    var20 = var2;
    var19 = var4;
    var4 = copyDataProperties(var20, var19);
    var14 = {};
    var14['duration'] = var6;
    var16 = 0;
    var4 = var10[var16];
    var4 = var9.bind(var1)(var4);
    var4 = var4.STANDARD_EASING;
    var14['easing'] = var4;
    var13 = {};
    var5 = 200;
    var13['duration'] = var5;
    var4 = var10[var16];
    var4 = var9.bind(var1)(var4);
    var4 = var4.STANDARD_EASING;
    var13['easing'] = var4;
    var4 = {};
    var4['swipeSidePanelOpen'] = var11;
    var4['swipeSidePanelClose'] = var2;
    var4['nonSwipeSidePanelOpen'] = var14;
    var4['nonSwipeSidePanelClose'] = var13;
    var12 = 8;
    var4['touchSlopForPanGesture'] = var12;
    var11 = 240;
    var4['minFlingVelocityX'] = var11;
    var2 = {};
    var15 = {};
    var15['duration'] = var6;
    var17 = var10[var16];
    var17 = var9.bind(var1)(var17);
    var17 = var17.DECELERATED_EASING;
    var15['easing'] = var17;
    var2['swipeSidePanelOpen'] = var15;
    var15 = {};
    var15['duration'] = var5;
    var16 = var10[var16];
    var16 = var9.bind(var1)(var16);
    var16 = var16.DECELERATED_EASING;
    var15['easing'] = var16;
    var2['swipeSidePanelClose'] = var15;
    var2['nonSwipeSidePanelOpen'] = var14;
    var2['nonSwipeSidePanelClose'] = var13;
    var2['touchSlopForPanGesture'] = var12;
    var2['minFlingVelocityX'] = var11;
    var8 = var10[var8];
    var10 = var9.bind(var1)(var8);
    var9 = var10.fileFinishedImporting;
    var8 = 'modules/panels/native/PanelsConfig.tsx';
    var8 = var9.bind(var10)(var8);
    var3['isTimingConfig'] = var7;
    var3['SIDE_PANEL_OPEN_DURATION_MS'] = var6;
    var3['SIDE_PANEL_CLOSE_DURATION_MS'] = var5;
    var3['DEFAULT_PANELS_ANIMATION_CONFIG'] = var4;
    var3['ANDROID_PANELS_ANIMATION_CONFIG'] = var2;
    return var1;
})();