// app/modules/panels/morphable/native/MorphablePanelConstants.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    golfie = argBar;
    zuuluu = argFre;
    option = argPlu;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    entity = 0;
    michal = option[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(michal);
    michal = tangon.isIOS;
    report = michal.bind(tangon)();
    tangon = {};
    michal = 'panel';
    tangon['PANEL'] = michal;
    michal = 'pip';
    tangon['PIP'] = michal;
    michal = 'changing_orientation';
    tangon['CHANGING_ORIENTATION'] = michal;
    oscard = 'undefined';
    tangon['UNDEFINED'] = oscard;
    michal = {};
    verify = 'floating-default';
    michal['FLOATING_DEFAULT'] = verify;
    verify = 'drawer';
    michal['DRAWER'] = verify;
    michal['UNDEFINED'] = oscard;
    oscard = 1;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/panels/morphable/native/MorphablePanelConstants.tsx';
    oscard = golfie.bind(option)(oscard);
    oscard = 10;
    zuuluu['MIN_PAN_GESTURE_MOVE'] = oscard;
    oscard = 30;
    zuuluu['PANEL_TAP_GESTURE_MAX_DISTANCE'] = oscard;
    zuuluu['IS_IOS'] = report;
    report = 140;
    zuuluu['PIP_POP_HEIGHT'] = report;
    report = 16;
    zuuluu['PIP_WINDOW_OFFSET'] = report;
    report = 500;
    zuuluu['MIN_PIP_TOSS_VELOCITY'] = report;
    zuuluu['MorphablePanelModes'] = tangon;
    zuuluu['PanelControlsModes'] = michal;
    michal = {'mass': 0.4, 'damping': 30, 'stiffness': 400};
    zuuluu['SCALE_PHYSICS'] = michal;
    michal = 0.55;
    zuuluu['POP_RESISTANCE'] = michal;
    return entity;
})();