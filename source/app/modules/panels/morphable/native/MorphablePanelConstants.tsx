// app/modules/panels/morphable/native/MorphablePanelConstants.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    golf = argBar;
    zulu = argFred;
    options = argPlugh;
    entity = global;
    report = entity.Object;
    tango = report.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(report)(zulu, entity, mike);
    entity = 0;
    mike = options[entity];
    entity = undefined;
    tango = golf.bind(entity)(mike);
    mike = tango.isIOS;
    report = mike.bind(tango)();
    tango = {};
    mike = 'panel';
    tango['PANEL'] = mike;
    mike = 'pip';
    tango['PIP'] = mike;
    mike = 'changing_orientation';
    tango['CHANGING_ORIENTATION'] = mike;
    oscar = 'undefined';
    tango['UNDEFINED'] = oscar;
    mike = {};
    verify = 'floating-default';
    mike['FLOATING_DEFAULT'] = verify;
    verify = 'drawer';
    mike['DRAWER'] = verify;
    mike['UNDEFINED'] = oscar;
    oscar = 1;
    oscar = options[oscar];
    options = golf.bind(entity)(oscar);
    golf = options.fileFinishedImporting;
    oscar = 'modules/panels/morphable/native/MorphablePanelConstants.tsx';
    oscar = golf.bind(options)(oscar);
    oscar = 10;
    zulu['MIN_PAN_GESTURE_MOVE'] = oscar;
    oscar = 30;
    zulu['PANEL_TAP_GESTURE_MAX_DISTANCE'] = oscar;
    zulu['IS_IOS'] = report;
    report = 140;
    zulu['PIP_POP_HEIGHT'] = report;
    report = 16;
    zulu['PIP_WINDOW_OFFSET'] = report;
    report = 500;
    zulu['MIN_PIP_TOSS_VELOCITY'] = report;
    zulu['MorphablePanelModes'] = tango;
    zulu['PanelControlsModes'] = mike;
    mike = {'mass': 0.4, 'damping': 30, 'stiffness': 400};
    zulu['SCALE_PHYSICS'] = mike;
    mike = 0.55;
    zulu['POP_RESISTANCE'] = mike;
    return entity;
})();