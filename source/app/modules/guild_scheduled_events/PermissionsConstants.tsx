// app/modules/guild_scheduled_events/PermissionsConstants.tsx
export default (function(_, argBar, __, argCorge, ___, argFred, argPlugh) {
    golf = argBar;
    oscar = argCorge;
    zulu = argFred;
    options = argPlugh;
    entity = global;
    report = entity.Object;
    tango = report.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(report)(zulu, entity, mike);
    entity = 0;
    mike = options[entity];
    entity = undefined;
    mike = golf.bind(entity)(mike);
    tango = mike.Permissions;
    report = tango.VIEW_CHANNEL;
    mike = 1;
    verify = options[mike];
    offset = oscar.bind(entity)(verify);
    verify = offset.combine;
    tango = tango.CONNECT;
    tango = verify.bind(offset)(report, tango);
    mike = options[mike];
    verify = oscar.bind(entity)(mike);
    oscar = verify.combine;
    mike = 2;
    mike = options[mike];
    mike = golf.bind(entity)(mike);
    mike = mike.MODERATE_STAGE_CHANNEL_PERMISSIONS;
    mike = oscar.bind(verify)(report, mike);
    oscar = 3;
    oscar = options[oscar];
    options = golf.bind(entity)(oscar);
    golf = options.fileFinishedImporting;
    oscar = 'modules/guild_scheduled_events/PermissionsConstants.tsx';
    oscar = golf.bind(options)(oscar);
    zulu['CREATE_GUILD_EVENT_CORE_PERMISSIONS'] = report;
    zulu['CREATE_GUILD_EVENT_VOICE_CHANNEL_PERMISSIONS'] = tango;
    zulu['CREATE_GUILD_EVENT_STAGE_CHANNEL_PERMISSIONS'] = mike;
    return entity;
})();