// app/modules/guild_scheduled_events/native/guild_sidebar/UpcomingEventsChannelRow.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    yankee = tango.CHANNEL_MARGIN_VERTICAL;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot3 = tango;
    tango = 3;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {};
    offset['marginVertical'] = yankee;
    yankee = 8;
    offset['marginHorizontal'] = yankee;
    yankee = 4;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.md;
    offset['borderRadius'] = foxtrot;
    tango['container'] = offset;
    offset = {};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_ACCENT;
    offset['backgroundColor'] = yankee;
    tango['badge'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot4 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            mike = entity.guild;
            entity = _closure1_slot4;
            tango = undefined;
            offset = entity.bind(tango)();
            backup = _closure1_slot1;
            foxtrot = _closure1_slot2;
            entity = 5;
            entity = foxtrot[entity];
            entity = backup.bind(tango)(entity);
            entity = entity.bind(tango)(mike);
            verify = entity.mentionCount;
            yankee = entity.mode;
            sizing = entity.name;
            golf = entity.eventsMuted;
            romeo = entity.handlePress;
            options = entity.handleLongPress;
            zulu = _closure1_slot3;
            report = 6;
            entity = foxtrot[report];
            mike = backup.bind(tango)(entity);
            entity = {};
            entity['onPress'] = romeo;
            entity['onLongPress'] = options;
            options = offset.container;
            entity['style'] = options;
            options = true;
            entity['accessible'] = options;
            romeo = _closure1_slot0;
            options = 7;
            kilo = foxtrot[options];
            kilo = romeo.bind(tango)(kilo);
            output = kilo.intl;
            kilo = output.string;
            options = foxtrot[options];
            options = romeo.bind(tango)(options);
            options = options.t;
            options = options.tlopTE;
            options = kilo.bind(output)(options);
            entity['accessibilityLabel'] = options;
            entity['mode'] = yankee;
            options = foxtrot[report];
            options = romeo.bind(tango)(options);
            options = options.ChannelModes;
            options = options.UNREAD_IMPORTANT;
            options = yankee === options;
            entity['unread'] = options;
            options = foxtrot[report];
            options = romeo.bind(tango)(options);
            kilo = options.BaseChannelName;
            options = {};
            options['name'] = sizing;
            options['mode'] = yankee;
            options = zulu.bind(tango)(kilo, options);
            entity['name'] = options;
            report = foxtrot[report];
            report = romeo.bind(tango)(report);
            options = report.BaseChannelIcon;
            report = {};
            report['mode'] = yankee;
            yankee = 8;
            yankee = foxtrot[yankee];
            yankee = backup.bind(tango)(yankee);
            report['source'] = yankee;
            yankee = 9;
            yankee = foxtrot[yankee];
            yankee = romeo.bind(tango)(yankee);
            yankee = yankee.CalendarIcon;
            report['IconComponent'] = yankee;
            report = zulu.bind(tango)(options, report);
            entity['icon'] = report;
            report = null;
            if(golf) { _fun00002_ip = 379; continue _fun00001 }
 322:
            golf = 0;
            golf = verify > golf;
            report = null;
            if(!golf) { _fun00002_ip = 379; continue _fun00001 }
 333:
            options = _closure1_slot3;
            golf = _closure1_slot1;
            yankee = _closure1_slot2;
            oscar = 10;
            oscar = yankee[oscar];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            offset = offset.badge;
            oscar['style'] = offset;
            oscar['value'] = verify;
            report = options.bind(tango)(golf, oscar);
 379:
            entity['channelInfo'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_scheduled_events/native/guild_sidebar/UpcomingEventsChannelRow.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();