// app/modules/guild_scheduled_events/native/components/EndEventActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.EXPLICIT_END_EVENT_SHEET_KEY;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    yankee = tangon.Fonts;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    romeon = 24;
    tangon = 16;
    offset = {'paddingVertical': 24, 'paddingHorizontal': 16, 'alignItems': 'center'};
    golfie['container'] = offset;
    offset = {'fontSize': 24, 'fontFamily': null, 'textAlign': 'center'};
    yankee = yankee.PRIMARY_BOLD;
    offset['fontFamily'] = yankee;
    yankee = 6;
    yankee = oscard[yankee];
    yankee = foxtra.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.HEADER_PRIMARY;
    offset['color'] = yankee;
    golfie['title'] = offset;
    yankee = 8;
    offset = {'marginTop': 8, 'textAlign': 'center'};
    golfie['subtitle'] = offset;
    offset = {};
    offset['marginTop'] = romeon;
    golfie['cancelButton'] = offset;
    offset = {};
    offset['marginTop'] = yankee;
    golfie['confirmButton'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_scheduled_events/native/components/EndEventActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: EndEventActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.channel;
            var _closure2_slot0 = entity;
            report = undefined;
            var _closure2_slot2 = report;
            michal = _closure1_slot7;
            result = michal.bind(report)();
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            michal = 7;
            michal = tangon[michal];
            zuuluu = zuuluu.bind(report)(michal);
            michal = zuuluu.useActiveEvent;
            entity = entity.id;
            michal = michal.bind(zuuluu)(entity);
            var _closure2_slot1 = michal;
            entity = null;
            if(!(entity != michal)) { _fun00002_ip = 599; continue _fun00001 }
 80:
            echoed = function() { // Original name: handleClose
                report = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 8;
                zuuluu = tangon[entity];
                entity = undefined;
                oscard = report.bind(entity)(zuuluu);
                report = oscard.hideActionSheet;
                zuuluu = _closure1_slot4;
                zuuluu = report.bind(oscard)(zuuluu);
                zuuluu = _closure1_slot0;
                michal = 9;
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.handleDisconnect;
                michal = _closure2_slot0;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            _closure2_slot2 = echoed;
            tangon = _closure1_slot5;
            kiloes = _closure1_slot1;
            output = _closure1_slot2;
            michal = 10;
            michal = output[michal];
            zuuluu = kiloes.bind(report)(michal);
            michal = {};
            option = _closure1_slot6;
            golfie = _closure1_slot3;
            oscard = {};
            offset = result.container;
            oscard['style'] = offset;
            sizing = _closure1_slot0;
            verify = 11;
            verify = output[verify];
            verify = sizing.bind(report)(verify);
            offset = verify.LegacyText;
            verify = {};
            yankee = result.title;
            verify['style'] = yankee;
            yankee = 'header';
            verify['accessibilityRole'] = yankee;
            foxtra = 12;
            yankee = output[foxtra];
            yankee = sizing.bind(report)(yankee);
            update = yankee.intl;
            backup = update.string;
            yankee = output[foxtra];
            yankee = sizing.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee.4Ao8LC;
            yankee = backup.bind(update)(yankee);
            verify['children'] = yankee;
            offset = tangon.bind(report)(offset, verify);
            verify = new Array(4);
            verify[0] = offset;
            offset = 13;
            offset = output[offset];
            offset = sizing.bind(report)(offset);
            yankee = offset.Text;
            offset = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            backup = result.subtitle;
            offset['style'] = backup;
            backup = output[foxtra];
            backup = sizing.bind(report)(backup);
            source = backup.intl;
            update = source.string;
            backup = output[foxtra];
            backup = sizing.bind(report)(backup);
            backup = backup.t;
            backup = backup.0I0B8f;
            backup = update.bind(source)(backup);
            offset['children'] = backup;
            offset = tangon.bind(report)(yankee, offset);
            verify[1] = offset;
            backup = 14;
            offset = output[backup];
            yankee = kiloes.bind(report)(offset);
            offset = {};
            update = result.cancelButton;
            offset['style'] = update;
            update = output[backup];
            update = kiloes.bind(report)(update);
            update = update.Colors;
            update = update.PRIMARY;
            offset['color'] = update;
            update = output[foxtra];
            update = sizing.bind(report)(update);
            ctrled = update.intl;
            source = ctrled.string;
            update = output[foxtra];
            update = sizing.bind(report)(update);
            update = update.t;
            update = update.P60OAQ;
            update = source.bind(ctrled)(update);
            offset['text'] = update;
            offset['onPress'] = echoed;
            offset = tangon.bind(report)(yankee, offset);
            verify[2] = offset;
            offset = output[backup];
            yankee = kiloes.bind(report)(offset);
            offset = {};
            result = result.confirmButton;
            offset['style'] = result;
            backup = output[backup];
            backup = kiloes.bind(report)(backup);
            backup = backup.Colors;
            backup = backup.RED;
            offset['color'] = backup;
            backup = output[foxtra];
            backup = sizing.bind(report)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = output[foxtra];
            foxtra = sizing.bind(report)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.mjB9pa;
            foxtra = backup.bind(kiloes)(foxtra);
            offset['text'] = foxtra;
            romeon = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 15;
                michal = michal[entity];
                entity = undefined;
                oscard = zuuluu.bind(entity)(michal);
                report = oscard.endEvent;
                zuuluu = _closure2_slot1;
                tangon = zuuluu.id;
                zuuluu = zuuluu.guild_id;
                zuuluu = report.bind(oscard)(tangon, zuuluu);
                michal = _closure2_slot2;
                michal = michal.bind(entity)();
                return entity;
            };
            offset['onPress'] = romeon;
            offset = tangon.bind(report)(yankee, offset);
            verify[3] = offset;
            oscard['children'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return michal;
 599:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();