// app/modules/guild_scheduled_events/native/components/EndEventActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.EXPLICIT_END_EVENT_SHEET_KEY;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    yankee = tango.Fonts;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 5;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    romeo = 24;
    tango = 16;
    offset = {'paddingVertical': 24, 'paddingHorizontal': 16, 'alignItems': 'center'};
    golf['container'] = offset;
    offset = {'fontSize': 24, 'fontFamily': null, 'textAlign': 'center'};
    yankee = yankee.PRIMARY_BOLD;
    offset['fontFamily'] = yankee;
    yankee = 6;
    yankee = oscar[yankee];
    yankee = foxtrot.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.HEADER_PRIMARY;
    offset['color'] = yankee;
    golf['title'] = offset;
    yankee = 8;
    offset = {'marginTop': 8, 'textAlign': 'center'};
    golf['subtitle'] = offset;
    offset = {};
    offset['marginTop'] = romeo;
    golf['cancelButton'] = offset;
    offset = {};
    offset['marginTop'] = yankee;
    golf['confirmButton'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_scheduled_events/native/components/EndEventActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: EndEventActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.channel;
            var _closure2_slot0 = entity;
            report = undefined;
            var _closure2_slot2 = report;
            mike = _closure1_slot7;
            result = mike.bind(report)();
            zulu = _closure1_slot0;
            tango = _closure1_slot2;
            mike = 7;
            mike = tango[mike];
            zulu = zulu.bind(report)(mike);
            mike = zulu.useActiveEvent;
            entity = entity.id;
            mike = mike.bind(zulu)(entity);
            var _closure2_slot1 = mike;
            entity = null;
            if(!(entity != mike)) { _fun00002_ip = 599; continue _fun00001 }
 80:
            echo = function() { // Original name: handleClose
                report = _closure1_slot1;
                tango = _closure1_slot2;
                entity = 8;
                zulu = tango[entity];
                entity = undefined;
                oscar = report.bind(entity)(zulu);
                report = oscar.hideActionSheet;
                zulu = _closure1_slot4;
                zulu = report.bind(oscar)(zulu);
                zulu = _closure1_slot0;
                mike = 9;
                mike = tango[mike];
                tango = zulu.bind(entity)(mike);
                zulu = tango.handleDisconnect;
                mike = _closure2_slot0;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            _closure2_slot2 = echo;
            tango = _closure1_slot5;
            kilo = _closure1_slot1;
            output = _closure1_slot2;
            mike = 10;
            mike = output[mike];
            zulu = kilo.bind(report)(mike);
            mike = {};
            options = _closure1_slot6;
            golf = _closure1_slot3;
            oscar = {};
            offset = result.container;
            oscar['style'] = offset;
            sizing = _closure1_slot0;
            verify = 11;
            verify = output[verify];
            verify = sizing.bind(report)(verify);
            offset = verify.LegacyText;
            verify = {};
            yankee = result.title;
            verify['style'] = yankee;
            yankee = 'header';
            verify['accessibilityRole'] = yankee;
            foxtrot = 12;
            yankee = output[foxtrot];
            yankee = sizing.bind(report)(yankee);
            update = yankee.intl;
            backup = update.string;
            yankee = output[foxtrot];
            yankee = sizing.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee.4Ao8LC;
            yankee = backup.bind(update)(yankee);
            verify['children'] = yankee;
            offset = tango.bind(report)(offset, verify);
            verify = new Array(4);
            verify[0] = offset;
            offset = 13;
            offset = output[offset];
            offset = sizing.bind(report)(offset);
            yankee = offset.Text;
            offset = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            backup = result.subtitle;
            offset['style'] = backup;
            backup = output[foxtrot];
            backup = sizing.bind(report)(backup);
            source = backup.intl;
            update = source.string;
            backup = output[foxtrot];
            backup = sizing.bind(report)(backup);
            backup = backup.t;
            backup = backup.0I0B8f;
            backup = update.bind(source)(backup);
            offset['children'] = backup;
            offset = tango.bind(report)(yankee, offset);
            verify[1] = offset;
            backup = 14;
            offset = output[backup];
            yankee = kilo.bind(report)(offset);
            offset = {};
            update = result.cancelButton;
            offset['style'] = update;
            update = output[backup];
            update = kilo.bind(report)(update);
            update = update.Colors;
            update = update.PRIMARY;
            offset['color'] = update;
            update = output[foxtrot];
            update = sizing.bind(report)(update);
            control = update.intl;
            source = control.string;
            update = output[foxtrot];
            update = sizing.bind(report)(update);
            update = update.t;
            update = update.P60OAQ;
            update = source.bind(control)(update);
            offset['text'] = update;
            offset['onPress'] = echo;
            offset = tango.bind(report)(yankee, offset);
            verify[2] = offset;
            offset = output[backup];
            yankee = kilo.bind(report)(offset);
            offset = {};
            result = result.confirmButton;
            offset['style'] = result;
            backup = output[backup];
            backup = kilo.bind(report)(backup);
            backup = backup.Colors;
            backup = backup.RED;
            offset['color'] = backup;
            backup = output[foxtrot];
            backup = sizing.bind(report)(backup);
            kilo = backup.intl;
            backup = kilo.string;
            foxtrot = output[foxtrot];
            foxtrot = sizing.bind(report)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.mjB9pa;
            foxtrot = backup.bind(kilo)(foxtrot);
            offset['text'] = foxtrot;
            romeo = function() { // Original name: onPress
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 15;
                mike = mike[entity];
                entity = undefined;
                oscar = zulu.bind(entity)(mike);
                report = oscar.endEvent;
                zulu = _closure2_slot1;
                tango = zulu.id;
                zulu = zulu.guild_id;
                zulu = report.bind(oscar)(tango, zulu);
                mike = _closure2_slot2;
                mike = mike.bind(entity)();
                return entity;
            };
            offset['onPress'] = romeo;
            offset = tango.bind(report)(yankee, offset);
            verify[3] = offset;
            oscar['children'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['children'] = oscar;
            mike = tango.bind(report)(zulu, mike);
            return mike;
 599:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();