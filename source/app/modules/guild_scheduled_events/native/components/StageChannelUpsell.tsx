// app/modules/guild_scheduled_events/native/components/StageChannelUpsell.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot4 = golfie;
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.createChannelRecord;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.useStageChannelUpsellCardStore;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.CREATE_GUILD_EVENT_MODAL_KEY;
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ChannelTypes;
    var _closure1_slot9 = tangon;
    tangon = 7;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot11 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flexDirection': 'column', 'alignItems': 'center', 'backgroundColor': null, 'padding': 16, 'margin': 16};
    yankee = 9;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = offset;
    offset = 16;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.sm;
    verify['borderRadius'] = yankee;
    tangon['container'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tangon['image'] = verify;
    verify = {'position': 'absolute', 'top': 14, 'right': 14};
    tangon['closeContainer'] = verify;
    verify = {'lineHeight': 20, 'marginBottom': 4};
    tangon['header'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 4};
    tangon['description'] = verify;
    verify = {};
    offset = 12;
    verify['marginTop'] = offset;
    tangon['button'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_scheduled_events/native/components/StageChannelUpsell.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: StageChannelUpsell
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.guildId;
            var _closure2_slot0 = michal;
            entity = entity.onCreate;
            var _closure2_slot1 = entity;
            entity = _closure1_slot12;
            report = undefined;
            sizing = entity.bind(report)();
            entity = _closure1_slot7;
            zuuluu = entity.bind(report)();
            michal = _closure1_slot3;
            entity = 2;
            zuuluu = michal.bind(report)(zuuluu, entity);
            entity = 0;
            michal = zuuluu[entity];
            entity = 1;
            yankee = zuuluu[entity];
            var _closure2_slot2 = yankee;
            entity = null;
            if(michal) { _fun00002_ip = 719; continue _fun00001 }
 83:
            tangon = _closure1_slot11;
            zuuluu = _closure1_slot5;
            michal = {};
            oscard = sizing.container;
            michal['style'] = oscard;
            verify = _closure1_slot10;
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            oscard = 10;
            oscard = kiloes[oscard];
            oscard = backup.bind(report)(oscard);
            option = oscard.PressableOpacity;
            oscard = {};
            oscard['onPress'] = yankee;
            yankee = 'button';
            oscard['accessibilityRole'] = yankee;
            yankee = sizing.closeContainer;
            oscard['style'] = yankee;
            foxtra = _closure1_slot1;
            yankee = 11;
            yankee = kiloes[yankee];
            romeon = foxtra.bind(report)(yankee);
            yankee = {};
            output = 12;
            output = kiloes[output];
            output = foxtra.bind(report)(output);
            yankee['source'] = output;
            yankee = verify.bind(report)(romeon, yankee);
            oscard['children'] = yankee;
            option = verify.bind(report)(option, oscard);
            oscard = new Array(6);
            oscard[0] = option;
            option = _closure1_slot4;
            golfie = {};
            yankee = 13;
            yankee = kiloes[yankee];
            yankee = foxtra.bind(report)(yankee);
            golfie['source'] = yankee;
            yankee = sizing.image;
            golfie['style'] = yankee;
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            golfie = 14;
            option = kiloes[golfie];
            option = backup.bind(report)(option);
            romeon = option.Text;
            option = {'style': null, 'variant': 'text-md/bold', 'color': 'header-primary'};
            yankee = sizing.header;
            option['style'] = yankee;
            yankee = 15;
            output = kiloes[yankee];
            output = backup.bind(report)(output);
            echoed = output.intl;
            result = echoed.string;
            output = kiloes[yankee];
            output = backup.bind(report)(output);
            output = output.t;
            output = output.Sx8Ezs;
            output = result.bind(echoed)(output);
            option['children'] = output;
            option = verify.bind(report)(romeon, option);
            oscard[2] = option;
            option = kiloes[golfie];
            option = backup.bind(report)(option);
            romeon = option.Text;
            option = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            output = sizing.description;
            option['style'] = output;
            output = kiloes[yankee];
            output = backup.bind(report)(output);
            echoed = output.intl;
            result = echoed.string;
            output = kiloes[yankee];
            output = backup.bind(report)(output);
            output = output.t;
            output = output.JUzPho;
            output = result.bind(echoed)(output);
            option['children'] = output;
            option = verify.bind(report)(romeon, option);
            oscard[3] = option;
            golfie = kiloes[golfie];
            golfie = backup.bind(report)(golfie);
            option = golfie.Text;
            golfie = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            romeon = sizing.description;
            golfie['style'] = romeon;
            romeon = kiloes[yankee];
            romeon = backup.bind(report)(romeon);
            echoed = romeon.intl;
            result = echoed.format;
            romeon = kiloes[yankee];
            romeon = backup.bind(report)(romeon);
            romeon = romeon.t;
            output = romeon.Vh7rPz;
            romeon = {};
            update = function(argFoo, argBar) { // Original name: suggestionsHook
                report = _closure1_slot10;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 14;
                entity = zuuluu[entity];
                tangon = undefined;
                entity = michal.bind(tangon)(entity);
                zuuluu = entity.Text;
                michal = {'variant': 'text-sm/semibold', 'color': 'header-primary'};
                entity = argFoo;
                michal['children'] = entity;
                entity = argBar;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            romeon['suggestionsHook'] = update;
            romeon = result.bind(echoed)(output, romeon);
            golfie['children'] = romeon;
            golfie = verify.bind(report)(option, golfie);
            oscard[4] = golfie;
            romeon = 16;
            golfie = kiloes[romeon];
            option = foxtra.bind(report)(golfie);
            golfie = {};
            sizing = sizing.button;
            golfie['style'] = sizing;
            sizing = kiloes[romeon];
            sizing = foxtra.bind(report)(sizing);
            sizing = sizing.Colors;
            sizing = sizing.GREY;
            golfie['color'] = sizing;
            romeon = kiloes[romeon];
            romeon = foxtra.bind(report)(romeon);
            romeon = romeon.Sizes;
            romeon = romeon.MEDIUM;
            golfie['size'] = romeon;
            romeon = kiloes[yankee];
            romeon = backup.bind(report)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            yankee = kiloes[yankee];
            yankee = backup.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee.X/3SyM;
            yankee = romeon.bind(foxtra)(yankee);
            golfie['text'] = yankee;
            offset = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                michal = 17;
                oscard = tangon[michal];
                entity = undefined;
                option = zuuluu.bind(entity)(oscard);
                golfie = option.popWithKey;
                oscard = _closure1_slot8;
                oscard = golfie.bind(option)(oscard);
                michal = tangon[michal];
                verify = zuuluu.bind(entity)(michal);
                option = verify.pushLazy;
                oscard = _closure1_slot0;
                michal = 19;
                michal = tangon[michal];
                golfie = oscard.bind(entity)(michal);
                michal = 18;
                oscard = tangon[michal];
                michal = tangon.paths;
                golfie = golfie.bind(entity)(oscard, michal);
                oscard = {};
                yankee = _closure2_slot0;
                oscard['guildId'] = yankee;
                offset = _closure1_slot9;
                offset = offset.GUILD_STAGE_VOICE;
                oscard['channelType'] = offset;
                offset = function(argFoo) { // Original name: onChannelCreated
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        zuuluu = _closure1_slot6;
                        michal = {};
                        tangon = argFoo;
                        michal['id'] = tangon;
                        entity = _closure1_slot9;
                        entity = entity.GUILD_STAGE_VOICE;
                        michal['type'] = entity;
                        entity = undefined;
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = null;
                        if(!(michal != zuuluu)) { _fun00004_ip = 55; continue _fun00003 }
 43:
                        michal = _closure2_slot1;
                        michal = michal.bind(entity)(zuuluu);
 55:
                        return entity;
                    }
                };
                oscard['onChannelCreated'] = offset;
                report = function() { // Original name: onClose
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 17;
                    michal = michal[entity];
                    entity = undefined;
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.popWithKey;
                    michal = 'CREATE_CHANNEL_MODAL_KEY';
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                oscard['onClose'] = report;
                report = 'CREATE_CHANNEL_MODAL_KEY';
                report = option.bind(verify)(golfie, oscard, report);
                michal = _closure2_slot2;
                michal = michal.bind(entity)();
                michal = 20;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            golfie['onPress'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[5] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 719:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();