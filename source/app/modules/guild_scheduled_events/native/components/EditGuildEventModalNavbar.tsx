// app/modules/guild_scheduled_events/native/components/EditGuildEventModalNavbar.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    tangon = {'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'space-between', 'paddingHorizontal': 4, 'paddingVertical': 8};
    golfie['header'] = tangon;
    tangon = {'lineHeight': 28, 'textTransform': 'uppercase'};
    golfie['headerTitle'] = tangon;
    tangon = {};
    offset = 60;
    tangon['width'] = offset;
    golfie['buttonContainer'] = tangon;
    offset = {};
    tangon = 12;
    offset['marginLeft'] = tangon;
    golfie['rightButton'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_scheduled_events/native/components/EditGuildEventModalNavbar.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: EditGuildEventModalNavbar
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.screen;
            foxtra = entity.onClose;
            entity = _closure1_slot7;
            tangon = undefined;
            yankee = entity.bind(tangon)();
            michal = _closure1_slot0;
            entity = _closure1_slot2;
            report = 5;
            entity = entity[report];
            entity = michal.bind(tangon)(entity);
            entity = entity.EditGuildEventScreens;
            entity = entity.CHANNEL_SELECTOR;
            if(!(entity !== zuuluu)) { _fun00002_ip = 192; continue _fun00001 }
 67:
            michal = _closure1_slot0;
            entity = _closure1_slot2;
            entity = entity[report];
            entity = michal.bind(tangon)(entity);
            entity = entity.EditGuildEventScreens;
            entity = entity.DETAILS;
            if(!(entity !== zuuluu)) { _fun00002_ip = 180; continue _fun00001 }
 100:
            michal = _closure1_slot0;
            entity = _closure1_slot2;
            entity = entity[report];
            entity = michal.bind(tangon)(entity);
            entity = entity.EditGuildEventScreens;
            entity = entity.PREVIEW;
            if(!(entity !== zuuluu)) { _fun00002_ip = 168; continue _fun00001 }
 133:
            michal = _closure1_slot0;
            report = _closure1_slot2;
            entity = 6;
            entity = report[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.assertNever;
            entity = entity.bind(michal)(zuuluu);
            zuuluu = undefined;
            _fun00002_ip = 202; continue _fun00001;
 168:
            zuuluu = [3, 3];
            _fun00002_ip = 202; continue _fun00001;
 180:
            zuuluu = [2, 3];
            _fun00002_ip = 202; continue _fun00001;
 192:
            zuuluu = [1, 3];
 202:
            michal = _closure1_slot3;
            entity = 2;
            michal = michal.bind(tangon)(zuuluu, entity);
            entity = 0;
            source = michal[entity];
            entity = 1;
            update = michal[entity];
            zuuluu = _closure1_slot6;
            result = _closure1_slot0;
            backup = _closure1_slot2;
            entity = 7;
            entity = backup[entity];
            entity = result.bind(tangon)(entity);
            michal = entity.SafeAreaPaddingView;
            entity = {};
            report = true;
            entity['top'] = report;
            report = yankee.header;
            entity['style'] = report;
            option = _closure1_slot5;
            golfie = _closure1_slot4;
            report = {};
            oscard = yankee.buttonContainer;
            report['style'] = oscard;
            oscard = option.bind(tangon)(golfie, report);
            report = new Array(3);
            report[0] = oscard;
            oscard = 8;
            oscard = backup[oscard];
            oscard = result.bind(tangon)(oscard);
            verify = oscard.Text;
            oscard = {'style': null, 'variant': 'text-xs/bold', 'color': 'header-secondary'};
            offset = yankee.headerTitle;
            oscard['style'] = offset;
            kiloes = 9;
            offset = backup[kiloes];
            offset = result.bind(tangon)(offset);
            echoed = offset.intl;
            output = echoed.format;
            offset = backup[kiloes];
            offset = result.bind(tangon)(offset);
            offset = offset.t;
            sizing = offset.42HaFR;
            offset = {};
            offset['step'] = source;
            offset['total'] = update;
            offset = output.bind(echoed)(sizing, offset);
            oscard['children'] = offset;
            oscard = option.bind(tangon)(verify, oscard);
            report[1] = oscard;
            oscard = {};
            verify = yankee.buttonContainer;
            oscard['style'] = verify;
            verify = 10;
            verify = backup[verify];
            verify = result.bind(tangon)(verify);
            offset = verify.HeaderActionButton;
            verify = {};
            sizing = backup[kiloes];
            sizing = result.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = backup[kiloes];
            kiloes = result.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.cpT0Cg;
            kiloes = sizing.bind(output)(kiloes);
            verify['accessibilityLabel'] = kiloes;
            verify['onPress'] = foxtra;
            foxtra = _closure1_slot1;
            romeon = 11;
            romeon = backup[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            verify['source'] = romeon;
            yankee = yankee.rightButton;
            verify['style'] = yankee;
            verify = option.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();