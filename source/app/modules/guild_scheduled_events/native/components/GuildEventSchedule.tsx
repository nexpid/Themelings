// app/modules/guild_scheduled_events/native/components/GuildEventSchedule.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var1 = metroImportDefault;
    var _closure1_slot1 = var1;
    var _closure1_slot2 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var4 = var4.bind(var1)(var7);
    var _closure1_slot3 = var4;
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var7 = var4.jsx;
    var _closure1_slot4 = var7;
    var7 = var4.Fragment;
    var _closure1_slot5 = var7;
    var4 = var4.jsxs;
    var _closure1_slot6 = var4;
    var4 = 6;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/guild_scheduled_events/native/components/GuildEventSchedule.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function GuildEventSchedule(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
            var2 = arg1;
            var6 = var2.guildEvent;
            var1 = var2.recurrenceId;
            var16 = var2.schedule;
            var _closure2_slot0 = var16;
            var2 = var2.onChange;
            var _closure2_slot1 = var2;
            var5 = _closure1_slot1;
            var2 = _closure1_slot2;
            var3 = 2;
            var7 = var2[var3];
            var4 = undefined;
            var7 = var5.bind(var4)(var7);
            var18 = var7.bind(var4)();
            var7 = var2[var3];
            var7 = var5.bind(var4)(var7);
            var13 = var7.bind(var4)();
            var12 = var13.add;
            var10 = _closure1_slot0;
            var7 = 3;
            var9 = var2[var7];
            var9 = var10.bind(var4)(var9);
            var11 = var9.MAX_DAYS_AHEAD_AN_EVENT_CAN_START;
            var9 = 'days';
            var14 = var12.bind(var13)(var11, var9);
            var17 = _closure1_slot3;
            var13 = var17.useMemo;
            var11 = var16.startDate;
            var12 = new Array(1);
            var12[0] = var11;
            var11 = function() {
                var2 = _closure1_slot1;
                var3 = _closure1_slot2;
                var1 = 2;
                var1 = var3[var1];
                var3 = undefined;
                var2 = var2.bind(var3)(var1);
                var1 = _closure2_slot0;
                var1 = var1.startDate;
                var4 = var2.bind(var3)(var1);
                var3 = var4.add;
                var2 = 15;
                var1 = 'minutes';
                var1 = var3.bind(var4)(var2, var1);
                return var1;
            };
            var12 = var13.bind(var17)(var11, var12);
            var3 = var2[var3];
            var3 = var5.bind(var4)(var3);
            var5 = var3.bind(var4)();
            var3 = var5.add;
            var2 = var2[var7];
            var2 = var10.bind(var4)(var2);
            var2 = var2.MAX_DAYS_AHEAD_AN_EVENT_CAN_END;
            var11 = var3.bind(var5)(var2, var9);
            var9 = null;
            if(!(var9 != var1)) { _fun0001_ip = 2; continue _fun0001 }
case 3:
            var10 = var14.add;
            var5 = _closure1_slot0;
            var1 = _closure1_slot2;
            var2 = var1[var7];
            var2 = var5.bind(var4)(var2);
            var2 = var2.MAX_YEARS_AHEAD_RECURRING_EVENT;
            var3 = 'years';
            var2 = var10.bind(var14)(var2, var3);
            var2 = var11.add;
            var1 = var1[var7];
            var1 = var5.bind(var4)(var1);
            var1 = var1.MAX_YEARS_AHEAD_RECURRING_EVENT;
            var1 = var2.bind(var11)(var1, var3);
case 2:
            var3 = _closure1_slot6;
            var2 = _closure1_slot5;
            var1 = {};
            var13 = _closure1_slot4;
            var20 = _closure1_slot0;
            var17 = _closure1_slot2;
            var7 = 4;
            var5 = var17[var7];
            var5 = var20.bind(var4)(var5);
            var10 = var5.GuildEventDatetime;
            var5 = {};
            var19 = var16.startDate;
            var5['date'] = var19;
            var19 = function onChange(arg1) {
                var3 = _closure2_slot1;
                var2 = {};
                var5 = _closure2_slot0;
                var6 = var2;
                var1 = copyDataProperties(var6, var5);
                var4 = arg1;
                var1 = 'startDate';
                var2[var1] = var4;
                var1 = undefined;
                var2 = var3.bind(var1)(var2);
                return var1;
            };
            var5['onChange'] = var19;
            var5['minimumDate'] = var18;
            var5['maximumDate'] = var14;
            var14 = 5;
            var18 = var17[var14];
            var18 = var20.bind(var4)(var18);
            var21 = var18.intl;
            var19 = var21.string;
            var18 = var17[var14];
            var18 = var20.bind(var4)(var18);
            var18 = var18.t;
            var18 = var18.kKOIwM;
            var18 = var19.bind(var21)(var18);
            var5['dateLabel'] = var18;
            var18 = var17[var14];
            var18 = var20.bind(var4)(var18);
            var19 = var18.intl;
            var18 = var19.string;
            var17 = var17[var14];
            var17 = var20.bind(var4)(var17);
            var17 = var17.t;
            var17 = var17.6dGmCA;
            var17 = var18.bind(var19)(var17);
            var5['timeLabel'] = var17;
            var10 = var13.bind(var4)(var10, var5);
            var5 = new Array(2);
            var5[0] = var10;
            var6 = var6.scheduled_end_time;
            var6 = var9 != var6;
            if(!var6) { _fun0001_ip = 4; continue _fun0001 }
case 5:
            var9 = _closure1_slot4;
            var13 = _closure1_slot0;
            var10 = _closure1_slot2;
            var7 = var10[var7];
            var7 = var13.bind(var4)(var7);
            var8 = var7.GuildEventDatetime;
            var7 = {};
            var16 = var16.endDate;
            var7['date'] = var16;
            var15 = function onChange(arg1) {
                var3 = _closure2_slot1;
                var2 = {};
                var5 = _closure2_slot0;
                var6 = var2;
                var1 = copyDataProperties(var6, var5);
                var4 = arg1;
                var1 = 'endDate';
                var2[var1] = var4;
                var1 = undefined;
                var2 = var3.bind(var1)(var2);
                return var1;
            };
            var7['onChange'] = var15;
            var7['minimumDate'] = var12;
            var7['maximumDate'] = var11;
            var11 = var10[var14];
            var11 = var13.bind(var4)(var11);
            var15 = var11.intl;
            var12 = var15.string;
            var11 = var10[var14];
            var11 = var13.bind(var4)(var11);
            var11 = var11.t;
            var11 = var11.CTLgZG;
            var11 = var12.bind(var15)(var11);
            var7['dateLabel'] = var11;
            var11 = var10[var14];
            var11 = var13.bind(var4)(var11);
            var12 = var11.intl;
            var11 = var12.string;
            var10 = var10[var14];
            var10 = var13.bind(var4)(var10);
            var10 = var10.t;
            var10 = var10.j2RuXF;
            var10 = var11.bind(var12)(var10);
            var7['timeLabel'] = var10;
            var6 = var9.bind(var4)(var8, var7);
case 4:
            var5[1] = var6;
            var1['children'] = var5;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        }
    };
    var3['default'] = var2;
    return var1;
})();