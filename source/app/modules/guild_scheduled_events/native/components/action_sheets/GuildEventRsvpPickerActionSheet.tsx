// app/modules/guild_scheduled_events/native/components/action_sheets/GuildEventRsvpPickerActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.GuildScheduledEventUserResponses;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingHorizontal'] = romeon;
    tangon['container'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_24;
    verify['marginTop'] = offset;
    tangon['buttonWrapper'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_scheduled_events/native/components/action_sheets/GuildEventRsvpPickerActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildEventRsvpPickerActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            entity = michal.event;
            var _closure2_slot0 = entity;
            zuuluu = michal.recurrenceId;
            var _closure2_slot1 = zuuluu;
            zuuluu = michal.guildId;
            var _closure2_slot2 = zuuluu;
            michal = michal.onRsvp;
            var _closure2_slot3 = michal;
            tangon = undefined;
            var _closure2_slot5 = tangon;
            michal = _closure1_slot9;
            yankee = michal.bind(tangon)();
            golfie = _closure1_slot4;
            oscard = golfie.useState;
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            romeon = 7;
            report = michal[romeon];
            report = zuuluu.bind(tangon)(report);
            report = report.ResponseOptions;
            report = report.SERIES;
            golfie = oscard.bind(golfie)(report);
            oscard = _closure1_slot3;
            report = 2;
            oscard = oscard.bind(tangon)(golfie, report);
            report = 0;
            kiloes = oscard[report];
            var _closure2_slot4 = kiloes;
            report = 1;
            backup = oscard[report];
            michal = michal[romeon];
            report = zuuluu.bind(tangon)(michal);
            zuuluu = report.getExistingRsvp;
            entity = entity.id;
            michal = null;
            entity = zuuluu.bind(report)(entity, michal);
            zuuluu = michal == entity;
            michal = undefined;
            if(zuuluu) { _fun00002_ip = 180; continue _fun00001 }
 174:
            michal = entity.response;
 180:
            entity = _closure1_slot6;
            entity = entity.INTERESTED;
            if(!(michal !== entity)) { _fun00002_ip = 206; continue _fun00001 }
 194:
            entity = _closure1_slot6;
            michal = entity.INTERESTED;
            _fun00002_ip = 216; continue _fun00001;
 206:
            entity = _closure1_slot6;
            michal = entity.UNINTERESTED;
 216:
            _closure2_slot5 = michal;
            entity = _closure1_slot6;
            entity = entity.INTERESTED;
            if(!(michal !== entity)) { _fun00002_ip = 293; continue _fun00001 }
 234:
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 8;
            michal = oscard[entity];
            michal = report.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.8MPCVl;
            golfie = michal.bind(zuuluu)(entity);
            _fun00002_ip = 350; continue _fun00001;
 293:
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 8;
            michal = oscard[entity];
            michal = report.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.WtOReX;
            golfie = michal.bind(zuuluu)(entity);
 350:
            zuuluu = _closure1_slot7;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            entity = 9;
            entity = output[entity];
            entity = sizing.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {};
            report = 10;
            report = output[report];
            report = sizing.bind(tangon)(report);
            oscard = report.BottomSheetTitleHeader;
            report = {};
            report['title'] = golfie;
            report = zuuluu.bind(tangon)(oscard, report);
            entity['header'] = report;
            golfie = _closure1_slot8;
            report = 11;
            report = output[report];
            report = sizing.bind(tangon)(report);
            oscard = report.SafeAreaPaddingView;
            report = {};
            option = true;
            report['bottom'] = option;
            option = yankee.container;
            report['style'] = option;
            option = 12;
            option = output[option];
            option = sizing.bind(tangon)(option);
            offset = option.TableRadioGroup;
            option = {};
            option['defaultValue'] = kiloes;
            option['onChange'] = backup;
            romeon = output[romeon];
            backup = sizing.bind(tangon)(romeon);
            romeon = backup.getResponseOptions;
            kiloes = romeon.bind(backup)();
            backup = kiloes.map;
            romeon = function(argFoo) {
                entity = argFoo;
                report = _closure1_slot7;
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 13;
                michal = tangon[michal];
                tangon = undefined;
                michal = zuuluu.bind(tangon)(michal);
                zuuluu = michal.TableRadioRow;
                michal = {};
                oscard = entity.value;
                michal['value'] = oscard;
                oscard = entity.name;
                michal['label'] = oscard;
                entity = entity.value;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            romeon = backup.bind(kiloes)(romeon);
            option['children'] = romeon;
            offset = zuuluu.bind(tangon)(offset, option);
            option = new Array(2);
            option[0] = offset;
            offset = _closure1_slot5;
            verify = {};
            yankee = yankee.buttonWrapper;
            verify['style'] = yankee;
            yankee = 14;
            yankee = output[yankee];
            yankee = sizing.bind(tangon)(yankee);
            romeon = yankee.Button;
            yankee = {};
            foxtra = function() { // Original name: onPress
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    oscard = _closure2_slot4;
                    report = _closure1_slot0;
                    tangon = _closure1_slot2;
                    entity = 7;
                    tangon = tangon[entity];
                    entity = undefined;
                    tangon = report.bind(entity)(tangon);
                    tangon = tangon.ResponseOptions;
                    tangon = tangon.SERIES;
                    report = null;
                    offset = null;
                    if(!(oscard !== tangon)) { _fun00004_ip = 56; continue _fun00003 }
 52:
                    offset = _closure2_slot1;
 56:
                    oscard = _closure1_slot0;
                    golfie = _closure1_slot2;
                    tangon = 15;
                    tangon = golfie[tangon];
                    verify = oscard.bind(entity)(tangon);
                    option = verify.updateRsvp;
                    tangon = _closure2_slot0;
                    backup = tangon.id;
                    romeon = _closure2_slot2;
                    yankee = _closure2_slot5;
                    kiloes = verify;
                    foxtra = offset;
                    tangon = kiloes[option](backup, foxtra, romeon, yankee, offset);
                    tangon = _closure2_slot3;
                    if(!(report != tangon)) { _fun00004_ip = 125; continue _fun00003 }
 117:
                    zuuluu = _closure2_slot3;
                    zuuluu = zuuluu.bind(entity)();
 125:
                    zuuluu = _closure1_slot1;
                    tangon = _closure1_slot2;
                    michal = 16;
                    michal = tangon[michal];
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.hideActionSheet;
                    michal = michal.bind(zuuluu)();
                    return entity;
                }
            };
            yankee['onPress'] = foxtra;
            foxtra = 8;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = output[foxtra];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.TyCVIi;
            foxtra = backup.bind(kiloes)(foxtra);
            yankee['text'] = foxtra;
            yankee = zuuluu.bind(tangon)(romeon, yankee);
            verify['children'] = yankee;
            verify = zuuluu.bind(tangon)(offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();