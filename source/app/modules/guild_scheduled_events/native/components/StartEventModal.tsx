// app/modules/guild_scheduled_events/native/components/StartEventModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = golfie;
    entity = function(argFoo) { // Original name: NavigationBar
        entity = argFoo;
        entity = entity.onClose;
        var _closure2_slot0 = entity;
        tangon = _closure1_slot11;
        zuuluu = _closure1_slot6;
        michal = {};
        foxtra = _closure1_slot0;
        romeon = _closure1_slot2;
        entity = 13;
        report = romeon[entity];
        entity = undefined;
        report = foxtra.bind(entity)(report);
        oscard = report.PressableOpacity;
        report = {};
        verify = 'button';
        report['accessibilityRole'] = verify;
        verify = 14;
        offset = romeon[verify];
        offset = foxtra.bind(entity)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = romeon[verify];
        verify = foxtra.bind(entity)(verify);
        verify = verify.t;
        verify = verify.cpT0Cg;
        verify = offset.bind(yankee)(verify);
        report['accessibilityLabel'] = verify;
        option = function() { // Original name: onPress
            michal = _closure2_slot0;
            entity = undefined;
            entity = michal.bind(entity)();
            return entity;
        };
        report['onPress'] = option;
        verify = _closure1_slot11;
        yankee = _closure1_slot1;
        golfie = 15;
        golfie = romeon[golfie];
        option = yankee.bind(entity)(golfie);
        golfie = {};
        offset = 16;
        offset = romeon[offset];
        offset = yankee.bind(entity)(offset);
        golfie['source'] = offset;
        golfie = verify.bind(entity)(option, golfie);
        report['children'] = golfie;
        report = tangon.bind(entity)(oscard, report);
        michal['children'] = report;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    var _closure1_slot14 = entity;
    entity = function(argFoo) { // Original name: StartEventHeader
        entity = argFoo;
        verify = entity.event;
        entity = _closure1_slot13;
        tangon = undefined;
        offset = entity.bind(tangon)();
        zuuluu = _closure1_slot12;
        michal = _closure1_slot6;
        entity = {};
        report = offset.header;
        entity['style'] = report;
        foxtra = _closure1_slot11;
        golfie = _closure1_slot0;
        yankee = _closure1_slot2;
        oscard = 17;
        report = yankee[oscard];
        report = golfie.bind(tangon)(report);
        romeon = report.Text;
        report = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        backup = offset.headerPrivacyLevel;
        report['style'] = backup;
        backup = 14;
        kiloes = yankee[backup];
        kiloes = golfie.bind(tangon)(kiloes);
        sizing = kiloes.intl;
        kiloes = sizing.string;
        backup = yankee[backup];
        backup = golfie.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.q+fFJi;
        backup = kiloes.bind(sizing)(backup);
        report['children'] = backup;
        romeon = foxtra.bind(tangon)(romeon, report);
        report = new Array(2);
        report[0] = romeon;
        option = _closure1_slot11;
        oscard = yankee[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'style': null, 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        offset = offset.headerTitle;
        oscard['style'] = offset;
        verify = verify.name;
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot15 = entity;
    michal = function(argFoo) { // Original name: PreviewEventCard
        entity = argFoo;
        oscard = entity.event;
        michal = _closure1_slot13;
        tangon = undefined;
        report = michal.bind(tangon)();
        zuuluu = _closure1_slot11;
        michal = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 18;
        entity = golfie[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        entity['event'] = oscard;
        oscard = true;
        entity['hideControls'] = oscard;
        report = report.previewCard;
        entity['style'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot16 = michal;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    entity = 0;
    report = golfie[entity];
    entity = undefined;
    report = romeon.bind(entity)(report);
    var _closure1_slot3 = report;
    report = 1;
    report = golfie[report];
    report = romeon.bind(entity)(report);
    var _closure1_slot4 = report;
    report = 2;
    option = golfie[report];
    report = argCor;
    report = report.bind(entity)(option);
    var _closure1_slot5 = report;
    report = 3;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.View;
    var _closure1_slot6 = report;
    report = 4;
    report = golfie[report];
    report = romeon.bind(entity)(report);
    var _closure1_slot7 = report;
    report = 5;
    report = golfie[report];
    report = romeon.bind(entity)(report);
    var _closure1_slot8 = report;
    report = 6;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.GuildScheduledEventEntityTypes;
    var _closure1_slot9 = report;
    report = 7;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.START_EVENT_MODAL_KEY;
    var _closure1_slot10 = report;
    report = 8;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    foxtra = report.Fonts;
    report = 9;
    option = golfie[report];
    option = oscard.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot11 = option;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot12 = report;
    yankee = 10;
    report = golfie[yankee];
    verify = oscard.bind(entity)(report);
    option = verify.createStyles;
    report = {};
    offset = {};
    offset['right'] = yankee;
    report['closeButtonContainer'] = offset;
    offset = {'flex': 1, 'padding': 16};
    yankee = 11;
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = backup;
    report['mainContainer'] = offset;
    backup = 'center';
    offset = {'flex': 1, 'flexDirection': 'column', 'justifyContent': 'center', 'alignContent': 'center'};
    report['container'] = offset;
    offset = {};
    offset['alignSelf'] = backup;
    report['center'] = offset;
    offset = {'alignItems': 'center', 'paddingTop': 32};
    report['header'] = offset;
    offset = {};
    backup = 24;
    offset['paddingTop'] = backup;
    report['notificationContainer'] = offset;
    offset = {'lineHeight': 24, 'paddingTop': 8, 'textAlign': 'center'};
    report['headerTitle'] = offset;
    offset = {'position': 'absolute', 'bottom': 0, 'left': 0, 'right': 0};
    report['buttonContainer'] = offset;
    offset = {};
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INTERACTIVE_NORMAL;
    offset['color'] = backup;
    report['icon'] = offset;
    offset = {'borderColor': null, 'backgroundColor': null, 'shadowColor': '#000', 'shadowOpacity': 0.2, 'shadowRadius': 16};
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MODIFIER_ACCENT;
    offset['borderColor'] = backup;
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_FLOATING;
    offset['backgroundColor'] = backup;
    backup = {'height': 8, 'width': 0};
    offset['shadowOffset'] = backup;
    report['previewCard'] = offset;
    offset = {'textAlign': 'center', 'lineHeight': 18};
    report['headerPrivacyLevel'] = offset;
    offset = {};
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_PRIMARY;
    offset['color'] = backup;
    report['previewPrivacyText'] = offset;
    offset = {'paddingBottom': 8, 'fontSize': 14};
    foxtra = foxtra.PRIMARY_MEDIUM;
    offset['fontFamily'] = foxtra;
    yankee = golfie[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    yankee = yankee.RED_400;
    offset['color'] = yankee;
    report['error'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot13 = report;
    report = 26;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/guild_scheduled_events/native/components/StartEventModal.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: StartEventModal
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            kiloes = entity.event;
            var _closure2_slot0 = kiloes;
            entity = entity.onCloseActionSheet;
            var _closure2_slot1 = entity;
            tangon = undefined;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            var _closure2_slot5 = tangon;
            var _closure2_slot6 = tangon;
            var _closure2_slot7 = tangon;
            entity = _closure1_slot13;
            update = entity.bind(tangon)();
            entity = kiloes.guild_id;
            var _closure2_slot2 = entity;
            zuuluu = _closure1_slot0;
            oscard = _closure1_slot2;
            michal = 19;
            entity = oscard[michal];
            option = zuuluu.bind(tangon)(entity);
            golfie = option.useStateFromStores;
            entity = _closure1_slot8;
            report = new Array(1);
            report[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot8;
                michal = zuuluu.getGuild;
                entity = _closure2_slot2;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity = golfie.bind(option)(report, entity);
            michal = oscard[michal];
            verify = zuuluu.bind(tangon)(michal);
            option = verify.useStateFromStores;
            michal = _closure1_slot7;
            golfie = new Array(1);
            golfie[0] = michal;
            report = new Array(1);
            report[0] = kiloes;
            michal = function() {
                zuuluu = _closure1_slot7;
                michal = zuuluu.getChannel;
                entity = _closure2_slot0;
                entity = entity.channel_id;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            report = option.bind(verify)(golfie, michal, report);
            michal = 20;
            michal = oscard[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.useManageResourcePermissions;
            backup = null;
            if(!(backup != report)) { _fun00002_ip = 192; continue _fun00001 }
 189:
            entity = report;
 192:
            entity = michal.bind(zuuluu)(entity);
            entity = entity.canManageGuildEvent;
            entity = entity.bind(tangon)(kiloes);
            _closure2_slot3 = entity;
            michal = kiloes.entity_type;
            entity = _closure1_slot9;
            entity = entity.STAGE_INSTANCE;
            yankee = michal === entity;
            michal = _closure1_slot5;
            entity = michal.useState;
            entity = entity.bind(michal)(yankee);
            golfie = _closure1_slot4;
            oscard = 2;
            entity = golfie.bind(tangon)(entity, oscard);
            zuuluu = 0;
            sequen = entity[zuuluu];
            _closure2_slot4 = sequen;
            michal = 1;
            entity = entity[michal];
            _closure2_slot5 = entity;
            option = _closure1_slot1;
            report = _closure1_slot2;
            entity = 21;
            entity = report[entity];
            entity = option.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            entity = golfie.bind(tangon)(entity, oscard);
            zuuluu = entity[zuuluu];
            _closure2_slot6 = zuuluu;
            entity = entity[michal];
            output = entity.loading;
            source = entity.error;
            option = function() { // Original name: onCloseModal
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = arguments[0];
                    entity = undefined;
                    if(!(zuuluu === entity)) { _fun00004_ip = 11; continue _fun00003 }
 9:
                    zuuluu = false;
 11:
                    report = _closure1_slot1;
                    oscard = _closure1_slot2;
                    tangon = 12;
                    tangon = oscard[tangon];
                    report = report.bind(entity)(tangon);
                    tangon = report.popWithKey;
                    michal = _closure1_slot10;
                    michal = tangon.bind(report)(michal);
                    report = _closure2_slot1;
                    tangon = null;
                    if(!(tangon != report)) { _fun00004_ip = 71; continue _fun00003 }
 62:
                    michal = _closure2_slot1;
                    michal = michal.bind(entity)(zuuluu);
 71:
                    return entity;
                }
            };
            _closure2_slot7 = option;
            entity = function() {
                tangon = _closure1_slot3;
                zuuluu = undefined;
                michal = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(michal) { _fun00006_ip = 87; continue _fun00005 }
 7:
                            zuuluu = _closure2_slot3;
                            if(zuuluu) { _fun00006_ip = 32; continue _fun00005 }
 17:
                            report = _closure2_slot7;
                            tangon = undefined;
                            zuuluu = false;
                            zuuluu = report.bind(tangon)(zuuluu);
                            _fun00006_ip = 79; continue _fun00005;
 32:
                            oscard = _closure2_slot6;
                            report = _closure2_slot0;
                            tangon = _closure2_slot4;
                            zuuluu = {};
                            michal = function() { // Original name: onSuccess
                                zuuluu = _closure2_slot7;
                                michal = undefined;
                                entity = true;
                                entity = zuuluu.bind(michal)(entity);
                                return entity;
                            };
                            zuuluu['onSuccess'] = michal;
                            michal = undefined;
                            michal = oscard.bind(michal)(report, tangon, zuuluu);
                            SaveGenerator(address=73);
 71:
                            return michal;
 73:
                            ResumeGenerator(result_out_reg=1, return_bool_out_reg=2);
                            if(zuuluu) { _fun00006_ip = 84; continue _fun00005 }
 79:
                            zuuluu = undefined;
                            return zuuluu;
 84:
                            return michal;
 87:
                            return entity;
                        }
                    };
                    return entity;
                };
                michal = tangon.bind(zuuluu)(michal);
                var _closure3_slot0 = michal;
                entity = function() {
                    entity = undefined;
                    tangon = _closure3_slot0;
                    zuuluu = tangon.apply;
                    entity = arguments;
                    michal = entity;
                    entity = this;
                    entity = zuuluu.bind(tangon)(entity, michal);
                    return entity;
                };
                return entity;
            };
            result = entity.bind(tangon)();
            zuuluu = _closure1_slot12;
            michal = _closure1_slot0;
            entity = 22;
            entity = report[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.SafeAreaPaddingView;
            entity = {'top': true, 'bottom': true};
            report = update.mainContainer;
            entity['style'] = report;
            golfie = _closure1_slot11;
            oscard = _closure1_slot14;
            report = {};
            report['onClose'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot12;
            golfie = _closure1_slot6;
            oscard = {};
            verify = update.container;
            oscard['style'] = verify;
            romeon = _closure1_slot11;
            offset = _closure1_slot16;
            verify = {};
            verify['event'] = kiloes;
            offset = romeon.bind(tangon)(offset, verify);
            verify = new Array(4);
            verify[0] = offset;
            foxtra = _closure1_slot11;
            romeon = _closure1_slot15;
            offset = {};
            offset['event'] = kiloes;
            offset = foxtra.bind(tangon)(romeon, offset);
            verify[1] = offset;
            offset = null;
            if(!yankee) { _fun00002_ip = 593; continue _fun00001 }
 508:
            foxtra = _closure1_slot11;
            romeon = _closure1_slot6;
            yankee = {};
            kiloes = update.notificationContainer;
            yankee['style'] = kiloes;
            ctrled = _closure1_slot11;
            sizing = _closure1_slot0;
            config = _closure1_slot2;
            kiloes = 23;
            kiloes = config[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            sizing = kiloes.NotificationToggle;
            kiloes = {};
            kiloes['sendStartNotification'] = sequen;
            vacuum = function() { // Original name: onToggle
                zuuluu = _closure2_slot5;
                entity = undefined;
                michal = function(argFoo) {
                    entity = argFoo;
                    entity = !entity;
                    return entity;
                };
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            kiloes['onToggle'] = vacuum;
            kiloes = ctrled.bind(tangon)(sizing, kiloes);
            yankee['children'] = kiloes;
            offset = foxtra.bind(tangon)(romeon, yankee);
 593:
            verify[2] = offset;
            romeon = _closure1_slot12;
            yankee = _closure1_slot6;
            offset = {};
            foxtra = update.buttonContainer;
            offset['style'] = foxtra;
            foxtra = backup != source;
            backup = null;
            if(!foxtra) { _fun00002_ip = 687; continue _fun00001 }
 626:
            sizing = _closure1_slot11;
            kiloes = _closure1_slot0;
            ctrled = _closure1_slot2;
            foxtra = 24;
            foxtra = ctrled[foxtra];
            foxtra = kiloes.bind(tangon)(foxtra);
            kiloes = foxtra.LegacyText;
            foxtra = {};
            update = update.error;
            foxtra['style'] = update;
            update = source.getAnyErrorMessage;
            update = update.bind(source)();
            foxtra['children'] = update;
            backup = sizing.bind(tangon)(kiloes, foxtra);
 687:
            foxtra = new Array(2);
            foxtra[0] = backup;
            sizing = _closure1_slot11;
            source = _closure1_slot1;
            vacuum = _closure1_slot2;
            update = 25;
            backup = vacuum[update];
            kiloes = source.bind(tangon)(backup);
            backup = {};
            ctrled = vacuum[update];
            ctrled = source.bind(tangon)(ctrled);
            ctrled = ctrled.Colors;
            ctrled = ctrled.GREEN;
            backup['color'] = ctrled;
            update = vacuum[update];
            update = source.bind(tangon)(update);
            update = update.Sizes;
            update = update.MEDIUM;
            backup['size'] = update;
            ctrled = _closure1_slot0;
            echoed = 14;
            update = vacuum[echoed];
            update = ctrled.bind(tangon)(update);
            source = update.intl;
            update = source.string;
            echoed = vacuum[echoed];
            echoed = ctrled.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.cK1GGR;
            echoed = update.bind(source)(echoed);
            backup['text'] = echoed;
            backup['onPress'] = result;
            backup['disabled'] = output;
            backup['loading'] = output;
            backup = sizing.bind(tangon)(kiloes, backup);
            foxtra[1] = backup;
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[3] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['PreviewEventCard'] = michal;
    return entity;
})();