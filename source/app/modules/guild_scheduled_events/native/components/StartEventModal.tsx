// app/modules/guild_scheduled_events/native/components/StartEventModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    romeo = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = golf;
    entity = function(argFoo) { // Original name: NavigationBar
        entity = argFoo;
        entity = entity.onClose;
        var _closure2_slot0 = entity;
        tango = _closure1_slot11;
        zulu = _closure1_slot6;
        mike = {};
        foxtrot = _closure1_slot0;
        romeo = _closure1_slot2;
        entity = 13;
        report = romeo[entity];
        entity = undefined;
        report = foxtrot.bind(entity)(report);
        oscar = report.PressableOpacity;
        report = {};
        verify = 'button';
        report['accessibilityRole'] = verify;
        verify = 14;
        offset = romeo[verify];
        offset = foxtrot.bind(entity)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = romeo[verify];
        verify = foxtrot.bind(entity)(verify);
        verify = verify.t;
        verify = verify.cpT0Cg;
        verify = offset.bind(yankee)(verify);
        report['accessibilityLabel'] = verify;
        options = function() { // Original name: onPress
            mike = _closure2_slot0;
            entity = undefined;
            entity = mike.bind(entity)();
            return entity;
        };
        report['onPress'] = options;
        verify = _closure1_slot11;
        yankee = _closure1_slot1;
        golf = 15;
        golf = romeo[golf];
        options = yankee.bind(entity)(golf);
        golf = {};
        offset = 16;
        offset = romeo[offset];
        offset = yankee.bind(entity)(offset);
        golf['source'] = offset;
        golf = verify.bind(entity)(options, golf);
        report['children'] = golf;
        report = tango.bind(entity)(oscar, report);
        mike['children'] = report;
        entity = tango.bind(entity)(zulu, mike);
        return entity;
    };
    var _closure1_slot14 = entity;
    entity = function(argFoo) { // Original name: StartEventHeader
        entity = argFoo;
        verify = entity.event;
        entity = _closure1_slot13;
        tango = undefined;
        offset = entity.bind(tango)();
        zulu = _closure1_slot12;
        mike = _closure1_slot6;
        entity = {};
        report = offset.header;
        entity['style'] = report;
        foxtrot = _closure1_slot11;
        golf = _closure1_slot0;
        yankee = _closure1_slot2;
        oscar = 17;
        report = yankee[oscar];
        report = golf.bind(tango)(report);
        romeo = report.Text;
        report = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        backup = offset.headerPrivacyLevel;
        report['style'] = backup;
        backup = 14;
        kilo = yankee[backup];
        kilo = golf.bind(tango)(kilo);
        sizing = kilo.intl;
        kilo = sizing.string;
        backup = yankee[backup];
        backup = golf.bind(tango)(backup);
        backup = backup.t;
        backup = backup.q+fFJi;
        backup = kilo.bind(sizing)(backup);
        report['children'] = backup;
        romeo = foxtrot.bind(tango)(romeo, report);
        report = new Array(2);
        report[0] = romeo;
        options = _closure1_slot11;
        oscar = yankee[oscar];
        oscar = golf.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'style': null, 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        offset = offset.headerTitle;
        oscar['style'] = offset;
        verify = verify.name;
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot15 = entity;
    mike = function(argFoo) { // Original name: PreviewEventCard
        entity = argFoo;
        oscar = entity.event;
        mike = _closure1_slot13;
        tango = undefined;
        report = mike.bind(tango)();
        zulu = _closure1_slot11;
        mike = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 18;
        entity = golf[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        entity['event'] = oscar;
        oscar = true;
        entity['hideControls'] = oscar;
        report = report.previewCard;
        entity['style'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot16 = mike;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, report);
    entity = 0;
    report = golf[entity];
    entity = undefined;
    report = romeo.bind(entity)(report);
    var _closure1_slot3 = report;
    report = 1;
    report = golf[report];
    report = romeo.bind(entity)(report);
    var _closure1_slot4 = report;
    report = 2;
    options = golf[report];
    report = argCorge;
    report = report.bind(entity)(options);
    var _closure1_slot5 = report;
    report = 3;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.View;
    var _closure1_slot6 = report;
    report = 4;
    report = golf[report];
    report = romeo.bind(entity)(report);
    var _closure1_slot7 = report;
    report = 5;
    report = golf[report];
    report = romeo.bind(entity)(report);
    var _closure1_slot8 = report;
    report = 6;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.GuildScheduledEventEntityTypes;
    var _closure1_slot9 = report;
    report = 7;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.START_EVENT_MODAL_KEY;
    var _closure1_slot10 = report;
    report = 8;
    report = golf[report];
    report = oscar.bind(entity)(report);
    foxtrot = report.Fonts;
    report = 9;
    options = golf[report];
    options = oscar.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot11 = options;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot12 = report;
    yankee = 10;
    report = golf[yankee];
    verify = oscar.bind(entity)(report);
    options = verify.createStyles;
    report = {};
    offset = {};
    offset['right'] = yankee;
    report['closeButtonContainer'] = offset;
    offset = {'flex': 1, 'padding': 16};
    yankee = 11;
    backup = golf[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = backup;
    report['mainContainer'] = offset;
    backup = 'center';
    offset = {'flex': 1, 'flexDirection': 'column', 'justifyContent': 'center', 'alignContent': 'center'};
    report['container'] = offset;
    offset = {};
    offset['alignSelf'] = backup;
    report['center'] = offset;
    offset = {'alignItems': 'center', 'paddingTop': 32};
    report['header'] = offset;
    offset = {};
    backup = 24;
    offset['paddingTop'] = backup;
    report['notificationContainer'] = offset;
    offset = {'lineHeight': 24, 'paddingTop': 8, 'textAlign': 'center'};
    report['headerTitle'] = offset;
    offset = {'position': 'absolute', 'bottom': 0, 'left': 0, 'right': 0};
    report['buttonContainer'] = offset;
    offset = {};
    backup = golf[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INTERACTIVE_NORMAL;
    offset['color'] = backup;
    report['icon'] = offset;
    offset = {'borderColor': null, 'backgroundColor': null, 'shadowColor': '#000', 'shadowOpacity': 0.2, 'shadowRadius': 16};
    backup = golf[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MODIFIER_ACCENT;
    offset['borderColor'] = backup;
    backup = golf[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_FLOATING;
    offset['backgroundColor'] = backup;
    backup = {'height': 8, 'width': 0};
    offset['shadowOffset'] = backup;
    report['previewCard'] = offset;
    offset = {'textAlign': 'center', 'lineHeight': 18};
    report['headerPrivacyLevel'] = offset;
    offset = {};
    backup = golf[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_PRIMARY;
    offset['color'] = backup;
    report['previewPrivacyText'] = offset;
    offset = {'paddingBottom': 8, 'fontSize': 14};
    foxtrot = foxtrot.PRIMARY_MEDIUM;
    offset['fontFamily'] = foxtrot;
    yankee = golf[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    yankee = yankee.RED_400;
    offset['color'] = yankee;
    report['error'] = offset;
    report = options.bind(verify)(report);
    var _closure1_slot13 = report;
    report = 26;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/guild_scheduled_events/native/components/StartEventModal.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: StartEventModal
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            kilo = entity.event;
            var _closure2_slot0 = kilo;
            entity = entity.onCloseActionSheet;
            var _closure2_slot1 = entity;
            tango = undefined;
            var _closure2_slot3 = tango;
            var _closure2_slot4 = tango;
            var _closure2_slot5 = tango;
            var _closure2_slot6 = tango;
            var _closure2_slot7 = tango;
            entity = _closure1_slot13;
            update = entity.bind(tango)();
            entity = kilo.guild_id;
            var _closure2_slot2 = entity;
            zulu = _closure1_slot0;
            oscar = _closure1_slot2;
            mike = 19;
            entity = oscar[mike];
            options = zulu.bind(tango)(entity);
            golf = options.useStateFromStores;
            entity = _closure1_slot8;
            report = new Array(1);
            report[0] = entity;
            entity = function() {
                zulu = _closure1_slot8;
                mike = zulu.getGuild;
                entity = _closure2_slot2;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            entity = golf.bind(options)(report, entity);
            mike = oscar[mike];
            verify = zulu.bind(tango)(mike);
            options = verify.useStateFromStores;
            mike = _closure1_slot7;
            golf = new Array(1);
            golf[0] = mike;
            report = new Array(1);
            report[0] = kilo;
            mike = function() {
                zulu = _closure1_slot7;
                mike = zulu.getChannel;
                entity = _closure2_slot0;
                entity = entity.channel_id;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            report = options.bind(verify)(golf, mike, report);
            mike = 20;
            mike = oscar[mike];
            zulu = zulu.bind(tango)(mike);
            mike = zulu.useManageResourcePermissions;
            backup = null;
            if(!(backup != report)) { _fun00002_ip = 192; continue _fun00001 }
 189:
            entity = report;
 192:
            entity = mike.bind(zulu)(entity);
            entity = entity.canManageGuildEvent;
            entity = entity.bind(tango)(kilo);
            _closure2_slot3 = entity;
            mike = kilo.entity_type;
            entity = _closure1_slot9;
            entity = entity.STAGE_INSTANCE;
            yankee = mike === entity;
            mike = _closure1_slot5;
            entity = mike.useState;
            entity = entity.bind(mike)(yankee);
            golf = _closure1_slot4;
            oscar = 2;
            entity = golf.bind(tango)(entity, oscar);
            zulu = 0;
            sequence = entity[zulu];
            _closure2_slot4 = sequence;
            mike = 1;
            entity = entity[mike];
            _closure2_slot5 = entity;
            options = _closure1_slot1;
            report = _closure1_slot2;
            entity = 21;
            entity = report[entity];
            entity = options.bind(tango)(entity);
            entity = entity.bind(tango)();
            entity = golf.bind(tango)(entity, oscar);
            zulu = entity[zulu];
            _closure2_slot6 = zulu;
            entity = entity[mike];
            output = entity.loading;
            source = entity.error;
            options = function() { // Original name: onCloseModal
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zulu = arguments[0];
                    entity = undefined;
                    if(!(zulu === entity)) { _fun00004_ip = 11; continue _fun00003 }
 9:
                    zulu = false;
 11:
                    report = _closure1_slot1;
                    oscar = _closure1_slot2;
                    tango = 12;
                    tango = oscar[tango];
                    report = report.bind(entity)(tango);
                    tango = report.popWithKey;
                    mike = _closure1_slot10;
                    mike = tango.bind(report)(mike);
                    report = _closure2_slot1;
                    tango = null;
                    if(!(tango != report)) { _fun00004_ip = 71; continue _fun00003 }
 62:
                    mike = _closure2_slot1;
                    mike = mike.bind(entity)(zulu);
 71:
                    return entity;
                }
            };
            _closure2_slot7 = options;
            entity = function() {
                tango = _closure1_slot3;
                zulu = undefined;
                mike = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(mike) { _fun00006_ip = 87; continue _fun00005 }
 7:
                            zulu = _closure2_slot3;
                            if(zulu) { _fun00006_ip = 32; continue _fun00005 }
 17:
                            report = _closure2_slot7;
                            tango = undefined;
                            zulu = false;
                            zulu = report.bind(tango)(zulu);
                            _fun00006_ip = 79; continue _fun00005;
 32:
                            oscar = _closure2_slot6;
                            report = _closure2_slot0;
                            tango = _closure2_slot4;
                            zulu = {};
                            mike = function() { // Original name: onSuccess
                                zulu = _closure2_slot7;
                                mike = undefined;
                                entity = true;
                                entity = zulu.bind(mike)(entity);
                                return entity;
                            };
                            zulu['onSuccess'] = mike;
                            mike = undefined;
                            mike = oscar.bind(mike)(report, tango, zulu);
                            SaveGenerator(address=73);
 71:
                            return mike;
 73:
                            ResumeGenerator(result_out_reg=1, return_bool_out_reg=2);
                            if(zulu) { _fun00006_ip = 84; continue _fun00005 }
 79:
                            zulu = undefined;
                            return zulu;
 84:
                            return mike;
 87:
                            return entity;
                        }
                    };
                    return entity;
                };
                mike = tango.bind(zulu)(mike);
                var _closure3_slot0 = mike;
                entity = function() {
                    entity = undefined;
                    tango = _closure3_slot0;
                    zulu = tango.apply;
                    entity = arguments;
                    mike = entity;
                    entity = this;
                    entity = zulu.bind(tango)(entity, mike);
                    return entity;
                };
                return entity;
            };
            result = entity.bind(tango)();
            zulu = _closure1_slot12;
            mike = _closure1_slot0;
            entity = 22;
            entity = report[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.SafeAreaPaddingView;
            entity = {'top': true, 'bottom': true};
            report = update.mainContainer;
            entity['style'] = report;
            golf = _closure1_slot11;
            oscar = _closure1_slot14;
            report = {};
            report['onClose'] = options;
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot12;
            golf = _closure1_slot6;
            oscar = {};
            verify = update.container;
            oscar['style'] = verify;
            romeo = _closure1_slot11;
            offset = _closure1_slot16;
            verify = {};
            verify['event'] = kilo;
            offset = romeo.bind(tango)(offset, verify);
            verify = new Array(4);
            verify[0] = offset;
            foxtrot = _closure1_slot11;
            romeo = _closure1_slot15;
            offset = {};
            offset['event'] = kilo;
            offset = foxtrot.bind(tango)(romeo, offset);
            verify[1] = offset;
            offset = null;
            if(!yankee) { _fun00002_ip = 593; continue _fun00001 }
 508:
            foxtrot = _closure1_slot11;
            romeo = _closure1_slot6;
            yankee = {};
            kilo = update.notificationContainer;
            yankee['style'] = kilo;
            control = _closure1_slot11;
            sizing = _closure1_slot0;
            config = _closure1_slot2;
            kilo = 23;
            kilo = config[kilo];
            kilo = sizing.bind(tango)(kilo);
            sizing = kilo.NotificationToggle;
            kilo = {};
            kilo['sendStartNotification'] = sequence;
            vacuum = function() { // Original name: onToggle
                zulu = _closure2_slot5;
                entity = undefined;
                mike = function(argFoo) {
                    entity = argFoo;
                    entity = !entity;
                    return entity;
                };
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            kilo['onToggle'] = vacuum;
            kilo = control.bind(tango)(sizing, kilo);
            yankee['children'] = kilo;
            offset = foxtrot.bind(tango)(romeo, yankee);
 593:
            verify[2] = offset;
            romeo = _closure1_slot12;
            yankee = _closure1_slot6;
            offset = {};
            foxtrot = update.buttonContainer;
            offset['style'] = foxtrot;
            foxtrot = backup != source;
            backup = null;
            if(!foxtrot) { _fun00002_ip = 687; continue _fun00001 }
 626:
            sizing = _closure1_slot11;
            kilo = _closure1_slot0;
            control = _closure1_slot2;
            foxtrot = 24;
            foxtrot = control[foxtrot];
            foxtrot = kilo.bind(tango)(foxtrot);
            kilo = foxtrot.LegacyText;
            foxtrot = {};
            update = update.error;
            foxtrot['style'] = update;
            update = source.getAnyErrorMessage;
            update = update.bind(source)();
            foxtrot['children'] = update;
            backup = sizing.bind(tango)(kilo, foxtrot);
 687:
            foxtrot = new Array(2);
            foxtrot[0] = backup;
            sizing = _closure1_slot11;
            source = _closure1_slot1;
            vacuum = _closure1_slot2;
            update = 25;
            backup = vacuum[update];
            kilo = source.bind(tango)(backup);
            backup = {};
            control = vacuum[update];
            control = source.bind(tango)(control);
            control = control.Colors;
            control = control.GREEN;
            backup['color'] = control;
            update = vacuum[update];
            update = source.bind(tango)(update);
            update = update.Sizes;
            update = update.MEDIUM;
            backup['size'] = update;
            control = _closure1_slot0;
            echo = 14;
            update = vacuum[echo];
            update = control.bind(tango)(update);
            source = update.intl;
            update = source.string;
            echo = vacuum[echo];
            echo = control.bind(tango)(echo);
            echo = echo.t;
            echo = echo.cK1GGR;
            echo = update.bind(source)(echo);
            backup['text'] = echo;
            backup['onPress'] = result;
            backup['disabled'] = output;
            backup['loading'] = output;
            backup = sizing.bind(tango)(kilo, backup);
            foxtrot[1] = backup;
            offset['children'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[3] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = tango;
    zulu['PreviewEventCard'] = mike;
    return entity;
})();