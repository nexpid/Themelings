// app/modules/guild_scheduled_events/native/components/UpcomingEventsLongPressActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ReadStateTypes;
    var _closure1_slot6 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 16;
    verify['marginRight'] = offset;
    tango['headerIcon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_scheduled_events/native/components/UpcomingEventsLongPressActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: UpcomingEventsLongPressActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.guildId;
            var _closure2_slot0 = entity;
            entity = _closure1_slot9;
            tango = undefined;
            kilo = entity.bind(tango)();
            golf = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 7;
            mike = yankee[entity];
            oscar = golf.bind(tango)(mike);
            report = oscar.useStateFromStores;
            mike = _closure1_slot4;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                zulu = _closure1_slot4;
                mike = zulu.getGuild;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            echo = report.bind(oscar)(zulu, mike);
            entity = yankee[entity];
            report = golf.bind(tango)(entity);
            zulu = report.useStateFromStores;
            entity = _closure1_slot5;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                zulu = _closure1_slot5;
                mike = zulu.isMuteScheduledEventsEnabled;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            foxtrot = zulu.bind(report)(mike, entity);
            var _closure2_slot1 = foxtrot;
            zulu = _closure1_slot8;
            entity = 8;
            entity = yankee[entity];
            entity = golf.bind(tango)(entity);
            mike = entity.ActionSheet;
            entity = {};
            options = _closure1_slot7;
            report = 9;
            report = yankee[report];
            report = golf.bind(tango)(report);
            oscar = report.BottomSheetTitleHeader;
            report = {};
            romeo = _closure1_slot3;
            offset = {};
            kilo = kilo.headerIcon;
            offset['style'] = kilo;
            sizing = _closure1_slot1;
            result = 10;
            kilo = yankee[result];
            output = sizing.bind(tango)(kilo);
            kilo = {};
            kilo['guild'] = echo;
            result = yankee[result];
            result = golf.bind(tango)(result);
            result = result.GuildIconSizes;
            result = result.LARGE;
            kilo['size'] = result;
            kilo = options.bind(tango)(output, kilo);
            offset['children'] = kilo;
            offset = options.bind(tango)(romeo, offset);
            report['leading'] = offset;
            result = 11;
            offset = yankee[result];
            offset = golf.bind(tango)(offset);
            kilo = offset.intl;
            romeo = kilo.string;
            offset = yankee[result];
            offset = golf.bind(tango)(offset);
            offset = offset.t;
            offset = offset.tlopTE;
            offset = romeo.bind(kilo)(offset);
            report['title'] = offset;
            oscar = options.bind(tango)(oscar, report);
            report = new Array(3);
            report[0] = oscar;
            kilo = 12;
            oscar = yankee[kilo];
            oscar = golf.bind(tango)(oscar);
            romeo = oscar.FormRow;
            oscar = {};
            offset = 13;
            output = yankee[offset];
            echo = sizing.bind(tango)(output);
            output = {};
            update = 14;
            update = yankee[update];
            update = sizing.bind(tango)(update);
            output['source'] = update;
            output = options.bind(tango)(echo, output);
            oscar['leading'] = output;
            output = yankee[kilo];
            output = golf.bind(tango)(output);
            echo = output.FormLabel;
            output = {};
            update = yankee[result];
            update = golf.bind(tango)(update);
            control = update.intl;
            source = control.string;
            update = yankee[result];
            update = golf.bind(tango)(update);
            update = update.t;
            update = update.e6RscX;
            update = source.bind(control)(update);
            output['text'] = update;
            output = options.bind(tango)(echo, output);
            oscar['label'] = output;
            output = function() { // Original name: onPress
                report = _closure1_slot0;
                tango = _closure1_slot2;
                entity = 15;
                zulu = tango[entity];
                entity = undefined;
                golf = report.bind(entity)(zulu);
                oscar = golf.ackGuildFeature;
                report = _closure2_slot0;
                zulu = _closure1_slot6;
                zulu = zulu.GUILD_EVENT;
                zulu = oscar.bind(golf)(report, zulu);
                zulu = _closure1_slot1;
                mike = 16;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.hideActionSheet;
                mike = mike.bind(zulu)();
                return entity;
            };
            oscar['onPress'] = output;
            oscar = options.bind(tango)(romeo, oscar);
            report[1] = oscar;
            oscar = yankee[kilo];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.FormRow;
            oscar = {};
            offset = yankee[offset];
            yankee = sizing.bind(tango)(offset);
            offset = {};
            echo = _closure1_slot2;
            if(foxtrot) { _fun00002_ip = 518; continue _fun00001 }
 509:
            romeo = 18;
            romeo = echo[romeo];
            _fun00002_ip = 525; continue _fun00001;
 518:
            output = 17;
            romeo = echo[output];
 525:
            romeo = sizing.bind(tango)(romeo);
            offset['source'] = romeo;
            offset = options.bind(tango)(yankee, offset);
            oscar['leading'] = offset;
            romeo = _closure1_slot7;
            yankee = _closure1_slot0;
            offset = _closure1_slot2;
            offset = offset[kilo];
            offset = yankee.bind(tango)(offset);
            yankee = offset.FormLabel;
            offset = {};
            output = _closure1_slot0;
            backup = _closure1_slot2;
            kilo = backup[result];
            kilo = output.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = backup[result];
            backup = output.bind(tango)(backup);
            backup = backup.t;
            if(foxtrot) { _fun00002_ip = 631; continue _fun00001 }
 618:
            foxtrot = backup.ONG3Y2;
            foxtrot = kilo.bind(sizing)(foxtrot);
            _fun00002_ip = 642; continue _fun00001;
 631:
            backup = backup.COiLo6;
            foxtrot = kilo.bind(sizing)(backup);
 642:
            offset['text'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            oscar['label'] = offset;
            verify = function() { // Original name: onPress
                zulu = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 19;
                mike = verify[entity];
                entity = undefined;
                oscar = zulu.bind(entity)(mike);
                report = oscar.updateGuildNotificationSettings;
                tango = _closure2_slot0;
                zulu = {};
                mike = _closure2_slot1;
                options = !mike;
                zulu['mute_scheduled_events'] = options;
                options = _closure1_slot0;
                golf = 20;
                golf = verify[golf];
                golf = options.bind(entity)(golf);
                options = golf.NotificationLabel;
                golf = options.mutedEvents;
                mike = !mike;
                mike = golf.bind(options)(mike);
                mike = report.bind(oscar)(tango, zulu, mike);
                return entity;
            };
            oscar['onPress'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();