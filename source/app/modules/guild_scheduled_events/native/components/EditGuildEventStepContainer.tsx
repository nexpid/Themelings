// app/modules/guild_scheduled_events/native/components/EditGuildEventStepContainer.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    foxtra = 0;
    tangon = oscard[foxtra];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    backup = 1;
    golfie = oscard[backup];
    tangon = argCor;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot4 = golfie;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.View;
    var _closure1_slot5 = option;
    tangon = tangon.ScrollView;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot8 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'flex': 1, 'paddingHorizontal': 0, 'paddingVertical': 0, 'backgroundColor': null, 'flexDirection': 'column', 'height': '100%'};
    yankee = 6;
    kiloes = oscard[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = kiloes;
    tangon['container'] = offset;
    offset = {};
    offset['flex'] = backup;
    tangon['flex'] = offset;
    offset = {};
    backup = 16;
    offset['paddingHorizontal'] = backup;
    tangon['scroller'] = offset;
    offset = {};
    offset['paddingTop'] = foxtra;
    tangon['paddedContainer'] = offset;
    offset = {'position': 'absolute', 'bottom': 0, 'left': 0, 'right': 0, 'paddingHorizontal': 16, 'paddingVertical': 16};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = yankee;
    tangon['buttonContainer'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot10 = tangon;
    tangon = golfie.forwardRef;
    michal = function(argFoo, argBar) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            foxtra = michal.children;
            yankee = michal.action;
            michal = _closure1_slot10;
            tangon = undefined;
            sizing = michal.bind(tangon)();
            zuuluu = _closure1_slot0;
            oscard = _closure1_slot2;
            michal = 7;
            michal = oscard[michal];
            golfie = zuuluu.bind(tangon)(michal);
            report = golfie.useStateFromStores;
            michal = _closure1_slot7;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                entity = _closure1_slot7;
                entity = entity.keyboardOpen;
                return entity;
            };
            backup = report.bind(golfie)(zuuluu, michal);
            report = _closure1_slot4;
            zuuluu = report.useState;
            michal = 32;
            golfie = zuuluu.bind(report)(michal);
            zuuluu = _closure1_slot3;
            michal = 2;
            zuuluu = zuuluu.bind(tangon)(golfie, michal);
            echoed = 0;
            result = zuuluu[echoed];
            michal = 1;
            michal = zuuluu[michal];
            var _closure2_slot0 = michal;
            zuuluu = _closure1_slot1;
            michal = 8;
            michal = oscard[michal];
            michal = zuuluu.bind(tangon)(michal);
            michal = michal.bind(tangon)();
            output = michal.bottom;
            zuuluu = report.useCallback;
            michal = function(argFoo) {
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                michal = entity.height;
                zuuluu = _closure2_slot0;
                entity = 32;
                michal = michal + entity;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity = new Array(0);
            romeon = zuuluu.bind(report)(michal, entity);
            zuuluu = _closure1_slot8;
            michal = _closure1_slot5;
            entity = {};
            report = sizing.container;
            entity['style'] = report;
            oscard = _closure1_slot9;
            report = {};
            verify = sizing.flex;
            golfie = new Array(3);
            golfie[0] = verify;
            verify = !backup;
            if(!verify) { _fun00002_ip = 218; continue _fun00001 }
 212:
            verify = sizing.paddedContainer;
 218:
            golfie[1] = verify;
            verify = !backup;
            if(!verify) { _fun00002_ip = 245; continue _fun00001 }
 228:
            offset = {};
            kiloes = 16;
            kiloes = output + kiloes;
            offset['paddingBottom'] = kiloes;
            verify = offset;
 245:
            golfie[2] = verify;
            report['style'] = golfie;
            offset = _closure1_slot8;
            verify = _closure1_slot6;
            golfie = {};
            kiloes = argBar;
            golfie['ref'] = kiloes;
            kiloes = {};
            kiloes['top'] = echoed;
            kiloes['bottom'] = result;
            golfie['contentInset'] = kiloes;
            kiloes = false;
            golfie['automaticallyAdjustContentInsets'] = kiloes;
            kiloes = 'handled';
            golfie['keyboardShouldPersistTaps'] = kiloes;
            kiloes = sizing.flex;
            golfie['style'] = kiloes;
            kiloes = sizing.scroller;
            golfie['contentContainerStyle'] = kiloes;
            golfie['children'] = foxtra;
            verify = offset.bind(tangon)(verify, golfie);
            golfie = new Array(2);
            golfie[0] = verify;
            verify = _closure1_slot5;
            option = {};
            kiloes = sizing.buttonContainer;
            foxtra = new Array(3);
            foxtra[0] = kiloes;
            kiloes = !backup;
            if(!kiloes) { _fun00002_ip = 371; continue _fun00001 }
 365:
            kiloes = sizing.paddedContainer;
 371:
            foxtra[1] = kiloes;
            backup = !backup;
            if(!backup) { _fun00002_ip = 398; continue _fun00001 }
 381:
            kiloes = {};
            sizing = 16;
            sizing = output + sizing;
            kiloes['paddingBottom'] = sizing;
            backup = kiloes;
 398:
            foxtra[2] = backup;
            option['style'] = foxtra;
            option['onLayout'] = romeon;
            option['children'] = yankee;
            option = offset.bind(tangon)(verify, option);
            golfie[1] = option;
            report['children'] = golfie;
            report = oscard.bind(tangon)(michal, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_scheduled_events/native/components/EditGuildEventStepContainer.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();