// app/modules/guild_scheduled_events/native/components/EditGuildEventStepContainer.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = romeon;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot2 = tangon;
    foxtra = 1;
    golfie = oscard[foxtra];
    tangon = argCor;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.View;
    var _closure1_slot4 = option;
    tangon = tangon.ScrollView;
    var _closure1_slot5 = tangon;
    tangon = 3;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot6 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'flex': 1, 'paddingHorizontal': 0, 'paddingVertical': 0, 'backgroundColor': null, 'flexDirection': 'column', 'height': '100%'};
    yankee = 5;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = backup;
    tangon['container'] = offset;
    offset = {};
    offset['flex'] = foxtra;
    tangon['flex'] = offset;
    offset = {};
    foxtra = 16;
    offset['paddingHorizontal'] = foxtra;
    tangon['scroller'] = offset;
    offset = {'position': 'absolute', 'bottom': 0, 'left': 0, 'right': 0, 'paddingHorizontal': 16, 'paddingVertical': 16};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = yankee;
    tangon['buttonContainer'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot8 = tangon;
    tangon = golfie.forwardRef;
    michal = function(argFoo, argBar) {
        michal = argFoo;
        yankee = michal.children;
        option = michal.action;
        michal = _closure1_slot8;
        tangon = undefined;
        offset = michal.bind(tangon)();
        oscard = _closure1_slot3;
        zuuluu = oscard.useState;
        michal = 32;
        golfie = zuuluu.bind(oscard)(michal);
        zuuluu = _closure1_slot2;
        michal = 2;
        zuuluu = zuuluu.bind(tangon)(golfie, michal);
        michal = 0;
        sizing = zuuluu[michal];
        michal = 1;
        michal = zuuluu[michal];
        var _closure2_slot0 = michal;
        zuuluu = _closure1_slot0;
        golfie = _closure1_slot1;
        michal = 6;
        michal = golfie[michal];
        michal = zuuluu.bind(tangon)(michal);
        michal = michal.bind(tangon)();
        romeon = michal.insets;
        zuuluu = oscard.useCallback;
        michal = function(argFoo) {
            entity = argFoo;
            entity = entity.nativeEvent;
            entity = entity.layout;
            zuuluu = entity.height;
            michal = _closure2_slot0;
            entity = undefined;
            michal = michal.bind(entity)(zuuluu);
            return entity;
        };
        entity = new Array(0);
        verify = zuuluu.bind(oscard)(michal, entity);
        zuuluu = _closure1_slot7;
        michal = _closure1_slot4;
        entity = {};
        oscard = offset.container;
        entity['style'] = oscard;
        golfie = _closure1_slot6;
        oscard = _closure1_slot5;
        report = {'ref': null, 'automaticallyAdjustContentInsets': false, 'keyboardShouldPersistTaps': 'handled'};
        foxtra = argBar;
        report['ref'] = foxtra;
        backup = offset.flex;
        foxtra = new Array(2);
        foxtra[0] = backup;
        backup = {};
        kiloes = romeon.bottom;
        kiloes = sizing + kiloes;
        backup['marginBottom'] = kiloes;
        foxtra[1] = backup;
        report['style'] = foxtra;
        foxtra = offset.scroller;
        report['contentContainerStyle'] = foxtra;
        report['children'] = yankee;
        oscard = golfie.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = {};
        yankee = offset.buttonContainer;
        offset = new Array(2);
        offset[0] = yankee;
        yankee = {};
        romeon = romeon.bottom;
        yankee['paddingBottom'] = romeon;
        offset[1] = yankee;
        oscard['style'] = offset;
        oscard['onLayout'] = verify;
        oscard['children'] = option;
        oscard = golfie.bind(tangon)(michal, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_scheduled_events/native/components/EditGuildEventStepContainer.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();