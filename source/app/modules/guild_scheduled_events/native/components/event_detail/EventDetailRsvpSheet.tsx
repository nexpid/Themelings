// app/modules/guild_scheduled_events/native/components/event_detail/EventDetailRsvpSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = golfie;
    entity = function(argFoo) { // Original name: EmptyDisplay
        entity = argFoo;
        oscard = entity.children;
        option = entity.style;
        entity = _closure1_slot10;
        tangon = undefined;
        golfie = entity.bind(tangon)();
        zuuluu = _closure1_slot9;
        michal = _closure1_slot5;
        entity = {};
        verify = golfie.emptyDisplayContainer;
        golfie = new Array(2);
        golfie[0] = verify;
        golfie[1] = option;
        entity['style'] = golfie;
        option = _closure1_slot8;
        offset = _closure1_slot1;
        yankee = _closure1_slot2;
        report = 9;
        report = yankee[report];
        golfie = offset.bind(tangon)(report);
        report = {};
        verify = 10;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        report['icon'] = verify;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = function(argFoo) { // Original name: FetchErrorDisplay
        entity = argFoo;
        oscard = entity.style;
        entity = _closure1_slot10;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot8;
        michal = _closure1_slot12;
        entity = {};
        entity['style'] = oscard;
        golfie = _closure1_slot8;
        yankee = _closure1_slot0;
        romeon = _closure1_slot2;
        report = 11;
        report = romeon[report];
        report = yankee.bind(tangon)(report);
        oscard = report.Text;
        report = {'style': null, 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        option = option.emptyDisplayTitle;
        report['style'] = option;
        option = 12;
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        offset = verify.intl;
        verify = offset.string;
        option = romeon[option];
        option = yankee.bind(tangon)(option);
        option = option.t;
        option = option.obChXl;
        option = verify.bind(offset)(option);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot13 = entity;
    entity = function(argFoo) { // Original name: NoUsersDisplay
        entity = argFoo;
        oscard = entity.style;
        entity = _closure1_slot10;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot8;
        michal = _closure1_slot12;
        entity = {};
        entity['style'] = oscard;
        golfie = _closure1_slot8;
        yankee = _closure1_slot0;
        romeon = _closure1_slot2;
        report = 11;
        report = romeon[report];
        report = yankee.bind(tangon)(report);
        oscard = report.Text;
        report = {'style': null, 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        option = option.emptyDisplayTitle;
        report['style'] = option;
        option = 12;
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        offset = verify.intl;
        verify = offset.string;
        option = romeon[option];
        option = yankee.bind(tangon)(option);
        option = option.t;
        option = option.hW0mBQ;
        option = verify.bind(offset)(option);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot14 = entity;
    entity = function(argFoo) { // Original name: RemainingUsersRow
        entity = argFoo;
        verify = entity.remainingUsersGroup;
        entity = _closure1_slot10;
        report = undefined;
        backup = entity.bind(report)();
        tangon = _closure1_slot8;
        oscard = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 13;
        entity = offset[entity];
        entity = oscard.bind(report)(entity);
        zuuluu = entity.FormRow;
        michal = {};
        entity = backup.userListRow;
        michal['DEPRECATED_style'] = entity;
        option = _closure1_slot8;
        golfie = _closure1_slot5;
        entity = {};
        romeon = backup.remainingUsersIconContainer;
        entity['style'] = romeon;
        foxtra = _closure1_slot8;
        sizing = _closure1_slot1;
        yankee = 14;
        yankee = offset[yankee];
        romeon = sizing.bind(report)(yankee);
        yankee = {};
        kiloes = 10;
        kiloes = offset[kiloes];
        kiloes = sizing.bind(report)(kiloes);
        yankee['source'] = kiloes;
        backup = backup.remainingUsersIcon;
        yankee['style'] = backup;
        yankee = foxtra.bind(report)(romeon, yankee);
        entity['children'] = yankee;
        entity = option.bind(report)(golfie, entity);
        michal['leading'] = entity;
        entity = 12;
        golfie = offset[entity];
        golfie = oscard.bind(report)(golfie);
        option = golfie.intl;
        golfie = option.formatToPlainString;
        entity = offset[entity];
        entity = oscard.bind(report)(entity);
        entity = entity.t;
        oscard = entity.BdQTfX;
        entity = {};
        verify = verify.count;
        entity['userRemainCount'] = verify;
        entity = golfie.bind(option)(oscard, entity);
        michal['label'] = entity;
        entity = 'userRemaining';
        entity = tangon.bind(report)(zuuluu, michal, entity);
        return entity;
    };
    var _closure1_slot15 = entity;
    entity = function(argFoo) { // Original name: keyExtractor
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 21;
            zuuluu = zuuluu[entity];
            entity = undefined;
            zuuluu = tangon.bind(entity)(zuuluu);
            entity = zuuluu.isRemainingUsersGroup;
            entity = entity.bind(zuuluu)(michal);
            if(entity) { _fun00002_ip = 50; continue _fun00001 }
 42:
            entity = michal.user_id;
            _fun00002_ip = 79; continue _fun00001;
 50:
            tangon = michal.count;
            michal = global;
            michal = michal.HermesInternal;
            zuuluu = michal.concat;
            michal = 'RemainingUsersGroup-';
            entity = zuuluu.bind(michal)(tangon);
 79:
            return entity;
        }
    };
    var _closure1_slot16 = entity;
    tangon = function(argFoo) { // Original name: EventDetailRsvpSheet
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            report = argFoo;
            romeon = report.userListItems;
            tangon = report.guildId;
            var _closure2_slot0 = tangon;
            entity = report.loading;
            michal = report.error;
            oscard = report.contentHeight;
            var _closure2_slot1 = oscard;
            kiloes = report.safeBottomPadding;
            oscard = _closure1_slot10;
            report = undefined;
            option = oscard.bind(report)();
            verify = {};
            verify['paddingBottom'] = kiloes;
            yankee = _closure1_slot3;
            golfie = yankee.useCallback;
            oscard = new Array(1);
            oscard[0] = tangon;
            tangon = function(argFoo) {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = argFoo;
                    oscard = entity.item;
                    zuuluu = _closure1_slot0;
                    tangon = _closure1_slot2;
                    entity = 21;
                    entity = tangon[entity];
                    report = undefined;
                    zuuluu = zuuluu.bind(report)(entity);
                    entity = zuuluu.isRemainingUsersGroup;
                    entity = entity.bind(zuuluu)(oscard);
                    tangon = _closure1_slot8;
                    if(entity) { _fun00006_ip = 81; continue _fun00005 }
 51:
                    zuuluu = _closure1_slot11;
                    entity = {};
                    entity['eventUser'] = oscard;
                    golfie = _closure2_slot0;
                    entity['guildId'] = golfie;
                    entity = tangon.bind(report)(zuuluu, entity);
                    _fun00006_ip = 98; continue _fun00005;
 81:
                    zuuluu = _closure1_slot15;
                    michal = {};
                    michal['remainingUsersGroup'] = oscard;
                    entity = tangon.bind(report)(zuuluu, michal);
 98:
                    return entity;
                }
            };
            oscard = golfie.bind(yankee)(tangon, oscard);
            tangon = function(argFoo) { // Original name: StaticMessageContainer
                entity = argFoo;
                option = entity.children;
                entity = _closure1_slot10;
                tangon = undefined;
                verify = entity.bind(tangon)();
                zuuluu = _closure1_slot8;
                michal = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 22;
                entity = oscard[entity];
                entity = michal.bind(tangon)(entity);
                michal = entity.BottomSheetScrollView;
                entity = {};
                oscard = verify.staticMessageContentContainer;
                entity['style'] = oscard;
                oscard = false;
                entity['scrollEnabled'] = oscard;
                golfie = _closure1_slot8;
                oscard = _closure1_slot5;
                report = {};
                offset = verify.staticMessageContentContainer;
                verify = new Array(2);
                verify[0] = offset;
                offset = {};
                yankee = _closure2_slot1;
                offset['minHeight'] = yankee;
                verify[1] = offset;
                report['style'] = verify;
                report['children'] = option;
                report = golfie.bind(tangon)(oscard, report);
                entity['children'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            if(!entity) { _fun00004_ip = 117; continue _fun00003 }
 103:
            zuuluu = romeon.length;
            entity = 0;
            if(!(entity !== zuuluu)) { _fun00004_ip = 352; continue _fun00003 }
 117:
            entity = null;
            if(!(entity == michal)) { _fun00004_ip = 300; continue _fun00003 }
 126:
            michal = romeon.length;
            entity = 0;
            if(!(entity !== michal)) { _fun00004_ip = 248; continue _fun00003 }
 137:
            zuuluu = _closure1_slot8;
            golfie = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 22;
            entity = yankee[entity];
            entity = golfie.bind(report)(entity);
            michal = entity.BottomSheetFlatList;
            entity = {};
            backup = option.userList;
            foxtra = new Array(2);
            foxtra[0] = backup;
            backup = {};
            backup['paddingBottom'] = kiloes;
            foxtra[1] = backup;
            entity['contentContainerStyle'] = foxtra;
            entity['data'] = romeon;
            entity['renderItem'] = oscard;
            oscard = 13;
            oscard = yankee[oscard];
            oscard = golfie.bind(report)(oscard);
            oscard = oscard.FormDivider;
            entity['ItemSeparatorComponent'] = oscard;
            oscard = _closure1_slot16;
            entity['keyExtractor'] = oscard;
            entity = zuuluu.bind(report)(michal, entity);
            _fun00004_ip = 298; continue _fun00003;
 248:
            zuuluu = _closure1_slot8;
            michal = {};
            golfie = _closure1_slot14;
            oscard = {};
            romeon = option.staticMessageContent;
            yankee = new Array(2);
            yankee[0] = romeon;
            yankee[1] = verify;
            oscard['style'] = yankee;
            oscard = zuuluu.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = zuuluu.bind(report)(tangon, michal);
 298:
            _fun00004_ip = 350; continue _fun00003;
 300:
            zuuluu = _closure1_slot8;
            michal = {};
            golfie = _closure1_slot13;
            oscard = {};
            romeon = option.staticMessageContent;
            yankee = new Array(2);
            yankee[0] = romeon;
            yankee[1] = verify;
            oscard['style'] = yankee;
            oscard = zuuluu.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = zuuluu.bind(report)(tangon, michal);
 350:
            _fun00004_ip = 451; continue _fun00003;
 352:
            zuuluu = _closure1_slot8;
            michal = {};
            golfie = _closure1_slot4;
            oscard = {'animating': true, 'color': null, 'size': 'large'};
            yankee = _closure1_slot1;
            romeon = _closure1_slot2;
            offset = 7;
            offset = romeon[offset];
            offset = yankee.bind(report)(offset);
            offset = offset.unsafe_rawColors;
            offset = offset.BRAND_500;
            oscard['color'] = offset;
            offset = option.staticMessageContent;
            option = new Array(2);
            option[0] = offset;
            option[1] = verify;
            oscard['style'] = option;
            oscard = zuuluu.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = zuuluu.bind(report)(tangon, michal);
 451:
            return entity;
        }
    };
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, michal);
    entity = 0;
    option = golfie[entity];
    michal = argCor;
    entity = undefined;
    verify = michal.bind(entity)(option);
    var _closure1_slot3 = verify;
    romeon = 1;
    michal = golfie[romeon];
    michal = oscard.bind(entity)(michal);
    option = michal.ActivityIndicator;
    var _closure1_slot4 = option;
    michal = michal.View;
    var _closure1_slot5 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = foxtra.bind(entity)(michal);
    var _closure1_slot6 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = foxtra.bind(entity)(michal);
    var _closure1_slot7 = michal;
    michal = 4;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    sizing = michal.Fonts;
    michal = 5;
    option = golfie[michal];
    option = oscard.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot8 = option;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.jsxs;
    var _closure1_slot9 = michal;
    michal = 6;
    michal = golfie[michal];
    offset = oscard.bind(entity)(michal);
    option = offset.createStyles;
    michal = {};
    yankee = {};
    yankee['flex'] = romeon;
    michal['flex'] = yankee;
    kiloes = 16;
    yankee = {'flex': 1, 'padding': 16};
    michal['staticMessageContentContainer'] = yankee;
    yankee = {};
    yankee['paddingTop'] = kiloes;
    michal['userList'] = yankee;
    yankee = {};
    backup = 8;
    yankee['paddingVertical'] = backup;
    michal['userListRow'] = yankee;
    yankee = {};
    romeon = 7;
    output = golfie[romeon];
    output = foxtra.bind(entity)(output);
    output = output.colors;
    output = output.TEXT_NORMAL;
    yankee['color'] = output;
    output = sizing.PRIMARY_SEMIBOLD;
    yankee['fontFamily'] = output;
    yankee['fontSize'] = kiloes;
    michal['userName'] = yankee;
    kiloes = 'center';
    yankee = {'alignItems': 'center', 'justifyContent': 'center', 'minHeight': 200};
    michal['emptyDisplayContainer'] = yankee;
    yankee = {};
    output = '100%';
    yankee['height'] = output;
    michal['staticMessageContent'] = yankee;
    yankee = {};
    output = 24;
    yankee['paddingTop'] = output;
    output = golfie[backup];
    echoed = foxtra.bind(entity)(output);
    result = sizing.DISPLAY_EXTRABOLD;
    sizing = golfie[romeon];
    sizing = foxtra.bind(entity)(sizing);
    sizing = sizing.colors;
    ctrled = sizing.HEADER_PRIMARY;
    sizing = {};
    sizing['marginBottom'] = backup;
    source = 20;
    sequen = undefined;
    vacuum = result;
    update = sizing;
    ctrled = sequen[echoed](vacuum, ctrled, source, update, echoed);
    vacuum = yankee;
    backup = copyDataProperties(vacuum, ctrled);
    backup = 'textAlign';
    yankee[backup] = kiloes;
    michal['emptyDisplayTitle'] = yankee;
    yankee = {'tintColor': null, 'height': 18, 'width': 18};
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_PRIMARY;
    yankee['tintColor'] = backup;
    michal['remainingUsersIcon'] = yankee;
    yankee = {'backgroundColor': null, 'borderRadius': 16, 'height': 32, 'width': 32, 'alignItems': 'center', 'justifyContent': 'center'};
    romeon = golfie[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_TERTIARY;
    yankee['backgroundColor'] = romeon;
    michal['remainingUsersIconContainer'] = yankee;
    michal = option.bind(offset)(michal);
    var _closure1_slot10 = michal;
    option = verify.memo;
    michal = function(argFoo) {
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            michal = argFoo;
            entity = michal.eventUser;
            var _closure2_slot0 = entity;
            echoed = michal.guildId;
            michal = _closure1_slot10;
            report = undefined;
            offset = michal.bind(report)();
            zuuluu = _closure1_slot1;
            golfie = _closure1_slot2;
            michal = 15;
            michal = golfie[michal];
            michal = zuuluu.bind(report)(michal);
            michal = michal.bind(report)();
            michal = michal.analyticsLocations;
            var _closure2_slot1 = michal;
            zuuluu = _closure1_slot0;
            michal = 16;
            tangon = golfie[michal];
            yankee = zuuluu.bind(report)(tangon);
            verify = yankee.useStateFromStores;
            tangon = _closure1_slot7;
            option = new Array(1);
            option[0] = tangon;
            tangon = function() {
                zuuluu = _closure1_slot7;
                michal = zuuluu.getUser;
                entity = _closure2_slot0;
                entity = entity.user_id;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            yankee = verify.bind(yankee)(option, tangon);
            michal = golfie[michal];
            foxtra = zuuluu.bind(report)(michal);
            verify = foxtra.useStateFromStoresObject;
            michal = _closure1_slot6;
            option = new Array(1);
            option[0] = michal;
            michal = entity.user_id;
            tangon = new Array(1);
            tangon[0] = michal;
            michal = function() {
                entity = {};
                tangon = _closure1_slot6;
                report = tangon.isMobileOnline;
                michal = _closure2_slot0;
                zuuluu = michal.user_id;
                zuuluu = report.bind(tangon)(zuuluu);
                entity['isMobileOnline'] = zuuluu;
                zuuluu = tangon.getStatus;
                michal = michal.user_id;
                michal = zuuluu.bind(tangon)(michal);
                entity['status'] = michal;
                return entity;
            };
            michal = verify.bind(foxtra)(option, michal, tangon);
            result = michal.isMobileOnline;
            sizing = michal.status;
            tangon = _closure1_slot8;
            michal = 13;
            michal = golfie[michal];
            michal = zuuluu.bind(report)(michal);
            zuuluu = michal.FormRow;
            michal = {};
            golfie = offset.userListRow;
            michal['DEPRECATED_style'] = golfie;
            foxtra = null;
            option = foxtra != yankee;
            golfie = null;
            if(!option) { _fun00008_ip = 306; continue _fun00007 }
 221:
            backup = _closure1_slot8;
            verify = _closure1_slot1;
            output = _closure1_slot2;
            kiloes = 17;
            option = output[kiloes];
            verify = verify.bind(report)(option);
            option = {};
            option['user'] = yankee;
            option['guildId'] = echoed;
            option['isMobileOnline'] = result;
            option['status'] = sizing;
            sizing = _closure1_slot0;
            kiloes = output[kiloes];
            kiloes = sizing.bind(report)(kiloes);
            kiloes = kiloes.AvatarSizes;
            kiloes = kiloes.REFRESH_MEDIUM_32;
            option['size'] = kiloes;
            kiloes = true;
            option['autoStatusCutout'] = kiloes;
            golfie = backup.bind(report)(verify, option);
 306:
            michal['leading'] = golfie;
            verify = _closure1_slot8;
            option = _closure1_slot1;
            backup = _closure1_slot2;
            golfie = 18;
            golfie = backup[golfie];
            option = option.bind(report)(golfie);
            golfie = {};
            golfie['user'] = yankee;
            backup = entity.member;
            kiloes = foxtra == backup;
            yankee = undefined;
            if(kiloes) { _fun00008_ip = 362; continue _fun00007 }
 356:
            yankee = backup.nick;
 362:
            if(!(foxtra == yankee)) { _fun00008_ip = 402; continue _fun00007 }
 366:
            foxtra = _closure1_slot1;
            backup = _closure1_slot2;
            romeon = 19;
            romeon = backup[romeon];
            backup = foxtra.bind(report)(romeon);
            foxtra = backup.getName;
            romeon = entity.user;
            yankee = foxtra.bind(backup)(romeon);
 402:
            golfie['nick'] = yankee;
            yankee = offset.userName;
            golfie['usernameStyle'] = yankee;
            offset = offset.userName;
            golfie['nicknameStyle'] = offset;
            golfie = verify.bind(report)(option, golfie);
            michal['label'] = golfie;
            oscard = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 20;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = {};
                report = _closure2_slot0;
                report = report.user_id;
                michal['userId'] = report;
                tangon = _closure2_slot1;
                michal['sourceAnalyticsLocations'] = tangon;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal['onPress'] = oscard;
            entity = entity.user_id;
            entity = tangon.bind(report)(zuuluu, michal, entity);
            return entity;
        }
    };
    michal = option.bind(verify)(michal);
    var _closure1_slot11 = michal;
    report = 'EventDetailRsvpSheet';
    tangon['displayName'] = report;
    report = 23;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/guild_scheduled_events/native/components/event_detail/EventDetailRsvpSheet.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    zuuluu['UserRow'] = michal;
    return entity;
})();