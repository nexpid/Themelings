// app/modules/connections/Constants.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    zuuluu = argFre;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    report = {};
    verify = 1;
    report['EQUAL'] = verify;
    entity = 'EQUAL';
    report[verify] = entity;
    option = 2;
    report['NOT_EQUAL'] = option;
    entity = 'NOT_EQUAL';
    report[option] = entity;
    golfie = 3;
    report['LESS_THAN'] = golfie;
    entity = 'LESS_THAN';
    report[golfie] = entity;
    oscard = 4;
    report['GREATER_THAN'] = oscard;
    entity = 'GREATER_THAN';
    report[oscard] = entity;
    tangon = {};
    entity = 'created_at';
    tangon['CREATED_AT'] = entity;
    entity = 'total_karma';
    tangon['REDDIT_TOTAL_KARMA'] = entity;
    entity = 'gold';
    tangon['REDDIT_GOLD'] = entity;
    entity = 'mod';
    tangon['REDDIT_MOD'] = entity;
    entity = 'game_count';
    tangon['STEAM_GAME_COUNT'] = entity;
    entity = 'item_count_tf2';
    tangon['STEAM_ITEM_COUNT_TF2'] = entity;
    entity = 'item_count_dota2';
    tangon['STEAM_ITEM_COUNT_DOTA2'] = entity;
    entity = 'verified';
    tangon['TWITTER_VERIFIED'] = entity;
    michal = 'followers_count';
    tangon['TWITTER_FOLLOWERS_COUNT'] = michal;
    michal = 'statuses_count';
    tangon['TWITTER_STATUSES_COUNT'] = michal;
    tangon['PAYPAL_VERIFIED'] = entity;
    michal = 'positive_feedback_percentage';
    tangon['EBAY_POSITIVE_FEEDBACK_PERCENTAGE'] = michal;
    michal = 'top_rated_seller';
    tangon['EBAY_TOP_RATED_SELLER'] = michal;
    michal = 'unique_negative_feedback_count';
    tangon['EBAY_UNIQUE_NEGATIVE_FEEDBACK_COUNT'] = michal;
    michal = 'unique_positive_feedback_count';
    tangon['EBAY_UNIQUE_POSITIVE_FEEDBACK_COUNT'] = michal;
    tangon['TIKTOK_VERIFIED'] = entity;
    entity = 'follower_count';
    tangon['TIKTOK_FOLLOWER_COUNT'] = entity;
    entity = 'following_count';
    tangon['TIKTOK_FOLLOWING_COUNT'] = entity;
    entity = 'likes_count';
    tangon['TIKTOK_LIKES_COUNT'] = entity;
    michal = {};
    michal['INTEGER_LESS_THAN_EQUAL'] = verify;
    entity = 'INTEGER_LESS_THAN_EQUAL';
    michal[verify] = entity;
    michal['INTEGER_GREATER_THAN_EQUAL'] = option;
    entity = 'INTEGER_GREATER_THAN_EQUAL';
    michal[option] = entity;
    michal['INTEGER_EQUAL'] = golfie;
    entity = 'INTEGER_EQUAL';
    michal[golfie] = entity;
    michal['INTEGER_NOT_EQUAL'] = oscard;
    entity = 'INTEGER_NOT_EQUAL';
    michal[oscard] = entity;
    oscard = 5;
    michal['DATETIME_LESS_THAN_EQUAL'] = oscard;
    entity = 'DATETIME_LESS_THAN_EQUAL';
    michal[oscard] = entity;
    oscard = 6;
    michal['DATETIME_GREATER_THAN_EQUAL'] = oscard;
    entity = 'DATETIME_GREATER_THAN_EQUAL';
    michal[oscard] = entity;
    oscard = 7;
    michal['BOOLEAN_EQUAL'] = oscard;
    entity = 'BOOLEAN_EQUAL';
    michal[oscard] = entity;
    oscard = 8;
    michal['BOOLEAN_NOT_EQUAL'] = oscard;
    entity = 'BOOLEAN_NOT_EQUAL';
    michal[oscard] = entity;
    oscard = argPlu;
    entity = 0;
    golfie = oscard[entity];
    oscard = argBar;
    entity = undefined;
    option = oscard.bind(entity)(golfie);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/connections/Constants.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['OperatorTypes'] = report;
    zuuluu['MetadataFields'] = tangon;
    tangon = 'application';
    zuuluu['GUILD_ROLE_CONNECTION_APPLICATION_CONNECTION_TYPE'] = tangon;
    zuuluu['MetadataItemTypes'] = michal;
    return entity;
})();