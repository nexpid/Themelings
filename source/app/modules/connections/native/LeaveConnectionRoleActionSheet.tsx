// app/modules/connections/native/LeaveConnectionRoleActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    tangon = {};
    offset = 12;
    tangon['padding'] = offset;
    golfie['container'] = tangon;
    offset = {};
    tangon = 8;
    offset['marginTop'] = tangon;
    golfie['marginTop'] = offset;
    offset = {'marginTop': 8, 'marginBottom': 16};
    golfie['button'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/connections/native/LeaveConnectionRoleActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: LeaveConnectionRoleActionSheet
        entity = argFoo;
        romeon = entity.onLeaveRolePressed;
        entity = _closure1_slot6;
        tangon = undefined;
        output = entity.bind(tangon)();
        zuuluu = _closure1_slot4;
        backup = _closure1_slot0;
        kiloes = _closure1_slot2;
        entity = 4;
        entity = kiloes[entity];
        entity = backup.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        golfie = _closure1_slot5;
        oscard = _closure1_slot3;
        report = {};
        option = output.container;
        report['style'] = option;
        offset = 5;
        option = kiloes[offset];
        option = backup.bind(tangon)(option);
        foxtra = option.Text;
        option = {'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        yankee = 6;
        sizing = kiloes[yankee];
        sizing = backup.bind(tangon)(sizing);
        echoed = sizing.intl;
        result = echoed.string;
        sizing = kiloes[yankee];
        sizing = backup.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.vytvJC;
        sizing = result.bind(echoed)(sizing);
        option['children'] = sizing;
        foxtra = zuuluu.bind(tangon)(foxtra, option);
        option = new Array(3);
        option[0] = foxtra;
        offset = kiloes[offset];
        offset = backup.bind(tangon)(offset);
        foxtra = offset.Text;
        offset = {'style': null, 'variant': 'text-md/normal', 'color': 'header-secondary'};
        sizing = output.marginTop;
        offset['style'] = sizing;
        sizing = kiloes[yankee];
        sizing = backup.bind(tangon)(sizing);
        echoed = sizing.intl;
        result = echoed.string;
        sizing = kiloes[yankee];
        sizing = backup.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.caJwb2;
        sizing = result.bind(echoed)(sizing);
        offset['children'] = sizing;
        offset = zuuluu.bind(tangon)(foxtra, offset);
        option[1] = offset;
        sizing = _closure1_slot1;
        foxtra = 7;
        verify = kiloes[foxtra];
        offset = sizing.bind(tangon)(verify);
        verify = {};
        output = output.button;
        verify['style'] = output;
        foxtra = kiloes[foxtra];
        foxtra = sizing.bind(tangon)(foxtra);
        foxtra = foxtra.Colors;
        foxtra = foxtra.RED;
        verify['color'] = foxtra;
        verify['onPress'] = romeon;
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        yankee = kiloes[yankee];
        yankee = backup.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.+Oi4XF;
        yankee = romeon.bind(foxtra)(yankee);
        verify['text'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[2] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();