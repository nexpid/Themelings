// app/modules/connections/native/LeaveConnectionRoleActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    tango = {};
    offset = 12;
    tango['padding'] = offset;
    golf['container'] = tango;
    offset = {};
    tango = 8;
    offset['marginTop'] = tango;
    golf['marginTop'] = offset;
    offset = {'marginTop': 8, 'marginBottom': 16};
    golf['button'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/connections/native/LeaveConnectionRoleActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: LeaveConnectionRoleActionSheet
        entity = argFoo;
        romeo = entity.onLeaveRolePressed;
        entity = _closure1_slot6;
        tango = undefined;
        output = entity.bind(tango)();
        zulu = _closure1_slot4;
        backup = _closure1_slot0;
        kilo = _closure1_slot2;
        entity = 4;
        entity = kilo[entity];
        entity = backup.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        golf = _closure1_slot5;
        oscar = _closure1_slot3;
        report = {};
        options = output.container;
        report['style'] = options;
        offset = 5;
        options = kilo[offset];
        options = backup.bind(tango)(options);
        foxtrot = options.Text;
        options = {'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        yankee = 6;
        sizing = kilo[yankee];
        sizing = backup.bind(tango)(sizing);
        echo = sizing.intl;
        result = echo.string;
        sizing = kilo[yankee];
        sizing = backup.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.vytvJC;
        sizing = result.bind(echo)(sizing);
        options['children'] = sizing;
        foxtrot = zulu.bind(tango)(foxtrot, options);
        options = new Array(3);
        options[0] = foxtrot;
        offset = kilo[offset];
        offset = backup.bind(tango)(offset);
        foxtrot = offset.Text;
        offset = {'style': null, 'variant': 'text-md/normal', 'color': 'header-secondary'};
        sizing = output.marginTop;
        offset['style'] = sizing;
        sizing = kilo[yankee];
        sizing = backup.bind(tango)(sizing);
        echo = sizing.intl;
        result = echo.string;
        sizing = kilo[yankee];
        sizing = backup.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.caJwb2;
        sizing = result.bind(echo)(sizing);
        offset['children'] = sizing;
        offset = zulu.bind(tango)(foxtrot, offset);
        options[1] = offset;
        sizing = _closure1_slot1;
        foxtrot = 7;
        verify = kilo[foxtrot];
        offset = sizing.bind(tango)(verify);
        verify = {};
        output = output.button;
        verify['style'] = output;
        foxtrot = kilo[foxtrot];
        foxtrot = sizing.bind(tango)(foxtrot);
        foxtrot = foxtrot.Colors;
        foxtrot = foxtrot.RED;
        verify['color'] = foxtrot;
        verify['onPress'] = romeo;
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        yankee = kilo[yankee];
        yankee = backup.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.+Oi4XF;
        yankee = romeo.bind(foxtrot)(yankee);
        verify['text'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[2] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();