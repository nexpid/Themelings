// app/modules/markup/MarkupUtils.tsx
export default (function(native1, native2, native3, native4, native5, native6, native7) {
    var20 = native3;
    var6 = native4;
    var3 = native6;
    var5 = native7;
    var _closure1_slot0 = var20;
    var _closure1_slot1 = var6;
    var _closure1_slot2 = var5;
    var21 = function combineAndInjectMentionRule(arg1, arg2) {
        var4 = arg1;
        var1 = var4.mention;
        var2 = _closure1_slot0;
        var3 = _closure1_slot2;
        var1 = 0;
        var1 = var3[var1];
        var3 = undefined;
        var2 = var2.bind(var3)(var1);
        var1 = new Array(2);
        var1[0] = var4;
        var8 = arg2;
        var5 = 1;
        var9 = var1;
        var7 = var5;
        var4 = arraySpread(var9, var8, var7);
        var6 = {};
        var1[var4] = var6;
        var4 = var4 + var5;
        var1 = var2.bind(var3)(var1);
        return var1;
    };
    var1 = global;
    var7 = var1.Object;
    var4 = var7.defineProperty;
    var2 = {};
    var10 = true;
    var2['value'] = var10;
    var1 = '__esModule';
    var1 = var4.bind(var7)(var3, var1, var2);
    var18 = {'enableBuildOverrides': false, 'enableEmojiClick': true};
    var15 = false;
    var2 = 1;
    var4 = var5[var2];
    var1 = undefined;
    var4 = var20.bind(var1)(var4);
    var7 = var4.RULES;
    var19 = 2;
    var4 = var5[var19];
    var9 = var20.bind(var1)(var4);
    var4 = {};
    var4['enableBuildOverrides'] = var10;
    var9 = var9.bind(var1)(var4);
    var4 = new Array(1);
    var4[0] = var9;
    var13 = var21.bind(var1)(var7, var4);
    var4 = 3;
    var7 = var5[var4];
    var10 = var20.bind(var1)(var7);
    var9 = var10.omit;
    var7 = var5[var2];
    var7 = var20.bind(var1)(var7);
    var11 = var7.RULES;
    var7 = var5[var19];
    var7 = var20.bind(var1)(var7);
    var12 = var7.bind(var1)(var18);
    var7 = new Array(1);
    var7[0] = var12;
    var7 = var21.bind(var1)(var11, var7);
    var34 = 'paragraph';
    var33 = 'newline';
    var14 = var9.bind(var10)(var7, var34, var33);
    var7 = var5[var2];
    var7 = var20.bind(var1)(var7);
    var9 = var7.CHANNEL_TOPIC_RULES;
    var7 = var5[var19];
    var10 = var20.bind(var1)(var7);
    var7 = {};
    var47 = var7;
    var46 = var18;
    var11 = copyDataProperties(var47, var46);
    var12 = 'bottom';
    var11 = 'emojiTooltipPosition';
    var7[var11] = var12;
    var10 = var10.bind(var1)(var7);
    var7 = new Array(2);
    var7[0] = var10;
    var10 = {};
    var11 = {};
    var12 = var5[var2];
    var12 = var20.bind(var1)(var12);
    var12 = var12.RULES;
    var12 = var12.text;
    var12 = var12.react;
    var11['react'] = var12;
    var10['codeBlock'] = var11;
    var7[1] = var10;
    var12 = var21.bind(var1)(var9, var7);
    var _closure1_slot3 = var12;
    var7 = var5[var2];
    var7 = var20.bind(var1)(var7);
    var9 = var7.VOICE_CHANNEL_STATUS_RULES;
    var7 = var5[var19];
    var10 = var20.bind(var1)(var7);
    var7 = {};
    var47 = var7;
    var46 = var18;
    var11 = copyDataProperties(var47, var46);
    var11 = 'enableEmojiClick';
    var7[var11] = var15;
    var10 = var10.bind(var1)(var7);
    var7 = new Array(1);
    var7[0] = var10;
    var17 = var21.bind(var1)(var9, var7);
    var7 = var5[var2];
    var7 = var20.bind(var1)(var7);
    var9 = var7.EMBED_TITLE_RULES;
    var7 = var5[var19];
    var7 = var20.bind(var1)(var7);
    var10 = var7.bind(var1)(var18);
    var7 = new Array(1);
    var7[0] = var10;
    var11 = var21.bind(var1)(var9, var7);
    var7 = var5[var2];
    var7 = var20.bind(var1)(var7);
    var9 = var7.INLINE_REPLY_RULES;
    var7 = var5[var19];
    var7 = var20.bind(var1)(var7);
    var10 = var7.bind(var1)(var18);
    var7 = new Array(1);
    var7[0] = var10;
    var10 = var21.bind(var1)(var9, var7);
    var7 = var5[var2];
    var7 = var20.bind(var1)(var7);
    var9 = var7.GUILD_VERIFICATION_FORM_RULES;
    var7 = var5[var19];
    var7 = var20.bind(var1)(var7);
    var15 = var7.bind(var1)(var18);
    var7 = new Array(1);
    var7[0] = var15;
    var16 = var21.bind(var1)(var9, var7);
    var7 = var5[var2];
    var7 = var20.bind(var1)(var7);
    var9 = var7.GUILD_EVENT_RULES;
    var7 = var5[var19];
    var7 = var20.bind(var1)(var7);
    var15 = var7.bind(var1)(var18);
    var7 = new Array(1);
    var7[0] = var15;
    var15 = var21.bind(var1)(var9, var7);
    var7 = var5[var2];
    var7 = var20.bind(var1)(var7);
    var9 = var7.AUTO_MODERATION_SYSTEM_MESSAGE_RULES;
    var7 = var5[var19];
    var7 = var20.bind(var1)(var7);
    var22 = var7.bind(var1)(var18);
    var7 = new Array(1);
    var7[0] = var22;
    var7 = var21.bind(var1)(var9, var7);
    var4 = var5[var4];
    var32 = var20.bind(var1)(var4);
    var31 = var32.omit;
    var4 = var5[var2];
    var4 = var20.bind(var1)(var4);
    var9 = var4.RULES;
    var4 = var5[var19];
    var4 = var20.bind(var1)(var4);
    var22 = var4.bind(var1)(var18);
    var4 = new Array(1);
    var4[0] = var22;
    var47 = var21.bind(var1)(var9, var4);
    var44 = 'strong';
    var43 = 'codeBlock';
    var42 = 'inlineCode';
    var41 = 'u';
    var40 = 'link';
    var39 = 'url';
    var38 = 'autolink';
    var37 = 'list';
    var36 = 'heading';
    var35 = 'subtext';
    var48 = var32;
    var46 = var34;
    var45 = var33;
    var9 = var48[var31](var47, var46, var45, var44, var43, var42, var41, var40, var39, var38, var37, var36, var35, var34);
    var4 = {};
    var2 = var5[var2];
    var2 = var20.bind(var1)(var2);
    var2 = var2.RULES;
    var2 = var2.text;
    var4['text'] = var2;
    var2 = {};
    var2['combineAndInjectMentionRule'] = var21;
    var19 = var5[var19];
    var19 = var20.bind(var1)(var19);
    var2['createReactRules'] = var19;
    var2['defaultReactRuleOptions'] = var18;
    var2['defaultRules'] = var13;
    var2['guildEventRules'] = var15;
    var2['notifCenterV2MessagePreviewRules'] = var9;
    var2['lockscreenWidgetMessageRules'] = var4;
    var4 = 4;
    var9 = var5[var4];
    var9 = var6.bind(var1)(var9);
    var9 = var9.astParserFor;
    var2['astParserFor'] = var9;
    var9 = var5[var4];
    var9 = var6.bind(var1)(var9);
    var9 = var9.reactParserFor;
    var2['reactParserFor'] = var9;
    var9 = var5[var4];
    var18 = var6.bind(var1)(var9);
    var9 = var18.reactParserFor;
    var9 = var9.bind(var18)(var13);
    var2['parse'] = var9;
    var8 = function parseTopic(arg1, arg2, arg3, arg4) {
        var3 = _closure1_slot1;
        var4 = _closure1_slot2;
        var2 = 4;
        var2 = var4[var2];
        var6 = undefined;
        var3 = var3.bind(var6)(var2);
        var2 = var3.reactParserFor;
        var1 = _closure1_slot3;
        var5 = var2.bind(var3)(var1);
        var4 = {};
        var1 = true;
        var4['allowLinks'] = var1;
        var9 = arg3;
        var10 = var4;
        var1 = copyDataProperties(var10, var9);
        var10 = arg1;
        var9 = arg2;
        var7 = arg4;
        var11 = undefined;
        var8 = var4;
        var1 = var11[var5](var10, var9, var8, var7, var6);
        return var1;
    };
    var2['parseTopic'] = var8;
    var8 = var5[var4];
    var9 = var6.bind(var1)(var8);
    var8 = var9.reactParserFor;
    var8 = var8.bind(var9)(var17);
    var2['parseVoiceChannelStatus'] = var8;
    var8 = var5[var4];
    var9 = var6.bind(var1)(var8);
    var8 = var9.reactParserFor;
    var8 = var8.bind(var9)(var11);
    var2['parseEmbedTitle'] = var8;
    var8 = var5[var4];
    var9 = var6.bind(var1)(var8);
    var8 = var9.reactParserFor;
    var8 = var8.bind(var9)(var10);
    var2['parseInlineReply'] = var8;
    var8 = var5[var4];
    var9 = var6.bind(var1)(var8);
    var8 = var9.reactParserFor;
    var8 = var8.bind(var9)(var16);
    var2['parseGuildVerificationFormRule'] = var8;
    var8 = var5[var4];
    var9 = var6.bind(var1)(var8);
    var8 = var9.reactParserFor;
    var8 = var8.bind(var9)(var15);
    var2['parseGuildEventDescription'] = var8;
    var8 = var5[var4];
    var9 = var6.bind(var1)(var8);
    var8 = var9.reactParserFor;
    var8 = var8.bind(var9)(var7);
    var2['parseAutoModerationSystemMessage'] = var8;
    var8 = var5[var4];
    var9 = var6.bind(var1)(var8);
    var8 = var9.reactParserFor;
    var8 = var8.bind(var9)(var14);
    var2['parseForumPostGuidelines'] = var8;
    var8 = var5[var4];
    var9 = var6.bind(var1)(var8);
    var8 = var9.astParserFor;
    var8 = var8.bind(var9)(var13);
    var2['parseToAST'] = var8;
    var8 = var5[var4];
    var9 = var6.bind(var1)(var8);
    var8 = var9.astParserFor;
    var8 = var8.bind(var9)(var12);
    var2['parseTopicToAST'] = var8;
    var8 = var5[var4];
    var9 = var6.bind(var1)(var8);
    var8 = var9.astParserFor;
    var8 = var8.bind(var9)(var11);
    var2['parseEmbedTitleToAST'] = var8;
    var8 = var5[var4];
    var9 = var6.bind(var1)(var8);
    var8 = var9.astParserFor;
    var8 = var8.bind(var9)(var10);
    var2['parseInlineReplyToAST'] = var8;
    var4 = var5[var4];
    var6 = var6.bind(var1)(var4);
    var4 = var6.astParserFor;
    var4 = var4.bind(var6)(var7);
    var2['parseAutoModerationSystemMessageToAST'] = var4;
    var4 = 5;
    var5 = var5[var4];
    var4 = native2;
    var6 = var4.bind(var1)(var5);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/markup/MarkupUtils.tsx';
    var4 = var5.bind(var6)(var4);
    var3['default'] = var2;
    return var1;
})();