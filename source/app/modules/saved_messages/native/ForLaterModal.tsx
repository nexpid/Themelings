// app/modules/saved_messages/native/ForLaterModal.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'backgroundColor': null, 'borderBottomWidth': 0, 'shadowColor': 'transparent', 'height': '100%'};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_BASE_SECONDARY;
    verify['backgroundColor'] = romeo;
    tango['modal'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['paddingHorizontal'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['paddingTop'] = offset;
    tango['headerContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/saved_messages/native/ForLaterModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: ForLaterModal
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot6;
            tango = undefined;
            options = entity.bind(tango)();
            zulu = _closure1_slot5;
            mike = _closure1_slot3;
            entity = {};
            report = options.modal;
            entity['style'] = report;
            golf = _closure1_slot4;
            report = {};
            options = options.headerContainer;
            report['style'] = options;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            options = 5;
            options = yankee[options];
            options = offset.bind(tango)(options);
            romeo = options.Header;
            options = {};
            verify = 6;
            foxtrot = yankee[verify];
            foxtrot = offset.bind(tango)(foxtrot);
            backup = foxtrot.intl;
            foxtrot = backup.string;
            verify = yankee[verify];
            verify = offset.bind(tango)(verify);
            verify = verify.t;
            verify = verify.2pAkDA;
            verify = foxtrot.bind(backup)(verify);
            options['title'] = verify;
            verify = function() { // Original name: headerTitle
                tango = _closure1_slot4;
                options = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 7;
                entity = verify[entity];
                zulu = undefined;
                entity = options.bind(zulu)(entity);
                mike = entity.GenericHeaderTitle;
                entity = {};
                report = 6;
                oscar = verify[report];
                oscar = options.bind(zulu)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = verify[report];
                report = options.bind(zulu)(report);
                report = report.t;
                report = report.2pAkDA;
                report = oscar.bind(golf)(report);
                entity['title'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            options['headerTitle'] = verify;
            verify = 'center';
            options['headerTitleAlign'] = verify;
            verify = 8;
            verify = yankee[verify];
            offset = offset.bind(tango)(verify);
            verify = offset.isIOS;
            offset = verify.bind(offset)();
            verify = undefined;
            if(!offset) { _fun00002_ip = 180; continue _fun00001 }
 178:
            verify = 0;
 180:
            options['headerStatusBarHeight'] = verify;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            verify = 9;
            verify = yankee[verify];
            kilo = offset.bind(tango)(verify);
            backup = kilo.getHeaderCloseButton;
            offset = _closure1_slot1;
            verify = 10;
            foxtrot = yankee[verify];
            foxtrot = offset.bind(tango)(foxtrot);
            foxtrot = foxtrot.pop;
            foxtrot = backup.bind(kilo)(foxtrot);
            options['headerLeft'] = foxtrot;
            options = golf.bind(tango)(romeo, options);
            report['children'] = options;
            golf = golf.bind(tango)(mike, report);
            report = new Array(2);
            report[0] = golf;
            options = _closure1_slot4;
            oscar = 11;
            oscar = yankee[oscar];
            golf = offset.bind(tango)(oscar);
            oscar = {};
            verify = yankee[verify];
            verify = offset.bind(tango)(verify);
            verify = verify.pop;
            oscar['onClose'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();