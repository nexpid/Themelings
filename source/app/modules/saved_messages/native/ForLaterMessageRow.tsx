// app/modules/saved_messages/native/ForLaterMessageRow.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var1 = metroImportDefault;
    var _closure1_slot1 = var1;
    var _closure1_slot2 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var4 = var4.bind(var1)(var7);
    var _closure1_slot3 = var4;
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.jsx;
    var _closure1_slot4 = var4;
    var4 = 9;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/saved_messages/native/ForLaterMessageRow.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function ForLaterMessageRow(arg1) {
        var1 = arg1;
        var7 = var1.message;
        var2 = var1.lineClamp;
        var _closure2_slot0 = var2;
        var5 = var1.maxHeight;
        var2 = _closure1_slot1;
        var9 = _closure1_slot2;
        var3 = 2;
        var3 = var9[var3];
        var4 = undefined;
        var3 = var2.bind(var4)(var3);
        var10 = var3.bind(var4)();
        var6 = _closure1_slot0;
        var3 = 3;
        var3 = var9[var3];
        var12 = var6.bind(var4)(var3);
        var11 = var12.createNativeStyleProperties;
        var3 = {};
        var13 = 4;
        var13 = var9[var13];
        var13 = var2.bind(var4)(var13);
        var13 = var13.colors;
        var13 = var13.TEXT_NORMAL;
        var3['seeMoreLabelColor'] = var13;
        var3 = var11.bind(var12)(var3);
        var3 = var3.bind(var4)(var10);
        var _closure2_slot1 = var3;
        var3 = 5;
        var10 = var9[var3];
        var10 = var6.bind(var4)(var10);
        var11 = var10.RenderEmbeds;
        var10 = var11.getSetting;
        var13 = var10.bind(var11)();
        var _closure2_slot2 = var13;
        var10 = var9[var3];
        var10 = var6.bind(var4)(var10);
        var11 = var10.InlineEmbedMedia;
        var10 = var11.getSetting;
        var12 = var10.bind(var11)();
        var _closure2_slot3 = var12;
        var3 = var9[var3];
        var3 = var6.bind(var4)(var3);
        var6 = var3.InlineAttachmentMedia;
        var3 = var6.getSetting;
        var3 = var3.bind(var6)();
        var _closure2_slot4 = var3;
        var11 = _closure1_slot3;
        var10 = var11.useMemo;
        var6 = new Array(3);
        var6[0] = var13;
        var6[1] = var12;
        var6[2] = var3;
        var3 = function() {
            var3 = _closure1_slot1;
            var2 = _closure1_slot2;
            var1 = 6;
            var2 = var2[var1];
            var1 = undefined;
            var1 = var3.bind(var1)(var2);
            var2 = var1.prototype;
            var2 = Object.create(var2, {constructor: {value: var1}});
            var7 = var2;
            var1 = new var7[var1](var6);
            var1 = var1 instanceof Object ? var1 : var2;
            var3 = var1.setOptions;
            var2 = {'renderEmbeds': null, 'inlineEmbedMedia': null, 'inlineAttachmentMedia': null, 'renderReplies': false, 'renderExecutedCommands': false, 'animateEmoji': false, 'renderGiftCode': false, 'renderActivityInstanceEmbed': false, 'renderActivityInviteEmbed': false, 'renderThreadEmbeds': false, 'renderForumPostActions': false, 'ignoreMentioned': true, 'shouldDisableInteractiveComponents': true};
            var5 = _closure2_slot2;
            var2['renderEmbeds'] = var5;
            var5 = _closure2_slot3;
            var2['inlineEmbedMedia'] = var5;
            var4 = _closure2_slot4;
            var2['inlineAttachmentMedia'] = var4;
            var2 = var3.bind(var1)(var2);
            return var1;
        };
        var6 = var10.bind(var11)(var3, var6);
        var3 = _closure1_slot4;
        var1 = 7;
        var1 = var9[var1];
        var2 = var2.bind(var4)(var1);
        var1 = {'pointerEvents': 'none', 'horizontalOffset': 0};
        var8 = function modifyRow(arg1) {
            _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
                var3 = _closure2_slot0;
                var2 = null;
                if(!(var2 != var3)) { _fun0001_ip = 125; continue _fun0001 }
 13:
                var2 = {};
                var3 = _closure2_slot0;
                var2['numberOfLines'] = var3;
                var5 = _closure1_slot0;
                var6 = _closure1_slot2;
                var3 = 8;
                var7 = var6[var3];
                var4 = undefined;
                var8 = var5.bind(var4)(var7);
                var7 = var8.isIOS;
                var7 = var7.bind(var8)();
                var2['expandable'] = var7;
                var3 = var6[var3];
                var4 = var5.bind(var4)(var3);
                var3 = var4.isIOS;
                var4 = var3.bind(var4)();
                var3 = '';
                if(!var4) { _fun0001_ip = 96; continue _fun0001 }
 90:
                var3 = '...';
 96:
                var2['seeMoreLabel'] = var3;
                var1 = _closure2_slot1;
                var1 = var1.seeMoreLabelColor;
                var2['seeMoreLabelColor'] = var1;
                var1 = arg1;
                var1['truncation'] = var2;
 125:
                var1 = undefined;
                return var1;
            }
        };
        var1['modifyRow'] = var8;
        var1['message'] = var7;
        var1['rowGenerator'] = var6;
        var1['maxHeight'] = var5;
        var1 = var3.bind(var4)(var2, var1);
        return var1;
    };
    var3['ForLaterMessageRow'] = var2;
    return var1;
})();