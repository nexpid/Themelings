// app/modules/saved_messages/native/ForLaterMessageRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/saved_messages/native/ForLaterMessageRow.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ForLaterMessageRow
        entity = argFoo;
        golfie = entity.message;
        michal = entity.lineClamp;
        var _closure2_slot0 = michal;
        report = entity.maxHeight;
        michal = _closure1_slot1;
        verify = _closure1_slot2;
        zuuluu = 2;
        zuuluu = verify[zuuluu];
        tangon = undefined;
        zuuluu = michal.bind(tangon)(zuuluu);
        offset = zuuluu.bind(tangon)();
        oscard = _closure1_slot0;
        zuuluu = 3;
        zuuluu = verify[zuuluu];
        romeon = oscard.bind(tangon)(zuuluu);
        yankee = romeon.createNativeStyleProperties;
        zuuluu = {};
        foxtra = 4;
        foxtra = verify[foxtra];
        foxtra = michal.bind(tangon)(foxtra);
        foxtra = foxtra.colors;
        foxtra = foxtra.TEXT_NORMAL;
        zuuluu['seeMoreLabelColor'] = foxtra;
        zuuluu = yankee.bind(romeon)(zuuluu);
        zuuluu = zuuluu.bind(tangon)(offset);
        var _closure2_slot1 = zuuluu;
        zuuluu = 5;
        offset = verify[zuuluu];
        offset = oscard.bind(tangon)(offset);
        yankee = offset.RenderEmbeds;
        offset = yankee.getSetting;
        foxtra = offset.bind(yankee)();
        var _closure2_slot2 = foxtra;
        offset = verify[zuuluu];
        offset = oscard.bind(tangon)(offset);
        yankee = offset.InlineEmbedMedia;
        offset = yankee.getSetting;
        romeon = offset.bind(yankee)();
        var _closure2_slot3 = romeon;
        zuuluu = verify[zuuluu];
        zuuluu = oscard.bind(tangon)(zuuluu);
        oscard = zuuluu.InlineAttachmentMedia;
        zuuluu = oscard.getSetting;
        zuuluu = zuuluu.bind(oscard)();
        var _closure2_slot4 = zuuluu;
        yankee = _closure1_slot3;
        offset = yankee.useMemo;
        oscard = new Array(3);
        oscard[0] = foxtra;
        oscard[1] = romeon;
        oscard[2] = zuuluu;
        zuuluu = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 6;
            michal = michal[entity];
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            michal = entity.prototype;
            michal = Object.create(michal, {constructor: {value: entity}});
            golfie = michal;
            entity = new golfie[entity](oscard);
            entity = entity instanceof Object ? entity : michal;
            zuuluu = entity.setOptions;
            michal = {'renderEmbeds': null, 'inlineEmbedMedia': null, 'inlineAttachmentMedia': null, 'renderReplies': false, 'renderExecutedCommands': false, 'animateEmoji': false, 'renderGiftCode': false, 'renderActivityInstanceEmbed': false, 'renderActivityInviteEmbed': false, 'renderThreadEmbeds': false, 'renderForumPostActions': false, 'ignoreMentioned': true, 'shouldDisableInteractiveComponents': true};
            report = _closure2_slot2;
            michal['renderEmbeds'] = report;
            report = _closure2_slot3;
            michal['inlineEmbedMedia'] = report;
            tangon = _closure2_slot4;
            michal['inlineAttachmentMedia'] = tangon;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        oscard = offset.bind(yankee)(zuuluu, oscard);
        zuuluu = _closure1_slot4;
        entity = 7;
        entity = verify[entity];
        michal = michal.bind(tangon)(entity);
        entity = {'pointerEvents': 'none', 'horizontalOffset': 0};
        option = function(argFoo) { // Original name: modifyRow
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zuuluu = _closure2_slot0;
                michal = null;
                if(!(michal != zuuluu)) { _fun00002_ip = 125; continue _fun00001 }
 13:
                michal = {};
                zuuluu = _closure2_slot0;
                michal['numberOfLines'] = zuuluu;
                report = _closure1_slot0;
                oscard = _closure1_slot2;
                zuuluu = 8;
                golfie = oscard[zuuluu];
                tangon = undefined;
                option = report.bind(tangon)(golfie);
                golfie = option.isIOS;
                golfie = golfie.bind(option)();
                michal['expandable'] = golfie;
                zuuluu = oscard[zuuluu];
                tangon = report.bind(tangon)(zuuluu);
                zuuluu = tangon.isIOS;
                tangon = zuuluu.bind(tangon)();
                zuuluu = '';
                if(!tangon) { _fun00002_ip = 96; continue _fun00001 }
 90:
                zuuluu = '...';
 96:
                michal['seeMoreLabel'] = zuuluu;
                entity = _closure2_slot1;
                entity = entity.seeMoreLabelColor;
                michal['seeMoreLabelColor'] = entity;
                entity = argFoo;
                entity['truncation'] = michal;
 125:
                entity = undefined;
                return entity;
            }
        };
        entity['modifyRow'] = option;
        entity['message'] = golfie;
        entity['rowGenerator'] = oscard;
        entity['maxHeight'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['ForLaterMessageRow'] = michal;
    return entity;
})();