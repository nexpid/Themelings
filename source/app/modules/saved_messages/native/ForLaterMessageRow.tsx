// app/modules/saved_messages/native/ForLaterMessageRow.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/saved_messages/native/ForLaterMessageRow.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ForLaterMessageRow
        entity = argFoo;
        golf = entity.message;
        mike = entity.lineClamp;
        var _closure2_slot0 = mike;
        report = entity.maxHeight;
        mike = _closure1_slot1;
        verify = _closure1_slot2;
        zulu = 2;
        zulu = verify[zulu];
        tango = undefined;
        zulu = mike.bind(tango)(zulu);
        offset = zulu.bind(tango)();
        oscar = _closure1_slot0;
        zulu = 3;
        zulu = verify[zulu];
        romeo = oscar.bind(tango)(zulu);
        yankee = romeo.createNativeStyleProperties;
        zulu = {};
        foxtrot = 4;
        foxtrot = verify[foxtrot];
        foxtrot = mike.bind(tango)(foxtrot);
        foxtrot = foxtrot.colors;
        foxtrot = foxtrot.TEXT_NORMAL;
        zulu['seeMoreLabelColor'] = foxtrot;
        zulu = yankee.bind(romeo)(zulu);
        zulu = zulu.bind(tango)(offset);
        var _closure2_slot1 = zulu;
        zulu = 5;
        offset = verify[zulu];
        offset = oscar.bind(tango)(offset);
        yankee = offset.RenderEmbeds;
        offset = yankee.getSetting;
        foxtrot = offset.bind(yankee)();
        var _closure2_slot2 = foxtrot;
        offset = verify[zulu];
        offset = oscar.bind(tango)(offset);
        yankee = offset.InlineEmbedMedia;
        offset = yankee.getSetting;
        romeo = offset.bind(yankee)();
        var _closure2_slot3 = romeo;
        zulu = verify[zulu];
        zulu = oscar.bind(tango)(zulu);
        oscar = zulu.InlineAttachmentMedia;
        zulu = oscar.getSetting;
        zulu = zulu.bind(oscar)();
        var _closure2_slot4 = zulu;
        yankee = _closure1_slot3;
        offset = yankee.useMemo;
        oscar = new Array(3);
        oscar[0] = foxtrot;
        oscar[1] = romeo;
        oscar[2] = zulu;
        zulu = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 6;
            mike = mike[entity];
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            mike = entity.prototype;
            mike = Object.create(mike, {constructor: {value: entity}});
            golf = mike;
            entity = new golf[entity](oscar);
            entity = entity instanceof Object ? entity : mike;
            zulu = entity.setOptions;
            mike = {'renderEmbeds': null, 'inlineEmbedMedia': null, 'inlineAttachmentMedia': null, 'renderReplies': false, 'renderExecutedCommands': false, 'animateEmoji': false, 'renderGiftCode': false, 'renderActivityInstanceEmbed': false, 'renderActivityInviteEmbed': false, 'renderThreadEmbeds': false, 'renderForumPostActions': false, 'ignoreMentioned': true, 'shouldDisableInteractiveComponents': true};
            report = _closure2_slot2;
            mike['renderEmbeds'] = report;
            report = _closure2_slot3;
            mike['inlineEmbedMedia'] = report;
            tango = _closure2_slot4;
            mike['inlineAttachmentMedia'] = tango;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        oscar = offset.bind(yankee)(zulu, oscar);
        zulu = _closure1_slot4;
        entity = 7;
        entity = verify[entity];
        mike = mike.bind(tango)(entity);
        entity = {'pointerEvents': 'none', 'horizontalOffset': 0};
        options = function(argFoo) { // Original name: modifyRow
            _fun89097: for(var _fun89097_ip = 0; ; ) switch(_fun89097_ip) {
 0:
                zulu = _closure2_slot0;
                mike = null;
                if(!(mike != zulu)) { _fun89097_ip = 125; continue _fun89097 }
 13:
                mike = {};
                zulu = _closure2_slot0;
                mike['numberOfLines'] = zulu;
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                zulu = 8;
                golf = oscar[zulu];
                tango = undefined;
                options = report.bind(tango)(golf);
                golf = options.isIOS;
                golf = golf.bind(options)();
                mike['expandable'] = golf;
                zulu = oscar[zulu];
                tango = report.bind(tango)(zulu);
                zulu = tango.isIOS;
                tango = zulu.bind(tango)();
                zulu = '';
                if(!tango) { _fun89097_ip = 96; continue _fun89097 }
 90:
                zulu = '...';
 96:
                mike['seeMoreLabel'] = zulu;
                entity = _closure2_slot1;
                entity = entity.seeMoreLabelColor;
                mike['seeMoreLabelColor'] = entity;
                entity = argFoo;
                entity['truncation'] = mike;
 125:
                entity = undefined;
                return entity;
            }
        };
        entity['modifyRow'] = options;
        entity['message'] = golf;
        entity['rowGenerator'] = oscar;
        entity['maxHeight'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['ForLaterMessageRow'] = mike;
    return entity;
})();