// app/modules/saved_messages/native/ForLaterScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: ForLaterPage
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            oscard = michal.handleScroll;
            zuuluu = _closure1_slot9;
            report = undefined;
            golfie = zuuluu.bind(report)();
            option = _closure1_slot1;
            romeon = _closure1_slot2;
            zuuluu = 9;
            zuuluu = romeon[zuuluu];
            zuuluu = option.bind(report)(zuuluu);
            verify = zuuluu.bind(report)();
            yankee = _closure1_slot0;
            zuuluu = 10;
            zuuluu = romeon[zuuluu];
            foxtra = yankee.bind(report)(zuuluu);
            offset = foxtra.useStateFromStores;
            zuuluu = _closure1_slot6;
            tangon = new Array(1);
            tangon[0] = zuuluu;
            zuuluu = function() {
                michal = _closure1_slot6;
                entity = michal.getOverdueMessageReminderCount;
                entity = entity.bind(michal)();
                return entity;
            };
            zuuluu = offset.bind(foxtra)(tangon, zuuluu);
            tangon = 11;
            tangon = romeon[tangon];
            offset = option.bind(report)(tangon);
            option = {};
            tangon = 12;
            foxtra = romeon[tangon];
            foxtra = yankee.bind(report)(foxtra);
            foxtra = foxtra.ImpressionTypes;
            foxtra = foxtra.MODAL;
            option['type'] = foxtra;
            tangon = romeon[tangon];
            tangon = yankee.bind(report)(tangon);
            tangon = tangon.ImpressionNames;
            tangon = tangon.FOR_LATER_LIST_VIEWED;
            option['name'] = tangon;
            tangon = {};
            yankee = verify.length;
            tangon['total_count'] = yankee;
            tangon['overdue_count'] = zuuluu;
            option['properties'] = tangon;
            yankee = verify.length;
            tangon = new Array(2);
            tangon[0] = yankee;
            tangon[1] = zuuluu;
            zuuluu = {};
            zuuluu = offset.bind(report)(option, zuuluu, tangon);
            option = _closure1_slot4;
            tangon = option.useState;
            zuuluu = global;
            zuuluu = zuuluu.Date;
            offset = zuuluu.prototype;
            offset = Object.create(offset, {constructor: {value: zuuluu}});
            output = offset;
            zuuluu = new output[zuuluu](sizing);
            zuuluu = zuuluu instanceof Object ? zuuluu : offset;
            option = tangon.bind(option)(zuuluu);
            tangon = _closure1_slot3;
            zuuluu = 2;
            option = tangon.bind(report)(option, zuuluu);
            zuuluu = 0;
            yankee = option[zuuluu];
            var _closure2_slot0 = yankee;
            tangon = 1;
            tangon = option[tangon];
            var _closure2_slot1 = tangon;
            romeon = _closure1_slot4;
            offset = romeon.useEffect;
            option = function() {
                michal = global;
                report = michal.setInterval;
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                michal = 13;
                michal = tangon[michal];
                tangon = undefined;
                michal = zuuluu.bind(tangon)(michal);
                michal = michal.Millis;
                zuuluu = michal.MINUTE;
                michal = function() {
                    zuuluu = _closure2_slot1;
                    entity = global;
                    entity = entity.Date;
                    michal = entity.prototype;
                    michal = Object.create(michal, {constructor: {value: entity}});
                    report = michal;
                    entity = new report[entity](tangon);
                    michal = entity instanceof Object ? entity : michal;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal = report.bind(tangon)(michal, zuuluu);
                var _closure3_slot0 = michal;
                entity = function() {
                    entity = global;
                    zuuluu = entity.clearInterval;
                    michal = _closure3_slot0;
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                return entity;
            };
            tangon = new Array(0);
            tangon = offset.bind(romeon)(option, tangon);
            offset = _closure1_slot4;
            option = offset.useCallback;
            tangon = new Array(1);
            tangon[0] = yankee;
            entity = function(argFoo) {
                entity = argFoo;
                report = entity.item;
                tangon = _closure1_slot7;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 14;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                entity['savedMessageKey'] = report;
                report = _closure2_slot0;
                entity['throttledNow'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            option = option.bind(offset)(entity, tangon);
            entity = verify.length;
            if(!(zuuluu !== entity)) { _fun00002_ip = 434; continue _fun00001 }
 352:
            tangon = _closure1_slot7;
            zuuluu = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 16;
            entity = offset[entity];
            entity = zuuluu.bind(report)(entity);
            zuuluu = entity.FlashList;
            entity = {};
            entity['data'] = verify;
            entity['renderItem'] = option;
            golfie = golfie.cardContainer;
            entity['contentContainerStyle'] = golfie;
            golfie = _closure1_slot11;
            entity['keyExtractor'] = golfie;
            entity['onScroll'] = oscard;
            oscard = 130;
            entity['estimatedItemSize'] = oscard;
            entity = tangon.bind(report)(zuuluu, entity);
            _fun00002_ip = 472; continue _fun00001;
 434:
            tangon = _closure1_slot7;
            zuuluu = _closure1_slot0;
            oscard = _closure1_slot2;
            michal = 15;
            michal = oscard[michal];
            michal = zuuluu.bind(report)(michal);
            zuuluu = michal.ForLaterEmptyState;
            michal = {};
            entity = tangon.bind(report)(zuuluu, michal);
 472:
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    entity = global;
    option = entity.Object;
    tangon = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = romeon.bind(entity)(michal);
    var _closure1_slot3 = michal;
    foxtra = 1;
    tangon = oscard[foxtra];
    michal = argCor;
    option = michal.bind(entity)(tangon);
    var _closure1_slot4 = option;
    michal = 2;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.View;
    var _closure1_slot5 = michal;
    michal = 3;
    michal = oscard[michal];
    michal = romeon.bind(entity)(michal);
    var _closure1_slot6 = michal;
    michal = 4;
    tangon = oscard[michal];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot7 = tangon;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.jsxs;
    var _closure1_slot8 = michal;
    michal = 5;
    michal = oscard[michal];
    verify = report.bind(entity)(michal);
    tangon = verify.createStyles;
    michal = {};
    offset = {};
    yankee = 6;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_BASE_SECONDARY;
    offset['backgroundColor'] = backup;
    offset['flexGrow'] = foxtra;
    michal['container'] = offset;
    offset = {'height': 1, 'width': '100%'};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_MODIFIER_ACCENT;
    offset['backgroundColor'] = yankee;
    michal['headerBorder'] = offset;
    offset = {'paddingHorizontal': 16, 'paddingVertical': 8};
    michal['cardContainer'] = offset;
    michal = tangon.bind(verify)(michal);
    var _closure1_slot9 = michal;
    michal = {};
    tangon = 'function ForLaterScreenTsx1(){const{borderOpacity}=this.__closure;return{opacity:borderOpacity.get()};}';
    michal['code'] = tangon;
    var _closure1_slot10 = michal;
    tangon = option.memo;
    michal = function(argFoo) {
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            michal = argFoo;
            zuuluu = null;
            if(!(michal != zuuluu)) { _fun00004_ip = 279; continue _fun00003 }
 14:
            report = undefined;
            var _closure2_slot0 = report;
            zuuluu = _closure1_slot9;
            yankee = zuuluu.bind(report)();
            tangon = _closure1_slot0;
            foxtra = _closure1_slot2;
            oscard = 7;
            zuuluu = foxtra[oscard];
            verify = tangon.bind(report)(zuuluu);
            option = verify.useSharedValue;
            zuuluu = 0;
            verify = option.bind(verify)(zuuluu);
            _closure2_slot0 = verify;
            romeon = _closure1_slot4;
            offset = romeon.useCallback;
            option = new Array(1);
            option[0] = verify;
            zuuluu = function(argFoo) {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    tangon = _closure2_slot0;
                    zuuluu = tangon.set;
                    report = _closure1_slot0;
                    entity = _closure1_slot2;
                    golfie = 8;
                    michal = entity[golfie];
                    entity = undefined;
                    oscard = report.bind(entity)(michal);
                    report = oscard.withSpring;
                    michal = argFoo;
                    michal = michal.nativeEvent;
                    michal = michal.contentOffset;
                    michal = michal.y;
                    golfie = michal > golfie;
                    michal = 0;
                    if(!golfie) { _fun00006_ip = 73; continue _fun00005 }
 70:
                    michal = 1;
 73:
                    michal = report.bind(oscard)(michal);
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                }
            };
            offset = offset.bind(romeon)(zuuluu, option);
            zuuluu = foxtra[oscard];
            tangon = tangon.bind(report)(zuuluu);
            zuuluu = tangon.useAnimatedStyle;
            entity = function() { // Original name: t
                entity = {};
                zuuluu = _closure2_slot0;
                michal = zuuluu.get;
                michal = michal.bind(zuuluu)();
                entity['opacity'] = michal;
                return entity;
            };
            option = {};
            option['borderOpacity'] = verify;
            entity['__closure'] = option;
            option = 16693192032676.0;
            entity['__workletHash'] = option;
            option = _closure1_slot10;
            entity['__initData'] = option;
            romeon = zuuluu.bind(tangon)(entity);
            tangon = _closure1_slot8;
            zuuluu = _closure1_slot5;
            entity = {};
            option = yankee.container;
            entity['style'] = option;
            verify = _closure1_slot7;
            option = _closure1_slot1;
            oscard = foxtra[oscard];
            oscard = option.bind(report)(oscard);
            option = oscard.View;
            oscard = {};
            foxtra = yankee.headerBorder;
            yankee = new Array(2);
            yankee[0] = foxtra;
            yankee[1] = romeon;
            oscard['style'] = yankee;
            option = verify.bind(report)(option, oscard);
            oscard = new Array(2);
            oscard[0] = option;
            verify = _closure1_slot7;
            option = _closure1_slot12;
            golfie = {};
            golfie['handleScroll'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            entity['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, entity);
            return entity;
 279:
            backup = "Cannot destructure 'undefined' or 'null'.";
            kiloes = michal;
            entity = throwTypeError(kiloes, backup);
            entity = undefined;
            throw entity;
        }
    };
    michal = tangon.bind(option)(michal);
    tangon = function(argFoo) { // Original name: keyExtractor
        entity = argFoo;
        entity = entity.messageId;
        return entity;
    };
    var _closure1_slot11 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/saved_messages/native/ForLaterScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();