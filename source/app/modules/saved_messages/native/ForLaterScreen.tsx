// app/modules/saved_messages/native/ForLaterScreen.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: ForLaterPage
        _fun88931: for(var _fun88931_ip = 0; ; ) switch(_fun88931_ip) {
 0:
            mike = argFoo;
            oscar = mike.handleScroll;
            zulu = _closure1_slot9;
            report = undefined;
            golf = zulu.bind(report)();
            options = _closure1_slot1;
            romeo = _closure1_slot2;
            zulu = 9;
            zulu = romeo[zulu];
            zulu = options.bind(report)(zulu);
            verify = zulu.bind(report)();
            yankee = _closure1_slot0;
            zulu = 10;
            zulu = romeo[zulu];
            foxtrot = yankee.bind(report)(zulu);
            offset = foxtrot.useStateFromStores;
            zulu = _closure1_slot6;
            tango = new Array(1);
            tango[0] = zulu;
            zulu = function() {
                mike = _closure1_slot6;
                entity = mike.getOverdueMessageReminderCount;
                entity = entity.bind(mike)();
                return entity;
            };
            zulu = offset.bind(foxtrot)(tango, zulu);
            tango = 11;
            tango = romeo[tango];
            offset = options.bind(report)(tango);
            options = {};
            tango = 12;
            foxtrot = romeo[tango];
            foxtrot = yankee.bind(report)(foxtrot);
            foxtrot = foxtrot.ImpressionTypes;
            foxtrot = foxtrot.MODAL;
            options['type'] = foxtrot;
            tango = romeo[tango];
            tango = yankee.bind(report)(tango);
            tango = tango.ImpressionNames;
            tango = tango.FOR_LATER_LIST_VIEWED;
            options['name'] = tango;
            tango = {};
            yankee = verify.length;
            tango['total_count'] = yankee;
            tango['overdue_count'] = zulu;
            options['properties'] = tango;
            yankee = verify.length;
            tango = new Array(2);
            tango[0] = yankee;
            tango[1] = zulu;
            zulu = {};
            zulu = offset.bind(report)(options, zulu, tango);
            options = _closure1_slot4;
            tango = options.useState;
            zulu = global;
            zulu = zulu.Date;
            offset = zulu.prototype;
            offset = Object.create(offset, {constructor: {value: zulu}});
            output = offset;
            zulu = new output[zulu](sizing);
            zulu = zulu instanceof Object ? zulu : offset;
            options = tango.bind(options)(zulu);
            tango = _closure1_slot3;
            zulu = 2;
            options = tango.bind(report)(options, zulu);
            zulu = 0;
            yankee = options[zulu];
            var _closure2_slot0 = yankee;
            tango = 1;
            tango = options[tango];
            var _closure2_slot1 = tango;
            romeo = _closure1_slot4;
            offset = romeo.useEffect;
            options = function() {
                mike = global;
                report = mike.setInterval;
                zulu = _closure1_slot1;
                tango = _closure1_slot2;
                mike = 13;
                mike = tango[mike];
                tango = undefined;
                mike = zulu.bind(tango)(mike);
                mike = mike.Millis;
                zulu = mike.MINUTE;
                mike = function() {
                    zulu = _closure2_slot1;
                    entity = global;
                    entity = entity.Date;
                    mike = entity.prototype;
                    mike = Object.create(mike, {constructor: {value: entity}});
                    report = mike;
                    entity = new report[entity](tango);
                    mike = entity instanceof Object ? entity : mike;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
                    return entity;
                };
                mike = report.bind(tango)(mike, zulu);
                var _closure3_slot0 = mike;
                entity = function() {
                    entity = global;
                    zulu = entity.clearInterval;
                    mike = _closure3_slot0;
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                };
                return entity;
            };
            tango = new Array(0);
            tango = offset.bind(romeo)(options, tango);
            offset = _closure1_slot4;
            options = offset.useCallback;
            tango = new Array(1);
            tango[0] = yankee;
            entity = function(argFoo) {
                entity = argFoo;
                report = entity.item;
                tango = _closure1_slot7;
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 14;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                entity['savedMessageKey'] = report;
                report = _closure2_slot0;
                entity['throttledNow'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            options = options.bind(offset)(entity, tango);
            entity = verify.length;
            if(!(zulu !== entity)) { _fun88931_ip = 434; continue _fun88931 }
 352:
            tango = _closure1_slot7;
            zulu = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 16;
            entity = offset[entity];
            entity = zulu.bind(report)(entity);
            zulu = entity.FlashList;
            entity = {};
            entity['data'] = verify;
            entity['renderItem'] = options;
            golf = golf.cardContainer;
            entity['contentContainerStyle'] = golf;
            golf = _closure1_slot11;
            entity['keyExtractor'] = golf;
            entity['onScroll'] = oscar;
            oscar = 130;
            entity['estimatedItemSize'] = oscar;
            entity = tango.bind(report)(zulu, entity);
            _fun88931_ip = 472; continue _fun88931;
 434:
            tango = _closure1_slot7;
            zulu = _closure1_slot0;
            oscar = _closure1_slot2;
            mike = 15;
            mike = oscar[mike];
            mike = zulu.bind(report)(mike);
            zulu = mike.ForLaterEmptyState;
            mike = {};
            entity = tango.bind(report)(zulu, mike);
 472:
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    entity = global;
    options = entity.Object;
    tango = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(options)(zulu, entity, mike);
    entity = 0;
    mike = oscar[entity];
    entity = undefined;
    mike = romeo.bind(entity)(mike);
    var _closure1_slot3 = mike;
    foxtrot = 1;
    tango = oscar[foxtrot];
    mike = argCorge;
    options = mike.bind(entity)(tango);
    var _closure1_slot4 = options;
    mike = 2;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    mike = mike.View;
    var _closure1_slot5 = mike;
    mike = 3;
    mike = oscar[mike];
    mike = romeo.bind(entity)(mike);
    var _closure1_slot6 = mike;
    mike = 4;
    tango = oscar[mike];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot7 = tango;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot8 = mike;
    mike = 5;
    mike = oscar[mike];
    verify = report.bind(entity)(mike);
    tango = verify.createStyles;
    mike = {};
    offset = {};
    yankee = 6;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_BASE_SECONDARY;
    offset['backgroundColor'] = backup;
    offset['flexGrow'] = foxtrot;
    mike['container'] = offset;
    offset = {'height': 1, 'width': '100%'};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_MODIFIER_ACCENT;
    offset['backgroundColor'] = yankee;
    mike['headerBorder'] = offset;
    offset = {'paddingHorizontal': 16, 'paddingVertical': 8};
    mike['cardContainer'] = offset;
    mike = tango.bind(verify)(mike);
    var _closure1_slot9 = mike;
    mike = {};
    tango = 'function ForLaterScreenTsx1(){const{borderOpacity}=this.__closure;return{opacity:borderOpacity.get()};}';
    mike['code'] = tango;
    var _closure1_slot10 = mike;
    tango = options.memo;
    mike = function(argFoo) {
        _fun88937: for(var _fun88937_ip = 0; ; ) switch(_fun88937_ip) {
 0:
            mike = argFoo;
            zulu = null;
            if(!(mike != zulu)) { _fun88937_ip = 279; continue _fun88937 }
 14:
            report = undefined;
            var _closure2_slot0 = report;
            zulu = _closure1_slot9;
            yankee = zulu.bind(report)();
            tango = _closure1_slot0;
            foxtrot = _closure1_slot2;
            oscar = 7;
            zulu = foxtrot[oscar];
            verify = tango.bind(report)(zulu);
            options = verify.useSharedValue;
            zulu = 0;
            verify = options.bind(verify)(zulu);
            _closure2_slot0 = verify;
            romeo = _closure1_slot4;
            offset = romeo.useCallback;
            options = new Array(1);
            options[0] = verify;
            zulu = function(argFoo) {
                _fun88938: for(var _fun88938_ip = 0; ; ) switch(_fun88938_ip) {
 0:
                    tango = _closure2_slot0;
                    zulu = tango.set;
                    report = _closure1_slot0;
                    entity = _closure1_slot2;
                    golf = 8;
                    mike = entity[golf];
                    entity = undefined;
                    oscar = report.bind(entity)(mike);
                    report = oscar.withSpring;
                    mike = argFoo;
                    mike = mike.nativeEvent;
                    mike = mike.contentOffset;
                    mike = mike.y;
                    golf = mike > golf;
                    mike = 0;
                    if(!golf) { _fun88938_ip = 73; continue _fun88938 }
 70:
                    mike = 1;
 73:
                    mike = report.bind(oscar)(mike);
                    mike = zulu.bind(tango)(mike);
                    return entity;
                }
            };
            offset = offset.bind(romeo)(zulu, options);
            zulu = foxtrot[oscar];
            tango = tango.bind(report)(zulu);
            zulu = tango.useAnimatedStyle;
            entity = function() { // Original name: t
                entity = {};
                zulu = _closure2_slot0;
                mike = zulu.get;
                mike = mike.bind(zulu)();
                entity['opacity'] = mike;
                return entity;
            };
            options = {};
            options['borderOpacity'] = verify;
            entity['__closure'] = options;
            options = 16693192032676.0;
            entity['__workletHash'] = options;
            options = _closure1_slot10;
            entity['__initData'] = options;
            romeo = zulu.bind(tango)(entity);
            tango = _closure1_slot8;
            zulu = _closure1_slot5;
            entity = {};
            options = yankee.container;
            entity['style'] = options;
            verify = _closure1_slot7;
            options = _closure1_slot1;
            oscar = foxtrot[oscar];
            oscar = options.bind(report)(oscar);
            options = oscar.View;
            oscar = {};
            foxtrot = yankee.headerBorder;
            yankee = new Array(2);
            yankee[0] = foxtrot;
            yankee[1] = romeo;
            oscar['style'] = yankee;
            options = verify.bind(report)(options, oscar);
            oscar = new Array(2);
            oscar[0] = options;
            verify = _closure1_slot7;
            options = _closure1_slot12;
            golf = {};
            golf['handleScroll'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[1] = golf;
            entity['children'] = oscar;
            entity = tango.bind(report)(zulu, entity);
            return entity;
 279:
            backup = "Cannot destructure 'undefined' or 'null'.";
            kilo = mike;
            entity = throwTypeError(kilo, backup);
            entity = undefined;
            throw entity;
        }
    };
    mike = tango.bind(options)(mike);
    tango = function(argFoo) { // Original name: keyExtractor
        entity = argFoo;
        entity = entity.messageId;
        return entity;
    };
    var _closure1_slot11 = tango;
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/saved_messages/native/ForLaterScreen.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();