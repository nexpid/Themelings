// app/modules/saved_messages/native/ForLaterEmptyState.tsx
export default (function(_, argBar, argBaz, __, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot3 = golf;
    tango = tango.Image;
    var _closure1_slot4 = tango;
    tango = 1;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 2;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    offset = 'center';
    verify = {'justifyContent': 'center', 'alignItems': 'center', 'paddingTop': 166, 'paddingHorizontal': 32};
    tango['pageContainer'] = verify;
    verify = {'alignItems': 'center', 'maxWidth': 311};
    tango['container'] = verify;
    verify = {'width': 140, 'height': 130};
    tango['image'] = verify;
    verify = {'marginTop': 24, 'gap': 8};
    tango['textContainer'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tango['text'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 6;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/saved_messages/native/ForLaterEmptyState.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: ForLaterEmptyState
        entity = _closure1_slot7;
        tango = undefined;
        foxtrot = entity.bind(tango)();
        zulu = _closure1_slot5;
        mike = _closure1_slot3;
        entity = {};
        report = foxtrot.pageContainer;
        entity['style'] = report;
        oscar = _closure1_slot6;
        report = {};
        golf = foxtrot.container;
        report['style'] = golf;
        options = _closure1_slot4;
        golf = {};
        yankee = _closure1_slot1;
        sizing = _closure1_slot2;
        offset = 3;
        offset = sizing[offset];
        offset = yankee.bind(tango)(offset);
        golf['source'] = offset;
        offset = foxtrot.image;
        golf['style'] = offset;
        options = zulu.bind(tango)(options, golf);
        golf = new Array(2);
        golf[0] = options;
        options = {};
        offset = foxtrot.textContainer;
        options['style'] = offset;
        kilo = _closure1_slot0;
        offset = 4;
        verify = sizing[offset];
        verify = kilo.bind(tango)(verify);
        yankee = verify.Text;
        verify = {'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        romeo = foxtrot.text;
        verify['style'] = romeo;
        romeo = 5;
        backup = sizing[romeo];
        backup = kilo.bind(tango)(backup);
        result = backup.intl;
        output = result.string;
        backup = sizing[romeo];
        backup = kilo.bind(tango)(backup);
        backup = backup.t;
        backup = backup.erEf2t;
        backup = output.bind(result)(backup);
        verify['children'] = backup;
        yankee = zulu.bind(tango)(yankee, verify);
        verify = new Array(2);
        verify[0] = yankee;
        offset = sizing[offset];
        offset = kilo.bind(tango)(offset);
        yankee = offset.Text;
        offset = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
        foxtrot = foxtrot.text;
        offset['style'] = foxtrot;
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.string;
        romeo = sizing[romeo];
        romeo = kilo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.w1o+7+;
        romeo = foxtrot.bind(backup)(romeo);
        offset['children'] = romeo;
        offset = zulu.bind(tango)(yankee, offset);
        verify[1] = offset;
        options['children'] = verify;
        options = oscar.bind(tango)(mike, options);
        golf[1] = options;
        report['children'] = golf;
        report = oscar.bind(tango)(mike, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['ForLaterEmptyState'] = mike;
    return entity;
})();