// app/modules/saved_messages/native/ForLaterOpenActionButton.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: BadgedBookmarksIcon
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            report = entity.showRedDot;
            golf = _closure1_slot1;
            options = _closure1_slot2;
            entity = 8;
            entity = options[entity];
            tango = undefined;
            entity = golf.bind(tango)(entity);
            oscar = entity.bind(tango)();
            mike = _closure1_slot0;
            entity = 9;
            entity = options[entity];
            zulu = mike.bind(tango)(entity);
            mike = zulu.useToken;
            entity = 7;
            entity = options[entity];
            entity = golf.bind(tango)(entity);
            entity = entity.colors;
            entity = entity.INTERACTIVE_NORMAL;
            output = mike.bind(zulu)(entity, oscar);
            entity = _closure1_slot10;
            foxtrot = entity.bind(tango)();
            zulu = _closure1_slot6;
            mike = _closure1_slot4;
            entity = {};
            oscar = foxtrot.container;
            entity['style'] = oscar;
            if(report) { _fun00002_ip = 174; continue _fun00001 }
 119:
            golf = _closure1_slot6;
            oscar = _closure1_slot0;
            options = _closure1_slot2;
            report = 10;
            report = options[report];
            report = oscar.bind(tango)(report);
            oscar = report.BookmarkIcon;
            report = {};
            options = 'sm';
            report['size'] = options;
            report['color'] = output;
            report = golf.bind(tango)(oscar, report);
            _fun00002_ip = 331; continue _fun00001;
 174:
            options = _closure1_slot8;
            golf = _closure1_slot7;
            oscar = {};
            romeo = _closure1_slot6;
            yankee = _closure1_slot1;
            result = _closure1_slot2;
            verify = 4;
            verify = result[verify];
            yankee = yankee.bind(tango)(verify);
            verify = {};
            kilo = _closure1_slot9;
            backup = new Array(1);
            backup[0] = kilo;
            verify['cutouts'] = backup;
            sizing = _closure1_slot6;
            kilo = _closure1_slot0;
            backup = 10;
            backup = result[backup];
            backup = kilo.bind(tango)(backup);
            kilo = backup.BookmarkIcon;
            backup = {};
            result = 'sm';
            backup['size'] = result;
            backup['color'] = output;
            backup = sizing.bind(tango)(kilo, backup);
            verify['children'] = backup;
            yankee = romeo.bind(tango)(yankee, verify);
            verify = new Array(2);
            verify[0] = yankee;
            romeo = _closure1_slot6;
            yankee = _closure1_slot4;
            offset = {};
            foxtrot = foxtrot.dot;
            offset['style'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[1] = offset;
            oscar['children'] = verify;
            report = options.bind(tango)(golf, oscar);
 331:
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot11 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot3 = golf;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot6 = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.Fragment;
    var _closure1_slot7 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = {};
    options = 4;
    options = oscar[options];
    options = report.bind(entity)(options);
    options = options.CutoutShape;
    options = options.Circle;
    tango['shape'] = options;
    options = 5;
    options = oscar[options];
    options = report.bind(entity)(options);
    options = options.ICON_SIZE;
    verify = options.sm;
    options = 9;
    options = verify - options;
    tango['x'] = options;
    options = -1;
    tango['y'] = options;
    options = 10;
    tango['size'] = options;
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {'height': 18, 'width': 18, 'aspectRatio': 1, 'alignItems': 'center', 'justifyContent': 'center', 'position': 'relative'};
    tango['container'] = offset;
    offset = {'position': 'absolute', 'height': 6.5, 'width': 6.5, 'backgroundColor': null, 'borderRadius': null, 'right': 1, 'top': 0.7};
    yankee = 7;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.STATUS_DANGER;
    offset['backgroundColor'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.lg;
    offset['borderRadius'] = yankee;
    tango['dot'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot10 = tango;
    tango = golf.forwardRef;
    mike = function(argFoo, argBar) {
        mike = argFoo;
        golf = mike.onOpen;
        var _closure2_slot0 = golf;
        yankee = _closure1_slot0;
        romeo = _closure1_slot2;
        zulu = 11;
        mike = romeo[zulu];
        tango = undefined;
        foxtrot = yankee.bind(tango)(mike);
        offset = foxtrot.useStateFromStores;
        mike = _closure1_slot5;
        options = new Array(1);
        options[0] = mike;
        oscar = function() {
            mike = _closure1_slot5;
            entity = mike.hasOverdueReminder;
            entity = entity.bind(mike)();
            return entity;
        };
        report = new Array(0);
        backup = offset.bind(foxtrot)(options, oscar, report);
        zulu = romeo[zulu];
        oscar = yankee.bind(tango)(zulu);
        report = oscar.useStateFromStores;
        zulu = new Array(1);
        zulu[0] = mike;
        mike = function() {
            mike = _closure1_slot5;
            entity = mike.getSavedMessageCount;
            entity = entity.bind(mike)();
            return entity;
        };
        oscar = report.bind(oscar)(zulu, mike);
        var _closure2_slot1 = oscar;
        report = _closure1_slot3;
        zulu = report.useCallback;
        mike = new Array(2);
        mike[0] = golf;
        mike[1] = oscar;
        entity = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                zulu = _closure2_slot0;
                entity = undefined;
                zulu = zulu.bind(entity)();
                zulu = _closure2_slot1;
                mike = 0;
                if(!(mike === zulu)) { _fun00004_ip = 108; continue _fun00003 }
 23:
                tango = _closure1_slot1;
                report = _closure1_slot2;
                zulu = 12;
                zulu = report[zulu];
                zulu = tango.bind(entity)(zulu);
                zulu = zulu.bind(entity)();
                if(zulu) { _fun00004_ip = 108; continue _fun00003 }
 53:
                tango = _closure1_slot1;
                report = _closure1_slot2;
                zulu = 13;
                zulu = report[zulu];
                zulu = tango.bind(entity)(zulu);
                tango = _closure1_slot0;
                mike = 14;
                mike = report[mike];
                mike = tango.bind(entity)(mike);
                mike = mike.EntitlementFeatureNames;
                mike = mike.SAVED_MESSAGES;
                mike = zulu.bind(entity)(mike);
                _fun00004_ip = 200; continue _fun00003;
 108:
                report = _closure1_slot1;
                mike = _closure1_slot2;
                tango = 15;
                tango = mike[tango];
                golf = report.bind(entity)(tango);
                oscar = golf.pushLazy;
                tango = _closure1_slot0;
                zulu = 17;
                zulu = mike[zulu];
                tango = tango.bind(entity)(zulu);
                zulu = 16;
                zulu = mike[zulu];
                mike = mike.paths;
                yankee = tango.bind(entity)(zulu, mike);
                tango = {};
                mike = 'modal';
                tango['presentation'] = mike;
                offset = {};
                verify = 'for-later-modal';
                romeo = golf;
                options = tango;
                mike = romeo[oscar](yankee, offset, verify, options, golf);
 200:
                return entity;
            }
        };
        options = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot6;
        mike = _closure1_slot4;
        entity = {};
        report = argBar;
        entity['ref'] = report;
        golf = _closure1_slot6;
        report = 18;
        report = romeo[report];
        report = yankee.bind(tango)(report);
        oscar = report.IconButton;
        report = {'variant': 'tertiary', 'size': 'sm'};
        foxtrot = _closure1_slot6;
        offset = _closure1_slot11;
        verify = {};
        verify['showRedDot'] = backup;
        verify = foxtrot.bind(tango)(offset, verify);
        report['icon'] = verify;
        report['onPress'] = options;
        options = 19;
        verify = romeo[options];
        verify = yankee.bind(tango)(verify);
        offset = verify.intl;
        verify = offset.string;
        options = romeo[options];
        options = yankee.bind(tango)(options);
        options = options.t;
        options = options.2pAkDA;
        options = verify.bind(offset)(options);
        report['accessibilityLabel'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 20;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/saved_messages/native/ForLaterOpenActionButton.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();