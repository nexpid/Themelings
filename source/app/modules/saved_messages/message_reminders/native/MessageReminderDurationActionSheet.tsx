// app/modules/saved_messages/message_reminders/native/MessageReminderDurationActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    tangon = {};
    offset = 28;
    tangon['marginHorizontal'] = offset;
    golfie['durationsContainer'] = tangon;
    offset = {'flexDirection': 'row', 'paddingVertical': 20, 'alignItems': 'center', 'borderColor': null, 'borderBottomWidth': 1};
    tangon = 20;
    yankee = 6;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BORDER_SUBTLE;
    offset['borderColor'] = yankee;
    golfie['duration'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/saved_messages/message_reminders/native/MessageReminderDurationActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: MessageReminderDurationActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            romeon = michal.createReminder;
            var _closure2_slot0 = romeon;
            yankee = michal.removeReminder;
            var _closure2_slot1 = yankee;
            zuuluu = michal.channelId;
            var _closure2_slot2 = zuuluu;
            zuuluu = michal.messageId;
            var _closure2_slot3 = zuuluu;
            foxtra = michal.onBack;
            var _closure2_slot4 = foxtra;
            tangon = undefined;
            var _closure2_slot7 = tangon;
            michal = _closure1_slot8;
            option = michal.bind(tangon)();
            var _closure2_slot5 = option;
            oscard = _closure1_slot0;
            zuuluu = _closure1_slot2;
            michal = 7;
            michal = zuuluu[michal];
            offset = oscard.bind(tangon)(michal);
            verify = offset.useStateFromStores;
            michal = _closure1_slot6;
            golfie = new Array(1);
            golfie[0] = michal;
            michal = function() {
                tangon = _closure1_slot6;
                zuuluu = tangon.getSavedMessage;
                michal = _closure2_slot2;
                entity = _closure2_slot3;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            backup = verify.bind(offset)(golfie, michal);
            kiloes = _closure1_slot4;
            golfie = kiloes.useState;
            michal = global;
            michal = michal.Date;
            verify = michal.prototype;
            verify = Object.create(verify, {constructor: {value: michal}});
            result = verify;
            michal = new result[michal](output);
            michal = michal instanceof Object ? michal : verify;
            verify = golfie.bind(kiloes)(michal);
            golfie = _closure1_slot3;
            michal = 2;
            verify = golfie.bind(tangon)(verify, michal);
            michal = 0;
            michal = verify[michal];
            golfie = 1;
            golfie = verify[golfie];
            var _closure2_slot6 = golfie;
            offset = kiloes.useEffect;
            verify = function() {
                michal = global;
                report = michal.setInterval;
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                michal = 8;
                michal = tangon[michal];
                tangon = undefined;
                michal = zuuluu.bind(tangon)(michal);
                michal = michal.Millis;
                zuuluu = michal.MINUTE;
                michal = function() {
                    zuuluu = _closure2_slot6;
                    entity = global;
                    entity = entity.Date;
                    michal = entity.prototype;
                    michal = Object.create(michal, {constructor: {value: entity}});
                    report = michal;
                    entity = new report[entity](tangon);
                    michal = entity instanceof Object ? entity : michal;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal = report.bind(tangon)(michal, zuuluu);
                var _closure3_slot0 = michal;
                entity = function() {
                    entity = global;
                    zuuluu = entity.clearInterval;
                    michal = _closure3_slot0;
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                return entity;
            };
            golfie = new Array(0);
            golfie = offset.bind(kiloes)(verify, golfie);
            offset = 9;
            zuuluu = zuuluu[offset];
            golfie = oscard.bind(tangon)(zuuluu);
            oscard = golfie.useDueInString;
            zuuluu = {};
            verify = null;
            kiloes = verify == backup;
            verify = undefined;
            if(kiloes) { _fun00002_ip = 261; continue _fun00001 }
 249:
            backup = backup.saveData;
            verify = backup.dueAt;
 261:
            zuuluu['dueAt'] = verify;
            zuuluu['now'] = michal;
            michal = _closure1_slot0;
            verify = _closure1_slot2;
            offset = verify[offset];
            offset = michal.bind(tangon)(offset);
            offset = offset.DueInStringTypes;
            offset = offset.SHORT;
            zuuluu['type'] = offset;
            zuuluu = oscard.bind(golfie)(zuuluu);
            zuuluu = zuuluu.dueInText;
            _closure2_slot7 = zuuluu;
            offset = _closure1_slot4;
            golfie = offset.useMemo;
            oscard = new Array(2);
            oscard[0] = foxtra;
            oscard[1] = zuuluu;
            zuuluu = function() {
                tangon = _closure1_slot7;
                romeon = _closure1_slot0;
                foxtra = _closure1_slot2;
                entity = 10;
                entity = foxtra[entity];
                zuuluu = undefined;
                entity = romeon.bind(zuuluu)(entity);
                michal = entity.BottomSheetTitleHeader;
                entity = {};
                verify = 11;
                report = foxtra[verify];
                report = romeon.bind(zuuluu)(report);
                golfie = report.intl;
                oscard = golfie.string;
                report = foxtra[verify];
                report = romeon.bind(zuuluu)(report);
                report = report.t;
                report = report.roMu1N;
                report = oscard.bind(golfie)(report);
                entity['title'] = report;
                report = _closure2_slot7;
                entity['subtitle'] = report;
                report = 12;
                report = foxtra[report];
                report = romeon.bind(zuuluu)(report);
                oscard = report.PressableOpacity;
                report = {};
                option = 'button';
                report['accessibilityRole'] = option;
                golfie = _closure2_slot4;
                report['onPress'] = golfie;
                golfie = 13;
                golfie = foxtra[golfie];
                golfie = romeon.bind(zuuluu)(golfie);
                option = golfie.Text;
                golfie = {'variant': 'text-md/semibold', 'color': 'control-brand-foreground'};
                offset = foxtra[verify];
                offset = romeon.bind(zuuluu)(offset);
                yankee = offset.intl;
                offset = yankee.string;
                verify = foxtra[verify];
                verify = romeon.bind(zuuluu)(verify);
                verify = verify.t;
                verify = verify.13/7kZ;
                verify = offset.bind(yankee)(verify);
                golfie['children'] = verify;
                golfie = tangon.bind(zuuluu)(option, golfie);
                report['children'] = golfie;
                report = tangon.bind(zuuluu)(oscard, report);
                entity['leading'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            oscard = golfie.bind(offset)(zuuluu, oscard);
            golfie = offset.useMemo;
            zuuluu = new Array(3);
            zuuluu[0] = romeon;
            zuuluu[1] = yankee;
            yankee = option.duration;
            zuuluu[2] = yankee;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    echoed = _closure1_slot0;
                    sizing = _closure1_slot2;
                    entity = 14;
                    entity = sizing[entity];
                    golfie = undefined;
                    entity = echoed.bind(golfie)(entity);
                    zuuluu = entity.MESSAGE_REMINDER_DURATION_ITEMS;
                    michal = zuuluu.map;
                    entity = function(argFoo) {
                        entity = argFoo;
                        michal = entity.getDueAt;
                        var _closure4_slot0 = michal;
                        entity = entity.getLabel;
                        report = _closure1_slot7;
                        golfie = _closure1_slot0;
                        option = _closure1_slot2;
                        michal = 12;
                        michal = option[michal];
                        tangon = undefined;
                        michal = golfie.bind(tangon)(michal);
                        zuuluu = michal.PressableOpacity;
                        michal = {};
                        verify = 'button';
                        michal['accessibilityRole'] = verify;
                        verify = entity.bind(tangon)();
                        michal['accessibilityLabel'] = verify;
                        verify = _closure2_slot5;
                        verify = verify.duration;
                        michal['style'] = verify;
                        oscard = function() { // Original name: onPress
                            zuuluu = _closure2_slot0;
                            michal = _closure4_slot0;
                            entity = undefined;
                            michal = michal.bind(entity)();
                            michal = zuuluu.bind(entity)(michal);
                            zuuluu = _closure1_slot1;
                            tangon = _closure1_slot2;
                            michal = 15;
                            michal = tangon[michal];
                            zuuluu = zuuluu.bind(entity)(michal);
                            michal = zuuluu.hideActionSheet;
                            michal = michal.bind(zuuluu)();
                            return entity;
                        };
                        michal['onPress'] = oscard;
                        oscard = 13;
                        oscard = option[oscard];
                        oscard = golfie.bind(tangon)(oscard);
                        golfie = oscard.Text;
                        oscard = {'variant': 'text-md/semibold', 'color': 'interactive-active'};
                        option = entity.bind(tangon)();
                        oscard['children'] = option;
                        oscard = report.bind(tangon)(golfie, oscard);
                        michal['children'] = oscard;
                        golfie = entity.bind(tangon)();
                        entity = global;
                        entity = entity.HermesInternal;
                        oscard = entity.concat;
                        entity = 'create-reminder-';
                        entity = oscard.bind(entity)(golfie);
                        entity = report.bind(tangon)(zuuluu, michal, entity);
                        return entity;
                    };
                    entity = michal.bind(zuuluu)(entity);
                    oscard = entity.push;
                    backup = _closure1_slot7;
                    tangon = 12;
                    michal = sizing[tangon];
                    michal = echoed.bind(golfie)(michal);
                    romeon = michal.PressableOpacity;
                    verify = {};
                    yankee = 'button';
                    verify['accessibilityRole'] = yankee;
                    foxtra = 11;
                    michal = sizing[foxtra];
                    michal = echoed.bind(golfie)(michal);
                    offset = michal.intl;
                    zuuluu = offset.string;
                    michal = sizing[foxtra];
                    michal = echoed.bind(golfie)(michal);
                    michal = michal.t;
                    michal = michal.OLA8Zm;
                    michal = zuuluu.bind(offset)(michal);
                    verify['accessibilityLabel'] = michal;
                    michal = _closure2_slot5;
                    michal = michal.duration;
                    verify['style'] = michal;
                    michal = function() { // Original name: onPress
                        zuuluu = _closure1_slot1;
                        option = _closure1_slot2;
                        entity = 15;
                        michal = option[entity];
                        entity = undefined;
                        report = zuuluu.bind(entity)(michal);
                        michal = report.hideActionSheet;
                        michal = michal.bind(report)();
                        michal = 16;
                        report = option[michal];
                        golfie = zuuluu.bind(entity)(report);
                        oscard = golfie.pushLazy;
                        report = _closure1_slot0;
                        tangon = 18;
                        tangon = option[tangon];
                        verify = report.bind(entity)(tangon);
                        tangon = 17;
                        report = option[tangon];
                        tangon = option.paths;
                        report = verify.bind(entity)(report, tangon);
                        tangon = {};
                        michal = option[michal];
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = zuuluu.pop;
                        michal = michal.bind(zuuluu)();
                        tangon['onClose'] = michal;
                        michal = _closure2_slot0;
                        tangon['createReminder'] = michal;
                        zuuluu = {};
                        michal = 'modal';
                        zuuluu['presentation'] = michal;
                        yankee = 'create-reminder-custom';
                        backup = golfie;
                        foxtra = report;
                        romeon = tangon;
                        offset = zuuluu;
                        michal = backup[oscard](foxtra, romeon, yankee, offset, verify);
                        return entity;
                    };
                    verify['onPress'] = michal;
                    michal = 13;
                    zuuluu = sizing[michal];
                    zuuluu = echoed.bind(golfie)(zuuluu);
                    kiloes = zuuluu.Text;
                    zuuluu = {'variant': 'text-md/semibold', 'color': 'interactive-active'};
                    output = sizing[foxtra];
                    output = echoed.bind(golfie)(output);
                    result = output.intl;
                    output = result.string;
                    sizing = sizing[foxtra];
                    sizing = echoed.bind(golfie)(sizing);
                    sizing = sizing.t;
                    sizing = sizing.OLA8Zm;
                    sizing = output.bind(result)(sizing);
                    zuuluu['children'] = sizing;
                    zuuluu = backup.bind(golfie)(kiloes, zuuluu);
                    verify['children'] = zuuluu;
                    zuuluu = 'create-reminder-custom';
                    zuuluu = backup.bind(golfie)(romeon, verify, zuuluu);
                    zuuluu = oscard.bind(entity)(zuuluu);
                    oscard = _closure2_slot1;
                    zuuluu = null;
                    if(!(zuuluu != oscard)) { _fun00004_ip = 499; continue _fun00003 }
 285:
                    zuuluu = entity.push;
                    oscard = _closure1_slot7;
                    romeon = _closure1_slot0;
                    verify = _closure1_slot2;
                    tangon = verify[tangon];
                    tangon = romeon.bind(golfie)(tangon);
                    report = tangon.PressableOpacity;
                    tangon = {};
                    tangon['accessibilityRole'] = yankee;
                    yankee = verify[foxtra];
                    yankee = romeon.bind(golfie)(yankee);
                    kiloes = yankee.intl;
                    backup = kiloes.string;
                    yankee = verify[foxtra];
                    yankee = romeon.bind(golfie)(yankee);
                    yankee = yankee.t;
                    yankee = yankee.1GzslZ;
                    yankee = backup.bind(kiloes)(yankee);
                    tangon['accessibilityLabel'] = yankee;
                    offset = _closure2_slot5;
                    offset = offset.duration;
                    tangon['style'] = offset;
                    option = function() { // Original name: onPress
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 15;
                        michal = michal[entity];
                        entity = undefined;
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = zuuluu.hideActionSheet;
                        michal = michal.bind(zuuluu)();
                        michal = _closure2_slot1;
                        michal = michal.bind(entity)();
                        return entity;
                    };
                    tangon['onPress'] = option;
                    michal = verify[michal];
                    michal = romeon.bind(golfie)(michal);
                    option = michal.Text;
                    michal = {'variant': 'text-md/semibold', 'color': 'status-danger'};
                    offset = verify[foxtra];
                    offset = romeon.bind(golfie)(offset);
                    yankee = offset.intl;
                    offset = yankee.string;
                    verify = verify[foxtra];
                    verify = romeon.bind(golfie)(verify);
                    verify = verify.t;
                    verify = verify.1GzslZ;
                    verify = offset.bind(yankee)(verify);
                    michal['children'] = verify;
                    michal = oscard.bind(golfie)(option, michal);
                    tangon['children'] = michal;
                    michal = 'remove-reminder';
                    michal = oscard.bind(golfie)(report, tangon, michal);
                    michal = zuuluu.bind(entity)(michal);
 499:
                    return entity;
                }
            };
            golfie = golfie.bind(offset)(entity, zuuluu);
            zuuluu = _closure1_slot7;
            entity = 19;
            entity = verify[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {};
            entity['header'] = oscard;
            oscard = _closure1_slot5;
            report = {};
            option = option.durationsContainer;
            report['style'] = option;
            report['children'] = golfie;
            report = zuuluu.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();