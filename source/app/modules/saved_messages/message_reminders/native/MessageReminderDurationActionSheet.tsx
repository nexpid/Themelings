// app/modules/saved_messages/message_reminders/native/MessageReminderDurationActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    tango = {};
    offset = 28;
    tango['marginHorizontal'] = offset;
    golf['durationsContainer'] = tango;
    offset = {'flexDirection': 'row', 'paddingVertical': 20, 'alignItems': 'center', 'borderColor': null, 'borderBottomWidth': 1};
    tango = 20;
    yankee = 6;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BORDER_SUBTLE;
    offset['borderColor'] = yankee;
    golf['duration'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/saved_messages/message_reminders/native/MessageReminderDurationActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: MessageReminderDurationActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = argFoo;
            romeo = mike.createReminder;
            var _closure2_slot0 = romeo;
            yankee = mike.removeReminder;
            var _closure2_slot1 = yankee;
            zulu = mike.channelId;
            var _closure2_slot2 = zulu;
            zulu = mike.messageId;
            var _closure2_slot3 = zulu;
            foxtrot = mike.onBack;
            var _closure2_slot4 = foxtrot;
            tango = undefined;
            var _closure2_slot7 = tango;
            mike = _closure1_slot8;
            options = mike.bind(tango)();
            var _closure2_slot5 = options;
            oscar = _closure1_slot0;
            zulu = _closure1_slot2;
            mike = 7;
            mike = zulu[mike];
            offset = oscar.bind(tango)(mike);
            verify = offset.useStateFromStores;
            mike = _closure1_slot6;
            golf = new Array(1);
            golf[0] = mike;
            mike = function() {
                tango = _closure1_slot6;
                zulu = tango.getSavedMessage;
                mike = _closure2_slot2;
                entity = _closure2_slot3;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            backup = verify.bind(offset)(golf, mike);
            kilo = _closure1_slot4;
            golf = kilo.useState;
            mike = global;
            mike = mike.Date;
            verify = mike.prototype;
            verify = Object.create(verify, {constructor: {value: mike}});
            result = verify;
            mike = new result[mike](output);
            mike = mike instanceof Object ? mike : verify;
            verify = golf.bind(kilo)(mike);
            golf = _closure1_slot3;
            mike = 2;
            verify = golf.bind(tango)(verify, mike);
            mike = 0;
            mike = verify[mike];
            golf = 1;
            golf = verify[golf];
            var _closure2_slot6 = golf;
            offset = kilo.useEffect;
            verify = function() {
                mike = global;
                report = mike.setInterval;
                zulu = _closure1_slot1;
                tango = _closure1_slot2;
                mike = 8;
                mike = tango[mike];
                tango = undefined;
                mike = zulu.bind(tango)(mike);
                mike = mike.Millis;
                zulu = mike.MINUTE;
                mike = function() {
                    zulu = _closure2_slot6;
                    entity = global;
                    entity = entity.Date;
                    mike = entity.prototype;
                    mike = Object.create(mike, {constructor: {value: entity}});
                    report = mike;
                    entity = new report[entity](tango);
                    mike = entity instanceof Object ? entity : mike;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
                    return entity;
                };
                mike = report.bind(tango)(mike, zulu);
                var _closure3_slot0 = mike;
                entity = function() {
                    entity = global;
                    zulu = entity.clearInterval;
                    mike = _closure3_slot0;
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                };
                return entity;
            };
            golf = new Array(0);
            golf = offset.bind(kilo)(verify, golf);
            offset = 9;
            zulu = zulu[offset];
            golf = oscar.bind(tango)(zulu);
            oscar = golf.useDueInString;
            zulu = {};
            verify = null;
            kilo = verify == backup;
            verify = undefined;
            if(kilo) { _fun00002_ip = 261; continue _fun00001 }
 249:
            backup = backup.saveData;
            verify = backup.dueAt;
 261:
            zulu['dueAt'] = verify;
            zulu['now'] = mike;
            mike = _closure1_slot0;
            verify = _closure1_slot2;
            offset = verify[offset];
            offset = mike.bind(tango)(offset);
            offset = offset.DueInStringTypes;
            offset = offset.SHORT;
            zulu['type'] = offset;
            zulu = oscar.bind(golf)(zulu);
            zulu = zulu.dueInText;
            _closure2_slot7 = zulu;
            offset = _closure1_slot4;
            golf = offset.useMemo;
            oscar = new Array(2);
            oscar[0] = foxtrot;
            oscar[1] = zulu;
            zulu = function() {
                tango = _closure1_slot7;
                romeo = _closure1_slot0;
                foxtrot = _closure1_slot2;
                entity = 10;
                entity = foxtrot[entity];
                zulu = undefined;
                entity = romeo.bind(zulu)(entity);
                mike = entity.BottomSheetTitleHeader;
                entity = {};
                verify = 11;
                report = foxtrot[verify];
                report = romeo.bind(zulu)(report);
                golf = report.intl;
                oscar = golf.string;
                report = foxtrot[verify];
                report = romeo.bind(zulu)(report);
                report = report.t;
                report = report.roMu1N;
                report = oscar.bind(golf)(report);
                entity['title'] = report;
                report = _closure2_slot7;
                entity['subtitle'] = report;
                report = 12;
                report = foxtrot[report];
                report = romeo.bind(zulu)(report);
                oscar = report.PressableOpacity;
                report = {};
                options = 'button';
                report['accessibilityRole'] = options;
                golf = _closure2_slot4;
                report['onPress'] = golf;
                golf = 13;
                golf = foxtrot[golf];
                golf = romeo.bind(zulu)(golf);
                options = golf.Text;
                golf = {'variant': 'text-md/semibold', 'color': 'control-brand-foreground'};
                offset = foxtrot[verify];
                offset = romeo.bind(zulu)(offset);
                yankee = offset.intl;
                offset = yankee.string;
                verify = foxtrot[verify];
                verify = romeo.bind(zulu)(verify);
                verify = verify.t;
                verify = verify.13/7kZ;
                verify = offset.bind(yankee)(verify);
                golf['children'] = verify;
                golf = tango.bind(zulu)(options, golf);
                report['children'] = golf;
                report = tango.bind(zulu)(oscar, report);
                entity['leading'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            oscar = golf.bind(offset)(zulu, oscar);
            golf = offset.useMemo;
            zulu = new Array(3);
            zulu[0] = romeo;
            zulu[1] = yankee;
            yankee = options.duration;
            zulu[2] = yankee;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    echo = _closure1_slot0;
                    sizing = _closure1_slot2;
                    entity = 14;
                    entity = sizing[entity];
                    golf = undefined;
                    entity = echo.bind(golf)(entity);
                    zulu = entity.MESSAGE_REMINDER_DURATION_ITEMS;
                    mike = zulu.map;
                    entity = function(argFoo) {
                        entity = argFoo;
                        mike = entity.getDueAt;
                        var _closure4_slot0 = mike;
                        entity = entity.getLabel;
                        report = _closure1_slot7;
                        golf = _closure1_slot0;
                        options = _closure1_slot2;
                        mike = 12;
                        mike = options[mike];
                        tango = undefined;
                        mike = golf.bind(tango)(mike);
                        zulu = mike.PressableOpacity;
                        mike = {};
                        verify = 'button';
                        mike['accessibilityRole'] = verify;
                        verify = entity.bind(tango)();
                        mike['accessibilityLabel'] = verify;
                        verify = _closure2_slot5;
                        verify = verify.duration;
                        mike['style'] = verify;
                        oscar = function() { // Original name: onPress
                            zulu = _closure2_slot0;
                            mike = _closure4_slot0;
                            entity = undefined;
                            mike = mike.bind(entity)();
                            mike = zulu.bind(entity)(mike);
                            zulu = _closure1_slot1;
                            tango = _closure1_slot2;
                            mike = 15;
                            mike = tango[mike];
                            zulu = zulu.bind(entity)(mike);
                            mike = zulu.hideActionSheet;
                            mike = mike.bind(zulu)();
                            return entity;
                        };
                        mike['onPress'] = oscar;
                        oscar = 13;
                        oscar = options[oscar];
                        oscar = golf.bind(tango)(oscar);
                        golf = oscar.Text;
                        oscar = {'variant': 'text-md/semibold', 'color': 'interactive-active'};
                        options = entity.bind(tango)();
                        oscar['children'] = options;
                        oscar = report.bind(tango)(golf, oscar);
                        mike['children'] = oscar;
                        golf = entity.bind(tango)();
                        entity = global;
                        entity = entity.HermesInternal;
                        oscar = entity.concat;
                        entity = 'create-reminder-';
                        entity = oscar.bind(entity)(golf);
                        entity = report.bind(tango)(zulu, mike, entity);
                        return entity;
                    };
                    entity = mike.bind(zulu)(entity);
                    oscar = entity.push;
                    backup = _closure1_slot7;
                    tango = 12;
                    mike = sizing[tango];
                    mike = echo.bind(golf)(mike);
                    romeo = mike.PressableOpacity;
                    verify = {};
                    yankee = 'button';
                    verify['accessibilityRole'] = yankee;
                    foxtrot = 11;
                    mike = sizing[foxtrot];
                    mike = echo.bind(golf)(mike);
                    offset = mike.intl;
                    zulu = offset.string;
                    mike = sizing[foxtrot];
                    mike = echo.bind(golf)(mike);
                    mike = mike.t;
                    mike = mike.OLA8Zm;
                    mike = zulu.bind(offset)(mike);
                    verify['accessibilityLabel'] = mike;
                    mike = _closure2_slot5;
                    mike = mike.duration;
                    verify['style'] = mike;
                    mike = function() { // Original name: onPress
                        zulu = _closure1_slot1;
                        options = _closure1_slot2;
                        entity = 15;
                        mike = options[entity];
                        entity = undefined;
                        report = zulu.bind(entity)(mike);
                        mike = report.hideActionSheet;
                        mike = mike.bind(report)();
                        mike = 16;
                        report = options[mike];
                        golf = zulu.bind(entity)(report);
                        oscar = golf.pushLazy;
                        report = _closure1_slot0;
                        tango = 18;
                        tango = options[tango];
                        verify = report.bind(entity)(tango);
                        tango = 17;
                        report = options[tango];
                        tango = options.paths;
                        report = verify.bind(entity)(report, tango);
                        tango = {};
                        mike = options[mike];
                        zulu = zulu.bind(entity)(mike);
                        mike = zulu.pop;
                        mike = mike.bind(zulu)();
                        tango['onClose'] = mike;
                        mike = _closure2_slot0;
                        tango['createReminder'] = mike;
                        zulu = {};
                        mike = 'modal';
                        zulu['presentation'] = mike;
                        yankee = 'create-reminder-custom';
                        backup = golf;
                        foxtrot = report;
                        romeo = tango;
                        offset = zulu;
                        mike = backup[oscar](foxtrot, romeo, yankee, offset, verify);
                        return entity;
                    };
                    verify['onPress'] = mike;
                    mike = 13;
                    zulu = sizing[mike];
                    zulu = echo.bind(golf)(zulu);
                    kilo = zulu.Text;
                    zulu = {'variant': 'text-md/semibold', 'color': 'interactive-active'};
                    output = sizing[foxtrot];
                    output = echo.bind(golf)(output);
                    result = output.intl;
                    output = result.string;
                    sizing = sizing[foxtrot];
                    sizing = echo.bind(golf)(sizing);
                    sizing = sizing.t;
                    sizing = sizing.OLA8Zm;
                    sizing = output.bind(result)(sizing);
                    zulu['children'] = sizing;
                    zulu = backup.bind(golf)(kilo, zulu);
                    verify['children'] = zulu;
                    zulu = 'create-reminder-custom';
                    zulu = backup.bind(golf)(romeo, verify, zulu);
                    zulu = oscar.bind(entity)(zulu);
                    oscar = _closure2_slot1;
                    zulu = null;
                    if(!(zulu != oscar)) { _fun00004_ip = 499; continue _fun00003 }
 285:
                    zulu = entity.push;
                    oscar = _closure1_slot7;
                    romeo = _closure1_slot0;
                    verify = _closure1_slot2;
                    tango = verify[tango];
                    tango = romeo.bind(golf)(tango);
                    report = tango.PressableOpacity;
                    tango = {};
                    tango['accessibilityRole'] = yankee;
                    yankee = verify[foxtrot];
                    yankee = romeo.bind(golf)(yankee);
                    kilo = yankee.intl;
                    backup = kilo.string;
                    yankee = verify[foxtrot];
                    yankee = romeo.bind(golf)(yankee);
                    yankee = yankee.t;
                    yankee = yankee.1GzslZ;
                    yankee = backup.bind(kilo)(yankee);
                    tango['accessibilityLabel'] = yankee;
                    offset = _closure2_slot5;
                    offset = offset.duration;
                    tango['style'] = offset;
                    options = function() { // Original name: onPress
                        zulu = _closure1_slot1;
                        mike = _closure1_slot2;
                        entity = 15;
                        mike = mike[entity];
                        entity = undefined;
                        zulu = zulu.bind(entity)(mike);
                        mike = zulu.hideActionSheet;
                        mike = mike.bind(zulu)();
                        mike = _closure2_slot1;
                        mike = mike.bind(entity)();
                        return entity;
                    };
                    tango['onPress'] = options;
                    mike = verify[mike];
                    mike = romeo.bind(golf)(mike);
                    options = mike.Text;
                    mike = {'variant': 'text-md/semibold', 'color': 'status-danger'};
                    offset = verify[foxtrot];
                    offset = romeo.bind(golf)(offset);
                    yankee = offset.intl;
                    offset = yankee.string;
                    verify = verify[foxtrot];
                    verify = romeo.bind(golf)(verify);
                    verify = verify.t;
                    verify = verify.1GzslZ;
                    verify = offset.bind(yankee)(verify);
                    mike['children'] = verify;
                    mike = oscar.bind(golf)(options, mike);
                    tango['children'] = mike;
                    mike = 'remove-reminder';
                    mike = oscar.bind(golf)(report, tango, mike);
                    mike = zulu.bind(entity)(mike);
 499:
                    return entity;
                }
            };
            golf = golf.bind(offset)(entity, zulu);
            zulu = _closure1_slot7;
            entity = 19;
            entity = verify[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.BottomSheet;
            entity = {};
            entity['header'] = oscar;
            oscar = _closure1_slot5;
            report = {};
            options = options.durationsContainer;
            report['style'] = options;
            report['children'] = golf;
            report = zulu.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();