// app/modules/settings/native/MuteSettingsActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = golfie;
    michal = function(argFoo) { // Original name: MuteSettingsHint
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.isMuted;
            michal = entity.isGuildMuted;
            verify = entity.guildMessageNotifications;
            golfie = entity.showVoiceActivityNotificationOptions;
            tangon = undefined;
            if(!(golfie === tangon)) { _fun00002_ip = 37; continue _fun00001 }
 35:
            golfie = false;
 37:
            var _closure2_slot0 = tangon;
            report = _closure1_slot13;
            report = report.bind(tangon)();
            _closure2_slot0 = report;
            if(zuuluu) { _fun00002_ip = 585; continue _fun00001 }
 62:
            if(michal) { _fun00002_ip = 456; continue _fun00001 }
 68:
            michal = _closure1_slot9;
            michal = michal.NO_MESSAGES;
            if(!(verify !== michal)) { _fun00002_ip = 327; continue _fun00001 }
 85:
            michal = _closure1_slot9;
            michal = michal.ALL_MESSAGES;
            if(!(verify !== michal)) { _fun00002_ip = 117; continue _fun00001 }
 99:
            michal = _closure1_slot9;
            michal = michal.ONLY_MENTIONS;
            if(!(verify !== michal)) { _fun00002_ip = 117; continue _fun00001 }
 113:
            michal = null;
            return michal;
 117:
            option = _closure1_slot0;
            michal = _closure1_slot2;
            foxtra = 11;
            zuuluu = michal[foxtra];
            zuuluu = option.bind(tangon)(zuuluu);
            oscard = zuuluu.intl;
            zuuluu = oscard.string;
            michal = michal[foxtra];
            michal = option.bind(tangon)(michal);
            michal = michal.t;
            if(golfie) { _fun00002_ip = 179; continue _fun00001 }
 164:
            golfie = michal.mUbulZ;
            golfie = zuuluu.bind(oscard)(golfie);
            _fun00002_ip = 192; continue _fun00001;
 179:
            michal = michal.l3yoAQ;
            golfie = zuuluu.bind(oscard)(michal);
 192:
            oscard = _closure1_slot10;
            zuuluu = _closure1_slot0;
            option = _closure1_slot2;
            michal = 10;
            michal = option[michal];
            michal = zuuluu.bind(tangon)(michal);
            zuuluu = michal.Text;
            michal = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            option = report.formHintText;
            michal['style'] = option;
            option = _closure1_slot9;
            option = option.ALL_MESSAGES;
            if(!(verify !== option)) { _fun00002_ip = 315; continue _fun00001 }
 261:
            romeon = _closure1_slot0;
            option = _closure1_slot2;
            verify = option[foxtra];
            verify = romeon.bind(tangon)(verify);
            offset = verify.intl;
            verify = offset.string;
            option = option[foxtra];
            option = romeon.bind(tangon)(option);
            option = option.t;
            option = option.GGAdHR;
            golfie = verify.bind(offset)(option);
 315:
            michal['children'] = golfie;
            michal = oscard.bind(tangon)(zuuluu, michal);
            return michal;
 327:
            oscard = _closure1_slot10;
            option = _closure1_slot0;
            romeon = _closure1_slot2;
            michal = 10;
            michal = romeon[michal];
            michal = option.bind(tangon)(michal);
            zuuluu = michal.Text;
            michal = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            golfie = report.formHintText;
            michal['style'] = golfie;
            golfie = 11;
            verify = romeon[golfie];
            verify = option.bind(tangon)(verify);
            offset = verify.intl;
            verify = offset.format;
            golfie = romeon[golfie];
            golfie = option.bind(tangon)(golfie);
            golfie = golfie.t;
            option = golfie.nRwUIC;
            golfie = {};
            romeon = function(argFoo) { // Original name: notificationHook
                report = _closure1_slot10;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 12;
                entity = zuuluu[entity];
                tangon = undefined;
                entity = michal.bind(tangon)(entity);
                zuuluu = entity.LegacyText;
                michal = {};
                entity = _closure2_slot0;
                entity = entity.orangeText;
                michal['style'] = entity;
                entity = argFoo;
                michal['children'] = entity;
                entity = 'notif';
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            golfie['notificationHook'] = romeon;
            golfie = verify.bind(offset)(option, golfie);
            michal['children'] = golfie;
            michal = oscard.bind(tangon)(zuuluu, michal);
            return michal;
 456:
            oscard = _closure1_slot10;
            option = _closure1_slot0;
            romeon = _closure1_slot2;
            michal = 10;
            michal = romeon[michal];
            michal = option.bind(tangon)(michal);
            zuuluu = michal.Text;
            michal = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            golfie = report.formHintText;
            michal['style'] = golfie;
            golfie = 11;
            verify = romeon[golfie];
            verify = option.bind(tangon)(verify);
            offset = verify.intl;
            verify = offset.format;
            golfie = romeon[golfie];
            golfie = option.bind(tangon)(golfie);
            golfie = golfie.t;
            option = golfie.O34r19;
            golfie = {};
            yankee = function(argFoo) { // Original name: mutedHook
                report = _closure1_slot10;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 12;
                entity = zuuluu[entity];
                tangon = undefined;
                entity = michal.bind(tangon)(entity);
                zuuluu = entity.LegacyText;
                michal = {};
                entity = _closure2_slot0;
                entity = entity.redText;
                michal['style'] = entity;
                entity = argFoo;
                michal['children'] = entity;
                entity = 'muted';
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            golfie['mutedHook'] = yankee;
            golfie = verify.bind(offset)(option, golfie);
            michal['children'] = golfie;
            michal = oscard.bind(tangon)(zuuluu, michal);
            return michal;
 585:
            zuuluu = _closure1_slot10;
            option = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 10;
            entity = verify[entity];
            entity = option.bind(tangon)(entity);
            michal = entity.Text;
            entity = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            report = report.formHintText;
            entity['style'] = report;
            report = 11;
            oscard = verify[report];
            oscard = option.bind(tangon)(oscard);
            golfie = oscard.intl;
            oscard = golfie.string;
            report = verify[report];
            report = option.bind(tangon)(report);
            report = report.t;
            report = report.t0mEt7;
            report = oscard.bind(golfie)(report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot14 = michal;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    entity = 0;
    option = golfie[entity];
    report = argCor;
    entity = undefined;
    report = report.bind(entity)(option);
    var _closure1_slot3 = report;
    report = 1;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.View;
    var _closure1_slot4 = report;
    report = 2;
    report = golfie[report];
    report = romeon.bind(entity)(report);
    var _closure1_slot5 = report;
    report = 3;
    report = golfie[report];
    report = romeon.bind(entity)(report);
    var _closure1_slot6 = report;
    report = 4;
    report = golfie[report];
    report = romeon.bind(entity)(report);
    var _closure1_slot7 = report;
    report = 5;
    report = golfie[report];
    report = romeon.bind(entity)(report);
    var _closure1_slot8 = report;
    report = 6;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.UserNotificationSettings;
    var _closure1_slot9 = report;
    report = 7;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.jsx;
    var _closure1_slot10 = option;
    option = report.jsxs;
    var _closure1_slot11 = option;
    report = report.Fragment;
    var _closure1_slot12 = report;
    report = 8;
    report = golfie[report];
    verify = oscard.bind(entity)(report);
    option = verify.createStyles;
    report = {};
    offset = {};
    yankee = 9;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = foxtra;
    report['option'] = offset;
    offset = {};
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_MODIFIER_ACTIVE;
    offset['backgroundColor'] = foxtra;
    report['optionActive'] = offset;
    offset = {};
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_MODIFIER_ACCENT;
    offset['backgroundColor'] = foxtra;
    report['divider'] = offset;
    offset = {};
    foxtra = 18;
    offset['lineHeight'] = foxtra;
    report['formHintText'] = offset;
    offset = {};
    foxtra = 16;
    offset['paddingHorizontal'] = foxtra;
    report['hintContainer'] = offset;
    offset = {};
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.unsafe_rawColors;
    foxtra = foxtra.RED_400;
    offset['color'] = foxtra;
    report['redText'] = offset;
    offset = {};
    yankee = golfie[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    yankee = yankee.YELLOW_300;
    offset['color'] = yankee;
    report['orangeText'] = offset;
    offset = {'display': 'flex', 'flex': 0, 'flexDirection': 'row'};
    report['valueArrow'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot13 = report;
    report = 24;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/settings/native/MuteSettingsActionSheet.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: MuteSettings
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            zuuluu = argFoo;
            report = zuuluu.guildId;
            var _closure2_slot0 = report;
            michal = zuuluu.channelId;
            var _closure2_slot1 = michal;
            option = zuuluu.onOptionPress;
            var _closure2_slot2 = option;
            yankee = zuuluu.canGoFullSettings;
            tangon = undefined;
            var _closure2_slot8 = tangon;
            zuuluu = _closure1_slot13;
            source = zuuluu.bind(tangon)();
            var _closure2_slot3 = source;
            oscard = _closure1_slot6;
            zuuluu = oscard.getGuild;
            zuuluu = zuuluu.bind(oscard)(report);
            var _closure2_slot4 = zuuluu;
            golfie = _closure1_slot5;
            oscard = golfie.getChannel;
            update = oscard.bind(golfie)(michal);
            var _closure2_slot5 = update;
            golfie = _closure1_slot0;
            verify = _closure1_slot2;
            oscard = 13;
            oscard = verify[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = golfie.useVoiceActivityNotificationSettingsExperiment;
            cntext = oscard.bind(golfie)(update);
            golfie = _closure1_slot3;
            offset = golfie.useMemo;
            verify = new Array(1);
            verify[0] = michal;
            oscard = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 14;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.getMuteSettings;
                entity = _closure2_slot1;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            verify = offset.bind(golfie)(oscard, verify);
            echoed = verify.muteConfig;
            sizing = verify.muted;
            oscard = verify.messageNotifications;
            var _closure2_slot6 = oscard;
            output = verify.guildMuted;
            target = verify.guildMessageNotifications;
            offset = golfie.useCallback;
            verify = new Array(3);
            verify[0] = michal;
            verify[1] = report;
            verify[2] = option;
            option = function(argFoo) {
                report = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 15;
                zuuluu = tangon[entity];
                entity = undefined;
                report = report.bind(entity)(zuuluu);
                zuuluu = report.hideActionSheet;
                zuuluu = zuuluu.bind(report)();
                zuuluu = _closure1_slot0;
                michal = 14;
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.handleMuteSettingPress;
                michal = {};
                oscard = _closure2_slot1;
                michal['channelId'] = oscard;
                oscard = _closure2_slot0;
                michal['guildId'] = oscard;
                oscard = argFoo;
                michal['muteDurationSeconds'] = oscard;
                report = _closure2_slot2;
                michal['onOptionPress'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            option = offset.bind(golfie)(option, verify);
            var _closure2_slot7 = option;
            verify = golfie.useCallback;
            option = new Array(2);
            option[0] = michal;
            option[1] = report;
            report = function() {
                report = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 15;
                zuuluu = tangon[entity];
                entity = undefined;
                report = report.bind(entity)(zuuluu);
                zuuluu = report.hideActionSheet;
                zuuluu = zuuluu.bind(report)();
                zuuluu = _closure1_slot0;
                michal = 14;
                michal = tangon[michal];
                report = zuuluu.bind(entity)(michal);
                tangon = report.handleUnmutePress;
                zuuluu = _closure2_slot1;
                michal = _closure2_slot0;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            papara = verify.bind(golfie)(report, option);
            verify = golfie.useMemo;
            option = new Array(2);
            option[0] = update;
            option[1] = zuuluu;
            report = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 14;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.getMuteSettingLabel;
                michal = _closure2_slot5;
                entity = _closure2_slot4;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            kiloes = verify.bind(golfie)(report, option);
            option = golfie.useMemo;
            report = new Array(2);
            report[0] = update;
            report[1] = zuuluu;
            zuuluu = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 14;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.getMuteSettingSublabel;
                michal = _closure2_slot5;
                entity = _closure2_slot4;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            backup = option.bind(golfie)(zuuluu, report);
            report = golfie.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 14;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.handleNotificationSettingsPress;
                michal = _closure2_slot1;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            result = report.bind(golfie)(michal, zuuluu);
            verify = null;
            if(!(verify != update)) { _fun00004_ip = 356; continue _fun00003 }
 353:
            if(sizing) { _fun00004_ip = 446; continue _fun00003 }
 356:
            zuuluu = _closure1_slot0;
            golfie = _closure1_slot2;
            michal = 14;
            michal = golfie[michal];
            report = zuuluu.bind(tangon)(michal);
            michal = report.getMuteOptions;
            offset = michal.bind(report)();
            _closure2_slot8 = offset;
            report = _closure1_slot10;
            michal = 16;
            michal = golfie[michal];
            michal = zuuluu.bind(tangon)(michal);
            zuuluu = michal.FormSection;
            michal = {};
            option = offset.map;
            golfie = function(argFoo, argBar) {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = argFoo;
                    romeon = entity.label;
                    entity = entity.duration;
                    var _closure3_slot0 = entity;
                    tangon = _closure1_slot11;
                    zuuluu = _closure1_slot12;
                    michal = {};
                    option = _closure1_slot10;
                    oscard = _closure1_slot0;
                    entity = _closure1_slot2;
                    yankee = 16;
                    report = entity[yankee];
                    entity = undefined;
                    report = oscard.bind(entity)(report);
                    oscard = report.FormRow;
                    report = {};
                    foxtra = _closure2_slot3;
                    foxtra = foxtra.option;
                    report['DEPRECATED_style'] = foxtra;
                    report['label'] = romeon;
                    verify = function() { // Original name: onPress
                        zuuluu = _closure2_slot7;
                        michal = _closure3_slot0;
                        entity = undefined;
                        entity = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    report['onPress'] = verify;
                    oscard = option.bind(entity)(oscard, report);
                    report = new Array(2);
                    report[0] = oscard;
                    oscard = _closure2_slot8;
                    option = oscard.length;
                    oscard = 1;
                    option = option - oscard;
                    oscard = argBar;
                    oscard = oscard !== option;
                    if(!oscard) { _fun00006_ip = 188; continue _fun00005 }
 139:
                    verify = _closure1_slot10;
                    option = _closure1_slot0;
                    golfie = _closure1_slot2;
                    golfie = golfie[yankee];
                    golfie = option.bind(entity)(golfie);
                    option = golfie.FormDivider;
                    golfie = {};
                    offset = _closure2_slot3;
                    offset = offset.divider;
                    golfie['style'] = offset;
                    oscard = verify.bind(entity)(option, golfie);
 188:
                    report[1] = oscard;
                    michal['children'] = report;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                }
            };
            golfie = option.bind(offset)(golfie);
            michal['children'] = golfie;
            offset = report.bind(tangon)(zuuluu, michal);
            _fun00004_ip = 803; continue _fun00003;
 446:
            report = _closure1_slot11;
            michal = _closure1_slot3;
            zuuluu = michal.Fragment;
            michal = {};
            ctrled = _closure1_slot10;
            quebec = _closure1_slot0;
            option = _closure1_slot2;
            romeon = 16;
            golfie = option[romeon];
            golfie = quebec.bind(tangon)(golfie);
            foxtra = golfie.FormSection;
            golfie = {};
            record = _closure1_slot10;
            romeon = option[romeon];
            romeon = quebec.bind(tangon)(romeon);
            config = romeon.FormRow;
            vacuum = {};
            limora = _closure1_slot10;
            romeon = _closure1_slot1;
            status = 17;
            status = option[status];
            sierra = romeon.bind(tangon)(status);
            status = {};
            variable38 = true;
            status['disableColor'] = variable38;
            whisks = 18;
            whisks = option[whisks];
            whisks = romeon.bind(tangon)(whisks);
            status['source'] = whisks;
            status = limora.bind(tangon)(sierra, status);
            vacuum['leading'] = status;
            status = source.option;
            vacuum['DEPRECATED_style'] = status;
            status = 11;
            sierra = option[status];
            sierra = quebec.bind(tangon)(sierra);
            whisks = sierra.intl;
            limora = whisks.format;
            status = option[status];
            status = quebec.bind(tangon)(status);
            status = status.t;
            sierra = status.eC+9rq;
            status = {};
            equals = 19;
            equals = option[equals];
            variable37 = quebec.bind(tangon)(equals);
            variable36 = variable37.computeChannelName;
            variable41 = _closure1_slot8;
            variable40 = _closure1_slot7;
            variable43 = variable37;
            variable42 = update;
            variable39 = true;
            equals = variable43[variable36](variable42, variable41, variable40, variable39, variable38);
            status['name'] = equals;
            status = limora.bind(whisks)(sierra, status);
            vacuum['label'] = status;
            vacuum['onPress'] = papara;
            vacuum = record.bind(tangon)(config, vacuum);
            golfie['children'] = vacuum;
            foxtra = ctrled.bind(tangon)(foxtra, golfie);
            golfie = new Array(2);
            golfie[0] = foxtra;
            foxtra = _closure1_slot10;
            vacuum = 20;
            option = option[vacuum];
            romeon = romeon.bind(tangon)(option);
            option = {};
            option['muteConfig'] = echoed;
            echoed = update.isPrivate;
            echoed = echoed.bind(update)();
            ctrled = _closure1_slot0;
            update = _closure1_slot2;
            update = update[vacuum];
            update = ctrled.bind(tangon)(update);
            update = update.MuteSettingType;
            if(echoed) { _fun00004_ip = 773; continue _fun00003 }
 765:
            echoed = update.CHANNEL;
            _fun00004_ip = 779; continue _fun00003;
 773:
            echoed = update.DM;
 779:
            option['type'] = echoed;
            option = foxtra.bind(tangon)(romeon, option);
            golfie[1] = option;
            michal['children'] = golfie;
            offset = report.bind(tangon)(zuuluu, michal);
 803:
            report = _closure1_slot3;
            zuuluu = report.useMemo;
            michal = new Array(1);
            michal[0] = oscard;
            entity = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 14;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.getMessageNotificationsText;
                entity = _closure2_slot6;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            papara = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot10;
            romeon = _closure1_slot0;
            echoed = _closure1_slot2;
            entity = 21;
            entity = echoed[entity];
            entity = romeon.bind(tangon)(entity);
            michal = entity.RedesignCompat;
            entity = {};
            golfie = _closure1_slot11;
            report = 22;
            report = echoed[report];
            report = romeon.bind(tangon)(report);
            oscard = report.ActionSheet;
            report = {};
            foxtra = _closure1_slot10;
            option = 23;
            option = echoed[option];
            option = romeon.bind(tangon)(option);
            romeon = option.BottomSheetTitleHeader;
            option = {};
            option['title'] = kiloes;
            option['subtitle'] = backup;
            romeon = foxtra.bind(tangon)(romeon, option);
            option = new Array(3);
            option[0] = romeon;
            option[1] = offset;
            offset = true;
            verify = null;
            if(!(offset === yankee)) { _fun00004_ip = 1293; continue _fun00003 }
 951:
            romeon = _closure1_slot10;
            vacuum = _closure1_slot0;
            config = _closure1_slot2;
            ctrled = 16;
            offset = config[ctrled];
            offset = vacuum.bind(tangon)(offset);
            yankee = offset.FormSection;
            offset = {};
            kiloes = _closure1_slot10;
            foxtra = config[ctrled];
            foxtra = vacuum.bind(tangon)(foxtra);
            backup = foxtra.FormHint;
            foxtra = {};
            record = _closure1_slot10;
            update = _closure1_slot14;
            echoed = {};
            echoed['isMuted'] = sizing;
            echoed['isGuildMuted'] = output;
            echoed['guildMessageNotifications'] = target;
            echoed['showVoiceActivityNotificationOptions'] = cntext;
            echoed = record.bind(tangon)(update, echoed);
            foxtra['children'] = echoed;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            offset['hint'] = foxtra;
            kiloes = _closure1_slot10;
            foxtra = config[ctrled];
            foxtra = vacuum.bind(tangon)(foxtra);
            backup = foxtra.FormRow;
            foxtra = {};
            echoed = source.option;
            foxtra['DEPRECATED_style'] = echoed;
            echoed = 11;
            update = config[echoed];
            update = vacuum.bind(tangon)(update);
            record = update.intl;
            update = record.string;
            echoed = config[echoed];
            echoed = vacuum.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.h850Sk;
            echoed = update.bind(record)(echoed);
            foxtra['label'] = echoed;
            foxtra['onPress'] = result;
            update = _closure1_slot11;
            echoed = _closure1_slot4;
            result = {};
            source = source.valueArrow;
            result['style'] = source;
            cntext = _closure1_slot10;
            source = 10;
            source = config[source];
            source = vacuum.bind(tangon)(source);
            record = source.Text;
            source = {'variant': 'text-md/medium', 'color': 'text-muted'};
            source['children'] = papara;
            record = cntext.bind(tangon)(record, source);
            source = new Array(2);
            source[0] = record;
            sequen = _closure1_slot10;
            ctrled = config[ctrled];
            ctrled = vacuum.bind(tangon)(ctrled);
            ctrled = ctrled.FormRow;
            vacuum = ctrled.Arrow;
            ctrled = {};
            ctrled = sequen.bind(tangon)(vacuum, ctrled);
            source[1] = ctrled;
            result['children'] = source;
            result = update.bind(tangon)(echoed, result);
            foxtra['trailing'] = result;
            if(sizing) { _fun00004_ip = 1273; continue _fun00003 }
 1270:
            sizing = output;
 1273:
            foxtra['disabled'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            offset['children'] = foxtra;
            verify = romeon.bind(tangon)(yankee, offset);
 1293:
            option[2] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['MuteSettingsHint'] = michal;
    return entity;
})();