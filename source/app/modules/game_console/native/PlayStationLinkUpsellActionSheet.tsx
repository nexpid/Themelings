// app/modules/game_console/native/PlayStationLinkUpsellActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    tangon = tangon.Image;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.PlatformTypes;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ContentDismissActionType;
    var _closure1_slot8 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot9 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'backgroundColor': null, 'padding': 16, 'paddingTop': 24, 'justifyContent': 'center'};
    offset = 7;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeon;
    romeon = 24;
    foxtra = 'center';
    tangon['container'] = verify;
    verify = {'alignSelf': 'center', 'height': 180};
    tangon['art'] = verify;
    verify = {'marginTop': 16, 'alignItems': 'center'};
    tangon['info'] = verify;
    verify = {'marginVertical': 16, 'textAlign': 'center'};
    tangon['title'] = verify;
    verify = {};
    verify['textAlign'] = foxtra;
    tangon['subtitle'] = verify;
    verify = {};
    verify['marginTop'] = romeon;
    tangon['footer'] = verify;
    verify = {};
    romeon = 8;
    verify['marginBottom'] = romeon;
    tangon['button'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_SECONDARY;
    verify['color'] = offset;
    tangon['cancelButtonText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/game_console/native/PlayStationLinkUpsellActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: PlayStationLinkUpsellActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.markAsDismissed;
            var _closure2_slot0 = entity;
            michal = _closure1_slot11;
            tangon = undefined;
            ctrled = michal.bind(tangon)();
            yankee = _closure1_slot0;
            offset = _closure1_slot2;
            michal = 8;
            michal = offset[michal];
            oscard = yankee.bind(tangon)(michal);
            report = oscard.useStateFromStores;
            michal = _closure1_slot6;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                tangon = _closure1_slot6;
                zuuluu = tangon.getAccount;
                entity = _closure1_slot7;
                entity = entity.PLAYSTATION;
                michal = null;
                entity = zuuluu.bind(tangon)(michal, entity);
                entity = michal != entity;
                return entity;
            };
            kiloes = report.bind(oscard)(zuuluu, michal);
            foxtra = _closure1_slot1;
            michal = 9;
            michal = offset[michal];
            michal = foxtra.bind(tangon)(michal);
            michal = michal.bind(tangon)();
            sizing = michal.bottom;
            report = _closure1_slot3;
            zuuluu = report.useEffect;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                entity = function() {
                    zuuluu = _closure2_slot0;
                    entity = _closure1_slot8;
                    michal = entity.UNKNOWN;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot9;
            entity = 10;
            entity = offset[entity];
            entity = yankee.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {};
            report = true;
            entity['startExpanded'] = report;
            golfie = _closure1_slot10;
            oscard = _closure1_slot4;
            report = {};
            option = ctrled.container;
            report['style'] = option;
            verify = _closure1_slot5;
            option = {};
            romeon = 'contain';
            option['resizeMode'] = romeon;
            romeon = ctrled.art;
            option['style'] = romeon;
            romeon = 11;
            romeon = offset[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            option['source'] = romeon;
            verify = zuuluu.bind(tangon)(verify, option);
            option = new Array(3);
            option[0] = verify;
            verify = {};
            romeon = ctrled.info;
            verify['style'] = romeon;
            backup = 12;
            offset = offset[backup];
            offset = yankee.bind(tangon)(offset);
            yankee = offset.Text;
            offset = {};
            romeon = 'heading-xl/extrabold';
            offset['variant'] = romeon;
            romeon = ctrled.title;
            offset['style'] = romeon;
            foxtra = _closure1_slot0;
            romeon = _closure1_slot2;
            update = 13;
            output = romeon[update];
            output = foxtra.bind(tangon)(output);
            result = output.intl;
            output = result.string;
            romeon = romeon[update];
            romeon = foxtra.bind(tangon)(romeon);
            foxtra = romeon.t;
            if(kiloes) { _fun00002_ip = 350; continue _fun00001 }
 335:
            romeon = foxtra.FKmud3;
            romeon = output.bind(result)(romeon);
            _fun00002_ip = 363; continue _fun00001;
 350:
            foxtra = foxtra.623c8f;
            romeon = output.bind(result)(foxtra);
 363:
            offset['children'] = romeon;
            yankee = zuuluu.bind(tangon)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            foxtra = _closure1_slot9;
            romeon = _closure1_slot0;
            yankee = _closure1_slot2;
            yankee = yankee[backup];
            yankee = romeon.bind(tangon)(yankee);
            romeon = yankee.Text;
            yankee = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
            backup = ctrled.subtitle;
            yankee['style'] = backup;
            output = _closure1_slot0;
            backup = _closure1_slot2;
            result = backup[update];
            result = output.bind(tangon)(result);
            vacuum = result.intl;
            result = vacuum.string;
            backup = backup[update];
            backup = output.bind(tangon)(backup);
            output = backup.t;
            if(kiloes) { _fun00002_ip = 490; continue _fun00001 }
 475:
            backup = output.Q9g0Cg;
            backup = result.bind(vacuum)(backup);
            _fun00002_ip = 503; continue _fun00001;
 490:
            output = output.LWC6fX;
            backup = result.bind(vacuum)(output);
 503:
            yankee['children'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            offset[1] = yankee;
            verify['children'] = offset;
            verify = golfie.bind(tangon)(oscard, verify);
            option[1] = verify;
            yankee = _closure1_slot10;
            offset = _closure1_slot4;
            verify = {};
            foxtra = ctrled.footer;
            romeon = new Array(2);
            romeon[0] = foxtra;
            foxtra = {};
            backup = 16;
            backup = backup - sizing;
            foxtra['marginBottom'] = backup;
            romeon[1] = foxtra;
            verify['style'] = romeon;
            backup = _closure1_slot9;
            output = _closure1_slot1;
            sizing = _closure1_slot2;
            result = 14;
            romeon = sizing[result];
            foxtra = output.bind(tangon)(romeon);
            romeon = {};
            vacuum = ctrled.button;
            romeon['style'] = vacuum;
            sizing = sizing[result];
            sizing = output.bind(tangon)(sizing);
            sizing = sizing.Colors;
            sizing = sizing.BRAND;
            romeon['color'] = sizing;
            sequen = _closure1_slot0;
            sizing = _closure1_slot2;
            output = sizing[update];
            output = sequen.bind(tangon)(output);
            vacuum = output.intl;
            output = vacuum.string;
            sizing = sizing[update];
            sizing = sequen.bind(tangon)(sizing);
            sizing = sizing.t;
            if(kiloes) { _fun00002_ip = 694; continue _fun00001 }
 681:
            kiloes = sizing.S0W8Z2;
            kiloes = output.bind(vacuum)(kiloes);
            _fun00002_ip = 705; continue _fun00001;
 694:
            sizing = sizing.vD60Pj;
            kiloes = output.bind(vacuum)(sizing);
 705:
            romeon['text'] = kiloes;
            kiloes = function() { // Original name: onPress
                tangon = _closure2_slot0;
                entity = _closure1_slot8;
                zuuluu = entity.UNKNOWN;
                entity = undefined;
                zuuluu = tangon.bind(entity)(zuuluu);
                tangon = _closure1_slot1;
                report = _closure1_slot2;
                zuuluu = 15;
                zuuluu = report[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                tangon = report.showModal;
                michal = _closure1_slot7;
                zuuluu = michal.PLAYSTATION;
                michal = ['Console Voice Bottomsheet Upsell'];
                michal = tangon.bind(report)(michal, zuuluu);
                return entity;
            };
            romeon['onPress'] = kiloes;
            foxtra = backup.bind(tangon)(foxtra, romeon);
            romeon = new Array(2);
            romeon[0] = foxtra;
            kiloes = _closure1_slot9;
            output = _closure1_slot1;
            sizing = _closure1_slot2;
            foxtra = sizing[result];
            backup = output.bind(tangon)(foxtra);
            foxtra = {};
            vacuum = ctrled.button;
            foxtra['style'] = vacuum;
            ctrled = ctrled.cancelButtonText;
            foxtra['textStyle'] = ctrled;
            vacuum = _closure1_slot0;
            source = sizing[update];
            source = vacuum.bind(tangon)(source);
            ctrled = source.intl;
            source = ctrled.string;
            update = sizing[update];
            update = vacuum.bind(tangon)(update);
            update = update.t;
            update = update.f3Pet7;
            update = source.bind(ctrled)(update);
            foxtra['text'] = update;
            echoed = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 16;
                michal = michal[entity];
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                entity = michal.hideActionSheet;
                entity = entity.bind(michal)();
                return entity;
            };
            foxtra['onPress'] = echoed;
            sizing = sizing[result];
            sizing = output.bind(tangon)(sizing);
            sizing = sizing.Colors;
            sizing = sizing.TRANSPARENT;
            foxtra['color'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            romeon[1] = foxtra;
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[2] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();