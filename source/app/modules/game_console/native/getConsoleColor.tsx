// app/modules/game_console/native/getConsoleColor.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    verify = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    options = tango.PlatformTypes;
    tango = {};
    yankee = options.XBOX;
    golf = 1;
    offset = oscar[golf];
    offset = verify.bind(entity)(offset);
    offset = offset.unsafe_rawColors;
    offset = offset.XBOX;
    tango[yankee] = offset;
    yankee = options.PLAYSTATION;
    offset = oscar[golf];
    offset = verify.bind(entity)(offset);
    offset = offset.unsafe_rawColors;
    offset = offset.PLAYSTATION;
    tango[yankee] = offset;
    options = options.PLAYSTATION_STAGING;
    golf = oscar[golf];
    golf = verify.bind(entity)(golf);
    golf = golf.unsafe_rawColors;
    golf = golf.PLAYSTATION;
    tango[options] = golf;
    var _closure1_slot0 = tango;
    tango = 2;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/game_console/native/getConsoleColor.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: getConsoleColor
        mike = _closure1_slot0;
        entity = argFoo;
        entity = mike[entity];
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();