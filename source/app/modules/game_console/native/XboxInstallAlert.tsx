// app/modules/game_console/native/XboxInstallAlert.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.XBOX_ANDROID_APP_LINK;
    var _closure1_slot3 = golfie;
    tangon = tangon.XBOX_IOS_APP_LINK;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'tintColor': null, 'width': 20, 'height': 20, 'marginLeft': 8};
    offset = 4;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.WHITE;
    verify['tintColor'] = offset;
    tangon['externalLinkIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/game_console/native/XboxInstallAlert.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: XboxInstallAlert
        entity = _closure1_slot6;
        tangon = undefined;
        entity = entity.bind(tangon)();
        var _closure2_slot0 = entity;
        zuuluu = _closure1_slot5;
        michal = _closure1_slot1;
        offset = _closure1_slot2;
        entity = 5;
        entity = offset[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        romeon = argFoo;
        foxtra = entity;
        golfie = copyDataProperties(foxtra, romeon);
        verify = _closure1_slot0;
        oscard = 6;
        golfie = offset[oscard];
        golfie = verify.bind(tangon)(golfie);
        yankee = golfie.intl;
        option = yankee.string;
        golfie = offset[oscard];
        golfie = verify.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.12Kx2t;
        option = option.bind(yankee)(golfie);
        golfie = 'title';
        entity[golfie] = option;
        golfie = offset[oscard];
        golfie = verify.bind(tangon)(golfie);
        yankee = golfie.intl;
        option = yankee.string;
        golfie = offset[oscard];
        golfie = verify.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.msZW3t;
        option = option.bind(yankee)(golfie);
        golfie = 'body';
        entity[golfie] = option;
        golfie = offset[oscard];
        golfie = verify.bind(tangon)(golfie);
        yankee = golfie.intl;
        option = yankee.string;
        golfie = offset[oscard];
        golfie = verify.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.n+VrqK;
        option = option.bind(yankee)(golfie);
        golfie = 'confirmText';
        entity[golfie] = option;
        golfie = offset[oscard];
        golfie = verify.bind(tangon)(golfie);
        option = golfie.intl;
        golfie = option.string;
        oscard = offset[oscard];
        oscard = verify.bind(tangon)(oscard);
        oscard = oscard.t;
        oscard = oscard.kYaBOj;
        golfie = golfie.bind(option)(oscard);
        oscard = 'cancelText';
        entity[oscard] = golfie;
        golfie = true;
        oscard = 'fillCancelText';
        entity[oscard] = golfie;
        golfie = function() { // Original name: renderConfirmRightIcon
            tangon = _closure1_slot5;
            oscard = _closure1_slot1;
            golfie = _closure1_slot2;
            entity = 7;
            entity = golfie[entity];
            zuuluu = undefined;
            michal = oscard.bind(zuuluu)(entity);
            entity = {};
            report = 8;
            report = golfie[report];
            report = oscard.bind(zuuluu)(report);
            entity['source'] = report;
            report = _closure2_slot0;
            report = report.externalLinkIcon;
            entity['style'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        oscard = 'renderConfirmRightIcon';
        entity[oscard] = golfie;
        oscard = function() { // Original name: onConfirm
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 9;
                zuuluu = zuuluu[entity];
                entity = undefined;
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.isAndroid;
                report = zuuluu.bind(tangon)();
                tangon = _closure1_slot1;
                oscard = _closure1_slot2;
                zuuluu = 10;
                zuuluu = oscard[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.openURL;
                if(report) { _fun00002_ip = 74; continue _fun00001 }
 63:
                report = _closure1_slot4;
                report = zuuluu.bind(tangon)(report);
                _fun00002_ip = 83; continue _fun00001;
 74:
                michal = _closure1_slot3;
                michal = zuuluu.bind(tangon)(michal);
 83:
                return entity;
            }
        };
        report = 'onConfirm';
        entity[report] = oscard;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();