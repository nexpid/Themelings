// app/modules/launchpad/native/useLaunchPadState.native.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.LAUNCH_PAD_PULL_TAB_MAX_POSITION;
    var _closure1_slot4 = golf;
    tango = tango.LAUNCH_PAD_PULL_TAB_SCALE_OFFSET;
    var _closure1_slot5 = tango;
    tango = {'active': false, 'initialLaunchPadPosition': 0, 'initialPullTabPosition': 0, 'initialTouchX': 0, 'initialTouchY': 0, 'positionOffsetX': 0, 'positionOffsetY': 0, 'startTime': 4294967295, 'requiresPop': false, 'startShown': false};
    var _closure1_slot6 = tango;
    tango = {'position': null, 'scale': 1, 'offset': 0, 'minimized': false};
    golf = 2;
    golf = oscar[golf];
    options = report.bind(entity)(golf);
    golf = options.getLaunchPadPullTabPositionCached;
    golf = golf.bind(options)();
    tango['position'] = golf;
    var _closure1_slot7 = tango;
    tango = {};
    golf = 'function useLaunchPadStateNativeTsx1(shown){const{launchPadShown}=this.__closure;launchPadShown.set(shown);}';
    tango['code'] = golf;
    var _closure1_slot8 = tango;
    tango = {};
    golf = 'function useLaunchPadStateNativeTsx2(value){const{launchPadSharedState}=this.__closure;launchPadSharedState.set(Math.max(Math.min(value,1),0));}';
    tango['code'] = golf;
    var _closure1_slot9 = tango;
    tango = {};
    golf = 'function useLaunchPadStateNativeTsx3(translationY){const{gestureState,getWindowDimensionsWorklet,launchPadPullTabState,LAUNCH_PAD_PULL_TAB_MAX_POSITION,getSafeAreaInsetsWorklet,LAUNCH_PAD_PULL_TAB_SCALE_OFFSET,updateSharedValueIfChanged,runOnJS,persistLaunchPadPullTabPosition}=this.__closure;const positionY=gestureState.get().initialPullTabPosition+translationY;const positionYMax=getWindowDimensionsWorklet().height-launchPadPullTabState.get().offset-LAUNCH_PAD_PULL_TAB_MAX_POSITION;const positionYMin=getSafeAreaInsetsWorklet().top+LAUNCH_PAD_PULL_TAB_SCALE_OFFSET;const position=Math.max(Math.min(positionY,positionYMax),positionYMin);updateSharedValueIfChanged(launchPadPullTabState,{position:position});runOnJS(persistLaunchPadPullTabPosition)(position);}';
    tango['code'] = golf;
    var _closure1_slot10 = tango;
    tango = {};
    golf = 'function useLaunchPadStateNativeTsx4(position,offset){const{updateSharedValueIfChanged,launchPadPullTabState}=this.__closure;updateSharedValueIfChanged(launchPadPullTabState,{position:position,offset:offset});}';
    tango['code'] = golf;
    var _closure1_slot11 = tango;
    tango = {};
    golf = 'function useLaunchPadStateNativeTsx5(scale){const{updateSharedValueIfChanged,launchPadPullTabState}=this.__closure;updateSharedValueIfChanged(launchPadPullTabState,{scale:scale});}';
    tango['code'] = golf;
    var _closure1_slot12 = tango;
    tango = {};
    golf = 'function useLaunchPadStateNativeTsx6(minimized){const{updateSharedValueIfChanged,launchPadPullTabState}=this.__closure;updateSharedValueIfChanged(launchPadPullTabState,{minimized:minimized});}';
    tango['code'] = golf;
    var _closure1_slot13 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/launchpad/native/useLaunchPadState.native.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: useLaunchPadState
        options = _closure1_slot0;
        verify = _closure1_slot2;
        tango = 3;
        zulu = verify[tango];
        golf = undefined;
        oscar = options.bind(golf)(zulu);
        report = oscar.useSharedValue;
        zulu = _closure1_slot6;
        zulu = report.bind(oscar)(zulu);
        var _closure2_slot0 = zulu;
        report = verify[tango];
        offset = options.bind(golf)(report);
        oscar = offset.useSharedValue;
        report = _closure1_slot7;
        report = oscar.bind(offset)(report);
        var _closure2_slot1 = report;
        oscar = verify[tango];
        yankee = options.bind(golf)(oscar);
        offset = yankee.useSharedValue;
        oscar = 0;
        oscar = offset.bind(yankee)(oscar);
        var _closure2_slot2 = oscar;
        tango = verify[tango];
        options = options.bind(golf)(tango);
        golf = options.useSharedValue;
        tango = false;
        tango = golf.bind(options)(tango);
        var _closure2_slot3 = tango;
        options = _closure1_slot3;
        golf = options.useMemo;
        mike = new Array(4);
        mike[0] = zulu;
        mike[1] = report;
        mike[2] = oscar;
        mike[3] = tango;
        entity = function() {
            entity = {};
            tango = function(argFoo) { // Original name: t
                zulu = _closure2_slot3;
                mike = zulu.set;
                entity = argFoo;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            zulu = {};
            oscar = _closure2_slot3;
            zulu['launchPadShown'] = oscar;
            tango['__closure'] = zulu;
            zulu = 17051366113851.0;
            tango['__workletHash'] = zulu;
            oscar = _closure1_slot8;
            tango['__initData'] = oscar;
            entity['setLaunchPadShown'] = tango;
            tango = function(argFoo) { // Original name: s
                zulu = _closure2_slot2;
                mike = zulu.set;
                entity = global;
                oscar = entity.Math;
                report = oscar.max;
                options = entity.Math;
                golf = options.min;
                tango = argFoo;
                entity = 1;
                tango = golf.bind(options)(tango, entity);
                entity = 0;
                entity = report.bind(oscar)(tango, entity);
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            oscar = {};
            golf = _closure2_slot2;
            oscar['launchPadSharedState'] = golf;
            tango['__closure'] = oscar;
            oscar = 128574367175.0;
            tango['__workletHash'] = oscar;
            oscar = _closure1_slot9;
            tango['__initData'] = oscar;
            entity['setLaunchPadPosition'] = tango;
            tango = function(argFoo) { // Original name: l
                mike = _closure2_slot0;
                entity = mike.get;
                entity = entity.bind(mike)();
                mike = entity.initialPullTabPosition;
                entity = argFoo;
                romeo = mike + entity;
                oscar = _closure1_slot0;
                golf = _closure1_slot2;
                entity = 4;
                tango = golf[entity];
                entity = undefined;
                report = oscar.bind(entity)(tango);
                tango = report.getWindowDimensionsWorklet;
                tango = tango.bind(report)();
                tango = tango.height;
                report = _closure2_slot1;
                zulu = report.get;
                zulu = zulu.bind(report)();
                zulu = zulu.offset;
                tango = tango - zulu;
                zulu = _closure1_slot4;
                yankee = tango - zulu;
                zulu = 5;
                zulu = golf[zulu];
                tango = oscar.bind(entity)(zulu);
                zulu = tango.getSafeAreaInsetsWorklet;
                zulu = zulu.bind(tango)();
                tango = zulu.top;
                zulu = _closure1_slot5;
                verify = tango + zulu;
                zulu = global;
                options = zulu.Math;
                tango = options.max;
                offset = zulu.Math;
                zulu = offset.min;
                zulu = zulu.bind(offset)(romeo, yankee);
                zulu = tango.bind(options)(zulu, verify);
                tango = _closure1_slot1;
                mike = 6;
                mike = golf[mike];
                tango = tango.bind(entity)(mike);
                mike = {};
                mike['position'] = zulu;
                mike = tango.bind(entity)(report, mike);
                mike = 3;
                mike = golf[mike];
                report = oscar.bind(entity)(mike);
                tango = report.runOnJS;
                mike = 2;
                mike = golf[mike];
                mike = oscar.bind(entity)(mike);
                mike = mike.persistLaunchPadPullTabPosition;
                mike = tango.bind(report)(mike);
                mike = mike.bind(entity)(zulu);
                return entity;
            };
            offset = {};
            oscar = _closure2_slot0;
            offset['gestureState'] = oscar;
            romeo = _closure1_slot0;
            verify = _closure1_slot2;
            oscar = 4;
            oscar = verify[oscar];
            options = undefined;
            oscar = romeo.bind(options)(oscar);
            oscar = oscar.getWindowDimensionsWorklet;
            offset['getWindowDimensionsWorklet'] = oscar;
            report = _closure2_slot1;
            offset['launchPadPullTabState'] = report;
            oscar = _closure1_slot4;
            offset['LAUNCH_PAD_PULL_TAB_MAX_POSITION'] = oscar;
            oscar = 5;
            oscar = verify[oscar];
            oscar = romeo.bind(options)(oscar);
            oscar = oscar.getSafeAreaInsetsWorklet;
            offset['getSafeAreaInsetsWorklet'] = oscar;
            oscar = _closure1_slot5;
            offset['LAUNCH_PAD_PULL_TAB_SCALE_OFFSET'] = oscar;
            golf = _closure1_slot1;
            oscar = 6;
            yankee = verify[oscar];
            yankee = golf.bind(options)(yankee);
            offset['updateSharedValueIfChanged'] = yankee;
            yankee = 3;
            yankee = verify[yankee];
            yankee = romeo.bind(options)(yankee);
            yankee = yankee.runOnJS;
            offset['runOnJS'] = yankee;
            yankee = 2;
            yankee = verify[yankee];
            yankee = romeo.bind(options)(yankee);
            yankee = yankee.persistLaunchPadPullTabPosition;
            offset['persistLaunchPadPullTabPosition'] = yankee;
            tango['__closure'] = offset;
            offset = 660113647457.0;
            tango['__workletHash'] = offset;
            offset = _closure1_slot10;
            tango['__initData'] = offset;
            entity['setLaunchPadPullTabTranslation'] = tango;
            tango = function(argFoo, argBar) { // Original name: A
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 6;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = _closure2_slot1;
                mike = {};
                report = argFoo;
                mike['position'] = report;
                report = argBar;
                mike['offset'] = report;
                mike = tango.bind(entity)(zulu, mike);
                return entity;
            };
            offset = {};
            yankee = verify[oscar];
            yankee = golf.bind(options)(yankee);
            offset['updateSharedValueIfChanged'] = yankee;
            offset['launchPadPullTabState'] = report;
            tango['__closure'] = offset;
            offset = 9399700514784.0;
            tango['__workletHash'] = offset;
            offset = _closure1_slot11;
            tango['__initData'] = offset;
            entity['setLaunchPadPullTabPosition'] = tango;
            tango = function(argFoo) { // Original name: b
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 6;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = _closure2_slot1;
                mike = {};
                report = argFoo;
                mike['scale'] = report;
                mike = tango.bind(entity)(zulu, mike);
                return entity;
            };
            offset = {};
            yankee = verify[oscar];
            yankee = golf.bind(options)(yankee);
            offset['updateSharedValueIfChanged'] = yankee;
            offset['launchPadPullTabState'] = report;
            tango['__closure'] = offset;
            offset = 3975941516375.0;
            tango['__workletHash'] = offset;
            offset = _closure1_slot12;
            tango['__initData'] = offset;
            entity['setLaunchPadPullTabScale'] = tango;
            mike = function(argFoo) { // Original name: I
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 6;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = _closure2_slot1;
                mike = {};
                report = argFoo;
                mike['minimized'] = report;
                mike = tango.bind(entity)(zulu, mike);
                return entity;
            };
            tango = {};
            oscar = verify[oscar];
            oscar = golf.bind(options)(oscar);
            tango['updateSharedValueIfChanged'] = oscar;
            tango['launchPadPullTabState'] = report;
            mike['__closure'] = tango;
            tango = 2397120116432.0;
            mike['__workletHash'] = tango;
            zulu = _closure1_slot13;
            mike['__initData'] = zulu;
            entity['setLaunchPadPullTabMinimized'] = mike;
            return entity;
        };
        mike = golf.bind(options)(entity, mike);
        entity = {};
        entity['launchPadSharedState'] = oscar;
        entity['launchPadPullTabState'] = report;
        entity['launchPadShown'] = tango;
        entity['gestureState'] = zulu;
        entity['updaters'] = mike;
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();