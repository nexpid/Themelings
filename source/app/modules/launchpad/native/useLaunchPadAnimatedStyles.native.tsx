// app/modules/launchpad/native/useLaunchPadAnimatedStyles.native.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    options = tango.StyleSheet;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.LAUNCH_PAD_SPRING_CONFIG;
    var _closure1_slot3 = tango;
    golf = options.create;
    tango = {};
    verify = {'position': 'absolute', 'top': 0, 'left': 0, 'width': '100%', 'zIndex': 1};
    tango['launchPad'] = verify;
    verify = {'position': 'absolute', 'top': 0, 'left': 0, 'right': 0, 'bottom': 0, 'backgroundColor': '#000'};
    tango['launchPadCover'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot4 = tango;
    tango = {};
    golf = "function useLaunchPadAnimatedStylesNativeTsx1(){const{withSpring,interpolate,launchPadSharedState,windowDimensions,LAUNCH_PAD_SPRING_CONFIG,gestureState,launchPadShown,height}=this.__closure;return{transform:[{translateX:withSpring(interpolate(launchPadSharedState.get(),[0,1],[windowDimensions.get().width-16,0]),LAUNCH_PAD_SPRING_CONFIG,'animate-always',function(finished){'worklet';if(!finished||gestureState.get().active)return;if(launchPadSharedState.get()===1||launchPadSharedState.get()===0){launchPadShown.set(launchPadSharedState.get()===1);}})}],bottom:height.get()};}";
    tango['code'] = golf;
    var _closure1_slot5 = tango;
    tango = {};
    golf = 'function useLaunchPadAnimatedStylesNativeTsx2(finished){const{gestureState,launchPadSharedState,launchPadShown}=this.__closure;if(!finished||gestureState.get().active)return;if(launchPadSharedState.get()===1||launchPadSharedState.get()===0){launchPadShown.set(launchPadSharedState.get()===1);}}';
    tango['code'] = golf;
    var _closure1_slot6 = tango;
    tango = {};
    golf = "function useLaunchPadAnimatedStylesNativeTsx3(){const{withSpring,interpolate,launchPadSharedState,LAUNCH_PAD_SPRING_CONFIG}=this.__closure;return{opacity:withSpring(interpolate(launchPadSharedState.get(),[0,1],[0,0.6]),LAUNCH_PAD_SPRING_CONFIG,'animate-always')};}";
    tango['code'] = golf;
    var _closure1_slot7 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/launchpad/native/useLaunchPadAnimatedStyles.native.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: useLaunchpadAnimatedStyles
        mike = argFoo;
        verify = mike.launchPadSharedState;
        var _closure2_slot0 = verify;
        output = mike.gestureState;
        var _closure2_slot1 = output;
        sizing = mike.launchPadShown;
        var _closure2_slot2 = sizing;
        tango = _closure1_slot1;
        foxtrot = _closure1_slot2;
        zulu = 2;
        zulu = foxtrot[zulu];
        romeo = undefined;
        report = tango.bind(romeo)(zulu);
        zulu = {};
        oscar = false;
        zulu['android_reportSystemKeyboardHeight'] = oscar;
        kilo = report.bind(romeo)(zulu);
        var _closure2_slot3 = kilo;
        zulu = 3;
        zulu = foxtrot[zulu];
        zulu = tango.bind(romeo)(zulu);
        options = zulu.bind(romeo)();
        var _closure2_slot4 = options;
        zulu = 4;
        zulu = foxtrot[zulu];
        zulu = tango.bind(romeo)(zulu);
        zulu = zulu.bind(romeo)();
        tango = zulu.top;
        yankee = _closure1_slot0;
        offset = 5;
        zulu = foxtrot[offset];
        oscar = yankee.bind(romeo)(zulu);
        report = oscar.useAnimatedStyle;
        zulu = function() { // Original name: c
            entity = {};
            tango = {};
            oscar = _closure1_slot0;
            golf = _closure1_slot2;
            mike = 6;
            mike = golf[mike];
            report = undefined;
            verify = oscar.bind(report)(mike);
            options = verify.withSpring;
            mike = 5;
            mike = golf[mike];
            romeo = oscar.bind(report)(mike);
            offset = romeo.interpolate;
            yankee = _closure2_slot0;
            report = yankee.get;
            golf = report.bind(yankee)();
            oscar = _closure2_slot4;
            report = oscar.get;
            report = report.bind(oscar)();
            oscar = report.width;
            report = 16;
            report = oscar - report;
            oscar = new Array(2);
            oscar[0] = report;
            report = 0;
            oscar[1] = report;
            report = [0, 1];
            sizing = offset.bind(romeo)(golf, report, oscar);
            kilo = _closure1_slot3;
            report = function(argFoo) { // Original name: h
                _fun120861: for(var _fun120861_ip = 0; ; ) switch(_fun120861_ip) {
 0:
                    entity = argFoo;
                    if(!entity) { _fun120861_ip = 31; continue _fun120861 }
 6:
                    zulu = _closure2_slot1;
                    mike = zulu.get;
                    mike = mike.bind(zulu)();
                    mike = mike.active;
                    entity = !mike;
 31:
                    if(!entity) { _fun120861_ip = 113; continue _fun120861 }
 34:
                    zulu = _closure2_slot0;
                    mike = zulu.get;
                    mike = mike.bind(zulu)();
                    tango = 1;
                    mike = tango !== mike;
                    if(!mike) { _fun120861_ip = 79; continue _fun120861 }
 60:
                    report = _closure2_slot0;
                    zulu = report.get;
                    report = zulu.bind(report)();
                    zulu = 0;
                    mike = zulu !== report;
 79:
                    if(mike) { _fun120861_ip = 113; continue _fun120861 }
 82:
                    zulu = _closure2_slot2;
                    mike = zulu.set;
                    report = _closure2_slot0;
                    entity = report.get;
                    entity = entity.bind(report)();
                    entity = tango === entity;
                    entity = mike.bind(zulu)(entity);
 113:
                    entity = undefined;
                    return entity;
                }
            };
            offset = {};
            romeo = _closure2_slot1;
            offset['gestureState'] = romeo;
            offset['launchPadSharedState'] = yankee;
            yankee = _closure2_slot2;
            offset['launchPadShown'] = yankee;
            report['__closure'] = offset;
            offset = 7028378249389.0;
            report['__workletHash'] = offset;
            zulu = _closure1_slot6;
            report['__initData'] = zulu;
            backup = 'animate-always';
            output = verify;
            foxtrot = report;
            zulu = output[options](sizing, kilo, backup, foxtrot, romeo);
            tango['translateX'] = zulu;
            zulu = new Array(1);
            zulu[0] = tango;
            entity['transform'] = zulu;
            zulu = _closure2_slot3;
            mike = zulu.get;
            mike = mike.bind(zulu)();
            entity['bottom'] = mike;
            return entity;
        };
        golf = {};
        backup = 6;
        result = foxtrot[backup];
        result = yankee.bind(romeo)(result);
        result = result.withSpring;
        golf['withSpring'] = result;
        result = foxtrot[offset];
        result = yankee.bind(romeo)(result);
        result = result.interpolate;
        golf['interpolate'] = result;
        golf['launchPadSharedState'] = verify;
        golf['windowDimensions'] = options;
        options = _closure1_slot3;
        golf['LAUNCH_PAD_SPRING_CONFIG'] = options;
        golf['gestureState'] = output;
        golf['launchPadShown'] = sizing;
        golf['height'] = kilo;
        zulu['__closure'] = golf;
        golf = 7335577463275.0;
        zulu['__workletHash'] = golf;
        golf = _closure1_slot5;
        zulu['__initData'] = golf;
        zulu = report.bind(oscar)(zulu);
        report = foxtrot[offset];
        oscar = yankee.bind(romeo)(report);
        report = oscar.useAnimatedStyle;
        entity = function() { // Original name: _
            entity = {};
            golf = _closure1_slot0;
            options = _closure1_slot2;
            zulu = 6;
            zulu = options[zulu];
            tango = undefined;
            oscar = golf.bind(tango)(zulu);
            report = oscar.withSpring;
            zulu = 5;
            zulu = options[zulu];
            verify = golf.bind(tango)(zulu);
            options = verify.interpolate;
            tango = _closure2_slot0;
            zulu = tango.get;
            golf = zulu.bind(tango)();
            tango = [0, 1];
            zulu = [0, 0.6];
            tango = options.bind(verify)(golf, tango, zulu);
            zulu = _closure1_slot3;
            mike = 'animate-always';
            mike = report.bind(oscar)(tango, zulu, mike);
            entity['opacity'] = mike;
            return entity;
        };
        golf = {};
        backup = foxtrot[backup];
        backup = yankee.bind(romeo)(backup);
        backup = backup.withSpring;
        golf['withSpring'] = backup;
        offset = foxtrot[offset];
        offset = yankee.bind(romeo)(offset);
        offset = offset.interpolate;
        golf['interpolate'] = offset;
        golf['launchPadSharedState'] = verify;
        golf['LAUNCH_PAD_SPRING_CONFIG'] = options;
        entity['__closure'] = golf;
        golf = 6964438968188.0;
        entity['__workletHash'] = golf;
        golf = _closure1_slot7;
        entity['__initData'] = golf;
        oscar = report.bind(oscar)(entity);
        entity = {};
        mike = _closure1_slot4;
        golf = mike.launchPadCover;
        report = new Array(2);
        report[0] = golf;
        report[1] = oscar;
        entity['launchPadCoverStyles'] = report;
        report = mike.launchPad;
        mike = new Array(3);
        mike[0] = report;
        mike[1] = zulu;
        zulu = {};
        zulu['paddingTop'] = tango;
        mike[2] = zulu;
        entity['launchPadStyles'] = mike;
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();