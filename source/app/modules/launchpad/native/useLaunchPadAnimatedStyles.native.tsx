// app/modules/launchpad/native/useLaunchPadAnimatedStyles.native.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    option = tangon.StyleSheet;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.LAUNCH_PAD_SPRING_CONFIG;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    golfie = report.bind(entity)(tangon);
    tangon = golfie.isAndroid;
    tangon = tangon.bind(golfie)();
    var _closure1_slot4 = tangon;
    golfie = option.create;
    tangon = {};
    verify = {'position': 'absolute', 'top': 0, 'left': 0, 'width': '100%', 'zIndex': 1};
    tangon['launchPad'] = verify;
    verify = {'position': 'absolute', 'top': 0, 'left': 0, 'right': 0, 'bottom': 0, 'backgroundColor': '#000'};
    tangon['launchPadCover'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = {};
    golfie = "function useLaunchPadAnimatedStylesNativeTsx1(){const{withSpring,interpolate,launchPadSharedState,windowDimensions,LAUNCH_PAD_SPRING_CONFIG,gestureState,launchPadShown,IS_ANDROID,height}=this.__closure;return{transform:[{translateX:withSpring(interpolate(launchPadSharedState.get(),[0,1],[windowDimensions.get().width-16,0]),LAUNCH_PAD_SPRING_CONFIG,'animate-always',function(finished){'worklet';if(!finished||gestureState.get().active)return;if(launchPadSharedState.get()===1||launchPadSharedState.get()===0){launchPadShown.set(launchPadSharedState.get()===1);}})}],bottom:IS_ANDROID?0:height.get()};}";
    tangon['code'] = golfie;
    var _closure1_slot6 = tangon;
    tangon = {};
    golfie = 'function useLaunchPadAnimatedStylesNativeTsx2(finished){const{gestureState,launchPadSharedState,launchPadShown}=this.__closure;if(!finished||gestureState.get().active)return;if(launchPadSharedState.get()===1||launchPadSharedState.get()===0){launchPadShown.set(launchPadSharedState.get()===1);}}';
    tangon['code'] = golfie;
    var _closure1_slot7 = tangon;
    tangon = {};
    golfie = "function useLaunchPadAnimatedStylesNativeTsx3(){const{withSpring,interpolate,launchPadSharedState,LAUNCH_PAD_SPRING_CONFIG}=this.__closure;return{opacity:withSpring(interpolate(launchPadSharedState.get(),[0,1],[0,0.6]),LAUNCH_PAD_SPRING_CONFIG,'animate-always')};}";
    tangon['code'] = golfie;
    var _closure1_slot8 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/launchpad/native/useLaunchPadAnimatedStyles.native.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: useLaunchpadAnimatedStyles
        michal = argFoo;
        verify = michal.launchPadSharedState;
        var _closure2_slot0 = verify;
        output = michal.gestureState;
        var _closure2_slot1 = output;
        sizing = michal.launchPadShown;
        var _closure2_slot2 = sizing;
        tangon = _closure1_slot1;
        foxtra = _closure1_slot2;
        zuuluu = 3;
        zuuluu = foxtra[zuuluu];
        romeon = undefined;
        zuuluu = tangon.bind(romeon)(zuuluu);
        kiloes = zuuluu.bind(romeon)();
        var _closure2_slot3 = kiloes;
        zuuluu = 4;
        zuuluu = foxtra[zuuluu];
        zuuluu = tangon.bind(romeon)(zuuluu);
        option = zuuluu.bind(romeon)();
        var _closure2_slot4 = option;
        zuuluu = 5;
        zuuluu = foxtra[zuuluu];
        zuuluu = tangon.bind(romeon)(zuuluu);
        zuuluu = zuuluu.bind(romeon)();
        tangon = zuuluu.top;
        yankee = _closure1_slot0;
        offset = 6;
        zuuluu = foxtra[offset];
        oscard = yankee.bind(romeon)(zuuluu);
        report = oscard.useAnimatedStyle;
        zuuluu = function() { // Original name: _
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = {};
                oscard = {};
                report = _closure1_slot0;
                golfie = _closure1_slot2;
                michal = 7;
                michal = golfie[michal];
                zuuluu = undefined;
                yankee = report.bind(zuuluu)(michal);
                offset = yankee.withSpring;
                michal = 6;
                michal = golfie[michal];
                foxtra = report.bind(zuuluu)(michal);
                verify = foxtra.interpolate;
                romeon = _closure2_slot0;
                michal = romeon.get;
                option = michal.bind(romeon)();
                report = _closure2_slot4;
                michal = report.get;
                michal = michal.bind(report)();
                report = michal.width;
                michal = 16;
                michal = report - michal;
                golfie = new Array(2);
                golfie[0] = michal;
                michal = 0;
                golfie[1] = michal;
                report = [0, 1];
                output = verify.bind(foxtra)(option, report, golfie);
                sizing = _closure1_slot3;
                golfie = function(argFoo) { // Original name: o
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        entity = argFoo;
                        if(!entity) { _fun00004_ip = 31; continue _fun00003 }
 6:
                        zuuluu = _closure2_slot1;
                        michal = zuuluu.get;
                        michal = michal.bind(zuuluu)();
                        michal = michal.active;
                        entity = !michal;
 31:
                        if(!entity) { _fun00004_ip = 113; continue _fun00003 }
 34:
                        zuuluu = _closure2_slot0;
                        michal = zuuluu.get;
                        michal = michal.bind(zuuluu)();
                        tangon = 1;
                        michal = tangon !== michal;
                        if(!michal) { _fun00004_ip = 79; continue _fun00003 }
 60:
                        report = _closure2_slot0;
                        zuuluu = report.get;
                        report = zuuluu.bind(report)();
                        zuuluu = 0;
                        michal = zuuluu !== report;
 79:
                        if(michal) { _fun00004_ip = 113; continue _fun00003 }
 82:
                        zuuluu = _closure2_slot2;
                        michal = zuuluu.set;
                        report = _closure2_slot0;
                        entity = report.get;
                        entity = entity.bind(report)();
                        entity = tangon === entity;
                        entity = michal.bind(zuuluu)(entity);
 113:
                        entity = undefined;
                        return entity;
                    }
                };
                report = {};
                foxtra = _closure2_slot1;
                report['gestureState'] = foxtra;
                report['launchPadSharedState'] = romeon;
                romeon = _closure2_slot2;
                report['launchPadShown'] = romeon;
                golfie['__closure'] = report;
                report = 7028378249389.0;
                golfie['__workletHash'] = report;
                report = _closure1_slot7;
                golfie['__initData'] = report;
                kiloes = 'animate-always';
                result = yankee;
                backup = golfie;
                report = result[offset](output, sizing, kiloes, backup, foxtra);
                oscard['translateX'] = report;
                report = new Array(1);
                report[0] = oscard;
                entity['transform'] = report;
                tangon = _closure1_slot4;
                if(tangon) { _fun00002_ip = 247; continue _fun00001 }
 234:
                tangon = _closure2_slot3;
                zuuluu = tangon.get;
                michal = zuuluu.bind(tangon)();
 247:
                entity['bottom'] = michal;
                return entity;
            }
        };
        golfie = {};
        backup = 7;
        result = foxtra[backup];
        result = yankee.bind(romeon)(result);
        result = result.withSpring;
        golfie['withSpring'] = result;
        result = foxtra[offset];
        result = yankee.bind(romeon)(result);
        result = result.interpolate;
        golfie['interpolate'] = result;
        golfie['launchPadSharedState'] = verify;
        golfie['windowDimensions'] = option;
        option = _closure1_slot3;
        golfie['LAUNCH_PAD_SPRING_CONFIG'] = option;
        golfie['gestureState'] = output;
        golfie['launchPadShown'] = sizing;
        sizing = _closure1_slot4;
        golfie['IS_ANDROID'] = sizing;
        golfie['height'] = kiloes;
        zuuluu['__closure'] = golfie;
        golfie = 1628632614770.0;
        zuuluu['__workletHash'] = golfie;
        golfie = _closure1_slot6;
        zuuluu['__initData'] = golfie;
        zuuluu = report.bind(oscard)(zuuluu);
        report = foxtra[offset];
        oscard = yankee.bind(romeon)(report);
        report = oscard.useAnimatedStyle;
        entity = function() { // Original name: P
            entity = {};
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            zuuluu = 7;
            zuuluu = option[zuuluu];
            tangon = undefined;
            oscard = golfie.bind(tangon)(zuuluu);
            report = oscard.withSpring;
            zuuluu = 6;
            zuuluu = option[zuuluu];
            verify = golfie.bind(tangon)(zuuluu);
            option = verify.interpolate;
            tangon = _closure2_slot0;
            zuuluu = tangon.get;
            golfie = zuuluu.bind(tangon)();
            tangon = [0, 1];
            zuuluu = [0, 0.6];
            tangon = option.bind(verify)(golfie, tangon, zuuluu);
            zuuluu = _closure1_slot3;
            michal = 'animate-always';
            michal = report.bind(oscard)(tangon, zuuluu, michal);
            entity['opacity'] = michal;
            return entity;
        };
        golfie = {};
        backup = foxtra[backup];
        backup = yankee.bind(romeon)(backup);
        backup = backup.withSpring;
        golfie['withSpring'] = backup;
        offset = foxtra[offset];
        offset = yankee.bind(romeon)(offset);
        offset = offset.interpolate;
        golfie['interpolate'] = offset;
        golfie['launchPadSharedState'] = verify;
        golfie['LAUNCH_PAD_SPRING_CONFIG'] = option;
        entity['__closure'] = golfie;
        golfie = 6964438968188.0;
        entity['__workletHash'] = golfie;
        golfie = _closure1_slot8;
        entity['__initData'] = golfie;
        oscard = report.bind(oscard)(entity);
        entity = {};
        michal = _closure1_slot5;
        golfie = michal.launchPadCover;
        report = new Array(2);
        report[0] = golfie;
        report[1] = oscard;
        entity['launchPadCoverStyles'] = report;
        report = michal.launchPad;
        michal = new Array(3);
        michal[0] = report;
        michal[1] = zuuluu;
        zuuluu = {};
        zuuluu['paddingTop'] = tangon;
        michal[2] = zuuluu;
        entity['launchPadStyles'] = michal;
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();