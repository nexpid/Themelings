// app/modules/launchpad/native/useLaunchPadAnimatedStyles.native.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    option = tangon.StyleSheet;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.LAUNCH_PAD_SPRING_CONFIG;
    var _closure1_slot3 = tangon;
    golfie = option.create;
    tangon = {};
    verify = {'position': 'absolute', 'top': 0, 'left': 0, 'width': '100%', 'zIndex': 1};
    tangon['launchPad'] = verify;
    verify = {'position': 'absolute', 'top': 0, 'left': 0, 'right': 0, 'bottom': 0, 'backgroundColor': '#000'};
    tangon['launchPadCover'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot4 = tangon;
    tangon = {};
    golfie = "function useLaunchPadAnimatedStylesNativeTsx1(){const{withSpring,interpolate,launchPadSharedState,windowDimensions,LAUNCH_PAD_SPRING_CONFIG,gestureState,launchPadShown,height}=this.__closure;return{transform:[{translateX:withSpring(interpolate(launchPadSharedState.get(),[0,1],[windowDimensions.get().width-16,0]),LAUNCH_PAD_SPRING_CONFIG,'animate-always',function(finished){'worklet';if(!finished||gestureState.get().active)return;if(launchPadSharedState.get()===1||launchPadSharedState.get()===0){launchPadShown.set(launchPadSharedState.get()===1);}})}],bottom:height.get()};}";
    tangon['code'] = golfie;
    var _closure1_slot5 = tangon;
    tangon = {};
    golfie = 'function useLaunchPadAnimatedStylesNativeTsx2(finished){const{gestureState,launchPadSharedState,launchPadShown}=this.__closure;if(!finished||gestureState.get().active)return;if(launchPadSharedState.get()===1||launchPadSharedState.get()===0){launchPadShown.set(launchPadSharedState.get()===1);}}';
    tangon['code'] = golfie;
    var _closure1_slot6 = tangon;
    tangon = {};
    golfie = "function useLaunchPadAnimatedStylesNativeTsx3(){const{withSpring,interpolate,launchPadSharedState,LAUNCH_PAD_SPRING_CONFIG}=this.__closure;return{opacity:withSpring(interpolate(launchPadSharedState.get(),[0,1],[0,0.6]),LAUNCH_PAD_SPRING_CONFIG,'animate-always')};}";
    tangon['code'] = golfie;
    var _closure1_slot7 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/launchpad/native/useLaunchPadAnimatedStyles.native.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: useLaunchpadAnimatedStyles
        michal = argFoo;
        verify = michal.launchPadSharedState;
        var _closure2_slot0 = verify;
        output = michal.gestureState;
        var _closure2_slot1 = output;
        sizing = michal.launchPadShown;
        var _closure2_slot2 = sizing;
        tangon = _closure1_slot1;
        foxtra = _closure1_slot2;
        zuuluu = 2;
        zuuluu = foxtra[zuuluu];
        romeon = undefined;
        report = tangon.bind(romeon)(zuuluu);
        zuuluu = {};
        oscard = false;
        zuuluu['android_reportSystemKeyboardHeight'] = oscard;
        kiloes = report.bind(romeon)(zuuluu);
        var _closure2_slot3 = kiloes;
        zuuluu = 3;
        zuuluu = foxtra[zuuluu];
        zuuluu = tangon.bind(romeon)(zuuluu);
        option = zuuluu.bind(romeon)();
        var _closure2_slot4 = option;
        zuuluu = 4;
        zuuluu = foxtra[zuuluu];
        zuuluu = tangon.bind(romeon)(zuuluu);
        zuuluu = zuuluu.bind(romeon)();
        tangon = zuuluu.top;
        yankee = _closure1_slot0;
        offset = 5;
        zuuluu = foxtra[offset];
        oscard = yankee.bind(romeon)(zuuluu);
        report = oscard.useAnimatedStyle;
        zuuluu = function() { // Original name: c
            entity = {};
            tangon = {};
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            michal = 6;
            michal = golfie[michal];
            report = undefined;
            verify = oscard.bind(report)(michal);
            option = verify.withSpring;
            michal = 5;
            michal = golfie[michal];
            romeon = oscard.bind(report)(michal);
            offset = romeon.interpolate;
            yankee = _closure2_slot0;
            report = yankee.get;
            golfie = report.bind(yankee)();
            oscard = _closure2_slot4;
            report = oscard.get;
            report = report.bind(oscard)();
            oscard = report.width;
            report = 16;
            report = oscard - report;
            oscard = new Array(2);
            oscard[0] = report;
            report = 0;
            oscard[1] = report;
            report = [0, 1];
            sizing = offset.bind(romeon)(golfie, report, oscard);
            kiloes = _closure1_slot3;
            report = function(argFoo) { // Original name: h
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    entity = argFoo;
                    if(!entity) { _fun00002_ip = 31; continue _fun00001 }
 6:
                    zuuluu = _closure2_slot1;
                    michal = zuuluu.get;
                    michal = michal.bind(zuuluu)();
                    michal = michal.active;
                    entity = !michal;
 31:
                    if(!entity) { _fun00002_ip = 113; continue _fun00001 }
 34:
                    zuuluu = _closure2_slot0;
                    michal = zuuluu.get;
                    michal = michal.bind(zuuluu)();
                    tangon = 1;
                    michal = tangon !== michal;
                    if(!michal) { _fun00002_ip = 79; continue _fun00001 }
 60:
                    report = _closure2_slot0;
                    zuuluu = report.get;
                    report = zuuluu.bind(report)();
                    zuuluu = 0;
                    michal = zuuluu !== report;
 79:
                    if(michal) { _fun00002_ip = 113; continue _fun00001 }
 82:
                    zuuluu = _closure2_slot2;
                    michal = zuuluu.set;
                    report = _closure2_slot0;
                    entity = report.get;
                    entity = entity.bind(report)();
                    entity = tangon === entity;
                    entity = michal.bind(zuuluu)(entity);
 113:
                    entity = undefined;
                    return entity;
                }
            };
            offset = {};
            romeon = _closure2_slot1;
            offset['gestureState'] = romeon;
            offset['launchPadSharedState'] = yankee;
            yankee = _closure2_slot2;
            offset['launchPadShown'] = yankee;
            report['__closure'] = offset;
            offset = 7028378249389.0;
            report['__workletHash'] = offset;
            zuuluu = _closure1_slot6;
            report['__initData'] = zuuluu;
            backup = 'animate-always';
            output = verify;
            foxtra = report;
            zuuluu = output[option](sizing, kiloes, backup, foxtra, romeon);
            tangon['translateX'] = zuuluu;
            zuuluu = new Array(1);
            zuuluu[0] = tangon;
            entity['transform'] = zuuluu;
            zuuluu = _closure2_slot3;
            michal = zuuluu.get;
            michal = michal.bind(zuuluu)();
            entity['bottom'] = michal;
            return entity;
        };
        golfie = {};
        backup = 6;
        result = foxtra[backup];
        result = yankee.bind(romeon)(result);
        result = result.withSpring;
        golfie['withSpring'] = result;
        result = foxtra[offset];
        result = yankee.bind(romeon)(result);
        result = result.interpolate;
        golfie['interpolate'] = result;
        golfie['launchPadSharedState'] = verify;
        golfie['windowDimensions'] = option;
        option = _closure1_slot3;
        golfie['LAUNCH_PAD_SPRING_CONFIG'] = option;
        golfie['gestureState'] = output;
        golfie['launchPadShown'] = sizing;
        golfie['height'] = kiloes;
        zuuluu['__closure'] = golfie;
        golfie = 7335577463275.0;
        zuuluu['__workletHash'] = golfie;
        golfie = _closure1_slot5;
        zuuluu['__initData'] = golfie;
        zuuluu = report.bind(oscard)(zuuluu);
        report = foxtra[offset];
        oscard = yankee.bind(romeon)(report);
        report = oscard.useAnimatedStyle;
        entity = function() { // Original name: _
            entity = {};
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            zuuluu = 6;
            zuuluu = option[zuuluu];
            tangon = undefined;
            oscard = golfie.bind(tangon)(zuuluu);
            report = oscard.withSpring;
            zuuluu = 5;
            zuuluu = option[zuuluu];
            verify = golfie.bind(tangon)(zuuluu);
            option = verify.interpolate;
            tangon = _closure2_slot0;
            zuuluu = tangon.get;
            golfie = zuuluu.bind(tangon)();
            tangon = [0, 1];
            zuuluu = [0, 0.6];
            tangon = option.bind(verify)(golfie, tangon, zuuluu);
            zuuluu = _closure1_slot3;
            michal = 'animate-always';
            michal = report.bind(oscard)(tangon, zuuluu, michal);
            entity['opacity'] = michal;
            return entity;
        };
        golfie = {};
        backup = foxtra[backup];
        backup = yankee.bind(romeon)(backup);
        backup = backup.withSpring;
        golfie['withSpring'] = backup;
        offset = foxtra[offset];
        offset = yankee.bind(romeon)(offset);
        offset = offset.interpolate;
        golfie['interpolate'] = offset;
        golfie['launchPadSharedState'] = verify;
        golfie['LAUNCH_PAD_SPRING_CONFIG'] = option;
        entity['__closure'] = golfie;
        golfie = 6964438968188.0;
        entity['__workletHash'] = golfie;
        golfie = _closure1_slot7;
        entity['__initData'] = golfie;
        oscard = report.bind(oscard)(entity);
        entity = {};
        michal = _closure1_slot4;
        golfie = michal.launchPadCover;
        report = new Array(2);
        report[0] = golfie;
        report[1] = oscard;
        entity['launchPadCoverStyles'] = report;
        report = michal.launchPad;
        michal = new Array(3);
        michal[0] = report;
        michal[1] = zuuluu;
        zuuluu = {};
        zuuluu['paddingTop'] = tangon;
        michal[2] = zuuluu;
        entity['launchPadStyles'] = michal;
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();