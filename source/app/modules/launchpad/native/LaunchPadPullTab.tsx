// app/modules/launchpad/native/LaunchPadPullTab.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    yankee = 1;
    tangon = oscard[yankee];
    tangon = report.bind(entity)(tangon);
    option = tangon.Pressable;
    var _closure1_slot3 = option;
    foxtra = tangon.StyleSheet;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.LAUNCH_PAD_MARGIN;
    var _closure1_slot4 = option;
    sizing = tangon.LAUNCH_PAD_PULL_TAB_BORDER_RADIUS;
    var _closure1_slot5 = sizing;
    kiloes = tangon.LAUNCH_PAD_PULL_TAB_HEIGHT;
    var _closure1_slot6 = kiloes;
    option = tangon.LAUNCH_PAD_PULL_TAB_HIT_SLOP;
    var _closure1_slot7 = option;
    option = tangon.LAUNCH_PAD_PULL_TAB_MINIMIZED_OFFSET;
    var _closure1_slot8 = option;
    option = tangon.LAUNCH_PAD_PULL_TAB_SCALE_FACTOR;
    var _closure1_slot9 = option;
    option = tangon.LAUNCH_PAD_PULL_TAB_SCALE_OFFSET;
    var _closure1_slot10 = option;
    backup = tangon.LAUNCH_PAD_PULL_TAB_WIDTH;
    tangon = tangon.LAUNCH_PAD_SPRING_CONFIG;
    var _closure1_slot11 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.CHAT_INPUT_HEIGHT;
    var _closure1_slot12 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot13 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'position': 'absolute', 'right': 0};
    offset['width'] = backup;
    offset['height'] = kiloes;
    offset['borderTopLeftRadius'] = sizing;
    offset['borderBottomLeftRadius'] = sizing;
    offset['borderWidth'] = yankee;
    offset['borderTopWidth'] = yankee;
    yankee = 'rgba(0, 0, 0, 0.08)';
    offset['borderColor'] = yankee;
    yankee = 6;
    sizing = oscard[yankee];
    sizing = romeon.bind(entity)(sizing);
    sizing = sizing.shadows;
    echoed = sizing.SHADOW_MOBILE_NAVIGATOR_X;
    update = offset;
    sizing = copyDataProperties(update, echoed);
    tangon['pullTab'] = offset;
    offset = {};
    offset['width'] = backup;
    offset['height'] = kiloes;
    sizing = 'center';
    offset['justifyContent'] = sizing;
    offset['alignItems'] = sizing;
    tangon['pullTabButton'] = offset;
    offset = {};
    echoed = foxtra.absoluteFillObject;
    update = offset;
    kiloes = copyDataProperties(update, echoed);
    kiloes = 'alignItems';
    offset[kiloes] = sizing;
    kiloes = 'justifyContent';
    offset[kiloes] = sizing;
    tangon['iconCrossfadeWrapper'] = offset;
    offset = {};
    kiloes = oscard[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_PRIMARY;
    offset['color'] = kiloes;
    tangon['launchPad'] = offset;
    offset = {};
    echoed = foxtra.absoluteFillObject;
    update = offset;
    kiloes = copyDataProperties(update, echoed);
    sizing = '200%';
    kiloes = 'width';
    offset[kiloes] = sizing;
    sizing = oscard[yankee];
    sizing = romeon.bind(entity)(sizing);
    sizing = sizing.colors;
    output = sizing.BG_BACKDROP;
    sizing = 'backgroundColor';
    offset[sizing] = output;
    tangon['nuxBackdrop'] = offset;
    offset = {};
    echoed = foxtra.absoluteFillObject;
    update = offset;
    sizing = copyDataProperties(update, echoed);
    tangon['nuxPressable'] = offset;
    offset = {};
    echoed = foxtra.absoluteFillObject;
    update = offset;
    foxtra = copyDataProperties(update, echoed);
    foxtra = '100%';
    offset[kiloes] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    backup = backup + foxtra;
    foxtra = 'paddingRight';
    offset[foxtra] = backup;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    romeon = yankee.PX_16;
    yankee = 'paddingLeft';
    offset[yankee] = romeon;
    tangon['nuxCopy'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot14 = tangon;
    tangon = {};
    option = 'function LaunchPadPullTabTsx1(){const{keyboardHeight}=this.__closure;return keyboardHeight.get();}';
    tangon['code'] = option;
    var _closure1_slot15 = tangon;
    tangon = {};
    option = 'function LaunchPadPullTabTsx2(keyboardHeight,keyboardHeightPrev){const{launchPadSharedState,updaters,keyboardHeightOpened,launchPadPullTabState,CHAT_INPUT_HEIGHT,LAUNCH_PAD_MARGIN,getWindowDimensionsWorklet,LAUNCH_PAD_PULL_TAB_HEIGHT,LAUNCH_PAD_PULL_TAB_SCALE_OFFSET}=this.__closure;if(launchPadSharedState.get()!==0){updaters.setLaunchPadPullTabMinimized(false);return;}if(keyboardHeightPrev==null||keyboardHeight===keyboardHeightPrev){return;}if(keyboardHeight<keyboardHeightPrev){var _keyboardHeightOpened;if(keyboardHeight===0){updaters.setLaunchPadPullTabMinimized(false);}if(keyboardHeightOpened.get()==null){keyboardHeightOpened.set(keyboardHeightPrev);}const keyboardClosePercent=1-keyboardHeight/((_keyboardHeightOpened=keyboardHeightOpened.get())!==null&&_keyboardHeightOpened!==void 0?_keyboardHeightOpened:keyboardHeightPrev);const keyboardOffsetRetractionAmount=launchPadPullTabState.get().offset*keyboardClosePercent;updaters.setLaunchPadPullTabPosition(launchPadPullTabState.get().position+keyboardOffsetRetractionAmount,launchPadPullTabState.get().offset-keyboardOffsetRetractionAmount);}else{updaters.setLaunchPadPullTabMinimized(true);if(keyboardHeightOpened.get()!=null){keyboardHeightOpened.set(undefined);}const keyboardWithChatInput=keyboardHeight+CHAT_INPUT_HEIGHT+LAUNCH_PAD_MARGIN*2;const spaceUnderPullTab=getWindowDimensionsWorklet().height-(launchPadPullTabState.get().position+LAUNCH_PAD_PULL_TAB_HEIGHT+LAUNCH_PAD_PULL_TAB_SCALE_OFFSET);const offset=spaceUnderPullTab>keyboardWithChatInput?0:keyboardWithChatInput-spaceUnderPullTab;if(offset>0){updaters.setLaunchPadPullTabPosition(launchPadPullTabState.get().position-offset,launchPadPullTabState.get().offset+offset);}}}';
    tangon['code'] = option;
    var _closure1_slot16 = tangon;
    tangon = {};
    option = 'function LaunchPadPullTabTsx3(){const{isMinimized,gestureState,LAUNCH_PAD_PULL_TAB_MINIMIZED_OFFSET,interpolate,launchPadSharedState,windowDimensions,launchPadPullTabState,LAUNCH_PAD_PULL_TAB_BORDER_RADIUS,interpolateColor,LAUNCH_PAD_MARGIN,backgroundColorTabBar,backgroundColorLaunchPad,withSpring,LAUNCH_PAD_SPRING_CONFIG}=this.__closure;let translateX=isMinimized.get()&&!gestureState.get().active?LAUNCH_PAD_PULL_TAB_MINIMIZED_OFFSET:interpolate(launchPadSharedState.get(),[0,1],[0,-(windowDimensions.get().width-16)]);if(launchPadSharedState.get()>0.9){translateX=-windowDimensions.get().width;}else if(gestureState.get().active){if(gestureState.get().requiresPop){translateX+=gestureState.get().positionOffsetX*0.3;}else{translateX-=4;}}const translateY=launchPadPullTabState.get().position;const borderRadius=launchPadSharedState.get()<=0&&!gestureState.get().active?0:LAUNCH_PAD_PULL_TAB_BORDER_RADIUS;const backgroundColor=interpolateColor(launchPadSharedState.get()*windowDimensions.get().width,[0,LAUNCH_PAD_MARGIN],[backgroundColorTabBar,backgroundColorLaunchPad]);return{transform:[{translateX:withSpring(translateX,LAUNCH_PAD_SPRING_CONFIG)},{translateY:withSpring(translateY,LAUNCH_PAD_SPRING_CONFIG)},{scale:withSpring(launchPadPullTabState.get().scale,LAUNCH_PAD_SPRING_CONFIG)}],borderTopRightRadius:withSpring(borderRadius,LAUNCH_PAD_SPRING_CONFIG),borderBottomRightRadius:withSpring(borderRadius,LAUNCH_PAD_SPRING_CONFIG),backgroundColor:backgroundColor};}';
    tangon['code'] = option;
    var _closure1_slot17 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: LaunchPadPullTab
        entity = argFoo;
        foxtra = entity.launchPadSharedState;
        var _closure2_slot0 = foxtra;
        report = entity.launchPadPullTabState;
        var _closure2_slot1 = report;
        echoed = entity.gestureState;
        var _closure2_slot2 = echoed;
        michal = entity.updaters;
        var _closure2_slot3 = michal;
        entity = _closure1_slot14;
        tangon = undefined;
        yankee = entity.bind(tangon)();
        option = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 10;
        entity = verify[entity];
        zuuluu = option.bind(tangon)(entity);
        entity = zuuluu.useTabBarStyles;
        entity = entity.bind(zuuluu)();
        offset = _closure1_slot1;
        zuuluu = 9;
        zuuluu = verify[zuuluu];
        zuuluu = offset.bind(tangon)(zuuluu);
        result = zuuluu.bind(tangon)();
        var _closure2_slot4 = result;
        zuuluu = yankee.launchPad;
        sizing = zuuluu.color;
        var _closure2_slot5 = sizing;
        entity = entity.tabBar;
        output = entity.backgroundColor;
        var _closure2_slot6 = output;
        entity = 11;
        entity = verify[entity];
        zuuluu = offset.bind(tangon)(entity);
        entity = {};
        entity['launchPadSharedState'] = foxtra;
        entity['launchPadPullTabState'] = report;
        update = zuuluu.bind(tangon)(entity);
        var _closure2_slot7 = update;
        entity = 8;
        zuuluu = verify[entity];
        backup = option.bind(tangon)(zuuluu);
        oscard = backup.useAnimatedStyle;
        zuuluu = function() { // Original name: L
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = _closure2_slot7;
                entity = michal.get;
                entity = entity.bind(michal)();
                if(!entity) { _fun00002_ip = 50; continue _fun00001 }
 19:
                michal = _closure2_slot2;
                entity = michal.get;
                entity = entity.bind(michal)();
                entity = entity.active;
                if(entity) { _fun00002_ip = 50; continue _fun00001 }
 41:
                zuuluu = _closure1_slot8;
                _fun00002_ip = 153; continue _fun00001;
 50:
                tangon = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 8;
                michal = michal[entity];
                entity = undefined;
                oscard = tangon.bind(entity)(michal);
                report = oscard.interpolate;
                michal = _closure2_slot0;
                entity = michal.get;
                tangon = entity.bind(michal)();
                michal = _closure2_slot4;
                entity = michal.get;
                entity = entity.bind(michal)();
                michal = entity.width;
                entity = 16;
                entity = michal - entity;
                michal = [0];
                entity = -entity;
                michal[1] = entity;
                entity = [0, 1];
                zuuluu = report.bind(oscard)(tangon, entity, michal);
 153:
                michal = _closure2_slot0;
                entity = michal.get;
                michal = entity.bind(michal)();
                entity = 0.9;
                if(!(!(michal > entity))) { _fun00002_ip = 278; continue _fun00001 }
 180:
                michal = _closure2_slot2;
                entity = michal.get;
                entity = entity.bind(michal)();
                entity = entity.active;
                foxtra = zuuluu;
                if(!entity) { _fun00002_ip = 299; continue _fun00001 }
 205:
                michal = _closure2_slot2;
                entity = michal.get;
                entity = entity.bind(michal)();
                entity = entity.requiresPop;
                if(entity) { _fun00002_ip = 236; continue _fun00001 }
 227:
                entity = 4;
                entity = zuuluu - entity;
                _fun00002_ip = 273; continue _fun00001;
 236:
                tangon = _closure2_slot2;
                michal = tangon.get;
                michal = michal.bind(tangon)();
                tangon = michal.positionOffsetX;
                michal = 0.3;
                michal = michal * tangon;
                entity = zuuluu + michal;
 273:
                foxtra = entity;
                _fun00002_ip = 299; continue _fun00001;
 278:
                michal = _closure2_slot4;
                entity = michal.get;
                entity = entity.bind(michal)();
                entity = entity.width;
                foxtra = -entity;
 299:
                michal = _closure2_slot1;
                entity = michal.get;
                entity = entity.bind(michal)();
                backup = entity.position;
                michal = _closure2_slot0;
                entity = michal.get;
                entity = entity.bind(michal)();
                oscard = 0;
                if(!(entity <= oscard)) { _fun00002_ip = 360; continue _fun00001 }
 336:
                michal = _closure2_slot2;
                entity = michal.get;
                entity = entity.bind(michal)();
                entity = entity.active;
                oscard = 0;
                if(!entity) { _fun00002_ip = 367; continue _fun00001 }
 360:
                oscard = _closure1_slot5;
 367:
                golfie = _closure1_slot0;
                option = _closure1_slot2;
                entity = 8;
                entity = option[entity];
                tangon = undefined;
                offset = golfie.bind(tangon)(entity);
                verify = offset.interpolateColor;
                michal = _closure2_slot0;
                entity = michal.get;
                michal = entity.bind(michal)();
                zuuluu = _closure2_slot4;
                entity = zuuluu.get;
                entity = entity.bind(zuuluu)();
                entity = entity.width;
                zuuluu = michal * entity;
                entity = _closure1_slot4;
                michal = [0];
                michal[1] = entity;
                romeon = _closure2_slot6;
                entity = new Array(2);
                entity[0] = romeon;
                romeon = _closure2_slot5;
                entity[1] = romeon;
                michal = verify.bind(offset)(zuuluu, michal, entity);
                entity = {};
                offset = {};
                zuuluu = 12;
                verify = option[zuuluu];
                romeon = golfie.bind(tangon)(verify);
                verify = romeon.withSpring;
                report = _closure1_slot11;
                verify = verify.bind(romeon)(foxtra, report);
                offset['translateX'] = verify;
                verify = new Array(3);
                verify[0] = offset;
                offset = {};
                romeon = option[zuuluu];
                foxtra = golfie.bind(tangon)(romeon);
                romeon = foxtra.withSpring;
                romeon = romeon.bind(foxtra)(backup, report);
                offset['translateY'] = romeon;
                verify[1] = offset;
                offset = {};
                romeon = option[zuuluu];
                foxtra = golfie.bind(tangon)(romeon);
                romeon = foxtra.withSpring;
                backup = _closure2_slot1;
                yankee = backup.get;
                yankee = yankee.bind(backup)();
                yankee = yankee.scale;
                yankee = romeon.bind(foxtra)(yankee, report);
                offset['scale'] = yankee;
                verify[2] = offset;
                entity['transform'] = verify;
                verify = option[zuuluu];
                offset = golfie.bind(tangon)(verify);
                verify = offset.withSpring;
                verify = verify.bind(offset)(oscard, report);
                entity['borderTopRightRadius'] = verify;
                zuuluu = option[zuuluu];
                tangon = golfie.bind(tangon)(zuuluu);
                zuuluu = tangon.withSpring;
                zuuluu = zuuluu.bind(tangon)(oscard, report);
                entity['borderBottomRightRadius'] = zuuluu;
                entity['backgroundColor'] = michal;
                return entity;
            }
        };
        kiloes = {};
        kiloes['isMinimized'] = update;
        kiloes['gestureState'] = echoed;
        echoed = _closure1_slot8;
        kiloes['LAUNCH_PAD_PULL_TAB_MINIMIZED_OFFSET'] = echoed;
        echoed = verify[entity];
        echoed = option.bind(tangon)(echoed);
        echoed = echoed.interpolate;
        kiloes['interpolate'] = echoed;
        kiloes['launchPadSharedState'] = foxtra;
        kiloes['windowDimensions'] = result;
        kiloes['launchPadPullTabState'] = report;
        result = _closure1_slot5;
        kiloes['LAUNCH_PAD_PULL_TAB_BORDER_RADIUS'] = result;
        result = verify[entity];
        result = option.bind(tangon)(result);
        result = result.interpolateColor;
        kiloes['interpolateColor'] = result;
        result = _closure1_slot4;
        kiloes['LAUNCH_PAD_MARGIN'] = result;
        kiloes['backgroundColorTabBar'] = output;
        kiloes['backgroundColorLaunchPad'] = sizing;
        sizing = 12;
        sizing = verify[sizing];
        sizing = option.bind(tangon)(sizing);
        sizing = sizing.withSpring;
        kiloes['withSpring'] = sizing;
        sizing = _closure1_slot11;
        kiloes['LAUNCH_PAD_SPRING_CONFIG'] = sizing;
        zuuluu['__closure'] = kiloes;
        kiloes = 17461120174889.0;
        zuuluu['__workletHash'] = kiloes;
        kiloes = _closure1_slot17;
        zuuluu['__initData'] = kiloes;
        oscard = oscard.bind(backup)(zuuluu);
        zuuluu = {};
        zuuluu['launchPadSharedState'] = foxtra;
        zuuluu['launchPadPullTabState'] = report;
        zuuluu['updaters'] = michal;
        michal = function(argFoo) { // Original name: useLaunchPadPullTabKeyboardListener
            entity = argFoo;
            foxtra = entity.launchPadSharedState;
            var _closure3_slot0 = foxtra;
            option = entity.launchPadPullTabState;
            var _closure3_slot1 = option;
            romeon = entity.updaters;
            var _closure3_slot2 = romeon;
            tangon = _closure1_slot1;
            offset = _closure1_slot2;
            entity = 7;
            zuuluu = offset[entity];
            entity = undefined;
            zuuluu = tangon.bind(entity)(zuuluu);
            backup = zuuluu.bind(entity)();
            var _closure3_slot3 = backup;
            verify = _closure1_slot0;
            zuuluu = 8;
            tangon = offset[zuuluu];
            report = verify.bind(entity)(tangon);
            tangon = report.useSharedValue;
            yankee = tangon.bind(report)(entity);
            var _closure3_slot4 = yankee;
            zuuluu = offset[zuuluu];
            report = verify.bind(entity)(zuuluu);
            tangon = report.useAnimatedReaction;
            zuuluu = function() { // Original name: s
                michal = _closure3_slot3;
                entity = michal.get;
                entity = entity.bind(michal)();
                return entity;
            };
            golfie = {};
            golfie['keyboardHeight'] = backup;
            zuuluu['__closure'] = golfie;
            golfie = 14545769097570.0;
            zuuluu['__workletHash'] = golfie;
            golfie = _closure1_slot15;
            zuuluu['__initData'] = golfie;
            michal = function(argFoo, argBar) { // Original name: l
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = argFoo;
                    michal = argBar;
                    report = _closure3_slot0;
                    tangon = report.get;
                    report = tangon.bind(report)();
                    tangon = 0;
                    if(!(tangon !== report)) { _fun00004_ip = 50; continue _fun00003 }
 28:
                    golfie = _closure3_slot2;
                    oscard = golfie.setLaunchPadPullTabMinimized;
                    report = false;
                    report = oscard.bind(golfie)(report);
                    _fun00004_ip = 462; continue _fun00003;
 50:
                    report = null;
                    if(!(report != michal)) { _fun00004_ip = 462; continue _fun00003 }
 59:
                    if(!(zuuluu !== michal)) { _fun00004_ip = 462; continue _fun00003 }
 66:
                    if(!(!(zuuluu < michal))) { _fun00004_ip = 303; continue _fun00003 }
 73:
                    option = _closure3_slot2;
                    golfie = option.setLaunchPadPullTabMinimized;
                    oscard = true;
                    oscard = golfie.bind(option)(oscard);
                    golfie = _closure3_slot4;
                    oscard = golfie.get;
                    oscard = oscard.bind(golfie)();
                    if(!(report != oscard)) { _fun00004_ip = 123; continue _fun00003 }
 107:
                    option = _closure3_slot4;
                    golfie = option.set;
                    oscard = undefined;
                    oscard = golfie.bind(option)(oscard);
 123:
                    golfie = _closure1_slot12;
                    option = zuuluu + golfie;
                    verify = _closure1_slot4;
                    golfie = 2;
                    golfie = golfie * verify;
                    golfie = option + golfie;
                    offset = _closure1_slot0;
                    verify = _closure1_slot2;
                    option = 9;
                    verify = verify[option];
                    option = undefined;
                    verify = offset.bind(option)(verify);
                    option = verify.getWindowDimensionsWorklet;
                    option = option.bind(verify)();
                    option = option.height;
                    offset = _closure3_slot1;
                    verify = offset.get;
                    verify = verify.bind(offset)();
                    offset = verify.position;
                    verify = _closure1_slot6;
                    verify = offset + verify;
                    oscard = _closure1_slot10;
                    oscard = verify + oscard;
                    oscard = option - oscard;
                    offset = 0;
                    if(!(!(oscard > golfie))) { _fun00004_ip = 234; continue _fun00003 }
 230:
                    offset = golfie - oscard;
 234:
                    if(!(offset > tangon)) { _fun00004_ip = 462; continue _fun00003 }
 241:
                    verify = _closure3_slot2;
                    option = verify.setLaunchPadPullTabPosition;
                    yankee = _closure3_slot1;
                    oscard = yankee.get;
                    oscard = oscard.bind(yankee)();
                    oscard = oscard.position;
                    golfie = oscard - offset;
                    oscard = yankee.get;
                    oscard = oscard.bind(yankee)();
                    oscard = oscard.offset;
                    oscard = oscard + offset;
                    oscard = option.bind(verify)(golfie, oscard);
                    _fun00004_ip = 462; continue _fun00003;
 303:
                    if(!(tangon === zuuluu)) { _fun00004_ip = 324; continue _fun00003 }
 307:
                    golfie = _closure3_slot2;
                    oscard = golfie.setLaunchPadPullTabMinimized;
                    tangon = false;
                    tangon = oscard.bind(golfie)(tangon);
 324:
                    oscard = _closure3_slot4;
                    tangon = oscard.get;
                    tangon = tangon.bind(oscard)();
                    if(!(report == tangon)) { _fun00004_ip = 355; continue _fun00003 }
 341:
                    oscard = _closure3_slot4;
                    tangon = oscard.set;
                    tangon = tangon.bind(oscard)(michal);
 355:
                    oscard = _closure3_slot4;
                    tangon = oscard.get;
                    tangon = tangon.bind(oscard)();
                    if(!(report != tangon)) { _fun00004_ip = 375; continue _fun00003 }
 372:
                    michal = tangon;
 375:
                    zuuluu = zuuluu / michal;
                    michal = 1;
                    zuuluu = michal - zuuluu;
                    oscard = _closure3_slot1;
                    michal = oscard.get;
                    michal = michal.bind(oscard)();
                    michal = michal.offset;
                    report = michal * zuuluu;
                    tangon = _closure3_slot2;
                    zuuluu = tangon.setLaunchPadPullTabPosition;
                    entity = oscard.get;
                    entity = entity.bind(oscard)();
                    entity = entity.position;
                    michal = entity + report;
                    entity = oscard.get;
                    entity = entity.bind(oscard)();
                    entity = entity.offset;
                    entity = entity - report;
                    entity = zuuluu.bind(tangon)(michal, entity);
 462:
                    entity = undefined;
                    return entity;
                }
            };
            golfie = {};
            golfie['launchPadSharedState'] = foxtra;
            golfie['updaters'] = romeon;
            golfie['keyboardHeightOpened'] = yankee;
            golfie['launchPadPullTabState'] = option;
            option = _closure1_slot12;
            golfie['CHAT_INPUT_HEIGHT'] = option;
            option = _closure1_slot4;
            golfie['LAUNCH_PAD_MARGIN'] = option;
            option = 9;
            option = offset[option];
            option = verify.bind(entity)(option);
            option = option.getWindowDimensionsWorklet;
            golfie['getWindowDimensionsWorklet'] = option;
            option = _closure1_slot6;
            golfie['LAUNCH_PAD_PULL_TAB_HEIGHT'] = option;
            option = _closure1_slot10;
            golfie['LAUNCH_PAD_PULL_TAB_SCALE_OFFSET'] = option;
            michal['__closure'] = golfie;
            golfie = 8058975008670.0;
            michal['__workletHash'] = golfie;
            oscard = _closure1_slot16;
            michal['__initData'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        michal = michal.bind(tangon)(zuuluu);
        zuuluu = _closure1_slot13;
        entity = verify[entity];
        entity = offset.bind(tangon)(entity);
        michal = entity.View;
        entity = {};
        foxtra = yankee.pullTab;
        report = new Array(2);
        report[0] = foxtra;
        report[1] = oscard;
        entity['style'] = report;
        oscard = _closure1_slot3;
        report = {};
        foxtra = 'button';
        report['accessibilityRole'] = foxtra;
        foxtra = 13;
        backup = verify[foxtra];
        backup = option.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = verify[foxtra];
        foxtra = option.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.yTnIfX;
        foxtra = backup.bind(kiloes)(foxtra);
        report['accessibilityLabel'] = foxtra;
        romeon = _closure1_slot7;
        report['hitSlop'] = romeon;
        yankee = yankee.pullTabButton;
        report['style'] = yankee;
        golfie = function() { // Original name: onTouchStart
            zuuluu = _closure2_slot3;
            michal = zuuluu.setLaunchPadPullTabScale;
            entity = _closure1_slot9;
            entity = michal.bind(zuuluu)(entity);
            entity = undefined;
            return entity;
        };
        report['onTouchStart'] = golfie;
        golfie = 14;
        golfie = verify[golfie];
        golfie = offset.bind(tangon)(golfie);
        report['onPress'] = golfie;
        golfie = 15;
        golfie = verify[golfie];
        golfie = option.bind(tangon)(golfie);
        option = golfie.ChannelListMagnifyingGlassIcon;
        golfie = {};
        verify = 'xs';
        golfie['size'] = verify;
        golfie = zuuluu.bind(tangon)(option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 16;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/launchpad/native/LaunchPadPullTab.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();