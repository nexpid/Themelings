// app/modules/launchpad/native/shared/useChannelUnreadBadgeState.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var6 = require;
    var8 = metroImportDefault;
    var3 = exports;
    var7 = dependencyMap;
    var _closure1_slot0 = var6;
    var _closure1_slot1 = var7;
    var2 = function useBaseChannelUnreadBadgeState(arg1, arg2) {
        var2 = arg1;
        var _closure2_slot0 = var2;
        var2 = arg2;
        var _closure2_slot1 = var2;
        var5 = _closure1_slot0;
        var4 = _closure1_slot1;
        var3 = 3;
        var4 = var4[var3];
        var3 = undefined;
        var4 = var5.bind(var3)(var4);
        var3 = var4.useStateFromStoresObject;
        var5 = _closure1_slot3;
        var2 = new Array(1);
        var2[0] = var5;
        var1 = function() {
            _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
                var1 = {};
                var6 = _closure1_slot3;
                var5 = var6.ackMessageId;
                var4 = _closure2_slot0;
                var4 = var4.id;
                var4 = var5.bind(var6)(var4);
                var1['ackMessageId'] = var4;
                var4 = _closure2_slot1;
                var4 = !var4;
                if(!var4) { _fun0001_ip = 2; continue _fun0001 }
case 3:
                var7 = _closure1_slot3;
                var6 = var7.hasUnread;
                var5 = _closure2_slot0;
                var5 = var5.id;
                var4 = var6.bind(var7)(var5);
case 2:
                var1['unread'] = var4;
                var6 = _closure1_slot3;
                var5 = var6.getMentionCount;
                var2 = _closure2_slot0;
                var4 = var2.id;
                var4 = var5.bind(var6)(var4);
                var1['mentionCount'] = var4;
                var4 = _closure1_slot3;
                var3 = var4.getIsMentionLowImportance;
                var2 = var2.id;
                var2 = var3.bind(var4)(var2);
                var1['isMentionLowImportance'] = var2;
                return var1;
            }
        };
        var1 = var3.bind(var4)(var2, var1);
        return var1;
    };
    var _closure1_slot5 = var2;
    var1 = global;
    var10 = var1.Object;
    var9 = var10.defineProperty;
    var5 = {};
    var1 = true;
    var5['value'] = var1;
    var1 = '__esModule';
    var1 = var9.bind(var10)(var3, var1, var5);
    var1 = 0;
    var5 = var7[var1];
    var1 = undefined;
    var5 = var8.bind(var1)(var5);
    var _closure1_slot2 = var5;
    var5 = 1;
    var5 = var7[var5];
    var5 = var8.bind(var1)(var5);
    var _closure1_slot3 = var5;
    var5 = 2;
    var5 = var7[var5];
    var5 = var8.bind(var1)(var5);
    var _closure1_slot4 = var5;
    var5 = 5;
    var5 = var7[var5];
    var7 = var6.bind(var1)(var5);
    var6 = var7.fileFinishedImporting;
    var5 = 'modules/launchpad/native/shared/useChannelUnreadBadgeState.tsx';
    var5 = var6.bind(var7)(var5);
    var4 = function useChannelUnreadBadgeState(arg1, arg2) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var3 = _closure1_slot5;
        var10 = undefined;
        var2 = arg2;
        var2 = var3.bind(var10)(var1, var2);
        var12 = var2.unread;
        var3 = var2.mentionCount;
        var2 = var2.isMentionLowImportance;
        var9 = _closure1_slot0;
        var11 = _closure1_slot1;
        var8 = 3;
        var4 = var11[var8];
        var15 = var9.bind(var10)(var4);
        var14 = var15.useStateFromStores;
        var4 = _closure1_slot2;
        var13 = new Array(1);
        var13[0] = var4;
        var4 = var1.guild_id;
        var5 = new Array(2);
        var5[0] = var4;
        var4 = var1.id;
        var5[1] = var4;
        var4 = function() {
            var4 = _closure1_slot2;
            var3 = var4.shouldIndicateNewChannel;
            var1 = _closure2_slot0;
            var2 = var1.guild_id;
            var1 = var1.id;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        };
        var5 = var14.bind(var15)(var13, var4, var5);
        var4 = 4;
        var4 = var11[var4];
        var13 = var9.bind(var10)(var4);
        var4 = var13.useOptInEnabledForGuild;
        var1 = var1.guild_id;
        var4 = var4.bind(var13)(var1);
        var1 = {};
        var1['unread'] = var12;
        var8 = var11[var8];
        var9 = var9.bind(var10)(var8);
        var8 = var9.useStateFromStores;
        var10 = _closure1_slot4;
        var7 = new Array(1);
        var7[0] = var10;
        var6 = function() {
            var3 = _closure1_slot4;
            var2 = var3.resolveUnreadSetting;
            var1 = _closure2_slot0;
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var6 = var8.bind(var9)(var7, var6);
        var1['resolvedUnreadSetting'] = var6;
        var1['newChannel'] = var5;
        var1['optInEnabled'] = var4;
        var1['mentionCount'] = var3;
        var1['isMentionLowImportance'] = var2;
        return var1;
    };
    var3['useChannelUnreadBadgeState'] = var4;
    var3['useBaseChannelUnreadBadgeState'] = var2;
    return var1;
})();