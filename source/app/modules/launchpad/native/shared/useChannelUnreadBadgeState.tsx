// app/modules/launchpad/native/shared/useChannelUnreadBadgeState.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    oscar = argBar;
    options = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = golf;
    mike = function(argFoo, argBar) { // Original name: useBaseChannelUnreadBadgeState
        mike = argFoo;
        var _closure2_slot0 = mike;
        mike = argBar;
        var _closure2_slot1 = mike;
        report = _closure1_slot0;
        tango = _closure1_slot1;
        zulu = 3;
        tango = tango[zulu];
        zulu = undefined;
        tango = report.bind(zulu)(tango);
        zulu = tango.useStateFromStoresObject;
        report = _closure1_slot3;
        mike = new Array(1);
        mike[0] = report;
        entity = function() {
            _fun121034: for(var _fun121034_ip = 0; ; ) switch(_fun121034_ip) {
 0:
                entity = {};
                oscar = _closure1_slot3;
                report = oscar.ackMessageId;
                tango = _closure2_slot0;
                tango = tango.id;
                tango = report.bind(oscar)(tango);
                entity['ackMessageId'] = tango;
                tango = _closure2_slot1;
                tango = !tango;
                if(!tango) { _fun121034_ip = 71; continue _fun121034 }
 47:
                golf = _closure1_slot3;
                oscar = golf.hasUnread;
                report = _closure2_slot0;
                report = report.id;
                tango = oscar.bind(golf)(report);
 71:
                entity['unread'] = tango;
                oscar = _closure1_slot3;
                report = oscar.getMentionCount;
                mike = _closure2_slot0;
                tango = mike.id;
                tango = report.bind(oscar)(tango);
                entity['mentionCount'] = tango;
                tango = _closure1_slot3;
                zulu = tango.getIsMentionLowImportance;
                mike = mike.id;
                mike = zulu.bind(tango)(mike);
                entity['isMentionLowImportance'] = mike;
                return entity;
            }
        };
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot5 = mike;
    entity = global;
    offset = entity.Object;
    verify = offset.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = verify.bind(offset)(zulu, entity, report);
    entity = 0;
    report = golf[entity];
    entity = undefined;
    report = options.bind(entity)(report);
    var _closure1_slot2 = report;
    report = 1;
    report = golf[report];
    report = options.bind(entity)(report);
    var _closure1_slot3 = report;
    report = 2;
    report = golf[report];
    report = options.bind(entity)(report);
    var _closure1_slot4 = report;
    report = 5;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/launchpad/native/shared/useChannelUnreadBadgeState.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo, argBar) { // Original name: useChannelUnreadBadgeState
        entity = argFoo;
        var _closure2_slot0 = entity;
        zulu = _closure1_slot5;
        offset = undefined;
        mike = argBar;
        mike = zulu.bind(offset)(entity, mike);
        romeo = mike.unread;
        zulu = mike.mentionCount;
        mike = mike.isMentionLowImportance;
        verify = _closure1_slot0;
        yankee = _closure1_slot1;
        options = 3;
        tango = yankee[options];
        kilo = verify.bind(offset)(tango);
        backup = kilo.useStateFromStores;
        tango = _closure1_slot2;
        foxtrot = new Array(1);
        foxtrot[0] = tango;
        tango = entity.guild_id;
        report = new Array(2);
        report[0] = tango;
        tango = entity.id;
        report[1] = tango;
        tango = function() {
            tango = _closure1_slot2;
            zulu = tango.shouldIndicateNewChannel;
            entity = _closure2_slot0;
            mike = entity.guild_id;
            entity = entity.id;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        };
        report = backup.bind(kilo)(foxtrot, tango, report);
        tango = 4;
        tango = yankee[tango];
        foxtrot = verify.bind(offset)(tango);
        tango = foxtrot.useOptInEnabledForGuild;
        entity = entity.guild_id;
        tango = tango.bind(foxtrot)(entity);
        entity = {};
        entity['unread'] = romeo;
        options = yankee[options];
        verify = verify.bind(offset)(options);
        options = verify.useStateFromStores;
        offset = _closure1_slot4;
        golf = new Array(1);
        golf[0] = offset;
        oscar = function() {
            zulu = _closure1_slot4;
            mike = zulu.resolveUnreadSetting;
            entity = _closure2_slot0;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        oscar = options.bind(verify)(golf, oscar);
        entity['resolvedUnreadSetting'] = oscar;
        entity['newChannel'] = report;
        entity['optInEnabled'] = tango;
        entity['mentionCount'] = zulu;
        entity['isMentionLowImportance'] = mike;
        return entity;
    };
    zulu['useChannelUnreadBadgeState'] = tango;
    zulu['useBaseChannelUnreadBadgeState'] = mike;
    return entity;
})();