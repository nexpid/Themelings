// app/modules/launchpad/native/shared/useChannelUnreadBadgeState.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    oscard = argBar;
    option = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = golfie;
    michal = function(argFoo, argBar) { // Original name: useBaseChannelUnreadBadgeState
        michal = argFoo;
        var _closure2_slot0 = michal;
        michal = argBar;
        var _closure2_slot1 = michal;
        report = _closure1_slot0;
        tangon = _closure1_slot1;
        zuuluu = 3;
        tangon = tangon[zuuluu];
        zuuluu = undefined;
        tangon = report.bind(zuuluu)(tangon);
        zuuluu = tangon.useStateFromStoresObject;
        report = _closure1_slot3;
        michal = new Array(1);
        michal[0] = report;
        entity = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = {};
                oscard = _closure1_slot3;
                report = oscard.ackMessageId;
                tangon = _closure2_slot0;
                tangon = tangon.id;
                tangon = report.bind(oscard)(tangon);
                entity['ackMessageId'] = tangon;
                tangon = _closure2_slot1;
                tangon = !tangon;
                if(!tangon) { _fun00002_ip = 71; continue _fun00001 }
 47:
                golfie = _closure1_slot3;
                oscard = golfie.hasUnread;
                report = _closure2_slot0;
                report = report.id;
                tangon = oscard.bind(golfie)(report);
 71:
                entity['unread'] = tangon;
                oscard = _closure1_slot3;
                report = oscard.getMentionCount;
                michal = _closure2_slot0;
                tangon = michal.id;
                tangon = report.bind(oscard)(tangon);
                entity['mentionCount'] = tangon;
                tangon = _closure1_slot3;
                zuuluu = tangon.getIsMentionLowImportance;
                michal = michal.id;
                michal = zuuluu.bind(tangon)(michal);
                entity['isMentionLowImportance'] = michal;
                return entity;
            }
        };
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot5 = michal;
    entity = global;
    offset = entity.Object;
    verify = offset.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = verify.bind(offset)(zuuluu, entity, report);
    entity = 0;
    report = golfie[entity];
    entity = undefined;
    report = option.bind(entity)(report);
    var _closure1_slot2 = report;
    report = 1;
    report = golfie[report];
    report = option.bind(entity)(report);
    var _closure1_slot3 = report;
    report = 2;
    report = golfie[report];
    report = option.bind(entity)(report);
    var _closure1_slot4 = report;
    report = 5;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/launchpad/native/shared/useChannelUnreadBadgeState.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo, argBar) { // Original name: useChannelUnreadBadgeState
        entity = argFoo;
        var _closure2_slot0 = entity;
        zuuluu = _closure1_slot5;
        offset = undefined;
        michal = argBar;
        michal = zuuluu.bind(offset)(entity, michal);
        romeon = michal.unread;
        zuuluu = michal.mentionCount;
        michal = michal.isMentionLowImportance;
        verify = _closure1_slot0;
        yankee = _closure1_slot1;
        option = 3;
        tangon = yankee[option];
        kiloes = verify.bind(offset)(tangon);
        backup = kiloes.useStateFromStores;
        tangon = _closure1_slot2;
        foxtra = new Array(1);
        foxtra[0] = tangon;
        tangon = entity.guild_id;
        report = new Array(2);
        report[0] = tangon;
        tangon = entity.id;
        report[1] = tangon;
        tangon = function() {
            tangon = _closure1_slot2;
            zuuluu = tangon.shouldIndicateNewChannel;
            entity = _closure2_slot0;
            michal = entity.guild_id;
            entity = entity.id;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        report = backup.bind(kiloes)(foxtra, tangon, report);
        tangon = 4;
        tangon = yankee[tangon];
        foxtra = verify.bind(offset)(tangon);
        tangon = foxtra.useOptInEnabledForGuild;
        entity = entity.guild_id;
        tangon = tangon.bind(foxtra)(entity);
        entity = {};
        entity['unread'] = romeon;
        option = yankee[option];
        verify = verify.bind(offset)(option);
        option = verify.useStateFromStores;
        offset = _closure1_slot4;
        golfie = new Array(1);
        golfie[0] = offset;
        oscard = function() {
            zuuluu = _closure1_slot4;
            michal = zuuluu.resolveUnreadSetting;
            entity = _closure2_slot0;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        oscard = option.bind(verify)(golfie, oscard);
        entity['resolvedUnreadSetting'] = oscard;
        entity['newChannel'] = report;
        entity['optInEnabled'] = tangon;
        entity['mentionCount'] = zuuluu;
        entity['isMentionLowImportance'] = michal;
        return entity;
    };
    zuuluu['useChannelUnreadBadgeState'] = tangon;
    zuuluu['useBaseChannelUnreadBadgeState'] = michal;
    return entity;
})();