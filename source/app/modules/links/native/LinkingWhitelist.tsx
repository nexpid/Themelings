// app/modules/links/native/LinkingWhitelist.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    zuuluu = argFre;
    entity = global;
    oscard = entity.Object;
    report = oscard.defineProperty;
    tangon = {};
    michal = true;
    tangon['value'] = michal;
    michal = '__esModule';
    michal = report.bind(oscard)(zuuluu, michal, tangon);
    tangon = {};
    michal = {};
    report = /(?:^https?:\\/\\/)(?:www\.)?(bsky\.app)(?:$|\\/)/i;
    michal['regex'] = report;
    report = 'bluesky://';
    michal['protocol'] = report;
    tangon['bluesky'] = michal;
    michal = {};
    report = /(?:^discordconnect:\\/\\/)/i;
    michal['regex'] = report;
    report = 'discordconnect://';
    michal['protocol'] = report;
    tangon['discordConnect'] = michal;
    michal = {};
    report = /(?:^https?:\\/\\/)(?:www\.)?(facebook\.com)(?:$|\\/)/i;
    michal['regex'] = report;
    report = 'fb://';
    michal['protocol'] = report;
    tangon['facebook'] = michal;
    michal = {};
    report = /(?:^https?:\\/\\/)(?:www\.)?(instagram\.com|instagr\.am)(?:$|\\/)/i;
    michal['regex'] = report;
    report = 'instagram://';
    michal['protocol'] = report;
    tangon['instagram'] = michal;
    michal = {};
    report = /(?:^https?:\\/\\/)(?:open\.)?(spotify\.com)(?:$|\\/)/i;
    michal['regex'] = report;
    report = 'https://open.spotify.com';
    michal['protocol'] = report;
    tangon['spotify'] = michal;
    michal = {};
    report = /(?:^https?:\\/\\/)(?:www\.)?(tiktok\.com)(?:$|\\/)/i;
    michal['regex'] = report;
    report = 'tiktok://';
    michal['protocol'] = report;
    tangon['tiktok'] = michal;
    michal = {};
    report = /(?:^https?:\\/\\/)(?:www\.)?(twitch\.tv)(?:$|\\/)/i;
    michal['regex'] = report;
    report = 'twitch://';
    michal['protocol'] = report;
    tangon['twitch'] = michal;
    michal = {};
    report = /(?:^https?:\\/\\/)(?:www\.)?(?:twitter\.com|x\.com)(?:$|\\/)/i;
    michal['regex'] = report;
    report = 'twitter://';
    michal['protocol'] = report;
    tangon['twitter'] = michal;
    michal = {};
    report = /(?:^https?:\\/\\/)(?:www\.)?(youtube\.com|youtu\.be)(?:$|\\/)/i;
    michal['regex'] = report;
    report = 'youtube://';
    michal['protocol'] = report;
    tangon['youtube'] = michal;
    michal = entity.Object;
    entity = michal.values;
    michal = entity.bind(michal)(tangon);
    report = argPlu;
    entity = 0;
    oscard = report[entity];
    report = argBar;
    entity = undefined;
    golfie = report.bind(entity)(oscard);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/links/native/LinkingWhitelist.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['LINKING_WHITELIST'] = tangon;
    zuuluu['LINKING_WHITELIST_VALUES'] = michal;
    return entity;
})();