// app/modules/notifications/native/NotificationSurveyResponseActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot3 = golf;
    tango = tango.Image;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    golf = report.bind(entity)(tango);
    tango = golf.Fonts;
    golf = golf.HelpdeskArticles;
    var _closure1_slot5 = golf;
    golf = 3;
    options = oscar[golf];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot6 = options;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot7 = golf;
    golf = 4;
    golf = oscar[golf];
    verify = report.bind(entity)(golf);
    options = verify.createStyles;
    golf = {};
    offset = {};
    yankee = 5;
    yankee = oscar[yankee];
    kilo = romeo.bind(entity)(yankee);
    backup = tango.DISPLAY_EXTRABOLD;
    yankee = 6;
    tango = oscar[yankee];
    tango = romeo.bind(entity)(tango);
    tango = tango.colors;
    foxtrot = tango.INTERACTIVE_ACTIVE;
    tango = 16;
    output = kilo.bind(entity)(backup, foxtrot, tango);
    result = offset;
    foxtrot = copyDataProperties(result, output);
    backup = 8;
    foxtrot = 'marginTop';
    offset[foxtrot] = backup;
    foxtrot = 'marginBottom';
    offset[foxtrot] = backup;
    golf['title'] = offset;
    offset = {'color': null, 'textAlign': 'center', 'width': 343};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.INTERACTIVE_ACTIVE;
    offset['color'] = yankee;
    golf['subtitle'] = offset;
    offset = {'paddingTop': 50, 'paddingBottom': 100, 'alignItems': 'center'};
    golf['view'] = offset;
    offset = {'width': 116, 'height': 93};
    golf['rating'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot8 = golf;
    golf = function() { // Original name: onClose
        zulu = _closure1_slot1;
        mike = _closure1_slot2;
        entity = 7;
        mike = mike[entity];
        entity = undefined;
        zulu = zulu.bind(entity)(mike);
        mike = zulu.hideActionSheet;
        mike = mike.bind(zulu)();
        return entity;
    };
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/notifications/native/NotificationSurveyResponseActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: NotificationSurveyResponseActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            verify = entity.header;
            entity = _closure1_slot8;
            tango = undefined;
            kilo = entity.bind(tango)();
            zulu = _closure1_slot7;
            mike = _closure1_slot0;
            report = _closure1_slot2;
            entity = 8;
            entity = report[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.BottomSheet;
            entity = {};
            report = null;
            oscar = report != verify;
            if(!oscar) { _fun00002_ip = 143; continue _fun00001 }
 62:
            options = _closure1_slot6;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            report = 9;
            report = yankee[report];
            report = offset.bind(tango)(report);
            golf = report.BottomSheetTitleHeader;
            report = {};
            report['title'] = verify;
            verify = 10;
            verify = yankee[verify];
            verify = offset.bind(tango)(verify);
            offset = verify.ActionSheetCloseButton;
            verify = {};
            yankee = _closure1_slot9;
            verify['onPress'] = yankee;
            verify = options.bind(tango)(offset, verify);
            report['trailing'] = verify;
            oscar = options.bind(tango)(golf, report);
 143:
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot7;
            golf = _closure1_slot3;
            oscar = {};
            verify = kilo.view;
            oscar['style'] = verify;
            romeo = _closure1_slot6;
            offset = _closure1_slot4;
            verify = {};
            yankee = kilo.rating;
            verify['style'] = yankee;
            echo = _closure1_slot1;
            update = _closure1_slot2;
            yankee = 11;
            yankee = update[yankee];
            yankee = echo.bind(tango)(yankee);
            verify['source'] = yankee;
            offset = romeo.bind(tango)(offset, verify);
            verify = new Array(3);
            verify[0] = offset;
            backup = _closure1_slot0;
            offset = 12;
            offset = update[offset];
            offset = backup.bind(tango)(offset);
            yankee = offset.Text;
            offset = {};
            foxtrot = kilo.title;
            offset['style'] = foxtrot;
            foxtrot = 'heading-md/bold';
            offset['variant'] = foxtrot;
            foxtrot = 13;
            sizing = update[foxtrot];
            sizing = backup.bind(tango)(sizing);
            source = sizing.intl;
            result = source.string;
            sizing = update[foxtrot];
            sizing = backup.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.d9+vQ0;
            sizing = result.bind(source)(sizing);
            offset['children'] = sizing;
            offset = romeo.bind(tango)(yankee, offset);
            verify[1] = offset;
            offset = 14;
            offset = update[offset];
            offset = backup.bind(tango)(offset);
            yankee = offset.TextWithIOSLinkWorkaround;
            offset = {};
            kilo = kilo.subtitle;
            offset['style'] = kilo;
            kilo = 'text-md/normal';
            offset['variant'] = kilo;
            kilo = update[foxtrot];
            kilo = backup.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.format;
            foxtrot = update[foxtrot];
            foxtrot = backup.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            backup = foxtrot.WxD5QU;
            foxtrot = {};
            result = 15;
            result = update[result];
            echo = echo.bind(tango)(result);
            result = echo.getArticleURL;
            output = _closure1_slot5;
            output = output.HIGHLIGHTS_NOTIFICATIONS;
            output = result.bind(echo)(output);
            foxtrot['helpUrl'] = output;
            foxtrot = kilo.bind(sizing)(backup, foxtrot);
            offset['children'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[2] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();