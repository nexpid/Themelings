// app/modules/notifications/native/NotificationSurveyResponseActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.Image;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    golfie = report.bind(entity)(tangon);
    tangon = golfie.Fonts;
    golfie = golfie.HelpdeskArticles;
    var _closure1_slot5 = golfie;
    golfie = 3;
    option = oscard[golfie];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot6 = option;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot7 = golfie;
    golfie = 4;
    golfie = oscard[golfie];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = {};
    offset = {};
    yankee = 5;
    yankee = oscard[yankee];
    kiloes = romeon.bind(entity)(yankee);
    backup = tangon.DISPLAY_EXTRABOLD;
    yankee = 6;
    tangon = oscard[yankee];
    tangon = romeon.bind(entity)(tangon);
    tangon = tangon.colors;
    foxtra = tangon.INTERACTIVE_ACTIVE;
    tangon = 16;
    output = kiloes.bind(entity)(backup, foxtra, tangon);
    result = offset;
    foxtra = copyDataProperties(result, output);
    backup = 8;
    foxtra = 'marginTop';
    offset[foxtra] = backup;
    foxtra = 'marginBottom';
    offset[foxtra] = backup;
    golfie['title'] = offset;
    offset = {'color': null, 'textAlign': 'center', 'width': 343};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.INTERACTIVE_ACTIVE;
    offset['color'] = yankee;
    golfie['subtitle'] = offset;
    offset = {'paddingTop': 50, 'paddingBottom': 100, 'alignItems': 'center'};
    golfie['view'] = offset;
    offset = {'width': 116, 'height': 93};
    golfie['rating'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot8 = golfie;
    golfie = function() { // Original name: onClose
        zuuluu = _closure1_slot1;
        michal = _closure1_slot2;
        entity = 7;
        michal = michal[entity];
        entity = undefined;
        zuuluu = zuuluu.bind(entity)(michal);
        michal = zuuluu.hideActionSheet;
        michal = michal.bind(zuuluu)();
        return entity;
    };
    var _closure1_slot9 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/notifications/native/NotificationSurveyResponseActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: NotificationSurveyResponseActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            verify = entity.header;
            entity = _closure1_slot8;
            tangon = undefined;
            kiloes = entity.bind(tangon)();
            zuuluu = _closure1_slot7;
            michal = _closure1_slot0;
            report = _closure1_slot2;
            entity = 8;
            entity = report[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {};
            report = null;
            oscard = report != verify;
            if(!oscard) { _fun00002_ip = 143; continue _fun00001 }
 62:
            option = _closure1_slot6;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            report = 9;
            report = yankee[report];
            report = offset.bind(tangon)(report);
            golfie = report.BottomSheetTitleHeader;
            report = {};
            report['title'] = verify;
            verify = 10;
            verify = yankee[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.ActionSheetCloseButton;
            verify = {};
            yankee = _closure1_slot9;
            verify['onPress'] = yankee;
            verify = option.bind(tangon)(offset, verify);
            report['trailing'] = verify;
            oscard = option.bind(tangon)(golfie, report);
 143:
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot7;
            golfie = _closure1_slot3;
            oscard = {};
            verify = kiloes.view;
            oscard['style'] = verify;
            romeon = _closure1_slot6;
            offset = _closure1_slot4;
            verify = {};
            yankee = kiloes.rating;
            verify['style'] = yankee;
            echoed = _closure1_slot1;
            update = _closure1_slot2;
            yankee = 11;
            yankee = update[yankee];
            yankee = echoed.bind(tangon)(yankee);
            verify['source'] = yankee;
            offset = romeon.bind(tangon)(offset, verify);
            verify = new Array(3);
            verify[0] = offset;
            backup = _closure1_slot0;
            offset = 12;
            offset = update[offset];
            offset = backup.bind(tangon)(offset);
            yankee = offset.Text;
            offset = {};
            foxtra = kiloes.title;
            offset['style'] = foxtra;
            foxtra = 'heading-md/bold';
            offset['variant'] = foxtra;
            foxtra = 13;
            sizing = update[foxtra];
            sizing = backup.bind(tangon)(sizing);
            source = sizing.intl;
            result = source.string;
            sizing = update[foxtra];
            sizing = backup.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.d9+vQ0;
            sizing = result.bind(source)(sizing);
            offset['children'] = sizing;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[1] = offset;
            offset = 14;
            offset = update[offset];
            offset = backup.bind(tangon)(offset);
            yankee = offset.TextWithIOSLinkWorkaround;
            offset = {};
            kiloes = kiloes.subtitle;
            offset['style'] = kiloes;
            kiloes = 'text-md/normal';
            offset['variant'] = kiloes;
            kiloes = update[foxtra];
            kiloes = backup.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.format;
            foxtra = update[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            backup = foxtra.WxD5QU;
            foxtra = {};
            result = 15;
            result = update[result];
            echoed = echoed.bind(tangon)(result);
            result = echoed.getArticleURL;
            output = _closure1_slot5;
            output = output.HIGHLIGHTS_NOTIFICATIONS;
            output = result.bind(echoed)(output);
            foxtra['helpUrl'] = output;
            foxtra = kiloes.bind(sizing)(backup, foxtra);
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[2] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();