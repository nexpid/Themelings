// app/modules/notifications/native/NotificationSurveyActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: trackOpen
        tangon = _closure1_slot1;
        zuuluu = _closure1_slot2;
        entity = 5;
        zuuluu = zuuluu[entity];
        entity = undefined;
        report = tangon.bind(entity)(zuuluu);
        tangon = report.track;
        michal = _closure1_slot4;
        zuuluu = michal.OPEN_POPOUT;
        michal = {'type': 'Notification Feedback Sheet', 'source': 'Notification End'};
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    var _closure1_slot6 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.NotificationUserFeedbackReasons;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/notifications/native/NotificationSurveyActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: NotificationSurveyActionSheet
        entity = argFoo;
        michal = entity.notificationType;
        var _closure2_slot0 = michal;
        michal = entity.location;
        var _closure2_slot1 = michal;
        entity = entity.messageId;
        var _closure2_slot2 = entity;
        entity = {};
        michal = _closure1_slot3;
        zuuluu = michal.TOO_MANY;
        entity['value'] = zuuluu;
        yankee = _closure1_slot0;
        romeon = _closure1_slot2;
        option = 4;
        zuuluu = romeon[option];
        tangon = undefined;
        zuuluu = yankee.bind(tangon)(zuuluu);
        verify = zuuluu.intl;
        golfie = verify.string;
        zuuluu = romeon[option];
        zuuluu = yankee.bind(tangon)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.pLeQp6;
        zuuluu = golfie.bind(verify)(zuuluu);
        entity['label'] = zuuluu;
        golfie = new Array(3);
        golfie[0] = entity;
        entity = {};
        zuuluu = michal.IRRELEVANT;
        entity['value'] = zuuluu;
        zuuluu = romeon[option];
        zuuluu = yankee.bind(tangon)(zuuluu);
        offset = zuuluu.intl;
        verify = offset.string;
        zuuluu = romeon[option];
        zuuluu = yankee.bind(tangon)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.tuwPcH;
        zuuluu = verify.bind(offset)(zuuluu);
        entity['label'] = zuuluu;
        golfie[1] = entity;
        entity = {};
        michal = michal.DISLIKE_CONTENT;
        entity['value'] = michal;
        michal = romeon[option];
        michal = yankee.bind(tangon)(michal);
        verify = michal.intl;
        zuuluu = verify.string;
        michal = romeon[option];
        michal = yankee.bind(tangon)(michal);
        michal = michal.t;
        michal = michal.glUMho;
        michal = zuuluu.bind(verify)(michal);
        entity['label'] = michal;
        golfie[2] = entity;
        zuuluu = _closure1_slot5;
        michal = _closure1_slot1;
        entity = 6;
        entity = romeon[entity];
        michal = michal.bind(tangon)(entity);
        entity = {'headerLabel': null, 'showHeaderCloseButton': true, 'showDoNotShowAgainCheckbox': false};
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        foxtra = verify.intl;
        offset = foxtra.string;
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.wGioOz;
        verify = offset.bind(foxtra)(verify);
        entity['headerLabel'] = verify;
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        foxtra = verify.intl;
        offset = foxtra.string;
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.Yzl7Oj;
        verify = offset.bind(foxtra)(verify);
        entity['ratingsBodyLabel'] = verify;
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        offset = verify.intl;
        verify = offset.string;
        option = romeon[option];
        option = yankee.bind(tangon)(option);
        option = option.t;
        option = option.g1q5fn;
        option = verify.bind(offset)(option);
        entity['reasonsHeaderLabel'] = option;
        entity['reasons'] = golfie;
        oscard = _closure1_slot6;
        entity['trackOpen'] = oscard;
        report = function(argFoo) { // Original name: trackReport
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = argFoo;
                report = entity.rating;
                golfie = entity.reason;
                oscard = null;
                if(!(oscard != report)) { _fun00002_ip = 122; continue _fun00001 }
 21:
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                michal = 5;
                zuuluu = zuuluu[michal];
                michal = undefined;
                tangon = tangon.bind(michal)(zuuluu);
                zuuluu = tangon.track;
                entity = _closure1_slot4;
                michal = entity.NOTIFICATION_REPORT_SUBMITTED;
                entity = {};
                option = oscard != golfie;
                oscard = null;
                if(!option) { _fun00002_ip = 77; continue _fun00001 }
 72:
                oscard = golfie.value;
 77:
                entity['reason'] = oscard;
                entity['rating'] = report;
                oscard = _closure2_slot0;
                entity['notification_type'] = oscard;
                oscard = _closure2_slot1;
                entity['location'] = oscard;
                report = _closure2_slot2;
                entity['message_id'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
 122:
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                entity = 7;
                zuuluu = offset[entity];
                entity = undefined;
                tangon = verify.bind(entity)(zuuluu);
                zuuluu = tangon.handleSurveyCleanup;
                zuuluu = zuuluu.bind(tangon)();
                zuuluu = _closure1_slot1;
                michal = 8;
                michal = offset[michal];
                oscard = zuuluu.bind(entity)(michal);
                report = oscard.openLazy;
                michal = 10;
                michal = offset[michal];
                tangon = verify.bind(entity)(michal);
                michal = 9;
                zuuluu = offset[michal];
                michal = offset.paths;
                tangon = tangon.bind(entity)(zuuluu, michal);
                zuuluu = {};
                michal = 4;
                golfie = offset[michal];
                golfie = verify.bind(entity)(golfie);
                option = golfie.intl;
                golfie = option.string;
                michal = offset[michal];
                michal = verify.bind(entity)(michal);
                michal = michal.t;
                michal = michal.wGioOz;
                michal = golfie.bind(option)(michal);
                zuuluu['header'] = michal;
                michal = 'UserFeedbackSurvey';
                michal = report.bind(oscard)(tangon, michal, zuuluu);
                return entity;
            }
        };
        entity['trackReport'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();