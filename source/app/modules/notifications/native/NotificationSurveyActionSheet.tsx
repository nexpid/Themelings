// app/modules/notifications/native/NotificationSurveyActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: trackOpen
        tango = _closure1_slot1;
        zulu = _closure1_slot2;
        entity = 5;
        zulu = zulu[entity];
        entity = undefined;
        report = tango.bind(entity)(zulu);
        tango = report.track;
        mike = _closure1_slot4;
        zulu = mike.OPEN_POPOUT;
        mike = {'type': 'Notification Feedback Sheet', 'source': 'Notification End'};
        mike = tango.bind(report)(zulu, mike);
        return entity;
    };
    var _closure1_slot6 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.NotificationUserFeedbackReasons;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot5 = tango;
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/notifications/native/NotificationSurveyActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: NotificationSurveyActionSheet
        entity = argFoo;
        mike = entity.notificationType;
        var _closure2_slot0 = mike;
        mike = entity.location;
        var _closure2_slot1 = mike;
        entity = entity.messageId;
        var _closure2_slot2 = entity;
        entity = {};
        mike = _closure1_slot3;
        zulu = mike.TOO_MANY;
        entity['value'] = zulu;
        yankee = _closure1_slot0;
        romeo = _closure1_slot2;
        options = 4;
        zulu = romeo[options];
        tango = undefined;
        zulu = yankee.bind(tango)(zulu);
        verify = zulu.intl;
        golf = verify.string;
        zulu = romeo[options];
        zulu = yankee.bind(tango)(zulu);
        zulu = zulu.t;
        zulu = zulu.pLeQp6;
        zulu = golf.bind(verify)(zulu);
        entity['label'] = zulu;
        golf = new Array(3);
        golf[0] = entity;
        entity = {};
        zulu = mike.IRRELEVANT;
        entity['value'] = zulu;
        zulu = romeo[options];
        zulu = yankee.bind(tango)(zulu);
        offset = zulu.intl;
        verify = offset.string;
        zulu = romeo[options];
        zulu = yankee.bind(tango)(zulu);
        zulu = zulu.t;
        zulu = zulu.tuwPcH;
        zulu = verify.bind(offset)(zulu);
        entity['label'] = zulu;
        golf[1] = entity;
        entity = {};
        mike = mike.DISLIKE_CONTENT;
        entity['value'] = mike;
        mike = romeo[options];
        mike = yankee.bind(tango)(mike);
        verify = mike.intl;
        zulu = verify.string;
        mike = romeo[options];
        mike = yankee.bind(tango)(mike);
        mike = mike.t;
        mike = mike.glUMho;
        mike = zulu.bind(verify)(mike);
        entity['label'] = mike;
        golf[2] = entity;
        zulu = _closure1_slot5;
        mike = _closure1_slot1;
        entity = 6;
        entity = romeo[entity];
        mike = mike.bind(tango)(entity);
        entity = {'headerLabel': null, 'showHeaderCloseButton': true, 'showDoNotShowAgainCheckbox': false};
        verify = romeo[options];
        verify = yankee.bind(tango)(verify);
        foxtrot = verify.intl;
        offset = foxtrot.string;
        verify = romeo[options];
        verify = yankee.bind(tango)(verify);
        verify = verify.t;
        verify = verify.wGioOz;
        verify = offset.bind(foxtrot)(verify);
        entity['headerLabel'] = verify;
        verify = romeo[options];
        verify = yankee.bind(tango)(verify);
        foxtrot = verify.intl;
        offset = foxtrot.string;
        verify = romeo[options];
        verify = yankee.bind(tango)(verify);
        verify = verify.t;
        verify = verify.Yzl7Oj;
        verify = offset.bind(foxtrot)(verify);
        entity['ratingsBodyLabel'] = verify;
        verify = romeo[options];
        verify = yankee.bind(tango)(verify);
        offset = verify.intl;
        verify = offset.string;
        options = romeo[options];
        options = yankee.bind(tango)(options);
        options = options.t;
        options = options.g1q5fn;
        options = verify.bind(offset)(options);
        entity['reasonsHeaderLabel'] = options;
        entity['reasons'] = golf;
        oscar = _closure1_slot6;
        entity['trackOpen'] = oscar;
        report = function(argFoo) { // Original name: trackReport
            _fun90737: for(var _fun90737_ip = 0; ; ) switch(_fun90737_ip) {
 0:
                entity = argFoo;
                report = entity.rating;
                golf = entity.reason;
                oscar = null;
                if(!(oscar != report)) { _fun90737_ip = 122; continue _fun90737 }
 21:
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                mike = 5;
                zulu = zulu[mike];
                mike = undefined;
                tango = tango.bind(mike)(zulu);
                zulu = tango.track;
                entity = _closure1_slot4;
                mike = entity.NOTIFICATION_REPORT_SUBMITTED;
                entity = {};
                options = oscar != golf;
                oscar = null;
                if(!options) { _fun90737_ip = 77; continue _fun90737 }
 72:
                oscar = golf.value;
 77:
                entity['reason'] = oscar;
                entity['rating'] = report;
                oscar = _closure2_slot0;
                entity['notification_type'] = oscar;
                oscar = _closure2_slot1;
                entity['location'] = oscar;
                report = _closure2_slot2;
                entity['message_id'] = report;
                entity = zulu.bind(tango)(mike, entity);
 122:
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                entity = 7;
                zulu = offset[entity];
                entity = undefined;
                tango = verify.bind(entity)(zulu);
                zulu = tango.handleSurveyCleanup;
                zulu = zulu.bind(tango)();
                zulu = _closure1_slot1;
                mike = 8;
                mike = offset[mike];
                oscar = zulu.bind(entity)(mike);
                report = oscar.openLazy;
                mike = 10;
                mike = offset[mike];
                tango = verify.bind(entity)(mike);
                mike = 9;
                zulu = offset[mike];
                mike = offset.paths;
                tango = tango.bind(entity)(zulu, mike);
                zulu = {};
                mike = 4;
                golf = offset[mike];
                golf = verify.bind(entity)(golf);
                options = golf.intl;
                golf = options.string;
                mike = offset[mike];
                mike = verify.bind(entity)(mike);
                mike = mike.t;
                mike = mike.wGioOz;
                mike = golf.bind(options)(mike);
                zulu['header'] = mike;
                mike = 'UserFeedbackSurvey';
                mike = report.bind(oscar)(tango, mike, zulu);
                return entity;
            }
        };
        entity['trackReport'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();