// app/modules/notifications/NotificationsExperiment.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    golf = argBar;
    zulu = argFred;
    options = argPlugh;
    entity = global;
    report = entity.Object;
    tango = report.defineProperty;
    mike = {};
    romeo = true;
    mike['value'] = romeo;
    entity = '__esModule';
    entity = tango.bind(report)(zulu, entity, mike);
    mike = 0;
    tango = options[mike];
    entity = undefined;
    verify = golf.bind(entity)(tango);
    report = verify.createExperiment;
    tango = {'kind': 'user', 'id': '2023-11_totally_benign_and_non_controversial_notification_tweaks', 'label': 'Notification Changes'};
    oscar = {};
    offset = false;
    oscar['enabled'] = offset;
    tango['defaultConfig'] = oscar;
    yankee = {'id': 1, 'label': 'Use the unfinished, not ready, and totally benign notification tweaks'};
    oscar = 1;
    offset = {};
    offset['enabled'] = romeo;
    yankee['config'] = offset;
    offset = new Array(1);
    offset[0] = yankee;
    tango['treatments'] = offset;
    report = report.bind(verify)(tango);
    tango = options[mike];
    offset = golf.bind(entity)(tango);
    verify = offset.createExperiment;
    tango = {'kind': 'user', 'id': '2024-01_unreads', 'label': 'Unreads Experiment (grey-dot mode)'};
    yankee = {'logExposure': false, 'autoOpen': false, 'manuallyOpen': false};
    tango['defaultConfig'] = yankee;
    romeo = {'id': 0, 'label': 'Control'};
    yankee = {'logExposure': true, 'autoOpen': false, 'manuallyOpen': false};
    romeo['config'] = yankee;
    yankee = new Array(3);
    yankee[0] = romeo;
    romeo = {'id': 1, 'label': 'Auto open migration'};
    foxtrot = {'logExposure': true, 'autoOpen': true, 'manuallyOpen': false};
    romeo['config'] = foxtrot;
    yankee[1] = romeo;
    romeo = {'id': 2, 'label': 'Manually open migration'};
    foxtrot = {'logExposure': false, 'autoOpen': false, 'manuallyOpen': true};
    romeo['config'] = foxtrot;
    yankee[2] = romeo;
    tango['treatments'] = yankee;
    tango = verify.bind(offset)(tango);
    mike = options[mike];
    offset = golf.bind(entity)(mike);
    verify = offset.createExperiment;
    mike = {'kind': 'user', 'id': '2024-11_unreads_new_users2', 'label': 'Unreads Experiment (grey-dot mode) (new users) 2'};
    yankee = {'enabled': false, 'logExposure': false};
    mike['defaultConfig'] = yankee;
    romeo = {'id': 0, 'label': 'Control'};
    yankee = {'enabled': false, 'logExposure': true};
    romeo['config'] = yankee;
    yankee = new Array(2);
    yankee[0] = romeo;
    romeo = {'id': 1, 'label': 'Auto open migration'};
    foxtrot = {'enabled': true, 'logExposure': true};
    romeo['config'] = foxtrot;
    yankee[1] = romeo;
    mike['treatments'] = yankee;
    mike = verify.bind(offset)(mike);
    oscar = options[oscar];
    options = golf.bind(entity)(oscar);
    golf = options.fileFinishedImporting;
    oscar = 'modules/notifications/NotificationsExperiment.tsx';
    oscar = golf.bind(options)(oscar);
    zulu['NotificationsExperiment'] = report;
    zulu['UnreadsEntryPointExperiment'] = tango;
    zulu['NewUserUnreadsEntryPointExperiment'] = mike;
    return entity;
})();