// app/modules/notifications/NotificationsExperiment.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    golfie = argBar;
    zuuluu = argFre;
    option = argPlu;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    romeon = true;
    michal['value'] = romeon;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    michal = 0;
    tangon = option[michal];
    entity = undefined;
    verify = golfie.bind(entity)(tangon);
    report = verify.createExperiment;
    tangon = {'kind': 'user', 'id': '2023-11_totally_benign_and_non_controversial_notification_tweaks', 'label': 'Notification Changes'};
    oscard = {};
    offset = false;
    oscard['enabled'] = offset;
    tangon['defaultConfig'] = oscard;
    yankee = {'id': 1, 'label': 'Use the unfinished, not ready, and totally benign notification tweaks'};
    oscard = 1;
    offset = {};
    offset['enabled'] = romeon;
    yankee['config'] = offset;
    offset = new Array(1);
    offset[0] = yankee;
    tangon['treatments'] = offset;
    report = report.bind(verify)(tangon);
    tangon = option[michal];
    offset = golfie.bind(entity)(tangon);
    verify = offset.createExperiment;
    tangon = {'kind': 'user', 'id': '2024-01_unreads', 'label': 'Unreads Experiment (grey-dot mode)'};
    yankee = {'logExposure': false, 'autoOpen': false, 'manuallyOpen': false};
    tangon['defaultConfig'] = yankee;
    romeon = {'id': 0, 'label': 'Control'};
    yankee = {'logExposure': true, 'autoOpen': false, 'manuallyOpen': false};
    romeon['config'] = yankee;
    yankee = new Array(3);
    yankee[0] = romeon;
    romeon = {'id': 1, 'label': 'Auto open migration'};
    foxtra = {'logExposure': true, 'autoOpen': true, 'manuallyOpen': false};
    romeon['config'] = foxtra;
    yankee[1] = romeon;
    romeon = {'id': 2, 'label': 'Manually open migration'};
    foxtra = {'logExposure': false, 'autoOpen': false, 'manuallyOpen': true};
    romeon['config'] = foxtra;
    yankee[2] = romeon;
    tangon['treatments'] = yankee;
    tangon = verify.bind(offset)(tangon);
    michal = option[michal];
    offset = golfie.bind(entity)(michal);
    verify = offset.createExperiment;
    michal = {'kind': 'user', 'id': '2024-11_unreads_new_users2', 'label': 'Unreads Experiment (grey-dot mode) (new users) 2'};
    yankee = {'enabled': false, 'logExposure': false};
    michal['defaultConfig'] = yankee;
    romeon = {'id': 0, 'label': 'Control'};
    yankee = {'enabled': false, 'logExposure': true};
    romeon['config'] = yankee;
    yankee = new Array(2);
    yankee[0] = romeon;
    romeon = {'id': 1, 'label': 'Auto open migration'};
    foxtra = {'enabled': true, 'logExposure': true};
    romeon['config'] = foxtra;
    yankee[1] = romeon;
    michal['treatments'] = yankee;
    michal = verify.bind(offset)(michal);
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/notifications/NotificationsExperiment.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['NotificationsExperiment'] = report;
    zuuluu['UnreadsEntryPointExperiment'] = tangon;
    zuuluu['NewUserUnreadsEntryPointExperiment'] = michal;
    return entity;
})();