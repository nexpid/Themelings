// app/modules/notifications/settings/utils/notficationSettingsChannelFlagUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UserNotificationSettings;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UnreadSetting;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ChannelNotificationSettingsFlags;
    var _closure1_slot8 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/notifications/settings/utils/notficationSettingsChannelFlagUtils.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: useChannelPresetSettings
        michal = argFoo;
        var _closure2_slot0 = michal;
        oscard = _closure1_slot0;
        golfie = _closure1_slot2;
        michal = 6;
        report = golfie[michal];
        zuuluu = undefined;
        offset = oscard.bind(zuuluu)(report);
        option = offset.useStateFromStores;
        verify = _closure1_slot5;
        report = new Array(1);
        report[0] = verify;
        tangon = function() {
            zuuluu = _closure1_slot5;
            michal = zuuluu.resolveUnreadSetting;
            entity = _closure2_slot0;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        report = option.bind(offset)(report, tangon);
        michal = golfie[michal];
        option = oscard.bind(zuuluu)(michal);
        tangon = option.useStateFromStores;
        michal = new Array(1);
        michal[0] = verify;
        entity = function() {
            zuuluu = _closure1_slot5;
            michal = zuuluu.resolvedMessageNotifications;
            entity = _closure2_slot0;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        tangon = tangon.bind(option)(michal, entity);
        entity = {};
        entity['unread'] = report;
        entity['notification'] = tangon;
        michal = 7;
        michal = golfie[michal];
        zuuluu = oscard.bind(zuuluu)(michal);
        michal = zuuluu.presetFromSettings;
        michal = michal.bind(zuuluu)(report, tangon);
        entity['preset'] = michal;
        return entity;
    };
    zuuluu['useChannelPresetSettings'] = tangon;
    tangon = function(argFoo) { // Original name: useChannelPresetInheritance
        tangon = argFoo;
        var _closure2_slot0 = tangon;
        option = _closure1_slot0;
        verify = _closure1_slot2;
        golfie = 6;
        zuuluu = verify[golfie];
        report = undefined;
        romeon = option.bind(report)(zuuluu);
        yankee = romeon.useStateFromStoresArray;
        zuuluu = _closure1_slot5;
        offset = new Array(1);
        offset[0] = zuuluu;
        oscard = function() {
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            michal = 8;
            zuuluu = zuuluu[michal];
            michal = undefined;
            tangon = tangon.bind(michal)(zuuluu);
            zuuluu = tangon.filterOverrides;
            report = _closure1_slot5;
            michal = report.getChannelOverrides;
            entity = _closure2_slot0;
            entity = entity.guild_id;
            michal = michal.bind(report)(entity);
            entity = {'ignoreMute': true, 'ignoreUnreadSetting': false, 'ignoreNotificationSetting': false};
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        oscard = yankee.bind(romeon)(offset, oscard);
        var _closure2_slot1 = oscard;
        golfie = verify[golfie];
        verify = option.bind(report)(golfie);
        option = verify.useStateFromStoresArray;
        golfie = new Array(2);
        golfie[0] = zuuluu;
        zuuluu = _closure1_slot4;
        golfie[1] = zuuluu;
        offset = tangon.guild_id;
        zuuluu = new Array(3);
        zuuluu[0] = offset;
        offset = tangon.parent_id;
        zuuluu[1] = offset;
        zuuluu[2] = oscard;
        michal = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                report = _closure1_slot4;
                tangon = report.getChannel;
                zuuluu = _closure2_slot0;
                zuuluu = zuuluu.parent_id;
                verify = tangon.bind(report)(zuuluu);
                zuuluu = null;
                if(!(zuuluu != verify)) { _fun00002_ip = 58; continue _fun00001 }
 36:
                report = _closure2_slot1;
                tangon = report.includes;
                zuuluu = verify.id;
                zuuluu = tangon.bind(report)(zuuluu);
                if(zuuluu) { _fun00002_ip = 168; continue _fun00001 }
 58:
                golfie = _closure1_slot0;
                option = _closure1_slot2;
                report = 7;
                zuuluu = option[report];
                oscard = undefined;
                tangon = golfie.bind(oscard)(zuuluu);
                zuuluu = tangon.presetName;
                report = option[report];
                golfie = golfie.bind(oscard)(report);
                oscard = golfie.presetFromSettings;
                offset = _closure1_slot5;
                option = offset.getGuildUnreadSetting;
                entity = _closure2_slot0;
                report = entity.guild_id;
                report = option.bind(offset)(report);
                option = offset.getMessageNotifications;
                entity = entity.guild_id;
                entity = option.bind(offset)(entity);
                entity = oscard.bind(golfie)(report, entity);
                zuuluu = zuuluu.bind(tangon)(entity);
                entity = ['guild'];
                entity[1] = zuuluu;
                _fun00002_ip = 265; continue _fun00001;
 168:
                golfie = _closure1_slot0;
                option = _closure1_slot2;
                report = 7;
                zuuluu = option[report];
                oscard = undefined;
                tangon = golfie.bind(oscard)(zuuluu);
                zuuluu = tangon.presetName;
                report = option[report];
                golfie = golfie.bind(oscard)(report);
                oscard = golfie.presetFromSettings;
                option = _closure1_slot5;
                michal = option.resolveUnreadSetting;
                report = michal.bind(option)(verify);
                michal = option.resolvedMessageNotifications;
                michal = michal.bind(option)(verify);
                michal = oscard.bind(golfie)(report, michal);
                zuuluu = zuuluu.bind(tangon)(michal);
                michal = ['parent'];
                michal[1] = zuuluu;
                entity = michal;
 265:
                return entity;
            }
        };
        zuuluu = option.bind(verify)(golfie, michal, zuuluu);
        michal = _closure1_slot3;
        entity = 2;
        michal = michal.bind(report)(zuuluu, entity);
        entity = 0;
        zuuluu = michal[entity];
        entity = 1;
        michal = michal[entity];
        entity = {};
        report = oscard.includes;
        tangon = tangon.id;
        tangon = report.bind(oscard)(tangon);
        tangon = !tangon;
        entity['inherited'] = tangon;
        entity['inheritedFrom'] = zuuluu;
        entity['inheritedPreset'] = michal;
        return entity;
    };
    zuuluu['useChannelPresetInheritance'] = tangon;
    tangon = function(argFoo, argBar, argBaz) { // Original name: updateChannelPreset
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            golfie = argFoo;
            oscard = argBar;
            tangon = argBaz;
            zuuluu = _closure1_slot5;
            entity = zuuluu.getChannelIdFlags;
            romeon = entity.bind(zuuluu)(golfie, oscard);
            report = _closure1_slot0;
            entity = _closure1_slot2;
            option = 7;
            zuuluu = entity[option];
            entity = undefined;
            zuuluu = report.bind(entity)(zuuluu);
            zuuluu = zuuluu.Presets;
            zuuluu = zuuluu.ALL_MESSAGES;
            if(!(tangon !== zuuluu)) { _fun00004_ip = 401; continue _fun00003 }
 69:
            report = _closure1_slot0;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu[option];
            zuuluu = report.bind(entity)(zuuluu);
            zuuluu = zuuluu.Presets;
            zuuluu = zuuluu.MENTIONS;
            if(!(tangon !== zuuluu)) { _fun00004_ip = 271; continue _fun00003 }
 105:
            report = _closure1_slot0;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu[option];
            zuuluu = report.bind(entity)(zuuluu);
            zuuluu = zuuluu.Presets;
            zuuluu = zuuluu.NOTHING;
            if(!(tangon === zuuluu)) { _fun00004_ip = 526; continue _fun00003 }
 141:
            tangon = _closure1_slot1;
            offset = _closure1_slot2;
            zuuluu = 9;
            zuuluu = offset[zuuluu];
            option = tangon.bind(entity)(zuuluu);
            report = option.updateChannelOverrideSettings;
            tangon = {};
            zuuluu = _closure1_slot6;
            zuuluu = zuuluu.NO_MESSAGES;
            tangon['message_notifications'] = zuuluu;
            verify = _closure1_slot0;
            zuuluu = 10;
            zuuluu = offset[zuuluu];
            foxtra = verify.bind(entity)(zuuluu);
            yankee = foxtra.withChannelUnreadFlags;
            zuuluu = _closure1_slot8;
            zuuluu = zuuluu.UNREADS_ONLY_MENTIONS;
            zuuluu = yankee.bind(foxtra)(romeon, zuuluu);
            tangon['flags'] = zuuluu;
            zuuluu = 11;
            zuuluu = offset[zuuluu];
            zuuluu = verify.bind(entity)(zuuluu);
            zuuluu = zuuluu.NotificationLabels;
            backup = zuuluu.PresetNothing;
            result = option;
            output = golfie;
            sizing = oscard;
            kiloes = tangon;
            zuuluu = result[report](output, sizing, kiloes, backup, foxtra);
            _fun00004_ip = 526; continue _fun00003;
 271:
            tangon = _closure1_slot1;
            offset = _closure1_slot2;
            zuuluu = 9;
            zuuluu = offset[zuuluu];
            option = tangon.bind(entity)(zuuluu);
            report = option.updateChannelOverrideSettings;
            tangon = {};
            zuuluu = _closure1_slot6;
            zuuluu = zuuluu.ONLY_MENTIONS;
            tangon['message_notifications'] = zuuluu;
            verify = _closure1_slot0;
            zuuluu = 10;
            zuuluu = offset[zuuluu];
            foxtra = verify.bind(entity)(zuuluu);
            yankee = foxtra.withChannelUnreadFlags;
            zuuluu = _closure1_slot8;
            zuuluu = zuuluu.UNREADS_ONLY_MENTIONS;
            zuuluu = yankee.bind(foxtra)(romeon, zuuluu);
            tangon['flags'] = zuuluu;
            zuuluu = 11;
            zuuluu = offset[zuuluu];
            zuuluu = verify.bind(entity)(zuuluu);
            zuuluu = zuuluu.NotificationLabels;
            backup = zuuluu.PresetMentions;
            result = option;
            output = golfie;
            sizing = oscard;
            kiloes = tangon;
            zuuluu = result[report](output, sizing, kiloes, backup, foxtra);
            _fun00004_ip = 526; continue _fun00003;
 401:
            tangon = _closure1_slot1;
            verify = _closure1_slot2;
            zuuluu = 9;
            zuuluu = verify[zuuluu];
            report = tangon.bind(entity)(zuuluu);
            tangon = report.updateChannelOverrideSettings;
            zuuluu = {};
            option = _closure1_slot6;
            option = option.ALL_MESSAGES;
            zuuluu['message_notifications'] = option;
            option = _closure1_slot0;
            offset = 10;
            offset = verify[offset];
            yankee = option.bind(entity)(offset);
            offset = yankee.withChannelUnreadFlags;
            michal = _closure1_slot8;
            michal = michal.UNREADS_ALL_MESSAGES;
            michal = offset.bind(yankee)(romeon, michal);
            zuuluu['flags'] = michal;
            michal = 11;
            michal = verify[michal];
            michal = option.bind(entity)(michal);
            michal = michal.NotificationLabels;
            backup = michal.PresetAll;
            result = report;
            output = golfie;
            sizing = oscard;
            kiloes = zuuluu;
            michal = result[tangon](output, sizing, kiloes, backup, foxtra);
 526:
            return entity;
        }
    };
    zuuluu['updateChannelPreset'] = tangon;
    tangon = function(argFoo, argBar) { // Original name: updateChannelToGuildDefault
        golfie = argFoo;
        oscard = argBar;
        tangon = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 9;
        zuuluu = verify[entity];
        entity = undefined;
        report = tangon.bind(entity)(zuuluu);
        tangon = report.updateChannelOverrideSettings;
        zuuluu = {};
        option = _closure1_slot6;
        option = option.NULL;
        zuuluu['message_notifications'] = option;
        option = _closure1_slot0;
        offset = 10;
        offset = verify[offset];
        yankee = option.bind(entity)(offset);
        offset = yankee.resetChannelUnreadFlags;
        romeon = _closure1_slot5;
        michal = romeon.getChannelIdFlags;
        michal = michal.bind(romeon)(golfie, oscard);
        michal = offset.bind(yankee)(michal);
        zuuluu['flags'] = michal;
        michal = 11;
        michal = verify[michal];
        michal = option.bind(entity)(michal);
        michal = michal.NotificationLabels;
        foxtra = michal.PresetDefault;
        output = report;
        sizing = golfie;
        kiloes = oscard;
        backup = zuuluu;
        michal = output[tangon](sizing, kiloes, backup, foxtra, romeon);
        return entity;
    };
    zuuluu['updateChannelToGuildDefault'] = tangon;
    tangon = function(argFoo, argBar, argBaz) { // Original name: updateChannelUnreadSetting
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            golfie = argFoo;
            oscard = argBar;
            verify = argBaz;
            zuuluu = _closure1_slot5;
            entity = zuuluu.getChannelIdFlags;
            romeon = entity.bind(zuuluu)(golfie, oscard);
            tangon = _closure1_slot1;
            yankee = _closure1_slot2;
            entity = 9;
            zuuluu = yankee[entity];
            entity = undefined;
            report = tangon.bind(entity)(zuuluu);
            tangon = report.updateChannelOverrideSettings;
            zuuluu = {};
            offset = _closure1_slot0;
            option = 10;
            option = yankee[option];
            yankee = offset.bind(entity)(option);
            offset = yankee.withChannelUnreadFlags;
            option = _closure1_slot7;
            option = option.ALL_MESSAGES;
            if(!(verify !== option)) { _fun00006_ip = 106; continue _fun00005 }
 94:
            option = _closure1_slot8;
            option = option.UNREADS_ONLY_MENTIONS;
            _fun00006_ip = 116; continue _fun00005;
 106:
            foxtra = _closure1_slot8;
            option = foxtra.UNREADS_ALL_MESSAGES;
 116:
            option = offset.bind(yankee)(romeon, option);
            zuuluu['flags'] = option;
            option = _closure1_slot0;
            offset = _closure1_slot2;
            michal = 11;
            michal = offset[michal];
            michal = option.bind(entity)(michal);
            option = michal.NotificationLabel;
            michal = option.unreads;
            backup = michal.bind(option)(verify);
            result = report;
            output = golfie;
            sizing = oscard;
            kiloes = zuuluu;
            michal = result[tangon](output, sizing, kiloes, backup, foxtra);
            return entity;
        }
    };
    zuuluu['updateChannelUnreadSetting'] = tangon;
    michal = function(argFoo, argBar, argBaz) { // Original name: updateChannelNotificationSetting
        tangon = argBaz;
        report = _closure1_slot1;
        option = _closure1_slot2;
        entity = 9;
        zuuluu = option[entity];
        entity = undefined;
        golfie = report.bind(entity)(zuuluu);
        oscard = golfie.updateChannelOverrideSettings;
        report = {};
        report['message_notifications'] = tangon;
        zuuluu = _closure1_slot0;
        michal = 11;
        michal = option[michal];
        michal = zuuluu.bind(entity)(michal);
        zuuluu = michal.NotificationLabel;
        michal = zuuluu.notifications;
        verify = michal.bind(zuuluu)(tangon);
        romeon = argFoo;
        yankee = argBar;
        foxtra = golfie;
        offset = report;
        michal = foxtra[oscard](romeon, yankee, offset, verify, option);
        return entity;
    };
    zuuluu['updateChannelNotificationSetting'] = michal;
    return entity;
})();