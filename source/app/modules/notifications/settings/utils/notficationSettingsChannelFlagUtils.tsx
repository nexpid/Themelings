// app/modules/notifications/settings/utils/notficationSettingsChannelFlagUtils.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var7 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var7;
    var _closure1_slot2 = var6;
    var1 = global;
    var9 = var1.Object;
    var8 = var9.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var8.bind(var9)(var3, var1, var4);
    var1 = 0;
    var4 = var6[var1];
    var1 = undefined;
    var4 = var7.bind(var1)(var4);
    var _closure1_slot3 = var4;
    var4 = 1;
    var4 = var6[var4];
    var4 = var7.bind(var1)(var4);
    var _closure1_slot4 = var4;
    var4 = 2;
    var4 = var6[var4];
    var4 = var7.bind(var1)(var4);
    var _closure1_slot5 = var4;
    var4 = 3;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.UserNotificationSettings;
    var _closure1_slot6 = var4;
    var4 = 4;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.UnreadSetting;
    var _closure1_slot7 = var4;
    var4 = 5;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.ChannelNotificationSettingsFlags;
    var _closure1_slot8 = var4;
    var4 = 12;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/notifications/settings/utils/notficationSettingsChannelFlagUtils.tsx';
    var4 = var5.bind(var6)(var4);
    var4 = function useChannelPresetSettings(arg1) {
        var2 = arg1;
        var _closure2_slot0 = var2;
        var6 = _closure1_slot0;
        var7 = _closure1_slot2;
        var2 = 6;
        var5 = var7[var2];
        var3 = undefined;
        var10 = var6.bind(var3)(var5);
        var8 = var10.useStateFromStores;
        var9 = _closure1_slot5;
        var5 = new Array(1);
        var5[0] = var9;
        var4 = function() {
            var3 = _closure1_slot5;
            var2 = var3.resolveUnreadSetting;
            var1 = _closure2_slot0;
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var5 = var8.bind(var10)(var5, var4);
        var2 = var7[var2];
        var8 = var6.bind(var3)(var2);
        var4 = var8.useStateFromStores;
        var2 = new Array(1);
        var2[0] = var9;
        var1 = function() {
            var3 = _closure1_slot5;
            var2 = var3.resolvedMessageNotifications;
            var1 = _closure2_slot0;
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var4 = var4.bind(var8)(var2, var1);
        var1 = {};
        var1['unread'] = var5;
        var1['notification'] = var4;
        var2 = 7;
        var2 = var7[var2];
        var3 = var6.bind(var3)(var2);
        var2 = var3.presetFromSettings;
        var2 = var2.bind(var3)(var5, var4);
        var1['preset'] = var2;
        return var1;
    };
    var3['useChannelPresetSettings'] = var4;
    var4 = function useChannelPresetInheritance(arg1) {
        var4 = arg1;
        var _closure2_slot0 = var4;
        var8 = _closure1_slot0;
        var9 = _closure1_slot2;
        var7 = 6;
        var3 = var9[var7];
        var5 = undefined;
        var12 = var8.bind(var5)(var3);
        var11 = var12.useStateFromStoresArray;
        var3 = _closure1_slot5;
        var10 = new Array(1);
        var10[0] = var3;
        var6 = function() {
            var4 = _closure1_slot0;
            var3 = _closure1_slot2;
            var2 = 8;
            var3 = var3[var2];
            var2 = undefined;
            var4 = var4.bind(var2)(var3);
            var3 = var4.filterOverrides;
            var5 = _closure1_slot5;
            var2 = var5.getChannelOverrides;
            var1 = _closure2_slot0;
            var1 = var1.guild_id;
            var2 = var2.bind(var5)(var1);
            var1 = {'ignoreMute': true, 'ignoreUnreadSetting': false, 'ignoreNotificationSetting': false};
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        };
        var6 = var11.bind(var12)(var10, var6);
        var _closure2_slot1 = var6;
        var7 = var9[var7];
        var9 = var8.bind(var5)(var7);
        var8 = var9.useStateFromStoresArray;
        var7 = new Array(2);
        var7[0] = var3;
        var3 = _closure1_slot4;
        var7[1] = var3;
        var10 = var4.guild_id;
        var3 = new Array(3);
        var3[0] = var10;
        var10 = var4.parent_id;
        var3[1] = var10;
        var3[2] = var6;
        var2 = function() {
            _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
                var5 = _closure1_slot4;
                var4 = var5.getChannel;
                var3 = _closure2_slot0;
                var3 = var3.parent_id;
                var9 = var4.bind(var5)(var3);
                var3 = null;
                if(!(var3 != var9)) { _fun0001_ip = 58; continue _fun0001 }
 36:
                var5 = _closure2_slot1;
                var4 = var5.includes;
                var3 = var9.id;
                var3 = var4.bind(var5)(var3);
                if(var3) { _fun0001_ip = 168; continue _fun0001 }
 58:
                var7 = _closure1_slot0;
                var8 = _closure1_slot2;
                var5 = 7;
                var3 = var8[var5];
                var6 = undefined;
                var4 = var7.bind(var6)(var3);
                var3 = var4.presetName;
                var5 = var8[var5];
                var7 = var7.bind(var6)(var5);
                var6 = var7.presetFromSettings;
                var10 = _closure1_slot5;
                var8 = var10.getGuildUnreadSetting;
                var1 = _closure2_slot0;
                var5 = var1.guild_id;
                var5 = var8.bind(var10)(var5);
                var8 = var10.getMessageNotifications;
                var1 = var1.guild_id;
                var1 = var8.bind(var10)(var1);
                var1 = var6.bind(var7)(var5, var1);
                var3 = var3.bind(var4)(var1);
                var1 = ['guild'];
                var1[1] = var3;
                _fun0001_ip = 265; continue _fun0001;
 168:
                var7 = _closure1_slot0;
                var8 = _closure1_slot2;
                var5 = 7;
                var3 = var8[var5];
                var6 = undefined;
                var4 = var7.bind(var6)(var3);
                var3 = var4.presetName;
                var5 = var8[var5];
                var7 = var7.bind(var6)(var5);
                var6 = var7.presetFromSettings;
                var8 = _closure1_slot5;
                var2 = var8.resolveUnreadSetting;
                var5 = var2.bind(var8)(var9);
                var2 = var8.resolvedMessageNotifications;
                var2 = var2.bind(var8)(var9);
                var2 = var6.bind(var7)(var5, var2);
                var3 = var3.bind(var4)(var2);
                var2 = ['parent'];
                var2[1] = var3;
                var1 = var2;
 265:
                return var1;
            }
        };
        var3 = var8.bind(var9)(var7, var2, var3);
        var2 = _closure1_slot3;
        var1 = 2;
        var2 = var2.bind(var5)(var3, var1);
        var1 = 0;
        var3 = var2[var1];
        var1 = 1;
        var2 = var2[var1];
        var1 = {};
        var5 = var6.includes;
        var4 = var4.id;
        var4 = var5.bind(var6)(var4);
        var4 = !var4;
        var1['inherited'] = var4;
        var1['inheritedFrom'] = var3;
        var1['inheritedPreset'] = var2;
        return var1;
    };
    var3['useChannelPresetInheritance'] = var4;
    var4 = function updateChannelPreset(arg1, arg2, arg3) {
        _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
 0:
            var7 = arg1;
            var6 = arg2;
            var4 = arg3;
            var3 = _closure1_slot5;
            var1 = var3.getChannelIdFlags;
            var12 = var1.bind(var3)(var7, var6);
            var5 = _closure1_slot0;
            var1 = _closure1_slot2;
            var8 = 7;
            var3 = var1[var8];
            var1 = undefined;
            var3 = var5.bind(var1)(var3);
            var3 = var3.Presets;
            var3 = var3.ALL_MESSAGES;
            if(!(var4 !== var3)) { _fun0002_ip = 401; continue _fun0002 }
 69:
            var5 = _closure1_slot0;
            var3 = _closure1_slot2;
            var3 = var3[var8];
            var3 = var5.bind(var1)(var3);
            var3 = var3.Presets;
            var3 = var3.MENTIONS;
            if(!(var4 !== var3)) { _fun0002_ip = 271; continue _fun0002 }
 105:
            var5 = _closure1_slot0;
            var3 = _closure1_slot2;
            var3 = var3[var8];
            var3 = var5.bind(var1)(var3);
            var3 = var3.Presets;
            var3 = var3.NOTHING;
            if(!(var4 === var3)) { _fun0002_ip = 526; continue _fun0002 }
 141:
            var4 = _closure1_slot1;
            var10 = _closure1_slot2;
            var3 = 9;
            var3 = var10[var3];
            var8 = var4.bind(var1)(var3);
            var5 = var8.updateChannelOverrideSettings;
            var4 = {};
            var3 = _closure1_slot6;
            var3 = var3.NO_MESSAGES;
            var4['message_notifications'] = var3;
            var9 = _closure1_slot0;
            var3 = 10;
            var3 = var10[var3];
            var13 = var9.bind(var1)(var3);
            var11 = var13.withChannelUnreadFlags;
            var3 = _closure1_slot8;
            var3 = var3.UNREADS_ONLY_MENTIONS;
            var3 = var11.bind(var13)(var12, var3);
            var4['flags'] = var3;
            var3 = 11;
            var3 = var10[var3];
            var3 = var9.bind(var1)(var3);
            var3 = var3.NotificationLabels;
            var14 = var3.PresetNothing;
            var18 = var8;
            var17 = var7;
            var16 = var6;
            var15 = var4;
            var3 = var18[var5](var17, var16, var15, var14, var13);
            _fun0002_ip = 526; continue _fun0002;
 271:
            var4 = _closure1_slot1;
            var10 = _closure1_slot2;
            var3 = 9;
            var3 = var10[var3];
            var8 = var4.bind(var1)(var3);
            var5 = var8.updateChannelOverrideSettings;
            var4 = {};
            var3 = _closure1_slot6;
            var3 = var3.ONLY_MENTIONS;
            var4['message_notifications'] = var3;
            var9 = _closure1_slot0;
            var3 = 10;
            var3 = var10[var3];
            var13 = var9.bind(var1)(var3);
            var11 = var13.withChannelUnreadFlags;
            var3 = _closure1_slot8;
            var3 = var3.UNREADS_ONLY_MENTIONS;
            var3 = var11.bind(var13)(var12, var3);
            var4['flags'] = var3;
            var3 = 11;
            var3 = var10[var3];
            var3 = var9.bind(var1)(var3);
            var3 = var3.NotificationLabels;
            var14 = var3.PresetMentions;
            var18 = var8;
            var17 = var7;
            var16 = var6;
            var15 = var4;
            var3 = var18[var5](var17, var16, var15, var14, var13);
            _fun0002_ip = 526; continue _fun0002;
 401:
            var4 = _closure1_slot1;
            var9 = _closure1_slot2;
            var3 = 9;
            var3 = var9[var3];
            var5 = var4.bind(var1)(var3);
            var4 = var5.updateChannelOverrideSettings;
            var3 = {};
            var8 = _closure1_slot6;
            var8 = var8.ALL_MESSAGES;
            var3['message_notifications'] = var8;
            var8 = _closure1_slot0;
            var10 = 10;
            var10 = var9[var10];
            var11 = var8.bind(var1)(var10);
            var10 = var11.withChannelUnreadFlags;
            var2 = _closure1_slot8;
            var2 = var2.UNREADS_ALL_MESSAGES;
            var2 = var10.bind(var11)(var12, var2);
            var3['flags'] = var2;
            var2 = 11;
            var2 = var9[var2];
            var2 = var8.bind(var1)(var2);
            var2 = var2.NotificationLabels;
            var14 = var2.PresetAll;
            var18 = var5;
            var17 = var7;
            var16 = var6;
            var15 = var3;
            var2 = var18[var4](var17, var16, var15, var14, var13);
 526:
            return var1;
        }
    };
    var3['updateChannelPreset'] = var4;
    var4 = function updateChannelToGuildDefault(arg1, arg2) {
        var7 = arg1;
        var6 = arg2;
        var4 = _closure1_slot1;
        var9 = _closure1_slot2;
        var1 = 9;
        var3 = var9[var1];
        var1 = undefined;
        var5 = var4.bind(var1)(var3);
        var4 = var5.updateChannelOverrideSettings;
        var3 = {};
        var8 = _closure1_slot6;
        var8 = var8.NULL;
        var3['message_notifications'] = var8;
        var8 = _closure1_slot0;
        var10 = 10;
        var10 = var9[var10];
        var11 = var8.bind(var1)(var10);
        var10 = var11.resetChannelUnreadFlags;
        var12 = _closure1_slot5;
        var2 = var12.getChannelIdFlags;
        var2 = var2.bind(var12)(var7, var6);
        var2 = var10.bind(var11)(var2);
        var3['flags'] = var2;
        var2 = 11;
        var2 = var9[var2];
        var2 = var8.bind(var1)(var2);
        var2 = var2.NotificationLabels;
        var13 = var2.PresetDefault;
        var17 = var5;
        var16 = var7;
        var15 = var6;
        var14 = var3;
        var2 = var17[var4](var16, var15, var14, var13, var12);
        return var1;
    };
    var3['updateChannelToGuildDefault'] = var4;
    var4 = function updateChannelUnreadSetting(arg1, arg2, arg3) {
        _fun0003: for(var _fun0003_ip = 0; ; ) switch(_fun0003_ip) {
 0:
            var7 = arg1;
            var6 = arg2;
            var9 = arg3;
            var3 = _closure1_slot5;
            var1 = var3.getChannelIdFlags;
            var12 = var1.bind(var3)(var7, var6);
            var4 = _closure1_slot1;
            var11 = _closure1_slot2;
            var1 = 9;
            var3 = var11[var1];
            var1 = undefined;
            var5 = var4.bind(var1)(var3);
            var4 = var5.updateChannelOverrideSettings;
            var3 = {};
            var10 = _closure1_slot0;
            var8 = 10;
            var8 = var11[var8];
            var11 = var10.bind(var1)(var8);
            var10 = var11.withChannelUnreadFlags;
            var8 = _closure1_slot7;
            var8 = var8.ALL_MESSAGES;
            if(!(var9 !== var8)) { _fun0003_ip = 106; continue _fun0003 }
 94:
            var8 = _closure1_slot8;
            var8 = var8.UNREADS_ONLY_MENTIONS;
            _fun0003_ip = 116; continue _fun0003;
 106:
            var13 = _closure1_slot8;
            var8 = var13.UNREADS_ALL_MESSAGES;
 116:
            var8 = var10.bind(var11)(var12, var8);
            var3['flags'] = var8;
            var8 = _closure1_slot0;
            var10 = _closure1_slot2;
            var2 = 11;
            var2 = var10[var2];
            var2 = var8.bind(var1)(var2);
            var8 = var2.NotificationLabel;
            var2 = var8.unreads;
            var14 = var2.bind(var8)(var9);
            var18 = var5;
            var17 = var7;
            var16 = var6;
            var15 = var3;
            var2 = var18[var4](var17, var16, var15, var14, var13);
            return var1;
        }
    };
    var3['updateChannelUnreadSetting'] = var4;
    var2 = function updateChannelNotificationSetting(arg1, arg2, arg3) {
        var4 = arg3;
        var5 = _closure1_slot1;
        var8 = _closure1_slot2;
        var1 = 9;
        var3 = var8[var1];
        var1 = undefined;
        var7 = var5.bind(var1)(var3);
        var6 = var7.updateChannelOverrideSettings;
        var5 = {};
        var5['message_notifications'] = var4;
        var3 = _closure1_slot0;
        var2 = 11;
        var2 = var8[var2];
        var2 = var3.bind(var1)(var2);
        var3 = var2.NotificationLabel;
        var2 = var3.notifications;
        var9 = var2.bind(var3)(var4);
        var12 = arg1;
        var11 = arg2;
        var13 = var7;
        var10 = var5;
        var2 = var13[var6](var12, var11, var10, var9, var8);
        return var1;
    };
    var3['updateChannelNotificationSetting'] = var2;
    return var1;
})();