// app/modules/notifications/settings/native/NotificationSettingsMockChannels.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var11 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var11;
    var _closure1_slot2 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var4 = var4.bind(var1)(var7);
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.View;
    var _closure1_slot3 = var4;
    var4 = 2;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.UnreadSetting;
    var _closure1_slot4 = var4;
    var4 = 3;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var7 = var4.jsx;
    var _closure1_slot5 = var7;
    var4 = var4.jsxs;
    var _closure1_slot6 = var4;
    var4 = 4;
    var4 = var6[var4];
    var8 = var5.bind(var1)(var4);
    var7 = var8.createStyles;
    var4 = {};
    var9 = {'backgroundColor': null, 'overflow': 'hidden', 'borderRadius': 10, 'paddingVertical': 8};
    var10 = 5;
    var10 = var6[var10];
    var10 = var11.bind(var1)(var10);
    var10 = var10.colors;
    var10 = var10.BG_SURFACE_RAISED;
    var9['backgroundColor'] = var10;
    var4['card'] = var9;
    var9 = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'paddingVertical': 4, 'justifyContent': 'space-between', 'paddingRight': 12};
    var4['channel'] = var9;
    var9 = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    var4['channelName'] = var9;
    var4 = var7.bind(var8)(var4);
    var _closure1_slot7 = var4;
    var4 = 11;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/notifications/settings/native/NotificationSettingsMockChannels.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function NotificationSettingsMockChannels(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
            var2 = _closure1_slot7;
            var4 = undefined;
            var6 = var2.bind(var4)();
            var _closure2_slot0 = var6;
            var3 = {'badged': true, 'unread': true};
            var2 = _closure1_slot4;
            var7 = var2.ALL_MESSAGES;
            var3['resolvedUnreadSetting'] = var7;
            var11 = _closure1_slot0;
            var12 = _closure1_slot2;
            var8 = 6;
            var7 = var12[var8];
            var7 = var11.bind(var4)(var7);
            var10 = var7.intl;
            var9 = var10.string;
            var7 = var12[var8];
            var7 = var11.bind(var4)(var7);
            var7 = var7.t;
            var7 = var7.EjLobG;
            var7 = var9.bind(var10)(var7);
            var3['name'] = var7;
            var7 = new Array(3);
            var7[0] = var3;
            var3 = {'badged': false, 'unread': true};
            var9 = var2.ONLY_MENTIONS;
            var3['resolvedUnreadSetting'] = var9;
            var9 = var12[var8];
            var9 = var11.bind(var4)(var9);
            var13 = var9.intl;
            var10 = var13.string;
            var9 = var12[var8];
            var9 = var11.bind(var4)(var9);
            var9 = var9.t;
            var9 = var9.Wgpwpq;
            var9 = var10.bind(var13)(var9);
            var3['name'] = var9;
            var7[1] = var3;
            var3 = {'badged': false, 'unread': false};
            var9 = var2.ONLY_MENTIONS;
            var3['resolvedUnreadSetting'] = var9;
            var9 = var12[var8];
            var9 = var11.bind(var4)(var9);
            var10 = var9.intl;
            var9 = var10.string;
            var8 = var12[var8];
            var8 = var11.bind(var4)(var8);
            var8 = var8.t;
            var8 = var8.g9VImp;
            var8 = var9.bind(var10)(var8);
            var3['name'] = var8;
            var7[2] = var3;
            var3 = arg1;
            var3 = var3.unreadSetting;
            var2 = var2.ALL_MESSAGES;
            if(!(var3 === var2)) { _fun0001_ip = 2; continue _fun0001 }
case 3:
            var2 = 1;
            var3 = var7[var2];
            var2 = _closure1_slot4;
            var2 = var2.ALL_MESSAGES;
            var3['resolvedUnreadSetting'] = var2;
case 2:
            var3 = _closure1_slot5;
            var2 = _closure1_slot3;
            var1 = {};
            var6 = var6.card;
            var1['style'] = var6;
            var6 = var7.map;
            var5 = function(arg1) {
                _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
case 0:
                    var1 = arg1;
                    var5 = _closure1_slot6;
                    var4 = _closure1_slot3;
                    var3 = {};
                    var2 = _closure2_slot0;
                    var6 = var2.channel;
                    var3['style'] = var6;
                    var6 = {};
                    var2 = var2.channelName;
                    var6['style'] = var2;
                    var11 = _closure1_slot5;
                    var9 = _closure1_slot1;
                    var12 = _closure1_slot2;
                    var2 = 7;
                    var8 = var12[var2];
                    var2 = undefined;
                    var9 = var9.bind(var2)(var8);
                    var8 = {};
                    var10 = var1.unread;
                    var8['unread'] = var10;
                    var10 = var1.resolvedUnreadSetting;
                    var8['resolvedUnreadSetting'] = var10;
                    var9 = var11.bind(var2)(var9, var8);
                    var8 = new Array(3);
                    var8[0] = var9;
                    var10 = _closure1_slot0;
                    var9 = 8;
                    var9 = var12[var9];
                    var9 = var10.bind(var2)(var9);
                    var10 = var9.TextIcon;
                    var9 = {};
                    var12 = {};
                    var13 = 12;
                    var12['marginLeft'] = var13;
                    var9['style'] = var12;
                    var12 = 'xs';
                    var9['size'] = var12;
                    var14 = var1.resolvedUnreadSetting;
                    var12 = _closure1_slot4;
                    var13 = var12.ONLY_MENTIONS;
                    var12 = undefined;
                    if(!(var14 === var13)) { _fun0002_ip = 4; continue _fun0002 }
case 5:
                    var12 = 'text-muted';
case 4:
                    var9['color'] = var12;
                    var9 = var11.bind(var2)(var10, var9);
                    var8[1] = var9;
                    var11 = _closure1_slot5;
                    var10 = _closure1_slot0;
                    var12 = _closure1_slot2;
                    var9 = 9;
                    var9 = var12[var9];
                    var9 = var10.bind(var2)(var9);
                    var10 = var9.Text;
                    var9 = {};
                    var12 = {};
                    var13 = 4;
                    var12['marginLeft'] = var13;
                    var9['style'] = var12;
                    var12 = 'text-sm/semibold';
                    var9['variant'] = var12;
                    var14 = var1.resolvedUnreadSetting;
                    var12 = _closure1_slot4;
                    var13 = var12.ONLY_MENTIONS;
                    var12 = undefined;
                    if(!(var14 === var13)) { _fun0002_ip = 6; continue _fun0002 }
case 7:
                    var12 = 'text-muted';
case 6:
                    var9['color'] = var12;
                    var12 = var1.name;
                    var9['children'] = var12;
                    var9 = var11.bind(var2)(var10, var9);
                    var8[2] = var9;
                    var6['children'] = var8;
                    var8 = var5.bind(var2)(var4, var6);
                    var6 = new Array(2);
                    var6[0] = var8;
                    var9 = _closure1_slot5;
                    var8 = _closure1_slot1;
                    var10 = _closure1_slot2;
                    var7 = 10;
                    var7 = var10[var7];
                    var8 = var8.bind(var2)(var7);
                    var7 = {};
                    var11 = var1.badged;
                    var10 = 0;
                    if(!var11) { _fun0002_ip = 8; continue _fun0002 }
case 9:
                    var10 = 1;
case 8:
                    var7['value'] = var10;
                    var7 = var9.bind(var2)(var8, var7);
                    var6[1] = var7;
                    var3['children'] = var6;
                    var1 = var1.name;
                    var1 = var5.bind(var2)(var4, var3, var1);
                    return var1;
                }
            };
            var5 = var6.bind(var7)(var5);
            var1['children'] = var5;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        }
    };
    var3['default'] = var2;
    return var1;
})();