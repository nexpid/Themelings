// app/modules/notifications/settings/native/MuteAppDmActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_BASE_TERTIARY;
    verify['backgroundColor'] = romeon;
    tangon['sheet'] = verify;
    romeon = 8;
    verify = {'alignItems': 'center', 'marginBottom': 8};
    tangon['iconContainer'] = verify;
    verify = {'width': 48, 'height': 48};
    tangon['iconBackground'] = verify;
    verify = {};
    foxtra = 16;
    verify['padding'] = foxtra;
    tangon['content'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 8, 'paddingHorizontal': 16};
    tangon['headerText'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 16, 'paddingHorizontal': 16};
    tangon['infoText'] = verify;
    verify = {'marginTop': 8, 'marginBottom': 16};
    tangon['form'] = verify;
    verify = {};
    verify['marginTop'] = romeon;
    tangon['dismissButtonContainer'] = verify;
    verify = {'borderRadius': null, 'backgroundColor': null, 'height': 24, 'width': 24, 'padding': 4, 'alignContent': 'center'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.round;
    verify['borderRadius'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.STATUS_DANGER;
    verify['backgroundColor'] = offset;
    tangon['mutedNotificationContainer'] = verify;
    verify = {'width': 16, 'height': 16};
    tangon['mutedNotification'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/notifications/settings/native/MuteAppDmActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: MuteAppDMActionSheet
        entity = _closure1_slot6;
        tangon = undefined;
        yankee = entity.bind(tangon)();
        var _closure2_slot0 = yankee;
        entity = argFoo;
        entity = entity.channel;
        var _closure2_slot1 = entity;
        zuuluu = _closure1_slot4;
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        entity = 5;
        entity = output[entity];
        entity = sizing.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        foxtra = true;
        entity['startExpanded'] = foxtra;
        report = yankee.sheet;
        entity['backgroundStyles'] = report;
        golfie = _closure1_slot5;
        oscard = _closure1_slot3;
        report = {};
        option = yankee.content;
        report['style'] = option;
        option = {};
        offset = yankee.iconContainer;
        option['style'] = offset;
        offset = _closure1_slot1;
        verify = 6;
        verify = output[verify];
        offset = offset.bind(tangon)(verify);
        verify = {};
        backup = yankee.iconBackground;
        verify['style'] = backup;
        backup = 7;
        backup = output[backup];
        backup = sizing.bind(tangon)(backup);
        backup = backup.BellIcon;
        verify['IconComponent'] = backup;
        verify['active'] = foxtra;
        foxtra = 8;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        result = backup.intl;
        kiloes = result.string;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.uAmAiI;
        backup = kiloes.bind(result)(backup);
        verify['accessibilityLabel'] = backup;
        verify = zuuluu.bind(tangon)(offset, verify);
        option['children'] = verify;
        verify = zuuluu.bind(tangon)(oscard, option);
        option = new Array(5);
        option[0] = verify;
        verify = 9;
        offset = output[verify];
        offset = sizing.bind(tangon)(offset);
        backup = offset.Text;
        offset = {'variant': 'heading-lg/bold', 'color': 'header-primary'};
        kiloes = yankee.headerText;
        offset['style'] = kiloes;
        kiloes = output[foxtra];
        kiloes = sizing.bind(tangon)(kiloes);
        echoed = kiloes.intl;
        result = echoed.string;
        kiloes = output[foxtra];
        kiloes = sizing.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.uAmAiI;
        kiloes = result.bind(echoed)(kiloes);
        offset['children'] = kiloes;
        offset = zuuluu.bind(tangon)(backup, offset);
        option[1] = offset;
        verify = output[verify];
        verify = sizing.bind(tangon)(verify);
        offset = verify.Text;
        verify = {'variant': 'text-md/normal', 'color': 'header-secondary'};
        backup = yankee.infoText;
        verify['style'] = backup;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        result = backup.intl;
        kiloes = result.string;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.mscFJS;
        backup = kiloes.bind(result)(backup);
        verify['children'] = backup;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[2] = verify;
        offset = 10;
        verify = output[offset];
        verify = sizing.bind(tangon)(verify);
        backup = verify.Button;
        verify = {};
        kiloes = 'destructive';
        verify['variant'] = kiloes;
        kiloes = output[foxtra];
        kiloes = sizing.bind(tangon)(kiloes);
        echoed = kiloes.intl;
        result = echoed.string;
        kiloes = output[foxtra];
        kiloes = sizing.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.uAmAiI;
        kiloes = result.bind(echoed)(kiloes);
        verify['text'] = kiloes;
        kiloes = function() { // Original name: onPress
            zuuluu = _closure1_slot1;
            verify = _closure1_slot2;
            entity = 11;
            tangon = verify[entity];
            entity = undefined;
            offset = zuuluu.bind(entity)(tangon);
            golfie = offset.updateChannelOverrideSettings;
            tangon = _closure2_slot1;
            foxtra = tangon.id;
            report = {};
            tangon = true;
            report['muted'] = tangon;
            option = _closure1_slot0;
            michal = 12;
            michal = verify[michal];
            michal = option.bind(entity)(michal);
            michal = michal.NotificationLabels;
            yankee = michal.Muted;
            backup = null;
            kiloes = offset;
            romeon = report;
            michal = kiloes[golfie](backup, foxtra, romeon, yankee, offset);
            michal = 13;
            michal = verify[michal];
            tangon = zuuluu.bind(entity)(michal);
            michal = tangon.hideActionSheet;
            michal = michal.bind(tangon)();
            michal = 14;
            michal = verify[michal];
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.open;
            michal = {};
            report = 'NOTIFICATIONS_MUTED';
            michal['key'] = report;
            report = 8;
            oscard = verify[report];
            oscard = option.bind(entity)(oscard);
            golfie = oscard.intl;
            oscard = golfie.string;
            report = verify[report];
            report = option.bind(entity)(report);
            report = report.t;
            report = report.EgGpk5;
            report = oscard.bind(golfie)(report);
            michal['content'] = report;
            report = function() { // Original name: icon
                tangon = _closure1_slot4;
                zuuluu = _closure1_slot3;
                michal = {};
                golfie = _closure2_slot0;
                report = golfie.mutedNotificationContainer;
                michal['style'] = report;
                verify = _closure1_slot1;
                offset = _closure1_slot2;
                entity = 15;
                report = offset[entity];
                entity = undefined;
                oscard = verify.bind(entity)(report);
                report = {};
                option = 16;
                option = offset[option];
                option = verify.bind(entity)(option);
                report['source'] = option;
                option = 4;
                option = offset[option];
                option = verify.bind(entity)(option);
                option = option.unsafe_rawColors;
                option = option.WHITE_500;
                report['color'] = option;
                golfie = golfie.mutedNotification;
                report['style'] = golfie;
                report = tangon.bind(entity)(oscard, report);
                michal['children'] = report;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            michal['icon'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        verify['onPress'] = kiloes;
        verify = zuuluu.bind(tangon)(backup, verify);
        option[3] = verify;
        verify = {};
        yankee = yankee.dismissButtonContainer;
        verify['style'] = yankee;
        offset = output[offset];
        offset = sizing.bind(tangon)(offset);
        yankee = offset.Button;
        offset = {};
        backup = 'secondary';
        offset['variant'] = backup;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = output[foxtra];
        foxtra = sizing.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.WAI6xs;
        foxtra = backup.bind(kiloes)(foxtra);
        offset['text'] = foxtra;
        romeon = function() { // Original name: onPress
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 13;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.hideActionSheet;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        offset['onPress'] = romeon;
        offset = zuuluu.bind(tangon)(yankee, offset);
        verify['children'] = offset;
        verify = zuuluu.bind(tangon)(oscard, verify);
        option[4] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();