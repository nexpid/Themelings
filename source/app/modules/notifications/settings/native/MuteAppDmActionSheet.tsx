// app/modules/notifications/settings/native/MuteAppDmActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_BASE_TERTIARY;
    verify['backgroundColor'] = romeo;
    tango['sheet'] = verify;
    romeo = 8;
    verify = {'alignItems': 'center', 'marginBottom': 8};
    tango['iconContainer'] = verify;
    verify = {'width': 48, 'height': 48};
    tango['iconBackground'] = verify;
    verify = {};
    foxtrot = 16;
    verify['padding'] = foxtrot;
    tango['content'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 8, 'paddingHorizontal': 16};
    tango['headerText'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 16, 'paddingHorizontal': 16};
    tango['infoText'] = verify;
    verify = {'marginTop': 8, 'marginBottom': 16};
    tango['form'] = verify;
    verify = {};
    verify['marginTop'] = romeo;
    tango['dismissButtonContainer'] = verify;
    verify = {'borderRadius': null, 'backgroundColor': null, 'height': 24, 'width': 24, 'padding': 4, 'alignContent': 'center'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.round;
    verify['borderRadius'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.STATUS_DANGER;
    verify['backgroundColor'] = offset;
    tango['mutedNotificationContainer'] = verify;
    verify = {'width': 16, 'height': 16};
    tango['mutedNotification'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/notifications/settings/native/MuteAppDmActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: MuteAppDMActionSheet
        entity = _closure1_slot6;
        tango = undefined;
        yankee = entity.bind(tango)();
        var _closure2_slot0 = yankee;
        entity = argFoo;
        entity = entity.channel;
        var _closure2_slot1 = entity;
        zulu = _closure1_slot4;
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        entity = 5;
        entity = output[entity];
        entity = sizing.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        foxtrot = true;
        entity['startExpanded'] = foxtrot;
        report = yankee.sheet;
        entity['backgroundStyles'] = report;
        golf = _closure1_slot5;
        oscar = _closure1_slot3;
        report = {};
        options = yankee.content;
        report['style'] = options;
        options = {};
        offset = yankee.iconContainer;
        options['style'] = offset;
        offset = _closure1_slot1;
        verify = 6;
        verify = output[verify];
        offset = offset.bind(tango)(verify);
        verify = {};
        backup = yankee.iconBackground;
        verify['style'] = backup;
        backup = 7;
        backup = output[backup];
        backup = sizing.bind(tango)(backup);
        backup = backup.BellIcon;
        verify['IconComponent'] = backup;
        verify['active'] = foxtrot;
        foxtrot = 8;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        result = backup.intl;
        kilo = result.string;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        backup = backup.t;
        backup = backup.uAmAiI;
        backup = kilo.bind(result)(backup);
        verify['accessibilityLabel'] = backup;
        verify = zulu.bind(tango)(offset, verify);
        options['children'] = verify;
        verify = zulu.bind(tango)(oscar, options);
        options = new Array(5);
        options[0] = verify;
        verify = 9;
        offset = output[verify];
        offset = sizing.bind(tango)(offset);
        backup = offset.Text;
        offset = {'variant': 'heading-lg/bold', 'color': 'header-primary'};
        kilo = yankee.headerText;
        offset['style'] = kilo;
        kilo = output[foxtrot];
        kilo = sizing.bind(tango)(kilo);
        echo = kilo.intl;
        result = echo.string;
        kilo = output[foxtrot];
        kilo = sizing.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.uAmAiI;
        kilo = result.bind(echo)(kilo);
        offset['children'] = kilo;
        offset = zulu.bind(tango)(backup, offset);
        options[1] = offset;
        verify = output[verify];
        verify = sizing.bind(tango)(verify);
        offset = verify.Text;
        verify = {'variant': 'text-md/normal', 'color': 'header-secondary'};
        backup = yankee.infoText;
        verify['style'] = backup;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        result = backup.intl;
        kilo = result.string;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        backup = backup.t;
        backup = backup.mscFJS;
        backup = kilo.bind(result)(backup);
        verify['children'] = backup;
        verify = zulu.bind(tango)(offset, verify);
        options[2] = verify;
        offset = 10;
        verify = output[offset];
        verify = sizing.bind(tango)(verify);
        backup = verify.Button;
        verify = {};
        kilo = 'destructive';
        verify['variant'] = kilo;
        kilo = output[foxtrot];
        kilo = sizing.bind(tango)(kilo);
        echo = kilo.intl;
        result = echo.string;
        kilo = output[foxtrot];
        kilo = sizing.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.uAmAiI;
        kilo = result.bind(echo)(kilo);
        verify['text'] = kilo;
        kilo = function() { // Original name: onPress
            zulu = _closure1_slot1;
            verify = _closure1_slot2;
            entity = 11;
            tango = verify[entity];
            entity = undefined;
            offset = zulu.bind(entity)(tango);
            golf = offset.updateChannelOverrideSettings;
            tango = _closure2_slot1;
            foxtrot = tango.id;
            report = {};
            tango = true;
            report['muted'] = tango;
            options = _closure1_slot0;
            mike = 12;
            mike = verify[mike];
            mike = options.bind(entity)(mike);
            mike = mike.NotificationLabels;
            yankee = mike.Muted;
            backup = null;
            kilo = offset;
            romeo = report;
            mike = kilo[golf](backup, foxtrot, romeo, yankee, offset);
            mike = 13;
            mike = verify[mike];
            tango = zulu.bind(entity)(mike);
            mike = tango.hideActionSheet;
            mike = mike.bind(tango)();
            mike = 14;
            mike = verify[mike];
            tango = zulu.bind(entity)(mike);
            zulu = tango.open;
            mike = {};
            report = 'NOTIFICATIONS_MUTED';
            mike['key'] = report;
            report = 8;
            oscar = verify[report];
            oscar = options.bind(entity)(oscar);
            golf = oscar.intl;
            oscar = golf.string;
            report = verify[report];
            report = options.bind(entity)(report);
            report = report.t;
            report = report.EgGpk5;
            report = oscar.bind(golf)(report);
            mike['content'] = report;
            report = function() { // Original name: icon
                tango = _closure1_slot4;
                zulu = _closure1_slot3;
                mike = {};
                golf = _closure2_slot0;
                report = golf.mutedNotificationContainer;
                mike['style'] = report;
                verify = _closure1_slot1;
                offset = _closure1_slot2;
                entity = 15;
                report = offset[entity];
                entity = undefined;
                oscar = verify.bind(entity)(report);
                report = {};
                options = 16;
                options = offset[options];
                options = verify.bind(entity)(options);
                report['source'] = options;
                options = 4;
                options = offset[options];
                options = verify.bind(entity)(options);
                options = options.unsafe_rawColors;
                options = options.WHITE_500;
                report['color'] = options;
                golf = golf.mutedNotification;
                report['style'] = golf;
                report = tango.bind(entity)(oscar, report);
                mike['children'] = report;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            mike['icon'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        verify['onPress'] = kilo;
        verify = zulu.bind(tango)(backup, verify);
        options[3] = verify;
        verify = {};
        yankee = yankee.dismissButtonContainer;
        verify['style'] = yankee;
        offset = output[offset];
        offset = sizing.bind(tango)(offset);
        yankee = offset.Button;
        offset = {};
        backup = 'secondary';
        offset['variant'] = backup;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = output[foxtrot];
        foxtrot = sizing.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.WAI6xs;
        foxtrot = backup.bind(kilo)(foxtrot);
        offset['text'] = foxtrot;
        romeo = function() { // Original name: onPress
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 13;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.hideActionSheet;
            mike = mike.bind(zulu)();
            return entity;
        };
        offset['onPress'] = romeo;
        offset = zulu.bind(tango)(yankee, offset);
        verify['children'] = offset;
        verify = zulu.bind(tango)(oscar, verify);
        options[4] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();