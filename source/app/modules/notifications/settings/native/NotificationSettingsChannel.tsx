// app/modules/notifications/settings/native/NotificationSettingsChannel.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/notifications/settings/native/NotificationSettingsChannel.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: NotificationSettingsChannel
        _fun86813: for(var _fun86813_ip = 0; ; ) switch(_fun86813_ip) {
 0:
            output = argFoo;
            var _closure2_slot0 = output;
            mike = _closure1_slot0;
            report = _closure1_slot2;
            zulu = 4;
            zulu = report[zulu];
            tango = undefined;
            golf = mike.bind(tango)(zulu);
            oscar = golf.useChannelPresetInheritance;
            zulu = output.channel;
            verify = oscar.bind(golf)(zulu);
            echo = 5;
            zulu = report[echo];
            zulu = mike.bind(tango)(zulu);
            golf = zulu.intl;
            oscar = golf.string;
            zulu = report[echo];
            zulu = mike.bind(tango)(zulu);
            zulu = zulu.t;
            zulu = zulu.h850Sk;
            zulu = oscar.bind(golf)(zulu);
            var _closure2_slot1 = zulu;
            zulu = output.channel;
            zulu = zulu.name;
            var _closure2_slot2 = zulu;
            zulu = 6;
            zulu = report[zulu];
            oscar = mike.bind(tango)(zulu);
            zulu = oscar.useNavigation;
            zulu = zulu.bind(oscar)();
            var _closure2_slot3 = zulu;
            options = _closure1_slot3;
            oscar = options.useLayoutEffect;
            zulu = function() {
                _fun86814: for(var _fun86814_ip = 0; ; ) switch(_fun86814_ip) {
 0:
                    report = _closure2_slot3;
                    zulu = report.setOptions;
                    mike = {};
                    kilo = _closure2_slot1;
                    foxtrot = _closure2_slot2;
                    oscar = global;
                    oscar = oscar.HermesInternal;
                    verify = oscar.concat;
                    sizing = '';
                    backup = ' (';
                    romeo = ')';
                    oscar = sizing[verify](kilo, backup, foxtrot, romeo, yankee);
                    mike['title'] = oscar;
                    oscar = function() { // Original name: headerTitle
                        tango = _closure1_slot6;
                        mike = _closure1_slot0;
                        zulu = _closure1_slot2;
                        entity = 7;
                        entity = zulu[entity];
                        zulu = undefined;
                        entity = mike.bind(zulu)(entity);
                        mike = entity.NavigatorHeader;
                        entity = {};
                        oscar = _closure2_slot1;
                        entity['title'] = oscar;
                        report = _closure2_slot2;
                        entity['subtitle'] = report;
                        entity = tango.bind(zulu)(mike, entity);
                        return entity;
                    };
                    mike['headerTitle'] = oscar;
                    mike = zulu.bind(report)(mike);
                    mike = _closure2_slot0;
                    mike = mike.inGuildContext;
                    if(!mike) { _fun86814_ip = 155; continue _fun86814 }
 90:
                    zulu = _closure2_slot3;
                    mike = zulu.setOptions;
                    entity = {};
                    golf = _closure1_slot0;
                    oscar = _closure1_slot2;
                    report = 7;
                    oscar = oscar[report];
                    report = undefined;
                    oscar = golf.bind(report)(oscar);
                    report = oscar.getHeaderBackButton;
                    tango = function() {
                        mike = _closure2_slot3;
                        entity = mike.popToTop;
                        entity = entity.bind(mike)();
                        return entity;
                    };
                    tango = report.bind(oscar)(tango);
                    entity['headerLeft'] = tango;
                    entity = mike.bind(zulu)(entity);
 155:
                    entity = undefined;
                    return entity;
                }
            };
            zulu = oscar.bind(options)(zulu);
            golf = options.useCallback;
            zulu = output.channel;
            oscar = new Array(1);
            oscar[0] = zulu;
            zulu = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 4;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.updateChannelToGuildDefault;
                entity = _closure2_slot0;
                mike = entity.channel;
                mike = mike.guild_id;
                entity = entity.channel;
                entity = entity.id;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            sizing = golf.bind(options)(zulu, oscar);
            golf = options.useCallback;
            zulu = output.channel;
            oscar = new Array(1);
            oscar[0] = zulu;
            zulu = function() {
                tango = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 8;
                zulu = verify[entity];
                entity = undefined;
                golf = tango.bind(entity)(zulu);
                oscar = golf.updateChannelOverrideSettings;
                zulu = _closure2_slot0;
                tango = zulu.channel;
                report = tango.guild_id;
                zulu = zulu.channel;
                romeo = zulu.id;
                zulu = {};
                options = false;
                zulu['muted'] = options;
                options = _closure1_slot0;
                mike = 9;
                mike = verify[mike];
                mike = options.bind(entity)(mike);
                mike = mike.NotificationLabels;
                offset = mike.Unmuted;
                backup = golf;
                foxtrot = report;
                yankee = zulu;
                mike = backup[oscar](foxtrot, romeo, yankee, offset, verify);
                return entity;
            };
            backup = golf.bind(options)(zulu, oscar);
            zulu = 10;
            zulu = report[zulu];
            golf = mike.bind(tango)(zulu);
            oscar = golf.useStateFromStoresObject;
            options = _closure1_slot5;
            zulu = new Array(1);
            zulu[0] = options;
            entity = function() {
                entity = {};
                report = _closure1_slot5;
                oscar = report.getChannelMuteConfig;
                mike = _closure2_slot0;
                zulu = mike.channel;
                tango = zulu.guild_id;
                zulu = mike.channel;
                zulu = zulu.id;
                zulu = oscar.bind(report)(tango, zulu);
                entity['config'] = zulu;
                tango = report.isChannelMuted;
                zulu = mike.channel;
                zulu = zulu.guild_id;
                mike = mike.channel;
                mike = mike.id;
                mike = tango.bind(report)(zulu, mike);
                entity['muted'] = mike;
                return entity;
            };
            kilo = oscar.bind(golf)(zulu, entity);
            zulu = _closure1_slot6;
            entity = 11;
            entity = report[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.Form;
            entity = {};
            golf = _closure1_slot7;
            oscar = _closure1_slot4;
            report = {};
            options = {};
            result = 16;
            options['margin'] = result;
            report['style'] = options;
            offset = kilo.muted;
            if(!offset) { _fun86813_ip = 459; continue _fun86813 }
 328:
            romeo = _closure1_slot6;
            source = _closure1_slot0;
            control = _closure1_slot2;
            update = 12;
            options = control[update];
            options = source.bind(tango)(options);
            yankee = options.NotificationSettingsMuteBanner;
            options = {};
            vacuum = {};
            vacuum['marginBottom'] = result;
            options['style'] = vacuum;
            vacuum = control[echo];
            vacuum = source.bind(tango)(vacuum);
            config = vacuum.intl;
            sequence = config.string;
            vacuum = control[echo];
            vacuum = source.bind(tango)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.6MCxAw;
            vacuum = sequence.bind(config)(vacuum);
            options['title'] = vacuum;
            update = control[update];
            source = source.bind(tango)(update);
            update = source.getMuteBannerSubtitleFromConfig;
            kilo = kilo.config;
            kilo = update.bind(source)(kilo);
            options['subtitle'] = kilo;
            options['onPressUnmute'] = backup;
            offset = romeo.bind(tango)(yankee, options);
 459:
            options = new Array(6);
            options[0] = offset;
            romeo = _closure1_slot6;
            yankee = _closure1_slot0;
            backup = _closure1_slot2;
            offset = 13;
            offset = backup[offset];
            offset = yankee.bind(tango)(offset);
            kilo = offset.NotificationSettingsChannelPresets;
            offset = {};
            update = output.channel;
            offset['channel'] = update;
            offset = romeo.bind(tango)(kilo, offset);
            options[1] = offset;
            offset = 14;
            offset = backup[offset];
            offset = yankee.bind(tango)(offset);
            update = offset.NotificationSettingsChannelMessageNotification;
            offset = {};
            source = {};
            kilo = 24;
            source['marginTop'] = kilo;
            offset['style'] = source;
            source = output.channel;
            offset['channel'] = source;
            offset = romeo.bind(tango)(update, offset);
            options[2] = offset;
            offset = 15;
            offset = backup[offset];
            offset = yankee.bind(tango)(offset);
            yankee = offset.NotificationSettingsChannelMessageUnread;
            offset = {};
            backup = {};
            backup['marginTop'] = kilo;
            offset['style'] = backup;
            backup = output.channel;
            offset['channel'] = backup;
            offset = romeo.bind(tango)(yankee, offset);
            options[3] = offset;
            yankee = output.channel;
            offset = yankee.isForumLikeChannel;
            offset = offset.bind(yankee)();
            if(!offset) { _fun86813_ip = 691; continue _fun86813 }
 637:
            backup = _closure1_slot6;
            romeo = _closure1_slot0;
            yankee = _closure1_slot2;
            yankee = yankee[result];
            yankee = romeo.bind(tango)(yankee);
            romeo = yankee.NotificationSettingsChannelPost;
            yankee = {};
            result = {};
            result['marginTop'] = kilo;
            yankee['style'] = result;
            output = output.channel;
            yankee['channel'] = output;
            offset = backup.bind(tango)(romeo, yankee);
 691:
            options[4] = offset;
            verify = verify.inherited;
            verify = !verify;
            if(!verify) { _fun86813_ip = 834; continue _fun86813 }
 710:
            romeo = _closure1_slot6;
            yankee = _closure1_slot4;
            offset = {};
            backup = {};
            backup['marginTop'] = kilo;
            offset['style'] = backup;
            result = _closure1_slot0;
            kilo = _closure1_slot2;
            foxtrot = 17;
            foxtrot = kilo[foxtrot];
            foxtrot = result.bind(tango)(foxtrot);
            backup = foxtrot.Button;
            foxtrot = {};
            output = 'secondary';
            foxtrot['variant'] = output;
            foxtrot['onPress'] = sizing;
            sizing = kilo[echo];
            sizing = result.bind(tango)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kilo = kilo[echo];
            kilo = result.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.3PBFNz;
            kilo = sizing.bind(output)(kilo);
            foxtrot['text'] = kilo;
            foxtrot = romeo.bind(tango)(backup, foxtrot);
            offset['children'] = foxtrot;
            verify = romeo.bind(tango)(yankee, offset);
 834:
            options[5] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();