// app/modules/notifications/settings/native/NotificationSettingsChannel.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 18;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/notifications/settings/native/NotificationSettingsChannel.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: NotificationSettingsChannel
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            output = argFoo;
            var _closure2_slot0 = output;
            michal = _closure1_slot0;
            report = _closure1_slot2;
            zuuluu = 4;
            zuuluu = report[zuuluu];
            tangon = undefined;
            golfie = michal.bind(tangon)(zuuluu);
            oscard = golfie.useChannelPresetInheritance;
            zuuluu = output.channel;
            verify = oscard.bind(golfie)(zuuluu);
            echoed = 5;
            zuuluu = report[echoed];
            zuuluu = michal.bind(tangon)(zuuluu);
            golfie = zuuluu.intl;
            oscard = golfie.string;
            zuuluu = report[echoed];
            zuuluu = michal.bind(tangon)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu.h850Sk;
            zuuluu = oscard.bind(golfie)(zuuluu);
            var _closure2_slot1 = zuuluu;
            zuuluu = output.channel;
            zuuluu = zuuluu.name;
            var _closure2_slot2 = zuuluu;
            zuuluu = 6;
            zuuluu = report[zuuluu];
            oscard = michal.bind(tangon)(zuuluu);
            zuuluu = oscard.useNavigation;
            zuuluu = zuuluu.bind(oscard)();
            var _closure2_slot3 = zuuluu;
            option = _closure1_slot3;
            oscard = option.useLayoutEffect;
            zuuluu = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    report = _closure2_slot3;
                    zuuluu = report.setOptions;
                    michal = {};
                    kiloes = _closure2_slot1;
                    foxtra = _closure2_slot2;
                    oscard = global;
                    oscard = oscard.HermesInternal;
                    verify = oscard.concat;
                    sizing = '';
                    backup = ' (';
                    romeon = ')';
                    oscard = sizing[verify](kiloes, backup, foxtra, romeon, yankee);
                    michal['title'] = oscard;
                    oscard = function() { // Original name: headerTitle
                        tangon = _closure1_slot6;
                        michal = _closure1_slot0;
                        zuuluu = _closure1_slot2;
                        entity = 7;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        entity = michal.bind(zuuluu)(entity);
                        michal = entity.NavigatorHeader;
                        entity = {};
                        oscard = _closure2_slot1;
                        entity['title'] = oscard;
                        report = _closure2_slot2;
                        entity['subtitle'] = report;
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    michal['headerTitle'] = oscard;
                    michal = zuuluu.bind(report)(michal);
                    michal = _closure2_slot0;
                    michal = michal.inGuildContext;
                    if(!michal) { _fun00004_ip = 155; continue _fun00003 }
 90:
                    zuuluu = _closure2_slot3;
                    michal = zuuluu.setOptions;
                    entity = {};
                    golfie = _closure1_slot0;
                    oscard = _closure1_slot2;
                    report = 7;
                    oscard = oscard[report];
                    report = undefined;
                    oscard = golfie.bind(report)(oscard);
                    report = oscard.getHeaderBackButton;
                    tangon = function() {
                        michal = _closure2_slot3;
                        entity = michal.popToTop;
                        entity = entity.bind(michal)();
                        return entity;
                    };
                    tangon = report.bind(oscard)(tangon);
                    entity['headerLeft'] = tangon;
                    entity = michal.bind(zuuluu)(entity);
 155:
                    entity = undefined;
                    return entity;
                }
            };
            zuuluu = oscard.bind(option)(zuuluu);
            golfie = option.useCallback;
            zuuluu = output.channel;
            oscard = new Array(1);
            oscard[0] = zuuluu;
            zuuluu = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 4;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.updateChannelToGuildDefault;
                entity = _closure2_slot0;
                michal = entity.channel;
                michal = michal.guild_id;
                entity = entity.channel;
                entity = entity.id;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            sizing = golfie.bind(option)(zuuluu, oscard);
            golfie = option.useCallback;
            zuuluu = output.channel;
            oscard = new Array(1);
            oscard[0] = zuuluu;
            zuuluu = function() {
                tangon = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 8;
                zuuluu = verify[entity];
                entity = undefined;
                golfie = tangon.bind(entity)(zuuluu);
                oscard = golfie.updateChannelOverrideSettings;
                zuuluu = _closure2_slot0;
                tangon = zuuluu.channel;
                report = tangon.guild_id;
                zuuluu = zuuluu.channel;
                romeon = zuuluu.id;
                zuuluu = {};
                option = false;
                zuuluu['muted'] = option;
                option = _closure1_slot0;
                michal = 9;
                michal = verify[michal];
                michal = option.bind(entity)(michal);
                michal = michal.NotificationLabels;
                offset = michal.Unmuted;
                backup = golfie;
                foxtra = report;
                yankee = zuuluu;
                michal = backup[oscard](foxtra, romeon, yankee, offset, verify);
                return entity;
            };
            backup = golfie.bind(option)(zuuluu, oscard);
            zuuluu = 10;
            zuuluu = report[zuuluu];
            golfie = michal.bind(tangon)(zuuluu);
            oscard = golfie.useStateFromStoresObject;
            option = _closure1_slot5;
            zuuluu = new Array(1);
            zuuluu[0] = option;
            entity = function() {
                entity = {};
                report = _closure1_slot5;
                oscard = report.getChannelMuteConfig;
                michal = _closure2_slot0;
                zuuluu = michal.channel;
                tangon = zuuluu.guild_id;
                zuuluu = michal.channel;
                zuuluu = zuuluu.id;
                zuuluu = oscard.bind(report)(tangon, zuuluu);
                entity['config'] = zuuluu;
                tangon = report.isChannelMuted;
                zuuluu = michal.channel;
                zuuluu = zuuluu.guild_id;
                michal = michal.channel;
                michal = michal.id;
                michal = tangon.bind(report)(zuuluu, michal);
                entity['muted'] = michal;
                return entity;
            };
            kiloes = oscard.bind(golfie)(zuuluu, entity);
            zuuluu = _closure1_slot6;
            entity = 11;
            entity = report[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.Form;
            entity = {};
            golfie = _closure1_slot7;
            oscard = _closure1_slot4;
            report = {};
            option = {};
            result = 16;
            option['margin'] = result;
            report['style'] = option;
            offset = kiloes.muted;
            if(!offset) { _fun00002_ip = 461; continue _fun00001 }
 328:
            romeon = _closure1_slot6;
            source = _closure1_slot0;
            ctrled = _closure1_slot2;
            update = 12;
            option = ctrled[update];
            option = source.bind(tangon)(option);
            yankee = option.NotificationSettingsMuteBanner;
            option = {};
            vacuum = {};
            vacuum['marginBottom'] = result;
            option['style'] = vacuum;
            vacuum = ctrled[echoed];
            vacuum = source.bind(tangon)(vacuum);
            config = vacuum.intl;
            sequen = config.string;
            vacuum = ctrled[echoed];
            vacuum = source.bind(tangon)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.6MCxAw;
            vacuum = sequen.bind(config)(vacuum);
            option['title'] = vacuum;
            update = ctrled[update];
            source = source.bind(tangon)(update);
            update = source.getMuteBannerSubtitleFromConfig;
            kiloes = kiloes.config;
            kiloes = update.bind(source)(kiloes);
            option['subtitle'] = kiloes;
            option['onPressUnmute'] = backup;
            offset = romeon.bind(tangon)(yankee, option);
 461:
            option = new Array(6);
            option[0] = offset;
            romeon = _closure1_slot6;
            yankee = _closure1_slot0;
            backup = _closure1_slot2;
            offset = 13;
            offset = backup[offset];
            offset = yankee.bind(tangon)(offset);
            kiloes = offset.NotificationSettingsChannelPresets;
            offset = {};
            update = output.channel;
            offset['channel'] = update;
            offset = romeon.bind(tangon)(kiloes, offset);
            option[1] = offset;
            offset = 14;
            offset = backup[offset];
            offset = yankee.bind(tangon)(offset);
            update = offset.NotificationSettingsChannelMessageNotification;
            offset = {};
            source = {};
            kiloes = 24;
            source['marginTop'] = kiloes;
            offset['style'] = source;
            source = output.channel;
            offset['channel'] = source;
            offset = romeon.bind(tangon)(update, offset);
            option[2] = offset;
            offset = 15;
            offset = backup[offset];
            offset = yankee.bind(tangon)(offset);
            yankee = offset.NotificationSettingsChannelMessageUnread;
            offset = {};
            backup = {};
            backup['marginTop'] = kiloes;
            offset['style'] = backup;
            backup = output.channel;
            offset['channel'] = backup;
            offset = romeon.bind(tangon)(yankee, offset);
            option[3] = offset;
            yankee = output.channel;
            offset = yankee.isForumLikeChannel;
            offset = offset.bind(yankee)();
            if(!offset) { _fun00002_ip = 693; continue _fun00001 }
 639:
            backup = _closure1_slot6;
            romeon = _closure1_slot0;
            yankee = _closure1_slot2;
            yankee = yankee[result];
            yankee = romeon.bind(tangon)(yankee);
            romeon = yankee.NotificationSettingsChannelPost;
            yankee = {};
            result = {};
            result['marginTop'] = kiloes;
            yankee['style'] = result;
            output = output.channel;
            yankee['channel'] = output;
            offset = backup.bind(tangon)(romeon, yankee);
 693:
            option[4] = offset;
            verify = verify.inherited;
            verify = !verify;
            if(!verify) { _fun00002_ip = 836; continue _fun00001 }
 712:
            romeon = _closure1_slot6;
            yankee = _closure1_slot4;
            offset = {};
            backup = {};
            backup['marginTop'] = kiloes;
            offset['style'] = backup;
            result = _closure1_slot0;
            kiloes = _closure1_slot2;
            foxtra = 17;
            foxtra = kiloes[foxtra];
            foxtra = result.bind(tangon)(foxtra);
            backup = foxtra.Button;
            foxtra = {};
            output = 'secondary';
            foxtra['variant'] = output;
            foxtra['onPress'] = sizing;
            sizing = kiloes[echoed];
            sizing = result.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = kiloes[echoed];
            kiloes = result.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.3PBFNz;
            kiloes = sizing.bind(output)(kiloes);
            foxtra['text'] = kiloes;
            foxtra = romeon.bind(tangon)(backup, foxtra);
            offset['children'] = foxtra;
            verify = romeon.bind(tangon)(yankee, offset);
 836:
            option[5] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();