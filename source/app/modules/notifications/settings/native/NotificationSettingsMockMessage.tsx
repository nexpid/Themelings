// app/modules/notifications/settings/native/NotificationSettingsMockMessage.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UserNotificationSettings;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'backgroundColor': null, 'overflow': 'hidden', 'borderRadius': 10, 'padding': 16};
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_SURFACE_RAISED;
    verify['backgroundColor'] = romeon;
    tangon['card'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row'};
    tangon['cardContent'] = verify;
    verify = {'marginLeft': 12, 'maxWidth': 240};
    tangon['cardMessage'] = verify;
    verify = {'position': 'absolute', 'top': 0, 'left': 0, 'right': 0, 'bottom': 0};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_BASE_TERTIARY;
    verify['backgroundColor'] = offset;
    tangon['overlay'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = {};
    golfie = 'function NotificationSettingsMockMessageTsx1(){const{withTiming,opacity,timingStandard}=this.__closure;return{opacity:withTiming(opacity.get(),timingStandard)};}';
    tangon['code'] = golfie;
    var _closure1_slot10 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/notifications/settings/native/NotificationSettingsMockMessage.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: NotificationSettingsMockMessage
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            zuuluu = _closure1_slot9;
            tangon = undefined;
            offset = zuuluu.bind(tangon)();
            report = _closure1_slot0;
            golfie = _closure1_slot2;
            zuuluu = 7;
            zuuluu = golfie[zuuluu];
            option = report.bind(tangon)(zuuluu);
            oscard = option.useStateFromStores;
            zuuluu = _closure1_slot5;
            report = new Array(1);
            report[0] = zuuluu;
            zuuluu = function() {
                michal = _closure1_slot5;
                entity = michal.getCurrentUser;
                entity = entity.bind(michal)();
                return entity;
            };
            oscard = oscard.bind(option)(report, zuuluu);
            report = _closure1_slot1;
            zuuluu = 8;
            zuuluu = golfie[zuuluu];
            report = report.bind(tangon)(zuuluu);
            zuuluu = report.getName;
            zuuluu = zuuluu.bind(report)(oscard);
            report = null;
            report = report != zuuluu;
            result = 'Roka';
            if(!report) { _fun00002_ip = 113; continue _fun00001 }
 110:
            result = zuuluu;
 113:
            report = michal.notificationSetting;
            zuuluu = _closure1_slot6;
            zuuluu = zuuluu.NO_MESSAGES;
            oscard = report === zuuluu;
            var _closure2_slot0 = oscard;
            report = _closure1_slot0;
            zuuluu = _closure1_slot2;
            verify = 9;
            zuuluu = zuuluu[verify];
            golfie = report.bind(tangon)(zuuluu);
            report = golfie.useSharedValue;
            zuuluu = 0;
            if(!oscard) { _fun00002_ip = 177; continue _fun00001 }
 167:
            zuuluu = 0.8;
 177:
            golfie = report.bind(golfie)(zuuluu);
            var _closure2_slot1 = golfie;
            foxtra = _closure1_slot0;
            backup = _closure1_slot2;
            zuuluu = backup[verify];
            option = foxtra.bind(tangon)(zuuluu);
            report = option.useAnimatedStyle;
            zuuluu = function() { // Original name: f
                entity = {};
                golfie = _closure1_slot0;
                option = _closure1_slot2;
                michal = 10;
                michal = option[michal];
                oscard = undefined;
                report = golfie.bind(oscard)(michal);
                tangon = report.withTiming;
                zuuluu = _closure2_slot1;
                michal = zuuluu.get;
                zuuluu = michal.bind(zuuluu)();
                michal = 11;
                michal = option[michal];
                michal = golfie.bind(oscard)(michal);
                michal = michal.timingStandard;
                michal = tangon.bind(report)(zuuluu, michal);
                entity['opacity'] = michal;
                return entity;
            };
            yankee = {};
            romeon = 10;
            romeon = backup[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            romeon = romeon.withTiming;
            yankee['withTiming'] = romeon;
            yankee['opacity'] = golfie;
            romeon = 11;
            romeon = backup[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            romeon = romeon.timingStandard;
            yankee['timingStandard'] = romeon;
            zuuluu['__closure'] = yankee;
            yankee = 6531430956793.0;
            zuuluu['__workletHash'] = yankee;
            yankee = _closure1_slot10;
            zuuluu['__initData'] = yankee;
            yankee = report.bind(option)(zuuluu);
            zuuluu = michal.notificationSetting;
            michal = _closure1_slot6;
            michal = michal.ALL_MESSAGES;
            if(!(zuuluu !== michal)) { _fun00002_ip = 520; continue _fun00001 }
 326:
            report = _closure1_slot7;
            zuuluu = _closure1_slot4;
            michal = {};
            foxtra = _closure1_slot8;
            echoed = _closure1_slot0;
            update = _closure1_slot2;
            backup = 12;
            option = update[backup];
            option = echoed.bind(tangon)(option);
            romeon = option.Text;
            option = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
            backup = update[backup];
            backup = echoed.bind(tangon)(backup);
            kiloes = backup.Text;
            backup = {'variant': 'text-sm/normal', 'color': 'text-link'};
            output = ['@'];
            output[1] = result;
            result = ' ';
            output[2] = result;
            backup['children'] = output;
            kiloes = foxtra.bind(tangon)(kiloes, backup);
            backup = new Array(2);
            backup[0] = kiloes;
            kiloes = 13;
            output = update[kiloes];
            output = echoed.bind(tangon)(output);
            result = output.intl;
            output = result.string;
            kiloes = update[kiloes];
            kiloes = echoed.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.WYyzIy;
            kiloes = output.bind(result)(kiloes);
            backup[1] = kiloes;
            option['children'] = backup;
            option = foxtra.bind(tangon)(romeon, option);
            michal['children'] = option;
            kiloes = report.bind(tangon)(zuuluu, michal);
            _fun00002_ip = 620; continue _fun00001;
 520:
            report = _closure1_slot7;
            backup = _closure1_slot0;
            output = _closure1_slot2;
            michal = 12;
            michal = output[michal];
            michal = backup.bind(tangon)(michal);
            zuuluu = michal.Text;
            michal = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
            option = 13;
            romeon = output[option];
            romeon = backup.bind(tangon)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            option = output[option];
            option = backup.bind(tangon)(option);
            option = option.t;
            option = option.WYyzIy;
            option = romeon.bind(foxtra)(option);
            michal['children'] = option;
            kiloes = report.bind(tangon)(zuuluu, michal);
 620:
            report = _closure1_slot3;
            zuuluu = report.useEffect;
            michal = new Array(2);
            michal[0] = golfie;
            michal[1] = oscard;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot1;
                    michal = zuuluu.set;
                    tangon = _closure2_slot0;
                    entity = 0;
                    if(!tangon) { _fun00004_ip = 31; continue _fun00003 }
 21:
                    entity = 0.8;
 31:
                    entity = michal.bind(zuuluu)(entity);
                    entity = undefined;
                    return entity;
                }
            };
            entity = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot8;
            michal = _closure1_slot4;
            entity = {};
            report = offset.card;
            entity['style'] = report;
            report = {};
            oscard = offset.cardContent;
            report['style'] = oscard;
            option = _closure1_slot7;
            romeon = {};
            golfie = _closure1_slot1;
            oscard = _closure1_slot2;
            foxtra = 14;
            foxtra = oscard[foxtra];
            backup = golfie.bind(tangon)(foxtra);
            foxtra = {};
            output = 15;
            output = oscard[output];
            output = golfie.bind(tangon)(output);
            foxtra['source'] = output;
            update = _closure1_slot0;
            sizing = 16;
            sizing = oscard[sizing];
            sizing = update.bind(tangon)(sizing);
            sizing = sizing.AvatarSizes;
            sizing = sizing.LARGE_48;
            foxtra['size'] = sizing;
            foxtra = option.bind(tangon)(backup, foxtra);
            romeon['children'] = foxtra;
            foxtra = option.bind(tangon)(michal, romeon);
            romeon = new Array(2);
            romeon[0] = foxtra;
            foxtra = {};
            backup = offset.cardMessage;
            foxtra['style'] = backup;
            backup = 12;
            backup = oscard[backup];
            backup = update.bind(tangon)(backup);
            sizing = backup.Text;
            backup = {};
            output = 'text-sm/semibold';
            backup['variant'] = output;
            output = 13;
            result = oscard[output];
            result = update.bind(tangon)(result);
            echoed = result.intl;
            result = echoed.string;
            output = oscard[output];
            output = update.bind(tangon)(output);
            output = output.t;
            output = output.qSq0tL;
            output = result.bind(echoed)(output);
            backup['children'] = output;
            sizing = option.bind(tangon)(sizing, backup);
            backup = new Array(2);
            backup[0] = sizing;
            backup[1] = kiloes;
            foxtra['children'] = backup;
            foxtra = zuuluu.bind(tangon)(michal, foxtra);
            romeon[1] = foxtra;
            report['children'] = romeon;
            romeon = zuuluu.bind(tangon)(michal, report);
            report = new Array(2);
            report[0] = romeon;
            oscard = oscard[verify];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.View;
            oscard = {};
            verify = new Array(2);
            verify[0] = yankee;
            offset = offset.overlay;
            verify[1] = offset;
            oscard['style'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();