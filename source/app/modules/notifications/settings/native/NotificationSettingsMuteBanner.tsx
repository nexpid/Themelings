// app/modules/notifications/settings/native/NotificationSettingsMuteBanner.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot2 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot3 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    offset = {'padding': 16, 'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'space-between'};
    yankee = 4;
    tango = oscar[yankee];
    tango = romeo.bind(entity)(tango);
    tango = tango.radii;
    foxtrot = tango.lg;
    tango = 8;
    foxtrot = foxtrot + tango;
    offset['borderRadius'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_BRAND;
    offset['backgroundColor'] = yankee;
    golf['card'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/notifications/settings/native/NotificationSettingsMuteBanner.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: NotificationSettingsMuteBanner
        verify = argFoo;
        entity = _closure1_slot5;
        tango = undefined;
        golf = entity.bind(tango)();
        zulu = _closure1_slot4;
        mike = _closure1_slot2;
        entity = {};
        options = verify.style;
        report = new Array(2);
        report[0] = options;
        golf = golf.card;
        report[1] = golf;
        entity['style'] = report;
        report = {};
        golf = {'flex': 1, 'marginRight': 8};
        report['style'] = golf;
        options = _closure1_slot3;
        foxtrot = _closure1_slot0;
        backup = _closure1_slot1;
        golf = 5;
        oscar = backup[golf];
        oscar = foxtrot.bind(tango)(oscar);
        offset = oscar.Text;
        oscar = {'variant': 'text-md/semibold', 'color': 'white'};
        yankee = verify.title;
        oscar['children'] = yankee;
        offset = options.bind(tango)(offset, oscar);
        oscar = new Array(2);
        oscar[0] = offset;
        golf = backup[golf];
        golf = foxtrot.bind(tango)(golf);
        offset = golf.Text;
        golf = {'variant': 'text-xs/medium', 'color': 'white'};
        yankee = verify.subtitle;
        golf['children'] = yankee;
        golf = options.bind(tango)(offset, golf);
        oscar[1] = golf;
        report['children'] = oscar;
        oscar = zulu.bind(tango)(mike, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = 6;
        oscar = backup[oscar];
        oscar = foxtrot.bind(tango)(oscar);
        golf = oscar.Button;
        oscar = {};
        offset = 7;
        yankee = backup[offset];
        yankee = foxtrot.bind(tango)(yankee);
        romeo = yankee.intl;
        yankee = romeo.string;
        offset = backup[offset];
        offset = foxtrot.bind(tango)(offset);
        offset = offset.t;
        offset = offset.YqAjX1;
        offset = yankee.bind(romeo)(offset);
        oscar['text'] = offset;
        verify = verify.onPressUnmute;
        oscar['onPress'] = verify;
        verify = 'primary-overlay';
        oscar['variant'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['NotificationSettingsMuteBanner'] = tango;
    mike = function(argFoo) { // Original name: getMuteBannerSubtitleFromConfig
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            options = argFoo;
            mike = null;
            zulu = mike == options;
            oscar = undefined;
            entity = undefined;
            if(zulu) { _fun00002_ip = 22; continue _fun00001 }
 16:
            entity = options.end_time;
 22:
            if(!(mike != entity)) { _fun00002_ip = 175; continue _fun00001 }
 29:
            golf = _closure1_slot0;
            offset = _closure1_slot1;
            report = 7;
            entity = offset[report];
            entity = golf.bind(oscar)(entity);
            tango = entity.intl;
            zulu = tango.formatToPlainString;
            entity = offset[report];
            entity = golf.bind(oscar)(entity);
            entity = entity.t;
            mike = entity.C7m4oq;
            entity = {};
            verify = global;
            yankee = verify.Date;
            foxtrot = options.end_time;
            verify = yankee.prototype;
            verify = Object.create(verify, {constructor: {value: yankee}});
            backup = verify;
            options = new backup[yankee](foxtrot, romeo);
            verify = options instanceof Object ? options : verify;
            options = verify.toLocaleString;
            report = offset[report];
            report = golf.bind(oscar)(report);
            report = report.intl;
            golf = report.currentLocale;
            report = {'month': 'numeric', 'day': 'numeric', 'hour': 'numeric', 'minute': '2-digit'};
            report = options.bind(verify)(golf, report);
            entity['endTime'] = report;
            entity = zulu.bind(tango)(mike, entity);
            _fun00002_ip = 235; continue _fun00001;
 175:
            report = _closure1_slot0;
            golf = _closure1_slot1;
            mike = 7;
            zulu = golf[mike];
            zulu = report.bind(oscar)(zulu);
            tango = zulu.intl;
            zulu = tango.string;
            mike = golf[mike];
            mike = report.bind(oscar)(mike);
            mike = mike.t;
            mike = mike.tFqP/P;
            entity = zulu.bind(tango)(mike);
 235:
            return entity;
        }
    };
    zulu['getMuteBannerSubtitleFromConfig'] = mike;
    return entity;
})();