// app/modules/notifications/settings/native/NotificationSettingsChannelPost.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot5 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/notifications/settings/native/NotificationSettingsChannelPost.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: NotificationSettingsChannelPost
        _fun86899: for(var _fun86899_ip = 0; ; ) switch(_fun86899_ip) {
 0:
            report = argFoo;
            var _closure2_slot0 = report;
            entity = report.channel;
            mike = entity.guild_id;
            var _closure2_slot1 = mike;
            entity = entity.id;
            var _closure2_slot2 = entity;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            mike = 4;
            mike = output[mike];
            tango = undefined;
            golf = sizing.bind(tango)(mike);
            oscar = golf.useStateFromStoresObject;
            mike = _closure1_slot4;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                entity = {};
                tango = _closure1_slot4;
                oscar = tango.isChannelMuted;
                report = _closure2_slot1;
                zulu = _closure2_slot2;
                zulu = oscar.bind(tango)(report, zulu);
                entity['muted'] = zulu;
                zulu = tango.isMuted;
                zulu = zulu.bind(tango)(report);
                entity['guildMuted'] = zulu;
                zulu = tango.getNewForumThreadsCreated;
                mike = _closure2_slot0;
                mike = mike.channel;
                mike = zulu.bind(tango)(mike);
                entity['newForumThreadsCreated'] = mike;
                return entity;
            };
            mike = oscar.bind(golf)(zulu, mike);
            offset = mike.muted;
            yankee = mike.guildMuted;
            romeo = mike.newForumThreadsCreated;
            var _closure2_slot3 = romeo;
            zulu = _closure1_slot5;
            mike = _closure1_slot3;
            entity = {};
            report = report.style;
            entity['style'] = report;
            report = 5;
            report = output[report];
            report = sizing.bind(tango)(report);
            oscar = report.TableRowGroup;
            report = {};
            foxtrot = 6;
            golf = output[foxtrot];
            golf = sizing.bind(tango)(golf);
            backup = golf.intl;
            options = backup.string;
            golf = output[foxtrot];
            golf = sizing.bind(tango)(golf);
            golf = golf.t;
            golf = golf.bK11jI;
            golf = options.bind(backup)(golf);
            report['title'] = golf;
            golf = 7;
            golf = output[golf];
            golf = sizing.bind(tango)(golf);
            options = golf.TableCheckboxRow;
            golf = {};
            backup = output[foxtrot];
            backup = sizing.bind(tango)(backup);
            kilo = backup.intl;
            backup = kilo.string;
            foxtrot = output[foxtrot];
            foxtrot = sizing.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.Rkgjpq;
            foxtrot = backup.bind(kilo)(foxtrot);
            golf['label'] = foxtrot;
            golf['checked'] = romeo;
            if(offset) { _fun86899_ip = 279; continue _fun86899 }
 276:
            offset = yankee;
 279:
            golf['disabled'] = offset;
            verify = function() { // Original name: onPress
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 8;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.setForumThreadsCreated;
                zulu = _closure2_slot0;
                zulu = zulu.channel;
                mike = _closure2_slot3;
                mike = !mike;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            golf['onPress'] = verify;
            golf = zulu.bind(tango)(options, golf);
            report['children'] = golf;
            report = zulu.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['NotificationSettingsChannelPost'] = mike;
    return entity;
})();