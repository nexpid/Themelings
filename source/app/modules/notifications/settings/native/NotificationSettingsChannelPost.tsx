// app/modules/notifications/settings/native/NotificationSettingsChannelPost.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/notifications/settings/native/NotificationSettingsChannelPost.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: NotificationSettingsChannelPost
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            report = argFoo;
            var _closure2_slot0 = report;
            entity = report.channel;
            michal = entity.guild_id;
            var _closure2_slot1 = michal;
            entity = entity.id;
            var _closure2_slot2 = entity;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            michal = 4;
            michal = output[michal];
            tangon = undefined;
            golfie = sizing.bind(tangon)(michal);
            oscard = golfie.useStateFromStoresObject;
            michal = _closure1_slot4;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                entity = {};
                tangon = _closure1_slot4;
                oscard = tangon.isChannelMuted;
                report = _closure2_slot1;
                zuuluu = _closure2_slot2;
                zuuluu = oscard.bind(tangon)(report, zuuluu);
                entity['muted'] = zuuluu;
                zuuluu = tangon.isMuted;
                zuuluu = zuuluu.bind(tangon)(report);
                entity['guildMuted'] = zuuluu;
                zuuluu = tangon.getNewForumThreadsCreated;
                michal = _closure2_slot0;
                michal = michal.channel;
                michal = zuuluu.bind(tangon)(michal);
                entity['newForumThreadsCreated'] = michal;
                return entity;
            };
            michal = oscard.bind(golfie)(zuuluu, michal);
            offset = michal.muted;
            yankee = michal.guildMuted;
            romeon = michal.newForumThreadsCreated;
            var _closure2_slot3 = romeon;
            zuuluu = _closure1_slot5;
            michal = _closure1_slot3;
            entity = {};
            report = report.style;
            entity['style'] = report;
            report = 5;
            report = output[report];
            report = sizing.bind(tangon)(report);
            oscard = report.TableRowGroup;
            report = {};
            foxtra = 6;
            golfie = output[foxtra];
            golfie = sizing.bind(tangon)(golfie);
            backup = golfie.intl;
            option = backup.string;
            golfie = output[foxtra];
            golfie = sizing.bind(tangon)(golfie);
            golfie = golfie.t;
            golfie = golfie.bK11jI;
            golfie = option.bind(backup)(golfie);
            report['title'] = golfie;
            golfie = 7;
            golfie = output[golfie];
            golfie = sizing.bind(tangon)(golfie);
            option = golfie.TableCheckboxRow;
            golfie = {};
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = output[foxtra];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.Rkgjpq;
            foxtra = backup.bind(kiloes)(foxtra);
            golfie['label'] = foxtra;
            golfie['checked'] = romeon;
            if(offset) { _fun00002_ip = 277; continue _fun00001 }
 274:
            offset = yankee;
 277:
            golfie['disabled'] = offset;
            verify = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 8;
                michal = michal[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                tangon = report.setForumThreadsCreated;
                zuuluu = _closure2_slot0;
                zuuluu = zuuluu.channel;
                michal = _closure2_slot3;
                michal = !michal;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            golfie['onPress'] = verify;
            golfie = zuuluu.bind(tangon)(option, golfie);
            report['children'] = golfie;
            report = zuuluu.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['NotificationSettingsChannelPost'] = michal;
    return entity;
})();