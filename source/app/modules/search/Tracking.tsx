// app/modules/search/Tracking.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot2 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/search/Tracking.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: trackSearchResultViewed
        entity = argFoo;
        echoed = entity.searchType;
        result = entity.searchAnalyticsId;
        output = entity.prevSearchId;
        sizing = entity.isError;
        kiloes = entity.limit;
        backup = entity.offset;
        foxtra = entity.page;
        romeon = entity.totalResults;
        yankee = entity.pageResults;
        offset = entity.isIndexing;
        verify = entity.pageNumMessages;
        option = entity.pageNumLinks;
        golfie = entity.pageNumEmbeds;
        oscard = entity.pageNumAttachments;
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot1;
        entity = 1;
        zuuluu = zuuluu[entity];
        entity = undefined;
        report = tangon.bind(entity)(zuuluu);
        tangon = report.trackWithMetadata;
        michal = _closure1_slot2;
        zuuluu = michal.SEARCH_RESULT_VIEWED;
        michal = {};
        michal['search_type'] = echoed;
        michal['search_id'] = result;
        michal['prev_search_id'] = output;
        michal['is_error'] = sizing;
        michal['limit'] = kiloes;
        michal['offset'] = backup;
        michal['page'] = foxtra;
        michal['total_results'] = romeon;
        michal['page_results'] = yankee;
        michal['is_indexing'] = offset;
        michal['page_num_messages'] = verify;
        michal['page_num_links'] = option;
        michal['page_num_embeds'] = golfie;
        michal['page_num_attach'] = oscard;
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    zuuluu['trackSearchResultViewed'] = tangon;
    tangon = function(argFoo) { // Original name: trackSearchResultSelected
        entity = argFoo;
        kiloes = entity.searchType;
        backup = entity.searchAnalyticsId;
        foxtra = entity.guildId;
        romeon = entity.channelId;
        yankee = entity.pageResults;
        offset = entity.totalResults;
        verify = entity.page;
        option = entity.limit;
        golfie = entity.offset;
        oscard = entity.index;
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot1;
        entity = 2;
        zuuluu = zuuluu[entity];
        entity = undefined;
        report = tangon.bind(entity)(zuuluu);
        tangon = report.track;
        michal = _closure1_slot2;
        zuuluu = michal.SEARCH_RESULT_SELECTED;
        michal = {};
        michal['search_type'] = kiloes;
        michal['search_id'] = backup;
        michal['guild_id'] = foxtra;
        michal['channel_id'] = romeon;
        michal['page_results'] = yankee;
        michal['total_results'] = offset;
        michal['page'] = verify;
        michal['limit'] = option;
        michal['offset'] = golfie;
        michal['index_num'] = oscard;
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    zuuluu['trackSearchResultSelected'] = tangon;
    tangon = function(argFoo) { // Original name: trackSearchResultSortChanged
        entity = argFoo;
        golfie = entity.searchAnalyticsId;
        oscard = entity.mode;
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot1;
        entity = 1;
        zuuluu = zuuluu[entity];
        entity = undefined;
        report = tangon.bind(entity)(zuuluu);
        tangon = report.trackWithMetadata;
        michal = _closure1_slot2;
        zuuluu = michal.SEARCH_RESULT_SORT_CHANGED;
        michal = {};
        michal['search_id'] = golfie;
        michal['new_sort_type'] = oscard;
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    zuuluu['trackSearchResultSortChanged'] = tangon;
    tangon = function(argFoo) { // Original name: trackSearchResultEmpty
        entity = argFoo;
        golfie = entity.searchType;
        oscard = entity.searchAnalyticsId;
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot1;
        entity = 1;
        zuuluu = zuuluu[entity];
        entity = undefined;
        report = tangon.bind(entity)(zuuluu);
        tangon = report.trackWithMetadata;
        michal = _closure1_slot2;
        zuuluu = michal.SEARCH_RESULT_EMPTY;
        michal = {};
        michal['search_type'] = golfie;
        michal['search_id'] = oscard;
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    zuuluu['trackSearchResultEmpty'] = tangon;
    tangon = function(argFoo) { // Original name: trackSearchOpened
        entity = argFoo;
        oscard = entity.searchType;
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot1;
        entity = 1;
        zuuluu = zuuluu[entity];
        entity = undefined;
        report = tangon.bind(entity)(zuuluu);
        tangon = report.trackWithMetadata;
        michal = _closure1_slot2;
        zuuluu = michal.SEARCH_OPENED;
        michal = {};
        michal['search_type'] = oscard;
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    zuuluu['trackSearchOpened'] = tangon;
    tangon = function(argFoo) { // Original name: trackSearchClosed
        entity = argFoo;
        golfie = entity.searchAnalyticsId;
        oscard = entity.searchType;
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot1;
        entity = 1;
        zuuluu = zuuluu[entity];
        entity = undefined;
        report = tangon.bind(entity)(zuuluu);
        tangon = report.trackWithMetadata;
        michal = _closure1_slot2;
        zuuluu = michal.SEARCH_CLOSED;
        michal = {};
        michal['search_id'] = golfie;
        michal['search_type'] = oscard;
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    zuuluu['trackSearchClosed'] = tangon;
    tangon = function(argFoo) { // Original name: trackSearchInputCleared
        entity = argFoo;
        oscard = entity.searchType;
        golfie = entity.searchAnalyticsId;
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot1;
        entity = 1;
        zuuluu = zuuluu[entity];
        entity = undefined;
        report = tangon.bind(entity)(zuuluu);
        tangon = report.trackWithMetadata;
        michal = _closure1_slot2;
        zuuluu = michal.SEARCH_INPUT_CLEARED;
        michal = {};
        michal['search_id'] = golfie;
        michal['search_type'] = oscard;
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    zuuluu['trackSearchInputCleared'] = tangon;
    michal = function(argFoo) { // Original name: trackSearchStarted
        michal = argFoo;
        verify = michal.searchType;
        option = michal.searchAnalyticsId;
        tangon = michal.query;
        var _closure2_slot0 = tangon;
        michal = global;
        zuuluu = michal.Object;
        michal = zuuluu.keys;
        golfie = michal.bind(zuuluu)(tangon);
        zuuluu = golfie.reduce;
        michal = function(argFoo, argBar) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = argFoo;
                zuuluu = argBar;
                michal = _closure2_slot0;
                tangon = michal[zuuluu];
                michal = global;
                report = michal.Array;
                michal = report.isArray;
                report = michal.bind(report)(tangon);
                michal = 1;
                if(!report) { _fun00002_ip = 46; continue _fun00001 }
 41:
                michal = tangon.length;
 46:
                entity[zuuluu] = michal;
                return entity;
            }
        };
        entity = {};
        oscard = zuuluu.bind(golfie)(michal, entity);
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot1;
        entity = 1;
        zuuluu = zuuluu[entity];
        entity = undefined;
        report = tangon.bind(entity)(zuuluu);
        tangon = report.trackWithMetadata;
        michal = _closure1_slot2;
        zuuluu = michal.SEARCH_STARTED;
        michal = {};
        michal['search_type'] = verify;
        michal['prev_search_id'] = option;
        golfie = golfie.length;
        michal['num_modifiers'] = golfie;
        michal['modifiers'] = oscard;
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    zuuluu['trackSearchStarted'] = michal;
    return entity;
})();