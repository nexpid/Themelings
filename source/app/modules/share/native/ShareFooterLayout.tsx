// app/modules/share/native/ShareFooterLayout.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    golfie = tangon.Fragment;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'flexDirection': 'column', 'flexShrink': 0};
    offset = 5;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['paddingHorizontal'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_12;
    verify['paddingVertical'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_12;
    verify['gap'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_SURFACE_OVERLAY;
    verify['backgroundColor'] = foxtra;
    verify['borderTopWidth'] = romeon;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BORDER_SUBTLE;
    verify['borderTopColor'] = foxtra;
    tangon['footer'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    foxtra = -foxtra;
    verify['marginHorizontal'] = foxtra;
    verify['borderBottomWidth'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BORDER_SUBTLE;
    verify['borderBottomColor'] = romeon;
    tangon['footerSeparator'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'column', 'gap': 8};
    tangon['warningWrapper'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'flex-end'};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_12;
    verify['gap'] = offset;
    tangon['chatRow'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = {};
    golfie = "function ShareFooterLayoutTsx1(){const{withSpring,interpolate,avoidingKeyboardSv,baseOffset,keyboardOffset,ON_PRESS_SPRING}=this.__closure;return{paddingBottom:withSpring(interpolate(avoidingKeyboardSv.get(),[0,1],[baseOffset,keyboardOffset]),ON_PRESS_SPRING,'respect-motion-settings')};}";
    tangon['code'] = golfie;
    var _closure1_slot10 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/share/native/ShareFooterLayout.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ShareFooterLayout
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            sizing = entity.preview;
            kiloes = entity.chatInput;
            foxtra = entity.sendButton;
            backup = entity.warningText;
            result = entity.avoidKeyboard;
            var _closure2_slot0 = result;
            tangon = undefined;
            var _closure2_slot2 = tangon;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            entity = _closure1_slot9;
            romeon = entity.bind(tangon)();
            report = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 6;
            entity = zuuluu[entity];
            entity = report.bind(tangon)(entity);
            oscard = entity.bind(tangon)();
            option = _closure1_slot0;
            entity = 7;
            entity = zuuluu[entity];
            offset = option.bind(tangon)(entity);
            verify = offset.useStateFromStoresObject;
            entity = _closure1_slot5;
            golfie = new Array(1);
            golfie[0] = entity;
            report = function() {
                entity = {};
                michal = _closure1_slot5;
                zuuluu = michal.keyboardHeight;
                entity['keyboardHeight'] = zuuluu;
                michal = michal.keyboardOpen;
                entity['keyboardOpen'] = michal;
                return entity;
            };
            entity = new Array(0);
            entity = verify.bind(offset)(golfie, report, entity);
            golfie = entity.keyboardHeight;
            entity = entity.keyboardOpen;
            var _closure2_slot1 = entity;
            report = 8;
            zuuluu = zuuluu[report];
            offset = option.bind(tangon)(zuuluu);
            verify = offset.useSharedValue;
            option = 0;
            if(!result) { _fun00002_ip = 186; continue _fun00001 }
 178:
            option = 0;
            if(!entity) { _fun00002_ip = 186; continue _fun00001 }
 183:
            option = 1;
 186:
            output = verify.bind(offset)(option);
            _closure2_slot2 = output;
            offset = _closure1_slot3;
            verify = offset.useEffect;
            option = new Array(3);
            option[0] = result;
            option[1] = entity;
            option[2] = output;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot2;
                    michal = zuuluu.set;
                    oscard = _closure2_slot0;
                    entity = 0;
                    if(!oscard) { _fun00004_ip = 33; continue _fun00003 }
 21:
                    tangon = _closure2_slot1;
                    entity = 0;
                    if(!tangon) { _fun00004_ip = 33; continue _fun00003 }
 30:
                    entity = 1;
 33:
                    entity = michal.bind(zuuluu)(entity);
                    entity = undefined;
                    return entity;
                }
            };
            entity = verify.bind(offset)(entity, option);
            entity = romeon.footer;
            entity = entity.paddingVertical;
            option = oscard.bottom;
            offset = entity + option;
            _closure2_slot3 = offset;
            entity = entity + golfie;
            option = _closure1_slot0;
            verify = _closure1_slot2;
            golfie = 9;
            golfie = verify[golfie];
            option = option.bind(tangon)(golfie);
            golfie = option.isAndroid;
            golfie = golfie.bind(option)();
            zuuluu = 0;
            if(!golfie) { _fun00002_ip = 301; continue _fun00001 }
 296:
            zuuluu = oscard.bottom;
 301:
            option = entity + zuuluu;
            _closure2_slot4 = option;
            verify = _closure1_slot0;
            entity = _closure1_slot2;
            zuuluu = entity[report];
            oscard = verify.bind(tangon)(zuuluu);
            zuuluu = oscard.useAnimatedStyle;
            michal = function() { // Original name: v
                entity = {};
                golfie = _closure1_slot0;
                option = _closure1_slot2;
                michal = 10;
                michal = option[michal];
                zuuluu = undefined;
                oscard = golfie.bind(zuuluu)(michal);
                report = oscard.withSpring;
                michal = 8;
                michal = option[michal];
                yankee = golfie.bind(zuuluu)(michal);
                offset = yankee.interpolate;
                verify = _closure2_slot2;
                tangon = verify.get;
                verify = tangon.bind(verify)();
                romeon = _closure2_slot3;
                tangon = new Array(2);
                tangon[0] = romeon;
                michal = _closure2_slot4;
                tangon[1] = michal;
                michal = [0, 1];
                tangon = offset.bind(yankee)(verify, michal, tangon);
                michal = 11;
                michal = option[michal];
                michal = golfie.bind(zuuluu)(michal);
                zuuluu = michal.ON_PRESS_SPRING;
                michal = 'respect-motion-settings';
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                entity['paddingBottom'] = michal;
                return entity;
            };
            golfie = {};
            result = 10;
            result = entity[result];
            result = verify.bind(tangon)(result);
            result = result.withSpring;
            golfie['withSpring'] = result;
            result = entity[report];
            result = verify.bind(tangon)(result);
            result = result.interpolate;
            golfie['interpolate'] = result;
            golfie['avoidingKeyboardSv'] = output;
            golfie['baseOffset'] = offset;
            golfie['keyboardOffset'] = option;
            option = 11;
            option = entity[option];
            option = verify.bind(tangon)(option);
            option = option.ON_PRESS_SPRING;
            golfie['ON_PRESS_SPRING'] = option;
            michal['__closure'] = golfie;
            golfie = 8174695998136.0;
            michal['__workletHash'] = golfie;
            golfie = _closure1_slot10;
            michal['__initData'] = golfie;
            oscard = zuuluu.bind(oscard)(michal);
            zuuluu = _closure1_slot8;
            michal = _closure1_slot1;
            entity = entity[report];
            entity = michal.bind(tangon)(entity);
            michal = entity.View;
            entity = {};
            golfie = romeon.footer;
            report = new Array(2);
            report[0] = golfie;
            report[1] = oscard;
            entity['style'] = report;
            offset = null;
            report = offset != sizing;
            oscard = null;
            if(!report) { _fun00002_ip = 578; continue _fun00001 }
 520:
            option = _closure1_slot8;
            golfie = _closure1_slot7;
            report = {};
            verify = new Array(2);
            verify[0] = sizing;
            result = _closure1_slot6;
            output = _closure1_slot4;
            sizing = {};
            echoed = romeon.footerSeparator;
            sizing['style'] = echoed;
            sizing = result.bind(tangon)(output, sizing);
            verify[1] = sizing;
            report['children'] = verify;
            oscard = option.bind(tangon)(golfie, report);
 578:
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot8;
            golfie = _closure1_slot4;
            oscard = {};
            verify = romeon.warningWrapper;
            oscard['style'] = verify;
            verify = {};
            romeon = romeon.chatRow;
            verify['style'] = romeon;
            romeon = new Array(2);
            romeon[0] = kiloes;
            romeon[1] = foxtra;
            verify['children'] = romeon;
            romeon = option.bind(tangon)(golfie, verify);
            verify = new Array(2);
            verify[0] = romeon;
            offset = offset != backup;
            if(!offset) { _fun00002_ip = 708; continue _fun00001 }
 655:
            foxtra = _closure1_slot6;
            romeon = _closure1_slot0;
            kiloes = _closure1_slot2;
            yankee = 12;
            yankee = kiloes[yankee];
            yankee = romeon.bind(tangon)(yankee);
            romeon = yankee.Text;
            yankee = {'variant': 'text-sm/normal', 'color': 'text-warning'};
            yankee['children'] = backup;
            offset = foxtra.bind(tangon)(romeon, yankee);
 708:
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();