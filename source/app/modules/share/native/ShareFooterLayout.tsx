// app/modules/share/native/ShareFooterLayout.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    romeo = 1;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'display': 'flex', 'flexDirection': 'column', 'flexShrink': 0};
    offset = 5;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['paddingHorizontal'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_12;
    verify['paddingVertical'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_12;
    verify['gap'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_SURFACE_OVERLAY;
    verify['backgroundColor'] = foxtrot;
    verify['borderTopWidth'] = romeo;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BORDER_SUBTLE;
    verify['borderTopColor'] = foxtrot;
    tango['footer'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    foxtrot = -foxtrot;
    verify['marginHorizontal'] = foxtrot;
    verify['borderBottomWidth'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BORDER_SUBTLE;
    verify['borderBottomColor'] = romeo;
    tango['footerSeparator'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'column', 'gap': 8};
    tango['warningWrapper'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'flex-end'};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_12;
    verify['gap'] = offset;
    tango['chatRow'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = {};
    golf = "function ShareFooterLayoutTsx1(){const{withSpring,interpolate,avoidingKeyboardSv,baseOffset,keyboardOffset,ON_PRESS_SPRING}=this.__closure;return{paddingBottom:withSpring(interpolate(avoidingKeyboardSv.get(),[0,1],[baseOffset,keyboardOffset]),ON_PRESS_SPRING,'respect-motion-settings')};}";
    tango['code'] = golf;
    var _closure1_slot10 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/share/native/ShareFooterLayout.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ShareFooterLayout
        _fun102181: for(var _fun102181_ip = 0; ; ) switch(_fun102181_ip) {
 0:
            entity = argFoo;
            sizing = entity.preview;
            kilo = entity.chatInput;
            foxtrot = entity.sendButton;
            backup = entity.warningText;
            result = entity.avoidKeyboard;
            var _closure2_slot0 = result;
            tango = undefined;
            var _closure2_slot2 = tango;
            var _closure2_slot3 = tango;
            var _closure2_slot4 = tango;
            entity = _closure1_slot9;
            romeo = entity.bind(tango)();
            report = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 6;
            entity = zulu[entity];
            entity = report.bind(tango)(entity);
            oscar = entity.bind(tango)();
            options = _closure1_slot0;
            entity = 7;
            entity = zulu[entity];
            offset = options.bind(tango)(entity);
            verify = offset.useStateFromStoresObject;
            entity = _closure1_slot5;
            golf = new Array(1);
            golf[0] = entity;
            report = function() {
                entity = {};
                mike = _closure1_slot5;
                zulu = mike.keyboardHeight;
                entity['keyboardHeight'] = zulu;
                mike = mike.keyboardOpen;
                entity['keyboardOpen'] = mike;
                return entity;
            };
            entity = new Array(0);
            entity = verify.bind(offset)(golf, report, entity);
            golf = entity.keyboardHeight;
            entity = entity.keyboardOpen;
            var _closure2_slot1 = entity;
            report = 8;
            zulu = zulu[report];
            offset = options.bind(tango)(zulu);
            verify = offset.useSharedValue;
            options = 0;
            if(!result) { _fun102181_ip = 186; continue _fun102181 }
 178:
            options = 0;
            if(!entity) { _fun102181_ip = 186; continue _fun102181 }
 183:
            options = 1;
 186:
            output = verify.bind(offset)(options);
            _closure2_slot2 = output;
            offset = _closure1_slot3;
            verify = offset.useEffect;
            options = new Array(3);
            options[0] = result;
            options[1] = entity;
            options[2] = output;
            entity = function() {
                _fun102183: for(var _fun102183_ip = 0; ; ) switch(_fun102183_ip) {
 0:
                    zulu = _closure2_slot2;
                    mike = zulu.set;
                    oscar = _closure2_slot0;
                    entity = 0;
                    if(!oscar) { _fun102183_ip = 33; continue _fun102183 }
 21:
                    tango = _closure2_slot1;
                    entity = 0;
                    if(!tango) { _fun102183_ip = 33; continue _fun102183 }
 30:
                    entity = 1;
 33:
                    entity = mike.bind(zulu)(entity);
                    entity = undefined;
                    return entity;
                }
            };
            entity = verify.bind(offset)(entity, options);
            entity = romeo.footer;
            entity = entity.paddingVertical;
            options = oscar.bottom;
            offset = entity + options;
            _closure2_slot3 = offset;
            entity = entity + golf;
            options = _closure1_slot0;
            verify = _closure1_slot2;
            golf = 9;
            golf = verify[golf];
            options = options.bind(tango)(golf);
            golf = options.isAndroid;
            golf = golf.bind(options)();
            zulu = 0;
            if(!golf) { _fun102181_ip = 301; continue _fun102181 }
 296:
            zulu = oscar.bottom;
 301:
            options = entity + zulu;
            _closure2_slot4 = options;
            verify = _closure1_slot0;
            entity = _closure1_slot2;
            zulu = entity[report];
            oscar = verify.bind(tango)(zulu);
            zulu = oscar.useAnimatedStyle;
            mike = function() { // Original name: v
                entity = {};
                golf = _closure1_slot0;
                options = _closure1_slot2;
                mike = 10;
                mike = options[mike];
                zulu = undefined;
                oscar = golf.bind(zulu)(mike);
                report = oscar.withSpring;
                mike = 8;
                mike = options[mike];
                yankee = golf.bind(zulu)(mike);
                offset = yankee.interpolate;
                verify = _closure2_slot2;
                tango = verify.get;
                verify = tango.bind(verify)();
                romeo = _closure2_slot3;
                tango = new Array(2);
                tango[0] = romeo;
                mike = _closure2_slot4;
                tango[1] = mike;
                mike = [0, 1];
                tango = offset.bind(yankee)(verify, mike, tango);
                mike = 11;
                mike = options[mike];
                mike = golf.bind(zulu)(mike);
                zulu = mike.ON_PRESS_SPRING;
                mike = 'respect-motion-settings';
                mike = report.bind(oscar)(tango, zulu, mike);
                entity['paddingBottom'] = mike;
                return entity;
            };
            golf = {};
            result = 10;
            result = entity[result];
            result = verify.bind(tango)(result);
            result = result.withSpring;
            golf['withSpring'] = result;
            result = entity[report];
            result = verify.bind(tango)(result);
            result = result.interpolate;
            golf['interpolate'] = result;
            golf['avoidingKeyboardSv'] = output;
            golf['baseOffset'] = offset;
            golf['keyboardOffset'] = options;
            options = 11;
            options = entity[options];
            options = verify.bind(tango)(options);
            options = options.ON_PRESS_SPRING;
            golf['ON_PRESS_SPRING'] = options;
            mike['__closure'] = golf;
            golf = 8174695998136.0;
            mike['__workletHash'] = golf;
            golf = _closure1_slot10;
            mike['__initData'] = golf;
            oscar = zulu.bind(oscar)(mike);
            zulu = _closure1_slot8;
            mike = _closure1_slot1;
            entity = entity[report];
            entity = mike.bind(tango)(entity);
            mike = entity.View;
            entity = {};
            golf = romeo.footer;
            report = new Array(2);
            report[0] = golf;
            report[1] = oscar;
            entity['style'] = report;
            offset = null;
            report = offset != sizing;
            oscar = null;
            if(!report) { _fun102181_ip = 578; continue _fun102181 }
 520:
            options = _closure1_slot8;
            golf = _closure1_slot7;
            report = {};
            verify = new Array(2);
            verify[0] = sizing;
            result = _closure1_slot6;
            output = _closure1_slot4;
            sizing = {};
            echo = romeo.footerSeparator;
            sizing['style'] = echo;
            sizing = result.bind(tango)(output, sizing);
            verify[1] = sizing;
            report['children'] = verify;
            oscar = options.bind(tango)(golf, report);
 578:
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot8;
            golf = _closure1_slot4;
            oscar = {};
            verify = romeo.warningWrapper;
            oscar['style'] = verify;
            verify = {};
            romeo = romeo.chatRow;
            verify['style'] = romeo;
            romeo = new Array(2);
            romeo[0] = kilo;
            romeo[1] = foxtrot;
            verify['children'] = romeo;
            romeo = options.bind(tango)(golf, verify);
            verify = new Array(2);
            verify[0] = romeo;
            offset = offset != backup;
            if(!offset) { _fun102181_ip = 708; continue _fun102181 }
 655:
            foxtrot = _closure1_slot6;
            romeo = _closure1_slot0;
            kilo = _closure1_slot2;
            yankee = 12;
            yankee = kilo[yankee];
            yankee = romeo.bind(tango)(yankee);
            romeo = yankee.Text;
            yankee = {'variant': 'text-sm/normal', 'color': 'text-warning'};
            yankee['children'] = backup;
            offset = foxtrot.bind(tango)(romeo, yankee);
 708:
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();