// app/modules/share/native/ShareFooterLayout.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    golfie = tangon.Fragment;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'flexDirection': 'column', 'flexShrink': 0};
    offset = 4;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['paddingHorizontal'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_12;
    verify['paddingVertical'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_12;
    verify['gap'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_SURFACE_OVERLAY;
    verify['backgroundColor'] = foxtra;
    verify['borderTopWidth'] = romeon;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BORDER_SUBTLE;
    verify['borderTopColor'] = foxtra;
    tangon['footer'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    foxtra = -foxtra;
    verify['marginHorizontal'] = foxtra;
    verify['borderBottomWidth'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BORDER_SUBTLE;
    verify['borderBottomColor'] = romeon;
    tangon['footerSeparator'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'column', 'gap': 8};
    tangon['warningWrapper'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'flex-end'};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_12;
    verify['gap'] = offset;
    tangon['chatRow'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = {};
    golfie = "function ShareFooterLayoutTsx1(){const{withSpring,footerPaddingBottom,ON_PRESS_SPRING}=this.__closure;return{paddingBottom:withSpring(footerPaddingBottom,ON_PRESS_SPRING,'respect-motion-settings')};}";
    tangon['code'] = golfie;
    var _closure1_slot8 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/share/native/ShareFooterLayout.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ShareFooterLayout
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            sizing = entity.preview;
            kiloes = entity.chatInput;
            foxtra = entity.sendButton;
            backup = entity.warningText;
            golfie = entity.avoidKeyboard;
            entity = _closure1_slot7;
            tangon = undefined;
            romeon = entity.bind(tangon)();
            michal = _closure1_slot1;
            report = _closure1_slot2;
            entity = 5;
            entity = report[entity];
            oscard = michal.bind(tangon)(entity);
            entity = {};
            entity['includeKeyboardHeightAndroid'] = golfie;
            entity['includeKeyboardHeightIOS'] = golfie;
            entity = oscard.bind(tangon)(entity);
            entity = entity.insets;
            oscard = romeon.footer;
            oscard = oscard.paddingVertical;
            entity = entity.bottom;
            verify = oscard + entity;
            var _closure2_slot0 = verify;
            offset = _closure1_slot0;
            entity = 6;
            oscard = report[entity];
            golfie = offset.bind(tangon)(oscard);
            oscard = golfie.useAnimatedStyle;
            zuuluu = function() { // Original name: f
                entity = {};
                golfie = _closure1_slot0;
                option = _closure1_slot2;
                michal = 7;
                michal = option[michal];
                zuuluu = undefined;
                oscard = golfie.bind(zuuluu)(michal);
                report = oscard.withSpring;
                tangon = _closure2_slot0;
                michal = 8;
                michal = option[michal];
                michal = golfie.bind(zuuluu)(michal);
                zuuluu = michal.ON_PRESS_SPRING;
                michal = 'respect-motion-settings';
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                entity['paddingBottom'] = michal;
                return entity;
            };
            option = {};
            output = 7;
            output = report[output];
            output = offset.bind(tangon)(output);
            output = output.withSpring;
            option['withSpring'] = output;
            option['footerPaddingBottom'] = verify;
            verify = 8;
            verify = report[verify];
            verify = offset.bind(tangon)(verify);
            verify = verify.ON_PRESS_SPRING;
            option['ON_PRESS_SPRING'] = verify;
            zuuluu['__closure'] = option;
            option = 2871405301293.0;
            zuuluu['__workletHash'] = option;
            option = _closure1_slot8;
            zuuluu['__initData'] = option;
            oscard = oscard.bind(golfie)(zuuluu);
            zuuluu = _closure1_slot6;
            entity = report[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.View;
            entity = {};
            golfie = romeon.footer;
            report = new Array(2);
            report[0] = golfie;
            report[1] = oscard;
            entity['style'] = report;
            offset = null;
            report = offset != sizing;
            oscard = null;
            if(!report) { _fun00002_ip = 346; continue _fun00001 }
 288:
            option = _closure1_slot6;
            golfie = _closure1_slot5;
            report = {};
            verify = new Array(2);
            verify[0] = sizing;
            result = _closure1_slot4;
            output = _closure1_slot3;
            sizing = {};
            echoed = romeon.footerSeparator;
            sizing['style'] = echoed;
            sizing = result.bind(tangon)(output, sizing);
            verify[1] = sizing;
            report['children'] = verify;
            oscard = option.bind(tangon)(golfie, report);
 346:
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot6;
            golfie = _closure1_slot3;
            oscard = {};
            verify = romeon.warningWrapper;
            oscard['style'] = verify;
            verify = {};
            romeon = romeon.chatRow;
            verify['style'] = romeon;
            romeon = new Array(2);
            romeon[0] = kiloes;
            romeon[1] = foxtra;
            verify['children'] = romeon;
            romeon = option.bind(tangon)(golfie, verify);
            verify = new Array(2);
            verify[0] = romeon;
            offset = offset != backup;
            if(!offset) { _fun00002_ip = 476; continue _fun00001 }
 423:
            foxtra = _closure1_slot4;
            romeon = _closure1_slot0;
            kiloes = _closure1_slot2;
            yankee = 9;
            yankee = kiloes[yankee];
            yankee = romeon.bind(tangon)(yankee);
            romeon = yankee.Text;
            yankee = {'variant': 'text-sm/normal', 'color': 'text-warning'};
            yankee['children'] = backup;
            offset = foxtra.bind(tangon)(romeon, yankee);
 476:
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();