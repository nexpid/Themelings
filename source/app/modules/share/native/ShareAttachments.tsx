// app/modules/share/native/ShareAttachments.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = yankee.bind(entity)(tangon);
    golfie = option.createAnimatedComponent;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = {};
    golfie = 300;
    tangon['duration'] = golfie;
    golfie = 5;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.STANDARD_EASING;
    tangon['easing'] = golfie;
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 7;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    romeon = -romeon;
    verify['marginHorizontal'] = romeon;
    tangon['containerRevamp'] = verify;
    verify = {};
    romeon = 'row';
    verify['flexDirection'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['gap'] = romeon;
    tangon['attachmentPreviewContentContainer'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingHorizontal'] = romeon;
    tangon['attachmentPreviewContentContainerRevamp'] = verify;
    verify = {'height': 60, 'backgroundColor': null, 'overflow': 'hidden'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_BASE_PRIMARY;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    verify['borderRadius'] = romeon;
    tangon['attachmentPreview'] = verify;
    verify = {'width': 50, 'position': 'absolute', 'left': 0, 'top': 0, 'bottom': 0, 'zIndex': 100};
    tangon['leftGradient'] = verify;
    verify = {'width': 50, 'position': 'absolute', 'right': 0, 'top': 0, 'bottom': 0, 'zIndex': 100};
    tangon['rightGradient'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_SECONDARY;
    verify['color'] = offset;
    tangon['gradient'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = {};
    golfie = 'function ShareAttachmentsTsx1(){const{withTiming,contentOffset,GRADIENT_EASING_CONFIG}=this.__closure;return{opacity:withTiming(contentOffset.get()<=0?0:1,GRADIENT_EASING_CONFIG)};}';
    tangon['code'] = golfie;
    var _closure1_slot10 = tangon;
    tangon = {};
    golfie = 'function ShareAttachmentsTsx2(){const{withTiming,contentOffset,layoutWidth,contentWidth,GRADIENT_EASING_CONFIG}=this.__closure;return{opacity:withTiming(contentOffset.get()+layoutWidth.get()>=contentWidth.get()?0:1,GRADIENT_EASING_CONFIG)};}';
    tangon['code'] = golfie;
    var _closure1_slot11 = tangon;
    tangon = {};
    golfie = 'function ShareAttachmentsTsx3(event){const{contentOffset,contentWidth,layoutWidth}=this.__closure;contentOffset.set(event.contentOffset.x);contentWidth.set(event.contentSize.width);layoutWidth.set(event.layoutMeasurement.width);}';
    tangon['code'] = golfie;
    var _closure1_slot12 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/share/native/ShareAttachments.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ShareAttachments
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            romeon = entity.attachments;
            echoed = entity.isRevamp;
            report = undefined;
            if(!(echoed === report)) { _fun00002_ip = 25; continue _fun00001 }
 23:
            echoed = false;
 25:
            var _closure2_slot0 = report;
            var _closure2_slot1 = report;
            var _closure2_slot2 = report;
            var _closure2_slot3 = report;
            entity = _closure1_slot9;
            result = entity.bind(report)();
            _closure2_slot0 = result;
            oscard = _closure1_slot0;
            tangon = _closure1_slot2;
            sizing = 3;
            entity = tangon[sizing];
            michal = oscard.bind(report)(entity);
            entity = michal.useSharedValue;
            zuuluu = 0;
            verify = entity.bind(michal)(zuuluu);
            _closure2_slot1 = verify;
            entity = tangon[sizing];
            michal = oscard.bind(report)(entity);
            entity = michal.useSharedValue;
            entity = entity.bind(michal)(zuuluu);
            _closure2_slot2 = entity;
            michal = tangon[sizing];
            golfie = oscard.bind(report)(michal);
            michal = golfie.useSharedValue;
            michal = michal.bind(golfie)(zuuluu);
            _closure2_slot3 = michal;
            golfie = tangon[sizing];
            foxtra = oscard.bind(report)(golfie);
            option = foxtra.useAnimatedStyle;
            golfie = function() { // Original name: y
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = {};
                    report = _closure1_slot0;
                    tangon = _closure1_slot2;
                    zuuluu = 8;
                    tangon = tangon[zuuluu];
                    zuuluu = undefined;
                    report = report.bind(zuuluu)(tangon);
                    tangon = report.withTiming;
                    oscard = _closure2_slot1;
                    zuuluu = oscard.get;
                    zuuluu = zuuluu.bind(oscard)();
                    oscard = 0;
                    golfie = zuuluu <= oscard;
                    zuuluu = 1;
                    if(!golfie) { _fun00004_ip = 62; continue _fun00003 }
 60:
                    zuuluu = 0;
 62:
                    michal = _closure1_slot8;
                    michal = tangon.bind(report)(zuuluu, michal);
                    entity['opacity'] = michal;
                    return entity;
                }
            };
            backup = {};
            update = 8;
            kiloes = tangon[update];
            kiloes = oscard.bind(report)(kiloes);
            kiloes = kiloes.withTiming;
            backup['withTiming'] = kiloes;
            backup['contentOffset'] = verify;
            kiloes = _closure1_slot8;
            backup['GRADIENT_EASING_CONFIG'] = kiloes;
            golfie['__closure'] = backup;
            backup = 3302668154466.0;
            golfie['__workletHash'] = backup;
            backup = _closure1_slot10;
            golfie['__initData'] = backup;
            output = option.bind(foxtra)(golfie);
            golfie = tangon[sizing];
            foxtra = oscard.bind(report)(golfie);
            option = foxtra.useAnimatedStyle;
            golfie = function() { // Original name: S
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = {};
                    report = _closure1_slot0;
                    tangon = _closure1_slot2;
                    zuuluu = 8;
                    tangon = tangon[zuuluu];
                    zuuluu = undefined;
                    report = report.bind(zuuluu)(tangon);
                    tangon = report.withTiming;
                    golfie = _closure2_slot1;
                    oscard = golfie.get;
                    golfie = oscard.bind(golfie)();
                    option = _closure2_slot3;
                    oscard = option.get;
                    oscard = oscard.bind(option)();
                    oscard = golfie + oscard;
                    golfie = _closure2_slot2;
                    zuuluu = golfie.get;
                    zuuluu = zuuluu.bind(golfie)();
                    oscard = oscard >= zuuluu;
                    zuuluu = 1;
                    if(!oscard) { _fun00006_ip = 90; continue _fun00005 }
 88:
                    zuuluu = 0;
 90:
                    michal = _closure1_slot8;
                    michal = tangon.bind(report)(zuuluu, michal);
                    entity['opacity'] = michal;
                    return entity;
                }
            };
            backup = {};
            update = tangon[update];
            update = oscard.bind(report)(update);
            update = update.withTiming;
            backup['withTiming'] = update;
            backup['contentOffset'] = verify;
            backup['layoutWidth'] = michal;
            backup['contentWidth'] = entity;
            backup['GRADIENT_EASING_CONFIG'] = kiloes;
            golfie['__closure'] = backup;
            backup = 13996707009656.0;
            golfie['__workletHash'] = backup;
            backup = _closure1_slot11;
            golfie['__initData'] = backup;
            source = option.bind(foxtra)(golfie);
            tangon = tangon[sizing];
            golfie = oscard.bind(report)(tangon);
            oscard = golfie.useAnimatedScrollHandler;
            tangon = function(argFoo) { // Original name: v
                entity = argFoo;
                report = _closure2_slot1;
                tangon = report.set;
                zuuluu = entity.contentOffset;
                zuuluu = zuuluu.x;
                zuuluu = tangon.bind(report)(zuuluu);
                report = _closure2_slot2;
                tangon = report.set;
                zuuluu = entity.contentSize;
                zuuluu = zuuluu.width;
                zuuluu = tangon.bind(report)(zuuluu);
                zuuluu = _closure2_slot3;
                michal = zuuluu.set;
                entity = entity.layoutMeasurement;
                entity = entity.width;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            option = {};
            option['contentOffset'] = verify;
            option['contentWidth'] = entity;
            option['layoutWidth'] = michal;
            tangon['__closure'] = option;
            option = 12660577105859.0;
            tangon['__workletHash'] = option;
            option = _closure1_slot12;
            tangon['__initData'] = option;
            kiloes = oscard.bind(golfie)(tangon);
            oscard = _closure1_slot3;
            golfie = oscard.useCallback;
            tangon = new Array(1);
            tangon[0] = michal;
            michal = function(argFoo) {
                zuuluu = _closure2_slot3;
                michal = zuuluu.set;
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                entity = entity.width;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            backup = golfie.bind(oscard)(michal, tangon);
            tangon = oscard.useCallback;
            michal = new Array(1);
            michal[0] = entity;
            entity = function(argFoo) {
                zuuluu = _closure2_slot2;
                michal = zuuluu.set;
                entity = argFoo;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            foxtra = tangon.bind(oscard)(entity, michal);
            tangon = oscard.useMemo;
            entity = result.gradient;
            entity = entity.color;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 9;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.hexWithOpacity;
                entity = _closure2_slot0;
                entity = entity.gradient;
                michal = entity.color;
                entity = 0;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            ctrled = tangon.bind(oscard)(entity, michal);
            michal = romeon.length;
            entity = null;
            if(!(zuuluu !== michal)) { _fun00002_ip = 951; continue _fun00001 }
 516:
            tangon = _closure1_slot6;
            zuuluu = _closure1_slot4;
            michal = {};
            oscard = undefined;
            if(!echoed) { _fun00002_ip = 537; continue _fun00001 }
 531:
            oscard = result.containerRevamp;
 537:
            michal['style'] = oscard;
            verify = _closure1_slot5;
            option = _closure1_slot7;
            oscard = {};
            golfie = {'x': 0, 'y': 0};
            oscard['start'] = golfie;
            golfie = {'x': 1, 'y': 0};
            oscard['end'] = golfie;
            golfie = result.gradient;
            update = golfie.color;
            golfie = new Array(2);
            golfie[0] = update;
            golfie[1] = ctrled;
            oscard['colors'] = golfie;
            update = result.leftGradient;
            golfie = new Array(2);
            golfie[0] = update;
            golfie[1] = output;
            oscard['style'] = golfie;
            output = 'box-none';
            oscard['pointerEvents'] = output;
            golfie = verify.bind(report)(option, oscard);
            oscard = new Array(3);
            oscard[0] = golfie;
            golfie = {};
            update = {'x': 0, 'y': 0};
            golfie['start'] = update;
            update = {'x': 1, 'y': 0};
            golfie['end'] = update;
            update = new Array(2);
            update[0] = ctrled;
            ctrled = result.gradient;
            ctrled = ctrled.color;
            update[1] = ctrled;
            golfie['colors'] = update;
            ctrled = result.rightGradient;
            update = new Array(2);
            update[0] = ctrled;
            update[1] = source;
            golfie['style'] = update;
            golfie['pointerEvents'] = output;
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            option = _closure1_slot1;
            golfie = _closure1_slot2;
            golfie = golfie[sizing];
            golfie = option.bind(report)(golfie);
            option = golfie.ScrollView;
            golfie = {};
            output = result.attachmentPreviewContentContainer;
            sizing = new Array(2);
            sizing[0] = output;
            output = undefined;
            if(!echoed) { _fun00002_ip = 797; continue _fun00001 }
 791:
            output = result.attachmentPreviewContentContainerRevamp;
 797:
            sizing[1] = output;
            golfie['contentContainerStyle'] = sizing;
            sizing = true;
            golfie['horizontal'] = sizing;
            golfie['onScroll'] = kiloes;
            golfie['onLayout'] = backup;
            golfie['onContentSizeChange'] = foxtra;
            foxtra = 16;
            golfie['scrollEventThrottle'] = foxtra;
            foxtra = false;
            golfie['showsHorizontalScrollIndicator'] = foxtra;
            foxtra = 'list';
            golfie['accessibilityRole'] = foxtra;
            kiloes = _closure1_slot0;
            sizing = _closure1_slot2;
            yankee = 10;
            foxtra = sizing[yankee];
            foxtra = kiloes.bind(report)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            yankee = sizing[yankee];
            yankee = kiloes.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee.RhtzFR;
            yankee = foxtra.bind(backup)(yankee);
            golfie['accessibilityLabel'] = yankee;
            yankee = romeon.map;
            offset = function(argFoo, argBar) {
                golfie = argFoo;
                report = _closure1_slot5;
                tangon = _closure1_slot4;
                zuuluu = {};
                entity = _closure2_slot0;
                entity = entity.attachmentPreview;
                zuuluu['style'] = entity;
                oscard = _closure1_slot1;
                offset = _closure1_slot2;
                entity = 11;
                entity = offset[entity];
                michal = undefined;
                oscard = oscard.bind(michal)(entity);
                entity = {'uri': null, 'width': 60, 'height': 60};
                verify = golfie.uri;
                entity['uri'] = verify;
                verify = _closure1_slot0;
                option = 12;
                yankee = offset[option];
                backup = verify.bind(michal)(yankee);
                foxtra = backup.isImage;
                romeon = golfie.uri;
                yankee = golfie.mimeType;
                yankee = foxtra.bind(backup)(romeon, yankee);
                entity['isImage'] = yankee;
                option = offset[option];
                yankee = verify.bind(michal)(option);
                offset = yankee.isVideo;
                verify = golfie.uri;
                option = golfie.mimeType;
                option = offset.bind(yankee)(verify, option);
                entity['isVideo'] = option;
                golfie = golfie.name;
                entity['fileName'] = golfie;
                golfie = true;
                entity['showPlayOnVideoPreview'] = golfie;
                entity = report.bind(michal)(oscard, entity);
                zuuluu['children'] = entity;
                entity = argBar;
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            };
            offset = yankee.bind(romeon)(offset);
            golfie['children'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[2] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 951:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();