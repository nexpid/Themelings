// app/modules/share/native/ShareAttachments.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = yankee.bind(entity)(tango);
    golf = options.createAnimatedComponent;
    tango = 4;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = {};
    golf = 300;
    tango['duration'] = golf;
    golf = 5;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.STANDARD_EASING;
    tango['easing'] = golf;
    var _closure1_slot8 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 7;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    romeo = -romeo;
    verify['marginHorizontal'] = romeo;
    tango['containerRevamp'] = verify;
    verify = {};
    romeo = 'row';
    verify['flexDirection'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_8;
    verify['gap'] = romeo;
    tango['attachmentPreviewContentContainer'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['paddingHorizontal'] = romeo;
    tango['attachmentPreviewContentContainerRevamp'] = verify;
    verify = {'height': 60, 'backgroundColor': null, 'overflow': 'hidden'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_BASE_PRIMARY;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    verify['borderRadius'] = romeo;
    tango['attachmentPreview'] = verify;
    verify = {'width': 50, 'position': 'absolute', 'left': 0, 'top': 0, 'bottom': 0, 'zIndex': 100};
    tango['leftGradient'] = verify;
    verify = {'width': 50, 'position': 'absolute', 'right': 0, 'top': 0, 'bottom': 0, 'zIndex': 100};
    tango['rightGradient'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_SECONDARY;
    verify['color'] = offset;
    tango['gradient'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = {};
    golf = 'function ShareAttachmentsTsx1(){const{withTiming,contentOffset,GRADIENT_EASING_CONFIG}=this.__closure;return{opacity:withTiming(contentOffset.get()<=0?0:1,GRADIENT_EASING_CONFIG)};}';
    tango['code'] = golf;
    var _closure1_slot10 = tango;
    tango = {};
    golf = 'function ShareAttachmentsTsx2(){const{withTiming,contentOffset,layoutWidth,contentWidth,GRADIENT_EASING_CONFIG}=this.__closure;return{opacity:withTiming(contentOffset.get()+layoutWidth.get()>=contentWidth.get()?0:1,GRADIENT_EASING_CONFIG)};}';
    tango['code'] = golf;
    var _closure1_slot11 = tango;
    tango = {};
    golf = 'function ShareAttachmentsTsx3(event){const{contentOffset,contentWidth,layoutWidth}=this.__closure;contentOffset.set(event.contentOffset.x);contentWidth.set(event.contentSize.width);layoutWidth.set(event.layoutMeasurement.width);}';
    tango['code'] = golf;
    var _closure1_slot12 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/share/native/ShareAttachments.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ShareAttachments
        _fun107647: for(var _fun107647_ip = 0; ; ) switch(_fun107647_ip) {
 0:
            entity = argFoo;
            romeo = entity.attachments;
            echo = entity.isRevamp;
            report = undefined;
            if(!(echo === report)) { _fun107647_ip = 25; continue _fun107647 }
 23:
            echo = false;
 25:
            var _closure2_slot0 = report;
            var _closure2_slot1 = report;
            var _closure2_slot2 = report;
            var _closure2_slot3 = report;
            entity = _closure1_slot9;
            result = entity.bind(report)();
            _closure2_slot0 = result;
            oscar = _closure1_slot0;
            tango = _closure1_slot2;
            sizing = 3;
            entity = tango[sizing];
            mike = oscar.bind(report)(entity);
            entity = mike.useSharedValue;
            zulu = 0;
            verify = entity.bind(mike)(zulu);
            _closure2_slot1 = verify;
            entity = tango[sizing];
            mike = oscar.bind(report)(entity);
            entity = mike.useSharedValue;
            entity = entity.bind(mike)(zulu);
            _closure2_slot2 = entity;
            mike = tango[sizing];
            golf = oscar.bind(report)(mike);
            mike = golf.useSharedValue;
            mike = mike.bind(golf)(zulu);
            _closure2_slot3 = mike;
            golf = tango[sizing];
            foxtrot = oscar.bind(report)(golf);
            options = foxtrot.useAnimatedStyle;
            golf = function() { // Original name: y
                _fun107648: for(var _fun107648_ip = 0; ; ) switch(_fun107648_ip) {
 0:
                    entity = {};
                    report = _closure1_slot0;
                    tango = _closure1_slot2;
                    zulu = 8;
                    tango = tango[zulu];
                    zulu = undefined;
                    report = report.bind(zulu)(tango);
                    tango = report.withTiming;
                    oscar = _closure2_slot1;
                    zulu = oscar.get;
                    zulu = zulu.bind(oscar)();
                    oscar = 0;
                    golf = zulu <= oscar;
                    zulu = 1;
                    if(!golf) { _fun107648_ip = 62; continue _fun107648 }
 60:
                    zulu = 0;
 62:
                    mike = _closure1_slot8;
                    mike = tango.bind(report)(zulu, mike);
                    entity['opacity'] = mike;
                    return entity;
                }
            };
            backup = {};
            update = 8;
            kilo = tango[update];
            kilo = oscar.bind(report)(kilo);
            kilo = kilo.withTiming;
            backup['withTiming'] = kilo;
            backup['contentOffset'] = verify;
            kilo = _closure1_slot8;
            backup['GRADIENT_EASING_CONFIG'] = kilo;
            golf['__closure'] = backup;
            backup = 3302668154466.0;
            golf['__workletHash'] = backup;
            backup = _closure1_slot10;
            golf['__initData'] = backup;
            output = options.bind(foxtrot)(golf);
            golf = tango[sizing];
            foxtrot = oscar.bind(report)(golf);
            options = foxtrot.useAnimatedStyle;
            golf = function() { // Original name: S
                _fun107649: for(var _fun107649_ip = 0; ; ) switch(_fun107649_ip) {
 0:
                    entity = {};
                    report = _closure1_slot0;
                    tango = _closure1_slot2;
                    zulu = 8;
                    tango = tango[zulu];
                    zulu = undefined;
                    report = report.bind(zulu)(tango);
                    tango = report.withTiming;
                    golf = _closure2_slot1;
                    oscar = golf.get;
                    golf = oscar.bind(golf)();
                    options = _closure2_slot3;
                    oscar = options.get;
                    oscar = oscar.bind(options)();
                    oscar = golf + oscar;
                    golf = _closure2_slot2;
                    zulu = golf.get;
                    zulu = zulu.bind(golf)();
                    oscar = oscar >= zulu;
                    zulu = 1;
                    if(!oscar) { _fun107649_ip = 90; continue _fun107649 }
 88:
                    zulu = 0;
 90:
                    mike = _closure1_slot8;
                    mike = tango.bind(report)(zulu, mike);
                    entity['opacity'] = mike;
                    return entity;
                }
            };
            backup = {};
            update = tango[update];
            update = oscar.bind(report)(update);
            update = update.withTiming;
            backup['withTiming'] = update;
            backup['contentOffset'] = verify;
            backup['layoutWidth'] = mike;
            backup['contentWidth'] = entity;
            backup['GRADIENT_EASING_CONFIG'] = kilo;
            golf['__closure'] = backup;
            backup = 13996707009656.0;
            golf['__workletHash'] = backup;
            backup = _closure1_slot11;
            golf['__initData'] = backup;
            source = options.bind(foxtrot)(golf);
            tango = tango[sizing];
            golf = oscar.bind(report)(tango);
            oscar = golf.useAnimatedScrollHandler;
            tango = function(argFoo) { // Original name: v
                entity = argFoo;
                report = _closure2_slot1;
                tango = report.set;
                zulu = entity.contentOffset;
                zulu = zulu.x;
                zulu = tango.bind(report)(zulu);
                report = _closure2_slot2;
                tango = report.set;
                zulu = entity.contentSize;
                zulu = zulu.width;
                zulu = tango.bind(report)(zulu);
                zulu = _closure2_slot3;
                mike = zulu.set;
                entity = entity.layoutMeasurement;
                entity = entity.width;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            options = {};
            options['contentOffset'] = verify;
            options['contentWidth'] = entity;
            options['layoutWidth'] = mike;
            tango['__closure'] = options;
            options = 12660577105859.0;
            tango['__workletHash'] = options;
            options = _closure1_slot12;
            tango['__initData'] = options;
            kilo = oscar.bind(golf)(tango);
            oscar = _closure1_slot3;
            golf = oscar.useCallback;
            tango = new Array(1);
            tango[0] = mike;
            mike = function(argFoo) {
                zulu = _closure2_slot3;
                mike = zulu.set;
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                entity = entity.width;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            backup = golf.bind(oscar)(mike, tango);
            tango = oscar.useCallback;
            mike = new Array(1);
            mike[0] = entity;
            entity = function(argFoo) {
                zulu = _closure2_slot2;
                mike = zulu.set;
                entity = argFoo;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            foxtrot = tango.bind(oscar)(entity, mike);
            tango = oscar.useMemo;
            entity = result.gradient;
            entity = entity.color;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 9;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.hexWithOpacity;
                entity = _closure2_slot0;
                entity = entity.gradient;
                mike = entity.color;
                entity = 0;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            control = tango.bind(oscar)(entity, mike);
            mike = romeo.length;
            entity = null;
            if(!(zulu !== mike)) { _fun107647_ip = 951; continue _fun107647 }
 516:
            tango = _closure1_slot6;
            zulu = _closure1_slot4;
            mike = {};
            oscar = undefined;
            if(!echo) { _fun107647_ip = 537; continue _fun107647 }
 531:
            oscar = result.containerRevamp;
 537:
            mike['style'] = oscar;
            verify = _closure1_slot5;
            options = _closure1_slot7;
            oscar = {};
            golf = {'x': 0, 'y': 0};
            oscar['start'] = golf;
            golf = {'x': 1, 'y': 0};
            oscar['end'] = golf;
            golf = result.gradient;
            update = golf.color;
            golf = new Array(2);
            golf[0] = update;
            golf[1] = control;
            oscar['colors'] = golf;
            update = result.leftGradient;
            golf = new Array(2);
            golf[0] = update;
            golf[1] = output;
            oscar['style'] = golf;
            output = 'box-none';
            oscar['pointerEvents'] = output;
            golf = verify.bind(report)(options, oscar);
            oscar = new Array(3);
            oscar[0] = golf;
            golf = {};
            update = {'x': 0, 'y': 0};
            golf['start'] = update;
            update = {'x': 1, 'y': 0};
            golf['end'] = update;
            update = new Array(2);
            update[0] = control;
            control = result.gradient;
            control = control.color;
            update[1] = control;
            golf['colors'] = update;
            control = result.rightGradient;
            update = new Array(2);
            update[0] = control;
            update[1] = source;
            golf['style'] = update;
            golf['pointerEvents'] = output;
            golf = verify.bind(report)(options, golf);
            oscar[1] = golf;
            options = _closure1_slot1;
            golf = _closure1_slot2;
            golf = golf[sizing];
            golf = options.bind(report)(golf);
            options = golf.ScrollView;
            golf = {};
            output = result.attachmentPreviewContentContainer;
            sizing = new Array(2);
            sizing[0] = output;
            output = undefined;
            if(!echo) { _fun107647_ip = 797; continue _fun107647 }
 791:
            output = result.attachmentPreviewContentContainerRevamp;
 797:
            sizing[1] = output;
            golf['contentContainerStyle'] = sizing;
            sizing = true;
            golf['horizontal'] = sizing;
            golf['onScroll'] = kilo;
            golf['onLayout'] = backup;
            golf['onContentSizeChange'] = foxtrot;
            foxtrot = 16;
            golf['scrollEventThrottle'] = foxtrot;
            foxtrot = false;
            golf['showsHorizontalScrollIndicator'] = foxtrot;
            foxtrot = 'list';
            golf['accessibilityRole'] = foxtrot;
            kilo = _closure1_slot0;
            sizing = _closure1_slot2;
            yankee = 10;
            foxtrot = sizing[yankee];
            foxtrot = kilo.bind(report)(foxtrot);
            backup = foxtrot.intl;
            foxtrot = backup.string;
            yankee = sizing[yankee];
            yankee = kilo.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee.RhtzFR;
            yankee = foxtrot.bind(backup)(yankee);
            golf['accessibilityLabel'] = yankee;
            yankee = romeo.map;
            offset = function(argFoo, argBar) {
                golf = argFoo;
                report = _closure1_slot5;
                tango = _closure1_slot4;
                zulu = {};
                entity = _closure2_slot0;
                entity = entity.attachmentPreview;
                zulu['style'] = entity;
                oscar = _closure1_slot1;
                offset = _closure1_slot2;
                entity = 11;
                entity = offset[entity];
                mike = undefined;
                oscar = oscar.bind(mike)(entity);
                entity = {'uri': null, 'width': 60, 'height': 60};
                verify = golf.uri;
                entity['uri'] = verify;
                verify = _closure1_slot0;
                options = 12;
                yankee = offset[options];
                backup = verify.bind(mike)(yankee);
                foxtrot = backup.isImage;
                romeo = golf.uri;
                yankee = golf.mimeType;
                yankee = foxtrot.bind(backup)(romeo, yankee);
                entity['isImage'] = yankee;
                options = offset[options];
                yankee = verify.bind(mike)(options);
                offset = yankee.isVideo;
                verify = golf.uri;
                options = golf.mimeType;
                options = offset.bind(yankee)(verify, options);
                entity['isVideo'] = options;
                golf = golf.name;
                entity['fileName'] = golf;
                golf = true;
                entity['showPlayOnVideoPreview'] = golf;
                entity = report.bind(mike)(oscar, entity);
                zulu['children'] = entity;
                entity = argBar;
                entity = report.bind(mike)(tango, zulu, entity);
                return entity;
            };
            offset = yankee.bind(romeo)(offset);
            golf['children'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[2] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 951:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();