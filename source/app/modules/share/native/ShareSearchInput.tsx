// app/modules/share/native/ShareSearchInput.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    backup = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    offset = 0;
    golf = oscar[offset];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    kilo = 1;
    tango = oscar[kilo];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    foxtrot = 2;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'marginHorizontal': null, 'flexDirection': 'row', 'justifyContent': 'flex-start', 'alignItems': 'center'};
    yankee = 4;
    romeo = oscar[yankee];
    romeo = backup.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['marginHorizontal'] = romeo;
    tango['container'] = verify;
    verify = {'position': 'absolute', 'justifyContent': 'center', 'padding': null, 'zIndex': 1};
    romeo = oscar[yankee];
    romeo = backup.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_12;
    verify['padding'] = romeo;
    tango['iconWrapper'] = verify;
    romeo = 20;
    verify = {'height': 20, 'width': 20};
    tango['inputIcon'] = verify;
    verify = {};
    verify['flex'] = kilo;
    tango['inputWrapper'] = verify;
    verify = {};
    yankee = oscar[yankee];
    yankee = backup.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_12;
    yankee = foxtrot * yankee;
    yankee = romeo + yankee;
    verify['paddingLeft'] = yankee;
    verify['marginBottom'] = offset;
    tango['input'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/share/native/ShareSearchInput.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        _fun128012: for(var _fun128012_ip = 0; ; ) switch(_fun128012_ip) {
 0:
            zulu = argFoo;
            backup = zulu.backgroundColor;
            romeo = zulu.icon;
            foxtrot = null;
            mike = Object.create(foxtrot);
            entity = 0;
            mike['backgroundColor'] = entity;
            mike['icon'] = entity;
            update = {};
            echo = zulu;
            result = mike;
            verify = copyDataProperties(update, echo, result);
            entity = _closure1_slot6;
            tango = undefined;
            yankee = entity.bind(tango)();
            zulu = _closure1_slot5;
            mike = _closure1_slot3;
            entity = {};
            report = yankee.container;
            entity['style'] = report;
            oscar = _closure1_slot4;
            report = {};
            golf = yankee.iconWrapper;
            report['style'] = golf;
            options = _closure1_slot1;
            output = _closure1_slot2;
            kilo = 5;
            golf = output[kilo];
            options = options.bind(tango)(golf);
            golf = {};
            sizing = _closure1_slot0;
            kilo = output[kilo];
            kilo = sizing.bind(tango)(kilo);
            kilo = kilo.IconSizes;
            kilo = kilo.SMALL;
            golf['size'] = kilo;
            sizing = verify.placeholderTextColor;
            kilo = foxtrot == sizing;
            foxtrot = undefined;
            if(kilo) { _fun128012_ip = 163; continue _fun128012 }
 154:
            kilo = sizing.toString;
            foxtrot = kilo.bind(sizing)();
 163:
            golf['color'] = foxtrot;
            foxtrot = yankee.inputIcon;
            golf['style'] = foxtrot;
            golf['source'] = romeo;
            golf = oscar.bind(tango)(options, golf);
            report['children'] = golf;
            oscar = oscar.bind(tango)(mike, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot4;
            golf = _closure1_slot1;
            romeo = _closure1_slot2;
            oscar = 6;
            oscar = romeo[oscar];
            golf = golf.bind(tango)(oscar);
            oscar = {'style': null, 'textStyle': null, 'keyboardType': null, 'autoCapitalize': 'none', 'autoCorrect': false, 'spellCheck': false};
            foxtrot = yankee.inputWrapper;
            oscar['style'] = foxtrot;
            foxtrot = yankee.input;
            yankee = new Array(2);
            yankee[0] = foxtrot;
            foxtrot = {};
            foxtrot['backgroundColor'] = backup;
            yankee[1] = foxtrot;
            oscar['textStyle'] = yankee;
            yankee = _closure1_slot0;
            offset = 7;
            offset = romeo[offset];
            offset = yankee.bind(tango)(offset);
            offset = offset.KeyboardTypes;
            offset = offset.DEFAULT;
            oscar['keyboardType'] = offset;
            update = oscar;
            echo = verify;
            verify = copyDataProperties(update, echo);
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();