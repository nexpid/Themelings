// app/modules/share/ShareConstants.tsx
export default (function(argFoo, argBar, _, __, ___, argFred, argPlugh) {
    oscar = argBar;
    zulu = argFred;
    golf = argPlugh;
    tango = global;
    verify = tango.Object;
    options = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, report);
    report = 0;
    options = golf[report];
    entity = undefined;
    options = oscar.bind(entity)(options);
    options = options.AutocompleterResultTypes;
    verify = options.USER;
    options = new Array(4);
    options[0] = verify;
    verify = golf[report];
    verify = oscar.bind(entity)(verify);
    verify = verify.AutocompleterResultTypes;
    verify = verify.TEXT_CHANNEL;
    options[1] = verify;
    verify = golf[report];
    verify = oscar.bind(entity)(verify);
    verify = verify.AutocompleterResultTypes;
    verify = verify.VOICE_CHANNEL;
    options[2] = verify;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.AutocompleterResultTypes;
    report = report.GROUP_DM;
    options[3] = report;
    report = tango.Array;
    tango = report.from;
    tango = tango.bind(report)(options);
    var _closure1_slot0 = tango;
    report = 1;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/share/ShareConstants.tsx';
    report = oscar.bind(golf)(report);
    zulu['ALLOWED_TYPES'] = tango;
    mike = function(argFoo) { // Original name: isAllowedType
        zulu = _closure1_slot0;
        mike = zulu.includes;
        entity = argFoo;
        entity = entity.type;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    zulu['isAllowedType'] = mike;
    return entity;
})();