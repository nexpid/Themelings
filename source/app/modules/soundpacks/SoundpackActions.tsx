// app/modules/soundpacks/SoundpackActions.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = golf;
    var _closure1_slot1 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot2 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot3 = tango;
    tango = 4;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/soundpacks/SoundpackActions.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo, argBar) { // Original name: setSoundpack
        report = argFoo;
        zulu = _closure1_slot0;
        tango = _closure1_slot1;
        entity = 2;
        mike = tango[entity];
        entity = undefined;
        options = zulu.bind(entity)(mike);
        golf = options.track;
        mike = _closure1_slot3;
        oscar = mike.SOUNDPACK_UPDATED;
        mike = {};
        mike['soundpack'] = report;
        offset = _closure1_slot2;
        verify = offset.getSoundpack;
        verify = verify.bind(offset)();
        mike['previous_soundpack'] = verify;
        mike = golf.bind(options)(oscar, mike);
        mike = 3;
        mike = tango[mike];
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        oscar = 'SET_SOUNDPACK';
        mike['type'] = oscar;
        mike['soundpack'] = report;
        report = argBar;
        mike['forExperimentId'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['setSoundpack'] = mike;
    return entity;
})();