// app/modules/soundpacks/Constants.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    report = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = report;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    tangon = {};
    entity = 'classic';
    tangon['CLASSIC'] = entity;
    entity = 'retro';
    tangon['RETRO'] = entity;
    entity = 'bop';
    tangon['BUBBLE'] = entity;
    entity = 'ducky';
    tangon['DUCKY'] = entity;
    entity = 'lofi';
    tangon['LOFI'] = entity;
    entity = 'asmr';
    tangon['ASMR'] = entity;
    entity = 'discodo';
    tangon['DISCODO'] = entity;
    entity = 'halloween';
    tangon['HALLOWEEN'] = entity;
    entity = 'winter_holiday';
    tangon['WINTER_HOLIDAY'] = entity;
    var _closure1_slot2 = tangon;
    entity = 2;
    report = report[entity];
    entity = undefined;
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/soundpacks/Constants.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['Soundpacks'] = tangon;
    tangon = 'custom_notification_sounds_asmr';
    zuuluu['CUSTOM_NOTIFICATION_SOUNDS_ASMR_STORAGE_KEY'] = tangon;
    tangon = 'custom_notification_sounds_discodo';
    zuuluu['CUSTOM_NOTIFICATION_SOUNDS_DISCODO_STORAGE_KEY'] = tangon;
    michal = function() { // Original name: getCustomNotificationSoundpackOptions
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = arguments[0];
            verify = undefined;
            if(!(michal === verify)) { _fun00002_ip = 11; continue _fun00001 }
 9:
            michal = true;
 11:
            entity = new Array(0);
            if(michal) { _fun00002_ip = 26; continue _fun00001 }
 18:
            zuuluu = entity;
            _fun00002_ip = 316; continue _fun00001;
 26:
            tangon = _closure1_slot0;
            michal = _closure1_slot1;
            oscard = 1;
            michal = michal[oscard];
            michal = tangon.bind(verify)(michal);
            option = michal.Storage;
            tangon = option.get;
            michal = 'custom_notification_sounds_discodo';
            golfie = false;
            michal = tangon.bind(option)(michal, golfie);
            if(!michal) { _fun00002_ip = 117; continue _fun00001 }
 77:
            tangon = entity.push;
            michal = {'value': null, 'label': 'DISCODO', 'description': '๑(◕‿◕)๑', 'requirePremium': true};
            option = _closure1_slot2;
            option = option.DISCODO;
            michal['value'] = option;
            michal = tangon.bind(entity)(michal);
 117:
            tangon = _closure1_slot0;
            michal = _closure1_slot1;
            michal = michal[oscard];
            michal = tangon.bind(verify)(michal);
            oscard = michal.Storage;
            tangon = oscard.get;
            michal = 'custom_notification_sounds_asmr';
            michal = tangon.bind(oscard)(michal, golfie);
            zuuluu = entity;
            if(!michal) { _fun00002_ip = 316; continue _fun00001 }
 166:
            tangon = entity.push;
            michal = {};
            oscard = _closure1_slot2;
            oscard = oscard.ASMR;
            michal['value'] = oscard;
            oscard = _closure1_slot0;
            offset = _closure1_slot1;
            report = 0;
            golfie = offset[report];
            golfie = oscard.bind(verify)(golfie);
            yankee = golfie.intl;
            option = yankee.string;
            golfie = offset[report];
            golfie = oscard.bind(verify)(golfie);
            golfie = golfie.t;
            golfie = golfie.3SJZKC;
            golfie = option.bind(yankee)(golfie);
            michal['label'] = golfie;
            golfie = offset[report];
            golfie = oscard.bind(verify)(golfie);
            option = golfie.intl;
            golfie = option.formatToMarkdownString;
            report = offset[report];
            report = oscard.bind(verify)(report);
            report = report.t;
            oscard = report.MZlgQE;
            report = {};
            report = golfie.bind(option)(oscard, report);
            michal['description'] = report;
            report = true;
            michal['requirePremium'] = report;
            michal = tangon.bind(entity)(michal);
            zuuluu = entity;
 316:
            michal = {};
            oscard = _closure1_slot2;
            tangon = oscard.CLASSIC;
            michal['value'] = tangon;
            option = _closure1_slot0;
            offset = _closure1_slot1;
            report = 0;
            entity = offset[report];
            entity = option.bind(verify)(entity);
            golfie = entity.intl;
            tangon = golfie.string;
            entity = offset[report];
            entity = option.bind(verify)(entity);
            entity = entity.t;
            entity = entity.p3Hg5e;
            entity = tangon.bind(golfie)(entity);
            michal['label'] = entity;
            entity = offset[report];
            entity = option.bind(verify)(entity);
            golfie = entity.intl;
            tangon = golfie.string;
            entity = offset[report];
            entity = option.bind(verify)(entity);
            entity = entity.t;
            entity = entity.4iA55u;
            entity = tangon.bind(golfie)(entity);
            michal['description'] = entity;
            entity = false;
            michal['requirePremium'] = entity;
            entity = new Array(5);
            entity[0] = michal;
            michal = {};
            tangon = oscard.RETRO;
            michal['value'] = tangon;
            tangon = offset[report];
            tangon = option.bind(verify)(tangon);
            yankee = tangon.intl;
            golfie = yankee.string;
            tangon = offset[report];
            tangon = option.bind(verify)(tangon);
            tangon = tangon.t;
            tangon = tangon.Rrwrnp;
            tangon = golfie.bind(yankee)(tangon);
            michal['label'] = tangon;
            tangon = offset[report];
            tangon = option.bind(verify)(tangon);
            yankee = tangon.intl;
            golfie = yankee.string;
            tangon = offset[report];
            tangon = option.bind(verify)(tangon);
            tangon = tangon.t;
            tangon = tangon.zKG+ur;
            tangon = golfie.bind(yankee)(tangon);
            michal['description'] = tangon;
            tangon = true;
            michal['requirePremium'] = tangon;
            entity[1] = michal;
            michal = {};
            golfie = oscard.LOFI;
            michal['value'] = golfie;
            golfie = offset[report];
            golfie = option.bind(verify)(golfie);
            romeon = golfie.intl;
            yankee = romeon.string;
            golfie = offset[report];
            golfie = option.bind(verify)(golfie);
            golfie = golfie.t;
            golfie = golfie.aEsrnp;
            golfie = yankee.bind(romeon)(golfie);
            michal['label'] = golfie;
            golfie = offset[report];
            golfie = option.bind(verify)(golfie);
            romeon = golfie.intl;
            yankee = romeon.string;
            golfie = offset[report];
            golfie = option.bind(verify)(golfie);
            golfie = golfie.t;
            golfie = golfie.fMUEj4;
            golfie = yankee.bind(romeon)(golfie);
            michal['description'] = golfie;
            michal['requirePremium'] = tangon;
            entity[2] = michal;
            michal = {};
            golfie = oscard.DUCKY;
            michal['value'] = golfie;
            golfie = offset[report];
            golfie = option.bind(verify)(golfie);
            romeon = golfie.intl;
            yankee = romeon.string;
            golfie = offset[report];
            golfie = option.bind(verify)(golfie);
            golfie = golfie.t;
            golfie = golfie.4TOv0t;
            golfie = yankee.bind(romeon)(golfie);
            michal['label'] = golfie;
            golfie = offset[report];
            golfie = option.bind(verify)(golfie);
            romeon = golfie.intl;
            yankee = romeon.string;
            golfie = offset[report];
            golfie = option.bind(verify)(golfie);
            golfie = golfie.t;
            golfie = golfie.1kbe6e;
            golfie = yankee.bind(romeon)(golfie);
            michal['description'] = golfie;
            michal['requirePremium'] = tangon;
            entity[3] = michal;
            michal = {};
            oscard = oscard.BUBBLE;
            michal['value'] = oscard;
            oscard = offset[report];
            oscard = option.bind(verify)(oscard);
            yankee = oscard.intl;
            golfie = yankee.string;
            oscard = offset[report];
            oscard = option.bind(verify)(oscard);
            oscard = oscard.t;
            oscard = oscard.s5Qo8P;
            oscard = golfie.bind(yankee)(oscard);
            michal['label'] = oscard;
            oscard = offset[report];
            oscard = option.bind(verify)(oscard);
            golfie = oscard.intl;
            oscard = golfie.string;
            report = offset[report];
            report = option.bind(verify)(report);
            report = report.t;
            report = report.I39onp;
            report = oscard.bind(golfie)(report);
            michal['description'] = report;
            michal['requirePremium'] = tangon;
            entity[4] = michal;
            foxtra = 5;
            kiloes = entity;
            backup = zuuluu;
            michal = arraySpread(kiloes, backup, foxtra);
            return entity;
        }
    };
    zuuluu['getCustomNotificationSoundpackOptions'] = michal;
    return entity;
})();