// app/modules/game_relationships/GameRelationshipStoreHooks.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var7 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var6;
    var1 = function useGameRelationshipsForUserByType(arg1, arg2) {
        var3 = arg1;
        var11 = arg2;
        var _closure2_slot0 = var3;
        var _closure2_slot1 = var11;
        var9 = _closure1_slot0;
        var10 = _closure1_slot1;
        var4 = 3;
        var5 = var10[var4];
        var4 = undefined;
        var8 = var9.bind(var4)(var5);
        var7 = var8.useStateFromStores;
        var5 = _closure1_slot3;
        var6 = new Array(1);
        var6[0] = var5;
        var5 = new Array(2);
        var5[0] = var11;
        var5[1] = var3;
        var3 = 4;
        var3 = var10[var3];
        var3 = var9.bind(var4)(var3);
        var12 = var3.isVersionEqual;
        var14 = function() {
            var5 = _closure1_slot3;
            var4 = var5.getGameRelationshipsForUserByType;
            var3 = _closure2_slot0;
            var1 = _closure2_slot1;
            var3 = var4.bind(var5)(var3, var1);
            var1 = new Array(2);
            var1[0] = var3;
            var3 = _closure1_slot3;
            var2 = var3.getGameRelationshipsVersion;
            var2 = var2.bind(var3)();
            var1[1] = var2;
            return var1;
        };
        var16 = var8;
        var15 = var6;
        var13 = var5;
        var3 = var16[var7](var15, var14, var13, var12, var11);
        var2 = _closure1_slot2;
        var1 = 1;
        var2 = var2.bind(var4)(var3, var1);
        var1 = 0;
        var1 = var2[var1];
        return var1;
    };
    var _closure1_slot5 = var1;
    var1 = global;
    var9 = var1.Object;
    var8 = var9.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var8.bind(var9)(var3, var1, var4);
    var1 = 0;
    var4 = var6[var1];
    var1 = undefined;
    var4 = var7.bind(var1)(var4);
    var _closure1_slot2 = var4;
    var4 = 1;
    var4 = var6[var4];
    var4 = var7.bind(var1)(var4);
    var _closure1_slot3 = var4;
    var4 = 2;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.RelationshipTypes;
    var _closure1_slot4 = var4;
    var4 = 5;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/game_relationships/GameRelationshipStoreHooks.tsx';
    var4 = var5.bind(var6)(var4);
    var4 = function useGameRelationshipsByType(arg1) {
        var3 = arg1;
        var _closure2_slot0 = var3;
        var9 = _closure1_slot0;
        var10 = _closure1_slot1;
        var4 = 3;
        var5 = var10[var4];
        var4 = undefined;
        var8 = var9.bind(var4)(var5);
        var7 = var8.useStateFromStores;
        var5 = _closure1_slot3;
        var6 = new Array(1);
        var6[0] = var5;
        var5 = new Array(1);
        var5[0] = var3;
        var3 = 4;
        var3 = var10[var3];
        var3 = var9.bind(var4)(var3);
        var11 = var3.isVersionEqual;
        var13 = function() {
            var4 = _closure1_slot3;
            var3 = var4.getGameRelationshipsByType;
            var1 = _closure2_slot0;
            var3 = var3.bind(var4)(var1);
            var1 = new Array(2);
            var1[0] = var3;
            var3 = _closure1_slot3;
            var2 = var3.getGameRelationshipsVersion;
            var2 = var2.bind(var3)();
            var1[1] = var2;
            return var1;
        };
        var15 = var8;
        var14 = var6;
        var12 = var5;
        var3 = var15[var7](var14, var13, var12, var11, var10);
        var2 = _closure1_slot2;
        var1 = 1;
        var2 = var2.bind(var4)(var3, var1);
        var1 = 0;
        var1 = var2[var1];
        return var1;
    };
    var3['useGameRelationshipsByType'] = var4;
    var4 = function useGameFriendsForUser(arg1) {
        var4 = _closure1_slot5;
        var1 = _closure1_slot4;
        var3 = var1.FRIEND;
        var2 = undefined;
        var1 = arg1;
        var1 = var4.bind(var2)(var1, var3);
        return var1;
    };
    var3['useGameFriendsForUser'] = var4;
    var4 = function useIncomingGameRelationshipsForUser(arg1) {
        var4 = _closure1_slot5;
        var1 = _closure1_slot4;
        var3 = var1.PENDING_INCOMING;
        var2 = undefined;
        var1 = arg1;
        var1 = var4.bind(var2)(var1, var3);
        return var1;
    };
    var3['useIncomingGameRelationshipsForUser'] = var4;
    var4 = function useHasGameRelationshipsForUser(arg1) {
        var3 = arg1;
        var _closure2_slot0 = var3;
        var9 = _closure1_slot0;
        var10 = _closure1_slot1;
        var4 = 3;
        var5 = var10[var4];
        var4 = undefined;
        var8 = var9.bind(var4)(var5);
        var7 = var8.useStateFromStores;
        var5 = _closure1_slot3;
        var6 = new Array(1);
        var6[0] = var5;
        var5 = new Array(1);
        var5[0] = var3;
        var3 = 4;
        var3 = var10[var3];
        var3 = var9.bind(var4)(var3);
        var11 = var3.isVersionEqual;
        var13 = function() {
            var4 = _closure1_slot3;
            var3 = var4.getGameRelationshipsForUser;
            var1 = _closure2_slot0;
            var1 = var3.bind(var4)(var1);
            var3 = _closure1_slot3;
            var2 = var3.getGameRelationshipsVersion;
            var2 = var2.bind(var3)();
            var3 = var1.length;
            var1 = 0;
            var3 = var3 > var1;
            var1 = new Array(2);
            var1[0] = var3;
            var1[1] = var2;
            return var1;
        };
        var15 = var8;
        var14 = var6;
        var12 = var5;
        var3 = var15[var7](var14, var13, var12, var11, var10);
        var2 = _closure1_slot2;
        var1 = 1;
        var2 = var2.bind(var4)(var3, var1);
        var1 = 0;
        var1 = var2[var1];
        return var1;
    };
    var3['useHasGameRelationshipsForUser'] = var4;
    var2 = function useHasGameRelationshipsForUserByType(arg1, arg2) {
        var3 = arg1;
        var11 = arg2;
        var _closure2_slot0 = var3;
        var _closure2_slot1 = var11;
        var9 = _closure1_slot0;
        var10 = _closure1_slot1;
        var4 = 3;
        var5 = var10[var4];
        var4 = undefined;
        var8 = var9.bind(var4)(var5);
        var7 = var8.useStateFromStores;
        var5 = _closure1_slot3;
        var6 = new Array(1);
        var6[0] = var5;
        var5 = new Array(2);
        var5[0] = var11;
        var5[1] = var3;
        var3 = 4;
        var3 = var10[var3];
        var3 = var9.bind(var4)(var3);
        var12 = var3.isVersionEqual;
        var14 = function() {
            var5 = _closure1_slot3;
            var4 = var5.getGameRelationshipsForUserByType;
            var3 = _closure2_slot0;
            var1 = _closure2_slot1;
            var1 = var4.bind(var5)(var3, var1);
            var3 = _closure1_slot3;
            var2 = var3.getGameRelationshipsVersion;
            var2 = var2.bind(var3)();
            var3 = var1.length;
            var1 = 0;
            var3 = var3 > var1;
            var1 = new Array(2);
            var1[0] = var3;
            var1[1] = var2;
            return var1;
        };
        var16 = var8;
        var15 = var6;
        var13 = var5;
        var3 = var16[var7](var15, var14, var13, var12, var11);
        var2 = _closure1_slot2;
        var1 = 1;
        var2 = var2.bind(var4)(var3, var1);
        var1 = 0;
        var1 = var2[var1];
        return var1;
    };
    var3['useHasGameRelationshipsForUserByType'] = var2;
    return var1;
})();