// app/modules/game_relationships/GameRelationshipStoreHooks.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = function(argFoo, argBar) { // Original name: useGameRelationshipsForUserByType
        zulu = argFoo;
        yankee = argBar;
        var _closure2_slot0 = zulu;
        var _closure2_slot1 = yankee;
        verify = _closure1_slot0;
        offset = _closure1_slot1;
        tango = 3;
        report = offset[tango];
        tango = undefined;
        options = verify.bind(tango)(report);
        golf = options.useStateFromStores;
        report = _closure1_slot3;
        oscar = new Array(1);
        oscar[0] = report;
        report = new Array(2);
        report[0] = yankee;
        report[1] = zulu;
        zulu = 4;
        zulu = offset[zulu];
        zulu = verify.bind(tango)(zulu);
        romeo = zulu.isVersionEqual;
        backup = function() {
            report = _closure1_slot3;
            tango = report.getGameRelationshipsForUserByType;
            zulu = _closure2_slot0;
            entity = _closure2_slot1;
            zulu = tango.bind(report)(zulu, entity);
            entity = new Array(2);
            entity[0] = zulu;
            zulu = _closure1_slot3;
            mike = zulu.getGameRelationshipsVersion;
            mike = mike.bind(zulu)();
            entity[1] = mike;
            return entity;
        };
        sizing = options;
        kilo = oscar;
        foxtrot = report;
        zulu = sizing[golf](kilo, backup, foxtrot, romeo, yankee);
        mike = _closure1_slot2;
        entity = 1;
        mike = mike.bind(tango)(zulu, entity);
        entity = 0;
        entity = mike[entity];
        return entity;
    };
    var _closure1_slot5 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot2 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.RelationshipTypes;
    var _closure1_slot4 = tango;
    tango = 5;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/game_relationships/GameRelationshipStoreHooks.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: useGameFriendsForUser
        tango = _closure1_slot5;
        entity = _closure1_slot4;
        zulu = entity.FRIEND;
        mike = undefined;
        entity = argFoo;
        entity = tango.bind(mike)(entity, zulu);
        return entity;
    };
    zulu['useGameFriendsForUser'] = tango;
    tango = function(argFoo) { // Original name: useIncomingGameRelationshipsForUser
        tango = _closure1_slot5;
        entity = _closure1_slot4;
        zulu = entity.PENDING_INCOMING;
        mike = undefined;
        entity = argFoo;
        entity = tango.bind(mike)(entity, zulu);
        return entity;
    };
    zulu['useIncomingGameRelationshipsForUser'] = tango;
    tango = function(argFoo) { // Original name: useOutgoingGameRelationshipsForUser
        tango = _closure1_slot5;
        entity = _closure1_slot4;
        zulu = entity.PENDING_INCOMING;
        mike = undefined;
        entity = argFoo;
        entity = tango.bind(mike)(entity, zulu);
        return entity;
    };
    zulu['useOutgoingGameRelationshipsForUser'] = tango;
    mike = function(argFoo) { // Original name: useGameRelationshipsForUser
        zulu = argFoo;
        var _closure2_slot0 = zulu;
        verify = _closure1_slot0;
        offset = _closure1_slot1;
        tango = 3;
        report = offset[tango];
        tango = undefined;
        options = verify.bind(tango)(report);
        golf = options.useStateFromStores;
        report = _closure1_slot3;
        oscar = new Array(1);
        oscar[0] = report;
        report = new Array(1);
        report[0] = zulu;
        zulu = 4;
        zulu = offset[zulu];
        zulu = verify.bind(tango)(zulu);
        yankee = zulu.isVersionEqual;
        foxtrot = function() {
            tango = _closure1_slot3;
            zulu = tango.getGameRelationshipsForUser;
            entity = _closure2_slot0;
            zulu = zulu.bind(tango)(entity);
            entity = new Array(2);
            entity[0] = zulu;
            zulu = _closure1_slot3;
            mike = zulu.getGameRelationshipsVersion;
            mike = mike.bind(zulu)();
            entity[1] = mike;
            return entity;
        };
        kilo = options;
        backup = oscar;
        romeo = report;
        zulu = kilo[golf](backup, foxtrot, romeo, yankee, offset);
        mike = _closure1_slot2;
        entity = 1;
        mike = mike.bind(tango)(zulu, entity);
        entity = 0;
        entity = mike[entity];
        return entity;
    };
    zulu['useGameRelationshipsForUser'] = mike;
    return entity;
})();