// app/modules/in_app_notifications/native/ForumThreadCreatedNotification.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot3 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/in_app_notifications/native/ForumThreadCreatedNotification.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ForumThreadCreatedNotification
        entity = argFoo;
        entity = entity.notification;
        verify = entity.thread;
        offset = entity.threadCreator;
        yankee = entity.parentChannel;
        option = entity.guild;
        romeon = _closure1_slot0;
        foxtra = _closure1_slot2;
        entity = 2;
        michal = foxtra[entity];
        tangon = undefined;
        michal = romeon.bind(tangon)(michal);
        oscard = michal.intl;
        report = oscard.formatToPlainString;
        michal = foxtra[entity];
        michal = romeon.bind(tangon)(michal);
        michal = michal.t;
        zuuluu = michal.2IGVl5;
        michal = {};
        yankee = yankee.name;
        michal['channelName'] = yankee;
        option = option.name;
        michal['guildName'] = option;
        oscard = report.bind(oscard)(zuuluu, michal);
        michal = foxtra[entity];
        michal = romeon.bind(tangon)(michal);
        report = michal.intl;
        zuuluu = report.formatToPlainString;
        entity = foxtra[entity];
        entity = romeon.bind(tangon)(entity);
        entity = entity.t;
        michal = entity.jPhTvb;
        entity = {};
        option = verify.name;
        entity['channelName'] = option;
        option = offset.toString;
        option = option.bind(offset)();
        entity['userUsername'] = option;
        report = zuuluu.bind(report)(michal, entity);
        zuuluu = _closure1_slot3;
        entity = 3;
        entity = foxtra[entity];
        entity = romeon.bind(tangon)(entity);
        michal = entity.Notification;
        entity = {};
        option = _closure1_slot1;
        yankee = 4;
        golfie = foxtra[yankee];
        option = option.bind(tangon)(golfie);
        golfie = {};
        yankee = foxtra[yankee];
        yankee = romeon.bind(tangon)(yankee);
        yankee = yankee.AvatarSizes;
        yankee = yankee.NORMAL;
        golfie['size'] = yankee;
        golfie['user'] = offset;
        verify = verify.guild_id;
        golfie['guildId'] = verify;
        golfie = zuuluu.bind(tangon)(option, golfie);
        entity['icon'] = golfie;
        entity['label'] = oscard;
        entity['textChildren'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();