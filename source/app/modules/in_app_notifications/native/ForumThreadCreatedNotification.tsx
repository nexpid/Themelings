// app/modules/in_app_notifications/native/ForumThreadCreatedNotification.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot3 = tango;
    tango = 5;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/in_app_notifications/native/ForumThreadCreatedNotification.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ForumThreadCreatedNotification
        entity = argFoo;
        entity = entity.notification;
        verify = entity.thread;
        offset = entity.threadCreator;
        yankee = entity.parentChannel;
        options = entity.guild;
        romeo = _closure1_slot0;
        foxtrot = _closure1_slot2;
        entity = 2;
        mike = foxtrot[entity];
        tango = undefined;
        mike = romeo.bind(tango)(mike);
        oscar = mike.intl;
        report = oscar.formatToPlainString;
        mike = foxtrot[entity];
        mike = romeo.bind(tango)(mike);
        mike = mike.t;
        zulu = mike.2IGVl5;
        mike = {};
        yankee = yankee.name;
        mike['channelName'] = yankee;
        options = options.name;
        mike['guildName'] = options;
        oscar = report.bind(oscar)(zulu, mike);
        mike = foxtrot[entity];
        mike = romeo.bind(tango)(mike);
        report = mike.intl;
        zulu = report.formatToPlainString;
        entity = foxtrot[entity];
        entity = romeo.bind(tango)(entity);
        entity = entity.t;
        mike = entity.jPhTvb;
        entity = {};
        options = verify.name;
        entity['channelName'] = options;
        options = offset.toString;
        options = options.bind(offset)();
        entity['userUsername'] = options;
        report = zulu.bind(report)(mike, entity);
        zulu = _closure1_slot3;
        entity = 3;
        entity = foxtrot[entity];
        entity = romeo.bind(tango)(entity);
        mike = entity.Notification;
        entity = {};
        options = _closure1_slot1;
        yankee = 4;
        golf = foxtrot[yankee];
        options = options.bind(tango)(golf);
        golf = {};
        yankee = foxtrot[yankee];
        yankee = romeo.bind(tango)(yankee);
        yankee = yankee.AvatarSizes;
        yankee = yankee.NORMAL;
        golf['size'] = yankee;
        golf['user'] = offset;
        verify = verify.guild_id;
        golf['guildId'] = verify;
        golf = zulu.bind(tango)(options, golf);
        entity['icon'] = golf;
        entity['label'] = oscar;
        entity['textChildren'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();