// app/modules/in_app_notifications/native/Notification.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: Progress
        michal = argFoo;
        romeon = michal.percent;
        var _closure2_slot0 = romeon;
        tangon = _closure1_slot4;
        zuuluu = tangon.useState;
        michal = 0;
        golfie = zuuluu.bind(tangon)(michal);
        report = _closure1_slot3;
        tangon = undefined;
        zuuluu = 2;
        zuuluu = report.bind(tangon)(golfie, zuuluu);
        yankee = zuuluu[michal];
        var _closure2_slot1 = yankee;
        michal = 1;
        michal = zuuluu[michal];
        var _closure2_slot2 = michal;
        michal = _closure1_slot11;
        verify = michal.bind(tangon)();
        golfie = _closure1_slot4;
        report = golfie.useCallback;
        zuuluu = function(argFoo) {
            entity = argFoo;
            entity = entity.nativeEvent;
            entity = entity.layout;
            zuuluu = entity.width;
            michal = _closure2_slot2;
            entity = undefined;
            entity = michal.bind(entity)(zuuluu);
            return entity;
        };
        michal = new Array(0);
        golfie = report.bind(golfie)(zuuluu, michal);
        zuuluu = _closure1_slot0;
        option = _closure1_slot2;
        report = 4;
        michal = option[report];
        zuuluu = zuuluu.bind(tangon)(michal);
        michal = zuuluu.useAnimatedStyle;
        entity = function() { // Original name: s
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = _closure2_slot0;
                michal = 'number';
                entity = typeof entity;
                if(!(michal !== entity)) { _fun00002_ip = 33; continue _fun00001 }
 18:
                michal = _closure2_slot0;
                entity = michal.get;
                michal = entity.bind(michal)();
                _fun00002_ip = 37; continue _fun00001;
 33:
                michal = _closure2_slot0;
 37:
                entity = 100;
                michal = michal / entity;
                entity = {};
                zuuluu = {};
                tangon = _closure2_slot1;
                michal = tangon * michal;
                michal = michal - tangon;
                zuuluu['translateX'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['transform'] = michal;
                return entity;
            }
        };
        offset = {};
        offset['percent'] = romeon;
        offset['width'] = yankee;
        entity['__closure'] = offset;
        offset = 7737176392305.0;
        entity['__workletHash'] = offset;
        offset = _closure1_slot12;
        entity['__initData'] = offset;
        offset = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot6;
        michal = _closure1_slot5;
        entity = {};
        entity['onLayout'] = golfie;
        golfie = verify.progressContainer;
        entity['style'] = golfie;
        golfie = _closure1_slot6;
        oscard = _closure1_slot1;
        report = option[report];
        report = oscard.bind(tangon)(report);
        oscard = report.View;
        report = {};
        option = new Array(2);
        option[0] = offset;
        verify = verify.progress;
        option[1] = verify;
        report['style'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot14 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    foxtra = 1;
    golfie = oscard[foxtra];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    option = tangon.Pressable;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    golfie = tangon.jsxs;
    var _closure1_slot7 = golfie;
    tangon = tangon.Fragment;
    var _closure1_slot8 = tangon;
    tangon = {'mass': 1, 'overshootClamping': true, 'damping': 27, 'stiffness': 300};
    var _closure1_slot9 = tangon;
    offset = 4;
    tangon = oscard[offset];
    golfie = romeon.bind(entity)(tangon);
    tangon = golfie.createAnimatedComponent;
    tangon = tangon.bind(golfie)(option);
    var _closure1_slot10 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    yankee = 6;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.shadows;
    output = backup.SHADOW_HIGH;
    result = verify;
    backup = copyDataProperties(result, output);
    tangon['shadow'] = verify;
    verify = {'maxWidth': 480, 'width': '100%', 'backgroundColor': null, 'alignSelf': 'center', 'borderRadius': null, 'borderWidth': 1, 'borderColor': null, 'overflow': 'hidden'};
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.ALERT_BG;
    verify['backgroundColor'] = backup;
    backup = 'center';
    kiloes = oscard[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.lg;
    verify['borderRadius'] = kiloes;
    kiloes = oscard[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BORDER_SUBTLE;
    verify['borderColor'] = kiloes;
    tangon['container'] = verify;
    verify = {};
    verify['flex'] = foxtra;
    tangon['body'] = verify;
    verify = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_12;
    verify['marginRight'] = foxtra;
    tangon['iconContainer'] = verify;
    verify = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.unsafe_rawColors;
    foxtra = foxtra.YELLOW_300;
    verify['backgroundColor'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['paddingHorizontal'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['paddingVertical'] = foxtra;
    foxtra = 'row';
    verify['flexDirection'] = foxtra;
    verify['alignItems'] = backup;
    tangon['alertContainer'] = verify;
    verify = {};
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    verify['padding'] = backup;
    verify['flexDirection'] = foxtra;
    tangon['contentContainer'] = verify;
    verify = {'flex': 1, 'marginBottom': 2};
    tangon['label'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tangon['labelContainer'] = verify;
    verify = {'width': 12, 'height': 12};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_4;
    verify['marginRight'] = foxtra;
    tangon['warningIcon'] = verify;
    verify = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.xs;
    verify['borderTopRightRadius'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.xs;
    verify['borderBottomRightRadius'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_BRAND;
    verify['backgroundColor'] = yankee;
    verify['height'] = offset;
    tangon['progress'] = verify;
    verify = {'position': 'absolute', 'bottom': 4294967295, 'width': '100%'};
    tangon['progressContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = {};
    golfie = "function NotificationTsx1(){const{percent,width}=this.__closure;const percentRemaining=(typeof percent==='number'?percent:percent.get())/100;return{transform:[{translateX:-width+width*percentRemaining}]};}";
    tangon['code'] = golfie;
    var _closure1_slot12 = tangon;
    tangon = {};
    golfie = 'function NotificationTsx2(){const{withSpring,interpolate,pressed,ON_PRESS_SPRING_CONFIG}=this.__closure;return{transform:[{scale:withSpring(interpolate(pressed.get(),[0,1],[1,0.95]),ON_PRESS_SPRING_CONFIG)}]};}';
    tangon['code'] = golfie;
    var _closure1_slot13 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/in_app_notifications/native/Notification.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: Notification
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            romeon = entity.icon;
            vacuum = entity.label;
            config = entity.labelStyle;
            output = entity.textChildren;
            foxtra = entity.children;
            update = entity.alertLabel;
            echoed = entity.accessoryLabelNode;
            entity = _closure1_slot11;
            tangon = undefined;
            sequen = entity.bind(tangon)();
            zuuluu = _closure1_slot7;
            michal = _closure1_slot8;
            entity = {};
            kiloes = null;
            report = kiloes != update;
            oscard = null;
            if(!report) { _fun00004_ip = 232; continue _fun00003 }
 79:
            option = _closure1_slot7;
            golfie = _closure1_slot5;
            report = {};
            verify = sequen.alertContainer;
            report['style'] = verify;
            sizing = _closure1_slot6;
            yankee = _closure1_slot0;
            result = _closure1_slot2;
            verify = 7;
            verify = result[verify];
            verify = yankee.bind(tangon)(verify);
            offset = verify.CircleWarningIcon;
            verify = {};
            source = sequen.warningIcon;
            verify['style'] = source;
            source = 'black';
            verify['color'] = source;
            offset = sizing.bind(tangon)(offset, verify);
            verify = new Array(2);
            verify[0] = offset;
            sizing = _closure1_slot6;
            offset = 8;
            offset = result[offset];
            offset = yankee.bind(tangon)(offset);
            yankee = offset.Text;
            offset = {'variant': 'text-xs/bold', 'color': 'black'};
            result = update.toUpperCase;
            result = result.bind(update)();
            offset['children'] = result;
            offset = sizing.bind(tangon)(yankee, offset);
            verify[1] = offset;
            report['children'] = verify;
            oscard = option.bind(tangon)(golfie, report);
 232:
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot7;
            golfie = _closure1_slot5;
            oscard = {};
            verify = sequen.contentContainer;
            oscard['style'] = verify;
            yankee = _closure1_slot6;
            offset = _closure1_slot5;
            verify = {};
            sizing = sequen.iconContainer;
            verify['style'] = sizing;
            verify['children'] = romeon;
            offset = yankee.bind(tangon)(offset, verify);
            verify = new Array(2);
            verify[0] = offset;
            yankee = _closure1_slot5;
            offset = {};
            romeon = sequen.body;
            offset['style'] = romeon;
            sizing = _closure1_slot5;
            romeon = {};
            result = sequen.labelContainer;
            romeon['style'] = result;
            update = kiloes != echoed;
            result = null;
            if(!update) { _fun00004_ip = 341; continue _fun00003 }
 338:
            result = echoed;
 341:
            echoed = new Array(2);
            echoed[0] = result;
            ctrled = _closure1_slot6;
            source = _closure1_slot0;
            update = _closure1_slot2;
            result = 8;
            update = update[result];
            update = source.bind(tangon)(update);
            source = update.Text;
            update = {'variant': 'text-md/semibold', 'color': 'header-primary', 'lineClamp': 1};
            record = sequen.label;
            sequen = new Array(2);
            sequen[0] = record;
            sequen[1] = config;
            update['style'] = sequen;
            update['children'] = vacuum;
            update = ctrled.bind(tangon)(source, update);
            echoed[1] = update;
            romeon['children'] = echoed;
            sizing = option.bind(tangon)(sizing, romeon);
            romeon = new Array(2);
            romeon[0] = sizing;
            if(!(kiloes == foxtra)) { _fun00004_ip = 499; continue _fun00003 }
 449:
            sizing = _closure1_slot6;
            kiloes = _closure1_slot0;
            backup = _closure1_slot2;
            backup = backup[result];
            backup = kiloes.bind(tangon)(backup);
            kiloes = backup.Text;
            backup = {'variant': 'redesign/message-preview/medium', 'color': 'text-secondary', 'lineClamp': 2};
            backup['children'] = output;
            foxtra = sizing.bind(tangon)(kiloes, backup);
 499:
            romeon[1] = foxtra;
            offset['children'] = romeon;
            offset = option.bind(tangon)(yankee, offset);
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['Notification'] = tangon;
    michal = function(argFoo) { // Original name: NotificationPressable
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            michal = argFoo;
            yankee = michal.children;
            output = michal.onPress;
            sizing = michal.onLongPress;
            foxtra = michal.percent;
            michal = _closure1_slot11;
            tangon = undefined;
            option = michal.bind(tangon)();
            verify = _closure1_slot0;
            romeon = _closure1_slot2;
            golfie = 4;
            michal = romeon[golfie];
            report = verify.bind(tangon)(michal);
            zuuluu = report.useSharedValue;
            michal = 0;
            oscard = zuuluu.bind(report)(michal);
            var _closure2_slot0 = oscard;
            backup = _closure1_slot4;
            report = backup.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = oscard;
            michal = function() {
                zuuluu = _closure2_slot0;
                michal = zuuluu.set;
                entity = 1;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            kiloes = report.bind(backup)(michal, zuuluu);
            backup = _closure1_slot4;
            report = backup.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = oscard;
            michal = function() {
                zuuluu = _closure2_slot0;
                michal = zuuluu.set;
                entity = 0;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            backup = report.bind(backup)(michal, zuuluu);
            michal = romeon[golfie];
            zuuluu = verify.bind(tangon)(michal);
            michal = zuuluu.useAnimatedStyle;
            entity = function() { // Original name: h
                entity = {};
                zuuluu = {};
                option = _closure1_slot0;
                verify = _closure1_slot2;
                tangon = 9;
                tangon = verify[tangon];
                golfie = undefined;
                oscard = option.bind(golfie)(tangon);
                report = oscard.withSpring;
                tangon = 4;
                tangon = verify[tangon];
                offset = option.bind(golfie)(tangon);
                verify = offset.interpolate;
                golfie = _closure2_slot0;
                tangon = golfie.get;
                option = tangon.bind(golfie)();
                golfie = [0, 1];
                tangon = [1, 0.95];
                tangon = verify.bind(offset)(option, golfie, tangon);
                michal = _closure1_slot9;
                michal = report.bind(oscard)(tangon, michal);
                zuuluu['scale'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['transform'] = michal;
                return entity;
            };
            report = {};
            result = 9;
            result = romeon[result];
            result = verify.bind(tangon)(result);
            result = result.withSpring;
            report['withSpring'] = result;
            golfie = romeon[golfie];
            golfie = verify.bind(tangon)(golfie);
            golfie = golfie.interpolate;
            report['interpolate'] = golfie;
            report['pressed'] = oscard;
            oscard = _closure1_slot9;
            report['ON_PRESS_SPRING_CONFIG'] = oscard;
            entity['__closure'] = report;
            report = 4502016012518.0;
            entity['__workletHash'] = report;
            report = _closure1_slot13;
            entity['__initData'] = report;
            romeon = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot6;
            michal = _closure1_slot5;
            entity = {};
            report = option.shadow;
            entity['style'] = report;
            golfie = _closure1_slot7;
            oscard = _closure1_slot10;
            report = {};
            verify = null;
            result = verify == output;
            report['disabled'] = result;
            report['onPress'] = output;
            report['onLongPress'] = sizing;
            report['onPressIn'] = kiloes;
            report['onPressOut'] = backup;
            backup = 'button';
            report['accessibilityRole'] = backup;
            backup = option.container;
            option = new Array(2);
            option[0] = backup;
            option[1] = romeon;
            report['style'] = option;
            option = new Array(2);
            option[0] = yankee;
            yankee = verify != foxtra;
            if(!yankee) { _fun00006_ip = 378; continue _fun00005 }
 357:
            romeon = _closure1_slot6;
            yankee = _closure1_slot14;
            offset = {};
            offset['percent'] = foxtra;
            verify = romeon.bind(tangon)(yankee, offset);
 378:
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['NotificationPressable'] = michal;
    return entity;
})();