// app/modules/in_app_notifications/native/Notification.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: Progress
        mike = argFoo;
        romeo = mike.percent;
        var _closure2_slot0 = romeo;
        tango = _closure1_slot4;
        zulu = tango.useState;
        mike = 0;
        golf = zulu.bind(tango)(mike);
        report = _closure1_slot3;
        tango = undefined;
        zulu = 2;
        zulu = report.bind(tango)(golf, zulu);
        yankee = zulu[mike];
        var _closure2_slot1 = yankee;
        mike = 1;
        mike = zulu[mike];
        var _closure2_slot2 = mike;
        mike = _closure1_slot11;
        verify = mike.bind(tango)();
        golf = _closure1_slot4;
        report = golf.useCallback;
        zulu = function(argFoo) {
            entity = argFoo;
            entity = entity.nativeEvent;
            entity = entity.layout;
            zulu = entity.width;
            mike = _closure2_slot2;
            entity = undefined;
            entity = mike.bind(entity)(zulu);
            return entity;
        };
        mike = new Array(0);
        golf = report.bind(golf)(zulu, mike);
        zulu = _closure1_slot0;
        options = _closure1_slot2;
        report = 4;
        mike = options[report];
        zulu = zulu.bind(tango)(mike);
        mike = zulu.useAnimatedStyle;
        entity = function() { // Original name: s
            _fun86909: for(var _fun86909_ip = 0; ; ) switch(_fun86909_ip) {
 0:
                entity = _closure2_slot0;
                mike = 'number';
                entity = typeof entity;
                if(!(mike !== entity)) { _fun86909_ip = 33; continue _fun86909 }
 18:
                mike = _closure2_slot0;
                entity = mike.get;
                mike = entity.bind(mike)();
                _fun86909_ip = 37; continue _fun86909;
 33:
                mike = _closure2_slot0;
 37:
                entity = 100;
                mike = mike / entity;
                entity = {};
                zulu = {};
                tango = _closure2_slot1;
                mike = tango * mike;
                mike = mike - tango;
                zulu['translateX'] = mike;
                mike = new Array(1);
                mike[0] = zulu;
                entity['transform'] = mike;
                return entity;
            }
        };
        offset = {};
        offset['percent'] = romeo;
        offset['width'] = yankee;
        entity['__closure'] = offset;
        offset = 7737176392305.0;
        entity['__workletHash'] = offset;
        offset = _closure1_slot12;
        entity['__initData'] = offset;
        offset = mike.bind(zulu)(entity);
        zulu = _closure1_slot6;
        mike = _closure1_slot5;
        entity = {};
        entity['onLayout'] = golf;
        golf = verify.progressContainer;
        entity['style'] = golf;
        golf = _closure1_slot6;
        oscar = _closure1_slot1;
        report = options[report];
        report = oscar.bind(tango)(report);
        oscar = report.View;
        report = {};
        options = new Array(2);
        options[0] = offset;
        verify = verify.progress;
        options[1] = verify;
        report['style'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot14 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    foxtrot = 1;
    golf = oscar[foxtrot];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    options = tango.Pressable;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot8 = tango;
    tango = {'mass': 1, 'overshootClamping': true, 'damping': 27, 'stiffness': 300};
    var _closure1_slot9 = tango;
    offset = 4;
    tango = oscar[offset];
    golf = romeo.bind(entity)(tango);
    tango = golf.createAnimatedComponent;
    tango = tango.bind(golf)(options);
    var _closure1_slot10 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    yankee = 6;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.shadows;
    output = backup.SHADOW_HIGH;
    result = verify;
    backup = copyDataProperties(result, output);
    tango['shadow'] = verify;
    verify = {'maxWidth': 480, 'width': '100%', 'backgroundColor': null, 'alignSelf': 'center', 'borderRadius': null, 'borderWidth': 1, 'borderColor': null, 'overflow': 'hidden'};
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.ALERT_BG;
    verify['backgroundColor'] = backup;
    backup = 'center';
    kilo = oscar[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.lg;
    verify['borderRadius'] = kilo;
    kilo = oscar[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BORDER_SUBTLE;
    verify['borderColor'] = kilo;
    tango['container'] = verify;
    verify = {};
    verify['flex'] = foxtrot;
    tango['body'] = verify;
    verify = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_12;
    verify['marginRight'] = foxtrot;
    tango['iconContainer'] = verify;
    verify = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.unsafe_rawColors;
    foxtrot = foxtrot.YELLOW_300;
    verify['backgroundColor'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['paddingHorizontal'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['paddingVertical'] = foxtrot;
    foxtrot = 'row';
    verify['flexDirection'] = foxtrot;
    verify['alignItems'] = backup;
    tango['alertContainer'] = verify;
    verify = {};
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    verify['padding'] = backup;
    verify['flexDirection'] = foxtrot;
    tango['contentContainer'] = verify;
    verify = {'flex': 1, 'marginBottom': 2};
    tango['label'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tango['labelContainer'] = verify;
    verify = {'width': 12, 'height': 12};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_4;
    verify['marginRight'] = foxtrot;
    tango['warningIcon'] = verify;
    verify = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xs;
    verify['borderTopRightRadius'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xs;
    verify['borderBottomRightRadius'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_BRAND;
    verify['backgroundColor'] = yankee;
    verify['height'] = offset;
    tango['progress'] = verify;
    verify = {'position': 'absolute', 'bottom': 4294967295, 'width': '100%'};
    tango['progressContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = {};
    golf = "function NotificationTsx1(){const{percent,width}=this.__closure;const percentRemaining=(typeof percent==='number'?percent:percent.get())/100;return{transform:[{translateX:-width+width*percentRemaining}]};}";
    tango['code'] = golf;
    var _closure1_slot12 = tango;
    tango = {};
    golf = 'function NotificationTsx2(){const{withSpring,interpolate,pressed,ON_PRESS_SPRING_CONFIG}=this.__closure;return{transform:[{scale:withSpring(interpolate(pressed.get(),[0,1],[1,0.95]),ON_PRESS_SPRING_CONFIG)}]};}';
    tango['code'] = golf;
    var _closure1_slot13 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/in_app_notifications/native/Notification.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: Notification
        _fun86910: for(var _fun86910_ip = 0; ; ) switch(_fun86910_ip) {
 0:
            entity = argFoo;
            romeo = entity.icon;
            vacuum = entity.label;
            config = entity.labelStyle;
            output = entity.textChildren;
            foxtrot = entity.children;
            update = entity.alertLabel;
            echo = entity.accessoryLabelNode;
            entity = _closure1_slot11;
            tango = undefined;
            sequence = entity.bind(tango)();
            zulu = _closure1_slot7;
            mike = _closure1_slot8;
            entity = {};
            kilo = null;
            report = kilo != update;
            oscar = null;
            if(!report) { _fun86910_ip = 232; continue _fun86910 }
 79:
            options = _closure1_slot7;
            golf = _closure1_slot5;
            report = {};
            verify = sequence.alertContainer;
            report['style'] = verify;
            sizing = _closure1_slot6;
            yankee = _closure1_slot0;
            result = _closure1_slot2;
            verify = 7;
            verify = result[verify];
            verify = yankee.bind(tango)(verify);
            offset = verify.CircleWarningIcon;
            verify = {};
            source = sequence.warningIcon;
            verify['style'] = source;
            source = 'black';
            verify['color'] = source;
            offset = sizing.bind(tango)(offset, verify);
            verify = new Array(2);
            verify[0] = offset;
            sizing = _closure1_slot6;
            offset = 8;
            offset = result[offset];
            offset = yankee.bind(tango)(offset);
            yankee = offset.Text;
            offset = {'variant': 'text-xs/bold', 'color': 'black'};
            result = update.toUpperCase;
            result = result.bind(update)();
            offset['children'] = result;
            offset = sizing.bind(tango)(yankee, offset);
            verify[1] = offset;
            report['children'] = verify;
            oscar = options.bind(tango)(golf, report);
 232:
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot7;
            golf = _closure1_slot5;
            oscar = {};
            verify = sequence.contentContainer;
            oscar['style'] = verify;
            yankee = _closure1_slot6;
            offset = _closure1_slot5;
            verify = {};
            sizing = sequence.iconContainer;
            verify['style'] = sizing;
            verify['children'] = romeo;
            offset = yankee.bind(tango)(offset, verify);
            verify = new Array(2);
            verify[0] = offset;
            yankee = _closure1_slot5;
            offset = {};
            romeo = sequence.body;
            offset['style'] = romeo;
            sizing = _closure1_slot5;
            romeo = {};
            result = sequence.labelContainer;
            romeo['style'] = result;
            update = kilo != echo;
            result = null;
            if(!update) { _fun86910_ip = 341; continue _fun86910 }
 338:
            result = echo;
 341:
            echo = new Array(2);
            echo[0] = result;
            control = _closure1_slot6;
            source = _closure1_slot0;
            update = _closure1_slot2;
            result = 8;
            update = update[result];
            update = source.bind(tango)(update);
            source = update.Text;
            update = {'variant': 'text-md/semibold', 'color': 'header-primary', 'lineClamp': 1};
            record = sequence.label;
            sequence = new Array(2);
            sequence[0] = record;
            sequence[1] = config;
            update['style'] = sequence;
            update['children'] = vacuum;
            update = control.bind(tango)(source, update);
            echo[1] = update;
            romeo['children'] = echo;
            sizing = options.bind(tango)(sizing, romeo);
            romeo = new Array(2);
            romeo[0] = sizing;
            if(!(kilo == foxtrot)) { _fun86910_ip = 495; continue _fun86910 }
 449:
            sizing = _closure1_slot6;
            kilo = _closure1_slot0;
            backup = _closure1_slot2;
            backup = backup[result];
            backup = kilo.bind(tango)(backup);
            kilo = backup.Text;
            backup = {'variant': 'redesign/message-preview/medium', 'color': 'text-secondary', 'lineClamp': 2};
            backup['children'] = output;
            foxtrot = sizing.bind(tango)(kilo, backup);
 495:
            romeo[1] = foxtrot;
            offset['children'] = romeo;
            offset = options.bind(tango)(yankee, offset);
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['Notification'] = tango;
    mike = function(argFoo) { // Original name: NotificationPressable
        _fun86911: for(var _fun86911_ip = 0; ; ) switch(_fun86911_ip) {
 0:
            mike = argFoo;
            yankee = mike.children;
            output = mike.onPress;
            sizing = mike.onLongPress;
            foxtrot = mike.percent;
            mike = _closure1_slot11;
            tango = undefined;
            options = mike.bind(tango)();
            verify = _closure1_slot0;
            romeo = _closure1_slot2;
            golf = 4;
            mike = romeo[golf];
            report = verify.bind(tango)(mike);
            zulu = report.useSharedValue;
            mike = 0;
            oscar = zulu.bind(report)(mike);
            var _closure2_slot0 = oscar;
            backup = _closure1_slot4;
            report = backup.useCallback;
            zulu = new Array(1);
            zulu[0] = oscar;
            mike = function() {
                zulu = _closure2_slot0;
                mike = zulu.set;
                entity = 1;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            kilo = report.bind(backup)(mike, zulu);
            backup = _closure1_slot4;
            report = backup.useCallback;
            zulu = new Array(1);
            zulu[0] = oscar;
            mike = function() {
                zulu = _closure2_slot0;
                mike = zulu.set;
                entity = 0;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            backup = report.bind(backup)(mike, zulu);
            mike = romeo[golf];
            zulu = verify.bind(tango)(mike);
            mike = zulu.useAnimatedStyle;
            entity = function() { // Original name: f
                entity = {};
                zulu = {};
                options = _closure1_slot0;
                verify = _closure1_slot2;
                tango = 9;
                tango = verify[tango];
                golf = undefined;
                oscar = options.bind(golf)(tango);
                report = oscar.withSpring;
                tango = 4;
                tango = verify[tango];
                offset = options.bind(golf)(tango);
                verify = offset.interpolate;
                golf = _closure2_slot0;
                tango = golf.get;
                options = tango.bind(golf)();
                golf = [0, 1];
                tango = [1, 0.95];
                tango = verify.bind(offset)(options, golf, tango);
                mike = _closure1_slot9;
                mike = report.bind(oscar)(tango, mike);
                zulu['scale'] = mike;
                mike = new Array(1);
                mike[0] = zulu;
                entity['transform'] = mike;
                return entity;
            };
            report = {};
            result = 9;
            result = romeo[result];
            result = verify.bind(tango)(result);
            result = result.withSpring;
            report['withSpring'] = result;
            golf = romeo[golf];
            golf = verify.bind(tango)(golf);
            golf = golf.interpolate;
            report['interpolate'] = golf;
            report['pressed'] = oscar;
            oscar = _closure1_slot9;
            report['ON_PRESS_SPRING_CONFIG'] = oscar;
            entity['__closure'] = report;
            report = 4502016012518.0;
            entity['__workletHash'] = report;
            report = _closure1_slot13;
            entity['__initData'] = report;
            romeo = mike.bind(zulu)(entity);
            zulu = _closure1_slot6;
            mike = _closure1_slot5;
            entity = {};
            report = options.shadow;
            entity['style'] = report;
            golf = _closure1_slot7;
            oscar = _closure1_slot10;
            report = {};
            verify = null;
            result = verify == output;
            report['disabled'] = result;
            report['onPress'] = output;
            report['onLongPress'] = sizing;
            report['onPressIn'] = kilo;
            report['onPressOut'] = backup;
            backup = 'button';
            report['accessibilityRole'] = backup;
            backup = options.container;
            options = new Array(2);
            options[0] = backup;
            options[1] = romeo;
            report['style'] = options;
            options = new Array(2);
            options[0] = yankee;
            yankee = verify != foxtrot;
            if(!yankee) { _fun86911_ip = 378; continue _fun86911 }
 357:
            romeo = _closure1_slot6;
            yankee = _closure1_slot14;
            offset = {};
            offset['percent'] = foxtrot;
            verify = romeo.bind(tango)(yankee, offset);
 378:
            options[1] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['NotificationPressable'] = mike;
    return entity;
})();