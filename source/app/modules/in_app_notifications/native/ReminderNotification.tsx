// app/modules/in_app_notifications/native/ReminderNotification.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.IN_APP_NOTIFICATION_MAX_HEIGHT;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot5 = option;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'position': 'absolute', 'width': 20, 'height': 20, 'right': 0, 'bottom': 0, 'backgroundColor': null, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = 5;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_BRAND;
    offset['backgroundColor'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.round;
    offset['borderRadius'] = yankee;
    tangon['cutoutIconContainer'] = offset;
    offset = {};
    yankee = 'relative';
    offset['position'] = yankee;
    tangon['avatarContainer'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot7 = tangon;
    tangon = {'direction': null, 'radius': 12, 'inset': 4294967294};
    option = 6;
    option = oscard[option];
    option = report.bind(entity)(option);
    option = option.CutoutDirection;
    option = option.BOTTOM_RIGHT;
    tangon['direction'] = option;
    var _closure1_slot8 = tangon;
    tangon = function(argFoo) { // Original name: NotificationAvatar
        entity = argFoo;
        backup = entity.user;
        verify = entity.guildId;
        entity = _closure1_slot7;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        michal = _closure1_slot3;
        entity = {};
        report = option.avatarContainer;
        entity['style'] = report;
        golfie = _closure1_slot5;
        yankee = _closure1_slot1;
        romeon = _closure1_slot2;
        foxtra = 7;
        report = romeon[foxtra];
        oscard = yankee.bind(tangon)(report);
        report = {};
        report['user'] = backup;
        report['guildId'] = verify;
        verify = _closure1_slot0;
        foxtra = romeon[foxtra];
        foxtra = verify.bind(tangon)(foxtra);
        foxtra = foxtra.AvatarSizes;
        foxtra = foxtra.LARGE_48;
        report['size'] = foxtra;
        offset = _closure1_slot8;
        report['cutout'] = offset;
        oscard = golfie.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = {};
        option = option.cutoutIconContainer;
        oscard['style'] = option;
        option = 8;
        option = romeon[option];
        option = verify.bind(tangon)(option);
        verify = option.ClockIcon;
        option = {};
        offset = 'xxs';
        option['size'] = offset;
        offset = 5;
        offset = romeon[offset];
        offset = yankee.bind(tangon)(offset);
        offset = offset.colors;
        offset = offset.WHITE;
        option['color'] = offset;
        option = golfie.bind(tangon)(verify, option);
        oscard['children'] = option;
        oscard = golfie.bind(tangon)(michal, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot9 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        entity = argFoo;
        michal = entity.notification;
        entity = michal.savedMessage;
        report = michal.author;
        foxtra = michal.channel;
        romeon = entity.message;
        offset = _closure1_slot0;
        yankee = _closure1_slot2;
        entity = 9;
        entity = yankee[entity];
        tangon = undefined;
        michal = offset.bind(tangon)(entity);
        entity = michal.getUserAuthor;
        option = entity.bind(michal)(report, foxtra);
        michal = _closure1_slot1;
        entity = 10;
        entity = yankee[entity];
        zuuluu = michal.bind(tangon)(entity);
        entity = null;
        michal = entity != romeon;
        entity = 'Message in a notification should not be null.';
        entity = zuuluu.bind(tangon)(michal, entity);
        zuuluu = _closure1_slot5;
        michal = _closure1_slot9;
        entity = {};
        entity['user'] = report;
        report = foxtra.guild_id;
        entity['guildId'] = report;
        report = zuuluu.bind(tangon)(michal, entity);
        entity = 11;
        entity = yankee[entity];
        entity = offset.bind(tangon)(entity);
        michal = entity.Notification;
        entity = {};
        entity['icon'] = report;
        report = 12;
        oscard = yankee[report];
        oscard = offset.bind(tangon)(oscard);
        verify = oscard.intl;
        oscard = verify.string;
        report = yankee[report];
        report = offset.bind(tangon)(report);
        report = report.t;
        report = report.Whs8tL;
        report = oscard.bind(verify)(report);
        entity['label'] = report;
        verify = 13;
        report = yankee[verify];
        report = offset.bind(tangon)(report);
        oscard = report.NotificationChannelRowPreview;
        report = {};
        report['channel'] = foxtra;
        report['message'] = romeon;
        romeon = 'text-secondary';
        report['color'] = romeon;
        romeon = 14;
        romeon = yankee[romeon];
        romeon = offset.bind(tangon)(romeon);
        romeon = romeon.ChannelListLayoutTypes;
        romeon = romeon.COZY;
        report['layout'] = romeon;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        verify = verify.DefaultMessageComponentStyle;
        verify = verify.STREAMLINED;
        report['componentStyle'] = verify;
        option = option.nick;
        report['username'] = option;
        option = false;
        report['muted'] = option;
        option = 2;
        report['lineClamp'] = option;
        option = 'notification';
        report['context'] = option;
        golfie = _closure1_slot4;
        report['maxHeight'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/in_app_notifications/native/ReminderNotification.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();