// app/modules/in_app_notifications/native/ReminderNotification.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.IN_APP_NOTIFICATION_MAX_HEIGHT;
    var _closure1_slot4 = tango;
    tango = 3;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot5 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {'position': 'absolute', 'width': 20, 'height': 20, 'right': 0, 'bottom': 0, 'backgroundColor': null, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = 5;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_BRAND;
    offset['backgroundColor'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.round;
    offset['borderRadius'] = yankee;
    tango['cutoutIconContainer'] = offset;
    offset = {};
    yankee = 'relative';
    offset['position'] = yankee;
    tango['avatarContainer'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot7 = tango;
    tango = {'direction': null, 'radius': 12, 'inset': 4294967294};
    options = 6;
    options = oscar[options];
    options = report.bind(entity)(options);
    options = options.CutoutDirection;
    options = options.BOTTOM_RIGHT;
    tango['direction'] = options;
    var _closure1_slot8 = tango;
    tango = function(argFoo) { // Original name: NotificationAvatar
        entity = argFoo;
        backup = entity.user;
        verify = entity.guildId;
        entity = _closure1_slot7;
        tango = undefined;
        options = entity.bind(tango)();
        zulu = _closure1_slot6;
        mike = _closure1_slot3;
        entity = {};
        report = options.avatarContainer;
        entity['style'] = report;
        golf = _closure1_slot5;
        yankee = _closure1_slot1;
        romeo = _closure1_slot2;
        foxtrot = 7;
        report = romeo[foxtrot];
        oscar = yankee.bind(tango)(report);
        report = {};
        report['user'] = backup;
        report['guildId'] = verify;
        verify = _closure1_slot0;
        foxtrot = romeo[foxtrot];
        foxtrot = verify.bind(tango)(foxtrot);
        foxtrot = foxtrot.AvatarSizes;
        foxtrot = foxtrot.LARGE_48;
        report['size'] = foxtrot;
        offset = _closure1_slot8;
        report['cutout'] = offset;
        oscar = golf.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = {};
        options = options.cutoutIconContainer;
        oscar['style'] = options;
        options = 8;
        options = romeo[options];
        options = verify.bind(tango)(options);
        verify = options.ClockIcon;
        options = {};
        offset = 'xxs';
        options['size'] = offset;
        offset = 5;
        offset = romeo[offset];
        offset = yankee.bind(tango)(offset);
        offset = offset.colors;
        offset = offset.WHITE;
        options['color'] = offset;
        options = golf.bind(tango)(verify, options);
        oscar['children'] = options;
        oscar = golf.bind(tango)(mike, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot9 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        entity = argFoo;
        mike = entity.notification;
        entity = mike.savedMessage;
        report = mike.author;
        foxtrot = mike.channel;
        romeo = entity.message;
        offset = _closure1_slot0;
        yankee = _closure1_slot2;
        entity = 9;
        entity = yankee[entity];
        tango = undefined;
        mike = offset.bind(tango)(entity);
        entity = mike.getUserAuthor;
        options = entity.bind(mike)(report, foxtrot);
        mike = _closure1_slot1;
        entity = 10;
        entity = yankee[entity];
        zulu = mike.bind(tango)(entity);
        entity = null;
        mike = entity != romeo;
        entity = 'Message in a notification should not be null.';
        entity = zulu.bind(tango)(mike, entity);
        zulu = _closure1_slot5;
        mike = _closure1_slot9;
        entity = {};
        entity['user'] = report;
        report = foxtrot.guild_id;
        entity['guildId'] = report;
        report = zulu.bind(tango)(mike, entity);
        entity = 11;
        entity = yankee[entity];
        entity = offset.bind(tango)(entity);
        mike = entity.Notification;
        entity = {};
        entity['icon'] = report;
        report = 12;
        oscar = yankee[report];
        oscar = offset.bind(tango)(oscar);
        verify = oscar.intl;
        oscar = verify.string;
        report = yankee[report];
        report = offset.bind(tango)(report);
        report = report.t;
        report = report.Whs8tL;
        report = oscar.bind(verify)(report);
        entity['label'] = report;
        verify = 13;
        report = yankee[verify];
        report = offset.bind(tango)(report);
        oscar = report.NotificationChannelRowPreview;
        report = {};
        report['channel'] = foxtrot;
        report['message'] = romeo;
        romeo = 'text-secondary';
        report['color'] = romeo;
        romeo = 14;
        romeo = yankee[romeo];
        romeo = offset.bind(tango)(romeo);
        romeo = romeo.ChannelListLayoutTypes;
        romeo = romeo.COZY;
        report['layout'] = romeo;
        verify = yankee[verify];
        verify = offset.bind(tango)(verify);
        verify = verify.DefaultMessageComponentStyle;
        verify = verify.STREAMLINED;
        report['componentStyle'] = verify;
        options = options.nick;
        report['username'] = options;
        options = false;
        report['muted'] = options;
        options = 2;
        report['lineClamp'] = options;
        options = 'notification';
        report['context'] = options;
        golf = _closure1_slot4;
        report['maxHeight'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 15;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/in_app_notifications/native/ReminderNotification.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();