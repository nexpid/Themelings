// app/modules/search_v2/native/components/tabs/pages/messages/MessagesScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    option = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = option;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    golfie = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.SEARCH_FILTERS_BY_TAB;
    var _closure1_slot5 = option;
    option = tangon.SearchFilter;
    var _closure1_slot6 = option;
    option = tangon.SEARCH_PINNED_MESSAGES_LINE_CLAMP;
    var _closure1_slot7 = option;
    option = tangon.SEARCH_MESSAGES_DEFAULT_LINE_CLAMP;
    var _closure1_slot8 = option;
    option = tangon.MESSAGE_PLACEHOLDER_ITEM_SIZE;
    var _closure1_slot9 = option;
    option = tangon.SearchListItemTypes;
    var _closure1_slot10 = option;
    tangon = tangon.MESSAGE_ESTIMATED_ITEM_SIZE;
    var _closure1_slot11 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot12 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: MessagesScreen
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            backup = michal.searchContext;
            var _closure2_slot0 = backup;
            foxtra = michal.tab;
            var _closure2_slot1 = foxtra;
            romeon = michal.isFocused;
            report = michal.onViewableItemsChanged;
            tangon = undefined;
            var _closure2_slot7 = tangon;
            var _closure2_slot8 = tangon;
            var _closure2_slot9 = tangon;
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            michal = 4;
            michal = golfie[michal];
            zuuluu = oscard.bind(tangon)(michal);
            michal = zuuluu.useSearchMessages;
            output = michal.bind(zuuluu)(backup, foxtra);
            var _closure2_slot2 = output;
            option = _closure1_slot4;
            zuuluu = option.useState;
            michal = function(argFoo) {
                michal = argFoo;
                entity = michal.getSearchResultsQuery;
                entity = entity.bind(michal)();
                return entity;
            };
            michal = zuuluu.bind(option)(backup, michal);
            var _closure2_slot3 = michal;
            zuuluu = 5;
            zuuluu = golfie[zuuluu];
            golfie = oscard.bind(tangon)(zuuluu);
            oscard = golfie.useOnPressMessageItem;
            zuuluu = {};
            zuuluu['searchContext'] = backup;
            zuuluu = oscard.bind(golfie)(zuuluu);
            var _closure2_slot4 = zuuluu;
            golfie = _closure1_slot3;
            option = golfie.useCallback;
            oscard = new Array(3);
            oscard[0] = zuuluu;
            oscard[1] = backup;
            oscard[2] = foxtra;
            zuuluu = function(argFoo, argBar) {
                entity = argFoo;
                tangon = entity.channelId;
                zuuluu = entity.messageId;
                report = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 6;
                michal = michal[entity];
                entity = undefined;
                golfie = report.bind(entity)(michal);
                oscard = golfie.trackMessageItemPress;
                report = {};
                option = _closure2_slot0;
                report['searchContext'] = option;
                report['channelId'] = tangon;
                report['messageId'] = zuuluu;
                option = argBar;
                report['index'] = option;
                option = _closure2_slot1;
                report['tab'] = option;
                report = oscard.bind(golfie)(report);
                michal = _closure2_slot4;
                michal = michal.bind(entity)(tangon, zuuluu);
                return entity;
            };
            echoed = option.bind(golfie)(zuuluu, oscard);
            var _closure2_slot5 = echoed;
            oscard = golfie.useRef;
            zuuluu = {};
            zuuluu = oscard.bind(golfie)(zuuluu);
            var _closure2_slot6 = zuuluu;
            zuuluu = _closure1_slot5;
            oscard = zuuluu[foxtra];
            zuuluu = _closure1_slot6;
            zuuluu = zuuluu.Pins;
            if(!(oscard !== zuuluu)) { _fun00002_ip = 236; continue _fun00001 }
 230:
            result = _closure1_slot8;
            _fun00002_ip = 240; continue _fun00001;
 236:
            result = _closure1_slot7;
 240:
            _closure2_slot7 = result;
            option = _closure1_slot3;
            oscard = option.useMemo;
            zuuluu = new Array(2);
            zuuluu[0] = result;
            zuuluu[1] = michal;
            michal = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 7;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                oscard = _closure2_slot3;
                report = _closure2_slot7;
                michal = tangon.prototype;
                michal = Object.create(michal, {constructor: {value: tangon}});
                golfie = michal;
                entity = new golfie[tangon](oscard, report, tangon);
                entity = entity instanceof Object ? entity : michal;
                return entity;
            };
            sizing = oscard.bind(option)(michal, zuuluu);
            _closure2_slot8 = sizing;
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            michal = 8;
            michal = offset[michal];
            oscard = verify.bind(tangon)(michal);
            zuuluu = oscard.useSearchMessagesLoadingState;
            michal = {};
            michal['searchContext'] = backup;
            michal['tab'] = foxtra;
            golfie = _closure1_slot9;
            michal['placeholderHeight'] = golfie;
            golfie = 1;
            michal['numColumns'] = golfie;
            michal = zuuluu.bind(oscard)(michal);
            kiloes = michal.placeholderCount;
            _closure2_slot9 = kiloes;
            golfie = michal.isFirstPageLoading;
            oscard = michal.isNextPageLoading;
            zuuluu = option.useMemo;
            michal = new Array(5);
            michal[0] = echoed;
            michal[1] = result;
            michal[2] = output;
            michal[3] = sizing;
            michal[4] = kiloes;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = new Array(0);
                    var _closure3_slot0 = entity;
                    tangon = _closure2_slot2;
                    zuuluu = null;
                    if(!(zuuluu != tangon)) { _fun00004_ip = 44; continue _fun00003 }
 23:
                    tangon = _closure2_slot2;
                    zuuluu = tangon.forEach;
                    michal = function(argFoo, argBar) {
                        entity = argBar;
                        var _closure4_slot0 = entity;
                        zuuluu = _closure3_slot0;
                        michal = zuuluu.push;
                        entity = {};
                        tangon = _closure1_slot10;
                        tangon = tangon.MESSAGE;
                        entity['type'] = tangon;
                        tangon = {};
                        verify = _closure2_slot8;
                        option = verify.parse;
                        golfie = argFoo;
                        golfie = option.bind(verify)(golfie);
                        tangon['message'] = golfie;
                        oscard = function(argFoo) { // Original name: onPress
                            tangon = _closure2_slot5;
                            zuuluu = _closure4_slot0;
                            michal = undefined;
                            entity = argFoo;
                            entity = tangon.bind(michal)(entity, zuuluu);
                            return entity;
                        };
                        tangon['onPress'] = oscard;
                        oscard = _closure2_slot7;
                        tangon['lineClamp'] = oscard;
                        report = _closure2_slot6;
                        tangon['messageSizeCacheRef'] = report;
                        entity['props'] = tangon;
                        entity = michal.bind(zuuluu)(entity);
                        entity = undefined;
                        return entity;
                    };
                    michal = zuuluu.bind(tangon)(michal);
 44:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 9;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    tangon = tangon.bind(michal)(zuuluu);
                    zuuluu = tangon.getAdjustedPlaceholderCount;
                    michal = {};
                    golfie = 1;
                    michal['numColumns'] = golfie;
                    golfie = entity.length;
                    michal['numResults'] = golfie;
                    report = _closure2_slot9;
                    michal['placeholderCount'] = report;
                    report = zuuluu.bind(tangon)(michal);
                    tangon = 0;
                    golfie = tangon < report;
                    zuuluu = global;
                    michal = 'message-placeholder-';
                    if(!golfie) { _fun00004_ip = 179; continue _fun00003 }
 126:
                    option = entity.push;
                    golfie = {};
                    verify = _closure1_slot10;
                    verify = verify.MESSAGE_PLACEHOLDER;
                    golfie['type'] = verify;
                    verify = zuuluu.HermesInternal;
                    verify = verify.concat;
                    verify = verify.bind(michal)(tangon);
                    golfie['key'] = verify;
                    golfie = option.bind(entity)(golfie);
                    tangon = tangon + 1;
                    if(tangon < report) { _fun00004_ip = 126; continue _fun00003 }
 179:
                    return entity;
                }
            };
            kiloes = zuuluu.bind(option)(entity, michal);
            entity = 10;
            entity = offset[entity];
            michal = verify.bind(tangon)(entity);
            entity = michal.useContentContainerStyles;
            option = entity.bind(michal)();
            zuuluu = _closure1_slot12;
            michal = _closure1_slot1;
            entity = 6;
            entity = offset[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['data'] = kiloes;
            entity['searchContext'] = backup;
            entity['tab'] = foxtra;
            entity['isFocused'] = romeon;
            yankee = _closure1_slot11;
            entity['estimatedItemSize'] = yankee;
            option = option.messagesContentContainer;
            entity['contentContainerStyle'] = option;
            option = 11;
            option = offset[option];
            option = verify.bind(tangon)(option);
            option = option.MessageVerticalSeparator;
            entity['ItemSeparatorComponent'] = option;
            entity['isFirstPageLoading'] = golfie;
            entity['isNextPageLoading'] = oscard;
            entity['onViewableItemsChanged'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/search_v2/native/components/tabs/pages/messages/MessagesScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();