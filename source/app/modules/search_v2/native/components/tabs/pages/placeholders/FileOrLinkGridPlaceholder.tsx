// app/modules/search_v2/native/components/tabs/pages/placeholders/FileOrLinkGridPlaceholder.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    option = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = option;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    golfie = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.FILES_OR_LINKS_NUM_COLUMNS;
    var _closure1_slot6 = option;
    tangon = tangon.FILES_OR_LINKS_GAP_WIDTH;
    var _closure1_slot7 = tangon;
    tangon = 4;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot8 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'zIndex': 1, 'position': 'absolute', 'width': '100%'};
    tangon['container'] = offset;
    offset = {};
    yankee = 'row';
    offset['flexDirection'] = yankee;
    tangon['row'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot10 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        entity = argFoo;
        yankee = entity.visible;
        michal = _closure1_slot10;
        tangon = undefined;
        oscard = michal.bind(tangon)();
        var _closure2_slot0 = oscard;
        golfie = _closure1_slot0;
        offset = _closure1_slot2;
        michal = 6;
        michal = offset[michal];
        zuuluu = golfie.bind(tangon)(michal);
        michal = zuuluu.useFileOrLinkImageDimensions;
        michal = michal.bind(zuuluu)();
        zuuluu = 7;
        zuuluu = offset[zuuluu];
        option = golfie.bind(tangon)(zuuluu);
        zuuluu = option.useFontScale;
        option = zuuluu.bind(option)();
        zuuluu = michal.width;
        var _closure2_slot1 = zuuluu;
        zuuluu = michal.height;
        michal = 114;
        michal = michal * option;
        michal = zuuluu + michal;
        var _closure2_slot2 = michal;
        zuuluu = 8;
        zuuluu = offset[zuuluu];
        option = golfie.bind(tangon)(zuuluu);
        zuuluu = option.useContentContainerStyles;
        verify = zuuluu.bind(option)();
        zuuluu = 9;
        zuuluu = offset[zuuluu];
        option = golfie.bind(tangon)(zuuluu);
        zuuluu = option.useFadeAnimationStyle;
        option = zuuluu.bind(option)(yankee);
        zuuluu = 10;
        zuuluu = offset[zuuluu];
        romeon = golfie.bind(tangon)(zuuluu);
        yankee = romeon.useStateFromStores;
        zuuluu = _closure1_slot5;
        golfie = new Array(1);
        golfie[0] = zuuluu;
        zuuluu = function() {
            michal = _closure1_slot5;
            entity = michal.getHeight;
            entity = entity.bind(michal)();
            return entity;
        };
        romeon = yankee.bind(romeon)(golfie, zuuluu);
        var _closure2_slot3 = romeon;
        yankee = _closure1_slot3;
        golfie = yankee.useMemo;
        zuuluu = new Array(2);
        zuuluu[0] = romeon;
        zuuluu[1] = michal;
        michal = function() {
            michal = _closure2_slot3;
            entity = _closure2_slot2;
            entity = michal / entity;
            return entity;
        };
        michal = golfie.bind(yankee)(michal, zuuluu);
        var _closure2_slot4 = michal;
        golfie = yankee.useMemo;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            michal = 11;
            zuuluu = zuuluu[michal];
            michal = undefined;
            tangon = tangon.bind(michal)(zuuluu);
            zuuluu = tangon.range;
            michal = _closure2_slot4;
            entity = _closure1_slot6;
            michal = michal * entity;
            entity = 0;
            entity = zuuluu.bind(tangon)(entity, michal);
            return entity;
        };
        michal = golfie.bind(yankee)(michal, zuuluu);
        var _closure2_slot5 = michal;
        golfie = yankee.useMemo;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            michal = 11;
            zuuluu = zuuluu[michal];
            michal = undefined;
            tangon = tangon.bind(michal)(zuuluu);
            zuuluu = tangon.chunk;
            michal = _closure2_slot5;
            entity = _closure1_slot6;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        golfie = golfie.bind(yankee)(michal, zuuluu);
        var _closure2_slot6 = golfie;
        zuuluu = _closure1_slot8;
        michal = _closure1_slot1;
        entity = 12;
        entity = offset[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.View;
        entity = {};
        offset = oscard.container;
        oscard = new Array(3);
        oscard[0] = offset;
        verify = verify.filesOrLinksContentContainer;
        oscard[1] = verify;
        oscard[2] = option;
        entity['style'] = oscard;
        oscard = 'none';
        entity['pointerEvents'] = oscard;
        oscard = golfie.map;
        report = function(argFoo, argBar) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                romeon = argFoo;
                report = argBar;
                var _closure3_slot0 = report;
                tangon = _closure1_slot9;
                michal = _closure1_slot3;
                zuuluu = michal.Fragment;
                michal = {};
                offset = _closure1_slot8;
                verify = _closure1_slot4;
                oscard = {};
                yankee = _closure2_slot0;
                yankee = yankee.row;
                oscard['style'] = yankee;
                yankee = romeon.map;
                entity = function(argFoo, argBar) {
                    report = argBar;
                    tangon = _closure1_slot8;
                    verify = _closure1_slot1;
                    offset = _closure1_slot2;
                    entity = 13;
                    entity = offset[entity];
                    zuuluu = undefined;
                    michal = verify.bind(zuuluu)(entity);
                    entity = {};
                    golfie = _closure2_slot1;
                    entity['width'] = golfie;
                    oscard = _closure2_slot2;
                    entity['height'] = oscard;
                    golfie = _closure1_slot0;
                    oscard = 14;
                    oscard = offset[oscard];
                    option = golfie.bind(zuuluu)(oscard);
                    golfie = option.getGridItemSpacingStyles;
                    oscard = {};
                    foxtra = _closure3_slot0;
                    romeon = _closure1_slot6;
                    foxtra = foxtra * romeon;
                    foxtra = foxtra + report;
                    oscard['itemIndex'] = foxtra;
                    oscard['numColumns'] = romeon;
                    yankee = _closure1_slot7;
                    oscard['spacing'] = yankee;
                    golfie = golfie.bind(option)(oscard);
                    oscard = new Array(2);
                    oscard[0] = golfie;
                    golfie = {};
                    option = 15;
                    option = offset[option];
                    option = verify.bind(zuuluu)(option);
                    option = option.radii;
                    option = option.lg;
                    golfie['borderRadius'] = option;
                    oscard[1] = golfie;
                    entity['style'] = oscard;
                    entity = tangon.bind(zuuluu)(michal, entity, report);
                    return entity;
                };
                entity = yankee.bind(romeon)(entity);
                oscard['children'] = entity;
                entity = undefined;
                verify = offset.bind(entity)(verify, oscard);
                oscard = new Array(2);
                oscard[0] = verify;
                golfie = _closure2_slot6;
                verify = golfie.length;
                golfie = 1;
                golfie = verify - golfie;
                golfie = report < golfie;
                if(!golfie) { _fun00002_ip = 155; continue _fun00001 }
 117:
                offset = _closure1_slot8;
                verify = _closure1_slot0;
                yankee = _closure1_slot2;
                option = 16;
                option = yankee[option];
                option = verify.bind(entity)(option);
                verify = option.CardVerticalSeparator;
                option = {};
                golfie = offset.bind(entity)(verify, option);
 155:
                oscard[1] = golfie;
                michal['children'] = oscard;
                entity = tangon.bind(entity)(zuuluu, michal, report);
                return entity;
            }
        };
        report = oscard.bind(golfie)(report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/search_v2/native/components/tabs/pages/placeholders/FileOrLinkGridPlaceholder.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();