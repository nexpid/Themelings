// app/modules/search_v2/native/components/layout/SearchBarActivityIcon.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    backup = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    offset = 0;
    golf = oscar[offset];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot3 = golf;
    verify = 1;
    tango = oscar[verify];
    tango = report.bind(entity)(tango);
    tango = tango.ActivityIndicator;
    var _closure1_slot4 = tango;
    tango = 2;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot5 = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.Fragment;
    var _closure1_slot6 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    yankee = report.bind(entity)(tango);
    options = yankee.createStyles;
    tango = {};
    romeo = {};
    foxtrot = 4;
    foxtrot = oscar[foxtrot];
    foxtrot = backup.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.TEXT_MUTED;
    romeo['color'] = foxtrot;
    tango['spinnerColor'] = romeo;
    romeo = {'width': 18, 'height': 18, 'alignItems': 'center', 'justifyContent': 'center', 'position': 'absolute'};
    tango['spinner'] = romeo;
    romeo = {'marginLeft': 12, 'marginRight': 4};
    tango['icon'] = romeo;
    tango = options.bind(yankee)(tango);
    var _closure1_slot8 = tango;
    options = {};
    options['START'] = offset;
    tango = 'START';
    options[offset] = tango;
    options['END'] = verify;
    tango = 'END';
    options[verify] = tango;
    var _closure1_slot9 = options;
    verify = options.START;
    tango = new Array(2);
    tango[0] = verify;
    options = options.END;
    tango[1] = options;
    var _closure1_slot10 = tango;
    tango = {};
    options = 'function SearchBarActivityIconTsx1(){const{interpolate,fadeAnimationState,ANIMATION_STATE_INPUT}=this.__closure;return{opacity:interpolate(fadeAnimationState.get(),ANIMATION_STATE_INPUT,[0,0.5])};}';
    tango['code'] = options;
    var _closure1_slot11 = tango;
    tango = {};
    options = 'function SearchBarActivityIconTsx2(){const{interpolate,fadeAnimationState,ANIMATION_STATE_INPUT}=this.__closure;return{opacity:interpolate(fadeAnimationState.get(),ANIMATION_STATE_INPUT,[1,0])};}';
    tango['code'] = options;
    var _closure1_slot12 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = argFoo;
            oscar = mike.searchContext;
            mike = _closure1_slot8;
            tango = undefined;
            romeo = mike.bind(tango)();
            foxtrot = _closure1_slot0;
            backup = _closure1_slot2;
            mike = 5;
            mike = backup[mike];
            report = foxtrot.bind(tango)(mike);
            zulu = report.useIsSearchSpinnerVisible;
            mike = {};
            mike['searchContext'] = oscar;
            mike = zulu.bind(report)(mike);
            var _closure2_slot0 = mike;
            oscar = 6;
            zulu = backup[oscar];
            golf = foxtrot.bind(tango)(zulu);
            report = golf.useSharedValue;
            zulu = _closure1_slot9;
            zulu = zulu.START;
            options = report.bind(golf)(zulu);
            var _closure2_slot1 = options;
            golf = _closure1_slot3;
            report = golf.useEffect;
            zulu = new Array(2);
            zulu[0] = mike;
            zulu[1] = options;
            mike = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    golf = _closure2_slot0;
                    tango = _closure2_slot1;
                    zulu = tango.set;
                    oscar = _closure1_slot0;
                    report = _closure1_slot2;
                    entity = 7;
                    report = report[entity];
                    entity = undefined;
                    oscar = oscar.bind(entity)(report);
                    report = oscar.withTiming;
                    mike = _closure1_slot9;
                    if(golf) { _fun00004_ip = 71; continue _fun00003 }
 53:
                    golf = mike.START;
                    golf = report.bind(oscar)(golf);
                    golf = zulu.bind(tango)(golf);
                    _fun00004_ip = 87; continue _fun00003;
 71:
                    mike = mike.END;
                    mike = report.bind(oscar)(mike);
                    mike = zulu.bind(tango)(mike);
 87:
                    return entity;
                }
            };
            mike = report.bind(golf)(mike, zulu);
            mike = backup[oscar];
            report = foxtrot.bind(tango)(mike);
            zulu = report.useAnimatedStyle;
            mike = function() { // Original name: h
                entity = {};
                report = _closure1_slot0;
                tango = _closure1_slot2;
                zulu = 6;
                tango = tango[zulu];
                zulu = undefined;
                oscar = report.bind(zulu)(tango);
                report = oscar.interpolate;
                tango = _closure2_slot1;
                zulu = tango.get;
                tango = zulu.bind(tango)();
                zulu = _closure1_slot10;
                mike = [0, 0.5];
                mike = report.bind(oscar)(tango, zulu, mike);
                entity['opacity'] = mike;
                return entity;
            };
            verify = {};
            golf = backup[oscar];
            golf = foxtrot.bind(tango)(golf);
            golf = golf.interpolate;
            verify['interpolate'] = golf;
            verify['fadeAnimationState'] = options;
            golf = _closure1_slot10;
            verify['ANIMATION_STATE_INPUT'] = golf;
            mike['__closure'] = verify;
            verify = 12880513119188.0;
            mike['__workletHash'] = verify;
            verify = _closure1_slot11;
            mike['__initData'] = verify;
            kilo = zulu.bind(report)(mike);
            mike = backup[oscar];
            zulu = foxtrot.bind(tango)(mike);
            mike = zulu.useAnimatedStyle;
            entity = function() { // Original name: N
                entity = {};
                report = _closure1_slot0;
                tango = _closure1_slot2;
                zulu = 6;
                tango = tango[zulu];
                zulu = undefined;
                oscar = report.bind(zulu)(tango);
                report = oscar.interpolate;
                tango = _closure2_slot1;
                zulu = tango.get;
                tango = zulu.bind(tango)();
                zulu = _closure1_slot10;
                mike = [1, 0];
                mike = report.bind(oscar)(tango, zulu, mike);
                entity['opacity'] = mike;
                return entity;
            };
            report = {};
            verify = backup[oscar];
            verify = foxtrot.bind(tango)(verify);
            verify = verify.interpolate;
            report['interpolate'] = verify;
            report['fadeAnimationState'] = options;
            report['ANIMATION_STATE_INPUT'] = golf;
            entity['__closure'] = report;
            report = 11061952032557.0;
            entity['__workletHash'] = report;
            report = _closure1_slot12;
            entity['__initData'] = report;
            verify = mike.bind(zulu)(entity);
            zulu = _closure1_slot7;
            mike = _closure1_slot6;
            entity = {};
            options = _closure1_slot5;
            golf = _closure1_slot1;
            report = backup[oscar];
            report = golf.bind(tango)(report);
            offset = report.View;
            report = {};
            report['style'] = kilo;
            sizing = _closure1_slot4;
            kilo = {};
            output = romeo.spinnerColor;
            output = output.color;
            kilo['color'] = output;
            result = romeo.icon;
            output = new Array(2);
            output[0] = result;
            result = romeo.spinner;
            output[1] = result;
            kilo['style'] = output;
            kilo = options.bind(tango)(sizing, kilo);
            report['children'] = kilo;
            offset = options.bind(tango)(offset, report);
            report = new Array(2);
            report[0] = offset;
            oscar = backup[oscar];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.View;
            oscar = {};
            oscar['style'] = verify;
            verify = 8;
            verify = backup[verify];
            verify = foxtrot.bind(tango)(verify);
            offset = verify.MagnifyingGlassIcon;
            verify = {};
            romeo = romeo.icon;
            verify['style'] = romeo;
            romeo = 9;
            romeo = backup[romeo];
            foxtrot = foxtrot.bind(tango)(romeo);
            romeo = foxtrot.isAndroid;
            foxtrot = romeo.bind(foxtrot)();
            romeo = 'xs';
            if(!foxtrot) { _fun00002_ip = 513; continue _fun00001 }
 509:
            romeo = 'sm';
 513:
            verify['size'] = romeo;
            romeo = _closure1_slot1;
            foxtrot = _closure1_slot2;
            yankee = 4;
            yankee = foxtrot[yankee];
            yankee = romeo.bind(tango)(yankee);
            yankee = yankee.colors;
            yankee = yankee.TEXT_MUTED;
            verify['color'] = yankee;
            verify = options.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/search_v2/native/components/layout/SearchBarActivityIcon.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();