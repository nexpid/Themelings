// app/modules/search_v2/native/components/layout/autocomplete/SearchFilterButton.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot2 = golfie;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.SearchFilterAddLocations;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        entity = argFoo;
        option = entity.searchContext;
        var _closure2_slot0 = option;
        verify = _closure1_slot0;
        offset = _closure1_slot1;
        michal = 3;
        michal = offset[michal];
        tangon = undefined;
        zuuluu = verify.bind(tangon)(michal);
        michal = zuuluu.useEligibleFilterTokens;
        michal = michal.bind(zuuluu)(option);
        var _closure2_slot1 = michal;
        golfie = _closure1_slot2;
        oscard = golfie.useMemo;
        zuuluu = new Array(2);
        zuuluu[0] = option;
        zuuluu[1] = michal;
        michal = function() {
            zuuluu = _closure2_slot1;
            michal = zuuluu.map;
            entity = function(argFoo) {
                oscard = argFoo;
                entity = {};
                report = _closure1_slot0;
                golfie = _closure1_slot1;
                zuuluu = 4;
                option = golfie[zuuluu];
                tangon = undefined;
                verify = report.bind(tangon)(option);
                option = verify.getSearchTokenLabel;
                option = option.bind(verify)(oscard);
                entity['label'] = option;
                option = golfie[zuuluu];
                verify = report.bind(tangon)(option);
                option = verify.getSearchTokenIcon;
                option = option.bind(verify)(oscard);
                entity['IconComponent'] = option;
                zuuluu = golfie[zuuluu];
                report = report.bind(tangon)(zuuluu);
                tangon = report.getSearchTokenPressHandler;
                zuuluu = _closure2_slot0;
                michal = _closure1_slot3;
                michal = michal.CONTEXT_MENU;
                michal = tangon.bind(report)(zuuluu, oscard, michal);
                entity['action'] = michal;
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        oscard = oscard.bind(golfie)(michal, zuuluu);
        zuuluu = _closure1_slot4;
        entity = 5;
        entity = offset[entity];
        entity = verify.bind(tangon)(entity);
        michal = entity.ContextMenu;
        entity = {};
        entity['items'] = oscard;
        oscard = 'below';
        entity['align'] = oscard;
        oscard = 6;
        golfie = offset[oscard];
        golfie = verify.bind(tangon)(golfie);
        option = golfie.intl;
        golfie = option.string;
        oscard = offset[oscard];
        oscard = verify.bind(tangon)(oscard);
        oscard = oscard.t;
        oscard = oscard.oYEmhI;
        oscard = golfie.bind(option)(oscard);
        entity['title'] = oscard;
        oscard = 'handled';
        entity['keyboardShouldPersistTaps'] = oscard;
        report = function(argFoo) { // Original name: children
            zuuluu = argFoo;
            option = zuuluu.ref;
            entity = null;
            michal = Object.create(entity);
            entity = 0;
            michal['ref'] = entity;
            romeon = {};
            yankee = zuuluu;
            offset = michal;
            yankee = copyDataProperties(romeon, yankee, offset);
            tangon = _closure1_slot4;
            oscard = _closure1_slot0;
            golfie = _closure1_slot1;
            entity = 7;
            entity = golfie[entity];
            zuuluu = undefined;
            entity = oscard.bind(zuuluu)(entity);
            michal = entity.IconButton;
            entity = {};
            entity['ref'] = option;
            romeon = entity;
            report = copyDataProperties(romeon, yankee);
            option = 'tertiary';
            report = 'variant';
            entity[report] = option;
            report = 6;
            option = golfie[report];
            option = oscard.bind(zuuluu)(option);
            verify = option.intl;
            option = verify.string;
            report = golfie[report];
            report = oscard.bind(zuuluu)(report);
            report = report.t;
            report = report.kP6oFx;
            option = option.bind(verify)(report);
            report = 'accessibilityLabel';
            entity[report] = option;
            option = 'sm';
            report = 'size';
            entity[report] = option;
            report = 8;
            report = golfie[report];
            report = oscard.bind(zuuluu)(report);
            oscard = report.FiltersHorizontalIcon;
            report = {'size': 'sm', 'color': 'redesign-button-tertiary-text'};
            oscard = tangon.bind(zuuluu)(oscard, report);
            report = 'icon';
            entity[report] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/search_v2/native/components/layout/autocomplete/SearchFilterButton.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();