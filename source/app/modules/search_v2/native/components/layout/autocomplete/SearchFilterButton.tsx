// app/modules/search_v2/native/components/layout/autocomplete/SearchFilterButton.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot2 = golf;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.SearchFilterAddLocations;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        entity = argFoo;
        options = entity.searchContext;
        var _closure2_slot0 = options;
        verify = _closure1_slot0;
        offset = _closure1_slot1;
        mike = 3;
        mike = offset[mike];
        tango = undefined;
        zulu = verify.bind(tango)(mike);
        mike = zulu.useEligibleFilterTokens;
        mike = mike.bind(zulu)(options);
        var _closure2_slot1 = mike;
        golf = _closure1_slot2;
        oscar = golf.useMemo;
        zulu = new Array(2);
        zulu[0] = options;
        zulu[1] = mike;
        mike = function() {
            zulu = _closure2_slot1;
            mike = zulu.map;
            entity = function(argFoo) {
                oscar = argFoo;
                entity = {};
                report = _closure1_slot0;
                golf = _closure1_slot1;
                zulu = 4;
                options = golf[zulu];
                tango = undefined;
                verify = report.bind(tango)(options);
                options = verify.getSearchTokenLabel;
                options = options.bind(verify)(oscar);
                entity['label'] = options;
                options = golf[zulu];
                verify = report.bind(tango)(options);
                options = verify.getSearchTokenIcon;
                options = options.bind(verify)(oscar);
                entity['IconComponent'] = options;
                zulu = golf[zulu];
                report = report.bind(tango)(zulu);
                tango = report.getSearchTokenPressHandler;
                zulu = _closure2_slot0;
                mike = _closure1_slot3;
                mike = mike.CONTEXT_MENU;
                mike = tango.bind(report)(zulu, oscar, mike);
                entity['action'] = mike;
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        oscar = oscar.bind(golf)(mike, zulu);
        zulu = _closure1_slot4;
        entity = 5;
        entity = offset[entity];
        entity = verify.bind(tango)(entity);
        mike = entity.ContextMenu;
        entity = {};
        entity['items'] = oscar;
        oscar = 'below';
        entity['align'] = oscar;
        oscar = 6;
        golf = offset[oscar];
        golf = verify.bind(tango)(golf);
        options = golf.intl;
        golf = options.string;
        oscar = offset[oscar];
        oscar = verify.bind(tango)(oscar);
        oscar = oscar.t;
        oscar = oscar.oYEmhI;
        oscar = golf.bind(options)(oscar);
        entity['title'] = oscar;
        oscar = 'handled';
        entity['keyboardShouldPersistTaps'] = oscar;
        report = function(argFoo) { // Original name: children
            tango = _closure1_slot4;
            oscar = _closure1_slot0;
            golf = _closure1_slot1;
            entity = 7;
            entity = golf[entity];
            zulu = undefined;
            entity = oscar.bind(zulu)(entity);
            mike = entity.IconButton;
            entity = {};
            offset = argFoo;
            yankee = entity;
            report = copyDataProperties(yankee, offset);
            options = 'tertiary';
            report = 'variant';
            entity[report] = options;
            report = 6;
            options = golf[report];
            options = oscar.bind(zulu)(options);
            verify = options.intl;
            options = verify.string;
            report = golf[report];
            report = oscar.bind(zulu)(report);
            report = report.t;
            report = report.kP6oFx;
            options = options.bind(verify)(report);
            report = 'accessibilityLabel';
            entity[report] = options;
            options = 'md';
            report = 'size';
            entity[report] = options;
            report = 8;
            report = golf[report];
            report = oscar.bind(zulu)(report);
            oscar = report.FiltersHorizontalIcon;
            report = {'size': 'sm', 'color': 'interactive-normal'};
            oscar = tango.bind(zulu)(oscar, report);
            report = 'icon';
            entity[report] = oscar;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/search_v2/native/components/layout/autocomplete/SearchFilterButton.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();