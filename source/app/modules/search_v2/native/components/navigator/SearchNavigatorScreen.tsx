// app/modules/search_v2/native/components/navigator/SearchNavigatorScreen.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.deleteSearchQueryState;
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    yankee = 5;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = yankee;
    verify['flex'] = offset;
    tango['wrapper'] = verify;
    verify = {'flex': 1, 'marginTop': 16};
    tango['tabs'] = verify;
    verify = {'marginLeft': 6, 'marginRight': 2};
    tango['back'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/search_v2/native/components/navigator/SearchNavigatorScreen.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SearchNavigatorScreen
        mike = argFoo;
        update = mike.navigation;
        var _closure2_slot0 = update;
        mike = mike.route;
        mike = mike.params;
        kilo = mike.searchContext;
        var _closure2_slot1 = kilo;
        mike = _closure1_slot9;
        tango = undefined;
        foxtrot = mike.bind(tango)();
        report = _closure1_slot3;
        zulu = report.useRef;
        mike = null;
        source = zulu.bind(report)(mike);
        var _closure2_slot2 = source;
        zulu = report.useRef;
        mike = false;
        mike = zulu.bind(report)(mike);
        var _closure2_slot3 = mike;
        golf = _closure1_slot0;
        sizing = _closure1_slot2;
        mike = 6;
        mike = sizing[mike];
        zulu = golf.bind(tango)(mike);
        mike = zulu.useSearchSuggestionsGesture;
        mike = mike.bind(zulu)(kilo);
        offset = mike.gesture;
        echo = mike.dismissed;
        result = mike.setDismissed;
        output = mike.onLayoutMeasure;
        oscar = report.useEffect;
        zulu = new Array(2);
        zulu[0] = update;
        zulu[1] = source;
        mike = function() {
            tango = _closure2_slot0;
            zulu = tango.addListener;
            mike = 'transitionEnd';
            entity = function(argFoo) {
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    entity = argFoo;
                    entity = entity.data;
                    entity = entity.closing;
                    if(entity) { _fun00002_ip = 69; continue _fun00001 }
 17:
                    mike = _closure2_slot3;
                    mike = mike.current;
                    if(mike) { _fun00002_ip = 69; continue _fun00001 }
 32:
                    zulu = _closure2_slot3;
                    mike = true;
                    zulu['current'] = mike;
                    entity = _closure2_slot2;
                    mike = entity.current;
                    entity = null;
                    if(!(entity != mike)) { _fun00002_ip = 69; continue _fun00001 }
 59:
                    entity = mike.focus;
                    entity = entity.bind(mike)();
 69:
                    entity = undefined;
                    return entity;
                }
            };
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        };
        mike = oscar.bind(report)(mike, zulu);
        zulu = report.useEffect;
        mike = new Array(1);
        mike[0] = kilo;
        entity = function() {
            entity = function() {
                tango = _closure1_slot5;
                zulu = _closure2_slot1;
                entity = undefined;
                zulu = tango.bind(entity)(zulu);
                zulu = _closure1_slot1;
                tango = _closure1_slot2;
                mike = 7;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.clearSearch;
                mike = mike.bind(zulu)();
                return entity;
            };
            return entity;
        };
        entity = zulu.bind(report)(entity, mike);
        backup = _closure1_slot1;
        entity = 8;
        entity = sizing[entity];
        entity = backup.bind(tango)(entity);
        control = entity.bind(tango)();
        zulu = _closure1_slot7;
        mike = _closure1_slot8;
        entity = {};
        options = _closure1_slot6;
        report = 9;
        report = sizing[report];
        oscar = backup.bind(tango)(report);
        report = {'absolute': true, 'wide': true, 'tall': true};
        oscar = options.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = 10;
        oscar = sizing[oscar];
        oscar = golf.bind(tango)(oscar);
        golf = oscar.GestureDetector;
        oscar = {};
        oscar['gesture'] = offset;
        offset = _closure1_slot4;
        verify = {};
        romeo = foxtrot.wrapper;
        yankee = new Array(2);
        yankee[0] = romeo;
        romeo = {};
        romeo['paddingTop'] = control;
        yankee[1] = romeo;
        verify['style'] = yankee;
        yankee = 11;
        yankee = sizing[yankee];
        romeo = backup.bind(tango)(yankee);
        yankee = {};
        yankee['ref'] = source;
        yankee['searchContext'] = kilo;
        yankee['suggestionsDismissed'] = echo;
        yankee['setSuggestionsDismissed'] = result;
        yankee['onSuggestionsLayoutMesure'] = output;
        output = {};
        result = foxtrot.back;
        output['style'] = result;
        result = 12;
        result = sizing[result];
        echo = backup.bind(tango)(result);
        result = {};
        update = update.goBack;
        result['onPress'] = update;
        result = options.bind(tango)(echo, result);
        output['children'] = result;
        output = options.bind(tango)(offset, output);
        yankee['backButton'] = output;
        romeo = options.bind(tango)(romeo, yankee);
        yankee = new Array(2);
        yankee[0] = romeo;
        romeo = {};
        foxtrot = foxtrot.tabs;
        romeo['style'] = foxtrot;
        foxtrot = 13;
        foxtrot = sizing[foxtrot];
        backup = backup.bind(tango)(foxtrot);
        foxtrot = {};
        foxtrot['searchContext'] = kilo;
        foxtrot = options.bind(tango)(backup, foxtrot);
        romeo['children'] = foxtrot;
        romeo = options.bind(tango)(offset, romeo);
        yankee[1] = romeo;
        verify['children'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();