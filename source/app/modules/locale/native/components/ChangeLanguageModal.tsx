// app/modules/locale/native/components/ChangeLanguageModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.setAppLocale;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot5 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 24;
    verify['paddingBottom'] = offset;
    tango['alert'] = verify;
    verify = {'marginTop': 8, 'lineHeight': 24, 'textAlign': 'center'};
    tango['header'] = verify;
    verify = {'marginTop': 8, 'lineHeight': 18, 'textAlign': 'center'};
    tango['text'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/locale/native/components/ChangeLanguageModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        entity = _closure1_slot9;
        tango = undefined;
        offset = entity.bind(tango)();
        var _closure2_slot0 = offset;
        zulu = _closure1_slot8;
        mike = _closure1_slot1;
        foxtrot = _closure1_slot2;
        entity = 6;
        entity = foxtrot[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        golf = offset.alert;
        entity['style'] = golf;
        sizing = argFoo;
        output = entity;
        golf = copyDataProperties(output, sizing);
        options = _closure1_slot3;
        golf = function* () {
            entity = function* () { // Original name: ?anon_0_
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                    if(mike) { _fun00002_ip = 474; continue _fun00001 }
 10:
                    mike = _closure1_slot4;
                    zulu = undefined;
                    verify = 'es-ES';
                    mike = mike.bind(zulu)(verify);
                    SaveGenerator(address=32);
 30:
                    return mike;
 32:
                    ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                    if(report) { _fun00002_ip = 471; continue _fun00001 }
 41:
                    oscar = _closure1_slot1;
                    golf = _closure1_slot2;
                    report = 7;
                    report = golf[report];
                    options = oscar.bind(zulu)(report);
                    report = options.updateLocale;
                    report = report.bind(options)(verify);
                    report = 8;
                    report = golf[report];
                    verify = oscar.bind(zulu)(report);
                    options = verify.show;
                    report = {};
                    offset = _closure1_slot0;
                    result = 9;
                    yankee = golf[result];
                    yankee = offset.bind(zulu)(yankee);
                    foxtrot = yankee.intl;
                    romeo = foxtrot.string;
                    yankee = golf[result];
                    yankee = offset.bind(zulu)(yankee);
                    yankee = yankee.international;
                    yankee = yankee.ofazSU;
                    yankee = romeo.bind(foxtrot)(yankee);
                    report['confirmText'] = yankee;
                    foxtrot = _closure1_slot8;
                    romeo = _closure1_slot7;
                    yankee = {};
                    output = _closure1_slot6;
                    kilo = 10;
                    backup = golf[kilo];
                    backup = offset.bind(zulu)(backup);
                    sizing = backup.Text;
                    backup = {'style': null, 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
                    echo = _closure2_slot0;
                    update = echo.header;
                    backup['style'] = update;
                    update = golf[result];
                    update = offset.bind(zulu)(update);
                    control = update.intl;
                    source = control.string;
                    update = golf[result];
                    update = offset.bind(zulu)(update);
                    update = update.international;
                    update = update.KUFsLi;
                    update = source.bind(control)(update);
                    backup['children'] = update;
                    sizing = output.bind(zulu)(sizing, backup);
                    backup = new Array(2);
                    backup[0] = sizing;
                    kilo = golf[kilo];
                    kilo = offset.bind(zulu)(kilo);
                    sizing = kilo.Text;
                    kilo = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
                    echo = echo.text;
                    kilo['style'] = echo;
                    echo = golf[result];
                    echo = offset.bind(zulu)(echo);
                    update = echo.intl;
                    echo = update.string;
                    result = golf[result];
                    result = offset.bind(zulu)(result);
                    result = result.international;
                    result = result.yQfLwM;
                    result = echo.bind(update)(result);
                    kilo['children'] = result;
                    kilo = output.bind(zulu)(sizing, kilo);
                    backup[1] = kilo;
                    yankee['children'] = backup;
                    yankee = foxtrot.bind(zulu)(romeo, yankee);
                    report['children'] = yankee;
                    report = options.bind(verify)(report);
                    report = 11;
                    options = golf[report];
                    verify = offset.bind(zulu)(options);
                    options = verify.hideHotspot;
                    report = golf[report];
                    report = offset.bind(zulu)(report);
                    report = report.HotspotLocations;
                    report = report.CHANGE_LANGUAGE_MODAL;
                    report = options.bind(verify)(report);
                    report = 12;
                    report = golf[report];
                    oscar = oscar.bind(zulu)(report);
                    report = oscar.track;
                    tango = _closure1_slot5;
                    tango = tango.CHANGE_LANGUAGE_MODAL_YES_CLICKED;
                    tango = report.bind(oscar)(tango);
                    return zulu;
 471:
                    return mike;
 474:
                    return entity;
                }
            };
            return entity;
        };
        options = options.bind(tango)(golf);
        golf = 'onConfirm';
        entity[golf] = options;
        golf = function() { // Original name: onCancel
            golf = _closure1_slot0;
            report = _closure1_slot2;
            zulu = 11;
            tango = report[zulu];
            entity = undefined;
            oscar = golf.bind(entity)(tango);
            tango = oscar.hideHotspot;
            zulu = report[zulu];
            zulu = golf.bind(entity)(zulu);
            zulu = zulu.HotspotLocations;
            zulu = zulu.CHANGE_LANGUAGE_MODAL;
            zulu = tango.bind(oscar)(zulu);
            tango = _closure1_slot1;
            zulu = 12;
            zulu = report[zulu];
            tango = tango.bind(entity)(zulu);
            zulu = tango.track;
            mike = _closure1_slot5;
            mike = mike.CHANGE_LANGUAGE_MODAL_NO_CLICKED;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        oscar = 'onCancel';
        entity[oscar] = golf;
        romeo = _closure1_slot0;
        verify = 9;
        oscar = foxtrot[verify];
        oscar = romeo.bind(tango)(oscar);
        options = oscar.intl;
        golf = options.string;
        oscar = foxtrot[verify];
        oscar = romeo.bind(tango)(oscar);
        oscar = oscar.international;
        oscar = oscar.QkGMPz;
        golf = golf.bind(options)(oscar);
        oscar = 'confirmText';
        entity[oscar] = golf;
        oscar = foxtrot[verify];
        oscar = romeo.bind(tango)(oscar);
        options = oscar.intl;
        golf = options.string;
        oscar = foxtrot[verify];
        oscar = romeo.bind(tango)(oscar);
        oscar = oscar.international;
        oscar = oscar.jM7sUl;
        golf = golf.bind(options)(oscar);
        oscar = 'cancelText';
        entity[oscar] = golf;
        golf = true;
        oscar = 'fillCancelText';
        entity[oscar] = golf;
        options = _closure1_slot6;
        report = 10;
        oscar = foxtrot[report];
        oscar = romeo.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'style': null, 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        yankee = offset.header;
        oscar['style'] = yankee;
        yankee = foxtrot[verify];
        yankee = romeo.bind(tango)(yankee);
        kilo = yankee.intl;
        backup = kilo.string;
        yankee = foxtrot[verify];
        yankee = romeo.bind(tango)(yankee);
        yankee = yankee.international;
        yankee = yankee.09QGGB;
        yankee = backup.bind(kilo)(yankee);
        oscar['children'] = yankee;
        golf = options.bind(tango)(golf, oscar);
        oscar = new Array(2);
        oscar[0] = golf;
        report = foxtrot[report];
        report = romeo.bind(tango)(report);
        golf = report.Text;
        report = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        offset = offset.text;
        report['style'] = offset;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        verify = verify.international;
        verify = verify.xi8rEx;
        verify = offset.bind(yankee)(verify);
        report['children'] = verify;
        report = options.bind(tango)(golf, report);
        oscar[1] = report;
        report = 'children';
        entity[report] = oscar;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();