// app/modules/locale/native/components/ChangeLanguageModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.setAppLocale;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot5 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot6 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 24;
    verify['paddingBottom'] = offset;
    tangon['alert'] = verify;
    verify = {'marginTop': 8, 'lineHeight': 24, 'textAlign': 'center'};
    tangon['header'] = verify;
    verify = {'marginTop': 8, 'lineHeight': 18, 'textAlign': 'center'};
    tangon['text'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/locale/native/components/ChangeLanguageModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        entity = _closure1_slot9;
        tangon = undefined;
        offset = entity.bind(tangon)();
        var _closure2_slot0 = offset;
        zuuluu = _closure1_slot8;
        michal = _closure1_slot1;
        foxtra = _closure1_slot2;
        entity = 6;
        entity = foxtra[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        golfie = offset.alert;
        entity['style'] = golfie;
        sizing = argFoo;
        output = entity;
        golfie = copyDataProperties(output, sizing);
        option = _closure1_slot3;
        golfie = function* () {
            entity = function* () { // Original name: ?anon_0_
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                    if(michal) { _fun00002_ip = 480; continue _fun00001 }
 10:
                    michal = _closure1_slot4;
                    zuuluu = undefined;
                    verify = 'es-ES';
                    michal = michal.bind(zuuluu)(verify);
                    SaveGenerator(address=32);
 30:
                    return michal;
 32:
                    ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                    if(report) { _fun00002_ip = 477; continue _fun00001 }
 41:
                    oscard = _closure1_slot1;
                    golfie = _closure1_slot2;
                    report = 7;
                    report = golfie[report];
                    option = oscard.bind(zuuluu)(report);
                    report = option.updateLocale;
                    report = report.bind(option)(verify);
                    report = 8;
                    report = golfie[report];
                    verify = oscard.bind(zuuluu)(report);
                    option = verify.show;
                    report = {};
                    offset = _closure1_slot0;
                    result = 9;
                    yankee = golfie[result];
                    yankee = offset.bind(zuuluu)(yankee);
                    foxtra = yankee.intl;
                    romeon = foxtra.string;
                    yankee = golfie[result];
                    yankee = offset.bind(zuuluu)(yankee);
                    yankee = yankee.international;
                    yankee = yankee.ofazSU;
                    yankee = romeon.bind(foxtra)(yankee);
                    report['confirmText'] = yankee;
                    foxtra = _closure1_slot8;
                    romeon = _closure1_slot7;
                    yankee = {};
                    output = _closure1_slot6;
                    kiloes = 10;
                    backup = golfie[kiloes];
                    backup = offset.bind(zuuluu)(backup);
                    sizing = backup.Text;
                    backup = {'style': null, 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
                    echoed = _closure2_slot0;
                    update = echoed.header;
                    backup['style'] = update;
                    update = golfie[result];
                    update = offset.bind(zuuluu)(update);
                    ctrled = update.intl;
                    source = ctrled.string;
                    update = golfie[result];
                    update = offset.bind(zuuluu)(update);
                    update = update.international;
                    update = update.KUFsLi;
                    update = source.bind(ctrled)(update);
                    backup['children'] = update;
                    sizing = output.bind(zuuluu)(sizing, backup);
                    backup = new Array(2);
                    backup[0] = sizing;
                    kiloes = golfie[kiloes];
                    kiloes = offset.bind(zuuluu)(kiloes);
                    sizing = kiloes.Text;
                    kiloes = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
                    echoed = echoed.text;
                    kiloes['style'] = echoed;
                    echoed = golfie[result];
                    echoed = offset.bind(zuuluu)(echoed);
                    update = echoed.intl;
                    echoed = update.string;
                    result = golfie[result];
                    result = offset.bind(zuuluu)(result);
                    result = result.international;
                    result = result.yQfLwM;
                    result = echoed.bind(update)(result);
                    kiloes['children'] = result;
                    kiloes = output.bind(zuuluu)(sizing, kiloes);
                    backup[1] = kiloes;
                    yankee['children'] = backup;
                    yankee = foxtra.bind(zuuluu)(romeon, yankee);
                    report['children'] = yankee;
                    report = option.bind(verify)(report);
                    report = 11;
                    option = golfie[report];
                    verify = offset.bind(zuuluu)(option);
                    option = verify.hideHotspot;
                    report = golfie[report];
                    report = offset.bind(zuuluu)(report);
                    report = report.HotspotLocations;
                    report = report.CHANGE_LANGUAGE_MODAL;
                    report = option.bind(verify)(report);
                    report = 12;
                    report = golfie[report];
                    oscard = oscard.bind(zuuluu)(report);
                    report = oscard.track;
                    tangon = _closure1_slot5;
                    tangon = tangon.CHANGE_LANGUAGE_MODAL_YES_CLICKED;
                    tangon = report.bind(oscard)(tangon);
                    return zuuluu;
 477:
                    return michal;
 480:
                    return entity;
                }
            };
            return entity;
        };
        option = option.bind(tangon)(golfie);
        golfie = 'onConfirm';
        entity[golfie] = option;
        golfie = function() { // Original name: onCancel
            golfie = _closure1_slot0;
            report = _closure1_slot2;
            zuuluu = 11;
            tangon = report[zuuluu];
            entity = undefined;
            oscard = golfie.bind(entity)(tangon);
            tangon = oscard.hideHotspot;
            zuuluu = report[zuuluu];
            zuuluu = golfie.bind(entity)(zuuluu);
            zuuluu = zuuluu.HotspotLocations;
            zuuluu = zuuluu.CHANGE_LANGUAGE_MODAL;
            zuuluu = tangon.bind(oscard)(zuuluu);
            tangon = _closure1_slot1;
            zuuluu = 12;
            zuuluu = report[zuuluu];
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.track;
            michal = _closure1_slot5;
            michal = michal.CHANGE_LANGUAGE_MODAL_NO_CLICKED;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        oscard = 'onCancel';
        entity[oscard] = golfie;
        romeon = _closure1_slot0;
        verify = 9;
        oscard = foxtra[verify];
        oscard = romeon.bind(tangon)(oscard);
        option = oscard.intl;
        golfie = option.string;
        oscard = foxtra[verify];
        oscard = romeon.bind(tangon)(oscard);
        oscard = oscard.international;
        oscard = oscard.QkGMPz;
        golfie = golfie.bind(option)(oscard);
        oscard = 'confirmText';
        entity[oscard] = golfie;
        oscard = foxtra[verify];
        oscard = romeon.bind(tangon)(oscard);
        option = oscard.intl;
        golfie = option.string;
        oscard = foxtra[verify];
        oscard = romeon.bind(tangon)(oscard);
        oscard = oscard.international;
        oscard = oscard.jM7sUl;
        golfie = golfie.bind(option)(oscard);
        oscard = 'cancelText';
        entity[oscard] = golfie;
        golfie = true;
        oscard = 'fillCancelText';
        entity[oscard] = golfie;
        option = _closure1_slot6;
        report = 10;
        oscard = foxtra[report];
        oscard = romeon.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'style': null, 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        yankee = offset.header;
        oscard['style'] = yankee;
        yankee = foxtra[verify];
        yankee = romeon.bind(tangon)(yankee);
        kiloes = yankee.intl;
        backup = kiloes.string;
        yankee = foxtra[verify];
        yankee = romeon.bind(tangon)(yankee);
        yankee = yankee.international;
        yankee = yankee.09QGGB;
        yankee = backup.bind(kiloes)(yankee);
        oscard['children'] = yankee;
        golfie = option.bind(tangon)(golfie, oscard);
        oscard = new Array(2);
        oscard[0] = golfie;
        report = foxtra[report];
        report = romeon.bind(tangon)(report);
        golfie = report.Text;
        report = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        offset = offset.text;
        report['style'] = offset;
        offset = foxtra[verify];
        offset = romeon.bind(tangon)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtra[verify];
        verify = romeon.bind(tangon)(verify);
        verify = verify.international;
        verify = verify.xi8rEx;
        verify = offset.bind(yankee)(verify);
        report['children'] = verify;
        report = option.bind(tangon)(golfie, report);
        oscard[1] = report;
        report = 'children';
        entity[report] = oscard;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();