// app/modules/modals/native/useModalPanGesture.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    tangon = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = tangon;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    oscard = {};
    entity = true;
    oscard['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, oscard);
    entity = {};
    oscard = 'function useModalPanGestureTsx1(){const{start,translateY}=this.__closure;start.set({y:translateY.get()});}';
    entity['code'] = oscard;
    var _closure1_slot3 = entity;
    entity = {};
    oscard = 'function useModalPanGestureTsx2({translationY:translationY}){const{translateY,interpolate,start,maxTranslate,Extrapolate}=this.__closure;translateY.set(interpolate(start.get().y+translationY,[0,maxTranslate],[0,maxTranslate],Extrapolate.CLAMP));}';
    entity['code'] = oscard;
    var _closure1_slot4 = entity;
    entity = {};
    oscard = "function useModalPanGestureTsx3({velocityY:velocityY}){const{translateY,thresholdTranslate,thresholdVelocity,withSpring,height,runOnJS,ModalActionCreators}=this.__closure;const config={damping:15,mass:1,stiffness:250,overshootClamping:true,restSpeedThreshold:0.001,restDisplacementThreshold:0.001,velocity:velocityY};if(translateY.get()>=thresholdTranslate||velocityY>=thresholdVelocity){translateY.set(withSpring(height,config,'respect-motion-settings',function(){runOnJS(ModalActionCreators.pop)();}));}else{translateY.set(withSpring(0,config));}}";
    entity['code'] = oscard;
    var _closure1_slot5 = entity;
    entity = {};
    oscard = 'function useModalPanGestureTsx4(){const{runOnJS,ModalActionCreators}=this.__closure;runOnJS(ModalActionCreators.pop)();}';
    entity['code'] = oscard;
    var _closure1_slot6 = entity;
    entity = 4;
    tangon = tangon[entity];
    entity = undefined;
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/modals/native/useModalPanGesture.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: useModalPanGesture
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            yankee = michal.thresholdVelocity;
            option = undefined;
            if(!(yankee === option)) { _fun00002_ip = 23; continue _fun00001 }
 17:
            yankee = 500;
 23:
            var _closure2_slot0 = yankee;
            report = michal.gestureEnabled;
            kiloes = michal.maxTranslate;
            var _closure2_slot1 = kiloes;
            romeon = michal.thresholdTranslate;
            var _closure2_slot2 = romeon;
            offset = michal.height;
            var _closure2_slot3 = offset;
            foxtra = michal.translateY;
            var _closure2_slot4 = foxtra;
            var _closure2_slot5 = option;
            golfie = _closure1_slot0;
            verify = _closure1_slot2;
            oscard = 0;
            michal = verify[oscard];
            backup = golfie.bind(option)(michal);
            zuuluu = backup.useSharedValue;
            michal = {};
            michal['y'] = oscard;
            sizing = zuuluu.bind(backup)(michal);
            _closure2_slot5 = sizing;
            michal = 1;
            michal = verify[michal];
            michal = golfie.bind(option)(michal);
            zuuluu = michal.Gesture;
            michal = zuuluu.Pan;
            zuuluu = michal.bind(zuuluu)();
            michal = zuuluu.enabled;
            report = michal.bind(zuuluu)(report);
            zuuluu = report.onStart;
            michal = function() { // Original name: S
                zuuluu = _closure2_slot5;
                michal = zuuluu.set;
                entity = {};
                report = _closure2_slot4;
                tangon = report.get;
                tangon = tangon.bind(report)();
                entity['y'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            backup = {};
            backup['start'] = sizing;
            backup['translateY'] = foxtra;
            michal['__closure'] = backup;
            backup = 6800134645574.0;
            michal['__workletHash'] = backup;
            backup = _closure1_slot3;
            michal['__initData'] = backup;
            report = zuuluu.bind(report)(michal);
            zuuluu = report.onUpdate;
            michal = function(argFoo) { // Original name: Y
                entity = argFoo;
                golfie = entity.translationY;
                tangon = _closure2_slot4;
                zuuluu = tangon.set;
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                michal = 0;
                oscard = yankee[michal];
                entity = undefined;
                verify = offset.bind(entity)(oscard);
                option = verify.interpolate;
                romeon = _closure2_slot5;
                oscard = romeon.get;
                oscard = oscard.bind(romeon)();
                oscard = oscard.y;
                golfie = oscard + golfie;
                romeon = _closure2_slot1;
                oscard = [0];
                oscard[1] = romeon;
                report = [0];
                report[1] = romeon;
                michal = yankee[michal];
                michal = offset.bind(entity)(michal);
                michal = michal.Extrapolate;
                foxtra = michal.CLAMP;
                output = verify;
                sizing = golfie;
                kiloes = oscard;
                backup = report;
                michal = output[option](sizing, kiloes, backup, foxtra, romeon);
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            backup = {};
            backup['translateY'] = foxtra;
            output = verify[oscard];
            output = golfie.bind(option)(output);
            output = output.interpolate;
            backup['interpolate'] = output;
            backup['start'] = sizing;
            backup['maxTranslate'] = kiloes;
            kiloes = verify[oscard];
            kiloes = golfie.bind(option)(kiloes);
            kiloes = kiloes.Extrapolate;
            backup['Extrapolate'] = kiloes;
            michal['__closure'] = backup;
            backup = 6809176231356.0;
            michal['__workletHash'] = backup;
            backup = _closure1_slot4;
            michal['__initData'] = backup;
            zuuluu = zuuluu.bind(report)(michal);
            michal = zuuluu.onEnd;
            entity = function(argFoo) { // Original name: f
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = argFoo;
                    michal = entity.velocityY;
                    option = {'damping': 15, 'mass': 1, 'stiffness': 250, 'overshootClamping': true, 'restSpeedThreshold': 0.001, 'restDisplacementThreshold': 0.001};
                    option['velocity'] = michal;
                    zuuluu = _closure2_slot4;
                    entity = zuuluu.get;
                    zuuluu = entity.bind(zuuluu)();
                    entity = _closure2_slot2;
                    if(!(!(zuuluu >= entity))) { _fun00004_ip = 117; continue _fun00003 }
 52:
                    entity = _closure2_slot0;
                    if(!(!(michal >= entity))) { _fun00004_ip = 117; continue _fun00003 }
 60:
                    zuuluu = _closure2_slot4;
                    michal = zuuluu.set;
                    oscard = _closure1_slot0;
                    report = _closure1_slot2;
                    entity = 2;
                    report = report[entity];
                    entity = undefined;
                    oscard = oscard.bind(entity)(report);
                    report = oscard.withSpring;
                    entity = 0;
                    entity = report.bind(oscard)(entity, option);
                    entity = michal.bind(zuuluu)(entity);
                    _fun00004_ip = 271; continue _fun00003;
 117:
                    zuuluu = _closure2_slot4;
                    michal = zuuluu.set;
                    yankee = _closure1_slot0;
                    foxtra = _closure1_slot2;
                    report = 2;
                    report = foxtra[report];
                    romeon = undefined;
                    golfie = yankee.bind(romeon)(report);
                    oscard = golfie.withSpring;
                    report = _closure2_slot3;
                    tangon = function() { // Original name: s
                        tangon = _closure1_slot0;
                        oscard = _closure1_slot2;
                        entity = 0;
                        zuuluu = oscard[entity];
                        entity = undefined;
                        tangon = tangon.bind(entity)(zuuluu);
                        zuuluu = tangon.runOnJS;
                        report = _closure1_slot1;
                        michal = 3;
                        michal = oscard[michal];
                        michal = report.bind(entity)(michal);
                        michal = michal.pop;
                        michal = zuuluu.bind(tangon)(michal);
                        michal = michal.bind(entity)();
                        return entity;
                    };
                    verify = {};
                    offset = 0;
                    offset = foxtra[offset];
                    offset = yankee.bind(romeon)(offset);
                    offset = offset.runOnJS;
                    verify['runOnJS'] = offset;
                    yankee = _closure1_slot1;
                    offset = 3;
                    offset = foxtra[offset];
                    offset = yankee.bind(romeon)(offset);
                    verify['ModalActionCreators'] = offset;
                    tangon['__closure'] = verify;
                    verify = 14223008059411.0;
                    tangon['__workletHash'] = verify;
                    entity = _closure1_slot6;
                    tangon['__initData'] = entity;
                    kiloes = 'respect-motion-settings';
                    result = golfie;
                    output = report;
                    sizing = option;
                    backup = tangon;
                    entity = result[oscard](output, sizing, kiloes, backup, foxtra);
                    entity = michal.bind(zuuluu)(entity);
 271:
                    entity = undefined;
                    return entity;
                }
            };
            report = {};
            report['translateY'] = foxtra;
            report['thresholdTranslate'] = romeon;
            report['thresholdVelocity'] = yankee;
            yankee = 2;
            yankee = verify[yankee];
            yankee = golfie.bind(option)(yankee);
            yankee = yankee.withSpring;
            report['withSpring'] = yankee;
            report['height'] = offset;
            oscard = verify[oscard];
            oscard = golfie.bind(option)(oscard);
            oscard = oscard.runOnJS;
            report['runOnJS'] = oscard;
            golfie = _closure1_slot1;
            oscard = 3;
            oscard = verify[oscard];
            oscard = golfie.bind(option)(oscard);
            report['ModalActionCreators'] = oscard;
            entity['__closure'] = report;
            report = 15609757922450.0;
            entity['__workletHash'] = report;
            tangon = _closure1_slot5;
            entity['__initData'] = tangon;
            zuuluu = michal.bind(zuuluu)(entity);
            michal = zuuluu.failOffsetY;
            entity = -0.01;
            zuuluu = michal.bind(zuuluu)(entity);
            michal = zuuluu.activeOffsetY;
            entity = new Array(2);
            tangon = -5;
            entity[0] = tangon;
            tangon = 15;
            entity[1] = tangon;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();