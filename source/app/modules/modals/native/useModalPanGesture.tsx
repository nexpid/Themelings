// app/modules/modals/native/useModalPanGesture.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    tango = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = tango;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    oscar = {};
    entity = true;
    oscar['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, oscar);
    entity = {};
    oscar = 'function useModalPanGestureTsx1(){const{start,translateY}=this.__closure;start.set({y:translateY.get()});}';
    entity['code'] = oscar;
    var _closure1_slot3 = entity;
    entity = {};
    oscar = 'function useModalPanGestureTsx2({translationY:translationY}){const{translateY,interpolate,start,maxTranslate,Extrapolate}=this.__closure;translateY.set(interpolate(start.get().y+translationY,[0,maxTranslate],[0,maxTranslate],Extrapolate.CLAMP));}';
    entity['code'] = oscar;
    var _closure1_slot4 = entity;
    entity = {};
    oscar = "function useModalPanGestureTsx3({velocityY:velocityY}){const{translateY,thresholdTranslate,thresholdVelocity,withSpring,height,runOnJS,ModalActionCreators}=this.__closure;const config={damping:15,mass:1,stiffness:250,overshootClamping:true,restSpeedThreshold:0.001,restDisplacementThreshold:0.001,velocity:velocityY};if(translateY.get()>=thresholdTranslate||velocityY>=thresholdVelocity){translateY.set(withSpring(height,config,'respect-motion-settings',function(){runOnJS(ModalActionCreators.pop)();}));}else{translateY.set(withSpring(0,config));}}";
    entity['code'] = oscar;
    var _closure1_slot5 = entity;
    entity = {};
    oscar = 'function useModalPanGestureTsx4(){const{runOnJS,ModalActionCreators}=this.__closure;runOnJS(ModalActionCreators.pop)();}';
    entity['code'] = oscar;
    var _closure1_slot6 = entity;
    entity = 4;
    tango = tango[entity];
    entity = undefined;
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/modals/native/useModalPanGesture.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: useModalPanGesture
        _fun96436: for(var _fun96436_ip = 0; ; ) switch(_fun96436_ip) {
 0:
            mike = argFoo;
            yankee = mike.thresholdVelocity;
            options = undefined;
            if(!(yankee === options)) { _fun96436_ip = 23; continue _fun96436 }
 17:
            yankee = 500;
 23:
            var _closure2_slot0 = yankee;
            report = mike.gestureEnabled;
            kilo = mike.maxTranslate;
            var _closure2_slot1 = kilo;
            romeo = mike.thresholdTranslate;
            var _closure2_slot2 = romeo;
            offset = mike.height;
            var _closure2_slot3 = offset;
            foxtrot = mike.translateY;
            var _closure2_slot4 = foxtrot;
            var _closure2_slot5 = options;
            golf = _closure1_slot0;
            verify = _closure1_slot2;
            oscar = 0;
            mike = verify[oscar];
            backup = golf.bind(options)(mike);
            zulu = backup.useSharedValue;
            mike = {};
            mike['y'] = oscar;
            sizing = zulu.bind(backup)(mike);
            _closure2_slot5 = sizing;
            mike = 1;
            mike = verify[mike];
            mike = golf.bind(options)(mike);
            zulu = mike.Gesture;
            mike = zulu.Pan;
            zulu = mike.bind(zulu)();
            mike = zulu.enabled;
            report = mike.bind(zulu)(report);
            zulu = report.onStart;
            mike = function() { // Original name: S
                zulu = _closure2_slot5;
                mike = zulu.set;
                entity = {};
                report = _closure2_slot4;
                tango = report.get;
                tango = tango.bind(report)();
                entity['y'] = tango;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            backup = {};
            backup['start'] = sizing;
            backup['translateY'] = foxtrot;
            mike['__closure'] = backup;
            backup = 6800134645574.0;
            mike['__workletHash'] = backup;
            backup = _closure1_slot3;
            mike['__initData'] = backup;
            report = zulu.bind(report)(mike);
            zulu = report.onUpdate;
            mike = function(argFoo) { // Original name: Y
                entity = argFoo;
                golf = entity.translationY;
                tango = _closure2_slot4;
                zulu = tango.set;
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                mike = 0;
                oscar = yankee[mike];
                entity = undefined;
                verify = offset.bind(entity)(oscar);
                options = verify.interpolate;
                romeo = _closure2_slot5;
                oscar = romeo.get;
                oscar = oscar.bind(romeo)();
                oscar = oscar.y;
                golf = oscar + golf;
                romeo = _closure2_slot1;
                oscar = [0];
                oscar[1] = romeo;
                report = [0];
                report[1] = romeo;
                mike = yankee[mike];
                mike = offset.bind(entity)(mike);
                mike = mike.Extrapolate;
                foxtrot = mike.CLAMP;
                output = verify;
                sizing = golf;
                kilo = oscar;
                backup = report;
                mike = output[options](sizing, kilo, backup, foxtrot, romeo);
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            backup = {};
            backup['translateY'] = foxtrot;
            output = verify[oscar];
            output = golf.bind(options)(output);
            output = output.interpolate;
            backup['interpolate'] = output;
            backup['start'] = sizing;
            backup['maxTranslate'] = kilo;
            kilo = verify[oscar];
            kilo = golf.bind(options)(kilo);
            kilo = kilo.Extrapolate;
            backup['Extrapolate'] = kilo;
            mike['__closure'] = backup;
            backup = 6809176231356.0;
            mike['__workletHash'] = backup;
            backup = _closure1_slot4;
            mike['__initData'] = backup;
            zulu = zulu.bind(report)(mike);
            mike = zulu.onEnd;
            entity = function(argFoo) { // Original name: f
                _fun96439: for(var _fun96439_ip = 0; ; ) switch(_fun96439_ip) {
 0:
                    entity = argFoo;
                    mike = entity.velocityY;
                    options = {'damping': 15, 'mass': 1, 'stiffness': 250, 'overshootClamping': true, 'restSpeedThreshold': 0.001, 'restDisplacementThreshold': 0.001};
                    options['velocity'] = mike;
                    zulu = _closure2_slot4;
                    entity = zulu.get;
                    zulu = entity.bind(zulu)();
                    entity = _closure2_slot2;
                    if(!(!(zulu >= entity))) { _fun96439_ip = 117; continue _fun96439 }
 52:
                    entity = _closure2_slot0;
                    if(!(!(mike >= entity))) { _fun96439_ip = 117; continue _fun96439 }
 60:
                    zulu = _closure2_slot4;
                    mike = zulu.set;
                    oscar = _closure1_slot0;
                    report = _closure1_slot2;
                    entity = 2;
                    report = report[entity];
                    entity = undefined;
                    oscar = oscar.bind(entity)(report);
                    report = oscar.withSpring;
                    entity = 0;
                    entity = report.bind(oscar)(entity, options);
                    entity = mike.bind(zulu)(entity);
                    _fun96439_ip = 271; continue _fun96439;
 117:
                    zulu = _closure2_slot4;
                    mike = zulu.set;
                    yankee = _closure1_slot0;
                    foxtrot = _closure1_slot2;
                    report = 2;
                    report = foxtrot[report];
                    romeo = undefined;
                    golf = yankee.bind(romeo)(report);
                    oscar = golf.withSpring;
                    report = _closure2_slot3;
                    tango = function() { // Original name: s
                        tango = _closure1_slot0;
                        oscar = _closure1_slot2;
                        entity = 0;
                        zulu = oscar[entity];
                        entity = undefined;
                        tango = tango.bind(entity)(zulu);
                        zulu = tango.runOnJS;
                        report = _closure1_slot1;
                        mike = 3;
                        mike = oscar[mike];
                        mike = report.bind(entity)(mike);
                        mike = mike.pop;
                        mike = zulu.bind(tango)(mike);
                        mike = mike.bind(entity)();
                        return entity;
                    };
                    verify = {};
                    offset = 0;
                    offset = foxtrot[offset];
                    offset = yankee.bind(romeo)(offset);
                    offset = offset.runOnJS;
                    verify['runOnJS'] = offset;
                    yankee = _closure1_slot1;
                    offset = 3;
                    offset = foxtrot[offset];
                    offset = yankee.bind(romeo)(offset);
                    verify['ModalActionCreators'] = offset;
                    tango['__closure'] = verify;
                    verify = 14223008059411.0;
                    tango['__workletHash'] = verify;
                    entity = _closure1_slot6;
                    tango['__initData'] = entity;
                    kilo = 'respect-motion-settings';
                    result = golf;
                    output = report;
                    sizing = options;
                    backup = tango;
                    entity = result[oscar](output, sizing, kilo, backup, foxtrot);
                    entity = mike.bind(zulu)(entity);
 271:
                    entity = undefined;
                    return entity;
                }
            };
            report = {};
            report['translateY'] = foxtrot;
            report['thresholdTranslate'] = romeo;
            report['thresholdVelocity'] = yankee;
            yankee = 2;
            yankee = verify[yankee];
            yankee = golf.bind(options)(yankee);
            yankee = yankee.withSpring;
            report['withSpring'] = yankee;
            report['height'] = offset;
            oscar = verify[oscar];
            oscar = golf.bind(options)(oscar);
            oscar = oscar.runOnJS;
            report['runOnJS'] = oscar;
            golf = _closure1_slot1;
            oscar = 3;
            oscar = verify[oscar];
            oscar = golf.bind(options)(oscar);
            report['ModalActionCreators'] = oscar;
            entity['__closure'] = report;
            report = 15609757922450.0;
            entity['__workletHash'] = report;
            tango = _closure1_slot5;
            entity['__initData'] = tango;
            zulu = mike.bind(zulu)(entity);
            mike = zulu.failOffsetY;
            entity = -0.01;
            zulu = mike.bind(zulu)(entity);
            mike = zulu.activeOffsetY;
            entity = new Array(2);
            tango = -5;
            entity[0] = tango;
            tango = 15;
            entity[1] = tango;
            entity = mike.bind(zulu)(entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();