// app/modules/guild_boosting/native/marketing_redesign/GuildBoostingMarketingTopPerksCards.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    yankee = 0;
    golf = oscar[yankee];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Image;
    var _closure1_slot3 = golf;
    golf = tango.View;
    var _closure1_slot4 = golf;
    tango = tango.ScrollView;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 50;
    verify['marginTop'] = offset;
    tango['wrapper'] = verify;
    offset = 'center';
    verify = {'marginBottom': 20, 'textAlign': 'center'};
    tango['heading'] = verify;
    verify = {'alignItems': 'stretch', 'flexDirection': 'row', 'paddingHorizontal': 16, 'paddingBottom': 16};
    tango['scrollerContent'] = verify;
    verify = {'backgroundColor': null, 'borderRadius': null, 'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center', 'marginRight': 16, 'padding': 24, 'width': 324};
    romeo = 5;
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = backup;
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.lg;
    verify['borderRadius'] = backup;
    tango['card'] = verify;
    verify = {'borderRadius': null, 'height': 128, 'marginBottom': 16, 'overflow': 'hidden', 'width': 211};
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.xs;
    verify['borderRadius'] = romeo;
    tango['cardGraphic'] = verify;
    verify = {};
    verify['marginRight'] = yankee;
    tango['cardLast'] = verify;
    verify = {'marginBottom': 4, 'textAlign': 'center'};
    tango['cardHeading'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tango['cardBody'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = {};
    golf = function() { // Original name: getHeadingCopy
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 6;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.y4ft4O;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    tango['getHeadingCopy'] = golf;
    golf = function() { // Original name: getBodyCopy
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 6;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.HTvLGh;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    tango['getBodyCopy'] = golf;
    golf = function(argFoo) { // Original name: getGraphic
        tango = _closure1_slot7;
        zulu = _closure1_slot3;
        mike = {};
        report = argFoo;
        mike['style'] = report;
        oscar = _closure1_slot1;
        report = _closure1_slot2;
        entity = 7;
        report = report[entity];
        entity = undefined;
        report = oscar.bind(entity)(report);
        mike['source'] = report;
        entity = tango.bind(entity)(zulu, mike);
        return entity;
    };
    tango['getGraphic'] = golf;
    options = new Array(3);
    options[0] = tango;
    tango = {};
    golf = function() { // Original name: getHeadingCopy
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 6;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.PbAyub;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    tango['getHeadingCopy'] = golf;
    golf = function() { // Original name: getBodyCopy
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 6;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.wOYbTk;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    tango['getBodyCopy'] = golf;
    golf = function(argFoo) { // Original name: getGraphic
        tango = _closure1_slot7;
        mike = _closure1_slot1;
        options = _closure1_slot2;
        entity = 8;
        entity = options[entity];
        zulu = undefined;
        mike = mike.bind(zulu)(entity);
        entity = {};
        golf = _closure1_slot0;
        oscar = 9;
        oscar = options[oscar];
        oscar = golf.bind(zulu)(oscar);
        entity['source'] = oscar;
        report = _closure1_slot6;
        report = report.useReducedMotion;
        report = !report;
        entity['autoPlay'] = report;
        report = argFoo;
        entity['style'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    tango['getGraphic'] = golf;
    options[1] = tango;
    tango = {};
    golf = function() { // Original name: getHeadingCopy
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 6;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity./bX4Ji;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    tango['getHeadingCopy'] = golf;
    golf = function() { // Original name: getBodyCopy
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 6;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.yCjoUF;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    tango['getBodyCopy'] = golf;
    golf = function(argFoo) { // Original name: getGraphic
        tango = _closure1_slot7;
        zulu = _closure1_slot3;
        mike = {};
        report = argFoo;
        mike['style'] = report;
        oscar = _closure1_slot1;
        report = _closure1_slot2;
        entity = 10;
        report = report[entity];
        entity = undefined;
        report = oscar.bind(entity)(report);
        mike['source'] = report;
        entity = tango.bind(entity)(zulu, mike);
        return entity;
    };
    tango['getGraphic'] = golf;
    options[2] = tango;
    var _closure1_slot10 = options;
    golf = options.map;
    tango = function(argFoo, argBar) {
        mike = argBar;
        entity = 1;
        mike = mike + entity;
        entity = 340;
        entity = entity * mike;
        return entity;
    };
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_boosting/native/marketing_redesign/GuildBoostingMarketingTopPerksCards.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: GuildBoostingMarketingTopPerksCards
        entity = _closure1_slot9;
        tango = undefined;
        yankee = entity.bind(tango)();
        var _closure2_slot0 = yankee;
        zulu = _closure1_slot8;
        mike = _closure1_slot4;
        entity = {};
        report = yankee.wrapper;
        entity['style'] = report;
        options = _closure1_slot7;
        backup = _closure1_slot0;
        kilo = _closure1_slot2;
        report = 11;
        report = kilo[report];
        report = backup.bind(tango)(report);
        oscar = report.Text;
        report = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        golf = yankee.heading;
        report['style'] = golf;
        golf = 6;
        romeo = kilo[golf];
        romeo = backup.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        golf = kilo[golf];
        golf = backup.bind(tango)(golf);
        golf = golf.t;
        golf = golf.aGdB3N;
        golf = romeo.bind(foxtrot)(golf);
        report['children'] = golf;
        oscar = options.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        golf = _closure1_slot5;
        oscar = {'centerContent': true, 'contentContainerStyle': null, 'decelerationRate': 0.1, 'horizontal': true};
        yankee = yankee.scrollerContent;
        oscar['contentContainerStyle'] = yankee;
        yankee = _closure1_slot11;
        oscar['snapToOffsets'] = yankee;
        yankee = _closure1_slot10;
        offset = yankee.map;
        verify = function(argFoo, argBar) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                yankee = argFoo;
                report = argBar;
                tango = _closure1_slot8;
                zulu = _closure1_slot4;
                mike = {};
                golf = _closure2_slot0;
                options = golf.card;
                golf = new Array(2);
                golf[0] = options;
                options = _closure1_slot10;
                verify = options.length;
                options = 1;
                options = verify - options;
                options = report === options;
                if(!options) { _fun00002_ip = 73; continue _fun00001 }
 63:
                verify = _closure2_slot0;
                options = verify.cardLast;
 73:
                golf[1] = options;
                mike['style'] = golf;
                golf = yankee.getGraphic;
                offset = _closure2_slot0;
                oscar = offset.cardGraphic;
                golf = golf.bind(yankee)(oscar);
                oscar = new Array(3);
                oscar[0] = golf;
                verify = _closure1_slot7;
                options = _closure1_slot0;
                romeo = _closure1_slot2;
                golf = 11;
                foxtrot = romeo[golf];
                entity = undefined;
                foxtrot = options.bind(entity)(foxtrot);
                backup = foxtrot.Text;
                foxtrot = {'style': null, 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
                kilo = offset.cardHeading;
                foxtrot['style'] = kilo;
                kilo = yankee.getHeadingCopy;
                kilo = kilo.bind(yankee)();
                foxtrot['children'] = kilo;
                foxtrot = verify.bind(entity)(backup, foxtrot);
                oscar[1] = foxtrot;
                golf = romeo[golf];
                golf = options.bind(entity)(golf);
                options = golf.Text;
                golf = {'style': null, 'variant': 'text-sm/normal', 'color': 'header-secondary'};
                offset = offset.cardBody;
                golf['style'] = offset;
                offset = yankee.getBodyCopy;
                offset = offset.bind(yankee)();
                golf['children'] = offset;
                golf = verify.bind(entity)(options, golf);
                oscar[2] = golf;
                mike['children'] = oscar;
                entity = tango.bind(entity)(zulu, mike, report);
                return entity;
            }
        };
        verify = offset.bind(yankee)(verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();