// app/modules/guild_boosting/native/marketing_redesign/GuildBoostingMarketingCtaBar.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: useBoostCountAnimatedStyles
        oscar = argFoo;
        var _closure2_slot0 = oscar;
        verify = _closure1_slot0;
        offset = _closure1_slot2;
        mike = 12;
        mike = offset[mike];
        options = undefined;
        zulu = verify.bind(options)(mike);
        mike = zulu.useAnimatedStyle;
        entity = function() { // Original name: o
            _fun105116: for(var _fun105116_ip = 0; ; ) switch(_fun105116_ip) {
 0:
                entity = {};
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                mike = 13;
                zulu = zulu[mike];
                mike = undefined;
                report = tango.bind(mike)(zulu);
                tango = report.withTiming;
                mike = _closure2_slot0;
                zulu = 0;
                if(!mike) { _fun105116_ip = 47; continue _fun105116 }
 44:
                zulu = 1;
 47:
                mike = {};
                oscar = 250;
                mike['duration'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                entity['opacity'] = mike;
                return entity;
            }
        };
        report = {};
        golf = 13;
        golf = offset[golf];
        golf = verify.bind(options)(golf);
        golf = golf.withTiming;
        report['withTiming'] = golf;
        report['isVisible'] = oscar;
        entity['__closure'] = report;
        report = 6895237370657.0;
        entity['__workletHash'] = report;
        tango = _closure1_slot16;
        entity['__initData'] = tango;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    var _closure1_slot17 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticsObjects;
    var _closure1_slot8 = golf;
    golf = tango.AnalyticsPages;
    var _closure1_slot9 = golf;
    tango = tango.AnalyticsSections;
    var _closure1_slot10 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.FractionalPremiumStates;
    var _closure1_slot11 = tango;
    tango = 7;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot12 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot13 = tango;
    offset = 8;
    tango = oscar[offset];
    tango = foxtrot.bind(entity)(tango);
    tango = tango.Millis;
    tango = tango.SECOND;
    yankee = 10;
    tango = yankee * tango;
    var _closure1_slot14 = tango;
    tango = 9;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    romeo = 'center';
    verify = {'alignSelf': 'center', 'marginBottom': 24, 'maxWidth': 395, 'paddingHorizontal': 16, 'textAlign': 'center'};
    tango['heading'] = verify;
    backup = 'relative';
    verify = {'paddingHorizontal': 16, 'paddingTop': 32, 'position': 'relative', 'zIndex': 2};
    tango['headerContent'] = verify;
    verify = {'alignSelf': 'center', 'borderRadius': 24, 'backgroundColor': null, 'marginBottom': 10, 'height': 48, 'width': 48};
    kilo = oscar[yankee];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = kilo;
    tango['guildIcon'] = verify;
    verify = {};
    kilo = oscar[yankee];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.HEADER_PRIMARY;
    verify['color'] = kilo;
    tango['guildIconText'] = verify;
    verify = {'alignSelf': 'center', 'maxWidth': '50%', 'textAlign': 'center'};
    tango['guildName'] = verify;
    verify = {};
    verify['position'] = backup;
    tango['guildBoostCountWrapper'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'center', 'marginBottom': 16, 'paddingBottom': 16, 'paddingTop': 3, 'position': 'relative'};
    tango['totalBoostCountWrapper'] = verify;
    verify = {'flexGrow': 0, 'flexShrink': 0, 'marginRight': 3};
    tango['guildBoostCountIcon'] = verify;
    verify = {'flexGrow': 0, 'flexShrink': 1, 'opacity': 0.6};
    tango['guildBoostCount'] = verify;
    verify = {'position': 'absolute', 'top': 3, 'width': '100%'};
    tango['guildBoostCurrentUserCountWrapper'] = verify;
    verify = {};
    verify['alignSelf'] = romeo;
    tango['guildBoostCurrentUserCount'] = verify;
    verify = {'alignSelf': 'center', 'borderRadius': null, 'maxWidth': 300, 'width': '90%'};
    romeo = oscar[yankee];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.xl;
    verify['borderRadius'] = romeo;
    tango['cta'] = verify;
    verify = {};
    romeo = 11;
    foxtrot = oscar[romeo];
    backup = report.bind(entity)(foxtrot);
    foxtrot = backup.generateBoxShadowStyle;
    romeo = oscar[romeo];
    romeo = report.bind(entity)(romeo);
    romeo = romeo.EIGHT_DP_ELEVATION_SHADOW_PARAMS;
    output = foxtrot.bind(backup)(romeo);
    result = verify;
    romeo = copyDataProperties(result, output);
    tango['ctaPrimary'] = verify;
    verify = {};
    verify['marginTop'] = yankee;
    tango['ctaSecondary'] = verify;
    verify = {};
    verify['marginRight'] = offset;
    tango['giftIcon'] = verify;
    verify = {};
    offset = 'visible';
    verify['overflow'] = offset;
    tango['gradient'] = verify;
    verify = {'bottom': 4294967295, 'left': '-20%', 'position': 'absolute', 'height': 190, 'width': '150%', 'zIndex': 1};
    tango['headerWave'] = verify;
    verify = {'height': '75%', 'left': '5%', 'opacity': 0.9, 'position': 'absolute', 'top': 0, 'width': '90%', 'zIndex': 1};
    tango['headerStars'] = verify;
    verify = {'marginTop': 4294967283, 'marginBottom': 23};
    tango['fpCountdownPill'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot15 = tango;
    tango = {};
    golf = 'function GuildBoostingMarketingCtaBarTsx1(){const{withTiming,isVisible}=this.__closure;return{opacity:withTiming(isVisible?1:0,{duration:250})};}';
    tango['code'] = golf;
    var _closure1_slot16 = tango;
    tango = 40;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_boosting/native/marketing_redesign/GuildBoostingMarketingCtaBar.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildBoostingMarketingCtaBar
        _fun105117: for(var _fun105117_ip = 0; ; ) switch(_fun105117_ip) {
 0:
            entity = argFoo;
            mike = _closure1_slot15;
            tango = undefined;
            kilo = mike.bind(tango)();
            var _closure2_slot0 = kilo;
            source = entity.fractionalPremiumInfo;
            vacuum = entity.guild;
            var _closure2_slot1 = vacuum;
            control = entity.previousGuildSubscriptionSlot;
            golf = entity.onLayout;
            oscar = _closure1_slot4;
            mike = oscar.useState;
            entity = false;
            zulu = mike.bind(oscar)(entity);
            mike = _closure1_slot3;
            entity = 2;
            zulu = mike.bind(tango)(zulu, entity);
            options = 0;
            entity = zulu[options];
            var _closure2_slot2 = entity;
            mike = 1;
            mike = zulu[mike];
            var _closure2_slot3 = mike;
            status = _closure1_slot1;
            whiskey = _closure1_slot2;
            mike = 14;
            mike = whiskey[mike];
            mike = status.bind(tango)(mike);
            record = mike.bind(tango)();
            mike = 15;
            mike = whiskey[mike];
            zulu = status.bind(tango)(mike);
            mike = 16;
            mike = whiskey[mike];
            mike = status.bind(tango)(mike);
            mike = mike.BOOSTED_GUILD_PERKS_MODAL;
            mike = zulu.bind(tango)(mike);
            mike = mike.analyticsLocations;
            var _closure2_slot4 = mike;
            equality = _closure1_slot0;
            mike = 17;
            zulu = whiskey[mike];
            yankee = equality.bind(tango)(zulu);
            verify = yankee.useStateFromStores;
            zulu = _closure1_slot6;
            report = new Array(1);
            report[0] = zulu;
            zulu = function() {
                mike = _closure1_slot6;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            zulu = verify.bind(yankee)(report, zulu);
            mike = whiskey[mike];
            yankee = equality.bind(tango)(mike);
            verify = yankee.useStateFromStores;
            mike = _closure1_slot7;
            report = new Array(1);
            report[0] = mike;
            mike = function() {
                entity = _closure1_slot7;
                entity = entity.boostSlots;
                return entity;
            };
            mike = verify.bind(yankee)(report, mike);
            var _closure2_slot5 = mike;
            verify = oscar.useMemo;
            report = new Array(2);
            report[0] = mike;
            mike = vacuum.id;
            report[1] = mike;
            mike = function() {
                entity = global;
                zulu = entity.Object;
                mike = zulu.keys;
                entity = _closure2_slot5;
                zulu = mike.bind(zulu)(entity);
                mike = zulu.filter;
                entity = function(argFoo) {
                    _fun105121: for(var _fun105121_ip = 0; ; ) switch(_fun105121_ip) {
 0:
                        zulu = _closure2_slot5;
                        entity = argFoo;
                        zulu = zulu[entity];
                        tango = zulu.premiumGuildSubscription;
                        entity = null;
                        entity = entity != tango;
                        if(!entity) { _fun105121_ip = 53; continue _fun105121 }
 29:
                        zulu = zulu.premiumGuildSubscription;
                        zulu = zulu.guildId;
                        mike = _closure2_slot1;
                        mike = mike.id;
                        entity = zulu === mike;
 53:
                        return entity;
                    }
                };
                entity = mike.bind(zulu)(entity);
                entity = entity.length;
                return entity;
            };
            variable37 = verify.bind(oscar)(mike, report);
            var _closure2_slot6 = variable37;
            report = _closure1_slot17;
            quebec = report.bind(tango)(entity);
            mike = !entity;
            variable38 = report.bind(tango)(mike);
            mike = 18;
            report = whiskey[mike];
            verify = status.bind(tango)(report);
            report = source.endsAt;
            mike = whiskey[mike];
            mike = equality.bind(tango)(mike);
            mike = mike.CountDownMessageTypes;
            mike = mike.LONG_TIME_LEFT;
            config = verify.bind(tango)(report, mike);
            mike = 19;
            mike = whiskey[mike];
            report = equality.bind(tango)(mike);
            mike = report.useIsInReverseTrial;
            sequence = mike.bind(report)();
            report = oscar.useRef;
            mike = -1;
            mike = report.bind(oscar)(mike);
            var _closure2_slot7 = mike;
            report = oscar.useEffect;
            mike = new Array(2);
            mike[0] = entity;
            mike[1] = variable37;
            entity = function() {
                _fun105122: for(var _fun105122_ip = 0; ; ) switch(_fun105122_ip) {
 0:
                    tango = _closure2_slot6;
                    zulu = 0;
                    zulu = tango > zulu;
                    if(zulu) { _fun105122_ip = 22; continue _fun105122 }
 18:
                    zulu = _closure2_slot2;
 22:
                    if(!zulu) { _fun105122_ip = 68; continue _fun105122 }
 25:
                    zulu = _closure2_slot7;
                    mike = global;
                    oscar = mike.window;
                    report = oscar.setTimeout;
                    tango = _closure1_slot14;
                    mike = function() {
                        zulu = _closure2_slot3;
                        entity = undefined;
                        mike = function(argFoo) {
                            entity = argFoo;
                            entity = !entity;
                            return entity;
                        };
                        mike = zulu.bind(entity)(mike);
                        return entity;
                    };
                    mike = report.bind(oscar)(mike, tango);
                    zulu['current'] = mike;
 68:
                    entity = function() {
                        entity = global;
                        zulu = entity.window;
                        mike = zulu.clearTimeout;
                        entity = _closure2_slot7;
                        entity = entity.current;
                        entity = mike.bind(zulu)(entity);
                        entity = undefined;
                        return entity;
                    };
                    return entity;
                }
            };
            entity = report.bind(oscar)(entity, mike);
            entity = 20;
            entity = whiskey[entity];
            mike = status.bind(tango)(entity);
            entity = mike.isPremium;
            oscar = entity.bind(mike)(zulu);
            zulu = _closure1_slot13;
            mike = _closure1_slot5;
            entity = {};
            sizing = _closure1_slot12;
            verify = 21;
            report = whiskey[verify];
            yankee = status.bind(tango)(report);
            report = {};
            report['onLayout'] = golf;
            golf = 160;
            report['angle'] = golf;
            golf = {'x': 0.5, 'y': 0.5};
            report['angleCenter'] = golf;
            context = 10;
            golf = whiskey[context];
            golf = status.bind(tango)(golf);
            golf = golf.unsafe_rawColors;
            foxtrot = golf.PREMIUM_TIER_0_HEADER_GRADIENT_1;
            golf = new Array(5);
            golf[0] = foxtrot;
            foxtrot = whiskey[context];
            foxtrot = status.bind(tango)(foxtrot);
            foxtrot = foxtrot.unsafe_rawColors;
            foxtrot = foxtrot.PREMIUM_TIER_0_HEADER_GRADIENT_2;
            golf[1] = foxtrot;
            foxtrot = whiskey[context];
            foxtrot = status.bind(tango)(foxtrot);
            foxtrot = foxtrot.unsafe_rawColors;
            foxtrot = foxtrot.PREMIUM_TIER_0_HEADER_GRADIENT_3;
            golf[2] = foxtrot;
            foxtrot = whiskey[context];
            foxtrot = status.bind(tango)(foxtrot);
            foxtrot = foxtrot.unsafe_rawColors;
            foxtrot = foxtrot.PREMIUM_TIER_0_HEADER_GRADIENT_4;
            golf[3] = foxtrot;
            foxtrot = whiskey[context];
            foxtrot = status.bind(tango)(foxtrot);
            foxtrot = foxtrot.unsafe_rawColors;
            foxtrot = foxtrot.PREMIUM_TIER_0_HEADER_GRADIENT_5;
            golf[4] = foxtrot;
            report['colors'] = golf;
            golf = [0, 0.3221, 0.429, 0.7606, 1];
            report['locations'] = golf;
            golf = true;
            report['useAngle'] = golf;
            foxtrot = kilo.gradient;
            report['style'] = foxtrot;
            verify = whiskey[verify];
            result = status.bind(tango)(verify);
            output = {};
            output['angle'] = options;
            options = {'x': 0.5, 'y': 0.5};
            output['angleCenter'] = options;
            options = ['rgba(0, 0, 0, 0.7)', 'rgba(0, 0, 0, 0)'];
            output['colors'] = options;
            options = [0.12, 0.5];
            output['locations'] = options;
            output['useAngle'] = golf;
            golf = kilo.gradient;
            output['style'] = golf;
            golf = {};
            options = kilo.headerContent;
            golf['style'] = options;
            sierra = 22;
            options = whiskey[sierra];
            options = equality.bind(tango)(options);
            verify = options.Text;
            options = {'style': null, 'color': 'always-white', 'variant': 'display-sm'};
            foxtrot = kilo.heading;
            options['style'] = foxtrot;
            backup = 23;
            foxtrot = whiskey[backup];
            foxtrot = equality.bind(tango)(foxtrot);
            update = foxtrot.intl;
            echo = update.string;
            foxtrot = whiskey[backup];
            foxtrot = equality.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.AF+Tys;
            foxtrot = echo.bind(update)(foxtrot);
            options['children'] = foxtrot;
            verify = sizing.bind(tango)(verify, options);
            options = new Array(5);
            options[0] = verify;
            echo = 24;
            verify = whiskey[echo];
            foxtrot = status.bind(tango)(verify);
            verify = {};
            update = kilo.guildIcon;
            verify['style'] = update;
            update = kilo.guildIconText;
            verify['textStyle'] = update;
            verify['guild'] = vacuum;
            echo = whiskey[echo];
            echo = equality.bind(tango)(echo);
            echo = echo.GuildIconSizes;
            echo = echo.LARGE;
            verify['size'] = echo;
            verify = sizing.bind(tango)(foxtrot, verify);
            options[1] = verify;
            verify = 25;
            verify = whiskey[verify];
            verify = equality.bind(tango)(verify);
            foxtrot = verify.PressableOpacity;
            verify = {};
            echo = function() { // Original name: onPress
                entity = global;
                tango = entity.window;
                zulu = tango.clearTimeout;
                mike = _closure2_slot7;
                mike = mike.current;
                mike = zulu.bind(tango)(mike);
                zulu = _closure2_slot3;
                entity = undefined;
                mike = function(argFoo) {
                    entity = argFoo;
                    entity = !entity;
                    return entity;
                };
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            verify['onPress'] = echo;
            echo = whiskey[sierra];
            echo = equality.bind(tango)(echo);
            update = echo.Text;
            echo = {'style': null, 'color': 'always-white', 'variant': 'text-md/bold'};
            papa = kilo.guildName;
            echo['style'] = papa;
            papa = vacuum.name;
            echo['children'] = papa;
            update = sizing.bind(tango)(update, echo);
            echo = new Array(2);
            echo[0] = update;
            update = {};
            papa = kilo.guildBoostCountWrapper;
            update['style'] = papa;
            target = 12;
            papa = whiskey[target];
            papa = status.bind(tango)(papa);
            lima = papa.View;
            papa = {};
            variable36 = new Array(2);
            variable36[0] = variable38;
            variable38 = kilo.totalBoostCountWrapper;
            variable36[1] = variable38;
            papa['style'] = variable36;
            variable39 = 26;
            variable36 = whiskey[variable39];
            variable38 = status.bind(tango)(variable36);
            variable36 = {};
            variable40 = kilo.guildBoostCountIcon;
            variable36['style'] = variable40;
            variable40 = 27;
            variable40 = whiskey[variable40];
            variable40 = status.bind(tango)(variable40);
            variable36['source'] = variable40;
            variable40 = whiskey[context];
            variable40 = status.bind(tango)(variable40);
            variable40 = variable40.unsafe_rawColors;
            variable40 = variable40.GUILD_BOOSTING_PINK;
            variable36['color'] = variable40;
            variable39 = whiskey[variable39];
            variable39 = status.bind(tango)(variable39);
            variable39 = variable39.Sizes;
            variable39 = variable39.SMALL;
            variable36['size'] = variable39;
            variable38 = sizing.bind(tango)(variable38, variable36);
            variable36 = new Array(2);
            variable36[0] = variable38;
            variable38 = whiskey[sierra];
            variable38 = equality.bind(tango)(variable38);
            variable39 = variable38.Text;
            variable38 = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-sm/bold', 'color': 'always-white'};
            variable40 = kilo.guildBoostCount;
            variable38['style'] = variable40;
            variable40 = whiskey[backup];
            variable40 = equality.bind(tango)(variable40);
            variable43 = variable40.intl;
            variable42 = variable43.format;
            variable40 = whiskey[backup];
            variable40 = equality.bind(tango)(variable40);
            variable40 = variable40.t;
            variable41 = variable40.pob/cH;
            variable40 = {};
            variable44 = vacuum.premiumSubscriberCount;
            variable40['subscriptions'] = variable44;
            variable40 = variable42.bind(variable43)(variable41, variable40);
            variable38['children'] = variable40;
            variable38 = sizing.bind(tango)(variable39, variable38);
            variable36[1] = variable38;
            papa['children'] = variable36;
            lima = zulu.bind(tango)(lima, papa);
            papa = new Array(2);
            papa[0] = lima;
            target = whiskey[target];
            target = status.bind(tango)(target);
            status = target.View;
            target = {};
            lima = new Array(2);
            lima[0] = quebec;
            quebec = kilo.guildBoostCurrentUserCountWrapper;
            lima[1] = quebec;
            target['style'] = lima;
            sierra = whiskey[sierra];
            sierra = equality.bind(tango)(sierra);
            lima = sierra.Text;
            sierra = {'style': null, 'variant': 'text-sm/bold', 'color': 'always-white'};
            variable36 = kilo.guildBoostCount;
            quebec = new Array(2);
            quebec[0] = variable36;
            variable36 = kilo.guildBoostCurrentUserCount;
            quebec[1] = variable36;
            sierra['style'] = quebec;
            quebec = whiskey[backup];
            quebec = equality.bind(tango)(quebec);
            variable36 = quebec.intl;
            quebec = variable36.format;
            whiskey = whiskey[backup];
            whiskey = equality.bind(tango)(whiskey);
            whiskey = whiskey.t;
            equality = whiskey.xXb78v;
            whiskey = {};
            whiskey['numSubscriptions'] = variable37;
            whiskey = quebec.bind(variable36)(equality, whiskey);
            sierra['children'] = whiskey;
            sierra = sizing.bind(tango)(lima, sierra);
            target['children'] = sierra;
            target = sizing.bind(tango)(status, target);
            papa[1] = target;
            update['children'] = papa;
            update = zulu.bind(tango)(mike, update);
            echo[1] = update;
            verify['children'] = echo;
            verify = zulu.bind(tango)(foxtrot, verify);
            options[2] = verify;
            echo = source.fractionalState;
            verify = _closure1_slot11;
            foxtrot = verify.NONE;
            verify = null;
            if(!(echo !== foxtrot)) { _fun105117_ip = 1603; continue _fun105117 }
 1551:
            update = _closure1_slot12;
            echo = _closure1_slot1;
            papa = _closure1_slot2;
            foxtrot = 28;
            foxtrot = papa[foxtrot];
            echo = echo.bind(tango)(foxtrot);
            foxtrot = {};
            foxtrot['fpDurationText'] = config;
            foxtrot['isInReverseTrial'] = sequence;
            sequence = kilo.fpCountdownPill;
            foxtrot['style'] = sequence;
            verify = update.bind(tango)(echo, foxtrot);
 1603:
            options[3] = verify;
            update = _closure1_slot12;
            echo = _closure1_slot1;
            foxtrot = _closure1_slot2;
            verify = 29;
            verify = foxtrot[verify];
            echo = echo.bind(tango)(verify);
            verify = {};
            config = kilo.cta;
            sequence = new Array(2);
            sequence[0] = config;
            config = kilo.ctaPrimary;
            sequence[1] = config;
            verify['styles'] = sequence;
            sequence = _closure1_slot0;
            papa = 30;
            foxtrot = foxtrot[papa];
            sequence = sequence.bind(tango)(foxtrot);
            foxtrot = sequence.isThemeDark;
            sequence = foxtrot.bind(sequence)(record);
            target = _closure1_slot1;
            config = _closure1_slot2;
            foxtrot = 31;
            config = config[foxtrot];
            config = target.bind(tango)(config);
            config = config.Colors;
            if(sequence) { _fun105117_ip = 1726; continue _fun105117 }
 1718:
            sequence = config.BRAND;
            _fun105117_ip = 1732; continue _fun105117;
 1726:
            sequence = config.WHITE;
 1732:
            verify['buttonColor'] = sequence;
            config = _closure1_slot0;
            sequence = _closure1_slot2;
            sequence = sequence[papa];
            config = config.bind(tango)(sequence);
            sequence = config.isThemeDark;
            sequence = sequence.bind(config)(record);
            record = _closure1_slot1;
            config = _closure1_slot2;
            config = config[context];
            config = record.bind(tango)(config);
            config = config.unsafe_rawColors;
            if(sequence) { _fun105117_ip = 1798; continue _fun105117 }
 1790:
            sequence = config.WHITE_500;
            _fun105117_ip = 1804; continue _fun105117;
 1798:
            sequence = config.BRAND_500;
 1804:
            verify['buttonTextColor'] = sequence;
            verify['guild'] = vacuum;
            verify['previousGuildSubscriptionSlot'] = control;
            control = _closure1_slot10;
            control = control.HEADER;
            verify['analyticsSection'] = control;
            source = source.fractionalState;
            verify['fractionalPremiumState'] = source;
            verify = update.bind(tango)(echo, verify);
            options[4] = verify;
            golf['children'] = options;
            golf = zulu.bind(tango)(mike, golf);
            echo = new Array(3);
            echo[0] = golf;
            options = _closure1_slot12;
            verify = _closure1_slot1;
            golf = _closure1_slot2;
            update = 32;
            update = golf[update];
            source = verify.bind(tango)(update);
            update = {};
            control = kilo.headerStars;
            update['style'] = control;
            update = options.bind(tango)(source, update);
            echo[1] = update;
            update = 33;
            update = golf[update];
            source = verify.bind(tango)(update);
            update = {};
            control = kilo.headerWave;
            update['style'] = control;
            update = options.bind(tango)(source, update);
            echo[2] = update;
            output['children'] = echo;
            output = zulu.bind(tango)(result, output);
            report['children'] = output;
            yankee = sizing.bind(tango)(yankee, report);
            report = new Array(2);
            report[0] = yankee;
            golf = golf[foxtrot];
            golf = verify.bind(tango)(golf);
            if(oscar) { _fun105117_ip = 2152; continue _fun105117 }
 1995:
            oscar = {};
            yankee = kilo.cta;
            verify = new Array(2);
            verify[0] = yankee;
            yankee = kilo.ctaSecondary;
            verify[1] = yankee;
            oscar['style'] = verify;
            result = _closure1_slot0;
            verify = _closure1_slot2;
            yankee = verify[foxtrot];
            yankee = result.bind(tango)(yankee);
            yankee = yankee.ButtonLooks;
            yankee = yankee.OUTLINED;
            oscar['look'] = yankee;
            yankee = verify[backup];
            yankee = result.bind(tango)(yankee);
            output = yankee.intl;
            sizing = output.string;
            yankee = verify[backup];
            yankee = result.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.pj0XBA;
            yankee = sizing.bind(output)(yankee);
            oscar['text'] = yankee;
            yankee = _closure1_slot1;
            verify = verify[foxtrot];
            verify = yankee.bind(tango)(verify);
            verify = verify.Colors;
            verify = verify.GREY;
            oscar['color'] = verify;
            verify = function() { // Original name: onPress
                tango = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 37;
                zulu = mike[entity];
                entity = undefined;
                report = tango.bind(entity)(zulu);
                tango = report.pushLazy;
                oscar = _closure1_slot0;
                zulu = 39;
                zulu = mike[zulu];
                oscar = oscar.bind(entity)(zulu);
                zulu = 38;
                zulu = mike[zulu];
                mike = mike.paths;
                zulu = oscar.bind(entity)(zulu, mike);
                mike = {};
                oscar = {};
                options = _closure1_slot9;
                options = options.PREMIUM_GUILD_USER_MODAL;
                oscar['page'] = options;
                options = _closure1_slot10;
                options = options.HEADER;
                oscar['section'] = options;
                golf = _closure1_slot8;
                golf = golf.BUTTON_CTA;
                oscar['object'] = golf;
                mike['analyticsLocation'] = oscar;
                oscar = _closure2_slot4;
                mike['analyticsLocations'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            oscar['onPress'] = verify;
            _fun105117_ip = 2319; continue _fun105117;
 2152:
            verify = {};
            sizing = kilo.cta;
            yankee = new Array(2);
            yankee[0] = sizing;
            kilo = kilo.ctaSecondary;
            yankee[1] = kilo;
            verify['style'] = yankee;
            output = _closure1_slot0;
            yankee = _closure1_slot2;
            kilo = yankee[foxtrot];
            kilo = output.bind(tango)(kilo);
            kilo = kilo.ButtonLooks;
            kilo = kilo.OUTLINED;
            verify['look'] = kilo;
            kilo = yankee[backup];
            kilo = output.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = yankee[backup];
            backup = output.bind(tango)(backup);
            backup = backup.t;
            backup = backup.8MYSQ0;
            backup = kilo.bind(sizing)(backup);
            verify['text'] = backup;
            romeo = _closure1_slot1;
            yankee = yankee[foxtrot];
            yankee = romeo.bind(tango)(yankee);
            yankee = yankee.Colors;
            yankee = yankee.GREY;
            verify['color'] = yankee;
            yankee = function() { // Original name: onPress
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                entity = 34;
                mike = tango[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                mike = report.closeApplyBoostModal;
                mike = mike.bind(report)();
                mike = 35;
                mike = tango[mike];
                tango = zulu.bind(entity)(mike);
                zulu = tango.openGiftModal;
                mike = {};
                report = {};
                golf = _closure1_slot9;
                golf = golf.PREMIUM_GUILD_USER_MODAL;
                report['page'] = golf;
                golf = _closure1_slot10;
                golf = golf.HEADER;
                report['section'] = golf;
                oscar = _closure1_slot8;
                oscar = oscar.BUTTON_CTA;
                report['object'] = oscar;
                mike['analyticsLocation'] = report;
                report = _closure2_slot4;
                mike['analyticsLocations'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            verify['onPress'] = yankee;
            offset = function() { // Original name: renderIcon
                tango = _closure1_slot12;
                oscar = _closure1_slot1;
                golf = _closure1_slot2;
                report = 26;
                entity = golf[report];
                zulu = undefined;
                mike = oscar.bind(zulu)(entity);
                entity = {};
                report = golf[report];
                report = oscar.bind(zulu)(report);
                report = report.Sizes;
                report = report.SMALL;
                entity['size'] = report;
                report = 36;
                report = golf[report];
                report = oscar.bind(zulu)(report);
                entity['source'] = report;
                report = _closure2_slot0;
                report = report.giftIcon;
                entity['style'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            verify['renderIcon'] = offset;
            oscar = verify;
 2319:
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();