// app/modules/guild_boosting/native/marketing_redesign/GuildBoostingMarketingProgressBar.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    report = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = report;
    var _closure1_slot2 = golfie;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, michal);
    entity = 0;
    michal = golfie[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    var _closure1_slot3 = michal;
    michal = 1;
    option = golfie[michal];
    michal = argCor;
    michal = michal.bind(entity)(option);
    var _closure1_slot4 = michal;
    backup = 2;
    michal = golfie[backup];
    michal = oscard.bind(entity)(michal);
    michal = michal.View;
    var _closure1_slot5 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = report.bind(entity)(michal);
    var _closure1_slot6 = michal;
    sizing = 4;
    michal = golfie[sizing];
    michal = oscard.bind(entity)(michal);
    report = michal.AppliedGuildBoostsRequiredForBoostedGuildTier;
    var _closure1_slot7 = report;
    option = michal.BoostedGuildTiers;
    var _closure1_slot8 = option;
    michal = 5;
    report = golfie[michal];
    report = oscard.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot9 = report;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.jsxs;
    var _closure1_slot10 = michal;
    michal = 6;
    michal = golfie[michal];
    offset = oscard.bind(entity)(michal);
    verify = offset.createStyles;
    report = {};
    yankee = {'display': 'flex', 'alignItems': 'center', 'width': '100%', 'marginTop': 40};
    michal = 40;
    foxtra = 7;
    romeon = golfie[foxtra];
    romeon = oscard.bind(entity)(romeon);
    romeon = romeon.MARKER_DIMENSIONS;
    kiloes = romeon / backup;
    romeon = 34;
    romeon = kiloes + romeon;
    yankee['paddingHorizontal'] = romeon;
    report['progressBarContainer'] = yankee;
    yankee = {'height': 54, 'maxWidth': 660, 'width': '100%'};
    report['progressBar'] = yankee;
    yankee = {};
    romeon = 8;
    yankee['height'] = romeon;
    kiloes = golfie[foxtra];
    kiloes = oscard.bind(entity)(kiloes);
    kiloes = kiloes.MARKER_DIMENSIONS;
    kiloes = kiloes / backup;
    kiloes = kiloes - sizing;
    yankee['top'] = kiloes;
    foxtra = golfie[foxtra];
    foxtra = oscard.bind(entity)(foxtra);
    foxtra = foxtra.MARKER_DIMENSIONS;
    foxtra = foxtra / backup;
    foxtra = foxtra + backup;
    yankee['marginHorizontal'] = foxtra;
    report['progressBarScrubber'] = yankee;
    yankee = {'borderRadius': 8, 'height': '100%', 'width': '100%', 'position': 'absolute', 'zIndex': 0};
    romeon = golfie[romeon];
    romeon = oscard.bind(entity)(romeon);
    romeon = romeon.DARK_WHITE_500_WITH_OPACITY_LIGHT_PRIMARY_160;
    yankee['backgroundColor'] = romeon;
    report['progressBarTrack'] = yankee;
    yankee = {'borderRadius': 8, 'position': 'absolute', 'height': '100%', 'left': 0, 'zIndex': 1};
    report['progressBarFill'] = yankee;
    yankee = {'height': '100%', 'width': '100%', 'borderRadius': 8};
    report['progressBarGradientFill'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot11 = report;
    verify = option.NONE;
    report = new Array(4);
    report[0] = verify;
    verify = option.TIER_1;
    report[1] = verify;
    verify = option.TIER_2;
    report[2] = verify;
    option = option.TIER_3;
    report[3] = option;
    var _closure1_slot12 = report;
    report = {'stiffness': 27, 'damping': 10};
    var _closure1_slot13 = report;
    report = {};
    option = 'function GuildBoostingMarketingProgressBarTsx1(){const{width}=this.__closure;return{width:width.get()+"%"};}';
    report['code'] = option;
    var _closure1_slot14 = report;
    report = {};
    option = 'function GuildBoostingMarketingProgressBarTsx2(){const{width}=this.__closure;return width.get();}';
    report['code'] = option;
    var _closure1_slot15 = report;
    report = {};
    option = 'function GuildBoostingMarketingProgressBarTsx3(width){const{BoostedGuildTiers,TIER_REACHED_OFFSET,revealedTier,runOnJS,setRevealedTier}=this.__closure;let tier=BoostedGuildTiers.NONE;if(width>=33.33-TIER_REACHED_OFFSET)tier=BoostedGuildTiers.TIER_1;if(width>=66.67-TIER_REACHED_OFFSET)tier=BoostedGuildTiers.TIER_2;if(width>=100-TIER_REACHED_OFFSET)tier=BoostedGuildTiers.TIER_3;if(tier!==revealedTier)runOnJS(setRevealedTier)(tier);}';
    report['code'] = option;
    var _closure1_slot16 = report;
    report = 17;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/guild_boosting/native/marketing_redesign/GuildBoostingMarketingProgressBar.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: ProgressBar
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            romeon = entity.guild;
            var _closure2_slot0 = romeon;
            tangon = undefined;
            var _closure2_slot2 = tangon;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            var _closure2_slot5 = tangon;
            entity = _closure1_slot11;
            backup = entity.bind(tangon)();
            report = _closure1_slot1;
            sizing = _closure1_slot2;
            entity = 9;
            entity = sizing[entity];
            entity = report.bind(tangon)(entity);
            output = entity.bind(tangon)();
            kiloes = _closure1_slot0;
            entity = 10;
            entity = sizing[entity];
            oscard = kiloes.bind(tangon)(entity);
            zuuluu = oscard.useStateFromStores;
            entity = _closure1_slot6;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                entity = _closure1_slot6;
                entity = entity.useReducedMotion;
                return entity;
            };
            entity = zuuluu.bind(oscard)(michal, entity);
            var _closure2_slot1 = entity;
            michal = global;
            yankee = michal.Math;
            offset = yankee.min;
            golfie = _closure1_slot8;
            oscard = golfie.TIER_3;
            michal = romeon.premiumTier;
            zuuluu = 1;
            michal = michal + zuuluu;
            foxtra = offset.bind(yankee)(oscard, michal);
            michal = _closure1_slot7;
            oscard = romeon.premiumTier;
            yankee = michal[oscard];
            oscard = michal[foxtra];
            michal = 11;
            michal = sizing[michal];
            report = report.bind(tangon)(michal);
            michal = romeon.id;
            michal = report.bind(tangon)(michal);
            offset = michal.available;
            michal = 7;
            report = sizing[michal];
            report = kiloes.bind(tangon)(report);
            result = report.TierMarkerPositions;
            report = romeon.premiumTier;
            report = result[report];
            michal = sizing[michal];
            michal = kiloes.bind(tangon)(michal);
            michal = michal.TierMarkerPositions;
            michal = michal[foxtra];
            foxtra = romeon.premiumTier;
            romeon = golfie.TIER_3;
            golfie = zuuluu;
            if(!(foxtra !== romeon)) { _fun00002_ip = 295; continue _fun00001 }
 271:
            offset = offset - yankee;
            oscard = oscard - yankee;
            oscard = offset / oscard;
            michal = michal - report;
            michal = oscard * michal;
            golfie = michal + report;
 295:
            _closure2_slot2 = golfie;
            sizing = _closure1_slot0;
            result = _closure1_slot2;
            offset = 12;
            michal = result[offset];
            report = sizing.bind(tangon)(michal);
            michal = report.useSharedValue;
            yankee = 0;
            oscard = michal.bind(report)(yankee);
            _closure2_slot3 = oscard;
            report = _closure1_slot4;
            romeon = report.useState;
            source = _closure1_slot8;
            michal = source.NONE;
            foxtra = romeon.bind(report)(michal);
            romeon = _closure1_slot3;
            michal = 2;
            michal = romeon.bind(tangon)(foxtra, michal);
            update = michal[yankee];
            _closure2_slot4 = update;
            echoed = michal[zuuluu];
            _closure2_slot5 = echoed;
            michal = result[offset];
            yankee = sizing.bind(tangon)(michal);
            zuuluu = yankee.useAnimatedStyle;
            michal = function() { // Original name: S
                entity = {};
                zuuluu = _closure2_slot3;
                michal = zuuluu.get;
                report = michal.bind(zuuluu)();
                michal = global;
                michal = michal.HermesInternal;
                tangon = michal.concat;
                zuuluu = '';
                michal = '%';
                michal = tangon.bind(zuuluu)(report, michal);
                entity['width'] = michal;
                return entity;
            };
            romeon = {};
            romeon['width'] = oscard;
            michal['__closure'] = romeon;
            romeon = 8013193810386.0;
            michal['__workletHash'] = romeon;
            romeon = _closure1_slot14;
            michal['__initData'] = romeon;
            kiloes = zuuluu.bind(yankee)(michal);
            michal = result[offset];
            romeon = sizing.bind(tangon)(michal);
            yankee = romeon.useAnimatedReaction;
            zuuluu = function() { // Original name: f
                michal = _closure2_slot3;
                entity = michal.get;
                entity = entity.bind(michal)();
                return entity;
            };
            michal = {};
            michal['width'] = oscard;
            zuuluu['__closure'] = michal;
            michal = 5482324713221.0;
            zuuluu['__workletHash'] = michal;
            michal = _closure1_slot15;
            zuuluu['__initData'] = michal;
            michal = function(argFoo) { // Original name: w
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = argFoo;
                    entity = _closure1_slot8;
                    zuuluu = entity.NONE;
                    entity = 28.33;
                    if(!(tangon >= entity)) { _fun00004_ip = 40; continue _fun00003 }
 30:
                    entity = _closure1_slot8;
                    zuuluu = entity.TIER_1;
 40:
                    entity = 61.67;
                    if(!(tangon >= entity)) { _fun00004_ip = 64; continue _fun00003 }
 54:
                    entity = _closure1_slot8;
                    zuuluu = entity.TIER_2;
 64:
                    entity = 95;
                    if(!(tangon >= entity)) { _fun00004_ip = 81; continue _fun00003 }
 71:
                    entity = _closure1_slot8;
                    zuuluu = entity.TIER_3;
 81:
                    tangon = _closure2_slot4;
                    if(!(zuuluu !== tangon)) { _fun00004_ip = 133; continue _fun00003 }
 92:
                    report = _closure1_slot0;
                    tangon = _closure1_slot2;
                    michal = 12;
                    tangon = tangon[michal];
                    michal = undefined;
                    report = report.bind(michal)(tangon);
                    tangon = report.runOnJS;
                    entity = _closure2_slot5;
                    entity = tangon.bind(report)(entity);
                    entity = entity.bind(michal)(zuuluu);
 133:
                    entity = undefined;
                    return entity;
                }
            };
            foxtra = {};
            foxtra['BoostedGuildTiers'] = source;
            source = 5;
            foxtra['TIER_REACHED_OFFSET'] = source;
            foxtra['revealedTier'] = update;
            update = result[offset];
            update = sizing.bind(tangon)(update);
            update = update.runOnJS;
            foxtra['runOnJS'] = update;
            foxtra['setRevealedTier'] = echoed;
            michal['__closure'] = foxtra;
            foxtra = 4844648302516.0;
            michal['__workletHash'] = foxtra;
            foxtra = _closure1_slot16;
            michal['__initData'] = foxtra;
            michal = yankee.bind(romeon)(zuuluu, michal);
            zuuluu = report.useEffect;
            michal = new Array(3);
            michal[0] = golfie;
            michal[1] = oscard;
            michal[2] = entity;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    tangon = _closure2_slot2;
                    zuuluu = 100;
                    tangon = zuuluu * tangon;
                    var _closure3_slot0 = tangon;
                    zuuluu = -1;
                    var _closure3_slot1 = zuuluu;
                    zuuluu = _closure2_slot1;
                    if(zuuluu) { _fun00006_ip = 72; continue _fun00005 }
 37:
                    zuuluu = global;
                    golfie = zuuluu.setTimeout;
                    oscard = undefined;
                    report = function() {
                        tangon = _closure2_slot3;
                        zuuluu = tangon.set;
                        oscard = _closure1_slot0;
                        report = _closure1_slot2;
                        entity = 13;
                        report = report[entity];
                        entity = undefined;
                        golfie = oscard.bind(entity)(report);
                        oscard = golfie.withSpring;
                        report = _closure3_slot0;
                        michal = _closure1_slot13;
                        michal = oscard.bind(golfie)(report, michal);
                        michal = zuuluu.bind(tangon)(michal);
                        return entity;
                    };
                    zuuluu = 750;
                    zuuluu = golfie.bind(oscard)(report, zuuluu);
                    _closure3_slot1 = zuuluu;
                    _fun00006_ip = 86; continue _fun00005;
 72:
                    zuuluu = _closure2_slot3;
                    michal = zuuluu.set;
                    michal = michal.bind(zuuluu)(tangon);
 86:
                    entity = function() {
                        entity = global;
                        zuuluu = entity.window;
                        michal = zuuluu.clearTimeout;
                        entity = _closure3_slot1;
                        entity = michal.bind(zuuluu)(entity);
                        entity = undefined;
                        return entity;
                    };
                    return entity;
                }
            };
            entity = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot9;
            michal = _closure1_slot5;
            entity = {};
            report = backup.progressBarContainer;
            entity['style'] = report;
            oscard = _closure1_slot10;
            report = {};
            golfie = backup.progressBar;
            report['style'] = golfie;
            golfie = {};
            yankee = backup.progressBarScrubber;
            golfie['style'] = yankee;
            foxtra = _closure1_slot1;
            offset = result[offset];
            offset = foxtra.bind(tangon)(offset);
            yankee = offset.View;
            offset = {};
            echoed = backup.progressBarFill;
            romeon = new Array(2);
            romeon[0] = echoed;
            romeon[1] = kiloes;
            offset['style'] = romeon;
            romeon = 14;
            romeon = result[romeon];
            foxtra = foxtra.bind(tangon)(romeon);
            romeon = {'useAngle': true, 'angle': 90};
            kiloes = 15;
            kiloes = result[kiloes];
            sizing = sizing.bind(tangon)(kiloes);
            kiloes = sizing.isThemeDark;
            kiloes = kiloes.bind(sizing)(output);
            sizing = '#515359';
            if(kiloes) { _fun00002_ip = 818; continue _fun00001 }
 787:
            output = _closure1_slot1;
            result = _closure1_slot2;
            kiloes = 16;
            kiloes = result[kiloes];
            kiloes = output.bind(tangon)(kiloes);
            kiloes = kiloes.unsafe_rawColors;
            sizing = kiloes.PRIMARY_160;
 818:
            kiloes = new Array(2);
            kiloes[0] = sizing;
            sizing = '#AB77F2';
            kiloes[1] = sizing;
            romeon['colors'] = kiloes;
            kiloes = [0.1577, 0.9905];
            romeon['locations'] = kiloes;
            kiloes = backup.progressBarGradientFill;
            romeon['style'] = kiloes;
            romeon = zuuluu.bind(tangon)(foxtra, romeon);
            offset['children'] = romeon;
            yankee = zuuluu.bind(tangon)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            foxtra = _closure1_slot9;
            romeon = _closure1_slot5;
            yankee = {};
            backup = backup.progressBarTrack;
            yankee['style'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            offset[1] = yankee;
            golfie['children'] = offset;
            offset = oscard.bind(tangon)(michal, golfie);
            golfie = new Array(2);
            golfie[0] = offset;
            offset = _closure1_slot12;
            verify = offset.map;
            option = function(argFoo) {
                report = argFoo;
                tangon = _closure1_slot9;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 7;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                golfie = _closure2_slot0;
                entity['guild'] = golfie;
                entity['tier'] = report;
                golfie = _closure2_slot4;
                entity['revealedTier'] = golfie;
                oscard = _closure2_slot1;
                entity['useReducedMotion'] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            };
            option = verify.bind(offset)(option);
            golfie[1] = option;
            report['children'] = golfie;
            report = oscard.bind(tangon)(michal, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['PROGRESS_BAR_SPACING'] = michal;
    return entity;
})();