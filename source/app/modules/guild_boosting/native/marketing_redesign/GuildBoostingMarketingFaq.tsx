// app/modules/guild_boosting/native/marketing_redesign/GuildBoostingMarketingFaq.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    offset = 1;
    golf = oscar[offset];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.HelpdeskArticles;
    var _closure1_slot6 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'alignSelf': 'center', 'marginTop': 50, 'marginBottom': null, 'maxWidth': 800, 'paddingHorizontal': 16, 'width': '100%'};
    foxtrot = 6;
    yankee = oscar[foxtrot];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.VISIBILITY_OFFSET;
    verify['marginBottom'] = yankee;
    backup = 16;
    tango['wrapper'] = verify;
    verify = {};
    yankee = 7;
    kilo = oscar[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = kilo;
    kilo = oscar[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.sm;
    verify['borderRadius'] = kilo;
    verify['paddingHorizontal'] = backup;
    backup = 28;
    verify['paddingVertical'] = backup;
    tango['content'] = verify;
    verify = {'marginBottom': 20, 'textAlign': 'center'};
    tango['heading'] = verify;
    verify = {};
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INTERACTIVE_MUTED;
    verify['borderTopColor'] = backup;
    verify['borderTopWidth'] = offset;
    tango['list'] = verify;
    verify = {};
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INTERACTIVE_MUTED;
    verify['borderBottomColor'] = backup;
    verify['borderBottomWidth'] = offset;
    tango['listItem'] = verify;
    offset = 10;
    verify = {'display': 'flex', 'flexDirection': 'row', 'paddingVertical': 10};
    tango['questionWrapper'] = verify;
    verify = {};
    verify['paddingBottom'] = foxtrot;
    tango['questionWrapperExpanded'] = verify;
    verify = {'flexGrow': 1, 'flexShrink': 1, 'paddingRight': 8};
    tango['question'] = verify;
    verify = {'flexGrow': 0, 'flexShrink': 0};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.INTERACTIVE_MUTED;
    verify['tintColor'] = yankee;
    tango['questionIcon'] = verify;
    verify = {};
    romeo = {};
    yankee = '45deg';
    romeo['rotate'] = yankee;
    yankee = new Array(1);
    yankee[0] = romeo;
    verify['transform'] = yankee;
    tango['questionIconExpanded'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tango['answer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    golf = {};
    tango = function() { // Original name: getQuestion
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 8;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.C4J8UF;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    golf['getQuestion'] = tango;
    tango = function() { // Original name: getAnswer
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 8;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.nhkk6u;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    golf['getAnswer'] = tango;
    tango = new Array(4);
    tango[0] = golf;
    golf = {};
    options = function() { // Original name: getQuestion
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 8;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.ai4ym5;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    golf['getQuestion'] = options;
    options = function() { // Original name: getAnswer
        mike = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 8;
        zulu = verify[entity];
        options = undefined;
        zulu = mike.bind(options)(zulu);
        tango = zulu.intl;
        zulu = tango.format;
        entity = verify[entity];
        entity = mike.bind(options)(entity);
        entity = entity.t;
        mike = entity.8zlqlJ;
        entity = {};
        golf = _closure1_slot1;
        oscar = 9;
        oscar = verify[oscar];
        golf = golf.bind(options)(oscar);
        oscar = golf.getArticleURL;
        report = _closure1_slot6;
        report = report.GUILD_BOOSTING_FAQ;
        report = oscar.bind(golf)(report);
        entity['helpCenterUrl'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    golf['getAnswer'] = options;
    tango[1] = golf;
    golf = {};
    options = function() { // Original name: getQuestion
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 8;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.kMVGsL;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    golf['getQuestion'] = options;
    options = function() { // Original name: getAnswer
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 8;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.Vz/SCQ;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    golf['getAnswer'] = options;
    tango[2] = golf;
    golf = {};
    options = function() { // Original name: getQuestion
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 8;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.kYmXWF;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    golf['getQuestion'] = options;
    options = function() { // Original name: getAnswer
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 8;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.+OURPj;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    golf['getAnswer'] = options;
    tango[3] = golf;
    var _closure1_slot10 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_boosting/native/marketing_redesign/GuildBoostingMarketingFaq.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: GuildBoostingMarketingFaq
        entity = _closure1_slot9;
        tango = undefined;
        yankee = entity.bind(tango)();
        var _closure2_slot0 = yankee;
        zulu = _closure1_slot4;
        mike = zulu.useState;
        entity = null;
        zulu = mike.bind(zulu)(entity);
        mike = _closure1_slot3;
        entity = 2;
        mike = mike.bind(tango)(zulu, entity);
        entity = 0;
        entity = mike[entity];
        var _closure2_slot1 = entity;
        entity = 1;
        entity = mike[entity];
        var _closure2_slot2 = entity;
        zulu = _closure1_slot7;
        mike = _closure1_slot5;
        entity = {};
        report = yankee.wrapper;
        entity['style'] = report;
        oscar = _closure1_slot8;
        report = {};
        golf = yankee.content;
        report['style'] = golf;
        kilo = _closure1_slot0;
        sizing = _closure1_slot2;
        golf = 10;
        golf = sizing[golf];
        golf = kilo.bind(tango)(golf);
        options = golf.Text;
        golf = {};
        romeo = yankee.heading;
        golf['style'] = romeo;
        romeo = 'heading-xxl/bold';
        golf['variant'] = romeo;
        romeo = 8;
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.string;
        romeo = sizing[romeo];
        romeo = kilo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.HPJ6Nj;
        romeo = foxtrot.bind(backup)(romeo);
        golf['children'] = romeo;
        options = zulu.bind(tango)(options, golf);
        golf = new Array(2);
        golf[0] = options;
        options = {};
        yankee = yankee.list;
        options['style'] = yankee;
        yankee = _closure1_slot10;
        offset = yankee.map;
        verify = function(argFoo, argBar) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                romeo = argFoo;
                report = argBar;
                var _closure3_slot0 = report;
                entity = _closure2_slot1;
                golf = entity === report;
                tango = _closure1_slot8;
                zulu = _closure1_slot5;
                mike = {};
                foxtrot = _closure2_slot0;
                entity = foxtrot.listItem;
                mike['style'] = entity;
                verify = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 11;
                oscar = oscar[entity];
                entity = undefined;
                oscar = verify.bind(entity)(oscar);
                verify = oscar.PressableOpacity;
                oscar = {};
                backup = foxtrot.questionWrapper;
                foxtrot = new Array(2);
                foxtrot[0] = backup;
                backup = golf;
                if(!golf) { _fun00002_ip = 110; continue _fun00001 }
 100:
                kilo = _closure2_slot0;
                backup = kilo.questionWrapperExpanded;
 110:
                foxtrot[1] = backup;
                oscar['style'] = foxtrot;
                offset = function() { // Original name: onPress
                    zulu = _closure2_slot2;
                    mike = undefined;
                    entity = function(argFoo) {
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            tango = _closure3_slot0;
                            zulu = argFoo;
                            entity = null;
                            if(!(zulu !== tango)) { _fun00004_ip = 20; continue _fun00003 }
 16:
                            entity = _closure3_slot0;
 20:
                            return entity;
                        }
                    };
                    entity = zulu.bind(mike)(entity);
                    return entity;
                };
                oscar['onPress'] = offset;
                kilo = _closure1_slot7;
                backup = _closure1_slot0;
                offset = _closure1_slot2;
                foxtrot = 10;
                offset = offset[foxtrot];
                offset = backup.bind(entity)(offset);
                backup = offset.Text;
                offset = {};
                sizing = 'interactive-normal';
                if(!golf) { _fun00002_ip = 175; continue _fun00001 }
 169:
                sizing = 'interactive-active';
 175:
                offset['color'] = sizing;
                output = _closure2_slot0;
                sizing = output.question;
                offset['style'] = sizing;
                sizing = 'text-md/normal';
                offset['variant'] = sizing;
                sizing = romeo.getQuestion;
                sizing = sizing.bind(romeo)();
                offset['children'] = sizing;
                backup = kilo.bind(entity)(backup, offset);
                offset = new Array(2);
                offset[0] = backup;
                sizing = _closure1_slot7;
                echo = _closure1_slot1;
                update = _closure1_slot2;
                backup = 12;
                backup = update[backup];
                kilo = echo.bind(entity)(backup);
                backup = {};
                result = 13;
                result = update[result];
                result = echo.bind(entity)(result);
                backup['source'] = result;
                result = output.questionIcon;
                output = new Array(2);
                output[0] = result;
                result = golf;
                if(!golf) { _fun00002_ip = 303; continue _fun00001 }
 293:
                echo = _closure2_slot0;
                result = echo.questionIconExpanded;
 303:
                output[1] = result;
                backup['style'] = output;
                backup = sizing.bind(entity)(kilo, backup);
                offset[1] = backup;
                oscar['children'] = offset;
                verify = tango.bind(entity)(verify, oscar);
                oscar = new Array(2);
                oscar[0] = verify;
                if(!golf) { _fun00002_ip = 418; continue _fun00001 }
 342:
                offset = _closure1_slot7;
                verify = _closure1_slot0;
                options = _closure1_slot2;
                options = options[foxtrot];
                options = verify.bind(entity)(options);
                verify = options.Text;
                options = {'style': null, 'color': 'interactive-active', 'variant': 'text-sm/normal'};
                yankee = _closure2_slot0;
                yankee = yankee.answer;
                options['style'] = yankee;
                yankee = romeo.getAnswer;
                yankee = yankee.bind(romeo)();
                options['children'] = yankee;
                golf = offset.bind(entity)(verify, options);
 418:
                oscar[1] = golf;
                mike['children'] = oscar;
                entity = tango.bind(entity)(zulu, mike, report);
                return entity;
            }
        };
        verify = offset.bind(yankee)(verify);
        options['children'] = verify;
        options = zulu.bind(tango)(mike, options);
        golf[1] = options;
        report['children'] = golf;
        report = oscar.bind(tango)(mike, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();