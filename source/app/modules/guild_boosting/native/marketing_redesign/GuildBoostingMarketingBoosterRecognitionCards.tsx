// app/modules/guild_boosting/native/marketing_redesign/GuildBoostingMarketingBoosterRecognitionCards.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: Card
        entity = argFoo;
        mike = _closure1_slot6;
        tango = undefined;
        offset = mike.bind(tango)();
        backup = entity.IconComponent;
        verify = entity.children;
        zulu = _closure1_slot5;
        mike = _closure1_slot3;
        entity = {};
        report = offset.card;
        entity['style'] = report;
        options = _closure1_slot4;
        golf = _closure1_slot3;
        report = {};
        yankee = offset.iconContainer;
        report['style'] = yankee;
        foxtrot = _closure1_slot4;
        romeo = {};
        yankee = 'lg';
        romeo['size'] = yankee;
        sizing = _closure1_slot1;
        yankee = _closure1_slot2;
        kilo = 4;
        kilo = yankee[kilo];
        kilo = sizing.bind(tango)(kilo);
        kilo = kilo.unsafe_rawColors;
        kilo = kilo.GUILD_BOOSTING_PINK;
        romeo['color'] = kilo;
        romeo = foxtrot.bind(tango)(backup, romeo);
        report['children'] = romeo;
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        options = _closure1_slot4;
        golf = _closure1_slot0;
        oscar = 5;
        oscar = yankee[oscar];
        oscar = golf.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {};
        offset = offset.description;
        oscar['style'] = offset;
        offset = 'text-sm/medium';
        oscar['variant'] = offset;
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot8 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    verify = report.bind(entity)(golf);
    options = verify.createStyles;
    golf = {};
    offset = {'minHeight': 124, 'width': 172, 'backgroundColor': null, 'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center', 'margin': 5, 'borderRadius': null, 'paddingHorizontal': 13, 'paddingVertical': 16};
    romeo = 4;
    yankee = oscar[romeo];
    yankee = foxtrot.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = yankee;
    yankee = 'center';
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    offset['borderRadius'] = romeo;
    golf['card'] = offset;
    offset = {};
    offset['textAlign'] = yankee;
    golf['description'] = offset;
    offset = {'height': 30, 'marginBottom': 10};
    golf['iconContainer'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    tango = {'marginTop': 50, 'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center'};
    golf['container'] = tango;
    tango = {'textAlign': 'center', 'marginHorizontal': 34};
    golf['title'] = tango;
    tango = 15;
    offset = {'marginTop': 15, 'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'center', 'flexWrap': 'wrap'};
    golf['recognitionCardsContainer'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_boosting/native/marketing_redesign/GuildBoostingMarketingBoosterRecognitionCards.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: GuildBoostingMarketingBoosterRecognitionCards
        entity = _closure1_slot7;
        tango = undefined;
        verify = entity.bind(tango)();
        zulu = _closure1_slot5;
        mike = _closure1_slot3;
        entity = {};
        report = verify.container;
        entity['style'] = report;
        golf = _closure1_slot4;
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        report = 5;
        report = output[report];
        report = sizing.bind(tango)(report);
        oscar = report.Text;
        report = {};
        options = 'heading-xl/extrabold';
        report['variant'] = options;
        options = verify.title;
        report['style'] = options;
        foxtrot = 6;
        options = output[foxtrot];
        options = sizing.bind(tango)(options);
        romeo = options.intl;
        yankee = romeo.string;
        options = output[foxtrot];
        options = sizing.bind(tango)(options);
        options = options.t;
        options = options.IzKs3t;
        options = yankee.bind(romeo)(options);
        report['children'] = options;
        oscar = golf.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        options = _closure1_slot5;
        golf = _closure1_slot3;
        oscar = {};
        verify = verify.recognitionCardsContainer;
        oscar['style'] = verify;
        yankee = _closure1_slot4;
        romeo = _closure1_slot8;
        verify = {};
        kilo = _closure1_slot1;
        backup = 7;
        backup = output[backup];
        backup = kilo.bind(tango)(backup);
        verify['icon'] = backup;
        backup = 8;
        backup = output[backup];
        backup = sizing.bind(tango)(backup);
        backup = backup.BoostTier2Icon;
        verify['IconComponent'] = backup;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        echo = backup.intl;
        result = echo.string;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        backup = backup.t;
        backup = backup.TZigSE;
        backup = result.bind(echo)(backup);
        verify['children'] = backup;
        yankee = yankee.bind(tango)(romeo, verify);
        verify = new Array(4);
        verify[0] = yankee;
        backup = _closure1_slot4;
        yankee = {};
        result = 9;
        result = output[result];
        result = kilo.bind(tango)(result);
        yankee['icon'] = result;
        result = 10;
        result = output[result];
        result = sizing.bind(tango)(result);
        result = result.BoostTier3Icon;
        yankee['IconComponent'] = result;
        result = output[foxtrot];
        result = sizing.bind(tango)(result);
        update = result.intl;
        echo = update.string;
        result = output[foxtrot];
        result = sizing.bind(tango)(result);
        result = result.t;
        result = result.hjQuV1;
        result = echo.bind(update)(result);
        yankee['children'] = result;
        yankee = backup.bind(tango)(romeo, yankee);
        verify[1] = yankee;
        backup = _closure1_slot4;
        yankee = {};
        result = 11;
        result = output[result];
        result = kilo.bind(tango)(result);
        yankee['icon'] = result;
        result = 12;
        result = output[result];
        result = sizing.bind(tango)(result);
        result = result.ShieldUserIcon;
        yankee['IconComponent'] = result;
        result = output[foxtrot];
        result = sizing.bind(tango)(result);
        update = result.intl;
        echo = update.string;
        result = output[foxtrot];
        result = sizing.bind(tango)(result);
        result = result.t;
        result = result.2RUcaG;
        result = echo.bind(update)(result);
        yankee['children'] = result;
        yankee = backup.bind(tango)(romeo, yankee);
        verify[2] = yankee;
        yankee = _closure1_slot4;
        offset = {};
        backup = 13;
        backup = output[backup];
        backup = kilo.bind(tango)(backup);
        offset['icon'] = backup;
        backup = 14;
        backup = output[backup];
        backup = sizing.bind(tango)(backup);
        backup = backup.HeartIcon;
        offset['IconComponent'] = backup;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = output[foxtrot];
        foxtrot = sizing.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.bJoZKS;
        foxtrot = backup.bind(kilo)(foxtrot);
        offset['children'] = foxtrot;
        offset = yankee.bind(tango)(romeo, offset);
        verify[3] = offset;
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();