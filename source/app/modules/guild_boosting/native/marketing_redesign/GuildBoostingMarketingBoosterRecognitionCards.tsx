// app/modules/guild_boosting/native/marketing_redesign/GuildBoostingMarketingBoosterRecognitionCards.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: Card
        entity = argFoo;
        michal = _closure1_slot6;
        tangon = undefined;
        offset = michal.bind(tangon)();
        backup = entity.IconComponent;
        verify = entity.children;
        zuuluu = _closure1_slot5;
        michal = _closure1_slot3;
        entity = {};
        report = offset.card;
        entity['style'] = report;
        option = _closure1_slot4;
        golfie = _closure1_slot3;
        report = {};
        yankee = offset.iconContainer;
        report['style'] = yankee;
        foxtra = _closure1_slot4;
        romeon = {};
        yankee = 'lg';
        romeon['size'] = yankee;
        sizing = _closure1_slot1;
        yankee = _closure1_slot2;
        kiloes = 4;
        kiloes = yankee[kiloes];
        kiloes = sizing.bind(tangon)(kiloes);
        kiloes = kiloes.unsafe_rawColors;
        kiloes = kiloes.GUILD_BOOSTING_PINK;
        romeon['color'] = kiloes;
        romeon = foxtra.bind(tangon)(backup, romeon);
        report['children'] = romeon;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        option = _closure1_slot4;
        golfie = _closure1_slot0;
        oscard = 5;
        oscard = yankee[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {};
        offset = offset.description;
        oscard['style'] = offset;
        offset = 'text-sm/medium';
        oscard['variant'] = offset;
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot8 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = {};
    offset = {'minHeight': 124, 'width': 172, 'backgroundColor': null, 'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center', 'margin': 5, 'borderRadius': null, 'paddingHorizontal': 13, 'paddingVertical': 16};
    romeon = 4;
    yankee = oscard[romeon];
    yankee = foxtra.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = yankee;
    yankee = 'center';
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    offset['borderRadius'] = romeon;
    golfie['card'] = offset;
    offset = {};
    offset['textAlign'] = yankee;
    golfie['description'] = offset;
    offset = {'height': 30, 'marginBottom': 10};
    golfie['iconContainer'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    tangon = {'marginTop': 50, 'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center'};
    golfie['container'] = tangon;
    tangon = {'textAlign': 'center', 'marginHorizontal': 34};
    golfie['title'] = tangon;
    tangon = 15;
    offset = {'marginTop': 15, 'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'center', 'flexWrap': 'wrap'};
    golfie['recognitionCardsContainer'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_boosting/native/marketing_redesign/GuildBoostingMarketingBoosterRecognitionCards.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: GuildBoostingMarketingBoosterRecognitionCards
        entity = _closure1_slot7;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        michal = _closure1_slot3;
        entity = {};
        report = verify.container;
        entity['style'] = report;
        golfie = _closure1_slot4;
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        report = 5;
        report = output[report];
        report = sizing.bind(tangon)(report);
        oscard = report.Text;
        report = {};
        option = 'heading-xl/extrabold';
        report['variant'] = option;
        option = verify.title;
        report['style'] = option;
        foxtra = 6;
        option = output[foxtra];
        option = sizing.bind(tangon)(option);
        romeon = option.intl;
        yankee = romeon.string;
        option = output[foxtra];
        option = sizing.bind(tangon)(option);
        option = option.t;
        option = option.IzKs3t;
        option = yankee.bind(romeon)(option);
        report['children'] = option;
        oscard = golfie.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        option = _closure1_slot5;
        golfie = _closure1_slot3;
        oscard = {};
        verify = verify.recognitionCardsContainer;
        oscard['style'] = verify;
        yankee = _closure1_slot4;
        romeon = _closure1_slot8;
        verify = {};
        kiloes = _closure1_slot1;
        backup = 7;
        backup = output[backup];
        backup = kiloes.bind(tangon)(backup);
        verify['icon'] = backup;
        backup = 8;
        backup = output[backup];
        backup = sizing.bind(tangon)(backup);
        backup = backup.BoostTier2Icon;
        verify['IconComponent'] = backup;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        echoed = backup.intl;
        result = echoed.string;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.TZigSE;
        backup = result.bind(echoed)(backup);
        verify['children'] = backup;
        yankee = yankee.bind(tangon)(romeon, verify);
        verify = new Array(4);
        verify[0] = yankee;
        backup = _closure1_slot4;
        yankee = {};
        result = 9;
        result = output[result];
        result = kiloes.bind(tangon)(result);
        yankee['icon'] = result;
        result = 10;
        result = output[result];
        result = sizing.bind(tangon)(result);
        result = result.BoostTier3Icon;
        yankee['IconComponent'] = result;
        result = output[foxtra];
        result = sizing.bind(tangon)(result);
        update = result.intl;
        echoed = update.string;
        result = output[foxtra];
        result = sizing.bind(tangon)(result);
        result = result.t;
        result = result.hjQuV1;
        result = echoed.bind(update)(result);
        yankee['children'] = result;
        yankee = backup.bind(tangon)(romeon, yankee);
        verify[1] = yankee;
        backup = _closure1_slot4;
        yankee = {};
        result = 11;
        result = output[result];
        result = kiloes.bind(tangon)(result);
        yankee['icon'] = result;
        result = 12;
        result = output[result];
        result = sizing.bind(tangon)(result);
        result = result.ShieldUserIcon;
        yankee['IconComponent'] = result;
        result = output[foxtra];
        result = sizing.bind(tangon)(result);
        update = result.intl;
        echoed = update.string;
        result = output[foxtra];
        result = sizing.bind(tangon)(result);
        result = result.t;
        result = result.2RUcaG;
        result = echoed.bind(update)(result);
        yankee['children'] = result;
        yankee = backup.bind(tangon)(romeon, yankee);
        verify[2] = yankee;
        yankee = _closure1_slot4;
        offset = {};
        backup = 13;
        backup = output[backup];
        backup = kiloes.bind(tangon)(backup);
        offset['icon'] = backup;
        backup = 14;
        backup = output[backup];
        backup = sizing.bind(tangon)(backup);
        backup = backup.HeartIcon;
        offset['IconComponent'] = backup;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = output[foxtra];
        foxtra = sizing.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.bJoZKS;
        foxtra = backup.bind(kiloes)(foxtra);
        offset['children'] = foxtra;
        offset = yankee.bind(tangon)(romeon, offset);
        verify[3] = offset;
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();