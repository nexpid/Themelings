// app/modules/guild_boosting/native/marketing_redesign/GuildBoostingMarketingPersistentCta.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticsSections;
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = {'stiffness': 70, 'damping': 10};
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    tangon = {'display': 'flex', 'alignItems': 'center', 'position': 'absolute', 'width': '100%', 'zIndex': 1, 'bottom': 4294967220};
    golfie['wrapper'] = tangon;
    offset = {'backgroundColor': null, 'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'position': 'relative', 'height': 76, 'width': 343, 'borderRadius': 76, 'paddingLeft': 13, 'paddingVertical': 13, 'paddingRight': 27};
    tangon = 6;
    romeon = oscard[tangon];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY_ALT;
    offset['backgroundColor'] = romeon;
    golfie['innerWraper'] = offset;
    offset = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'flex': 1, 'marginRight': 10};
    golfie['guildInfoContainer'] = offset;
    offset = {'backgroundColor': null, 'marginRight': 10, 'height': 50, 'width': 50, 'borderRadius': 25};
    romeon = oscard[tangon];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = romeon;
    golfie['guildIcon'] = offset;
    offset = {};
    romeon = oscard[tangon];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.HEADER_PRIMARY;
    offset['color'] = romeon;
    golfie['guildIconText'] = offset;
    offset = {'flexGrow': 1, 'flexShrink': 1, 'flexBasis': 'auto'};
    golfie['guildName'] = offset;
    offset = {};
    romeon = 40;
    offset['height'] = romeon;
    golfie['buttonContainer'] = offset;
    offset = {'backgroundColor': null, 'paddingHorizontal': 14, 'minWidth': 100};
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    tangon = tangon.colors;
    tangon = tangon.BG_BRAND;
    offset['backgroundColor'] = tangon;
    tangon = 14;
    golfie['button'] = offset;
    offset = {'padding': 2, 'borderRadius': 80};
    golfie['border'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot9 = golfie;
    golfie = {};
    option = 'function GuildBoostingMarketingPersistentCtaTsx1(){const{useReducedMotion,VISIBILITY_OFFSET,withSpring,isVisible,SPRING_CONFIG}=this.__closure;return{transform:[{translateY:useReducedMotion?-VISIBILITY_OFFSET:withSpring(isVisible?-VISIBILITY_OFFSET:VISIBILITY_OFFSET,SPRING_CONFIG)}],opacity:withSpring(isVisible?1:0,SPRING_CONFIG)};}';
    golfie['code'] = option;
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_boosting/native/marketing_redesign/GuildBoostingMarketingPersistentCta.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildBoostingMarketingPersistentCta
        entity = argFoo;
        zuuluu = _closure1_slot9;
        tangon = undefined;
        echoed = zuuluu.bind(tangon)();
        backup = entity.fractionalPremiumState;
        ctrled = entity.guild;
        source = entity.previousGuildSubscriptionSlot;
        golfie = entity.isVisible;
        var _closure2_slot0 = golfie;
        foxtra = _closure1_slot0;
        result = _closure1_slot2;
        entity = 7;
        entity = result[entity];
        oscard = foxtra.bind(tangon)(entity);
        report = oscard.useStateFromStores;
        entity = _closure1_slot4;
        zuuluu = new Array(1);
        zuuluu[0] = entity;
        entity = function() {
            entity = _closure1_slot4;
            entity = entity.useReducedMotion;
            return entity;
        };
        option = report.bind(oscard)(zuuluu, entity);
        var _closure2_slot1 = option;
        entity = 8;
        zuuluu = result[entity];
        report = foxtra.bind(tangon)(zuuluu);
        zuuluu = report.useAnimatedStyle;
        michal = function() { // Original name: _
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = {};
                tangon = {};
                report = _closure2_slot1;
                verify = -120;
                michal = verify;
                if(report) { _fun00002_ip = 76; continue _fun00001 }
 23:
                option = _closure1_slot0;
                golfie = _closure1_slot2;
                oscard = 9;
                golfie = golfie[oscard];
                oscard = undefined;
                option = option.bind(oscard)(golfie);
                golfie = option.withSpring;
                offset = _closure2_slot0;
                oscard = 120;
                if(!offset) { _fun00002_ip = 66; continue _fun00001 }
 63:
                oscard = verify;
 66:
                report = _closure1_slot8;
                michal = golfie.bind(option)(oscard, report);
 76:
                tangon['translateY'] = michal;
                michal = new Array(1);
                michal[0] = tangon;
                entity['transform'] = michal;
                oscard = _closure1_slot0;
                report = _closure1_slot2;
                tangon = 9;
                report = report[tangon];
                tangon = undefined;
                report = oscard.bind(tangon)(report);
                tangon = report.withSpring;
                oscard = _closure2_slot0;
                zuuluu = 0;
                if(!oscard) { _fun00002_ip = 135; continue _fun00001 }
 132:
                zuuluu = 1;
 135:
                michal = _closure1_slot8;
                michal = tangon.bind(report)(zuuluu, michal);
                entity['opacity'] = michal;
                return entity;
            }
        };
        oscard = {};
        oscard['useReducedMotion'] = option;
        option = 120;
        oscard['VISIBILITY_OFFSET'] = option;
        option = 9;
        option = result[option];
        option = foxtra.bind(tangon)(option);
        option = option.withSpring;
        oscard['withSpring'] = option;
        oscard['isVisible'] = golfie;
        golfie = _closure1_slot8;
        oscard['SPRING_CONFIG'] = golfie;
        michal['__closure'] = oscard;
        oscard = 14370895185277.0;
        michal['__workletHash'] = oscard;
        oscard = _closure1_slot10;
        michal['__initData'] = oscard;
        oscard = zuuluu.bind(report)(michal);
        zuuluu = _closure1_slot6;
        output = _closure1_slot1;
        entity = result[entity];
        entity = output.bind(tangon)(entity);
        michal = entity.View;
        entity = {};
        golfie = echoed.wrapper;
        report = new Array(2);
        report[0] = golfie;
        report[1] = oscard;
        entity['style'] = report;
        report = 10;
        report = result[report];
        oscard = output.bind(tangon)(report);
        report = {};
        golfie = 45;
        report['angle'] = golfie;
        golfie = {'x': 0.5, 'y': 0.5};
        report['angleCenter'] = golfie;
        sizing = 6;
        golfie = result[sizing];
        golfie = output.bind(tangon)(golfie);
        golfie = golfie.unsafe_rawColors;
        option = golfie.GUILD_BOOSTING_BLUE;
        golfie = new Array(2);
        golfie[0] = option;
        option = result[sizing];
        option = output.bind(tangon)(option);
        option = option.unsafe_rawColors;
        option = option.GUILD_BOOSTING_PURPLE;
        golfie[1] = option;
        report['colors'] = golfie;
        golfie = [0, 1];
        report['locations'] = golfie;
        golfie = echoed.border;
        report['style'] = golfie;
        update = true;
        report['useAngle'] = update;
        verify = _closure1_slot7;
        option = _closure1_slot3;
        golfie = {};
        offset = echoed.innerWraper;
        golfie['style'] = offset;
        offset = {};
        yankee = echoed.guildInfoContainer;
        offset['style'] = yankee;
        vacuum = 11;
        yankee = result[vacuum];
        romeon = output.bind(tangon)(yankee);
        yankee = {};
        sequen = echoed.guildIcon;
        yankee['style'] = sequen;
        sequen = echoed.guildIconText;
        yankee['textStyle'] = sequen;
        yankee['guild'] = ctrled;
        vacuum = result[vacuum];
        vacuum = foxtra.bind(tangon)(vacuum);
        vacuum = vacuum.GuildIconSizes;
        vacuum = vacuum.LARGE;
        yankee['size'] = vacuum;
        romeon = zuuluu.bind(tangon)(romeon, yankee);
        yankee = new Array(2);
        yankee[0] = romeon;
        romeon = 12;
        romeon = result[romeon];
        romeon = foxtra.bind(tangon)(romeon);
        foxtra = romeon.Text;
        romeon = {'style': null, 'variant': 'text-md/bold', 'lineClamp': 1};
        vacuum = echoed.guildName;
        romeon['style'] = vacuum;
        vacuum = ctrled.name;
        romeon['children'] = vacuum;
        romeon = zuuluu.bind(tangon)(foxtra, romeon);
        yankee[1] = romeon;
        offset['children'] = yankee;
        yankee = verify.bind(tangon)(option, offset);
        offset = new Array(2);
        offset[0] = yankee;
        yankee = {};
        romeon = echoed.buttonContainer;
        yankee['style'] = romeon;
        romeon = 13;
        romeon = result[romeon];
        foxtra = output.bind(tangon)(romeon);
        romeon = {};
        romeon['guild'] = ctrled;
        romeon['previousGuildSubscriptionSlot'] = source;
        romeon['useShortenedCTA'] = update;
        echoed = echoed.button;
        romeon['styles'] = echoed;
        sizing = result[sizing];
        sizing = output.bind(tangon)(sizing);
        sizing = sizing.unsafe_rawColors;
        sizing = sizing.WHITE_500;
        romeon['buttonTextColor'] = sizing;
        kiloes = _closure1_slot5;
        kiloes = kiloes.PREMIUM_GUILD_USER_MODAL_FLOATING_CTA_BAR;
        romeon['analyticsSection'] = kiloes;
        romeon['fractionalPremiumState'] = backup;
        romeon = zuuluu.bind(tangon)(foxtra, romeon);
        yankee['children'] = romeon;
        yankee = zuuluu.bind(tangon)(option, yankee);
        offset[1] = yankee;
        golfie['children'] = offset;
        golfie = verify.bind(tangon)(option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    michal = 120;
    zuuluu['VISIBILITY_OFFSET'] = michal;
    return entity;
})();