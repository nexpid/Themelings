// app/modules/guild_boosting/native/marketing_redesign/GuildBoostingMarketingPersistentCta.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticsSections;
    var _closure1_slot5 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = {'stiffness': 70, 'damping': 10};
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    tango = {'display': 'flex', 'alignItems': 'center', 'position': 'absolute', 'width': '100%', 'zIndex': 1, 'bottom': 4294967220};
    golf['wrapper'] = tango;
    offset = {'backgroundColor': null, 'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'position': 'relative', 'height': 76, 'width': 343, 'borderRadius': 76, 'paddingLeft': 13, 'paddingVertical': 13, 'paddingRight': 27};
    tango = 6;
    romeo = oscar[tango];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_SECONDARY_ALT;
    offset['backgroundColor'] = romeo;
    golf['innerWraper'] = offset;
    offset = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'flex': 1, 'marginRight': 10};
    golf['guildInfoContainer'] = offset;
    offset = {'backgroundColor': null, 'marginRight': 10, 'height': 50, 'width': 50, 'borderRadius': 25};
    romeo = oscar[tango];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = romeo;
    golf['guildIcon'] = offset;
    offset = {};
    romeo = oscar[tango];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.HEADER_PRIMARY;
    offset['color'] = romeo;
    golf['guildIconText'] = offset;
    offset = {'flexGrow': 1, 'flexShrink': 1, 'flexBasis': 'auto'};
    golf['guildName'] = offset;
    offset = {};
    romeo = 40;
    offset['height'] = romeo;
    golf['buttonContainer'] = offset;
    offset = {'backgroundColor': null, 'paddingHorizontal': 14, 'minWidth': 100};
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    tango = tango.colors;
    tango = tango.BG_BRAND;
    offset['backgroundColor'] = tango;
    tango = 14;
    golf['button'] = offset;
    offset = {'padding': 2, 'borderRadius': 80};
    golf['border'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot9 = golf;
    golf = {};
    options = 'function GuildBoostingMarketingPersistentCtaTsx1(){const{useReducedMotion,VISIBILITY_OFFSET,withSpring,isVisible,SPRING_CONFIG}=this.__closure;return{transform:[{translateY:useReducedMotion?-VISIBILITY_OFFSET:withSpring(isVisible?-VISIBILITY_OFFSET:VISIBILITY_OFFSET,SPRING_CONFIG)}],opacity:withSpring(isVisible?1:0,SPRING_CONFIG)};}';
    golf['code'] = options;
    var _closure1_slot10 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_boosting/native/marketing_redesign/GuildBoostingMarketingPersistentCta.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildBoostingMarketingPersistentCta
        entity = argFoo;
        zulu = _closure1_slot9;
        tango = undefined;
        echo = zulu.bind(tango)();
        backup = entity.fractionalPremiumState;
        control = entity.guild;
        source = entity.previousGuildSubscriptionSlot;
        golf = entity.isVisible;
        var _closure2_slot0 = golf;
        foxtrot = _closure1_slot0;
        result = _closure1_slot2;
        entity = 7;
        entity = result[entity];
        oscar = foxtrot.bind(tango)(entity);
        report = oscar.useStateFromStores;
        entity = _closure1_slot4;
        zulu = new Array(1);
        zulu[0] = entity;
        entity = function() {
            entity = _closure1_slot4;
            entity = entity.useReducedMotion;
            return entity;
        };
        options = report.bind(oscar)(zulu, entity);
        var _closure2_slot1 = options;
        entity = 8;
        zulu = result[entity];
        report = foxtrot.bind(tango)(zulu);
        zulu = report.useAnimatedStyle;
        mike = function() { // Original name: _
            _fun65759: for(var _fun65759_ip = 0; ; ) switch(_fun65759_ip) {
 0:
                entity = {};
                tango = {};
                report = _closure2_slot1;
                verify = -120;
                mike = verify;
                if(report) { _fun65759_ip = 76; continue _fun65759 }
 23:
                options = _closure1_slot0;
                golf = _closure1_slot2;
                oscar = 9;
                golf = golf[oscar];
                oscar = undefined;
                options = options.bind(oscar)(golf);
                golf = options.withSpring;
                offset = _closure2_slot0;
                oscar = 120;
                if(!offset) { _fun65759_ip = 66; continue _fun65759 }
 63:
                oscar = verify;
 66:
                report = _closure1_slot8;
                mike = golf.bind(options)(oscar, report);
 76:
                tango['translateY'] = mike;
                mike = new Array(1);
                mike[0] = tango;
                entity['transform'] = mike;
                oscar = _closure1_slot0;
                report = _closure1_slot2;
                tango = 9;
                report = report[tango];
                tango = undefined;
                report = oscar.bind(tango)(report);
                tango = report.withSpring;
                oscar = _closure2_slot0;
                zulu = 0;
                if(!oscar) { _fun65759_ip = 135; continue _fun65759 }
 132:
                zulu = 1;
 135:
                mike = _closure1_slot8;
                mike = tango.bind(report)(zulu, mike);
                entity['opacity'] = mike;
                return entity;
            }
        };
        oscar = {};
        oscar['useReducedMotion'] = options;
        options = 120;
        oscar['VISIBILITY_OFFSET'] = options;
        options = 9;
        options = result[options];
        options = foxtrot.bind(tango)(options);
        options = options.withSpring;
        oscar['withSpring'] = options;
        oscar['isVisible'] = golf;
        golf = _closure1_slot8;
        oscar['SPRING_CONFIG'] = golf;
        mike['__closure'] = oscar;
        oscar = 14370895185277.0;
        mike['__workletHash'] = oscar;
        oscar = _closure1_slot10;
        mike['__initData'] = oscar;
        oscar = zulu.bind(report)(mike);
        zulu = _closure1_slot6;
        output = _closure1_slot1;
        entity = result[entity];
        entity = output.bind(tango)(entity);
        mike = entity.View;
        entity = {};
        golf = echo.wrapper;
        report = new Array(2);
        report[0] = golf;
        report[1] = oscar;
        entity['style'] = report;
        report = 10;
        report = result[report];
        oscar = output.bind(tango)(report);
        report = {};
        golf = 45;
        report['angle'] = golf;
        golf = {'x': 0.5, 'y': 0.5};
        report['angleCenter'] = golf;
        sizing = 6;
        golf = result[sizing];
        golf = output.bind(tango)(golf);
        golf = golf.unsafe_rawColors;
        options = golf.GUILD_BOOSTING_BLUE;
        golf = new Array(2);
        golf[0] = options;
        options = result[sizing];
        options = output.bind(tango)(options);
        options = options.unsafe_rawColors;
        options = options.GUILD_BOOSTING_PURPLE;
        golf[1] = options;
        report['colors'] = golf;
        golf = [0, 1];
        report['locations'] = golf;
        golf = echo.border;
        report['style'] = golf;
        update = true;
        report['useAngle'] = update;
        verify = _closure1_slot7;
        options = _closure1_slot3;
        golf = {};
        offset = echo.innerWraper;
        golf['style'] = offset;
        offset = {};
        yankee = echo.guildInfoContainer;
        offset['style'] = yankee;
        vacuum = 11;
        yankee = result[vacuum];
        romeo = output.bind(tango)(yankee);
        yankee = {};
        sequence = echo.guildIcon;
        yankee['style'] = sequence;
        sequence = echo.guildIconText;
        yankee['textStyle'] = sequence;
        yankee['guild'] = control;
        vacuum = result[vacuum];
        vacuum = foxtrot.bind(tango)(vacuum);
        vacuum = vacuum.GuildIconSizes;
        vacuum = vacuum.LARGE;
        yankee['size'] = vacuum;
        romeo = zulu.bind(tango)(romeo, yankee);
        yankee = new Array(2);
        yankee[0] = romeo;
        romeo = 12;
        romeo = result[romeo];
        romeo = foxtrot.bind(tango)(romeo);
        foxtrot = romeo.Text;
        romeo = {'style': null, 'variant': 'text-md/bold', 'lineClamp': 1};
        vacuum = echo.guildName;
        romeo['style'] = vacuum;
        vacuum = control.name;
        romeo['children'] = vacuum;
        romeo = zulu.bind(tango)(foxtrot, romeo);
        yankee[1] = romeo;
        offset['children'] = yankee;
        yankee = verify.bind(tango)(options, offset);
        offset = new Array(2);
        offset[0] = yankee;
        yankee = {};
        romeo = echo.buttonContainer;
        yankee['style'] = romeo;
        romeo = 13;
        romeo = result[romeo];
        foxtrot = output.bind(tango)(romeo);
        romeo = {};
        romeo['guild'] = control;
        romeo['previousGuildSubscriptionSlot'] = source;
        romeo['useShortenedCTA'] = update;
        echo = echo.button;
        romeo['styles'] = echo;
        sizing = result[sizing];
        sizing = output.bind(tango)(sizing);
        sizing = sizing.unsafe_rawColors;
        sizing = sizing.WHITE_500;
        romeo['buttonTextColor'] = sizing;
        kilo = _closure1_slot5;
        kilo = kilo.PREMIUM_GUILD_USER_MODAL_FLOATING_CTA_BAR;
        romeo['analyticsSection'] = kilo;
        romeo['fractionalPremiumState'] = backup;
        romeo = zulu.bind(tango)(foxtrot, romeo);
        yankee['children'] = romeo;
        yankee = zulu.bind(tango)(options, yankee);
        offset[1] = yankee;
        golf['children'] = offset;
        golf = verify.bind(tango)(options, golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    mike = 120;
    zulu['VISIBILITY_OFFSET'] = mike;
    return entity;
})();