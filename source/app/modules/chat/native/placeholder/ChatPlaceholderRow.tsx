// app/modules/chat/native/placeholder/ChatPlaceholderRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = foxtra;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    kiloes = 1;
    tangon = oscard[kiloes];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot3 = option;
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.AVATAR_SIZE_MAP;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AvatarSizes;
    tangon = tangon.NORMAL;
    backup = option[tangon];
    tangon = 5;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    romeon = 6;
    yankee = oscard[romeon];
    yankee = foxtra.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_12;
    offset['paddingLeft'] = yankee;
    yankee = 7;
    sizing = oscard[yankee];
    sizing = report.bind(entity)(sizing);
    sizing = sizing.CHAT_PLACEHOLDER_ROW_MARGIN_TOP;
    offset['paddingTop'] = sizing;
    sizing = 'row';
    offset['flexDirection'] = sizing;
    tangon['row'] = offset;
    offset = {};
    sizing = oscard[romeon];
    sizing = foxtra.bind(entity)(sizing);
    sizing = sizing.spacing;
    sizing = sizing.PX_12;
    offset['marginHorizontal'] = sizing;
    offset['flex'] = kiloes;
    tangon['rowInner'] = offset;
    offset = {};
    kiloes = oscard[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.INTERACTIVE_MUTED;
    offset['backgroundColor'] = kiloes;
    offset['height'] = backup;
    offset['width'] = backup;
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.round;
    offset['borderRadius'] = backup;
    tangon['placeholderAvatar'] = offset;
    offset = {};
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INTERACTIVE_MUTED;
    offset['backgroundColor'] = backup;
    backup = oscard[yankee];
    backup = report.bind(entity)(backup);
    backup = backup.CHAT_PLACEHOLDER_ROW_LINE_HEIGHT;
    offset['height'] = backup;
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    offset['borderRadius'] = romeon;
    tangon['placeholderText'] = offset;
    offset = {};
    yankee = oscard[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.CHAT_PLACEHOLDER_ROW_LINE_MARGIN_TOP;
    offset['marginTop'] = yankee;
    yankee = '100%';
    offset['width'] = yankee;
    tangon['placeholderBody'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot5 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: ChatPlaceholderRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.lines;
            entity = _closure1_slot5;
            tangon = undefined;
            offset = entity.bind(tangon)();
            romeon = global;
            golfie = romeon.Math;
            zuuluu = golfie.floor;
            michal = romeon.Math;
            entity = michal.random;
            entity = entity.bind(michal)();
            michal = 10;
            entity = michal * entity;
            zuuluu = zuuluu.bind(golfie)(entity);
            option = romeon.Math;
            golfie = option.floor;
            verify = romeon.Math;
            entity = verify.random;
            verify = entity.bind(verify)();
            entity = 50;
            entity = entity * verify;
            entity = golfie.bind(option)(entity);
            kiloes = entity + michal;
            option = new Array(0);
            michal = 0;
            golfie = michal < oscard;
            entity = 8;
            backup = '';
            foxtra = '%';
            if(!golfie) { _fun00002_ip = 247; continue _fun00001 }
 132:
            verify = _closure1_slot0;
            golfie = _closure1_slot1;
            golfie = golfie[entity];
            verify = verify.bind(tangon)(golfie);
            golfie = zuuluu + michal;
            update = verify.bind(tangon)(golfie);
            verify = option.push;
            sizing = _closure1_slot3;
            yankee = _closure1_slot2;
            golfie = {};
            result = offset.placeholderText;
            output = new Array(3);
            output[0] = result;
            result = offset.placeholderBody;
            output[1] = result;
            result = {};
            echoed = romeon.HermesInternal;
            echoed = echoed.concat;
            echoed = echoed.bind(backup)(update, foxtra);
            result['width'] = echoed;
            output[2] = result;
            golfie['style'] = output;
            golfie = sizing.bind(tangon)(yankee, golfie, michal);
            golfie = verify.bind(option)(golfie);
            michal = michal + 1;
            if(michal < oscard) { _fun00002_ip = 132; continue _fun00001 }
 247:
            zuuluu = _closure1_slot4;
            michal = _closure1_slot2;
            entity = {};
            oscard = offset.row;
            entity['style'] = oscard;
            verify = _closure1_slot3;
            report = {};
            oscard = offset.placeholderAvatar;
            report['style'] = oscard;
            oscard = verify.bind(tangon)(michal, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = {};
            golfie = offset.rowInner;
            oscard['style'] = golfie;
            golfie = {};
            yankee = offset.placeholderText;
            offset = new Array(2);
            offset[0] = yankee;
            yankee = {};
            romeon = romeon.HermesInternal;
            romeon = romeon.concat;
            romeon = romeon.bind(backup)(kiloes, foxtra);
            yankee['width'] = romeon;
            offset[1] = yankee;
            golfie['style'] = offset;
            verify = verify.bind(tangon)(michal, golfie);
            golfie = new Array(2);
            golfie[0] = verify;
            golfie[1] = option;
            oscard['children'] = golfie;
            oscard = zuuluu.bind(tangon)(michal, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/chat/native/placeholder/ChatPlaceholderRow.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();