// app/modules/chat/native/placeholder/ChatPlaceholder.tsx
export default (function(native1, native2, native3, native4, native5, native6, native7) {
    var5 = native2;
    var12 = native3;
    var3 = native6;
    var6 = native7;
    var _closure1_slot0 = var12;
    var _closure1_slot1 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = native4;
    var1 = undefined;
    var7 = var4.bind(var1)(var7);
    var _closure1_slot2 = var7;
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var11 = var4.StyleSheet;
    var4 = 2;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.useChatInputContainerHeight;
    var _closure1_slot3 = var4;
    var4 = 3;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.jsx;
    var _closure1_slot4 = var4;
    var4 = 4;
    var4 = var6[var4];
    var9 = var5.bind(var1)(var4);
    var8 = var9.createStyles;
    var4 = {};
    var10 = {};
    var14 = var11.absoluteFillObject;
    var15 = var10;
    var11 = copyDataProperties(var15, var14);
    var11 = 5;
    var11 = var6[var11];
    var11 = var12.bind(var1)(var11);
    var11 = var11.spacing;
    var12 = var11.PX_24;
    var11 = 'paddingBottom';
    var10[var11] = var12;
    var12 = 'column-reverse';
    var11 = 'flexDirection';
    var10[var11] = var12;
    var12 = 'hidden';
    var11 = 'overflow';
    var10[var11] = var12;
    var4['placeholder'] = var10;
    var4 = var8.bind(var9)(var4);
    var _closure1_slot5 = var4;
    var4 = var7.memo;
    var2 = function ChatPlaceholder(arg1) {
        var1 = arg1;
        var5 = var1.screenIndex;
        var2 = _closure1_slot5;
        var4 = undefined;
        var6 = var2.bind(var4)();
        var2 = _closure1_slot3;
        var13 = var2.bind(var4)(var5);
        var _closure2_slot0 = var13;
        var2 = _closure1_slot0;
        var9 = _closure1_slot1;
        var5 = 8;
        var5 = var9[var5];
        var5 = var2.bind(var4)(var5);
        var5 = var5.bind(var4)();
        var15 = var5.height;
        var _closure2_slot1 = var15;
        var5 = 6;
        var5 = var9[var5];
        var5 = var2.bind(var4)(var5);
        var8 = var5.bind(var4)();
        var5 = 7;
        var5 = var9[var5];
        var7 = var2.bind(var4)(var5);
        var5 = {'isKeyboardAwareOnAndroid': false, 'includeKeyboardHeightIOS': true};
        var5 = var7.bind(var4)(var5);
        var5 = var5.insets;
        var7 = {};
        var11 = var5.bottom;
        var10 = var8.bottom;
        var10 = var11 - var10;
        var7['containerBottomInset'] = var10;
        var8 = var8.top;
        var5 = var5.bottom;
        var5 = var8 + var5;
        var7['windowVerticalInset'] = var5;
        var5 = var7.containerBottomInset;
        var _closure2_slot2 = var5;
        var14 = var7.windowVerticalInset;
        var _closure2_slot3 = var14;
        var11 = _closure1_slot2;
        var8 = var11.useMemo;
        var7 = new Array(2);
        var7[0] = var13;
        var7[1] = var5;
        var5 = function() {
            var1 = {};
            var3 = _closure2_slot0;
            var2 = _closure2_slot2;
            var2 = var3 + var2;
            var1['marginBottom'] = var2;
            return var1;
        };
        var8 = var8.bind(var11)(var5, var7);
        var5 = function useLinesForRowIndexCallback() {
            var4 = _closure1_slot2;
            var3 = var4.useRef;
            var2 = new Array(0);
            var2 = var3.bind(var4)(var2);
            var _closure3_slot0 = var2;
            var3 = var4.useCallback;
            var2 = function(arg1) {
                _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
                    var4 = arg1;
                    var1 = _closure3_slot0;
                    var1 = var1.current;
                    var1 = var1[var4];
                    var2 = null;
                    if(!(var2 == var1)) { _fun0001_ip = 90; continue _fun0001 }
 25:
                    var2 = global;
                    var6 = var2.Math;
                    var5 = var6.floor;
                    var7 = var2.Math;
                    var2 = var7.random;
                    var7 = var2.bind(var7)();
                    var2 = 3;
                    var2 = var2 * var7;
                    var5 = var5.bind(var6)(var2);
                    var2 = 1;
                    var2 = var5 + var2;
                    var3 = _closure3_slot0;
                    var3 = var3.current;
                    var3[var4] = var2;
                    var1 = var2;
 90:
                    return var1;
                }
            };
            var1 = new Array(0);
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        };
        var12 = var5.bind(var4)();
        var _closure2_slot4 = var12;
        var5 = 9;
        var5 = var9[var5];
        var7 = var2.bind(var4)(var5);
        var5 = {'visible': true, 'animated': true};
        var7 = var7.bind(var4)(var5);
        var10 = var11.useMemo;
        var5 = new Array(4);
        var5[0] = var15;
        var5[1] = var14;
        var5[2] = var13;
        var5[3] = var12;
        var3 = function() {
            _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
 0:
                var1 = new Array(0);
                var4 = 0;
                var8 = undefined;
                var6 = 10;
                var5 = 11;
                var3 = 0;
 22:
                var2 = _closure2_slot4;
                var2 = var2.bind(var8)(var3);
                var12 = _closure1_slot0;
                var11 = _closure1_slot1;
                var10 = var11[var6];
                var10 = var12.bind(var8)(var10);
                var10 = var10.bind(var8)(var2);
                var4 = var4 + var10;
                var10 = var1.push;
                var13 = _closure1_slot4;
                var11 = var11[var5];
                var12 = var12.bind(var8)(var11);
                var11 = {};
                var11['lines'] = var2;
                var2 = parseFloat(var3);
                var3 = var2 + 1;
                var2 = var13.bind(var8)(var12, var11, var2);
                var2 = var10.bind(var1)(var2);
                var10 = _closure2_slot1;
                var2 = _closure2_slot0;
                var10 = var10 - var2;
                var2 = _closure2_slot3;
                var2 = var10 - var2;
                if(var4 < var2) { _fun0002_ip = 22; continue _fun0002 }
 124:
                return var1;
            }
        };
        var5 = var10.bind(var11)(var3, var5);
        var3 = _closure1_slot4;
        var1 = 12;
        var1 = var9[var1];
        var1 = var2.bind(var4)(var1);
        var2 = var1.View;
        var1 = {};
        var9 = var6.placeholder;
        var6 = new Array(3);
        var6[0] = var9;
        var6[1] = var8;
        var6[2] = var7;
        var1['style'] = var6;
        var6 = 'none';
        var1['pointerEvents'] = var6;
        var1['children'] = var5;
        var1 = var3.bind(var4)(var2, var1);
        return var1;
    };
    var2 = var4.bind(var7)(var2);
    var4 = 13;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/chat/native/placeholder/ChatPlaceholder.tsx';
    var4 = var5.bind(var6)(var4);
    var3['default'] = var2;
    return var1;
})();