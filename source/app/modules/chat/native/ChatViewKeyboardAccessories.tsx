// app/modules/chat/native/ChatViewKeyboardAccessories.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 4;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_72;
    verify['marginBottom'] = offset;
    tangon['placeholder'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/chat/native/ChatViewKeyboardAccessories.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ChatViewKeyboardAdjustedPlaceholder
        entity = argFoo;
        verify = entity.visible;
        michal = _closure1_slot6;
        tangon = undefined;
        option = michal.bind(tangon)();
        oscard = _closure1_slot0;
        golfie = _closure1_slot2;
        michal = 5;
        michal = golfie[michal];
        yankee = oscard.bind(tangon)(michal);
        offset = yankee.useStateFromStores;
        michal = _closure1_slot4;
        report = new Array(1);
        report[0] = michal;
        michal = function() {
            entity = _closure1_slot4;
            entity = entity.keyboardHeight;
            return entity;
        };
        foxtra = offset.bind(yankee)(report, michal);
        var _closure2_slot0 = foxtra;
        michal = _closure1_slot1;
        report = 6;
        report = golfie[report];
        report = michal.bind(tangon)(report);
        report = report.bind(tangon)();
        romeon = report.bottom;
        var _closure2_slot1 = romeon;
        yankee = _closure1_slot3;
        offset = yankee.useMemo;
        report = new Array(2);
        report[0] = foxtra;
        report[1] = romeon;
        zuuluu = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 7;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.isAndroid;
                michal = michal.bind(zuuluu)();
                if(michal) { _fun00002_ip = 81; continue _fun00001 }
 37:
                michal = {};
                zuuluu = global;
                oscard = zuuluu.Math;
                report = oscard.max;
                tangon = _closure2_slot0;
                zuuluu = _closure2_slot1;
                tangon = tangon - zuuluu;
                zuuluu = 0;
                zuuluu = report.bind(oscard)(zuuluu, tangon);
                michal['marginBottom'] = zuuluu;
                return michal;
 81:
                return entity;
            }
        };
        report = offset.bind(yankee)(zuuluu, report);
        zuuluu = _closure1_slot5;
        entity = 8;
        entity = golfie[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        entity['visible'] = verify;
        option = option.placeholder;
        entity['style'] = option;
        entity['containerStyle'] = report;
        report = 7;
        report = golfie[report];
        oscard = oscard.bind(tangon)(report);
        report = oscard.isAndroid;
        report = report.bind(oscard)();
        entity['keyboardAware'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['ChatViewKeyboardAdjustedPlaceholder'] = michal;
    return entity;
})();