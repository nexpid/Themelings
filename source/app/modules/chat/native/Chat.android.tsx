// app/modules/chat/native/Chat.android.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    option = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = option;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: DCDChatList
        tangon = _closure1_slot3;
        zuuluu = tangon.useMemo;
        michal = function() {
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 5;
            michal = michal[entity];
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            michal = entity.Gesture;
            entity = michal.Native;
            zuuluu = entity.bind(michal)();
            michal = zuuluu.disallowInterruption;
            entity = true;
            zuuluu = michal.bind(zuuluu)(entity);
            michal = zuuluu.shouldCancelWhenOutside;
            entity = false;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        entity = new Array(0);
        report = zuuluu.bind(tangon)(michal, entity);
        tangon = _closure1_slot5;
        michal = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 5;
        entity = verify[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.GestureDetector;
        entity = {};
        entity['gesture'] = report;
        golfie = _closure1_slot5;
        oscard = _closure1_slot1;
        report = 6;
        report = verify[report];
        oscard = oscard.bind(zuuluu)(report);
        report = {};
        option = _closure1_slot7;
        option = option.chatList;
        report['style'] = option;
        report = golfie.bind(zuuluu)(oscard, report);
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    var _closure1_slot8 = entity;
    entity = global;
    verify = entity.Object;
    golfie = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    yankee = 1;
    tangon = oscard[yankee];
    tangon = report.bind(entity)(tangon);
    verify = tangon.StyleSheet;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot5 = option;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    option = verify.create;
    tangon = {};
    offset = {};
    offset['flex'] = yankee;
    tangon['chatList'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot7 = tangon;
    tangon = golfie.forwardRef;
    michal = function(argFoo, argBar) {
        report = argFoo;
        michal = _closure1_slot0;
        golfie = _closure1_slot2;
        entity = 7;
        entity = golfie[entity];
        tangon = undefined;
        option = michal.bind(tangon)(entity);
        zuuluu = option.useStateFromStores;
        entity = _closure1_slot4;
        michal = new Array(1);
        michal[0] = entity;
        entity = function() {
            entity = _closure1_slot4;
            entity = entity.roleStyle;
            return entity;
        };
        option = zuuluu.bind(option)(michal, entity);
        zuuluu = _closure1_slot6;
        michal = _closure1_slot1;
        entity = 8;
        entity = golfie[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        offset = entity;
        verify = report;
        golfie = copyDataProperties(offset, verify);
        golfie = 'roleStyle';
        entity[golfie] = option;
        option = argBar;
        golfie = 'ref';
        entity[golfie] = option;
        option = _closure1_slot5;
        golfie = _closure1_slot8;
        oscard = {};
        golfie = option.bind(tangon)(golfie, oscard);
        oscard = new Array(2);
        oscard[0] = golfie;
        report = report.children;
        oscard[1] = report;
        report = 'children';
        entity[report] = oscard;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/chat/native/Chat.android.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();