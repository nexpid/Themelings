// app/modules/user_settings/native/UserSettingsDebugLogs.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    foxtrot = 1;
    golf = oscar[foxtrot];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    offset = tango.Fonts;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    yankee = 6;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = backup;
    verify['flex'] = foxtrot;
    tango['wrap'] = verify;
    verify = {'padding': null, 'flexDirection': 'row', 'alignItems': 'center'};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['padding'] = foxtrot;
    foxtrot = 'center';
    tango['searchWrap'] = verify;
    verify = {};
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INPUT_BACKGROUND;
    verify['backgroundColor'] = backup;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    verify['marginLeft'] = backup;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.md;
    verify['borderRadius'] = backup;
    backup = 7;
    kilo = oscar[backup];
    kilo = report.bind(entity)(kilo);
    kilo = kilo.InputHeights;
    kilo = kilo.MD;
    verify['height'] = kilo;
    backup = oscar[backup];
    backup = report.bind(entity)(backup);
    backup = backup.InputHeights;
    backup = backup.MD;
    verify['width'] = backup;
    verify['justifyContent'] = foxtrot;
    verify['alignItems'] = foxtrot;
    tango['shareButton'] = verify;
    verify = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['paddingHorizontal'] = foxtrot;
    tango['list'] = verify;
    verify = {};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_16;
    verify['paddingBottom'] = yankee;
    tango['log'] = verify;
    verify = {};
    offset = offset.CODE_BOLD;
    verify['fontFamily'] = offset;
    tango['code'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/UserSettingsDebugLogs.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: UserSettingsDebugLogs
        mike = _closure1_slot8;
        tango = undefined;
        yankee = mike.bind(tango)();
        var _closure2_slot0 = yankee;
        report = _closure1_slot4;
        oscar = report.useMemo;
        zulu = function() {
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 8;
            mike = mike[entity];
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            entity = mike.getAllForDebugPanel;
            entity = entity.bind(mike)();
            return entity;
        };
        mike = new Array(0);
        mike = oscar.bind(report)(zulu, mike);
        var _closure2_slot1 = mike;
        oscar = report.useState;
        zulu = function() {
            _fun98209: for(var _fun98209_ip = 0; ; ) switch(_fun98209_ip) {
 0:
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 9;
                mike = mike[entity];
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                tango = entity.Storage;
                zulu = tango.get;
                mike = 'debug-log-query';
                entity = '';
                mike = zulu.bind(tango)(mike, entity);
                zulu = null;
                zulu = zulu != mike;
                if(!zulu) { _fun98209_ip = 64; continue _fun98209 }
 61:
                entity = mike;
 64:
                return entity;
            }
        };
        zulu = oscar.bind(report)(zulu);
        verify = _closure1_slot3;
        options = 2;
        zulu = verify.bind(tango)(zulu, options);
        golf = 0;
        kilo = zulu[golf];
        var _closure2_slot2 = kilo;
        oscar = 1;
        sizing = zulu[oscar];
        zulu = report.useState;
        zulu = zulu.bind(report)(mike);
        zulu = verify.bind(tango)(zulu, options);
        offset = zulu[golf];
        zulu = zulu[oscar];
        var _closure2_slot3 = zulu;
        oscar = report.useEffect;
        zulu = new Array(2);
        zulu[0] = mike;
        zulu[1] = kilo;
        mike = function() {
            _fun98210: for(var _fun98210_ip = 0; ; ) switch(_fun98210_ip) {
 0:
                tango = _closure2_slot2;
                mike = '';
                if(!(mike === tango)) { _fun98210_ip = 84; continue _fun98210 }
 17:
                report = _closure2_slot3;
                tango = _closure2_slot1;
                mike = undefined;
                tango = report.bind(mike)(tango);
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                tango = 9;
                tango = oscar[tango];
                tango = report.bind(mike)(tango);
                oscar = tango.Storage;
                report = oscar.set;
                tango = _closure2_slot2;
                zulu = 'debug-log-query';
                zulu = report.bind(oscar)(zulu, tango);
                return mike;
 84:
                mike = global;
                report = mike.setTimeout;
                tango = undefined;
                zulu = function() {
                    _fun98211: for(var _fun98211_ip = 0; ; ) switch(_fun98211_ip) {
 0:
 2: // try_start_0
                        mike = global;
                        oscar = mike.RegExp;
                        tango = _closure2_slot2;
                        mike = oscar.prototype;
                        report = Object.create(mike, {constructor: {value: oscar}});
                        golf = 'i';
                        verify = report;
                        options = tango;
                        mike = new verify[oscar](options, golf, oscar);
                        mike = mike instanceof Object ? mike : report;
                        var _closure4_slot0 = mike;
                        mike = _closure2_slot3;
                        report = _closure2_slot1;
                        zulu = report.filter;
                        entity = function(argFoo) {
                            _fun98212: for(var _fun98212_ip = 0; ; ) switch(_fun98212_ip) {
 0:
                                tango = argFoo;
                                report = tango.category;
                                zulu = report.match;
                                entity = _closure4_slot0;
                                entity = zulu.bind(report)(entity);
                                zulu = null;
                                entity = zulu != entity;
                                if(entity) { _fun98212_ip = 59; continue _fun98212 }
 35:
                                report = tango.message;
                                tango = report.match;
                                mike = _closure4_slot0;
                                mike = tango.bind(report)(mike);
                                entity = zulu != mike;
 59:
                                return entity;
                            }
                        };
                        entity = zulu.bind(report)(entity);
                        zulu = undefined;
                        entity = mike.bind(zulu)(entity);
                        mike = _closure1_slot0;
                        report = _closure1_slot2;
                        entity = 9;
                        entity = report[entity];
                        entity = mike.bind(zulu)(entity);
                        zulu = entity.Storage;
                        mike = zulu.set;
                        entity = 'debug-log-query';
                        entity = mike.bind(zulu)(entity, tango);
 126: // try_end0
                        _fun98211_ip = 130; continue _fun98211;
 128: // catch_target0
                        CatchBlockStart(arg_register=0);
 130:
                        entity = undefined;
                        return entity;
                    }
                };
                mike = 300;
                mike = report.bind(tango)(zulu, mike);
                var _closure3_slot0 = mike;
                entity = function() {
                    entity = global;
                    zulu = entity.clearTimeout;
                    mike = _closure3_slot0;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
                    return entity;
                };
                return entity;
            }
        };
        mike = oscar.bind(report)(mike, zulu);
        zulu = report.useCallback;
        mike = new Array(1);
        mike[0] = yankee;
        entity = function(argFoo) {
            _fun98214: for(var _fun98214_ip = 0; ; ) switch(_fun98214_ip) {
 0:
                entity = argFoo;
                yankee = entity.item;
                report = entity.index;
                tango = _closure1_slot6;
                zulu = _closure1_slot5;
                mike = {};
                options = _closure2_slot0;
                entity = options.log;
                mike['style'] = entity;
                golf = _closure1_slot0;
                entity = _closure1_slot2;
                sizing = 10;
                oscar = entity[sizing];
                entity = undefined;
                oscar = golf.bind(entity)(oscar);
                golf = oscar.Text;
                oscar = {'style': null, 'variant': 'text-xs/normal', 'color': 'text-muted'};
                options = options.code;
                oscar['style'] = options;
                backup = global;
                offset = backup.Date;
                update = yankee.time;
                verify = offset.prototype;
                verify = Object.create(verify, {constructor: {value: offset}});
                source = verify;
                options = new source[offset](update, echo);
                verify = options instanceof Object ? options : verify;
                options = verify.toISOString;
                verify = options.bind(verify)();
                options = new Array(3);
                options[0] = verify;
                verify = ' ';
                options[1] = verify;
                offset = yankee.timing;
                verify = null;
                romeo = verify != offset;
                verify = '';
                if(!romeo) { _fun98214_ip = 177; continue _fun98214 }
 174:
                verify = offset;
 177:
                options[2] = verify;
                oscar['children'] = options;
                golf = tango.bind(entity)(golf, oscar);
                oscar = new Array(2);
                oscar[0] = golf;
                verify = _closure1_slot6;
                romeo = _closure1_slot0;
                offset = _closure1_slot2;
                golf = offset[sizing];
                golf = romeo.bind(entity)(golf);
                options = golf.Text;
                golf = {};
                kilo = _closure2_slot0;
                output = kilo.code;
                golf['style'] = output;
                output = 'text-sm/normal';
                golf['variant'] = output;
                foxtrot = _closure1_slot7;
                offset = offset[sizing];
                offset = romeo.bind(entity)(offset);
                romeo = offset.Text;
                offset = {'style': null, 'variant': 'text-sm/normal', 'color': 'text-brand'};
                kilo = kilo.code;
                offset['style'] = kilo;
                output = yankee.category;
                backup = backup.HermesInternal;
                sizing = backup.concat;
                kilo = '[{';
                backup = ']: ';
                backup = sizing.bind(kilo)(output, backup);
                offset['children'] = backup;
                romeo = foxtrot.bind(entity)(romeo, offset);
                offset = new Array(2);
                offset[0] = romeo;
                yankee = yankee.message;
                offset[1] = yankee;
                golf['children'] = offset;
                golf = verify.bind(entity)(options, golf);
                oscar[1] = golf;
                mike['children'] = oscar;
                entity = tango.bind(entity)(zulu, mike, report);
                return entity;
            }
        };
        verify = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot6;
        mike = _closure1_slot5;
        entity = {};
        report = yankee.wrap;
        entity['style'] = report;
        report = {};
        oscar = yankee.searchWrap;
        report['style'] = oscar;
        options = _closure1_slot7;
        golf = _closure1_slot0;
        romeo = _closure1_slot2;
        oscar = 11;
        oscar = romeo[oscar];
        oscar = golf.bind(tango)(oscar);
        foxtrot = oscar.SearchField;
        oscar = {'size': 'md', 'placeholder': 'Filter (regex)'};
        oscar['onChange'] = sizing;
        oscar['defaultValue'] = kilo;
        foxtrot = options.bind(tango)(foxtrot, oscar);
        oscar = new Array(2);
        oscar[0] = foxtrot;
        foxtrot = {};
        kilo = yankee.shareButton;
        foxtrot['style'] = kilo;
        kilo = _closure1_slot1;
        backup = 12;
        backup = romeo[backup];
        kilo = kilo.bind(tango)(backup);
        backup = {};
        backup = options.bind(tango)(kilo, backup);
        foxtrot['children'] = backup;
        foxtrot = options.bind(tango)(mike, foxtrot);
        oscar[1] = foxtrot;
        report['children'] = oscar;
        oscar = zulu.bind(tango)(mike, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = 13;
        oscar = romeo[oscar];
        oscar = golf.bind(tango)(oscar);
        golf = oscar.FlashList;
        oscar = {};
        yankee = yankee.list;
        oscar['contentContainerStyle'] = yankee;
        oscar['data'] = offset;
        oscar['renderItem'] = verify;
        verify = 100;
        oscar['estimatedItemSize'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();