// app/modules/user_settings/native/defs/ChatGestureSettings.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var7 = require;
    var3 = exports;
    var8 = dependencyMap;
    var _closure1_slot0 = var7;
    var1 = metroImportDefault;
    var _closure1_slot1 = var1;
    var _closure1_slot2 = var8;
    var4 = function useSwipeToReplySettingValue() {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
            var5 = _closure1_slot0;
            var6 = _closure1_slot2;
            var1 = 6;
            var1 = var6[var1];
            var4 = undefined;
            var1 = var5.bind(var4)(var1);
            var2 = var1.SwipeRightToLeftModeSetting;
            var1 = var2.useSetting;
            var1 = var1.bind(var2)();
            var2 = 7;
            var2 = var6[var2];
            var3 = var5.bind(var4)(var2);
            var2 = var3.useSwipeActionDefaultValue;
            var2 = var2.bind(var3)();
            var3 = 3;
            var3 = var6[var3];
            var3 = var5.bind(var4)(var3);
            var3 = var3.SwipeRightToLeftMode;
            var3 = var3.SWIPE_RIGHT_TO_LEFT_UNSET;
            if(!(var1 === var3)) { _fun0001_ip = 94; continue _fun0001 }
 91:
            var1 = var2;
 94:
            return var1;
        }
    };
    var1 = global;
    var9 = var1.Object;
    var6 = var9.defineProperty;
    var5 = {};
    var1 = true;
    var5['value'] = var1;
    var1 = '__esModule';
    var1 = var6.bind(var9)(var3, var1, var5);
    var1 = 0;
    var5 = var8[var1];
    var1 = undefined;
    var5 = var7.bind(var1)(var5);
    var6 = var5.MobileSetting;
    var5 = 1;
    var5 = var8[var5];
    var5 = var7.bind(var1)(var5);
    var9 = var5.AnalyticEvents;
    var _closure1_slot3 = var9;
    var5 = var5.AnalyticsSections;
    var _closure1_slot4 = var5;
    var5 = {};
    var9 = 2;
    var9 = var8[var9];
    var9 = var7.bind(var1)(var9);
    var9 = var9.RendererType;
    var9 = var9.RADIO;
    var5['type'] = var9;
    var9 = function title() {
        var5 = _closure1_slot0;
        var6 = _closure1_slot2;
        var1 = 4;
        var2 = var6[var1];
        var4 = undefined;
        var2 = var5.bind(var4)(var2);
        var3 = var2.intl;
        var2 = var3.string;
        var1 = var6[var1];
        var1 = var5.bind(var4)(var1);
        var1 = var1.t;
        var1 = var1.Jf0C/f;
        var1 = var2.bind(var3)(var1);
        return var1;
    };
    var5['title'] = var9;
    var9 = function additionalSearchTerms() {
        var5 = _closure1_slot0;
        var6 = _closure1_slot2;
        var1 = 4;
        var2 = var6[var1];
        var4 = undefined;
        var2 = var5.bind(var4)(var2);
        var3 = var2.intl;
        var2 = var3.string;
        var1 = var6[var1];
        var1 = var5.bind(var4)(var1);
        var1 = var1.t;
        var1 = var1.9BGJ1t;
        var2 = var2.bind(var3)(var1);
        var1 = new Array(1);
        var1[0] = var2;
        return var1;
    };
    var5['additionalSearchTerms'] = var9;
    var6 = var6.CHAT;
    var5['parent'] = var6;
    var5['useValue'] = var4;
    var6 = function onSwipeToReplyValueChange(arg1) {
        var1 = global;
        var3 = var1.Number;
        var1 = undefined;
        var2 = arg1;
        var4 = var3.bind(var1)(var2);
        var3 = _closure1_slot0;
        var5 = _closure1_slot2;
        var2 = 3;
        var2 = var5[var2];
        var2 = var3.bind(var1)(var2);
        var2 = var2.SwipeRightToLeftMode;
        var9 = var2.SWIPE_RIGHT_TO_LEFT_REPLY;
        var6 = _closure1_slot1;
        var2 = 5;
        var2 = var5[var2];
        var8 = var6.bind(var1)(var2);
        var7 = var8.track;
        var2 = _closure1_slot3;
        var6 = var2.USER_SETTINGS_SWIPE_TO_REPLY_TOGGLE;
        var2 = {};
        var9 = var4 === var9;
        var2['enabled'] = var9;
        var9 = {};
        var10 = _closure1_slot4;
        var10 = var10.SETTINGS_TEXT_AND_IMAGES;
        var9['section'] = var10;
        var2['location'] = var9;
        var2 = var7.bind(var8)(var6, var2);
        var2 = 6;
        var2 = var5[var2];
        var2 = var3.bind(var1)(var2);
        var3 = var2.SwipeRightToLeftModeSetting;
        var2 = var3.updateSetting;
        var2 = var2.bind(var3)(var4);
        return var1;
    };
    var5['onValueChange'] = var6;
    var6 = function useHasSwipeToReplySettingOptions() {
        var2 = {};
        var7 = _closure1_slot0;
        var8 = _closure1_slot2;
        var4 = 3;
        var1 = var8[var4];
        var6 = undefined;
        var1 = var7.bind(var6)(var1);
        var1 = var1.SwipeRightToLeftMode;
        var1 = var1.SWIPE_RIGHT_TO_LEFT_CHANNEL_DETAILS;
        var2['value'] = var1;
        var3 = 4;
        var1 = var8[var3];
        var1 = var7.bind(var6)(var1);
        var9 = var1.intl;
        var5 = var9.string;
        var1 = var8[var3];
        var1 = var7.bind(var6)(var1);
        var1 = var1.t;
        var1 = var1.6eXLcH;
        var1 = var5.bind(var9)(var1);
        var2['label'] = var1;
        var1 = var8[var3];
        var1 = var7.bind(var6)(var1);
        var9 = var1.intl;
        var5 = var9.string;
        var1 = var8[var3];
        var1 = var7.bind(var6)(var1);
        var1 = var1.t;
        var1 = var1.ohhhDA;
        var1 = var5.bind(var9)(var1);
        var2['subLabel'] = var1;
        var1 = new Array(2);
        var1[0] = var2;
        var2 = {};
        var4 = var8[var4];
        var4 = var7.bind(var6)(var4);
        var4 = var4.SwipeRightToLeftMode;
        var4 = var4.SWIPE_RIGHT_TO_LEFT_REPLY;
        var2['value'] = var4;
        var4 = var8[var3];
        var4 = var7.bind(var6)(var4);
        var5 = var4.intl;
        var4 = var5.string;
        var3 = var8[var3];
        var3 = var7.bind(var6)(var3);
        var3 = var3.t;
        var3 = var3.3tYNDQ;
        var3 = var4.bind(var5)(var3);
        var2['label'] = var3;
        var1[1] = var2;
        return var1;
    };
    var5['useOptions'] = var6;
    var6 = 8;
    var6 = var8[var6];
    var8 = var7.bind(var1)(var6);
    var7 = var8.fileFinishedImporting;
    var6 = 'modules/user_settings/native/defs/ChatGestureSettings.tsx';
    var6 = var7.bind(var8)(var6);
    var3['default'] = var5;
    var3['useSwipeToReplySettingValue'] = var4;
    var2 = function getSwipeToReplySettingValue() {
        _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
 0:
            var5 = _closure1_slot0;
            var6 = _closure1_slot2;
            var1 = 6;
            var1 = var6[var1];
            var4 = undefined;
            var1 = var5.bind(var4)(var1);
            var3 = var1.SwipeRightToLeftModeSetting;
            var1 = var3.getSetting;
            var1 = var1.bind(var3)();
            var3 = 3;
            var3 = var6[var3];
            var3 = var5.bind(var4)(var3);
            var3 = var3.SwipeRightToLeftMode;
            var3 = var3.SWIPE_RIGHT_TO_LEFT_UNSET;
            if(!(var1 === var3)) { _fun0002_ip = 99; continue _fun0002 }
 69:
            var3 = _closure1_slot0;
            var5 = _closure1_slot2;
            var2 = 7;
            var2 = var5[var2];
            var3 = var3.bind(var4)(var2);
            var2 = var3.getSwipeActionDefaultValue;
            var1 = var2.bind(var3)();
 99:
            return var1;
        }
    };
    var3['getSwipeToReplySettingValue'] = var2;
    return var1;
})();