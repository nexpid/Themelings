// app/modules/user_settings/native/premium_marketing/PremiumFeaturesBackground.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.PremiumTypes;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'display': 'flex', 'borderRadius': null, 'flexDirection': 'column', 'justifyContent': 'space-between'};
    offset = 4;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.lg;
    verify['borderRadius'] = offset;
    tango['cardContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/premium_marketing/PremiumFeaturesBackground.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: PremiumFeaturesBackground
        _fun64061: for(var _fun64061_ip = 0; ; ) switch(_fun64061_ip) {
 0:
            tango = argFoo;
            mike = tango.premiumType;
            oscar = tango.children;
            yankee = tango.style;
            zulu = {'premiumType': 0, 'children': 0, 'style': 0};
            backup = null;
            kilo = zulu;
            entity = silentSetPrototypeOf(kilo, backup);
            kilo = {};
            backup = tango;
            foxtrot = zulu;
            report = copyDataProperties(kilo, backup, foxtrot);
            entity = _closure1_slot5;
            tango = undefined;
            offset = entity.bind(tango)();
            entity = _closure1_slot3;
            entity = entity.TIER_0;
            if(!(mike !== entity)) { _fun64061_ip = 111; continue _fun64061 }
 77:
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 5;
            entity = zulu[entity];
            entity = mike.bind(tango)(entity);
            entity = entity.Gradients;
            options = entity.PREMIUM_TIER_2_TRI_COLOR;
            _fun64061_ip = 143; continue _fun64061;
 111:
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 5;
            entity = zulu[entity];
            entity = mike.bind(tango)(entity);
            entity = entity.Gradients;
            options = entity.PREMIUM_TIER_0;
 143:
            zulu = _closure1_slot4;
            mike = _closure1_slot1;
            verify = _closure1_slot2;
            entity = 6;
            entity = verify[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            romeo = offset.cardContainer;
            offset = new Array(2);
            offset[0] = romeo;
            offset[1] = yankee;
            entity['style'] = offset;
            entity['colors'] = options;
            options = _closure1_slot0;
            golf = 5;
            offset = verify[golf];
            offset = options.bind(tango)(offset);
            offset = offset.HorizontalGradient;
            offset = offset.START;
            entity['start'] = offset;
            golf = verify[golf];
            golf = options.bind(tango)(golf);
            golf = golf.HorizontalGradient;
            golf = golf.END;
            entity['end'] = golf;
            kilo = entity;
            backup = report;
            report = copyDataProperties(kilo, backup);
            report = 'children';
            entity[report] = oscar;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();