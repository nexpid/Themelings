// app/modules/user_settings/native/premium_marketing/PremiumFeaturesBackground.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.PremiumTypes;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'borderRadius': null, 'flexDirection': 'column', 'justifyContent': 'space-between'};
    offset = 4;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.lg;
    verify['borderRadius'] = offset;
    tangon['cardContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/premium_marketing/PremiumFeaturesBackground.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: PremiumFeaturesBackground
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tangon = argFoo;
            michal = tangon.premiumType;
            oscard = tangon.children;
            yankee = tangon.style;
            zuuluu = {'premiumType': 0, 'children': 0, 'style': 0};
            backup = null;
            kiloes = zuuluu;
            entity = silentSetPrototypeOf(kiloes, backup);
            kiloes = {};
            backup = tangon;
            foxtra = zuuluu;
            report = copyDataProperties(kiloes, backup, foxtra);
            entity = _closure1_slot5;
            tangon = undefined;
            offset = entity.bind(tangon)();
            entity = _closure1_slot3;
            entity = entity.TIER_0;
            if(!(michal !== entity)) { _fun00002_ip = 115; continue _fun00001 }
 81:
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 5;
            entity = zuuluu[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.Gradients;
            option = entity.PREMIUM_TIER_2_TRI_COLOR;
            _fun00002_ip = 147; continue _fun00001;
 115:
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 5;
            entity = zuuluu[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.Gradients;
            option = entity.PREMIUM_TIER_0;
 147:
            zuuluu = _closure1_slot4;
            michal = _closure1_slot1;
            verify = _closure1_slot2;
            entity = 6;
            entity = verify[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            romeon = offset.cardContainer;
            offset = new Array(2);
            offset[0] = romeon;
            offset[1] = yankee;
            entity['style'] = offset;
            entity['colors'] = option;
            option = _closure1_slot0;
            golfie = 5;
            offset = verify[golfie];
            offset = option.bind(tangon)(offset);
            offset = offset.HorizontalGradient;
            offset = offset.START;
            entity['start'] = offset;
            golfie = verify[golfie];
            golfie = option.bind(tangon)(golfie);
            golfie = golfie.HorizontalGradient;
            golfie = golfie.END;
            entity['end'] = golfie;
            kiloes = entity;
            backup = report;
            report = copyDataProperties(kiloes, backup);
            report = 'children';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();