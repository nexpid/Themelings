// app/modules/user_settings/native/premium_marketing/utils/usePremiumFeatures.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.NUM_FREE_GUILD_BOOSTS_WITH_PREMIUM;
    var _closure1_slot4 = golf;
    tango = tango.PremiumTypes;
    var _closure1_slot5 = tango;
    tango = 22;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/premium_marketing/utils/usePremiumFeatures.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: usePremiumFeatures
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            oscar = argFoo;
            report = arguments[1];
            var _closure2_slot0 = oscar;
            golf = undefined;
            if(!(report === golf)) { _fun00002_ip = 20; continue _fun00001 }
 18:
            report = false;
 20:
            var _closure2_slot1 = report;
            var _closure2_slot2 = golf;
            tango = _closure1_slot0;
            options = _closure1_slot2;
            zulu = 2;
            zulu = options[zulu];
            tango = tango.bind(golf)(zulu);
            zulu = tango.useIsRemixANitroPerk;
            golf = zulu.bind(tango)();
            _closure2_slot2 = golf;
            tango = _closure1_slot3;
            zulu = tango.useMemo;
            mike = new Array(3);
            mike[0] = golf;
            mike[1] = oscar;
            mike[2] = report;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zulu = {};
                    tango = _closure1_slot1;
                    verify = _closure1_slot2;
                    mike = 3;
                    mike = verify[mike];
                    foxtrot = undefined;
                    mike = tango.bind(foxtrot)(mike);
                    zulu['icon'] = mike;
                    options = _closure1_slot0;
                    mike = 4;
                    mike = verify[mike];
                    mike = options.bind(foxtrot)(mike);
                    mike = mike.UploadIcon;
                    zulu['IconComponent'] = mike;
                    backup = 5;
                    mike = verify[backup];
                    mike = options.bind(foxtrot)(mike);
                    golf = mike.intl;
                    oscar = golf.formatToPlainString;
                    mike = verify[backup];
                    mike = options.bind(foxtrot)(mike);
                    mike = mike.t;
                    report = mike.oEudy8;
                    tango = {};
                    mike = 6;
                    mike = verify[mike];
                    romeo = options.bind(foxtrot)(mike);
                    yankee = romeo.getMaxFileSizeForPremiumType;
                    verify = _closure2_slot0;
                    options = {};
                    offset = false;
                    options['useSpace'] = offset;
                    options = yankee.bind(romeo)(verify, options);
                    tango['uploadSize'] = options;
                    tango = oscar.bind(golf)(report, tango);
                    zulu['label'] = tango;
                    options = global;
                    oscar = options.Set;
                    report = _closure1_slot5;
                    golf = report.TIER_0;
                    tango = new Array(2);
                    tango[0] = golf;
                    report = report.TIER_2;
                    tango[1] = report;
                    report = oscar.prototype;
                    report = Object.create(report, {constructor: {value: oscar}});
                    vacuum = report;
                    control = tango;
                    tango = new vacuum[oscar](control, source);
                    tango = tango instanceof Object ? tango : report;
                    zulu['premiumTypes'] = tango;
                    oscar = true;
                    zulu['availableOnFractional'] = oscar;
                    tango = new Array(7);
                    tango[0] = zulu;
                    mike = _closure2_slot2;
                    if(mike) { _fun00004_ip = 256; continue _fun00003 }
 247:
                    mike = new Array(0);
                    _fun00004_ip = 435; continue _fun00003;
 256:
                    report = {};
                    verify = _closure1_slot1;
                    zulu = _closure1_slot2;
                    golf = 7;
                    golf = zulu[golf];
                    golf = verify.bind(foxtrot)(golf);
                    report['icon'] = golf;
                    yankee = _closure1_slot0;
                    golf = 8;
                    golf = zulu[golf];
                    golf = yankee.bind(foxtrot)(golf);
                    golf = golf.PencilSparkleIcon;
                    report['IconComponent'] = golf;
                    golf = zulu[backup];
                    golf = yankee.bind(foxtrot)(golf);
                    verify = golf.intl;
                    golf = verify.string;
                    zulu = zulu[backup];
                    zulu = yankee.bind(foxtrot)(zulu);
                    zulu = zulu.t;
                    zulu = zulu.ky8rxc;
                    zulu = golf.bind(verify)(zulu);
                    report['label'] = zulu;
                    verify = options.Set;
                    golf = _closure1_slot5;
                    yankee = golf.TIER_0;
                    zulu = new Array(2);
                    zulu[0] = yankee;
                    golf = golf.TIER_2;
                    zulu[1] = golf;
                    golf = verify.prototype;
                    golf = Object.create(golf, {constructor: {value: verify}});
                    vacuum = golf;
                    control = zulu;
                    zulu = new vacuum[verify](control, source);
                    zulu = zulu instanceof Object ? zulu : golf;
                    report['premiumTypes'] = zulu;
                    report['availableOnFractional'] = oscar;
                    zulu = new Array(1);
                    zulu[0] = report;
                    mike = zulu;
 435:
                    report = 1;
                    control = tango;
                    source = mike;
                    update = report;
                    mike = arraySpread(control, source, update);
                    zulu = {};
                    yankee = _closure1_slot1;
                    verify = _closure1_slot2;
                    golf = 9;
                    golf = verify[golf];
                    golf = yankee.bind(foxtrot)(golf);
                    zulu['icon'] = golf;
                    romeo = _closure1_slot0;
                    golf = 10;
                    golf = verify[golf];
                    golf = romeo.bind(foxtrot)(golf);
                    golf = golf.ReactionIcon;
                    zulu['IconComponent'] = golf;
                    golf = verify[backup];
                    golf = romeo.bind(foxtrot)(golf);
                    sizing = golf.intl;
                    kilo = sizing.string;
                    golf = verify[backup];
                    golf = romeo.bind(foxtrot)(golf);
                    golf = golf.t;
                    golf = golf.E1NP29;
                    golf = kilo.bind(sizing)(golf);
                    zulu['label'] = golf;
                    output = options.Set;
                    golf = _closure1_slot5;
                    sizing = golf.TIER_0;
                    kilo = new Array(2);
                    kilo[0] = sizing;
                    sizing = golf.TIER_2;
                    kilo[1] = sizing;
                    sizing = output.prototype;
                    sizing = Object.create(sizing, {constructor: {value: output}});
                    vacuum = sizing;
                    control = kilo;
                    kilo = new vacuum[output](control, source);
                    kilo = kilo instanceof Object ? kilo : sizing;
                    zulu['premiumTypes'] = kilo;
                    zulu['availableOnFractional'] = oscar;
                    tango[mike] = zulu;
                    mike = mike + report;
                    zulu = {};
                    kilo = 11;
                    kilo = verify[kilo];
                    kilo = yankee.bind(foxtrot)(kilo);
                    zulu['icon'] = kilo;
                    kilo = 12;
                    kilo = verify[kilo];
                    kilo = romeo.bind(foxtrot)(kilo);
                    kilo = kilo.SuperReactionIcon;
                    zulu['IconComponent'] = kilo;
                    kilo = verify[backup];
                    kilo = romeo.bind(foxtrot)(kilo);
                    output = kilo.intl;
                    sizing = output.string;
                    kilo = verify[backup];
                    kilo = romeo.bind(foxtrot)(kilo);
                    kilo = kilo.t;
                    kilo = kilo.taMwg4;
                    kilo = sizing.bind(output)(kilo);
                    zulu['label'] = kilo;
                    output = options.Set;
                    sizing = golf.TIER_2;
                    kilo = new Array(1);
                    kilo[0] = sizing;
                    sizing = output.prototype;
                    sizing = Object.create(sizing, {constructor: {value: output}});
                    vacuum = sizing;
                    control = kilo;
                    kilo = new vacuum[output](control, source);
                    kilo = kilo instanceof Object ? kilo : sizing;
                    zulu['premiumTypes'] = kilo;
                    zulu['availableOnFractional'] = oscar;
                    tango[mike] = zulu;
                    mike = mike + report;
                    zulu = {};
                    kilo = 13;
                    kilo = verify[kilo];
                    kilo = yankee.bind(foxtrot)(kilo);
                    zulu['icon'] = kilo;
                    kilo = 14;
                    kilo = verify[kilo];
                    kilo = romeo.bind(foxtrot)(kilo);
                    kilo = kilo.NitroWheelIcon;
                    zulu['IconComponent'] = kilo;
                    kilo = verify[backup];
                    kilo = romeo.bind(foxtrot)(kilo);
                    output = kilo.intl;
                    sizing = output.string;
                    kilo = verify[backup];
                    kilo = romeo.bind(foxtrot)(kilo);
                    kilo = kilo.t;
                    kilo = kilo.oyfAMT;
                    kilo = sizing.bind(output)(kilo);
                    zulu['label'] = kilo;
                    output = options.Set;
                    sizing = golf.TIER_0;
                    kilo = new Array(1);
                    kilo[0] = sizing;
                    sizing = output.prototype;
                    sizing = Object.create(sizing, {constructor: {value: output}});
                    vacuum = sizing;
                    control = kilo;
                    kilo = new vacuum[output](control, source);
                    kilo = kilo instanceof Object ? kilo : sizing;
                    zulu['premiumTypes'] = kilo;
                    zulu['availableOnFractional'] = oscar;
                    tango[mike] = zulu;
                    mike = mike + report;
                    zulu = {};
                    kilo = 15;
                    kilo = verify[kilo];
                    kilo = yankee.bind(foxtrot)(kilo);
                    zulu['icon'] = kilo;
                    kilo = 16;
                    kilo = verify[kilo];
                    kilo = romeo.bind(foxtrot)(kilo);
                    kilo = kilo.ScreenStreamIcon;
                    zulu['IconComponent'] = kilo;
                    kilo = verify[backup];
                    kilo = romeo.bind(foxtrot)(kilo);
                    output = kilo.intl;
                    sizing = output.string;
                    kilo = verify[backup];
                    kilo = romeo.bind(foxtrot)(kilo);
                    kilo = kilo.t;
                    kilo = kilo.myyAEh;
                    kilo = sizing.bind(output)(kilo);
                    zulu['label'] = kilo;
                    output = options.Set;
                    sizing = golf.TIER_2;
                    kilo = new Array(1);
                    kilo[0] = sizing;
                    sizing = output.prototype;
                    sizing = Object.create(sizing, {constructor: {value: output}});
                    vacuum = sizing;
                    control = kilo;
                    kilo = new vacuum[output](control, source);
                    kilo = kilo instanceof Object ? kilo : sizing;
                    zulu['premiumTypes'] = kilo;
                    zulu['availableOnFractional'] = oscar;
                    tango[mike] = zulu;
                    mike = mike + report;
                    zulu = {};
                    kilo = 17;
                    kilo = verify[kilo];
                    kilo = yankee.bind(foxtrot)(kilo);
                    zulu['icon'] = kilo;
                    kilo = 18;
                    kilo = verify[kilo];
                    kilo = romeo.bind(foxtrot)(kilo);
                    kilo = kilo.BoostTier2Icon;
                    zulu['IconComponent'] = kilo;
                    kilo = verify[backup];
                    kilo = romeo.bind(foxtrot)(kilo);
                    result = kilo.intl;
                    output = result.formatToPlainString;
                    kilo = verify[backup];
                    kilo = romeo.bind(foxtrot)(kilo);
                    kilo = kilo.t;
                    sizing = kilo.DbkNFh;
                    kilo = {};
                    echo = _closure1_slot4;
                    kilo['numBoosts'] = echo;
                    kilo = output.bind(result)(sizing, kilo);
                    zulu['label'] = kilo;
                    output = options.Set;
                    sizing = golf.TIER_2;
                    kilo = new Array(1);
                    kilo[0] = sizing;
                    sizing = output.prototype;
                    sizing = Object.create(sizing, {constructor: {value: output}});
                    vacuum = sizing;
                    control = kilo;
                    kilo = new vacuum[output](control, source);
                    kilo = kilo instanceof Object ? kilo : sizing;
                    zulu['premiumTypes'] = kilo;
                    zulu['availableOnFractional'] = offset;
                    tango[mike] = zulu;
                    zulu = {};
                    offset = 19;
                    offset = verify[offset];
                    offset = yankee.bind(foxtrot)(offset);
                    zulu['icon'] = offset;
                    offset = 20;
                    offset = verify[offset];
                    offset = romeo.bind(foxtrot)(offset);
                    offset = offset.UserSquareIcon;
                    zulu['IconComponent'] = offset;
                    offset = verify[backup];
                    offset = romeo.bind(foxtrot)(offset);
                    yankee = offset.intl;
                    offset = yankee.string;
                    verify = verify[backup];
                    verify = romeo.bind(foxtrot)(verify);
                    verify = verify.t;
                    verify = verify.vlHicH;
                    verify = offset.bind(yankee)(verify);
                    zulu['label'] = verify;
                    verify = options.Set;
                    options = golf.TIER_2;
                    golf = new Array(1);
                    golf[0] = options;
                    options = verify.prototype;
                    options = Object.create(options, {constructor: {value: verify}});
                    vacuum = options;
                    control = golf;
                    golf = new vacuum[verify](control, source);
                    golf = golf instanceof Object ? golf : options;
                    zulu['premiumTypes'] = golf;
                    zulu['availableOnFractional'] = oscar;
                    mike = mike + report;
                    tango[mike] = zulu;
                    zulu = tango.filter;
                    mike = function(argFoo) {
                        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                            zulu = argFoo;
                            report = zulu.premiumTypes;
                            tango = report.has;
                            entity = _closure2_slot0;
                            entity = tango.bind(report)(entity);
                            if(!entity) { _fun00006_ip = 48; continue _fun00005 }
 29:
                            mike = _closure2_slot1;
                            mike = !mike;
                            if(mike) { _fun00006_ip = 45; continue _fun00005 }
 39:
                            mike = zulu.availableOnFractional;
 45:
                            entity = mike;
 48:
                            return entity;
                        }
                    };
                    zulu = zulu.bind(tango)(mike);
                    mike = zulu.map;
                    entity = function(argFoo) {
                        entity = {};
                        report = argFoo;
                        oscar = entity;
                        mike = copyDataProperties(oscar, report);
                        tango = _closure1_slot1;
                        zulu = _closure1_slot2;
                        mike = 21;
                        zulu = zulu[mike];
                        mike = undefined;
                        mike = tango.bind(mike)(zulu);
                        mike = mike.unsafe_rawColors;
                        zulu = mike.WHITE_500;
                        mike = 'color';
                        entity[mike] = zulu;
                        return entity;
                    };
                    entity = mike.bind(zulu)(entity);
                    return entity;
                }
            };
            entity = zulu.bind(tango)(entity, mike);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();