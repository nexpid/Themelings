// app/modules/user_settings/native/premium_marketing/Header.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flexDirection': 'column', 'alignItems': 'center'};
    tangon['container'] = verify;
    verify = {'marginTop': 16, 'marginBottom': 24};
    tangon['headerText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/premium_marketing/Header.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            option = entity.style;
            entity = _closure1_slot6;
            tangon = undefined;
            offset = entity.bind(tangon)();
            golfie = _closure1_slot1;
            backup = _closure1_slot2;
            entity = 4;
            entity = backup[entity];
            entity = golfie.bind(tangon)(entity);
            romeon = entity.bind(tangon)();
            zuuluu = _closure1_slot5;
            michal = _closure1_slot3;
            entity = {};
            verify = offset.container;
            report = new Array(2);
            report[0] = verify;
            report[1] = option;
            entity['style'] = report;
            option = _closure1_slot4;
            report = 5;
            report = backup[report];
            golfie = golfie.bind(tangon)(report);
            report = {};
            verify = true;
            report['accessible'] = verify;
            yankee = _closure1_slot0;
            foxtra = 6;
            verify = backup[foxtra];
            verify = yankee.bind(tangon)(verify);
            sizing = verify.intl;
            kiloes = sizing.string;
            verify = backup[foxtra];
            verify = yankee.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.lpNrPj;
            verify = kiloes.bind(sizing)(verify);
            report['accessibilityLabel'] = verify;
            verify = 7;
            verify = backup[verify];
            yankee = yankee.bind(tangon)(verify);
            verify = yankee.isThemeDark;
            verify = verify.bind(yankee)(romeon);
            romeon = _closure1_slot1;
            backup = _closure1_slot2;
            if(verify) { _fun00002_ip = 204; continue _fun00001 }
 190:
            verify = 9;
            verify = backup[verify];
            verify = romeon.bind(tangon)(verify);
            _fun00002_ip = 216; continue _fun00001;
 204:
            yankee = 8;
            yankee = backup[yankee];
            verify = romeon.bind(tangon)(yankee);
 216:
            report['source'] = verify;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = golfie;
            option = _closure1_slot4;
            romeon = _closure1_slot0;
            verify = _closure1_slot2;
            oscard = 10;
            oscard = verify[oscard];
            oscard = romeon.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {'style': null, 'variant': 'text-md/medium', 'color': 'header-primary'};
            offset = offset.headerText;
            oscard['style'] = offset;
            offset = verify[foxtra];
            offset = romeon.bind(tangon)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = verify[foxtra];
            verify = romeon.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.SD5MJS;
            verify = offset.bind(yankee)(verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();