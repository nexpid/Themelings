// app/modules/user_settings/native/premium_marketing/PremiumOfferCard.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.PremiumTypes;
    var _closure1_slot7 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'dipslay': 'flex', 'flexDirection': 'column', 'justifyContent': 'flex-start'};
    offset = 7;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['padding'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['marginBottom'] = romeo;
    tango['card'] = verify;
    verify = {'alignSelf': 'center', 'marginBottom': null, 'width': 319, 'height': 146};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['marginBottom'] = romeo;
    tango['image'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['marginVertical'] = offset;
    offset = 'uppercase';
    verify['textTransform'] = offset;
    tango['countdown'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 23;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/premium_marketing/PremiumOfferCard.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        _fun105092: for(var _fun105092_ip = 0; ; ) switch(_fun105092_ip) {
 0:
            entity = argFoo;
            oscar = entity.style;
            entity = _closure1_slot10;
            report = undefined;
            output = entity.bind(report)();
            golf = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 8;
            mike = zulu[entity];
            verify = golf.bind(report)(mike);
            options = verify.useStateFromStores;
            mike = _closure1_slot6;
            tango = new Array(1);
            tango[0] = mike;
            mike = function() {
                mike = _closure1_slot6;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            tango = options.bind(verify)(tango, mike);
            mike = _closure1_slot1;
            options = 9;
            options = zulu[options];
            options = mike.bind(report)(options);
            options = options.bind(report)();
            options = options.analyticsLocations;
            var _closure2_slot0 = options;
            entity = zulu[entity];
            verify = golf.bind(report)(entity);
            options = verify.useStateFromStores;
            entity = _closure1_slot5;
            golf = new Array(1);
            golf[0] = entity;
            entity = function() {
                entity = _closure1_slot5;
                entity = entity.useReducedMotion;
                return entity;
            };
            sizing = options.bind(verify)(golf, entity);
            entity = 10;
            entity = zulu[entity];
            zulu = mike.bind(report)(entity);
            mike = zulu.isPremiumExactly;
            entity = _closure1_slot7;
            entity = entity.TIER_1;
            foxtrot = mike.bind(zulu)(tango, entity);
            tango = _closure1_slot3;
            zulu = tango.useMemo;
            mike = function() {
                entity = global;
                zulu = entity.Date;
                tango = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 11;
                mike = mike[entity];
                entity = undefined;
                entity = tango.bind(entity)(mike);
                report = entity.Q1_2025_MARKETING_END_DATE;
                mike = zulu.prototype;
                mike = Object.create(mike, {constructor: {value: zulu}});
                oscar = mike;
                entity = new oscar[zulu](report, tango);
                entity = entity instanceof Object ? entity : mike;
                return entity;
            };
            entity = new Array(0);
            update = zulu.bind(tango)(mike, entity);
            entity = update.getTime;
            mike = entity.bind(update)();
            entity = global;
            zulu = entity.Date;
            entity = zulu.now;
            entity = entity.bind(zulu)();
            mike = mike < entity;
            entity = null;
            if(mike) { _fun105092_ip = 996; continue _fun105092 }
 241:
            tango = _closure1_slot8;
            zulu = _closure1_slot4;
            mike = {};
            mike['style'] = oscar;
            golf = _closure1_slot9;
            oscar = {};
            verify = output.card;
            options = new Array(1);
            options[0] = verify;
            oscar['style'] = options;
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            options = 12;
            options = offset[options];
            verify = verify.bind(report)(options);
            options = verify.isAndroid;
            options = options.bind(verify)();
            if(!options) { _fun105092_ip = 374; continue _fun105092 }
 311:
            if(sizing) { _fun105092_ip = 374; continue _fun105092 }
 314:
            offset = _closure1_slot8;
            kilo = _closure1_slot1;
            result = _closure1_slot2;
            options = 13;
            options = result[options];
            verify = kilo.bind(report)(options);
            options = {};
            yankee = 14;
            yankee = result[yankee];
            yankee = kilo.bind(report)(yankee);
            options['url'] = yankee;
            yankee = output.image;
            options['style'] = yankee;
            verify = offset.bind(report)(verify, options);
            _fun105092_ip = 455; continue _fun105092;
 374:
            yankee = _closure1_slot8;
            result = _closure1_slot1;
            offset = _closure1_slot2;
            options = 15;
            options = offset[options];
            offset = result.bind(report)(options);
            options = {};
            kilo = {};
            source = _closure1_slot2;
            if(sizing) { _fun105092_ip = 418; continue _fun105092 }
 409:
            sizing = 14;
            sizing = source[sizing];
            _fun105092_ip = 425; continue _fun105092;
 418:
            echo = 16;
            sizing = source[echo];
 425:
            sizing = result.bind(report)(sizing);
            kilo['uri'] = sizing;
            options['source'] = kilo;
            kilo = output.image;
            options['style'] = kilo;
            verify = yankee.bind(report)(offset, options);
 455:
            options = new Array(5);
            options[0] = verify;
            yankee = _closure1_slot8;
            offset = _closure1_slot0;
            kilo = _closure1_slot2;
            verify = 17;
            sizing = kilo[verify];
            sizing = offset.bind(report)(sizing);
            result = sizing.Text;
            sizing = {'color': 'header-primary', 'variant': 'heading-xl/bold'};
            echo = 18;
            source = kilo[echo];
            source = offset.bind(report)(source);
            vacuum = source.intl;
            control = vacuum.string;
            source = kilo[echo];
            source = offset.bind(report)(source);
            source = source.t;
            source = source.QziR6+;
            source = control.bind(vacuum)(source);
            sizing['children'] = source;
            sizing = yankee.bind(report)(result, sizing);
            options[1] = sizing;
            verify = kilo[verify];
            verify = offset.bind(report)(verify);
            sizing = verify.Text;
            verify = {'color': 'header-primary', 'variant': 'text-sm/bold'};
            output = output.countdown;
            verify['style'] = output;
            result = _closure1_slot1;
            output = 19;
            output = kilo[output];
            result = result.bind(report)(output);
            output = {};
            output['endDate'] = update;
            output = yankee.bind(report)(result, output);
            verify['children'] = output;
            verify = yankee.bind(report)(sizing, verify);
            options[2] = verify;
            verify = 20;
            verify = kilo[verify];
            verify = offset.bind(report)(verify);
            offset = verify.TextWithIOSLinkWorkaround;
            verify = {'color': 'header-primary', 'variant': 'text-sm/medium'};
            source = _closure1_slot0;
            control = _closure1_slot2;
            kilo = control[echo];
            kilo = source.bind(report)(kilo);
            result = kilo.intl;
            output = result.format;
            kilo = control[echo];
            kilo = source.bind(report)(kilo);
            kilo = kilo.t;
            if(foxtrot) { _fun105092_ip = 763; continue _fun105092 }
 724:
            sizing = kilo.DVBfMD;
            foxtrot = {};
            update = 11;
            update = control[update];
            update = source.bind(report)(update);
            update = update.Q1_2025_MARKETING_SUPPORT_URL;
            foxtrot['termsLink'] = update;
            foxtrot = output.bind(result)(sizing, foxtrot);
            _fun105092_ip = 800; continue _fun105092;
 763:
            sizing = kilo.KCvBj4;
            kilo = {};
            update = 11;
            update = control[update];
            update = source.bind(report)(update);
            update = update.Q1_2025_MARKETING_SUPPORT_URL;
            kilo['termsLink'] = update;
            foxtrot = output.bind(result)(sizing, kilo);
 800:
            verify['children'] = foxtrot;
            verify = yankee.bind(report)(offset, verify);
            options[3] = verify;
            yankee = _closure1_slot8;
            offset = _closure1_slot4;
            verify = {};
            foxtrot = {};
            output = _closure1_slot1;
            kilo = _closure1_slot2;
            sizing = 7;
            sizing = kilo[sizing];
            sizing = output.bind(report)(sizing);
            sizing = sizing.spacing;
            sizing = sizing.PX_24;
            foxtrot['marginTop'] = sizing;
            verify['style'] = foxtrot;
            result = _closure1_slot0;
            romeo = 21;
            romeo = kilo[romeo];
            romeo = result.bind(report)(romeo);
            foxtrot = romeo.Button;
            romeo = {};
            sizing = kilo[echo];
            sizing = result.bind(report)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kilo = kilo[echo];
            kilo = result.bind(report)(kilo);
            kilo = kilo.t;
            kilo = kilo.Ic9qLC;
            kilo = sizing.bind(output)(kilo);
            romeo['text'] = kilo;
            kilo = 'primary';
            romeo['variant'] = kilo;
            backup = function() { // Original name: onPress
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 22;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.openPaymentModal;
                entity = {};
                tango = _closure2_slot0;
                entity['analyticsLocations'] = tango;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            romeo['onPress'] = backup;
            romeo = yankee.bind(report)(foxtrot, romeo);
            verify['children'] = romeo;
            verify = yankee.bind(report)(offset, verify);
            options[4] = verify;
            oscar['children'] = options;
            oscar = golf.bind(report)(zulu, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 996:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();