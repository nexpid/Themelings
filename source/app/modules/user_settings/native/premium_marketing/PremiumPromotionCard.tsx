// app/modules/user_settings/native/premium_marketing/PremiumPromotionCard.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticsObjectTypes;
    var _closure1_slot6 = golfie;
    golfie = tangon.AnalyticsPages;
    var _closure1_slot7 = golfie;
    golfie = tangon.AnalyticsSections;
    var _closure1_slot8 = golfie;
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot9 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.PremiumTypes;
    var _closure1_slot10 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot11 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot12 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = '100%';
    verify['width'] = offset;
    tangon['container'] = verify;
    verify = {'display': 'flex', 'width': '100%', 'flexDirection': 'column', 'justifyContent': 'flex-start'};
    offset = 7;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingBottom'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingHorizontal'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['marginBottom'] = romeon;
    romeon = 'hidden';
    verify['overflow'] = romeon;
    tangon['card'] = verify;
    verify = {};
    romeon = 'center';
    verify['alignSelf'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['marginBottom'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderTopLeftRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderTopRightRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.none;
    verify['borderBottomRightRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.none;
    verify['borderBottomLeftRadius'] = romeon;
    romeon = '110%';
    verify['width'] = romeon;
    romeon = 95;
    verify['height'] = romeon;
    tangon['image'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['marginVertical'] = offset;
    offset = 'uppercase';
    verify['textTransform'] = offset;
    tangon['countdown'] = verify;
    verify = {'bottom': 4294967295, 'width': 22, 'height': 16};
    tangon['nitroWheelIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot13 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/premium_marketing/PremiumPromotionCard.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        michal = argFoo;
        oscard = michal.style;
        verify = michal.applicationId;
        var _closure2_slot0 = verify;
        option = michal.onPaymentSuccess;
        var _closure2_slot1 = option;
        golfie = michal.onPaymentDismiss;
        var _closure2_slot2 = golfie;
        michal = _closure1_slot13;
        tangon = undefined;
        output = michal.bind(tangon)();
        foxtra = _closure1_slot0;
        sizing = _closure1_slot2;
        michal = 8;
        michal = sizing[michal];
        offset = foxtra.bind(tangon)(michal);
        report = offset.useStateFromStores;
        michal = _closure1_slot5;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            entity = _closure1_slot5;
            entity = entity.useReducedMotion;
            return entity;
        };
        yankee = report.bind(offset)(zuuluu, michal);
        kiloes = _closure1_slot1;
        michal = 9;
        michal = sizing[michal];
        michal = kiloes.bind(tangon)(michal);
        michal = michal.bind(tangon)();
        offset = michal.analyticsLocations;
        var _closure2_slot3 = offset;
        report = _closure1_slot3;
        zuuluu = report.useCallback;
        michal = new Array(4);
        michal[0] = offset;
        michal[1] = verify;
        michal[2] = option;
        michal[3] = golfie;
        entity = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 10;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = {};
            tangon = {};
            oscard = _closure1_slot7;
            oscard = oscard.BOGO_PROMOTION_MARKETING_PAGE_BANNER;
            tangon['page'] = oscard;
            oscard = _closure1_slot8;
            oscard = oscard.SETTINGS_PREMIUM;
            tangon['section'] = oscard;
            oscard = _closure1_slot6;
            oscard = oscard.BUY;
            tangon['objectType'] = oscard;
            michal['analyticsLocation'] = tangon;
            oscard = _closure2_slot3;
            michal['analyticsLocations'] = oscard;
            report = _closure1_slot10;
            report = report.TIER_2;
            michal['premiumType'] = report;
            report = _closure2_slot0;
            michal['applicationId'] = report;
            report = _closure2_slot1;
            michal['onPaymentSuccess'] = report;
            tangon = _closure2_slot2;
            michal['onPaymentDismiss'] = tangon;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        romeon = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot11;
        michal = _closure1_slot4;
        entity = {};
        golfie = output.container;
        report = new Array(2);
        report[0] = golfie;
        report[1] = oscard;
        entity['style'] = report;
        oscard = _closure1_slot12;
        report = {};
        option = output.card;
        golfie = new Array(1);
        golfie[0] = option;
        report['style'] = golfie;
        golfie = 11;
        golfie = sizing[golfie];
        option = kiloes.bind(tangon)(golfie);
        golfie = {};
        verify = {};
        offset = 'https://cdn.discordapp.com/assets/content/da4c50f6fba3cf58b484571ef1a57c355fbd31636683792858fa41d1ab027520.png';
        verify['uri'] = offset;
        golfie['source'] = verify;
        verify = output.image;
        golfie['style'] = verify;
        option = zuuluu.bind(tangon)(option, golfie);
        golfie = new Array(4);
        golfie[0] = option;
        option = 12;
        verify = sizing[option];
        verify = foxtra.bind(tangon)(verify);
        offset = verify.Text;
        verify = {'color': 'header-primary', 'variant': 'heading-md/extrabold'};
        result = 13;
        backup = sizing[result];
        backup = foxtra.bind(tangon)(backup);
        update = backup.intl;
        echoed = update.string;
        backup = sizing[result];
        backup = foxtra.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.6Jjfk5;
        backup = echoed.bind(update)(backup);
        verify['children'] = backup;
        verify = zuuluu.bind(tangon)(offset, verify);
        golfie[1] = verify;
        option = sizing[option];
        option = foxtra.bind(tangon)(option);
        verify = option.Text;
        option = {'color': 'header-primary', 'variant': 'text-sm/normal'};
        offset = sizing[result];
        offset = foxtra.bind(tangon)(offset);
        update = offset.intl;
        echoed = update.format;
        offset = sizing[result];
        offset = foxtra.bind(tangon)(offset);
        offset = offset.t;
        backup = offset.dE3+TE;
        offset = {};
        ctrled = 14;
        ctrled = sizing[ctrled];
        vacuum = kiloes.bind(tangon)(ctrled);
        ctrled = vacuum.getArticleURL;
        source = _closure1_slot9;
        source = source.SUMMER_BOGO_2025;
        source = ctrled.bind(vacuum)(source);
        offset['helpCenterLink'] = source;
        offset = echoed.bind(update)(backup, offset);
        option['children'] = offset;
        option = zuuluu.bind(tangon)(verify, option);
        golfie[2] = option;
        option = {};
        verify = {};
        backup = 7;
        offset = sizing[backup];
        offset = kiloes.bind(tangon)(offset);
        offset = offset.spacing;
        offset = offset.PX_24;
        verify['marginTop'] = offset;
        option['style'] = verify;
        verify = 15;
        verify = sizing[verify];
        verify = foxtra.bind(tangon)(verify);
        offset = verify.Button;
        verify = {'text': null, 'size': 'lg', 'onPress': null, 'icon': null, 'iconPosition': 'start', 'variant': 'experimental_premium-secondary'};
        echoed = sizing[result];
        echoed = foxtra.bind(tangon)(echoed);
        update = echoed.intl;
        echoed = update.string;
        result = sizing[result];
        result = foxtra.bind(tangon)(result);
        result = result.t;
        result = result.J61px8;
        result = echoed.bind(update)(result);
        verify['text'] = result;
        verify['onPress'] = romeon;
        romeon = 16;
        romeon = sizing[romeon];
        romeon = foxtra.bind(tangon)(romeon);
        foxtra = romeon.NitroWheelIcon;
        romeon = {};
        result = output.nitroWheelIcon;
        output = new Array(1);
        output[0] = result;
        romeon['style'] = output;
        backup = sizing[backup];
        backup = kiloes.bind(tangon)(backup);
        backup = backup.unsafe_rawColors;
        backup = backup.BRAND_500;
        romeon['color'] = backup;
        backup = 'custom';
        romeon['size'] = backup;
        romeon = zuuluu.bind(tangon)(foxtra, romeon);
        verify['icon'] = romeon;
        yankee = !yankee;
        verify['shiny'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option['children'] = verify;
        option = zuuluu.bind(tangon)(michal, option);
        golfie[3] = option;
        report['children'] = golfie;
        report = oscard.bind(tangon)(michal, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();