// app/modules/user_settings/native/premium_marketing/PremiumMarketingPage.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.FractionalPremiumStates;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot9 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'flex';
    verify['display'] = offset;
    tangon['container'] = verify;
    verify = {'flexDirection': 'column', 'alignItems': 'center', 'marginTop': 16};
    tangon['scrollContainer'] = verify;
    verify = {};
    offset = 7;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_NORMAL;
    verify['tintColor'] = offset;
    tangon['arrowIcon'] = verify;
    verify = {'transform': null, 'position': 'absolute', 'left': 16};
    yankee = {};
    offset = -1;
    yankee['scaleX'] = offset;
    offset = new Array(1);
    offset[0] = yankee;
    verify['transform'] = offset;
    tangon['backButton'] = verify;
    verify = {};
    offset = 48;
    verify['marginTop'] = offset;
    tangon['sectionWithTopMargin'] = verify;
    verify = {};
    offset = 12;
    verify['paddingHorizontal'] = offset;
    tangon['sectionWithPadding'] = verify;
    verify = {};
    offset = 464;
    verify['maxWidth'] = offset;
    tangon['sectionWidth'] = verify;
    verify = {};
    offset = '100%';
    verify['width'] = offset;
    tangon['accountCreditContainer'] = verify;
    verify = {'marginTop': 24, 'marginBottom': 20};
    tangon['accountCreditContainerWithSpacing'] = verify;
    verify = {};
    offset = 8;
    yankee = oscard[offset];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.DARK_PRIMARY_700_LIGHT_WHITE_500;
    verify['backgroundColor'] = yankee;
    tangon['themedBackground'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = report.bind(entity)(offset);
    offset = offset.TIER_0_MARKETING_PAGE_BACK_BUTTON_BG;
    verify['backgroundColor'] = offset;
    tangon['backButtonBackground'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 26;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/premium_marketing/PremiumMarketingPage.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            foxtra = michal.userHasSubscription;
            var _closure2_slot0 = foxtra;
            backup = michal.subscriptionDetails;
            romeon = michal.billingInfo;
            sizing = michal.accountCredit;
            source = michal.applicationId;
            entity = michal.onClose;
            ctrled = michal.premiumFeatureCardOrder;
            zuuluu = michal.entitlements;
            update = michal.onPaymentSuccess;
            echoed = michal.onPaymentDismiss;
            tangon = undefined;
            var _closure2_slot5 = tangon;
            report = _closure1_slot0;
            golfie = _closure1_slot2;
            michal = 9;
            michal = golfie[michal];
            option = report.bind(tangon)(michal);
            oscard = option.useCommonTriggerPoint;
            michal = 10;
            michal = golfie[michal];
            michal = report.bind(tangon)(michal);
            michal = michal.OpenNitroTriggerPoint;
            michal = oscard.bind(option)(michal);
            michal = _closure1_slot11;
            kiloes = michal.bind(tangon)();
            oscard = _closure1_slot1;
            michal = 11;
            michal = golfie[michal];
            michal = oscard.bind(tangon)(michal);
            michal = michal.bind(tangon)();
            option = michal.top;
            michal = 12;
            michal = golfie[michal];
            report = report.bind(tangon)(michal);
            michal = report.useNavigation;
            michal = michal.bind(report)();
            var _closure2_slot1 = michal;
            report = 13;
            report = golfie[report];
            report = oscard.bind(tangon)(report);
            report = report.bind(tangon)();
            report = report.analyticsLocations;
            var _closure2_slot2 = report;
            golfie = _closure1_slot4;
            report = golfie.useState;
            verify = false;
            offset = report.bind(golfie)(verify);
            oscard = _closure1_slot3;
            report = 2;
            oscard = oscard.bind(tangon)(offset, report);
            sequen = 0;
            report = oscard[sequen];
            var _closure2_slot3 = report;
            report = 1;
            report = oscard[report];
            var _closure2_slot4 = report;
            oscard = golfie.useLayoutEffect;
            report = new Array(2);
            report[0] = michal;
            report[1] = foxtra;
            michal = function() {
                zuuluu = _closure2_slot1;
                michal = zuuluu.setOptions;
                entity = {};
                tangon = _closure2_slot0;
                entity['headerShown'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            michal = oscard.bind(golfie)(michal, report);
            offset = null;
            if(!(offset == entity)) { _fun00002_ip = 305; continue _fun00001 }
 298:
            entity = function() {
                michal = _closure2_slot1;
                entity = michal.pop;
                entity = entity.bind(michal)();
                return entity;
            };
 305:
            _closure2_slot5 = entity;
            vacuum = !foxtra;
            if(!vacuum) { _fun00002_ip = 508; continue _fun00001 }
 318:
            report = _closure1_slot9;
            golfie = _closure1_slot0;
            yankee = _closure1_slot2;
            oscard = 14;
            entity = yankee[oscard];
            entity = golfie.bind(tangon)(entity);
            michal = entity.CircularIconButton;
            entity = {};
            record = kiloes.backButton;
            result = new Array(2);
            result[0] = record;
            record = kiloes.backButtonBackground;
            result[1] = record;
            entity['style'] = result;
            result = 15;
            record = yankee[result];
            record = golfie.bind(tangon)(record);
            cntext = record.intl;
            record = cntext.string;
            result = yankee[result];
            result = golfie.bind(tangon)(result);
            result = result.t;
            result = result.13/7kZ;
            result = record.bind(cntext)(result);
            entity['accessibilityLabel'] = result;
            record = _closure1_slot1;
            result = 16;
            result = yankee[result];
            result = record.bind(tangon)(result);
            entity['source'] = result;
            oscard = yankee[oscard];
            oscard = golfie.bind(tangon)(oscard);
            oscard = oscard.CircularIconButton;
            oscard = oscard.Sizes;
            oscard = oscard.MEDIUM_32;
            entity['size'] = oscard;
            oscard = kiloes.arrowIcon;
            entity['iconStyle'] = oscard;
            oscard = function() { // Original name: onPress
                michal = _closure2_slot5;
                entity = undefined;
                entity = michal.bind(entity)();
                return entity;
            };
            entity['onPress'] = oscard;
            vacuum = report.bind(tangon)(michal, entity);
 508:
            yankee = offset != zuuluu;
            if(!yankee) { _fun00002_ip = 546; continue _fun00001 }
 515:
            michal = _closure1_slot1;
            report = _closure1_slot2;
            entity = 17;
            entity = report[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.hasAccountCredit;
            yankee = entity.bind(michal)(zuuluu);
 546:
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 18;
            entity = zuuluu[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            zuuluu = true;
            entity['forceFetch'] = zuuluu;
            result = michal.bind(tangon)(entity);
            zuuluu = _closure1_slot10;
            michal = _closure1_slot5;
            entity = {};
            oscard = kiloes.container;
            report = new Array(3);
            report[0] = oscard;
            oscard = kiloes.themedBackground;
            report[1] = oscard;
            oscard = {};
            golfie = 0;
            if(foxtra) { _fun00002_ip = 623; continue _fun00001 }
 620:
            golfie = option;
 623:
            oscard['paddingTop'] = golfie;
            report[2] = oscard;
            entity['style'] = report;
            golfie = _closure1_slot9;
            oscard = _closure1_slot1;
            option = _closure1_slot2;
            report = 19;
            report = option[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot10;
            golfie = _closure1_slot6;
            oscard = {};
            record = kiloes.scrollContainer;
            oscard['contentContainerStyle'] = record;
            config = function(argFoo) { // Original name: onScroll
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = argFoo;
                    entity = entity.nativeEvent;
                    report = entity.layoutMeasurement;
                    tangon = entity.contentOffset;
                    zuuluu = entity.contentSize;
                    michal = _closure2_slot3;
                    if(michal) { _fun00004_ip = 59; continue _fun00003 }
 36:
                    report = report.height;
                    tangon = tangon.y;
                    tangon = report + tangon;
                    zuuluu = zuuluu.height;
                    michal = tangon < zuuluu;
 59:
                    if(michal) { _fun00004_ip = 130; continue _fun00003 }
 62:
                    report = _closure1_slot1;
                    tangon = _closure1_slot2;
                    zuuluu = 20;
                    tangon = tangon[zuuluu];
                    zuuluu = undefined;
                    oscard = report.bind(zuuluu)(tangon);
                    report = oscard.track;
                    michal = _closure1_slot7;
                    tangon = michal.PREMIUM_MARKETING_SURFACE_REACHED_BOTTOM;
                    michal = {};
                    golfie = _closure2_slot2;
                    michal['location_stack'] = golfie;
                    michal = report.bind(oscard)(tangon, michal);
                    michal = _closure2_slot4;
                    entity = true;
                    entity = michal.bind(zuuluu)(entity);
 130:
                    entity = undefined;
                    return entity;
                }
            };
            oscard['onScroll'] = config;
            oscard['scrollEventThrottle'] = sequen;
            oscard['showsVerticalScrollIndicator'] = verify;
            verify = new Array(9);
            verify[0] = vacuum;
            verify[1] = backup;
            verify[2] = romeon;
            offset = null;
            if(!yankee) { _fun00002_ip = 795; continue _fun00001 }
 740:
            backup = _closure1_slot9;
            romeon = _closure1_slot5;
            yankee = {};
            sequen = kiloes.accountCreditContainer;
            vacuum = new Array(2);
            vacuum[0] = sequen;
            if(foxtra) { _fun00002_ip = 775; continue _fun00001 }
 767:
            sequen = kiloes.accountCreditContainerWithSpacing;
            _fun00002_ip = 777; continue _fun00001;
 775:
            sequen = {};
 777:
            vacuum[1] = sequen;
            yankee['style'] = vacuum;
            yankee['children'] = sizing;
            offset = backup.bind(tangon)(romeon, yankee);
 795:
            verify[3] = offset;
            romeon = _closure1_slot9;
            yankee = _closure1_slot1;
            backup = _closure1_slot2;
            offset = 21;
            offset = backup[offset];
            yankee = yankee.bind(tangon)(offset);
            offset = {};
            if(foxtra) { _fun00002_ip = 832; continue _fun00001 }
 828:
            sizing = {};
            _fun00002_ip = 838; continue _fun00001;
 832:
            sizing = kiloes.sectionWithTopMargin;
 838:
            backup = new Array(2);
            backup[0] = sizing;
            sizing = kiloes.sectionWidth;
            backup[1] = sizing;
            offset['style'] = backup;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[4] = offset;
            romeon = _closure1_slot9;
            yankee = _closure1_slot1;
            backup = _closure1_slot2;
            offset = 22;
            offset = backup[offset];
            sizing = yankee.bind(tangon)(offset);
            offset = {};
            sequen = kiloes.sectionWithPadding;
            vacuum = new Array(2);
            vacuum[0] = sequen;
            sequen = kiloes.sectionWidth;
            vacuum[1] = sequen;
            offset['style'] = vacuum;
            offset['order'] = ctrled;
            offset['applicationId'] = source;
            offset['onPaymentSuccess'] = update;
            offset['onPaymentDismiss'] = echoed;
            offset = romeon.bind(tangon)(sizing, offset);
            verify[5] = offset;
            offset = 23;
            offset = backup[offset];
            sizing = yankee.bind(tangon)(offset);
            offset = {};
            update = kiloes.sectionWithTopMargin;
            echoed = new Array(2);
            echoed[0] = update;
            update = kiloes.sectionWidth;
            echoed[1] = update;
            offset['style'] = echoed;
            offset = romeon.bind(tangon)(sizing, offset);
            verify[6] = offset;
            offset = 24;
            offset = backup[offset];
            sizing = yankee.bind(tangon)(offset);
            offset = {};
            update = kiloes.sectionWithTopMargin;
            echoed = new Array(3);
            echoed[0] = update;
            update = kiloes.sectionWithPadding;
            echoed[1] = update;
            update = kiloes.sectionWidth;
            echoed[2] = update;
            offset['style'] = echoed;
            result = result.fractionalState;
            output = _closure1_slot8;
            output = output.FP_ONLY;
            output = result === output;
            offset['isFractionalOnly'] = output;
            offset = romeon.bind(tangon)(sizing, offset);
            verify[7] = offset;
            offset = 25;
            offset = backup[offset];
            yankee = yankee.bind(tangon)(offset);
            offset = {};
            sizing = kiloes.sectionWithTopMargin;
            backup = new Array(3);
            backup[0] = sizing;
            sizing = kiloes.sectionWithPadding;
            backup[1] = sizing;
            kiloes = kiloes.sectionWidth;
            backup[2] = kiloes;
            offset['style'] = backup;
            foxtra = !foxtra;
            offset['showSubscribeButton'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[8] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();