// app/modules/user_settings/native/premium_marketing/PremiumFeaturesCarouselSection.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    option = argBar;
    backup = argBaz;
    zuuluu = argFre;
    verify = argPlu;
    var _closure1_slot0 = option;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = verify;
    report = function(argFoo) { // Original name: PremiumFeaturesCardBackground
        entity = argFoo;
        verify = entity.style;
        report = entity.children;
        entity = _closure1_slot13;
        tangon = undefined;
        golfie = entity.bind(tangon)();
        zuuluu = _closure1_slot9;
        michal = _closure1_slot1;
        option = _closure1_slot2;
        entity = 9;
        entity = option[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        offset = golfie.card;
        golfie = new Array(2);
        golfie[0] = offset;
        golfie[1] = verify;
        entity['style'] = golfie;
        golfie = _closure1_slot0;
        oscard = 10;
        verify = option[oscard];
        verify = golfie.bind(tangon)(verify);
        verify = verify.VerticalGradient;
        verify = verify.START;
        entity['start'] = verify;
        verify = option[oscard];
        verify = golfie.bind(tangon)(verify);
        verify = verify.VerticalGradient;
        verify = verify.END;
        entity['end'] = verify;
        oscard = option[oscard];
        oscard = golfie.bind(tangon)(oscard);
        oscard = oscard.Gradients;
        oscard = oscard.PREMIUM_TIER_0_PERK_CARD;
        entity['colors'] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot17 = report;
    tangon = function(argFoo, argBar) { // Original name: usePremiumFeatureCardData
        oscard = argBar;
        michal = argFoo;
        var _closure2_slot0 = michal;
        var _closure2_slot1 = oscard;
        tangon = _closure1_slot14;
        michal = undefined;
        michal = tangon.bind(michal)();
        var _closure2_slot2 = michal;
        report = _closure1_slot4;
        tangon = report.useMemo;
        zuuluu = new Array(2);
        zuuluu[0] = oscard;
        zuuluu[1] = michal;
        michal = function() {
            entity = {};
            yankee = _closure1_slot0;
            option = _closure1_slot2;
            report = 13;
            zuuluu = option[report];
            golfie = undefined;
            zuuluu = yankee.bind(golfie)(zuuluu);
            oscard = zuuluu.intl;
            tangon = oscard.string;
            zuuluu = option[report];
            zuuluu = yankee.bind(golfie)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu.3cyhe3;
            zuuluu = tangon.bind(oscard)(zuuluu);
            entity['title'] = zuuluu;
            oscard = _closure1_slot1;
            zuuluu = 14;
            zuuluu = option[zuuluu];
            zuuluu = oscard.bind(golfie)(zuuluu);
            entity['imageSrc'] = zuuluu;
            zuuluu = _closure2_slot2;
            zuuluu = zuuluu.emojiImage;
            entity['imageStyle'] = zuuluu;
            tangon = global;
            offset = tangon.Set;
            zuuluu = _closure1_slot8;
            verify = zuuluu.TIER_0;
            zuuluu = new Array(2);
            zuuluu[0] = verify;
            verify = _closure1_slot8;
            verify = verify.TIER_2;
            zuuluu[1] = verify;
            verify = offset.prototype;
            verify = Object.create(verify, {constructor: {value: offset}});
            backup = verify;
            foxtra = zuuluu;
            zuuluu = new backup[offset](foxtra, romeon);
            zuuluu = zuuluu instanceof Object ? zuuluu : verify;
            entity['premiumTypes'] = zuuluu;
            zuuluu = new Array(4);
            zuuluu[0] = entity;
            entity = {};
            verify = option[report];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = option[report];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.8AhJq6;
            verify = offset.bind(romeon)(verify);
            entity['title'] = verify;
            verify = 15;
            verify = option[verify];
            verify = oscard.bind(golfie)(verify);
            entity['imageSrc'] = verify;
            romeon = tangon.Set;
            verify = _closure1_slot8;
            offset = verify.TIER_0;
            verify = new Array(2);
            verify[0] = offset;
            offset = _closure1_slot8;
            offset = offset.TIER_2;
            verify[1] = offset;
            offset = romeon.prototype;
            offset = Object.create(offset, {constructor: {value: romeon}});
            backup = offset;
            foxtra = verify;
            verify = new backup[romeon](foxtra, romeon);
            verify = verify instanceof Object ? verify : offset;
            entity['premiumTypes'] = verify;
            zuuluu[1] = entity;
            entity = {};
            verify = option[report];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = option[report];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.t/Mvdn;
            verify = offset.bind(romeon)(verify);
            entity['title'] = verify;
            verify = 16;
            verify = option[verify];
            verify = oscard.bind(golfie)(verify);
            entity['imageSrc'] = verify;
            romeon = tangon.Set;
            verify = _closure1_slot8;
            offset = verify.TIER_2;
            verify = new Array(1);
            verify[0] = offset;
            offset = romeon.prototype;
            offset = Object.create(offset, {constructor: {value: romeon}});
            backup = offset;
            foxtra = verify;
            verify = new backup[romeon](foxtra, romeon);
            verify = verify instanceof Object ? verify : offset;
            entity['premiumTypes'] = verify;
            zuuluu[2] = entity;
            entity = {};
            verify = option[report];
            verify = yankee.bind(golfie)(verify);
            offset = verify.intl;
            verify = offset.string;
            report = option[report];
            report = yankee.bind(golfie)(report);
            report = report.t;
            report = report.n+DGY2;
            report = verify.bind(offset)(report);
            entity['title'] = report;
            report = 17;
            report = option[report];
            report = oscard.bind(golfie)(report);
            entity['imageSrc'] = report;
            report = tangon.Set;
            michal = _closure1_slot8;
            tangon = michal.TIER_2;
            michal = new Array(1);
            michal[0] = tangon;
            tangon = report.prototype;
            tangon = Object.create(tangon, {constructor: {value: report}});
            backup = tangon;
            foxtra = michal;
            michal = new backup[report](foxtra, romeon);
            michal = michal instanceof Object ? michal : tangon;
            entity['premiumTypes'] = michal;
            zuuluu[3] = entity;
            michal = zuuluu.filter;
            entity = function(argFoo) {
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    zuuluu = _closure2_slot1;
                    entity = null;
                    entity = entity == zuuluu;
                    if(entity) { _fun00002_ip = 39; continue _fun00001 }
 16:
                    zuuluu = argFoo;
                    tangon = zuuluu.premiumTypes;
                    zuuluu = tangon.has;
                    michal = _closure2_slot1;
                    entity = zuuluu.bind(tangon)(michal);
 39:
                    return entity;
                }
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        zuuluu = tangon.bind(report)(michal, zuuluu);
        michal = zuuluu.map;
        entity = function(argFoo, argBar) {
            report = _closure1_slot9;
            tangon = _closure1_slot15;
            zuuluu = {};
            entity = {};
            oscard = _closure2_slot0;
            michal = 0.85;
            michal = michal * oscard;
            entity['width'] = michal;
            zuuluu['style'] = entity;
            option = argFoo;
            verify = zuuluu;
            entity = copyDataProperties(verify, option);
            entity = global;
            entity = entity.HermesInternal;
            oscard = entity.concat;
            michal = 'card_';
            entity = argBar;
            michal = oscard.bind(michal)(entity);
            entity = undefined;
            entity = report.bind(entity)(tangon, zuuluu, michal);
            return entity;
        };
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    var _closure1_slot18 = tangon;
    entity = global;
    offset = entity.Object;
    golfie = offset.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(offset)(zuuluu, entity, michal);
    entity = 0;
    michal = verify[entity];
    entity = undefined;
    michal = backup.bind(entity)(michal);
    var _closure1_slot3 = michal;
    michal = 1;
    golfie = verify[michal];
    michal = argCor;
    michal = michal.bind(entity)(golfie);
    var _closure1_slot4 = michal;
    michal = 2;
    michal = verify[michal];
    michal = option.bind(entity)(michal);
    michal = michal.View;
    var _closure1_slot5 = michal;
    michal = 3;
    michal = verify[michal];
    michal = backup.bind(entity)(michal);
    var _closure1_slot6 = michal;
    michal = 4;
    michal = verify[michal];
    michal = option.bind(entity)(michal);
    michal = michal.AnalyticEvents;
    var _closure1_slot7 = michal;
    michal = 5;
    michal = verify[michal];
    michal = option.bind(entity)(michal);
    michal = michal.PremiumTypes;
    var _closure1_slot8 = michal;
    michal = 6;
    michal = verify[michal];
    michal = option.bind(entity)(michal);
    golfie = michal.jsx;
    var _closure1_slot9 = golfie;
    golfie = michal.jsxs;
    var _closure1_slot10 = golfie;
    michal = michal.Fragment;
    var _closure1_slot11 = michal;
    michal = 7;
    golfie = verify[michal];
    yankee = option.bind(entity)(golfie);
    offset = yankee.createStyles;
    golfie = {};
    romeon = {'display': 'flex', 'flex': 1};
    golfie['container'] = romeon;
    romeon = {};
    kiloes = 'center';
    romeon['textAlign'] = kiloes;
    golfie['headerText'] = romeon;
    romeon = {};
    foxtra = 8;
    sizing = verify[foxtra];
    sizing = backup.bind(entity)(sizing);
    sizing = sizing.spacing;
    sizing = sizing.PX_16;
    romeon['marginTop'] = sizing;
    golfie['carouselContainer'] = romeon;
    romeon = {'flex': 1, 'alignItems': 'center', 'minHeight': 262};
    golfie['carousel'] = romeon;
    romeon = {};
    sizing = verify[foxtra];
    sizing = backup.bind(entity)(sizing);
    sizing = sizing.spacing;
    sizing = sizing.PX_32;
    sizing = -sizing;
    romeon['marginBottom'] = sizing;
    golfie['indicators'] = romeon;
    golfie = offset.bind(yankee)(golfie);
    var _closure1_slot12 = golfie;
    golfie = verify[michal];
    yankee = option.bind(entity)(golfie);
    offset = yankee.createStyles;
    golfie = {};
    romeon = {'flexGrow': 1, 'alignSelf': 'center', 'justifyContent': 'space-between'};
    sizing = verify[foxtra];
    sizing = backup.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.lg;
    romeon['borderRadius'] = sizing;
    golfie['card'] = romeon;
    romeon = {};
    romeon['alignSelf'] = kiloes;
    golfie['image'] = romeon;
    romeon = {};
    kiloes = verify[foxtra];
    kiloes = backup.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_24;
    romeon['marginTop'] = kiloes;
    foxtra = verify[foxtra];
    foxtra = backup.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    romeon['marginHorizontal'] = foxtra;
    golfie['cardTitle'] = romeon;
    golfie = offset.bind(yankee)(golfie);
    var _closure1_slot13 = golfie;
    michal = verify[michal];
    offset = option.bind(entity)(michal);
    golfie = offset.createStyles;
    michal = {};
    yankee = {};
    romeon = 'flex-end';
    yankee['alignSelf'] = romeon;
    michal['emojiImage'] = yankee;
    michal = golfie.bind(offset)(michal);
    var _closure1_slot14 = michal;
    michal = function(argFoo) { // Original name: CarouselCard
        entity = argFoo;
        report = entity.style;
        foxtra = entity.title;
        yankee = entity.imageSrc;
        offset = entity.imageStyle;
        entity = _closure1_slot13;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot10;
        michal = _closure1_slot17;
        entity = {};
        entity['style'] = report;
        option = _closure1_slot9;
        golfie = _closure1_slot0;
        romeon = _closure1_slot2;
        report = 11;
        report = romeon[report];
        report = golfie.bind(tangon)(report);
        golfie = report.Text;
        report = {'variant': 'heading-md/extrabold', 'color': 'always-white'};
        backup = verify.cardTitle;
        report['style'] = backup;
        report['children'] = foxtra;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        option = _closure1_slot9;
        golfie = _closure1_slot1;
        oscard = 12;
        oscard = romeon[oscard];
        golfie = golfie.bind(tangon)(oscard);
        oscard = {};
        oscard['source'] = yankee;
        yankee = verify.image;
        verify = new Array(2);
        verify[0] = yankee;
        verify[1] = offset;
        oscard['style'] = verify;
        verify = 'contain';
        oscard['resizeMode'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot15 = michal;
    michal = function(argFoo) { // Original name: PremiumFeaturesCarousel
        michal = argFoo;
        kiloes = michal.width;
        entity = michal.onEndReached;
        var _closure2_slot0 = entity;
        offset = michal.children;
        var _closure2_slot1 = offset;
        result = michal.style;
        michal = _closure1_slot12;
        tangon = undefined;
        yankee = michal.bind(tangon)();
        report = _closure1_slot4;
        zuuluu = report.useState;
        michal = 0;
        golfie = zuuluu.bind(report)(michal);
        report = _closure1_slot3;
        zuuluu = 2;
        zuuluu = report.bind(tangon)(golfie, zuuluu);
        verify = zuuluu[michal];
        var _closure2_slot2 = verify;
        michal = 1;
        backup = zuuluu[michal];
        report = _closure1_slot4;
        zuuluu = report.useEffect;
        michal = new Array(3);
        michal[0] = verify;
        golfie = offset.length;
        michal[1] = golfie;
        michal[2] = entity;
        entity = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                zuuluu = _closure2_slot2;
                michal = _closure2_slot1;
                tangon = michal.length;
                michal = 1;
                michal = tangon - michal;
                if(!(zuuluu === michal)) { _fun00004_ip = 47; continue _fun00003 }
 27:
                zuuluu = _closure2_slot0;
                michal = null;
                if(!(michal != zuuluu)) { _fun00004_ip = 47; continue _fun00003 }
 37:
                michal = _closure2_slot0;
                entity = undefined;
                entity = michal.bind(entity)();
 47:
                entity = undefined;
                return entity;
            }
        };
        entity = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot10;
        michal = _closure1_slot11;
        entity = {};
        foxtra = _closure1_slot9;
        golfie = _closure1_slot1;
        romeon = _closure1_slot2;
        report = 18;
        report = romeon[report];
        option = golfie.bind(tangon)(report);
        report = {};
        echoed = yankee.carousel;
        output = new Array(2);
        output[0] = echoed;
        output[1] = result;
        report['style'] = output;
        report['data'] = offset;
        sizing = function(argFoo) { // Original name: renderItem
            entity = argFoo;
            entity = entity.item;
            return entity;
        };
        report['renderItem'] = sizing;
        report['width'] = kiloes;
        kiloes = false;
        report['loop'] = kiloes;
        kiloes = {};
        sizing = new Array(2);
        output = -10;
        sizing[0] = output;
        output = 10;
        sizing[1] = output;
        kiloes['activeOffsetX'] = sizing;
        report['panGestureHandlerProps'] = kiloes;
        kiloes = 200;
        report['scrollAnimationDuration'] = kiloes;
        kiloes = 'parallax';
        report['mode'] = kiloes;
        kiloes = {'parallaxScrollingScale': 1, 'parallaxScrollingOffset': 45};
        report['modeConfig'] = kiloes;
        report['onSnapToItem'] = backup;
        option = foxtra.bind(tangon)(option, report);
        report = new Array(2);
        report[0] = option;
        option = _closure1_slot9;
        oscard = 19;
        oscard = romeon[oscard];
        golfie = golfie.bind(tangon)(oscard);
        oscard = {};
        yankee = yankee.indicators;
        oscard['containerStyle'] = yankee;
        offset = offset.length;
        oscard['numberOfItems'] = offset;
        oscard['currentIndex'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot16 = michal;
    golfie = 23;
    golfie = verify[golfie];
    verify = option.bind(entity)(golfie);
    option = verify.fileFinishedImporting;
    golfie = 'modules/user_settings/native/premium_marketing/PremiumFeaturesCarouselSection.tsx';
    golfie = option.bind(verify)(golfie);
    oscard = function(argFoo) { // Original name: _default
        michal = argFoo;
        golfie = michal.style;
        michal = _closure1_slot12;
        tangon = undefined;
        yankee = michal.bind(tangon)();
        zuuluu = _closure1_slot1;
        output = _closure1_slot2;
        michal = 20;
        michal = output[michal];
        michal = zuuluu.bind(tangon)(michal);
        michal = michal.bind(tangon)();
        verify = michal.analyticsLocations;
        var _closure2_slot0 = verify;
        report = _closure1_slot4;
        zuuluu = report.useState;
        michal = false;
        report = zuuluu.bind(report)(michal);
        zuuluu = _closure1_slot3;
        michal = 2;
        zuuluu = zuuluu.bind(tangon)(report, michal);
        michal = 0;
        option = zuuluu[michal];
        var _closure2_slot1 = option;
        michal = 1;
        michal = zuuluu[michal];
        var _closure2_slot2 = michal;
        sizing = _closure1_slot0;
        michal = 21;
        michal = output[michal];
        offset = sizing.bind(tangon)(michal);
        report = offset.useStateFromStores;
        michal = _closure1_slot6;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            michal = _closure1_slot6;
            entity = michal.getWidth;
            entity = entity.bind(michal)();
            return entity;
        };
        romeon = report.bind(offset)(zuuluu, michal);
        report = _closure1_slot4;
        zuuluu = report.useCallback;
        michal = new Array(2);
        michal[0] = verify;
        michal[1] = option;
        entity = function() {
            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                michal = _closure2_slot1;
                if(michal) { _fun00006_ip = 78; continue _fun00005 }
 10:
                report = _closure1_slot1;
                tangon = _closure1_slot2;
                zuuluu = 22;
                tangon = tangon[zuuluu];
                zuuluu = undefined;
                oscard = report.bind(zuuluu)(tangon);
                report = oscard.track;
                michal = _closure1_slot7;
                tangon = michal.PREMIUM_MARKETING_SCROLLED_TO_LAST;
                michal = {};
                golfie = _closure2_slot0;
                michal['location_stack'] = golfie;
                michal = report.bind(oscard)(tangon, michal);
                michal = _closure2_slot2;
                entity = true;
                entity = michal.bind(zuuluu)(entity);
 78:
                entity = undefined;
                return entity;
            }
        };
        offset = zuuluu.bind(report)(entity, michal);
        entity = _closure1_slot18;
        verify = entity.bind(tangon)(romeon);
        zuuluu = _closure1_slot10;
        michal = _closure1_slot5;
        entity = {};
        option = yankee.container;
        report = new Array(2);
        report[0] = option;
        report[1] = golfie;
        entity['style'] = report;
        option = _closure1_slot9;
        report = 11;
        report = output[report];
        report = sizing.bind(tangon)(report);
        golfie = report.Text;
        report = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        foxtra = yankee.headerText;
        report['style'] = foxtra;
        foxtra = 13;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = output[foxtra];
        foxtra = sizing.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.RGadQU;
        foxtra = backup.bind(kiloes)(foxtra);
        report['children'] = foxtra;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        option = _closure1_slot9;
        golfie = _closure1_slot16;
        oscard = {};
        oscard['width'] = romeon;
        yankee = yankee.carouselContainer;
        oscard['style'] = yankee;
        oscard['onEndReached'] = offset;
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = oscard;
    oscard = 0.85;
    zuuluu['PREMIUM_FEATURES_PROPORTIONAL_CARD_WIDTH'] = oscard;
    zuuluu['PremiumFeaturesCardBackground'] = report;
    zuuluu['usePremiumFeatureCardData'] = tangon;
    zuuluu['PremiumFeaturesCarousel'] = michal;
    return entity;
})();