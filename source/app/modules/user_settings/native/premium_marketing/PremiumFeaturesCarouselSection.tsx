// app/modules/user_settings/native/premium_marketing/PremiumFeaturesCarouselSection.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    options = argBar;
    backup = argBaz;
    zulu = argFred;
    verify = argPlugh;
    var _closure1_slot0 = options;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = verify;
    report = function(argFoo) { // Original name: PremiumFeaturesCardBackground
        entity = argFoo;
        verify = entity.style;
        report = entity.children;
        entity = _closure1_slot13;
        tango = undefined;
        golf = entity.bind(tango)();
        zulu = _closure1_slot9;
        mike = _closure1_slot1;
        options = _closure1_slot2;
        entity = 9;
        entity = options[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        offset = golf.card;
        golf = new Array(2);
        golf[0] = offset;
        golf[1] = verify;
        entity['style'] = golf;
        golf = _closure1_slot0;
        oscar = 10;
        verify = options[oscar];
        verify = golf.bind(tango)(verify);
        verify = verify.VerticalGradient;
        verify = verify.START;
        entity['start'] = verify;
        verify = options[oscar];
        verify = golf.bind(tango)(verify);
        verify = verify.VerticalGradient;
        verify = verify.END;
        entity['end'] = verify;
        oscar = options[oscar];
        oscar = golf.bind(tango)(oscar);
        oscar = oscar.Gradients;
        oscar = oscar.PREMIUM_TIER_0_PERK_CARD;
        entity['colors'] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot17 = report;
    tango = function(argFoo, argBar) { // Original name: usePremiumFeatureCardData
        oscar = argBar;
        mike = argFoo;
        var _closure2_slot0 = mike;
        var _closure2_slot1 = oscar;
        tango = _closure1_slot14;
        mike = undefined;
        mike = tango.bind(mike)();
        var _closure2_slot2 = mike;
        report = _closure1_slot4;
        tango = report.useMemo;
        zulu = new Array(2);
        zulu[0] = oscar;
        zulu[1] = mike;
        mike = function() {
            entity = {};
            yankee = _closure1_slot0;
            options = _closure1_slot2;
            report = 13;
            zulu = options[report];
            golf = undefined;
            zulu = yankee.bind(golf)(zulu);
            oscar = zulu.intl;
            tango = oscar.string;
            zulu = options[report];
            zulu = yankee.bind(golf)(zulu);
            zulu = zulu.t;
            zulu = zulu.3cyhe3;
            zulu = tango.bind(oscar)(zulu);
            entity['title'] = zulu;
            oscar = _closure1_slot1;
            zulu = 14;
            zulu = options[zulu];
            zulu = oscar.bind(golf)(zulu);
            entity['imageSrc'] = zulu;
            zulu = _closure2_slot2;
            zulu = zulu.emojiImage;
            entity['imageStyle'] = zulu;
            tango = global;
            offset = tango.Set;
            zulu = _closure1_slot8;
            verify = zulu.TIER_0;
            zulu = new Array(2);
            zulu[0] = verify;
            verify = _closure1_slot8;
            verify = verify.TIER_2;
            zulu[1] = verify;
            verify = offset.prototype;
            verify = Object.create(verify, {constructor: {value: offset}});
            backup = verify;
            foxtrot = zulu;
            zulu = new backup[offset](foxtrot, romeo);
            zulu = zulu instanceof Object ? zulu : verify;
            entity['premiumTypes'] = zulu;
            zulu = new Array(4);
            zulu[0] = entity;
            entity = {};
            verify = options[report];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = options[report];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.8AhJq6;
            verify = offset.bind(romeo)(verify);
            entity['title'] = verify;
            verify = 15;
            verify = options[verify];
            verify = oscar.bind(golf)(verify);
            entity['imageSrc'] = verify;
            romeo = tango.Set;
            verify = _closure1_slot8;
            offset = verify.TIER_0;
            verify = new Array(2);
            verify[0] = offset;
            offset = _closure1_slot8;
            offset = offset.TIER_2;
            verify[1] = offset;
            offset = romeo.prototype;
            offset = Object.create(offset, {constructor: {value: romeo}});
            backup = offset;
            foxtrot = verify;
            verify = new backup[romeo](foxtrot, romeo);
            verify = verify instanceof Object ? verify : offset;
            entity['premiumTypes'] = verify;
            zulu[1] = entity;
            entity = {};
            verify = options[report];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = options[report];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.t/Mvdn;
            verify = offset.bind(romeo)(verify);
            entity['title'] = verify;
            verify = 16;
            verify = options[verify];
            verify = oscar.bind(golf)(verify);
            entity['imageSrc'] = verify;
            romeo = tango.Set;
            verify = _closure1_slot8;
            offset = verify.TIER_2;
            verify = new Array(1);
            verify[0] = offset;
            offset = romeo.prototype;
            offset = Object.create(offset, {constructor: {value: romeo}});
            backup = offset;
            foxtrot = verify;
            verify = new backup[romeo](foxtrot, romeo);
            verify = verify instanceof Object ? verify : offset;
            entity['premiumTypes'] = verify;
            zulu[2] = entity;
            entity = {};
            verify = options[report];
            verify = yankee.bind(golf)(verify);
            offset = verify.intl;
            verify = offset.string;
            report = options[report];
            report = yankee.bind(golf)(report);
            report = report.t;
            report = report.n+DGY2;
            report = verify.bind(offset)(report);
            entity['title'] = report;
            report = 17;
            report = options[report];
            report = oscar.bind(golf)(report);
            entity['imageSrc'] = report;
            report = tango.Set;
            mike = _closure1_slot8;
            tango = mike.TIER_2;
            mike = new Array(1);
            mike[0] = tango;
            tango = report.prototype;
            tango = Object.create(tango, {constructor: {value: report}});
            backup = tango;
            foxtrot = mike;
            mike = new backup[report](foxtrot, romeo);
            mike = mike instanceof Object ? mike : tango;
            entity['premiumTypes'] = mike;
            zulu[3] = entity;
            mike = zulu.filter;
            entity = function(argFoo) {
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    zulu = _closure2_slot1;
                    entity = null;
                    entity = entity == zulu;
                    if(entity) { _fun00002_ip = 39; continue _fun00001 }
 16:
                    zulu = argFoo;
                    tango = zulu.premiumTypes;
                    zulu = tango.has;
                    mike = _closure2_slot1;
                    entity = zulu.bind(tango)(mike);
 39:
                    return entity;
                }
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        zulu = tango.bind(report)(mike, zulu);
        mike = zulu.map;
        entity = function(argFoo, argBar) {
            report = _closure1_slot9;
            tango = _closure1_slot15;
            zulu = {};
            entity = {};
            oscar = _closure2_slot0;
            mike = 0.85;
            mike = mike * oscar;
            entity['width'] = mike;
            zulu['style'] = entity;
            options = argFoo;
            verify = zulu;
            entity = copyDataProperties(verify, options);
            entity = global;
            entity = entity.HermesInternal;
            oscar = entity.concat;
            mike = 'card_';
            entity = argBar;
            mike = oscar.bind(mike)(entity);
            entity = undefined;
            entity = report.bind(entity)(tango, zulu, mike);
            return entity;
        };
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    var _closure1_slot18 = tango;
    entity = global;
    offset = entity.Object;
    golf = offset.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(offset)(zulu, entity, mike);
    entity = 0;
    mike = verify[entity];
    entity = undefined;
    mike = backup.bind(entity)(mike);
    var _closure1_slot3 = mike;
    mike = 1;
    golf = verify[mike];
    mike = argCorge;
    mike = mike.bind(entity)(golf);
    var _closure1_slot4 = mike;
    mike = 2;
    mike = verify[mike];
    mike = options.bind(entity)(mike);
    mike = mike.View;
    var _closure1_slot5 = mike;
    mike = 3;
    mike = verify[mike];
    mike = backup.bind(entity)(mike);
    var _closure1_slot6 = mike;
    mike = 4;
    mike = verify[mike];
    mike = options.bind(entity)(mike);
    mike = mike.AnalyticEvents;
    var _closure1_slot7 = mike;
    mike = 5;
    mike = verify[mike];
    mike = options.bind(entity)(mike);
    mike = mike.PremiumTypes;
    var _closure1_slot8 = mike;
    mike = 6;
    golf = verify[mike];
    golf = options.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot9 = golf;
    golf = verify[mike];
    golf = options.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot10 = golf;
    mike = verify[mike];
    mike = options.bind(entity)(mike);
    mike = mike.Fragment;
    var _closure1_slot11 = mike;
    mike = 7;
    golf = verify[mike];
    yankee = options.bind(entity)(golf);
    offset = yankee.createStyles;
    golf = {};
    romeo = {'display': 'flex', 'flex': 1};
    golf['container'] = romeo;
    romeo = {};
    kilo = 'center';
    romeo['textAlign'] = kilo;
    golf['headerText'] = romeo;
    romeo = {};
    foxtrot = 8;
    sizing = verify[foxtrot];
    sizing = backup.bind(entity)(sizing);
    sizing = sizing.spacing;
    sizing = sizing.PX_16;
    romeo['marginTop'] = sizing;
    golf['carouselContainer'] = romeo;
    romeo = {'flex': 1, 'alignItems': 'center', 'minHeight': 262};
    golf['carousel'] = romeo;
    romeo = {};
    sizing = verify[foxtrot];
    sizing = backup.bind(entity)(sizing);
    sizing = sizing.spacing;
    sizing = sizing.PX_32;
    sizing = -sizing;
    romeo['marginBottom'] = sizing;
    golf['indicators'] = romeo;
    golf = offset.bind(yankee)(golf);
    var _closure1_slot12 = golf;
    golf = verify[mike];
    yankee = options.bind(entity)(golf);
    offset = yankee.createStyles;
    golf = {};
    romeo = {'flexGrow': 1, 'alignSelf': 'center', 'justifyContent': 'space-between'};
    sizing = verify[foxtrot];
    sizing = backup.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.lg;
    romeo['borderRadius'] = sizing;
    golf['card'] = romeo;
    romeo = {};
    romeo['alignSelf'] = kilo;
    golf['image'] = romeo;
    romeo = {};
    kilo = verify[foxtrot];
    kilo = backup.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_24;
    romeo['marginTop'] = kilo;
    foxtrot = verify[foxtrot];
    foxtrot = backup.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_24;
    romeo['marginHorizontal'] = foxtrot;
    golf['cardTitle'] = romeo;
    golf = offset.bind(yankee)(golf);
    var _closure1_slot13 = golf;
    mike = verify[mike];
    offset = options.bind(entity)(mike);
    golf = offset.createStyles;
    mike = {};
    yankee = {};
    romeo = 'flex-end';
    yankee['alignSelf'] = romeo;
    mike['emojiImage'] = yankee;
    mike = golf.bind(offset)(mike);
    var _closure1_slot14 = mike;
    mike = function(argFoo) { // Original name: CarouselCard
        entity = argFoo;
        report = entity.style;
        foxtrot = entity.title;
        yankee = entity.imageSrc;
        offset = entity.imageStyle;
        entity = _closure1_slot13;
        tango = undefined;
        verify = entity.bind(tango)();
        zulu = _closure1_slot10;
        mike = _closure1_slot17;
        entity = {};
        entity['style'] = report;
        options = _closure1_slot9;
        golf = _closure1_slot0;
        romeo = _closure1_slot2;
        report = 11;
        report = romeo[report];
        report = golf.bind(tango)(report);
        golf = report.Text;
        report = {'variant': 'heading-md/extrabold', 'color': 'always-white'};
        backup = verify.cardTitle;
        report['style'] = backup;
        report['children'] = foxtrot;
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        options = _closure1_slot9;
        golf = _closure1_slot1;
        oscar = 12;
        oscar = romeo[oscar];
        golf = golf.bind(tango)(oscar);
        oscar = {};
        oscar['source'] = yankee;
        yankee = verify.image;
        verify = new Array(2);
        verify[0] = yankee;
        verify[1] = offset;
        oscar['style'] = verify;
        verify = 'contain';
        oscar['resizeMode'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot15 = mike;
    mike = function(argFoo) { // Original name: PremiumFeaturesCarousel
        mike = argFoo;
        kilo = mike.width;
        entity = mike.onEndReached;
        var _closure2_slot0 = entity;
        offset = mike.children;
        var _closure2_slot1 = offset;
        result = mike.style;
        mike = _closure1_slot12;
        tango = undefined;
        yankee = mike.bind(tango)();
        report = _closure1_slot4;
        zulu = report.useState;
        mike = 0;
        golf = zulu.bind(report)(mike);
        report = _closure1_slot3;
        zulu = 2;
        zulu = report.bind(tango)(golf, zulu);
        verify = zulu[mike];
        var _closure2_slot2 = verify;
        mike = 1;
        backup = zulu[mike];
        report = _closure1_slot4;
        zulu = report.useEffect;
        mike = new Array(3);
        mike[0] = verify;
        golf = offset.length;
        mike[1] = golf;
        mike[2] = entity;
        entity = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                zulu = _closure2_slot2;
                mike = _closure2_slot1;
                tango = mike.length;
                mike = 1;
                mike = tango - mike;
                if(!(zulu === mike)) { _fun00004_ip = 47; continue _fun00003 }
 27:
                zulu = _closure2_slot0;
                mike = null;
                if(!(mike != zulu)) { _fun00004_ip = 47; continue _fun00003 }
 37:
                mike = _closure2_slot0;
                entity = undefined;
                entity = mike.bind(entity)();
 47:
                entity = undefined;
                return entity;
            }
        };
        entity = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot10;
        mike = _closure1_slot11;
        entity = {};
        foxtrot = _closure1_slot9;
        golf = _closure1_slot1;
        romeo = _closure1_slot2;
        report = 18;
        report = romeo[report];
        options = golf.bind(tango)(report);
        report = {};
        echo = yankee.carousel;
        output = new Array(2);
        output[0] = echo;
        output[1] = result;
        report['style'] = output;
        report['data'] = offset;
        sizing = function(argFoo) { // Original name: renderItem
            entity = argFoo;
            entity = entity.item;
            return entity;
        };
        report['renderItem'] = sizing;
        report['width'] = kilo;
        kilo = false;
        report['loop'] = kilo;
        kilo = {};
        sizing = new Array(2);
        output = -10;
        sizing[0] = output;
        output = 10;
        sizing[1] = output;
        kilo['activeOffsetX'] = sizing;
        report['panGestureHandlerProps'] = kilo;
        kilo = 200;
        report['scrollAnimationDuration'] = kilo;
        kilo = 'parallax';
        report['mode'] = kilo;
        kilo = {'parallaxScrollingScale': 1, 'parallaxScrollingOffset': 45};
        report['modeConfig'] = kilo;
        report['onSnapToItem'] = backup;
        options = foxtrot.bind(tango)(options, report);
        report = new Array(2);
        report[0] = options;
        options = _closure1_slot9;
        oscar = 19;
        oscar = romeo[oscar];
        golf = golf.bind(tango)(oscar);
        oscar = {};
        yankee = yankee.indicators;
        oscar['containerStyle'] = yankee;
        offset = offset.length;
        oscar['numberOfItems'] = offset;
        oscar['currentIndex'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot16 = mike;
    golf = 23;
    golf = verify[golf];
    verify = options.bind(entity)(golf);
    options = verify.fileFinishedImporting;
    golf = 'modules/user_settings/native/premium_marketing/PremiumFeaturesCarouselSection.tsx';
    golf = options.bind(verify)(golf);
    oscar = function(argFoo) { // Original name: _default
        mike = argFoo;
        golf = mike.style;
        mike = _closure1_slot12;
        tango = undefined;
        yankee = mike.bind(tango)();
        zulu = _closure1_slot1;
        output = _closure1_slot2;
        mike = 20;
        mike = output[mike];
        mike = zulu.bind(tango)(mike);
        mike = mike.bind(tango)();
        verify = mike.analyticsLocations;
        var _closure2_slot0 = verify;
        report = _closure1_slot4;
        zulu = report.useState;
        mike = false;
        report = zulu.bind(report)(mike);
        zulu = _closure1_slot3;
        mike = 2;
        zulu = zulu.bind(tango)(report, mike);
        mike = 0;
        options = zulu[mike];
        var _closure2_slot1 = options;
        mike = 1;
        mike = zulu[mike];
        var _closure2_slot2 = mike;
        sizing = _closure1_slot0;
        mike = 21;
        mike = output[mike];
        offset = sizing.bind(tango)(mike);
        report = offset.useStateFromStores;
        mike = _closure1_slot6;
        zulu = new Array(1);
        zulu[0] = mike;
        mike = function() {
            mike = _closure1_slot6;
            entity = mike.getWidth;
            entity = entity.bind(mike)();
            return entity;
        };
        romeo = report.bind(offset)(zulu, mike);
        report = _closure1_slot4;
        zulu = report.useCallback;
        mike = new Array(2);
        mike[0] = verify;
        mike[1] = options;
        entity = function() {
            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                mike = _closure2_slot1;
                if(mike) { _fun00006_ip = 78; continue _fun00005 }
 10:
                report = _closure1_slot1;
                tango = _closure1_slot2;
                zulu = 22;
                tango = tango[zulu];
                zulu = undefined;
                oscar = report.bind(zulu)(tango);
                report = oscar.track;
                mike = _closure1_slot7;
                tango = mike.PREMIUM_MARKETING_SCROLLED_TO_LAST;
                mike = {};
                golf = _closure2_slot0;
                mike['location_stack'] = golf;
                mike = report.bind(oscar)(tango, mike);
                mike = _closure2_slot2;
                entity = true;
                entity = mike.bind(zulu)(entity);
 78:
                entity = undefined;
                return entity;
            }
        };
        offset = zulu.bind(report)(entity, mike);
        entity = _closure1_slot18;
        verify = entity.bind(tango)(romeo);
        zulu = _closure1_slot10;
        mike = _closure1_slot5;
        entity = {};
        options = yankee.container;
        report = new Array(2);
        report[0] = options;
        report[1] = golf;
        entity['style'] = report;
        options = _closure1_slot9;
        report = 11;
        report = output[report];
        report = sizing.bind(tango)(report);
        golf = report.Text;
        report = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        foxtrot = yankee.headerText;
        report['style'] = foxtrot;
        foxtrot = 13;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = output[foxtrot];
        foxtrot = sizing.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.RGadQU;
        foxtrot = backup.bind(kilo)(foxtrot);
        report['children'] = foxtrot;
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        options = _closure1_slot9;
        golf = _closure1_slot16;
        oscar = {};
        oscar['width'] = romeo;
        yankee = yankee.carouselContainer;
        oscar['style'] = yankee;
        oscar['onEndReached'] = offset;
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = oscar;
    oscar = 0.85;
    zulu['PREMIUM_FEATURES_PROPORTIONAL_CARD_WIDTH'] = oscar;
    zulu['PremiumFeaturesCardBackground'] = report;
    zulu['usePremiumFeatureCardData'] = tango;
    zulu['PremiumFeaturesCarousel'] = mike;
    return entity;
})();