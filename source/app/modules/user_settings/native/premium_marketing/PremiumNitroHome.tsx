// app/modules/user_settings/native/premium_marketing/PremiumNitroHome.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    backup = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = golf;
    entity = function(argFoo) { // Original name: NitroHomeHeader
        _fun104810: for(var _fun104810_ip = 0; ; ) switch(_fun104810_ip) {
 0:
            mike = argFoo;
            entity = mike.subscription;
            mike = mike.onClose;
            var _closure2_slot0 = mike;
            zulu = _closure1_slot22;
            tango = undefined;
            yankee = zulu.bind(tango)();
            report = _closure1_slot0;
            oscar = _closure1_slot2;
            zulu = 12;
            zulu = oscar[zulu];
            report = report.bind(tango)(zulu);
            zulu = report.useNavigation;
            golf = zulu.bind(report)();
            var _closure2_slot1 = golf;
            oscar = _closure1_slot4;
            report = oscar.useCallback;
            zulu = new Array(2);
            zulu[0] = golf;
            zulu[1] = mike;
            mike = function() {
                _fun104811: for(var _fun104811_ip = 0; ; ) switch(_fun104811_ip) {
 0:
                    zulu = _closure2_slot0;
                    entity = undefined;
                    if(!(entity === zulu)) { _fun104811_ip = 29; continue _fun104811 }
 13:
                    tango = _closure2_slot1;
                    zulu = tango.pop;
                    zulu = zulu.bind(tango)();
                    _fun104811_ip = 37; continue _fun104811;
 29:
                    mike = _closure2_slot0;
                    mike = mike.bind(entity)();
 37:
                    return entity;
                }
            };
            output = report.bind(oscar)(mike, zulu);
            mike = null;
            oscar = mike !== entity;
            if(!oscar) { _fun104810_ip = 121; continue _fun104810 }
 111:
            entity = entity.trialId;
            oscar = mike != entity;
 121:
            zulu = _closure1_slot15;
            mike = _closure1_slot5;
            entity = {};
            report = yankee.contentContainer;
            entity['style'] = report;
            options = _closure1_slot15;
            golf = _closure1_slot5;
            report = {};
            verify = yankee.headerContainer;
            report['style'] = verify;
            backup = _closure1_slot14;
            sizing = _closure1_slot0;
            result = _closure1_slot2;
            romeo = 13;
            verify = result[romeo];
            verify = sizing.bind(tango)(verify);
            foxtrot = verify.PressableOpacity;
            verify = {};
            echo = yankee.backButtonWrapper;
            verify['style'] = echo;
            verify['onPress'] = output;
            update = _closure1_slot14;
            output = 14;
            output = result[output];
            output = sizing.bind(tango)(output);
            echo = output.ArrowLargeLeftIcon;
            output = {'size': 'md', 'color': 'white'};
            output = update.bind(tango)(echo, output);
            verify['children'] = output;
            foxtrot = backup.bind(tango)(foxtrot, verify);
            verify = new Array(3);
            verify[0] = foxtrot;
            output = _closure1_slot14;
            foxtrot = 15;
            foxtrot = result[foxtrot];
            foxtrot = sizing.bind(tango)(foxtrot);
            backup = foxtrot.Text;
            foxtrot = {'variant': 'display-sm', 'color': 'always-white'};
            echo = yankee.headerText;
            foxtrot['style'] = echo;
            echo = 16;
            update = result[echo];
            update = sizing.bind(tango)(update);
            source = update.intl;
            update = source.string;
            echo = result[echo];
            echo = sizing.bind(tango)(echo);
            echo = echo.t;
            echo = echo.BnquQ0;
            echo = update.bind(source)(echo);
            foxtrot['children'] = echo;
            foxtrot = output.bind(tango)(backup, foxtrot);
            verify[1] = foxtrot;
            backup = _closure1_slot14;
            romeo = result[romeo];
            romeo = sizing.bind(tango)(romeo);
            foxtrot = romeo.PressableOpacity;
            romeo = {};
            output = yankee.backButtonWrapper;
            romeo['style'] = output;
            kilo = function() { // Original name: onPress
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 17;
                zulu = zulu[entity];
                entity = undefined;
                oscar = tango.bind(entity)(zulu);
                report = oscar.track;
                zulu = _closure1_slot9;
                tango = zulu.NITRO_HOME_NAVIGATION;
                zulu = {};
                golf = _closure1_slot20;
                golf = golf.YOUR_NITRO_HOME;
                zulu['current_component'] = golf;
                golf = _closure1_slot20;
                golf = golf.YOUR_NITRO_PLAN;
                zulu['next_component'] = golf;
                golf = 'header_settings_icon';
                zulu['interaction_component'] = golf;
                zulu = report.bind(oscar)(tango, zulu);
                tango = _closure2_slot1;
                zulu = tango.push;
                mike = _closure1_slot12;
                mike = mike.PREMIUM_MANAGE_PLAN;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            romeo['onPress'] = kilo;
            output = _closure1_slot14;
            kilo = 18;
            kilo = result[kilo];
            kilo = sizing.bind(tango)(kilo);
            sizing = kilo.SettingsIcon;
            kilo = {'size': 'md', 'color': 'white'};
            kilo = output.bind(tango)(sizing, kilo);
            romeo['children'] = kilo;
            romeo = backup.bind(tango)(foxtrot, romeo);
            verify[2] = romeo;
            report['children'] = verify;
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            if(!oscar) { _fun104810_ip = 567; continue _fun104810 }
 492:
            verify = _closure1_slot14;
            options = _closure1_slot5;
            golf = {};
            yankee = yankee.pillParent;
            golf['style'] = yankee;
            romeo = _closure1_slot14;
            yankee = _closure1_slot0;
            foxtrot = _closure1_slot2;
            offset = 19;
            offset = foxtrot[offset];
            offset = yankee.bind(tango)(offset);
            yankee = offset.PremiumReferralTrialPill;
            offset = {};
            foxtrot = true;
            offset['hasExtraMargin'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            golf['children'] = offset;
            oscar = verify.bind(tango)(options, golf);
 567:
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot26 = entity;
    entity = function(argFoo) { // Original name: NewTab
        _fun104813: for(var _fun104813_ip = 0; ; ) switch(_fun104813_ip) {
 0:
            mike = argFoo;
            foxtrot = mike.extraBottomHeight;
            oscar = mike.isEligibleForReward;
            mike = _closure1_slot23;
            tango = undefined;
            yankee = mike.bind(tango)();
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            offset = 20;
            mike = mike[offset];
            zulu = zulu.bind(tango)(mike);
            mike = zulu.usePremiumPerkCard;
            verify = mike.bind(zulu)();
            zulu = _closure1_slot4;
            mike = zulu.useRef;
            golf = false;
            mike = mike.bind(zulu)(golf);
            var _closure2_slot0 = mike;
            report = _closure1_slot4;
            zulu = report.useCallback;
            mike = function(argFoo) {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 21;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.trackIfScrolledToBottom;
                entity = {};
                report = argFoo;
                report = report.nativeEvent;
                entity['nativeEvent'] = report;
                tango = _closure1_slot16;
                entity['trackedType'] = tango;
                tango = _closure2_slot0;
                entity['hasTrackedScrolledToBottom'] = tango;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            entity = new Array(0);
            report = zulu.bind(report)(mike, entity);
            zulu = _closure1_slot15;
            mike = _closure1_slot6;
            entity = {};
            romeo = yankee.featureCardsContainer;
            yankee = new Array(2);
            yankee[0] = romeo;
            romeo = {};
            romeo['paddingBottom'] = foxtrot;
            yankee[1] = romeo;
            entity['contentContainerStyle'] = yankee;
            entity['showsVerticalScrollIndicator'] = golf;
            entity['onScrollEndDrag'] = report;
            entity['onMomentumScrollEnd'] = report;
            report = 0;
            entity['scrollEventThrottle'] = report;
            report = true;
            oscar = report === oscar;
            if(!oscar) { _fun104813_ip = 215; continue _fun104813 }
 177:
            yankee = _closure1_slot14;
            golf = _closure1_slot0;
            romeo = _closure1_slot2;
            report = 22;
            report = romeo[report];
            report = golf.bind(tango)(report);
            golf = report.NitroHomeCollectibleDecoPerkCard;
            report = {};
            oscar = yankee.bind(tango)(golf, report);
 215:
            report = new Array(6);
            report[0] = oscar;
            foxtrot = _closure1_slot14;
            yankee = _closure1_slot0;
            oscar = _closure1_slot2;
            golf = 23;
            golf = oscar[golf];
            golf = yankee.bind(tango)(golf);
            romeo = golf.TieredTenureBadgePerkCard;
            golf = {};
            golf = foxtrot.bind(tango)(romeo, golf);
            report[1] = golf;
            romeo = _closure1_slot14;
            golf = 24;
            golf = oscar[golf];
            golf = yankee.bind(tango)(golf);
            yankee = golf.ReferralProgramPerkCard;
            golf = {};
            golf = romeo.bind(tango)(yankee, golf);
            report[2] = golf;
            foxtrot = _closure1_slot14;
            golf = _closure1_slot1;
            yankee = oscar[offset];
            romeo = golf.bind(tango)(yankee);
            yankee = {};
            kilo = verify.memberPricing;
            sizing = yankee;
            backup = copyDataProperties(sizing, kilo);
            yankee = foxtrot.bind(tango)(romeo, yankee);
            report[3] = yankee;
            foxtrot = _closure1_slot14;
            yankee = oscar[offset];
            romeo = golf.bind(tango)(yankee);
            yankee = {};
            kilo = verify.earlyAccess;
            sizing = yankee;
            backup = copyDataProperties(sizing, kilo);
            yankee = foxtrot.bind(tango)(romeo, yankee);
            report[4] = yankee;
            options = _closure1_slot14;
            oscar = oscar[offset];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            kilo = verify.superReactions;
            sizing = oscar;
            verify = copyDataProperties(sizing, kilo);
            oscar = options.bind(tango)(golf, oscar);
            report[5] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot27 = entity;
    entity = function(argFoo) { // Original name: PerksTab
        _fun104815: for(var _fun104815_ip = 0; ; ) switch(_fun104815_ip) {
 0:
            entity = argFoo;
            kilo = entity.extraBottomHeight;
            foxtrot = entity.fractionalState;
            yankee = entity.isInReverseTrial;
            entity = _closure1_slot24;
            tango = undefined;
            golf = entity.bind(tango)();
            output = _closure1_slot0;
            backup = _closure1_slot2;
            entity = 20;
            entity = backup[entity];
            mike = output.bind(tango)(entity);
            entity = mike.usePremiumPerkCard;
            romeo = entity.bind(mike)();
            report = _closure1_slot4;
            zulu = report.useCallback;
            mike = function(argFoo) {
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 17;
                zulu = zulu[entity];
                entity = undefined;
                report = tango.bind(entity)(zulu);
                tango = report.track;
                mike = _closure1_slot9;
                zulu = mike.MOBILE_NITRO_HOME_PERKS_CAROUSEL_SCROLLED;
                mike = {};
                oscar = argFoo;
                mike['section_name'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            entity = new Array(0);
            entity = zulu.bind(report)(mike, entity);
            var _closure2_slot0 = entity;
            mike = _closure1_slot4;
            entity = mike.useRef;
            oscar = false;
            entity = entity.bind(mike)(oscar);
            var _closure2_slot1 = entity;
            report = _closure1_slot4;
            zulu = report.useCallback;
            mike = function(argFoo) {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 21;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.trackIfScrolledToBottom;
                mike = {};
                oscar = argFoo;
                oscar = oscar.nativeEvent;
                mike['nativeEvent'] = oscar;
                report = _closure1_slot17;
                mike['trackedType'] = report;
                report = _closure2_slot1;
                mike['hasTrackedScrolledToBottom'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity = new Array(0);
            report = zulu.bind(report)(mike, entity);
            zulu = _closure1_slot15;
            mike = _closure1_slot6;
            entity = {};
            options = golf.featureCardsContainer;
            golf = new Array(2);
            golf[0] = options;
            options = {};
            options['paddingBottom'] = kilo;
            golf[1] = options;
            entity['contentContainerStyle'] = golf;
            entity['showsVerticalScrollIndicator'] = oscar;
            entity['onScrollEndDrag'] = report;
            entity['onMomentumScrollEnd'] = report;
            report = 0;
            entity['scrollEventThrottle'] = report;
            options = _closure1_slot14;
            golf = _closure1_slot1;
            oscar = 25;
            report = backup[oscar];
            golf = golf.bind(tango)(report);
            report = {};
            result = 16;
            kilo = backup[result];
            kilo = output.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = backup[result];
            backup = output.bind(tango)(backup);
            backup = backup.t;
            backup = backup.DOb6x8;
            backup = kilo.bind(sizing)(backup);
            report['title'] = backup;
            backup = _closure1_slot13;
            backup = backup.FP_ONLY;
            if(!(foxtrot !== backup)) { _fun104815_ip = 327; continue _fun104815 }
 291:
            kilo = romeo.customProfile;
            backup = new Array(3);
            backup[0] = kilo;
            kilo = romeo.clientThemes;
            backup[1] = kilo;
            kilo = romeo.serverBoosts;
            backup[2] = kilo;
            _fun104815_ip = 390; continue _fun104815;
 327:
            output = romeo.customProfile;
            if(yankee) { _fun104815_ip = 366; continue _fun104815 }
 336:
            kilo = new Array(3);
            kilo[0] = output;
            sizing = romeo.clientThemes;
            kilo[1] = sizing;
            sizing = romeo.greyServerBoosts;
            kilo[2] = sizing;
            _fun104815_ip = 387; continue _fun104815;
 366:
            sizing = new Array(2);
            sizing[0] = output;
            output = romeo.clientThemes;
            sizing[1] = output;
            kilo = sizing;
 387:
            backup = kilo;
 390:
            report['perks'] = backup;
            backup = function(argFoo) { // Original name: onItemChange
                tango = _closure2_slot0;
                entity = _closure1_slot19;
                zulu = entity.CAROUSEL_SECTION_NAME_1;
                mike = undefined;
                entity = argFoo;
                entity = tango.bind(mike)(zulu, entity);
                return entity;
            };
            report['onItemChange'] = backup;
            golf = options.bind(tango)(golf, report);
            report = new Array(4);
            report[0] = golf;
            sizing = _closure1_slot14;
            golf = _closure1_slot1;
            backup = _closure1_slot2;
            options = backup[oscar];
            kilo = golf.bind(tango)(options);
            options = {};
            output = _closure1_slot0;
            echo = backup[result];
            echo = output.bind(tango)(echo);
            source = echo.intl;
            update = source.string;
            echo = backup[result];
            echo = output.bind(tango)(echo);
            echo = echo.t;
            echo = echo.+vt7w8;
            echo = update.bind(source)(echo);
            options['title'] = echo;
            update = romeo.customAppIcons;
            echo = new Array(4);
            echo[0] = update;
            update = romeo.emoji;
            echo[1] = update;
            update = romeo.customSounds;
            echo[2] = update;
            update = romeo.sticker;
            echo[3] = update;
            options['perks'] = echo;
            echo = function(argFoo) { // Original name: onItemChange
                tango = _closure2_slot0;
                entity = _closure1_slot19;
                zulu = entity.CAROUSEL_SECTION_NAME_2;
                mike = undefined;
                entity = argFoo;
                entity = tango.bind(mike)(zulu, entity);
                return entity;
            };
            options['onItemChange'] = echo;
            options = sizing.bind(tango)(kilo, options);
            report[1] = options;
            sizing = _closure1_slot14;
            options = backup[oscar];
            kilo = golf.bind(tango)(options);
            options = {};
            echo = backup[result];
            echo = output.bind(tango)(echo);
            source = echo.intl;
            update = source.string;
            echo = backup[result];
            echo = output.bind(tango)(echo);
            echo = echo.t;
            echo = echo.LgHbnJ;
            echo = update.bind(source)(echo);
            options['title'] = echo;
            update = romeo.memberPricing;
            echo = new Array(5);
            echo[0] = update;
            update = romeo.earlyAccess;
            echo[1] = update;
            update = romeo.largeUploads;
            echo[2] = update;
            update = romeo.hdVideo;
            echo[3] = update;
            update = romeo.superReactions;
            echo[4] = update;
            options['perks'] = echo;
            echo = function(argFoo) { // Original name: onItemChange
                tango = _closure2_slot0;
                entity = _closure1_slot19;
                zulu = entity.CAROUSEL_SECTION_NAME_3;
                mike = undefined;
                entity = argFoo;
                entity = tango.bind(mike)(zulu, entity);
                return entity;
            };
            options['onItemChange'] = echo;
            options = sizing.bind(tango)(kilo, options);
            report[2] = options;
            options = _closure1_slot14;
            oscar = backup[oscar];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            kilo = backup[result];
            kilo = output.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = backup[result];
            backup = output.bind(tango)(backup);
            backup = backup.t;
            backup = backup.LTaxu7;
            backup = kilo.bind(sizing)(backup);
            oscar['title'] = backup;
            offset = _closure1_slot13;
            offset = offset.FP_ONLY;
            if(!(foxtrot !== offset)) { _fun104815_ip = 814; continue _fun104815 }
 788:
            foxtrot = romeo.entranceSounds;
            offset = new Array(2);
            offset[0] = foxtrot;
            foxtrot = romeo.badge;
            offset[1] = foxtrot;
            _fun104815_ip = 857; continue _fun104815;
 814:
            foxtrot = romeo.entranceSounds;
            if(yankee) { _fun104815_ip = 843; continue _fun104815 }
 823:
            yankee = new Array(2);
            yankee[0] = foxtrot;
            romeo = romeo.greyBadge;
            yankee[1] = romeo;
            _fun104815_ip = 854; continue _fun104815;
 843:
            romeo = new Array(1);
            romeo[0] = foxtrot;
            yankee = romeo;
 854:
            offset = yankee;
 857:
            oscar['perks'] = offset;
            verify = function(argFoo) { // Original name: onItemChange
                tango = _closure2_slot0;
                entity = _closure1_slot19;
                zulu = entity.CAROUSEL_SECTION_NAME_4;
                mike = undefined;
                entity = argFoo;
                entity = tango.bind(mike)(zulu, entity);
                return entity;
            };
            oscar['onItemChange'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[3] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot28 = entity;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    entity = 0;
    mike = golf[entity];
    entity = undefined;
    mike = backup.bind(entity)(mike);
    var _closure1_slot3 = mike;
    yankee = 1;
    report = golf[yankee];
    mike = argCorge;
    mike = mike.bind(entity)(report);
    var _closure1_slot4 = mike;
    mike = 2;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    report = mike.View;
    var _closure1_slot5 = report;
    mike = mike.ScrollView;
    var _closure1_slot6 = mike;
    mike = 3;
    mike = golf[mike];
    mike = backup.bind(entity)(mike);
    var _closure1_slot7 = mike;
    mike = 4;
    mike = golf[mike];
    mike = backup.bind(entity)(mike);
    var _closure1_slot8 = mike;
    mike = 5;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    report = mike.AnalyticEvents;
    var _closure1_slot9 = report;
    report = mike.HorizontalGradient;
    var _closure1_slot10 = report;
    report = mike.ThemeTypes;
    var _closure1_slot11 = report;
    mike = mike.UserSettingsSections;
    var _closure1_slot12 = mike;
    mike = 6;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.FractionalPremiumStates;
    var _closure1_slot13 = mike;
    mike = 7;
    report = golf[mike];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot14 = report;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot15 = mike;
    mike = 'NewTab';
    var _closure1_slot16 = mike;
    mike = 'PerksTab';
    var _closure1_slot17 = mike;
    mike = 8;
    mike = golf[mike];
    options = oscar.bind(entity)(mike);
    report = options.hexToRgbaString;
    mike = 9;
    mike = golf[mike];
    verify = backup.bind(entity)(mike);
    foxtrot = 10;
    mike = golf[foxtrot];
    mike = backup.bind(entity)(mike);
    mike = mike.unsafe_rawColors;
    mike = mike.PLUM_24;
    offset = verify.bind(entity)(mike);
    verify = offset.alpha;
    mike = 0.6;
    verify = verify.bind(offset)(mike);
    mike = verify.hex;
    mike = mike.bind(verify)();
    mike = report.bind(options)(mike);
    var _closure1_slot18 = mike;
    mike = {};
    report = 'NitroFavorites';
    mike['CAROUSEL_SECTION_NAME_1'] = report;
    report = 'MakeDiscordYours';
    mike['CAROUSEL_SECTION_NAME_2'] = report;
    report = 'EnjoyAnUpgradedDiscord';
    mike['CAROUSEL_SECTION_NAME_3'] = report;
    report = 'ShowUpTheWayYouWant';
    mike['CAROUSEL_SECTION_NAME_4'] = report;
    var _closure1_slot19 = mike;
    mike = {};
    report = 'YourNitroHome';
    mike['YOUR_NITRO_HOME'] = report;
    report = 'YourNitroPlan';
    mike['YOUR_NITRO_PLAN'] = report;
    var _closure1_slot20 = mike;
    report = 11;
    mike = golf[report];
    verify = oscar.bind(entity)(mike);
    options = verify.createStyles;
    mike = {};
    offset = {'display': 'flex', 'width': '100%', 'height': '100%'};
    romeo = golf[foxtrot];
    romeo = backup.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_BASE_SECONDARY;
    offset['backgroundColor'] = romeo;
    mike['container'] = offset;
    offset = {'position': 'absolute', 'width': '100%'};
    mike['background'] = offset;
    offset = {};
    offset['flex'] = yankee;
    mike['tabContent'] = offset;
    romeo = 'center';
    offset = {'display': 'flex', 'flexDirection': 'column', 'rowGap': 16, 'alignItems': 'center'};
    mike['featureCardsContainer'] = offset;
    offset = {'zIndex': 3, 'paddingHorizontal': 16};
    mike['segmentedControl'] = offset;
    offset = {'zIndex': 3, 'paddingHorizontal': 16};
    mike['segmentedControlActual'] = offset;
    offset = {'position': 'absolute', 'top': 0, 'left': 16, 'right': 16};
    yankee = golf[foxtrot];
    yankee = backup.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.lg;
    offset['borderRadius'] = yankee;
    mike['segmentedControlVirtual'] = offset;
    offset = {};
    yankee = golf[foxtrot];
    yankee = backup.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = yankee;
    mike['androidSegmentedControlBackground'] = offset;
    offset = {'position': 'absolute', 'top': 0, 'left': 0, 'height': '100%', 'width': '10%'};
    mike['backSwipeSensor'] = offset;
    mike = options.bind(verify)(mike);
    var _closure1_slot21 = mike;
    mike = golf[report];
    offset = oscar.bind(entity)(mike);
    verify = offset.createStyles;
    options = {};
    mike = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'paddingHorizontal': 16, 'paddingVertical': 8, 'justifyContent': 'space-between', 'gap': 8};
    options['headerContainer'] = mike;
    mike = {'display': 'flex', 'flexDirection': 'column'};
    options['contentContainer'] = mike;
    yankee = {'width': 24, 'height': 24, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center'};
    mike = 24;
    foxtrot = golf[foxtrot];
    foxtrot = backup.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.lg;
    yankee['borderRadius'] = foxtrot;
    options['backButtonWrapper'] = yankee;
    yankee = {};
    yankee['textAlign'] = romeo;
    options['headerText'] = yankee;
    yankee = {'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center'};
    options['pillParent'] = yankee;
    options = verify.bind(offset)(options);
    var _closure1_slot22 = options;
    options = golf[report];
    offset = oscar.bind(entity)(options);
    verify = offset.createStyles;
    options = {};
    yankee = {'display': 'flex', 'flexDirection': 'column', 'rowGap': 16, 'alignItems': 'center', 'paddingTop': 24};
    options['featureCardsContainer'] = yankee;
    options = verify.bind(offset)(options);
    var _closure1_slot23 = options;
    report = golf[report];
    verify = oscar.bind(entity)(report);
    options = verify.createStyles;
    report = {};
    offset = {'display': 'flex', 'flexDirection': 'column', 'rowGap': 24, 'paddingTop': 24};
    report['featureCardsContainer'] = offset;
    report = options.bind(verify)(report);
    var _closure1_slot24 = report;
    report = {};
    options = 'function PremiumNitroHomeTsx1(){const{floatTabBottomOffset}=this.__closure;return{bottom:floatTabBottomOffset.get()};}';
    report['code'] = options;
    var _closure1_slot25 = report;
    report = 51;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/user_settings/native/premium_marketing/PremiumNitroHome.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: PremiumNitroHome
        _fun104822: for(var _fun104822_ip = 0; ; ) switch(_fun104822_ip) {
 0:
            mike = argFoo;
            record = mike.onClose;
            tango = undefined;
            var _closure2_slot9 = tango;
            var _closure2_slot10 = tango;
            target = _closure1_slot0;
            sequence = _closure1_slot2;
            mike = 26;
            mike = sequence[mike];
            report = target.bind(tango)(mike);
            zulu = report.useCommonTriggerPoint;
            mike = 27;
            mike = sequence[mike];
            mike = target.bind(tango)(mike);
            mike = mike.OpenNitroTriggerPoint;
            mike = zulu.bind(report)(mike);
            mike = _closure1_slot21;
            kilo = mike.bind(tango)();
            oscar = _closure1_slot1;
            mike = 28;
            mike = sequence[mike];
            mike = oscar.bind(tango)(mike);
            mike = mike.bind(tango)();
            backup = mike.top;
            result = mike.bottom;
            var _closure2_slot0 = result;
            mike = 12;
            mike = sequence[mike];
            zulu = target.bind(tango)(mike);
            mike = zulu.useNavigation;
            mike = mike.bind(zulu)();
            var _closure2_slot1 = mike;
            golf = _closure1_slot4;
            report = golf.useLayoutEffect;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                zulu = _closure2_slot1;
                mike = zulu.setOptions;
                entity = {};
                tango = false;
                entity['headerShown'] = tango;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            mike = report.bind(golf)(mike, zulu);
            zulu = _closure1_slot4;
            mike = zulu.useState;
            options = 0;
            mike = mike.bind(zulu)(options);
            offset = _closure1_slot3;
            control = 2;
            mike = offset.bind(tango)(mike, control);
            echo = mike[options];
            golf = 1;
            mike = mike[golf];
            var _closure2_slot2 = mike;
            verify = _closure1_slot4;
            report = verify.useCallback;
            zulu = function(argFoo) {
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                zulu = entity.width;
                mike = _closure2_slot2;
                entity = undefined;
                mike = mike.bind(entity)(zulu);
                return entity;
            };
            mike = new Array(0);
            foxtrot = report.bind(verify)(zulu, mike);
            zulu = _closure1_slot4;
            mike = zulu.useState;
            mike = mike.bind(zulu)(options);
            mike = offset.bind(tango)(mike, control);
            sizing = mike[options];
            mike = mike[golf];
            var _closure2_slot3 = mike;
            verify = _closure1_slot4;
            report = verify.useCallback;
            zulu = function(argFoo) {
                zulu = _closure2_slot3;
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                mike = entity.height;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            mike = new Array(0);
            verify = report.bind(verify)(zulu, mike);
            report = 29;
            mike = sequence[report];
            output = target.bind(tango)(mike);
            romeo = output.useStateFromStores;
            mike = _closure1_slot7;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                entity = _closure1_slot7;
                entity = entity.useReducedMotion;
                return entity;
            };
            mike = romeo.bind(output)(zulu, mike);
            var _closure2_slot4 = mike;
            output = _closure1_slot4;
            romeo = output.useState;
            zulu = true;
            zulu = romeo.bind(output)(zulu);
            zulu = offset.bind(tango)(zulu, control);
            update = zulu[options];
            zulu = zulu[golf];
            var _closure2_slot5 = zulu;
            zulu = 30;
            zulu = sequence[zulu];
            zulu = target.bind(tango)(zulu);
            options = zulu.CollectibleDecoMarketingMomentPremiumCardExperiment;
            golf = options.useExperiment;
            zulu = {};
            offset = 'PremiumNitroHome';
            zulu['location'] = offset;
            zulu = golf.bind(options)(zulu);
            zulu = zulu.enabled;
            var _closure2_slot6 = zulu;
            report = sequence[report];
            offset = target.bind(tango)(report);
            options = offset.useStateFromStoresObject;
            report = _closure1_slot8;
            golf = new Array(1);
            golf[0] = report;
            report = function() {
                entity = {};
                zulu = _closure1_slot8;
                mike = zulu.getPremiumTypeSubscription;
                mike = mike.bind(zulu)();
                entity['subscription'] = mike;
                mike = zulu.getIsSubscriptionEligibleForReward;
                mike = mike.bind(zulu)();
                entity['isEligibleForReward'] = mike;
                return entity;
            };
            report = options.bind(offset)(golf, report);
            config = report.subscription;
            var _closure2_slot7 = config;
            romeo = report.isEligibleForReward;
            var _closure2_slot8 = romeo;
            offset = _closure1_slot4;
            options = offset.useCallback;
            golf = function(argFoo) {
                _fun104828: for(var _fun104828_ip = 0; ; ) switch(_fun104828_ip) {
 0:
                    mike = argFoo;
                    entity = 0;
                    if(!(entity !== mike)) { _fun104828_ip = 92; continue _fun104828 }
 9:
                    entity = 1;
                    if(!(entity === mike)) { _fun104828_ip = 163; continue _fun104828 }
 19:
                    mike = _closure1_slot1;
                    zulu = _closure1_slot2;
                    entity = 17;
                    entity = zulu[entity];
                    zulu = undefined;
                    report = mike.bind(zulu)(entity);
                    tango = report.track;
                    entity = _closure1_slot9;
                    mike = entity.MOBILE_NITRO_HOME_TAB_SWITCHED;
                    entity = {};
                    oscar = _closure1_slot17;
                    entity['target'] = oscar;
                    entity = tango.bind(report)(mike, entity);
                    mike = _closure2_slot5;
                    entity = false;
                    entity = mike.bind(zulu)(entity);
                    _fun104828_ip = 163; continue _fun104828;
 92:
                    mike = _closure1_slot1;
                    zulu = _closure1_slot2;
                    entity = 17;
                    entity = zulu[entity];
                    zulu = undefined;
                    report = mike.bind(zulu)(entity);
                    tango = report.track;
                    entity = _closure1_slot9;
                    mike = entity.MOBILE_NITRO_HOME_TAB_SWITCHED;
                    entity = {};
                    oscar = _closure1_slot16;
                    entity['target'] = oscar;
                    entity = tango.bind(report)(mike, entity);
                    mike = _closure2_slot5;
                    entity = true;
                    entity = mike.bind(zulu)(entity);
 163:
                    entity = undefined;
                    return entity;
                }
            };
            report = new Array(0);
            output = options.bind(offset)(golf, report);
            report = 31;
            report = sequence[report];
            report = oscar.bind(tango)(report);
            golf = report.bind(tango)();
            report = 32;
            report = sequence[report];
            oscar = target.bind(tango)(report);
            report = oscar.useIsInReverseTrial;
            options = report.bind(oscar)();
            report = 33;
            report = sequence[report];
            oscar = target.bind(tango)(report);
            report = oscar.useMaybeFetchTieredTenureBadgeData;
            report = report.bind(oscar)();
            report = 34;
            report = sequence[report];
            offset = target.bind(tango)(report);
            oscar = offset.useSegmentedControlState;
            report = {};
            vacuum = {};
            status = 16;
            source = sequence[status];
            source = target.bind(tango)(source);
            papa = source.intl;
            context = papa.string;
            source = sequence[status];
            source = target.bind(tango)(source);
            source = source.t;
            source = source.tahjbG;
            source = context.bind(papa)(source);
            vacuum['label'] = source;
            source = sequence[status];
            source = target.bind(tango)(source);
            papa = source.intl;
            context = papa.string;
            source = sequence[status];
            source = target.bind(tango)(source);
            source = source.t;
            source = source.tahjbG;
            source = context.bind(papa)(source);
            vacuum['id'] = source;
            papa = _closure1_slot14;
            context = _closure1_slot27;
            source = {};
            sierra = result + sizing;
            sierra = sierra + status;
            source['extraBottomHeight'] = sierra;
            source['isEligibleForReward'] = romeo;
            source = papa.bind(tango)(context, source);
            vacuum['page'] = source;
            source = new Array(2);
            source[0] = vacuum;
            vacuum = {};
            context = sequence[status];
            context = target.bind(tango)(context);
            sierra = context.intl;
            papa = sierra.string;
            context = sequence[status];
            context = target.bind(tango)(context);
            context = context.t;
            context = context.w3RBdX;
            context = papa.bind(sierra)(context);
            vacuum['label'] = context;
            context = sequence[status];
            context = target.bind(tango)(context);
            papa = context.intl;
            context = papa.string;
            sequence = sequence[status];
            sequence = target.bind(tango)(sequence);
            sequence = sequence.t;
            sequence = sequence.w3RBdX;
            sequence = context.bind(papa)(sequence);
            vacuum['id'] = sequence;
            papa = _closure1_slot14;
            context = _closure1_slot28;
            sequence = {};
            target = result + sizing;
            target = target + status;
            sequence['extraBottomHeight'] = target;
            target = golf.fractionalState;
            sequence['fractionalState'] = target;
            sequence['isInReverseTrial'] = options;
            sequence = papa.bind(tango)(context, sequence);
            vacuum['page'] = sequence;
            source[1] = vacuum;
            report['items'] = source;
            report['pageWidth'] = echo;
            report['onPageChange'] = output;
            source = oscar.bind(offset)(report);
            offset = _closure1_slot4;
            oscar = offset.useEffect;
            report = null;
            report = report == config;
            output = undefined;
            if(report) { _fun104822_ip = 941; continue _fun104822 }
 936:
            output = config.id;
 941:
            report = new Array(3);
            report[0] = output;
            report[1] = romeo;
            report[2] = zulu;
            zulu = function() {
                _fun104829: for(var _fun104829_ip = 0; ; ) switch(_fun104829_ip) {
 0:
                    mike = _closure2_slot6;
                    entity = true;
                    entity = entity === mike;
                    if(!entity) { _fun104829_ip = 44; continue _fun104829 }
 16:
                    mike = _closure2_slot7;
                    zulu = null;
                    report = zulu == mike;
                    mike = undefined;
                    if(report) { _fun104829_ip = 40; continue _fun104829 }
 31:
                    report = _closure2_slot7;
                    mike = report.id;
 40:
                    entity = zulu != mike;
 44:
                    if(!entity) { _fun104829_ip = 57; continue _fun104829 }
 47:
                    zulu = _closure2_slot8;
                    mike = null;
                    entity = mike === zulu;
 57:
                    if(!entity) { _fun104829_ip = 118; continue _fun104829 }
 60:
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 35;
                    mike = mike[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.getSubscriptionRewardEligibility;
                    oscar = _closure2_slot7;
                    report = null;
                    report = report == oscar;
                    if(report) { _fun104829_ip = 113; continue _fun104829 }
 104:
                    tango = _closure2_slot7;
                    entity = tango.id;
 113:
                    entity = mike.bind(zulu)(entity);
 118:
                    entity = undefined;
                    return entity;
                }
            };
            zulu = oscar.bind(offset)(zulu, report);
            report = _closure1_slot0;
            zulu = _closure1_slot2;
            oscar = 36;
            zulu = zulu[oscar];
            offset = report.bind(tango)(zulu);
            report = offset.useSharedValue;
            zulu = -32;
            if(!mike) { _fun104822_ip = 1011; continue _fun104822 }
 1004:
            romeo = 8;
            zulu = result + romeo;
 1011:
            echo = report.bind(offset)(zulu);
            _closure2_slot9 = echo;
            zulu = _closure1_slot0;
            papa = _closure1_slot2;
            report = papa[oscar];
            romeo = zulu.bind(tango)(report);
            offset = romeo.useAnimatedStyle;
            report = function() { // Original name: Z
                entity = {};
                zulu = _closure2_slot9;
                mike = zulu.get;
                mike = mike.bind(zulu)();
                entity['bottom'] = mike;
                return entity;
            };
            output = {};
            output['floatTabBottomOffset'] = echo;
            report['__closure'] = output;
            output = 15088278002673.0;
            report['__workletHash'] = output;
            output = _closure1_slot25;
            report['__initData'] = output;
            offset = offset.bind(romeo)(report);
            output = _closure1_slot4;
            romeo = output.useEffect;
            report = new Array(3);
            report[0] = echo;
            report[1] = result;
            report[2] = mike;
            mike = function() {
                _fun104831: for(var _fun104831_ip = 0; ; ) switch(_fun104831_ip) {
 0:
                    mike = _closure2_slot4;
                    if(mike) { _fun104831_ip = 115; continue _fun104831 }
 10:
                    zulu = _closure2_slot9;
                    mike = zulu.set;
                    options = _closure1_slot0;
                    verify = _closure1_slot2;
                    tango = 36;
                    tango = verify[tango];
                    golf = undefined;
                    oscar = options.bind(golf)(tango);
                    report = oscar.withDelay;
                    tango = 37;
                    tango = verify[tango];
                    options = options.bind(golf)(tango);
                    golf = options.withSpring;
                    tango = _closure2_slot0;
                    entity = 8;
                    tango = tango + entity;
                    entity = {'duration': 2000, 'dampingRatio': 0.4, 'stiffness': 300};
                    tango = golf.bind(options)(tango, entity);
                    entity = 500;
                    entity = report.bind(oscar)(entity, tango);
                    entity = mike.bind(zulu)(entity);
 115:
                    entity = undefined;
                    return entity;
                }
            };
            mike = romeo.bind(output)(mike, report);
            mike = 38;
            report = papa[mike];
            romeo = zulu.bind(tango)(report);
            report = romeo.useThemeContext;
            report = report.bind(romeo)();
            result = report.theme;
            mike = papa[mike];
            report = zulu.bind(tango)(mike);
            mike = report.isThemeDark;
            echo = mike.bind(report)(result);
            mike = _closure1_slot11;
            output = mike.MIDNIGHT;
            context = _closure1_slot1;
            mike = 39;
            report = papa[mike];
            romeo = context.bind(tango)(report);
            report = golf.endsAt;
            mike = papa[mike];
            mike = zulu.bind(tango)(mike);
            mike = mike.CountDownMessageTypes;
            mike = mike.ENDS_IN;
            vacuum = romeo.bind(tango)(report, mike);
            sequence = _closure1_slot4;
            romeo = sequence.useEffect;
            report = function() {
                _fun104832: for(var _fun104832_ip = 0; ; ) switch(_fun104832_ip) {
 0:
                    options = _closure1_slot0;
                    tango = _closure1_slot2;
                    zulu = 40;
                    report = tango[zulu];
                    entity = undefined;
                    golf = options.bind(entity)(report);
                    report = golf.isDismissibleContentDismissed;
                    oscar = 41;
                    tango = tango[oscar];
                    tango = options.bind(entity)(tango);
                    tango = tango.DismissibleContent;
                    tango = tango.MOBILE_NITRO_HOME_SETTINGS_BADGE;
                    tango = report.bind(golf)(tango);
                    if(tango) { _fun104832_ip = 112; continue _fun104832 }
 63:
                    options = _closure1_slot0;
                    tango = _closure1_slot2;
                    report = tango[zulu];
                    golf = options.bind(entity)(report);
                    report = golf.markDismissibleContentAsDismissed;
                    tango = tango[oscar];
                    tango = options.bind(entity)(tango);
                    tango = tango.DismissibleContent;
                    tango = tango.MOBILE_NITRO_HOME_SETTINGS_BADGE;
                    tango = report.bind(golf)(tango);
 112:
                    options = _closure1_slot0;
                    tango = _closure1_slot2;
                    report = tango[zulu];
                    golf = options.bind(entity)(report);
                    report = golf.isDismissibleContentDismissed;
                    tango = tango[oscar];
                    tango = options.bind(entity)(tango);
                    tango = tango.DismissibleContent;
                    tango = tango.REFERRAL_TRIAL_MOBILE_NITRO_HOME_BADGE;
                    tango = report.bind(golf)(tango);
                    if(tango) { _fun104832_ip = 213; continue _fun104832 }
 164:
                    report = _closure1_slot0;
                    mike = _closure1_slot2;
                    zulu = mike[zulu];
                    tango = report.bind(entity)(zulu);
                    zulu = tango.markDismissibleContentAsDismissed;
                    mike = mike[oscar];
                    mike = report.bind(entity)(mike);
                    mike = mike.DismissibleContent;
                    mike = mike.REFERRAL_TRIAL_MOBILE_NITRO_HOME_BADGE;
                    mike = zulu.bind(tango)(mike);
 213:
                    return entity;
                }
            };
            mike = new Array(0);
            mike = romeo.bind(sequence)(report, mike);
            mike = 42;
            mike = papa[mike];
            zulu = zulu.bind(tango)(mike);
            mike = zulu.useTieredTenureBadgesExperiment;
            mike = mike.bind(zulu)();
            romeo = mike.enabled;
            _closure2_slot10 = romeo;
            report = _closure1_slot4;
            zulu = report.useEffect;
            mike = new Array(1);
            mike[0] = romeo;
            entity = function() {
                _fun104833: for(var _fun104833_ip = 0; ; ) switch(_fun104833_ip) {
 0:
                    options = _closure1_slot0;
                    tango = _closure1_slot2;
                    zulu = 40;
                    report = tango[zulu];
                    entity = undefined;
                    golf = options.bind(entity)(report);
                    report = golf.isDismissibleContentDismissed;
                    oscar = 41;
                    tango = tango[oscar];
                    tango = options.bind(entity)(tango);
                    tango = tango.DismissibleContent;
                    tango = tango.WHATS_NEW_TENURE_BADGE_REWARD;
                    tango = report.bind(golf)(tango);
                    tango = !tango;
                    if(!tango) { _fun104833_ip = 73; continue _fun104833 }
 66:
                    tango = _closure2_slot10;
 73:
                    if(!tango) { _fun104833_ip = 125; continue _fun104833 }
 76:
                    report = _closure1_slot0;
                    mike = _closure1_slot2;
                    zulu = mike[zulu];
                    tango = report.bind(entity)(zulu);
                    zulu = tango.markDismissibleContentAsDismissed;
                    mike = mike[oscar];
                    mike = report.bind(entity)(mike);
                    mike = mike.DismissibleContent;
                    mike = mike.WHATS_NEW_TENURE_BADGE_REWARD;
                    mike = zulu.bind(tango)(mike);
 125:
                    return entity;
                }
            };
            entity = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot15;
            mike = _closure1_slot5;
            entity = {};
            romeo = kilo.container;
            report = new Array(2);
            report[0] = romeo;
            romeo = {};
            romeo['paddingTop'] = backup;
            report[1] = romeo;
            entity['style'] = report;
            backup = _closure1_slot14;
            report = 43;
            report = papa[report];
            romeo = context.bind(tango)(report);
            report = {};
            sequence = kilo.background;
            report['style'] = sequence;
            sequence = 44;
            sequence = papa[sequence];
            sequence = context.bind(tango)(sequence);
            report['source'] = sequence;
            romeo = backup.bind(tango)(romeo, report);
            report = new Array(5);
            report[0] = romeo;
            sequence = _closure1_slot14;
            backup = _closure1_slot26;
            romeo = {};
            romeo['onClose'] = record;
            romeo['subscription'] = config;
            romeo = sequence.bind(tango)(backup, romeo);
            report[1] = romeo;
            romeo = golf.fractionalState;
            golf = _closure1_slot13;
            golf = golf.NONE;
            golf = romeo !== golf;
            if(!golf) { _fun104822_ip = 1480; continue _fun104822 }
 1477:
            golf = !options;
 1480:
            if(!golf) { _fun104822_ip = 1520; continue _fun104822 }
 1483:
            backup = _closure1_slot14;
            romeo = _closure1_slot1;
            sequence = _closure1_slot2;
            options = 45;
            options = sequence[options];
            romeo = romeo.bind(tango)(options);
            options = {};
            options['countdownText'] = vacuum;
            golf = backup.bind(tango)(romeo, options);
 1520:
            report[2] = golf;
            romeo = _closure1_slot15;
            options = _closure1_slot5;
            golf = {};
            backup = kilo.tabContent;
            golf['style'] = backup;
            sequence = _closure1_slot14;
            vacuum = _closure1_slot0;
            config = _closure1_slot2;
            backup = 46;
            backup = config[backup];
            backup = vacuum.bind(tango)(backup);
            vacuum = backup.SegmentedControlPages;
            backup = {};
            backup['state'] = source;
            vacuum = sequence.bind(tango)(vacuum, backup);
            backup = new Array(2);
            backup[0] = vacuum;
            if(!update) { _fun104822_ip = 1631; continue _fun104822 }
 1597:
            config = _closure1_slot14;
            sequence = _closure1_slot5;
            vacuum = {};
            context = kilo.backSwipeSensor;
            record = new Array(1);
            record[0] = context;
            vacuum['style'] = record;
            update = config.bind(tango)(sequence, vacuum);
 1631:
            backup[1] = update;
            golf['children'] = backup;
            golf = romeo.bind(tango)(options, golf);
            report[3] = golf;
            options = _closure1_slot15;
            golf = _closure1_slot1;
            vacuum = _closure1_slot2;
            oscar = vacuum[oscar];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.View;
            oscar = {};
            oscar['style'] = offset;
            oscar['onLayout'] = verify;
            romeo = _closure1_slot14;
            offset = _closure1_slot5;
            verify = {};
            backup = kilo.segmentedControlActual;
            verify['style'] = backup;
            verify['onLayout'] = foxtrot;
            update = _closure1_slot14;
            backup = _closure1_slot0;
            foxtrot = 47;
            foxtrot = vacuum[foxtrot];
            foxtrot = backup.bind(tango)(foxtrot);
            backup = foxtrot.SegmentedControl;
            foxtrot = {};
            foxtrot['state'] = source;
            source = 'experimental_Small';
            foxtrot['variant'] = source;
            foxtrot = update.bind(tango)(backup, foxtrot);
            verify['children'] = foxtrot;
            offset = romeo.bind(tango)(offset, verify);
            verify = new Array(3);
            verify[0] = offset;
            offset = !echo;
            if(!offset) { _fun104822_ip = 1886; continue _fun104822 }
 1783:
            backup = _closure1_slot14;
            foxtrot = _closure1_slot1;
            update = _closure1_slot2;
            romeo = 48;
            romeo = update[romeo];
            foxtrot = foxtrot.bind(tango)(romeo);
            romeo = {};
            update = _closure1_slot10;
            source = update.START;
            romeo['start'] = source;
            update = update.END;
            romeo['end'] = update;
            update = ['rgba(218, 187, 249, 0.5)', 'rgba(229, 177, 193, 0.5)'];
            romeo['colors'] = update;
            source = kilo.segmentedControlVirtual;
            update = new Array(2);
            update[0] = source;
            source = {};
            source['height'] = sizing;
            source['zIndex'] = control;
            update[1] = source;
            romeo['style'] = update;
            offset = backup.bind(tango)(foxtrot, romeo);
 1886:
            verify[1] = offset;
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            offset = 49;
            offset = foxtrot[offset];
            romeo = romeo.bind(tango)(offset);
            offset = romeo.isAndroid;
            offset = offset.bind(romeo)();
            foxtrot = _closure1_slot14;
            if(offset) { _fun104822_ip = 2046; continue _fun104822 }
 1926:
            romeo = _closure1_slot1;
            backup = _closure1_slot2;
            offset = 50;
            offset = backup[offset];
            romeo = romeo.bind(tango)(offset);
            offset = {};
            backup = 0.5;
            if(!echo) { _fun104822_ip = 1971; continue _fun104822 }
 1961:
            backup = 0.2;
 1971:
            offset['blurAmount'] = backup;
            echo = kilo.segmentedControlVirtual;
            backup = new Array(2);
            backup[0] = echo;
            echo = {'height': null, 'zIndex': 1, 'overflow': 'hidden'};
            echo['height'] = sizing;
            backup[1] = echo;
            offset['style'] = backup;
            offset['blurTheme'] = result;
            backup = undefined;
            if(!(result === output)) { _fun104822_ip = 2033; continue _fun104822 }
 2029:
            backup = _closure1_slot18;
 2033:
            offset['blurTintRgba'] = backup;
            offset = foxtrot.bind(tango)(romeo, offset);
            _fun104822_ip = 2110; continue _fun104822;
 2046:
            romeo = _closure1_slot5;
            yankee = {};
            output = kilo.segmentedControlVirtual;
            backup = new Array(3);
            backup[0] = output;
            kilo = kilo.androidSegmentedControlBackground;
            backup[1] = kilo;
            kilo = {'height': null, 'zIndex': 1, 'overflow': 'hidden'};
            kilo['height'] = sizing;
            backup[2] = kilo;
            yankee['style'] = backup;
            offset = foxtrot.bind(tango)(romeo, yankee);
 2110:
            verify[2] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[4] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = tango;
    zulu['BACK_BUTTON_SIZE'] = mike;
    return entity;
})();