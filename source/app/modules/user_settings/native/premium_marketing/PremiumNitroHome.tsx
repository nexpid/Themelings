// app/modules/user_settings/native/premium_marketing/PremiumNitroHome.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = golfie;
    entity = function(argFoo) { // Original name: NitroHomeHeader
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            entity = michal.subscription;
            michal = michal.onClose;
            var _closure2_slot0 = michal;
            zuuluu = _closure1_slot22;
            tangon = undefined;
            yankee = zuuluu.bind(tangon)();
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            zuuluu = 12;
            zuuluu = oscard[zuuluu];
            report = report.bind(tangon)(zuuluu);
            zuuluu = report.useNavigation;
            golfie = zuuluu.bind(report)();
            var _closure2_slot1 = golfie;
            oscard = _closure1_slot4;
            report = oscard.useCallback;
            zuuluu = new Array(2);
            zuuluu[0] = golfie;
            zuuluu[1] = michal;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot0;
                    entity = undefined;
                    if(!(entity === zuuluu)) { _fun00004_ip = 29; continue _fun00003 }
 13:
                    tangon = _closure2_slot1;
                    zuuluu = tangon.pop;
                    zuuluu = zuuluu.bind(tangon)();
                    _fun00004_ip = 37; continue _fun00003;
 29:
                    michal = _closure2_slot0;
                    michal = michal.bind(entity)();
 37:
                    return entity;
                }
            };
            result = report.bind(oscard)(michal, zuuluu);
            michal = null;
            golfie = michal == entity;
            if(golfie) { _fun00002_ip = 118; continue _fun00001 }
 109:
            entity = entity.hasActiveTrial;
            golfie = !entity;
 118:
            oscard = !golfie;
            zuuluu = _closure1_slot15;
            michal = _closure1_slot5;
            entity = {};
            report = yankee.contentContainer;
            entity['style'] = report;
            verify = _closure1_slot15;
            option = _closure1_slot5;
            report = {};
            romeon = yankee.headerContainer;
            report['style'] = romeon;
            kiloes = _closure1_slot14;
            output = _closure1_slot0;
            echoed = _closure1_slot2;
            foxtra = 13;
            romeon = echoed[foxtra];
            romeon = output.bind(tangon)(romeon);
            backup = romeon.PressableOpacity;
            romeon = {};
            update = yankee.backButtonWrapper;
            romeon['style'] = update;
            romeon['onPress'] = result;
            source = _closure1_slot14;
            result = 14;
            result = echoed[result];
            result = output.bind(tangon)(result);
            update = result.ArrowLargeLeftIcon;
            result = {'size': 'md', 'color': 'white'};
            result = source.bind(tangon)(update, result);
            romeon['children'] = result;
            backup = kiloes.bind(tangon)(backup, romeon);
            romeon = new Array(3);
            romeon[0] = backup;
            result = _closure1_slot14;
            backup = 15;
            backup = echoed[backup];
            backup = output.bind(tangon)(backup);
            kiloes = backup.Text;
            backup = {'variant': 'display-sm', 'color': 'always-white'};
            update = yankee.headerText;
            backup['style'] = update;
            update = 16;
            source = echoed[update];
            source = output.bind(tangon)(source);
            ctrled = source.intl;
            source = ctrled.string;
            update = echoed[update];
            update = output.bind(tangon)(update);
            update = update.t;
            update = update.BnquQ0;
            update = source.bind(ctrled)(update);
            backup['children'] = update;
            backup = result.bind(tangon)(kiloes, backup);
            romeon[1] = backup;
            kiloes = _closure1_slot14;
            foxtra = echoed[foxtra];
            foxtra = output.bind(tangon)(foxtra);
            backup = foxtra.PressableOpacity;
            foxtra = {};
            result = yankee.backButtonWrapper;
            foxtra['style'] = result;
            sizing = function() { // Original name: onPress
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 17;
                zuuluu = zuuluu[entity];
                entity = undefined;
                oscard = tangon.bind(entity)(zuuluu);
                report = oscard.track;
                zuuluu = _closure1_slot9;
                tangon = zuuluu.NITRO_HOME_NAVIGATION;
                zuuluu = {};
                golfie = _closure1_slot20;
                golfie = golfie.YOUR_NITRO_HOME;
                zuuluu['current_component'] = golfie;
                golfie = _closure1_slot20;
                golfie = golfie.YOUR_NITRO_PLAN;
                zuuluu['next_component'] = golfie;
                golfie = 'header_settings_icon';
                zuuluu['interaction_component'] = golfie;
                zuuluu = report.bind(oscard)(tangon, zuuluu);
                tangon = _closure2_slot1;
                zuuluu = tangon.push;
                michal = _closure1_slot12;
                michal = michal.PREMIUM_MANAGE_PLAN;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            foxtra['onPress'] = sizing;
            result = _closure1_slot14;
            sizing = 18;
            sizing = echoed[sizing];
            sizing = output.bind(tangon)(sizing);
            output = sizing.SettingsIcon;
            sizing = {'size': 'md', 'color': 'white'};
            sizing = result.bind(tangon)(output, sizing);
            foxtra['children'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            romeon[2] = foxtra;
            report['children'] = romeon;
            option = verify.bind(tangon)(option, report);
            report = new Array(2);
            report[0] = option;
            if(golfie) { _fun00002_ip = 567; continue _fun00001 }
 492:
            verify = _closure1_slot14;
            option = _closure1_slot5;
            golfie = {};
            yankee = yankee.pillParent;
            golfie['style'] = yankee;
            romeon = _closure1_slot14;
            yankee = _closure1_slot0;
            foxtra = _closure1_slot2;
            offset = 19;
            offset = foxtra[offset];
            offset = yankee.bind(tangon)(offset);
            yankee = offset.PremiumReferralTrialPill;
            offset = {};
            foxtra = true;
            offset['hasExtraMargin'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 567:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot26 = entity;
    entity = function(argFoo) { // Original name: NewTab
        michal = argFoo;
        backup = michal.extraBottomHeight;
        michal = _closure1_slot23;
        tangon = undefined;
        romeon = michal.bind(tangon)();
        yankee = _closure1_slot0;
        offset = _closure1_slot2;
        oscard = 20;
        michal = offset[oscard];
        zuuluu = yankee.bind(tangon)(michal);
        michal = zuuluu.usePremiumPerkCard;
        verify = michal.bind(zuuluu)();
        zuuluu = _closure1_slot4;
        michal = zuuluu.useRef;
        golfie = false;
        michal = michal.bind(zuuluu)(golfie);
        var _closure2_slot0 = michal;
        report = _closure1_slot4;
        zuuluu = report.useCallback;
        michal = function(argFoo) {
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 21;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.trackIfScrolledToBottom;
            entity = {};
            report = argFoo;
            report = report.nativeEvent;
            entity['nativeEvent'] = report;
            tangon = _closure1_slot16;
            entity['trackedType'] = tangon;
            tangon = _closure2_slot0;
            entity['hasTrackedScrolledToBottom'] = tangon;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        entity = new Array(0);
        report = zuuluu.bind(report)(michal, entity);
        zuuluu = _closure1_slot15;
        michal = _closure1_slot6;
        entity = {};
        foxtra = romeon.featureCardsContainer;
        romeon = new Array(2);
        romeon[0] = foxtra;
        foxtra = {};
        foxtra['paddingBottom'] = backup;
        romeon[1] = foxtra;
        entity['contentContainerStyle'] = romeon;
        entity['showsVerticalScrollIndicator'] = golfie;
        entity['onScrollEndDrag'] = report;
        entity['onMomentumScrollEnd'] = report;
        report = 0;
        entity['scrollEventThrottle'] = report;
        romeon = _closure1_slot14;
        report = 22;
        report = offset[report];
        report = yankee.bind(tangon)(report);
        golfie = report.TieredTenureBadgePerkCard;
        report = {};
        golfie = romeon.bind(tangon)(golfie, report);
        report = new Array(5);
        report[0] = golfie;
        romeon = _closure1_slot14;
        golfie = 23;
        golfie = offset[golfie];
        golfie = yankee.bind(tangon)(golfie);
        yankee = golfie.ReferralProgramPerkCard;
        golfie = {};
        golfie = romeon.bind(tangon)(yankee, golfie);
        report[1] = golfie;
        foxtra = _closure1_slot14;
        golfie = _closure1_slot1;
        yankee = offset[oscard];
        romeon = golfie.bind(tangon)(yankee);
        yankee = {};
        kiloes = verify.memberPricing;
        sizing = yankee;
        backup = copyDataProperties(sizing, kiloes);
        yankee = foxtra.bind(tangon)(romeon, yankee);
        report[2] = yankee;
        foxtra = _closure1_slot14;
        yankee = offset[oscard];
        romeon = golfie.bind(tangon)(yankee);
        yankee = {};
        kiloes = verify.earlyAccess;
        sizing = yankee;
        backup = copyDataProperties(sizing, kiloes);
        yankee = foxtra.bind(tangon)(romeon, yankee);
        report[3] = yankee;
        option = _closure1_slot14;
        oscard = offset[oscard];
        golfie = golfie.bind(tangon)(oscard);
        oscard = {};
        kiloes = verify.superReactions;
        sizing = oscard;
        verify = copyDataProperties(sizing, kiloes);
        oscard = option.bind(tangon)(golfie, oscard);
        report[4] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot27 = entity;
    entity = function(argFoo) { // Original name: PerksTab
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            kiloes = entity.extraBottomHeight;
            foxtra = entity.fractionalState;
            yankee = entity.isInReverseTrial;
            entity = _closure1_slot24;
            tangon = undefined;
            golfie = entity.bind(tangon)();
            output = _closure1_slot0;
            backup = _closure1_slot2;
            entity = 20;
            entity = backup[entity];
            michal = output.bind(tangon)(entity);
            entity = michal.usePremiumPerkCard;
            romeon = entity.bind(michal)();
            report = _closure1_slot4;
            zuuluu = report.useCallback;
            michal = function(argFoo) {
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 17;
                zuuluu = zuuluu[entity];
                entity = undefined;
                report = tangon.bind(entity)(zuuluu);
                tangon = report.track;
                michal = _closure1_slot9;
                zuuluu = michal.MOBILE_NITRO_HOME_PERKS_CAROUSEL_SCROLLED;
                michal = {};
                oscard = argFoo;
                michal['section_name'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            entity = new Array(0);
            entity = zuuluu.bind(report)(michal, entity);
            var _closure2_slot0 = entity;
            michal = _closure1_slot4;
            entity = michal.useRef;
            oscard = false;
            entity = entity.bind(michal)(oscard);
            var _closure2_slot1 = entity;
            report = _closure1_slot4;
            zuuluu = report.useCallback;
            michal = function(argFoo) {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 21;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.trackIfScrolledToBottom;
                michal = {};
                oscard = argFoo;
                oscard = oscard.nativeEvent;
                michal['nativeEvent'] = oscard;
                report = _closure1_slot17;
                michal['trackedType'] = report;
                report = _closure2_slot1;
                michal['hasTrackedScrolledToBottom'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity = new Array(0);
            report = zuuluu.bind(report)(michal, entity);
            zuuluu = _closure1_slot15;
            michal = _closure1_slot6;
            entity = {};
            option = golfie.featureCardsContainer;
            golfie = new Array(2);
            golfie[0] = option;
            option = {};
            option['paddingBottom'] = kiloes;
            golfie[1] = option;
            entity['contentContainerStyle'] = golfie;
            entity['showsVerticalScrollIndicator'] = oscard;
            entity['onScrollEndDrag'] = report;
            entity['onMomentumScrollEnd'] = report;
            report = 0;
            entity['scrollEventThrottle'] = report;
            option = _closure1_slot14;
            golfie = _closure1_slot1;
            oscard = 24;
            report = backup[oscard];
            golfie = golfie.bind(tangon)(report);
            report = {};
            result = 16;
            kiloes = backup[result];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = backup[result];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.DOb6x8;
            backup = kiloes.bind(sizing)(backup);
            report['title'] = backup;
            backup = _closure1_slot13;
            backup = backup.FP_ONLY;
            if(!(foxtra !== backup)) { _fun00006_ip = 325; continue _fun00005 }
 289:
            kiloes = romeon.customProfile;
            backup = new Array(3);
            backup[0] = kiloes;
            kiloes = romeon.clientThemes;
            backup[1] = kiloes;
            kiloes = romeon.serverBoosts;
            backup[2] = kiloes;
            _fun00006_ip = 388; continue _fun00005;
 325:
            output = romeon.customProfile;
            if(yankee) { _fun00006_ip = 364; continue _fun00005 }
 334:
            kiloes = new Array(3);
            kiloes[0] = output;
            sizing = romeon.clientThemes;
            kiloes[1] = sizing;
            sizing = romeon.greyServerBoosts;
            kiloes[2] = sizing;
            _fun00006_ip = 385; continue _fun00005;
 364:
            sizing = new Array(2);
            sizing[0] = output;
            output = romeon.clientThemes;
            sizing[1] = output;
            kiloes = sizing;
 385:
            backup = kiloes;
 388:
            report['perks'] = backup;
            backup = function(argFoo) { // Original name: onItemChange
                tangon = _closure2_slot0;
                entity = _closure1_slot19;
                zuuluu = entity.CAROUSEL_SECTION_NAME_1;
                michal = undefined;
                entity = argFoo;
                entity = tangon.bind(michal)(zuuluu, entity);
                return entity;
            };
            report['onItemChange'] = backup;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(4);
            report[0] = golfie;
            sizing = _closure1_slot14;
            golfie = _closure1_slot1;
            backup = _closure1_slot2;
            option = backup[oscard];
            kiloes = golfie.bind(tangon)(option);
            option = {};
            output = _closure1_slot0;
            echoed = backup[result];
            echoed = output.bind(tangon)(echoed);
            source = echoed.intl;
            update = source.string;
            echoed = backup[result];
            echoed = output.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.+vt7w8;
            echoed = update.bind(source)(echoed);
            option['title'] = echoed;
            update = romeon.customAppIcons;
            echoed = new Array(4);
            echoed[0] = update;
            update = romeon.emoji;
            echoed[1] = update;
            update = romeon.customSounds;
            echoed[2] = update;
            update = romeon.sticker;
            echoed[3] = update;
            option['perks'] = echoed;
            echoed = function(argFoo) { // Original name: onItemChange
                tangon = _closure2_slot0;
                entity = _closure1_slot19;
                zuuluu = entity.CAROUSEL_SECTION_NAME_2;
                michal = undefined;
                entity = argFoo;
                entity = tangon.bind(michal)(zuuluu, entity);
                return entity;
            };
            option['onItemChange'] = echoed;
            option = sizing.bind(tangon)(kiloes, option);
            report[1] = option;
            sizing = _closure1_slot14;
            option = backup[oscard];
            kiloes = golfie.bind(tangon)(option);
            option = {};
            echoed = backup[result];
            echoed = output.bind(tangon)(echoed);
            source = echoed.intl;
            update = source.string;
            echoed = backup[result];
            echoed = output.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.LgHbnJ;
            echoed = update.bind(source)(echoed);
            option['title'] = echoed;
            update = romeon.memberPricing;
            echoed = new Array(5);
            echoed[0] = update;
            update = romeon.earlyAccess;
            echoed[1] = update;
            update = romeon.largeUploads;
            echoed[2] = update;
            update = romeon.hdVideo;
            echoed[3] = update;
            update = romeon.superReactions;
            echoed[4] = update;
            option['perks'] = echoed;
            echoed = function(argFoo) { // Original name: onItemChange
                tangon = _closure2_slot0;
                entity = _closure1_slot19;
                zuuluu = entity.CAROUSEL_SECTION_NAME_3;
                michal = undefined;
                entity = argFoo;
                entity = tangon.bind(michal)(zuuluu, entity);
                return entity;
            };
            option['onItemChange'] = echoed;
            option = sizing.bind(tangon)(kiloes, option);
            report[2] = option;
            option = _closure1_slot14;
            oscard = backup[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            kiloes = backup[result];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = backup[result];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.LTaxu7;
            backup = kiloes.bind(sizing)(backup);
            oscard['title'] = backup;
            offset = _closure1_slot13;
            offset = offset.FP_ONLY;
            if(!(foxtra !== offset)) { _fun00006_ip = 812; continue _fun00005 }
 786:
            foxtra = romeon.entranceSounds;
            offset = new Array(2);
            offset[0] = foxtra;
            foxtra = romeon.badge;
            offset[1] = foxtra;
            _fun00006_ip = 855; continue _fun00005;
 812:
            foxtra = romeon.entranceSounds;
            if(yankee) { _fun00006_ip = 841; continue _fun00005 }
 821:
            yankee = new Array(2);
            yankee[0] = foxtra;
            romeon = romeon.greyBadge;
            yankee[1] = romeon;
            _fun00006_ip = 852; continue _fun00005;
 841:
            romeon = new Array(1);
            romeon[0] = foxtra;
            yankee = romeon;
 852:
            offset = yankee;
 855:
            oscard['perks'] = offset;
            verify = function(argFoo) { // Original name: onItemChange
                tangon = _closure2_slot0;
                entity = _closure1_slot19;
                zuuluu = entity.CAROUSEL_SECTION_NAME_4;
                michal = undefined;
                entity = argFoo;
                entity = tangon.bind(michal)(zuuluu, entity);
                return entity;
            };
            oscard['onItemChange'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot28 = entity;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = golfie[entity];
    entity = undefined;
    michal = foxtra.bind(entity)(michal);
    var _closure1_slot3 = michal;
    yankee = 1;
    report = golfie[yankee];
    michal = argCor;
    michal = michal.bind(entity)(report);
    var _closure1_slot4 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.View;
    var _closure1_slot5 = report;
    michal = michal.ScrollView;
    var _closure1_slot6 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = foxtra.bind(entity)(michal);
    var _closure1_slot7 = michal;
    michal = 4;
    michal = golfie[michal];
    michal = foxtra.bind(entity)(michal);
    var _closure1_slot8 = michal;
    michal = 5;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.AnalyticEvents;
    var _closure1_slot9 = report;
    report = michal.HorizontalGradient;
    var _closure1_slot10 = report;
    report = michal.ThemeTypes;
    var _closure1_slot11 = report;
    michal = michal.UserSettingsSections;
    var _closure1_slot12 = michal;
    michal = 6;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.FractionalPremiumStates;
    var _closure1_slot13 = michal;
    michal = 7;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.jsx;
    var _closure1_slot14 = report;
    michal = michal.jsxs;
    var _closure1_slot15 = michal;
    michal = 'NewTab';
    var _closure1_slot16 = michal;
    michal = 'PerksTab';
    var _closure1_slot17 = michal;
    michal = 8;
    michal = golfie[michal];
    option = oscard.bind(entity)(michal);
    report = option.hexToRgbaString;
    michal = 9;
    michal = golfie[michal];
    verify = foxtra.bind(entity)(michal);
    romeon = 10;
    michal = golfie[romeon];
    michal = foxtra.bind(entity)(michal);
    michal = michal.unsafe_rawColors;
    michal = michal.PLUM_24;
    offset = verify.bind(entity)(michal);
    verify = offset.alpha;
    michal = 0.6;
    verify = verify.bind(offset)(michal);
    michal = verify.hex;
    michal = michal.bind(verify)();
    michal = report.bind(option)(michal);
    var _closure1_slot18 = michal;
    michal = {};
    report = 'NitroFavorites';
    michal['CAROUSEL_SECTION_NAME_1'] = report;
    report = 'MakeDiscordYours';
    michal['CAROUSEL_SECTION_NAME_2'] = report;
    report = 'EnjoyAnUpgradedDiscord';
    michal['CAROUSEL_SECTION_NAME_3'] = report;
    report = 'ShowUpTheWayYouWant';
    michal['CAROUSEL_SECTION_NAME_4'] = report;
    var _closure1_slot19 = michal;
    michal = {};
    report = 'YourNitroHome';
    michal['YOUR_NITRO_HOME'] = report;
    report = 'YourNitroPlan';
    michal['YOUR_NITRO_PLAN'] = report;
    var _closure1_slot20 = michal;
    report = 11;
    michal = golfie[report];
    verify = oscard.bind(entity)(michal);
    option = verify.createStyles;
    michal = {};
    offset = {'display': 'flex', 'width': '100%', 'height': '100%'};
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_BASE_SECONDARY;
    offset['backgroundColor'] = backup;
    michal['container'] = offset;
    offset = {'position': 'absolute', 'width': '100%'};
    michal['background'] = offset;
    offset = {};
    offset['flex'] = yankee;
    michal['tabContent'] = offset;
    offset = {'display': 'flex', 'flexDirection': 'column', 'rowGap': 16, 'alignItems': 'center'};
    michal['featureCardsContainer'] = offset;
    offset = {'zIndex': 3, 'paddingHorizontal': 16};
    michal['segmentedControl'] = offset;
    offset = {'zIndex': 3, 'paddingHorizontal': 16};
    michal['segmentedControlActual'] = offset;
    offset = {'position': 'absolute', 'top': 0, 'left': 16, 'right': 16};
    yankee = golfie[romeon];
    yankee = foxtra.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.lg;
    offset['borderRadius'] = yankee;
    michal['segmentedControlVirtual'] = offset;
    offset = {};
    yankee = golfie[romeon];
    yankee = foxtra.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = yankee;
    michal['androidSegmentedControlBackground'] = offset;
    offset = {'position': 'absolute', 'top': 0, 'left': 0, 'height': '100%', 'width': '10%'};
    michal['backSwipeSensor'] = offset;
    michal = option.bind(verify)(michal);
    var _closure1_slot21 = michal;
    michal = golfie[report];
    offset = oscard.bind(entity)(michal);
    verify = offset.createStyles;
    option = {};
    michal = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'paddingHorizontal': 16, 'paddingVertical': 8, 'justifyContent': 'space-between', 'gap': 8};
    option['headerContainer'] = michal;
    michal = {'display': 'flex', 'flexDirection': 'column'};
    option['contentContainer'] = michal;
    yankee = {'width': 24, 'height': 24, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center'};
    michal = 24;
    romeon = golfie[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    yankee['borderRadius'] = romeon;
    option['backButtonWrapper'] = yankee;
    yankee = {'textAlign': 'center', 'width': '80%'};
    option['headerText'] = yankee;
    yankee = {'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center'};
    option['pillParent'] = yankee;
    option = verify.bind(offset)(option);
    var _closure1_slot22 = option;
    option = golfie[report];
    offset = oscard.bind(entity)(option);
    verify = offset.createStyles;
    option = {};
    yankee = {'display': 'flex', 'flexDirection': 'column', 'rowGap': 16, 'alignItems': 'center', 'paddingTop': 24};
    option['featureCardsContainer'] = yankee;
    option = verify.bind(offset)(option);
    var _closure1_slot23 = option;
    report = golfie[report];
    verify = oscard.bind(entity)(report);
    option = verify.createStyles;
    report = {};
    offset = {'display': 'flex', 'flexDirection': 'column', 'rowGap': 24, 'paddingTop': 24};
    report['featureCardsContainer'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot24 = report;
    report = {};
    option = 'function PremiumNitroHomeTsx1(){const{floatTabBottomOffset}=this.__closure;return{bottom:floatTabBottomOffset.get()};}';
    report['code'] = option;
    var _closure1_slot25 = report;
    report = 47;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/user_settings/native/premium_marketing/PremiumNitroHome.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: PremiumNitroHome
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            michal = argFoo;
            record = michal.onClose;
            tangon = undefined;
            var _closure2_slot6 = tangon;
            report = _closure1_slot0;
            zuuluu = _closure1_slot2;
            michal = 25;
            michal = zuuluu[michal];
            golfie = report.bind(tangon)(michal);
            oscard = golfie.useCommonTriggerPoint;
            michal = 26;
            michal = zuuluu[michal];
            michal = report.bind(tangon)(michal);
            michal = michal.OpenNitroTriggerPoint;
            michal = oscard.bind(golfie)(michal);
            michal = _closure1_slot21;
            kiloes = michal.bind(tangon)();
            golfie = _closure1_slot1;
            michal = 27;
            michal = zuuluu[michal];
            michal = golfie.bind(tangon)(michal);
            michal = michal.bind(tangon)();
            backup = michal.top;
            result = michal.bottom;
            var _closure2_slot0 = result;
            michal = 12;
            michal = zuuluu[michal];
            oscard = report.bind(tangon)(michal);
            michal = oscard.useNavigation;
            michal = michal.bind(oscard)();
            var _closure2_slot1 = michal;
            verify = _closure1_slot4;
            option = verify.useLayoutEffect;
            oscard = new Array(1);
            oscard[0] = michal;
            michal = function() {
                zuuluu = _closure2_slot1;
                michal = zuuluu.setOptions;
                entity = {};
                tangon = false;
                entity['headerShown'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            michal = option.bind(verify)(michal, oscard);
            oscard = _closure1_slot4;
            michal = oscard.useState;
            romeon = 0;
            michal = michal.bind(oscard)(romeon);
            output = _closure1_slot3;
            ctrled = 2;
            michal = output.bind(tangon)(michal, ctrled);
            echoed = michal[romeon];
            offset = 1;
            michal = michal[offset];
            var _closure2_slot2 = michal;
            verify = _closure1_slot4;
            option = verify.useCallback;
            oscard = function(argFoo) {
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                zuuluu = entity.width;
                michal = _closure2_slot2;
                entity = undefined;
                michal = michal.bind(entity)(zuuluu);
                return entity;
            };
            michal = new Array(0);
            foxtra = option.bind(verify)(oscard, michal);
            oscard = _closure1_slot4;
            michal = oscard.useState;
            michal = michal.bind(oscard)(romeon);
            michal = output.bind(tangon)(michal, ctrled);
            sizing = michal[romeon];
            michal = michal[offset];
            var _closure2_slot3 = michal;
            verify = _closure1_slot4;
            option = verify.useCallback;
            oscard = function(argFoo) {
                zuuluu = _closure2_slot3;
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                michal = entity.height;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal = new Array(0);
            verify = option.bind(verify)(oscard, michal);
            oscard = 28;
            michal = zuuluu[oscard];
            source = report.bind(tangon)(michal);
            update = source.useStateFromStores;
            michal = _closure1_slot7;
            option = new Array(1);
            option[0] = michal;
            michal = function() {
                entity = _closure1_slot7;
                entity = entity.useReducedMotion;
                return entity;
            };
            michal = update.bind(source)(option, michal);
            var _closure2_slot4 = michal;
            source = _closure1_slot4;
            update = source.useState;
            option = true;
            option = update.bind(source)(option);
            option = output.bind(tangon)(option, ctrled);
            update = option[romeon];
            option = option[offset];
            var _closure2_slot5 = option;
            oscard = zuuluu[oscard];
            romeon = report.bind(tangon)(oscard);
            offset = romeon.useStateFromStores;
            oscard = _closure1_slot8;
            option = new Array(1);
            option[0] = oscard;
            oscard = function() {
                michal = _closure1_slot8;
                entity = michal.getPremiumTypeSubscription;
                entity = entity.bind(michal)();
                return entity;
            };
            config = offset.bind(romeon)(option, oscard);
            romeon = _closure1_slot4;
            offset = romeon.useCallback;
            option = function(argFoo) {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    michal = argFoo;
                    entity = 0;
                    if(!(entity !== michal)) { _fun00010_ip = 92; continue _fun00009 }
 9:
                    entity = 1;
                    if(!(entity === michal)) { _fun00010_ip = 163; continue _fun00009 }
 19:
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 17;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    report = michal.bind(zuuluu)(entity);
                    tangon = report.track;
                    entity = _closure1_slot9;
                    michal = entity.MOBILE_NITRO_HOME_TAB_SWITCHED;
                    entity = {};
                    oscard = _closure1_slot17;
                    entity['target'] = oscard;
                    entity = tangon.bind(report)(michal, entity);
                    michal = _closure2_slot5;
                    entity = false;
                    entity = michal.bind(zuuluu)(entity);
                    _fun00010_ip = 163; continue _fun00009;
 92:
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 17;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    report = michal.bind(zuuluu)(entity);
                    tangon = report.track;
                    entity = _closure1_slot9;
                    michal = entity.MOBILE_NITRO_HOME_TAB_SWITCHED;
                    entity = {};
                    oscard = _closure1_slot16;
                    entity['target'] = oscard;
                    entity = tangon.bind(report)(michal, entity);
                    michal = _closure2_slot5;
                    entity = true;
                    entity = michal.bind(zuuluu)(entity);
 163:
                    entity = undefined;
                    return entity;
                }
            };
            oscard = new Array(0);
            output = offset.bind(romeon)(option, oscard);
            oscard = 29;
            oscard = zuuluu[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.bind(tangon)();
            oscard = 30;
            oscard = zuuluu[oscard];
            option = report.bind(tangon)(oscard);
            oscard = option.useIsInReverseTrial;
            option = oscard.bind(option)();
            oscard = 31;
            oscard = zuuluu[oscard];
            offset = report.bind(tangon)(oscard);
            oscard = offset.useMaybeFetchTieredTenureBadgeData;
            oscard = oscard.bind(offset)();
            oscard = 32;
            oscard = zuuluu[oscard];
            romeon = report.bind(tangon)(oscard);
            offset = romeon.useSegmentedControlState;
            oscard = {};
            vacuum = {};
            target = 16;
            source = zuuluu[target];
            source = report.bind(tangon)(source);
            cntext = source.intl;
            sequen = cntext.string;
            source = zuuluu[target];
            source = report.bind(tangon)(source);
            source = source.t;
            source = source.tahjbG;
            source = sequen.bind(cntext)(source);
            vacuum['label'] = source;
            source = zuuluu[target];
            source = report.bind(tangon)(source);
            cntext = source.intl;
            sequen = cntext.string;
            source = zuuluu[target];
            source = report.bind(tangon)(source);
            source = source.t;
            source = source.tahjbG;
            source = sequen.bind(cntext)(source);
            vacuum['id'] = source;
            cntext = _closure1_slot14;
            sequen = _closure1_slot27;
            source = {};
            papara = sizing + target;
            source['extraBottomHeight'] = papara;
            source = cntext.bind(tangon)(sequen, source);
            vacuum['page'] = source;
            source = new Array(2);
            source[0] = vacuum;
            vacuum = {};
            sequen = zuuluu[target];
            sequen = report.bind(tangon)(sequen);
            papara = sequen.intl;
            cntext = papara.string;
            sequen = zuuluu[target];
            sequen = report.bind(tangon)(sequen);
            sequen = sequen.t;
            sequen = sequen.w3RBdX;
            sequen = cntext.bind(papara)(sequen);
            vacuum['label'] = sequen;
            sequen = zuuluu[target];
            sequen = report.bind(tangon)(sequen);
            papara = sequen.intl;
            cntext = papara.string;
            sequen = zuuluu[target];
            sequen = report.bind(tangon)(sequen);
            sequen = sequen.t;
            sequen = sequen.w3RBdX;
            sequen = cntext.bind(papara)(sequen);
            vacuum['id'] = sequen;
            papara = _closure1_slot14;
            cntext = _closure1_slot28;
            sequen = {};
            target = sizing + target;
            sequen['extraBottomHeight'] = target;
            target = golfie.fractionalState;
            sequen['fractionalState'] = target;
            sequen['isInReverseTrial'] = option;
            sequen = papara.bind(tangon)(cntext, sequen);
            vacuum['page'] = sequen;
            source[1] = vacuum;
            oscard['items'] = source;
            oscard['pageWidth'] = echoed;
            oscard['onPageChange'] = output;
            source = offset.bind(romeon)(oscard);
            oscard = 33;
            zuuluu = zuuluu[oscard];
            offset = report.bind(tangon)(zuuluu);
            report = offset.useSharedValue;
            zuuluu = -32;
            if(!michal) { _fun00008_ip = 849; continue _fun00007 }
 842:
            romeon = 8;
            zuuluu = result + romeon;
 849:
            echoed = report.bind(offset)(zuuluu);
            _closure2_slot6 = echoed;
            romeon = _closure1_slot0;
            papara = _closure1_slot2;
            zuuluu = papara[oscard];
            offset = romeon.bind(tangon)(zuuluu);
            report = offset.useAnimatedStyle;
            zuuluu = function() { // Original name: X
                entity = {};
                zuuluu = _closure2_slot6;
                michal = zuuluu.get;
                michal = michal.bind(zuuluu)();
                entity['bottom'] = michal;
                return entity;
            };
            output = {};
            output['floatTabBottomOffset'] = echoed;
            zuuluu['__closure'] = output;
            output = 15088278002673.0;
            zuuluu['__workletHash'] = output;
            output = _closure1_slot25;
            zuuluu['__initData'] = output;
            offset = report.bind(offset)(zuuluu);
            output = _closure1_slot4;
            report = output.useEffect;
            zuuluu = new Array(3);
            zuuluu[0] = echoed;
            zuuluu[1] = result;
            zuuluu[2] = michal;
            michal = function() {
                _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                    michal = _closure2_slot4;
                    if(michal) { _fun00012_ip = 115; continue _fun00011 }
 10:
                    zuuluu = _closure2_slot6;
                    michal = zuuluu.set;
                    option = _closure1_slot0;
                    verify = _closure1_slot2;
                    tangon = 33;
                    tangon = verify[tangon];
                    golfie = undefined;
                    oscard = option.bind(golfie)(tangon);
                    report = oscard.withDelay;
                    tangon = 34;
                    tangon = verify[tangon];
                    option = option.bind(golfie)(tangon);
                    golfie = option.withSpring;
                    tangon = _closure2_slot0;
                    entity = 8;
                    tangon = tangon + entity;
                    entity = {'duration': 2000, 'dampingRatio': 0.4, 'stiffness': 300};
                    tangon = golfie.bind(option)(tangon, entity);
                    entity = 500;
                    entity = report.bind(oscard)(entity, tangon);
                    entity = michal.bind(zuuluu)(entity);
 115:
                    entity = undefined;
                    return entity;
                }
            };
            michal = report.bind(output)(michal, zuuluu);
            michal = 35;
            zuuluu = papara[michal];
            report = romeon.bind(tangon)(zuuluu);
            zuuluu = report.useThemeContext;
            zuuluu = zuuluu.bind(report)();
            result = zuuluu.theme;
            michal = papara[michal];
            zuuluu = romeon.bind(tangon)(michal);
            michal = zuuluu.isThemeDark;
            echoed = michal.bind(zuuluu)(result);
            michal = _closure1_slot11;
            output = michal.MIDNIGHT;
            cntext = _closure1_slot1;
            michal = 36;
            zuuluu = papara[michal];
            report = cntext.bind(tangon)(zuuluu);
            zuuluu = golfie.endsAt;
            michal = papara[michal];
            michal = romeon.bind(tangon)(michal);
            michal = michal.CountDownMessageTypes;
            michal = michal.ENDS_IN;
            vacuum = report.bind(tangon)(zuuluu, michal);
            romeon = _closure1_slot4;
            report = romeon.useEffect;
            zuuluu = function() {
                _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                    option = _closure1_slot0;
                    tangon = _closure1_slot2;
                    zuuluu = 37;
                    report = tangon[zuuluu];
                    entity = undefined;
                    golfie = option.bind(entity)(report);
                    report = golfie.isDismissibleContentDismissed;
                    oscard = 38;
                    tangon = tangon[oscard];
                    tangon = option.bind(entity)(tangon);
                    tangon = tangon.DismissibleContent;
                    tangon = tangon.MOBILE_NITRO_HOME_SETTINGS_BADGE;
                    tangon = report.bind(golfie)(tangon);
                    if(tangon) { _fun00014_ip = 112; continue _fun00013 }
 63:
                    option = _closure1_slot0;
                    tangon = _closure1_slot2;
                    report = tangon[zuuluu];
                    golfie = option.bind(entity)(report);
                    report = golfie.markDismissibleContentAsDismissed;
                    tangon = tangon[oscard];
                    tangon = option.bind(entity)(tangon);
                    tangon = tangon.DismissibleContent;
                    tangon = tangon.MOBILE_NITRO_HOME_SETTINGS_BADGE;
                    tangon = report.bind(golfie)(tangon);
 112:
                    option = _closure1_slot0;
                    tangon = _closure1_slot2;
                    report = tangon[zuuluu];
                    golfie = option.bind(entity)(report);
                    report = golfie.isDismissibleContentDismissed;
                    tangon = tangon[oscard];
                    tangon = option.bind(entity)(tangon);
                    tangon = tangon.DismissibleContent;
                    tangon = tangon.REFERRAL_TRIAL_MOBILE_NITRO_HOME_BADGE;
                    tangon = report.bind(golfie)(tangon);
                    if(tangon) { _fun00014_ip = 213; continue _fun00013 }
 164:
                    report = _closure1_slot0;
                    michal = _closure1_slot2;
                    zuuluu = michal[zuuluu];
                    tangon = report.bind(entity)(zuuluu);
                    zuuluu = tangon.markDismissibleContentAsDismissed;
                    michal = michal[oscard];
                    michal = report.bind(entity)(michal);
                    michal = michal.DismissibleContent;
                    michal = michal.REFERRAL_TRIAL_MOBILE_NITRO_HOME_BADGE;
                    michal = zuuluu.bind(tangon)(michal);
 213:
                    return entity;
                }
            };
            michal = new Array(0);
            michal = report.bind(romeon)(zuuluu, michal);
            report = _closure1_slot4;
            zuuluu = report.useEffect;
            michal = function() {
                _fun00015: for(var _fun00016_ip = 0; ; ) switch(_fun00016_ip) {
 0:
                    option = _closure1_slot0;
                    tangon = _closure1_slot2;
                    zuuluu = 37;
                    report = tangon[zuuluu];
                    entity = undefined;
                    golfie = option.bind(entity)(report);
                    report = golfie.isDismissibleContentDismissed;
                    oscard = 38;
                    tangon = tangon[oscard];
                    tangon = option.bind(entity)(tangon);
                    tangon = tangon.DismissibleContent;
                    tangon = tangon.WHATS_NEW_TENURE_BADGE_REWARD;
                    tangon = report.bind(golfie)(tangon);
                    if(tangon) { _fun00016_ip = 112; continue _fun00015 }
 63:
                    report = _closure1_slot0;
                    michal = _closure1_slot2;
                    zuuluu = michal[zuuluu];
                    tangon = report.bind(entity)(zuuluu);
                    zuuluu = tangon.markDismissibleContentAsDismissed;
                    michal = michal[oscard];
                    michal = report.bind(entity)(michal);
                    michal = michal.DismissibleContent;
                    michal = michal.WHATS_NEW_TENURE_BADGE_REWARD;
                    michal = zuuluu.bind(tangon)(michal);
 112:
                    return entity;
                }
            };
            entity = new Array(0);
            entity = zuuluu.bind(report)(michal, entity);
            zuuluu = _closure1_slot15;
            michal = _closure1_slot5;
            entity = {};
            romeon = kiloes.container;
            report = new Array(2);
            report[0] = romeon;
            romeon = {};
            romeon['paddingTop'] = backup;
            report[1] = romeon;
            entity['style'] = report;
            backup = _closure1_slot14;
            report = 39;
            report = papara[report];
            romeon = cntext.bind(tangon)(report);
            report = {};
            sequen = kiloes.background;
            report['style'] = sequen;
            sequen = 40;
            sequen = papara[sequen];
            sequen = cntext.bind(tangon)(sequen);
            report['source'] = sequen;
            romeon = backup.bind(tangon)(romeon, report);
            report = new Array(5);
            report[0] = romeon;
            sequen = _closure1_slot14;
            backup = _closure1_slot26;
            romeon = {};
            romeon['onClose'] = record;
            romeon['subscription'] = config;
            romeon = sequen.bind(tangon)(backup, romeon);
            report[1] = romeon;
            romeon = golfie.fractionalState;
            golfie = _closure1_slot13;
            golfie = golfie.NONE;
            golfie = romeon !== golfie;
            if(!golfie) { _fun00008_ip = 1274; continue _fun00007 }
 1271:
            golfie = !option;
 1274:
            if(!golfie) { _fun00008_ip = 1314; continue _fun00007 }
 1277:
            backup = _closure1_slot14;
            romeon = _closure1_slot1;
            sequen = _closure1_slot2;
            option = 41;
            option = sequen[option];
            romeon = romeon.bind(tangon)(option);
            option = {};
            option['countdownText'] = vacuum;
            golfie = backup.bind(tangon)(romeon, option);
 1314:
            report[2] = golfie;
            romeon = _closure1_slot15;
            option = _closure1_slot5;
            golfie = {};
            backup = kiloes.tabContent;
            golfie['style'] = backup;
            sequen = _closure1_slot14;
            vacuum = _closure1_slot0;
            config = _closure1_slot2;
            backup = 42;
            backup = config[backup];
            backup = vacuum.bind(tangon)(backup);
            vacuum = backup.SegmentedControlPages;
            backup = {};
            backup['state'] = source;
            vacuum = sequen.bind(tangon)(vacuum, backup);
            backup = new Array(2);
            backup[0] = vacuum;
            if(!update) { _fun00008_ip = 1425; continue _fun00007 }
 1391:
            config = _closure1_slot14;
            sequen = _closure1_slot5;
            vacuum = {};
            cntext = kiloes.backSwipeSensor;
            record = new Array(1);
            record[0] = cntext;
            vacuum['style'] = record;
            update = config.bind(tangon)(sequen, vacuum);
 1425:
            backup[1] = update;
            golfie['children'] = backup;
            golfie = romeon.bind(tangon)(option, golfie);
            report[3] = golfie;
            option = _closure1_slot15;
            golfie = _closure1_slot1;
            vacuum = _closure1_slot2;
            oscard = vacuum[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.View;
            oscard = {};
            oscard['style'] = offset;
            oscard['onLayout'] = verify;
            romeon = _closure1_slot14;
            offset = _closure1_slot5;
            verify = {};
            backup = kiloes.segmentedControlActual;
            verify['style'] = backup;
            verify['onLayout'] = foxtra;
            update = _closure1_slot14;
            backup = _closure1_slot0;
            foxtra = 43;
            foxtra = vacuum[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            backup = foxtra.SegmentedControl;
            foxtra = {};
            foxtra['state'] = source;
            source = 'experimental_Small';
            foxtra['variant'] = source;
            foxtra = update.bind(tangon)(backup, foxtra);
            verify['children'] = foxtra;
            offset = romeon.bind(tangon)(offset, verify);
            verify = new Array(3);
            verify[0] = offset;
            offset = !echoed;
            if(!offset) { _fun00008_ip = 1680; continue _fun00007 }
 1577:
            backup = _closure1_slot14;
            foxtra = _closure1_slot1;
            update = _closure1_slot2;
            romeon = 44;
            romeon = update[romeon];
            foxtra = foxtra.bind(tangon)(romeon);
            romeon = {};
            update = _closure1_slot10;
            source = update.START;
            romeon['start'] = source;
            update = update.END;
            romeon['end'] = update;
            update = ['rgba(218, 187, 249, 0.5)', 'rgba(229, 177, 193, 0.5)'];
            romeon['colors'] = update;
            source = kiloes.segmentedControlVirtual;
            update = new Array(2);
            update[0] = source;
            source = {};
            source['height'] = sizing;
            source['zIndex'] = ctrled;
            update[1] = source;
            romeon['style'] = update;
            offset = backup.bind(tangon)(foxtra, romeon);
 1680:
            verify[1] = offset;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            offset = 45;
            offset = foxtra[offset];
            romeon = romeon.bind(tangon)(offset);
            offset = romeon.isAndroid;
            offset = offset.bind(romeon)();
            foxtra = _closure1_slot14;
            if(offset) { _fun00008_ip = 1840; continue _fun00007 }
 1720:
            romeon = _closure1_slot1;
            backup = _closure1_slot2;
            offset = 46;
            offset = backup[offset];
            romeon = romeon.bind(tangon)(offset);
            offset = {};
            backup = 0.5;
            if(!echoed) { _fun00008_ip = 1765; continue _fun00007 }
 1755:
            backup = 0.2;
 1765:
            offset['blurAmount'] = backup;
            echoed = kiloes.segmentedControlVirtual;
            backup = new Array(2);
            backup[0] = echoed;
            echoed = {'height': null, 'zIndex': 1, 'overflow': 'hidden'};
            echoed['height'] = sizing;
            backup[1] = echoed;
            offset['style'] = backup;
            offset['blurTheme'] = result;
            backup = undefined;
            if(!(result === output)) { _fun00008_ip = 1827; continue _fun00007 }
 1823:
            backup = _closure1_slot18;
 1827:
            offset['blurTintRgba'] = backup;
            offset = foxtra.bind(tangon)(romeon, offset);
            _fun00008_ip = 1904; continue _fun00007;
 1840:
            romeon = _closure1_slot5;
            yankee = {};
            output = kiloes.segmentedControlVirtual;
            backup = new Array(3);
            backup[0] = output;
            kiloes = kiloes.androidSegmentedControlBackground;
            backup[1] = kiloes;
            kiloes = {'height': null, 'zIndex': 1, 'overflow': 'hidden'};
            kiloes['height'] = sizing;
            backup[2] = kiloes;
            yankee['style'] = backup;
            offset = foxtra.bind(tangon)(romeon, yankee);
 1904:
            verify[2] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[4] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['BACK_BUTTON_SIZE'] = michal;
    return entity;
})();