// app/modules/user_settings/native/premium_marketing/PremiumManagePlan.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    backup = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = golf;
    entity = function() { // Original name: ManagePlanHeader
        entity = _closure1_slot23;
        tango = undefined;
        verify = entity.bind(tango)();
        backup = _closure1_slot0;
        kilo = _closure1_slot2;
        entity = 14;
        entity = kilo[entity];
        mike = backup.bind(tango)(entity);
        entity = mike.useNavigation;
        entity = entity.bind(mike)();
        var _closure2_slot0 = entity;
        zulu = _closure1_slot21;
        mike = _closure1_slot7;
        entity = {};
        report = verify.headerContainer;
        entity['style'] = report;
        options = _closure1_slot20;
        report = 15;
        report = kilo[report];
        report = backup.bind(tango)(report);
        golf = report.PressableOpacity;
        report = {};
        yankee = verify.backButtonWrapper;
        report['style'] = yankee;
        offset = function() { // Original name: onPress
            mike = _closure2_slot0;
            entity = mike.pop;
            entity = entity.bind(mike)();
            return entity;
        };
        report['onPress'] = offset;
        romeo = _closure1_slot20;
        offset = 16;
        offset = kilo[offset];
        offset = backup.bind(tango)(offset);
        yankee = offset.ArrowLargeLeftIcon;
        offset = {};
        foxtrot = 'md';
        offset['size'] = foxtrot;
        offset = romeo.bind(tango)(yankee, offset);
        report['children'] = offset;
        golf = options.bind(tango)(golf, report);
        report = new Array(3);
        report[0] = golf;
        offset = _closure1_slot20;
        golf = 17;
        golf = kilo[golf];
        golf = backup.bind(tango)(golf);
        options = golf.Text;
        golf = {};
        yankee = 'redesign/heading-18/bold';
        golf['variant'] = yankee;
        yankee = 18;
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        yankee = kilo[yankee];
        yankee = backup.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.1bX7T0;
        yankee = romeo.bind(foxtrot)(yankee);
        golf['children'] = yankee;
        golf = offset.bind(tango)(options, golf);
        report[1] = golf;
        options = _closure1_slot20;
        golf = _closure1_slot7;
        oscar = {};
        verify = verify.backButtonWrapper;
        oscar['style'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot25 = entity;
    entity = function(argFoo) { // Original name: SubscriptionAndBillingInfo
        _fun95747: for(var _fun95747_ip = 0; ; ) switch(_fun95747_ip) {
 0:
            entity = argFoo;
            source = entity.subscription;
            var _closure2_slot0 = source;
            mike = entity.fractionalPremiumInfo;
            report = undefined;
            var _closure2_slot2 = report;
            entity = _closure1_slot24;
            backup = entity.bind(report)();
            verify = _closure1_slot1;
            tango = _closure1_slot2;
            entity = 21;
            entity = tango[entity];
            entity = verify.bind(report)(entity);
            entity = entity.bind(report)();
            options = entity.analyticsLocations;
            var _closure2_slot1 = options;
            zulu = _closure1_slot0;
            entity = 22;
            entity = tango[entity];
            golf = zulu.bind(report)(entity);
            oscar = golf.useSubscriptionInvoicePreview;
            entity = {'subscriptionId': null, 'renewal': true, 'applyEntitlements': true};
            offset = source.id;
            entity['subscriptionId'] = offset;
            offset = true;
            entity['analyticsLocations'] = options;
            options = 23;
            options = tango[options];
            options = verify.bind(report)(options);
            options = options.PREMIUM_SUBSCRIPTION_DETAILS;
            entity['analyticsLocation'] = options;
            golf = oscar.bind(golf)(entity);
            oscar = _closure1_slot3;
            entity = 1;
            oscar = oscar.bind(report)(golf, entity);
            entity = 0;
            record = oscar[entity];
            entity = 24;
            oscar = tango[entity];
            verify = zulu.bind(report)(oscar);
            options = verify.useStateFromStores;
            oscar = _closure1_slot12;
            golf = new Array(1);
            golf[0] = oscar;
            oscar = function() {
                _fun95748: for(var _fun95748_ip = 0; ; ) switch(_fun95748_ip) {
 0:
                    mike = _closure2_slot0;
                    mike = mike.isOnPlatformMatchingExternalPaymentGateway;
                    zulu = null;
                    if(mike) { _fun95748_ip = 20; continue _fun95748 }
 18:
                    return zulu;
 20:
                    mike = _closure2_slot0;
                    mike = mike.paymentGatewayPlanId;
                    if(!(zulu != mike)) { _fun95748_ip = 82; continue _fun95748 }
 34:
                    mike = _closure2_slot0;
                    zulu = mike.paymentGatewayPlanId;
                    mike = '';
                    if(!(mike !== zulu)) { _fun95748_ip = 82; continue _fun95748 }
 52:
                    zulu = _closure1_slot12;
                    mike = zulu.getProduct;
                    entity = _closure2_slot0;
                    entity = entity.paymentGatewayPlanId;
                    entity = mike.bind(zulu)(entity);
                    return entity;
 82:
                    entity = global;
                    zulu = entity.Error;
                    entity = zulu.prototype;
                    mike = Object.create(entity, {constructor: {value: zulu}});
                    tango = 'Subscription missing plan ID';
                    report = mike;
                    entity = new report[zulu](tango, zulu);
                    entity = entity instanceof Object ? entity : mike;
                    throw entity;
                }
            };
            yankee = options.bind(verify)(golf, oscar);
            entity = tango[entity];
            oscar = zulu.bind(report)(entity);
            tango = oscar.useStateFromStores;
            entity = _closure1_slot10;
            zulu = new Array(1);
            zulu[0] = entity;
            entity = function() {
                mike = _closure1_slot10;
                entity = mike.getPremiumTypeSubscription;
                entity = entity.bind(mike)();
                return entity;
            };
            zulu = tango.bind(oscar)(zulu, entity);
            entity = null;
            romeo = entity !== zulu;
            if(!romeo) { _fun95747_ip = 273; continue _fun95747 }
 263:
            zulu = zulu.trialId;
            romeo = entity != zulu;
 273:
            tango = _closure1_slot0;
            golf = _closure1_slot2;
            zulu = 14;
            zulu = golf[zulu];
            oscar = tango.bind(report)(zulu);
            zulu = oscar.useNavigation;
            zulu = zulu.bind(oscar)();
            _closure2_slot2 = zulu;
            zulu = 25;
            zulu = golf[zulu];
            oscar = tango.bind(report)(zulu);
            zulu = oscar.useThemeContext;
            zulu = zulu.bind(oscar)();
            oscar = zulu.theme;
            zulu = 26;
            zulu = golf[zulu];
            tango = tango.bind(report)(zulu);
            zulu = tango.isThemeLight;
            context = zulu.bind(tango)(oscar);
            if(!(entity != record)) { _fun95747_ip = 3489; continue _fun95747 }
 365:
            oscar = _closure1_slot1;
            zulu = _closure1_slot2;
            sequence = 27;
            tango = zulu[sequence];
            golf = oscar.bind(report)(tango);
            tango = golf.getPlanIdFromInvoice;
            options = tango.bind(golf)(source, record);
            tango = zulu[sequence];
            golf = oscar.bind(report)(tango);
            tango = golf.getStatusFromInvoice;
            tango = tango.bind(golf)(source, record);
            golf = _closure1_slot19;
            verify = golf[options];
            golf = 28;
            golf = zulu[golf];
            kilo = oscar.bind(report)(golf);
            foxtrot = entity != verify;
            golf = 'missing subscription planInfo';
            golf = kilo.bind(report)(foxtrot, golf);
            zulu = zulu[sequence];
            golf = oscar.bind(report)(zulu);
            oscar = golf.getPlanDescription;
            zulu = {};
            zulu['subscription'] = source;
            zulu['planId'] = options;
            foxtrot = entity != yankee;
            options = null;
            if(!foxtrot) { _fun95747_ip = 541; continue _fun95747 }
 490:
            kilo = _closure1_slot0;
            output = _closure1_slot2;
            foxtrot = 29;
            foxtrot = output[foxtrot];
            output = kilo.bind(report)(foxtrot);
            kilo = output.formatRate;
            foxtrot = yankee.priceString;
            yankee = verify.interval;
            verify = verify.intervalCount;
            options = kilo.bind(output)(foxtrot, yankee, verify);
 541:
            zulu['price'] = options;
            zulu['includePremiumGuilds'] = offset;
            result = oscar.bind(golf)(zulu);
            oscar = _closure1_slot0;
            golf = _closure1_slot2;
            zulu = 30;
            zulu = golf[zulu];
            oscar = oscar.bind(report)(zulu);
            zulu = oscar.getExternalManagementMessage;
            echo = zulu.bind(oscar)(source);
            zulu = _closure1_slot14;
            zulu = zulu.CANCELED;
            if(!(tango !== zulu)) { _fun95747_ip = 2539; continue _fun95747 }
 604:
            zulu = _closure1_slot14;
            zulu = zulu.PAUSE_PENDING;
            if(!(tango !== zulu)) { _fun95747_ip = 2539; continue _fun95747 }
 621:
            zulu = _closure1_slot14;
            zulu = zulu.PAST_DUE;
            if(!(tango !== zulu)) { _fun95747_ip = 2539; continue _fun95747 }
 638:
            zulu = source.renewalMutations;
            if(!(entity == zulu)) { _fun95747_ip = 1685; continue _fun95747 }
 651:
            oscar = _closure1_slot21;
            tango = _closure1_slot7;
            zulu = {};
            golf = backup.container;
            zulu['style'] = golf;
            verify = _closure1_slot21;
            options = _closure1_slot7;
            golf = {};
            yankee = backup.pillAndCardContainer;
            golf['style'] = yankee;
            if(!romeo) { _fun95747_ip = 766; continue _fun95747 }
 693:
            kilo = _closure1_slot20;
            foxtrot = _closure1_slot7;
            yankee = {};
            output = backup.pillPosition;
            yankee['style'] = output;
            vacuum = _closure1_slot20;
            update = _closure1_slot0;
            config = _closure1_slot2;
            output = 41;
            output = config[output];
            output = update.bind(report)(output);
            update = output.PremiumReferralTrialPill;
            output = {};
            output['hideLeftSparkle'] = offset;
            output = vacuum.bind(report)(update, output);
            yankee['children'] = output;
            romeo = kilo.bind(report)(foxtrot, yankee);
 766:
            yankee = new Array(2);
            yankee[0] = romeo;
            kilo = _closure1_slot20;
            foxtrot = _closure1_slot1;
            target = _closure1_slot2;
            romeo = 40;
            romeo = target[romeo];
            foxtrot = foxtrot.bind(report)(romeo);
            romeo = {};
            output = _closure1_slot18;
            output = output.TIER_2;
            romeo['premiumType'] = output;
            update = mike.fractionalState;
            output = _closure1_slot16;
            output = output.NONE;
            output = update !== output;
            romeo['forFractionalPremium'] = output;
            romeo['hideButton'] = offset;
            romeo = kilo.bind(report)(foxtrot, romeo);
            yankee[1] = romeo;
            golf['children'] = yankee;
            options = verify.bind(report)(options, golf);
            golf = new Array(2);
            golf[0] = options;
            yankee = _closure1_slot21;
            verify = _closure1_slot7;
            options = {};
            romeo = backup.extraInfoContainer;
            options['style'] = romeo;
            kilo = _closure1_slot20;
            config = _closure1_slot0;
            vacuum = 17;
            romeo = target[vacuum];
            romeo = config.bind(report)(romeo);
            foxtrot = romeo.Text;
            romeo = {'variant': 'eyebrow', 'color': 'header-secondary'};
            sierra = 18;
            output = target[sierra];
            output = config.bind(report)(output);
            papa = output.intl;
            update = papa.string;
            output = target[sierra];
            output = config.bind(report)(output);
            output = output.t;
            output = output.YCrcPD;
            output = update.bind(papa)(output);
            romeo['children'] = output;
            foxtrot = kilo.bind(report)(foxtrot, romeo);
            romeo = new Array(4);
            romeo[0] = foxtrot;
            output = _closure1_slot21;
            kilo = _closure1_slot7;
            foxtrot = {};
            update = backup.extraInfoTextContainer;
            foxtrot['style'] = update;
            papa = _closure1_slot20;
            update = 42;
            update = target[update];
            update = config.bind(report)(update);
            config = update.TextWithIOSLinkWorkaround;
            update = {'variant': 'text-sm/medium', 'color': 'text-normal'};
            if(!(entity == echo)) { _fun95747_ip = 1140; continue _fun95747 }
 1057:
            status = _closure1_slot0;
            target = _closure1_slot2;
            lima = target[sierra];
            lima = status.bind(report)(lima);
            whiskey = lima.intl;
            lima = whiskey.format;
            target = target[sierra];
            target = status.bind(report)(target);
            target = target.t;
            status = target.fvk30t;
            target = {};
            equality = function() { // Original name: onSwitchPlans
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 37;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.handleManageSubscription;
                zulu = _closure2_slot0;
                mike = _closure2_slot2;
                entity = _closure2_slot1;
                entity = tango.bind(report)(zulu, mike, entity);
                return entity;
            };
            target['onSwitchPlans'] = equality;
            equality = function() { // Original name: onCancel
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 37;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.onCancelClick;
                mike = _closure2_slot0;
                entity = _closure2_slot1;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            target['onCancel'] = equality;
            target = lima.bind(whiskey)(status, target);
            _fun95747_ip = 1192; continue _fun95747;
 1140:
            equality = _closure1_slot0;
            status = _closure1_slot2;
            lima = status[sierra];
            lima = equality.bind(report)(lima);
            whiskey = lima.intl;
            lima = whiskey.string;
            status = status[sierra];
            status = equality.bind(report)(status);
            status = status.t;
            status = status.MTG+3N;
            target = lima.bind(whiskey)(status);
 1192:
            update['children'] = target;
            config = papa.bind(report)(config, update);
            update = new Array(3);
            update[0] = config;
            target = _closure1_slot20;
            papa = _closure1_slot0;
            status = _closure1_slot2;
            config = 38;
            config = status[config];
            config = papa.bind(report)(config);
            papa = config.GoogleManagementLink;
            config = {};
            config['subscription'] = source;
            config = target.bind(report)(papa, config);
            update[1] = config;
            config = entity != echo;
            if(!config) { _fun95747_ip = 1314; continue _fun95747 }
 1264:
            status = _closure1_slot20;
            target = _closure1_slot0;
            papa = _closure1_slot2;
            papa = papa[vacuum];
            papa = target.bind(report)(papa);
            target = papa.Text;
            papa = {'variant': 'text-sm/medium', 'color': 'text-normal'};
            papa['children'] = echo;
            config = status.bind(report)(target, papa);
 1314:
            update[2] = config;
            foxtrot['children'] = update;
            foxtrot = output.bind(report)(kilo, foxtrot);
            romeo[1] = foxtrot;
            output = _closure1_slot20;
            status = _closure1_slot0;
            target = _closure1_slot2;
            foxtrot = target[vacuum];
            foxtrot = status.bind(report)(foxtrot);
            kilo = foxtrot.Text;
            foxtrot = {'variant': 'eyebrow', 'color': 'header-secondary'};
            update = target[sierra];
            update = status.bind(report)(update);
            papa = update.intl;
            config = papa.string;
            update = target[sierra];
            update = status.bind(report)(update);
            update = update.t;
            update = update.Sb6wIy;
            update = config.bind(papa)(update);
            foxtrot['children'] = update;
            foxtrot = output.bind(report)(kilo, foxtrot);
            romeo[2] = foxtrot;
            output = _closure1_slot21;
            kilo = _closure1_slot7;
            foxtrot = {};
            config = backup.extraInfoTextContainer;
            update = new Array(2);
            update[0] = config;
            config = {};
            papa = 4;
            config['gap'] = papa;
            update[1] = config;
            foxtrot['style'] = update;
            papa = _closure1_slot20;
            update = target[vacuum];
            update = status.bind(report)(update);
            config = update.Text;
            update = {'variant': 'text-md/semibold', 'color': 'text-normal'};
            lima = target[sierra];
            lima = status.bind(report)(lima);
            whiskey = lima.intl;
            lima = whiskey.string;
            sierra = target[sierra];
            sierra = status.bind(report)(sierra);
            sierra = sierra.t;
            sierra = sierra.KXQjfX;
            sierra = lima.bind(whiskey)(sierra);
            update['children'] = sierra;
            config = papa.bind(report)(config, update);
            update = new Array(2);
            update[0] = config;
            papa = _closure1_slot20;
            vacuum = target[vacuum];
            vacuum = status.bind(report)(vacuum);
            config = vacuum.Text;
            vacuum = {'variant': 'text-sm/medium', 'color': 'text-normal'};
            target = target[sequence];
            sierra = status.bind(report)(target);
            status = sierra.getBillingInformationString;
            variable36 = false;
            variable39 = sierra;
            variable38 = source;
            variable37 = record;
            quebec = mike;
            target = variable39[status](variable38, variable37, variable36, quebec, equality);
            vacuum['children'] = target;
            vacuum = papa.bind(report)(config, vacuum);
            update[1] = vacuum;
            foxtrot['children'] = update;
            foxtrot = output.bind(report)(kilo, foxtrot);
            romeo[3] = foxtrot;
            options['children'] = romeo;
            options = yankee.bind(report)(verify, options);
            golf[1] = options;
            zulu['children'] = golf;
            zulu = oscar.bind(report)(tango, zulu);
            return zulu;
 1685:
            zulu = global;
            oscar = zulu.Date;
            variable38 = source.currentPeriodEnd;
            tango = oscar.prototype;
            tango = Object.create(tango, {constructor: {value: oscar}});
            variable39 = tango;
            zulu = new variable39[oscar](variable38, variable37);
            oscar = zulu instanceof Object ? zulu : tango;
            zulu = source.isPurchasedExternally;
            target = oscar;
            if(zulu) { _fun95747_ip = 1766; continue _fun95747 }
 1731:
            tango = _closure1_slot0;
            zulu = _closure1_slot2;
            zulu = zulu[sequence];
            tango = tango.bind(report)(zulu);
            zulu = tango.extendDateWithUnconsumedFractionalPremium;
            mike = mike.unactivatedUnits;
            target = zulu.bind(tango)(oscar, mike);
 1766:
            tango = _closure1_slot21;
            zulu = _closure1_slot7;
            mike = {};
            oscar = backup.container;
            mike['style'] = oscar;
            options = _closure1_slot21;
            golf = _closure1_slot7;
            oscar = {};
            verify = backup.mutationWarningContainer;
            oscar['style'] = verify;
            romeo = _closure1_slot20;
            output = _closure1_slot0;
            kilo = _closure1_slot2;
            verify = 39;
            verify = kilo[verify];
            verify = output.bind(report)(verify);
            yankee = verify.AnnouncementsWarningIcon;
            verify = {};
            foxtrot = 'md';
            verify['size'] = foxtrot;
            yankee = romeo.bind(report)(yankee, verify);
            verify = new Array(2);
            verify[0] = yankee;
            foxtrot = _closure1_slot20;
            papa = 17;
            yankee = kilo[papa];
            yankee = output.bind(report)(yankee);
            romeo = yankee.Text;
            yankee = {'style': null, 'variant': 'heading-sm/medium', 'color': 'text-normal'};
            update = backup.mutationText;
            yankee['style'] = update;
            vacuum = 18;
            update = kilo[vacuum];
            update = output.bind(report)(update);
            config = update.intl;
            update = config.format;
            kilo = kilo[vacuum];
            kilo = output.bind(report)(kilo);
            kilo = kilo.t;
            output = kilo.ar1cPj;
            kilo = {};
            status = source.hasExternalPlanChange;
            if(status) { _fun95747_ip = 2001; continue _fun95747 }
 1959:
            sierra = _closure1_slot1;
            status = _closure1_slot2;
            status = status[sequence];
            lima = sierra.bind(report)(status);
            sierra = lima.getDisplayName;
            status = source.renewalMutations;
            status = status.planId;
            status = sierra.bind(lima)(status);
            _fun95747_ip = 2035; continue _fun95747;
 2001:
            lima = _closure1_slot0;
            sierra = _closure1_slot2;
            sierra = sierra[sequence];
            whiskey = lima.bind(report)(sierra);
            lima = whiskey.getExternalPlanDisplayName;
            sierra = source.renewalMutations;
            status = lima.bind(whiskey)(sierra);
 2035:
            kilo['planName'] = status;
            kilo['date'] = target;
            kilo = update.bind(config)(output, kilo);
            yankee['children'] = kilo;
            yankee = foxtrot.bind(report)(romeo, yankee);
            verify[1] = yankee;
            oscar['children'] = verify;
            golf = options.bind(report)(golf, oscar);
            oscar = new Array(3);
            oscar[0] = golf;
            verify = _closure1_slot20;
            options = _closure1_slot1;
            config = _closure1_slot2;
            golf = 40;
            golf = config[golf];
            options = options.bind(report)(golf);
            golf = {};
            yankee = _closure1_slot18;
            yankee = yankee.TIER_2;
            golf['premiumType'] = yankee;
            golf['hideButton'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[1] = golf;
            verify = _closure1_slot21;
            options = _closure1_slot7;
            golf = {};
            offset = backup.extraInfoContainer;
            golf['style'] = offset;
            romeo = _closure1_slot20;
            target = _closure1_slot0;
            offset = config[papa];
            offset = target.bind(report)(offset);
            yankee = offset.Text;
            offset = {'variant': 'eyebrow', 'color': 'header-secondary'};
            foxtrot = config[vacuum];
            foxtrot = target.bind(report)(foxtrot);
            output = foxtrot.intl;
            kilo = output.string;
            foxtrot = config[vacuum];
            foxtrot = target.bind(report)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.YCrcPD;
            foxtrot = kilo.bind(output)(foxtrot);
            offset['children'] = foxtrot;
            yankee = romeo.bind(report)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            foxtrot = _closure1_slot21;
            romeo = _closure1_slot7;
            yankee = {};
            kilo = backup.extraInfoTextContainer;
            yankee['style'] = kilo;
            update = _closure1_slot20;
            kilo = config[papa];
            kilo = target.bind(report)(kilo);
            output = kilo.Text;
            kilo = {'variant': 'text-sm/medium', 'color': 'text-normal'};
            status = config[vacuum];
            status = target.bind(report)(status);
            sierra = status.intl;
            status = sierra.string;
            vacuum = config[vacuum];
            vacuum = target.bind(report)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.MTG+3N;
            vacuum = status.bind(sierra)(vacuum);
            kilo['children'] = vacuum;
            output = update.bind(report)(output, kilo);
            kilo = new Array(3);
            kilo[0] = output;
            vacuum = _closure1_slot20;
            output = config[papa];
            output = target.bind(report)(output);
            update = output.Text;
            output = {'variant': 'text-sm/medium', 'color': 'text-normal'};
            config = config[sequence];
            target = target.bind(report)(config);
            config = target.getBillingInformationString;
            config = config.bind(target)(source, record);
            output['children'] = config;
            output = vacuum.bind(report)(update, output);
            kilo[1] = output;
            output = entity != echo;
            if(!output) { _fun95747_ip = 2495; continue _fun95747 }
 2445:
            config = _closure1_slot20;
            vacuum = _closure1_slot0;
            update = _closure1_slot2;
            update = update[papa];
            update = vacuum.bind(report)(update);
            vacuum = update.Text;
            update = {'variant': 'text-sm/medium', 'color': 'text-normal'};
            update['children'] = echo;
            output = config.bind(report)(vacuum, update);
 2495:
            kilo[2] = output;
            yankee['children'] = kilo;
            yankee = foxtrot.bind(report)(romeo, yankee);
            offset[1] = yankee;
            golf['children'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[2] = golf;
            mike['children'] = oscar;
            mike = tango.bind(report)(zulu, mike);
            return mike;
 2539:
            tango = _closure1_slot21;
            zulu = _closure1_slot7;
            mike = {};
            oscar = backup.container;
            mike['style'] = oscar;
            options = _closure1_slot21;
            golf = _closure1_slot7;
            oscar = {};
            verify = backup.errorHeader;
            oscar['style'] = verify;
            yankee = _closure1_slot21;
            offset = _closure1_slot6;
            verify = {};
            foxtrot = _closure1_slot1;
            output = _closure1_slot2;
            if(context) { _fun95747_ip = 2608; continue _fun95747 }
 2599:
            romeo = 32;
            romeo = output[romeo];
            _fun95747_ip = 2615; continue _fun95747;
 2608:
            kilo = 31;
            romeo = output[kilo];
 2615:
            romeo = foxtrot.bind(report)(romeo);
            verify['source'] = romeo;
            romeo = backup.headerBackground;
            verify['style'] = romeo;
            kilo = _closure1_slot21;
            foxtrot = _closure1_slot7;
            romeo = {};
            output = backup.logoContainer;
            romeo['style'] = output;
            vacuum = _closure1_slot20;
            update = _closure1_slot5;
            output = {};
            papa = _closure1_slot1;
            target = _closure1_slot2;
            config = 33;
            config = target[config];
            config = papa.bind(report)(config);
            output['source'] = config;
            config = backup.wumpusImg;
            output['style'] = config;
            update = vacuum.bind(report)(update, output);
            output = new Array(2);
            output[0] = update;
            config = _closure1_slot20;
            vacuum = _closure1_slot5;
            update = {};
            status = _closure1_slot2;
            if(context) { _fun95747_ip = 2738; continue _fun95747 }
 2729:
            context = 35;
            context = status[context];
            _fun95747_ip = 2745; continue _fun95747;
 2738:
            target = 34;
            context = status[target];
 2745:
            context = papa.bind(report)(context);
            update['source'] = context;
            context = backup.logoStyle;
            update['style'] = context;
            update = config.bind(report)(vacuum, update);
            output[1] = update;
            romeo['children'] = output;
            foxtrot = kilo.bind(report)(foxtrot, romeo);
            romeo = new Array(2);
            romeo[0] = foxtrot;
            output = _closure1_slot20;
            kilo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            update = 17;
            foxtrot = foxtrot[update];
            foxtrot = kilo.bind(report)(foxtrot);
            kilo = foxtrot.Text;
            foxtrot = {'variant': 'heading-sm/medium', 'color': 'text-normal'};
            foxtrot['children'] = result;
            foxtrot = output.bind(report)(kilo, foxtrot);
            romeo[1] = foxtrot;
            verify['children'] = romeo;
            offset = yankee.bind(report)(offset, verify);
            verify = new Array(2);
            verify[0] = offset;
            offset = source.isOnPlatformMatchingExternalPaymentGateway;
            if(!offset) { _fun95747_ip = 3021; continue _fun95747 }
 2879:
            foxtrot = _closure1_slot20;
            romeo = _closure1_slot7;
            yankee = {};
            kilo = backup.errorHeaderPrimaryButton;
            yankee['style'] = kilo;
            result = _closure1_slot20;
            papa = _closure1_slot0;
            target = _closure1_slot2;
            kilo = 36;
            kilo = target[kilo];
            kilo = papa.bind(report)(kilo);
            output = kilo.Button;
            kilo = {'size': 'sm', 'variant': 'secondary'};
            vacuum = 18;
            config = target[vacuum];
            config = papa.bind(report)(config);
            context = config.intl;
            config = context.string;
            vacuum = target[vacuum];
            vacuum = papa.bind(report)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.lTCb0d;
            vacuum = config.bind(context)(vacuum);
            kilo['text'] = vacuum;
            control = function() { // Original name: onPress
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 37;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.onResubscribeClick;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            kilo['onPress'] = control;
            kilo = result.bind(report)(output, kilo);
            yankee['children'] = kilo;
            offset = foxtrot.bind(report)(romeo, yankee);
 3021:
            verify[1] = offset;
            oscar['children'] = verify;
            golf = options.bind(report)(golf, oscar);
            oscar = new Array(2);
            oscar[0] = golf;
            verify = _closure1_slot21;
            options = _closure1_slot7;
            golf = {};
            offset = backup.extraInfoContainer;
            golf['style'] = offset;
            romeo = _closure1_slot20;
            output = _closure1_slot0;
            control = _closure1_slot2;
            offset = control[update];
            offset = output.bind(report)(offset);
            yankee = offset.Text;
            offset = {'variant': 'eyebrow', 'color': 'header-secondary'};
            vacuum = 18;
            foxtrot = control[vacuum];
            foxtrot = output.bind(report)(foxtrot);
            result = foxtrot.intl;
            kilo = result.string;
            foxtrot = control[vacuum];
            foxtrot = output.bind(report)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.YCrcPD;
            foxtrot = kilo.bind(result)(foxtrot);
            offset['children'] = foxtrot;
            yankee = romeo.bind(report)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            foxtrot = _closure1_slot21;
            romeo = _closure1_slot7;
            yankee = {};
            backup = backup.extraInfoTextContainer;
            yankee['style'] = backup;
            result = _closure1_slot20;
            backup = control[update];
            backup = output.bind(report)(backup);
            kilo = backup.Text;
            backup = {'variant': 'text-sm/medium', 'color': 'text-normal'};
            config = control[vacuum];
            config = output.bind(report)(config);
            context = config.intl;
            config = context.string;
            vacuum = control[vacuum];
            vacuum = output.bind(report)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.MTG+3N;
            vacuum = config.bind(context)(vacuum);
            backup['children'] = vacuum;
            kilo = result.bind(report)(kilo, backup);
            backup = new Array(4);
            backup[0] = kilo;
            vacuum = _closure1_slot20;
            kilo = control[update];
            kilo = output.bind(report)(kilo);
            result = kilo.Text;
            kilo = {'variant': 'text-sm/medium', 'color': 'text-normal'};
            sequence = control[sequence];
            config = output.bind(report)(sequence);
            sequence = config.getBillingInformationString;
            sequence = sequence.bind(config)(source, record);
            kilo['children'] = sequence;
            kilo = vacuum.bind(report)(result, kilo);
            backup[1] = kilo;
            result = _closure1_slot20;
            kilo = 38;
            kilo = control[kilo];
            kilo = output.bind(report)(kilo);
            output = kilo.GoogleManagementLink;
            kilo = {};
            kilo['subscription'] = source;
            kilo = result.bind(report)(output, kilo);
            backup[2] = kilo;
            kilo = entity != echo;
            if(!kilo) { _fun95747_ip = 3445; continue _fun95747 }
 3395:
            result = _closure1_slot20;
            output = _closure1_slot0;
            sizing = _closure1_slot2;
            sizing = sizing[update];
            sizing = output.bind(report)(sizing);
            output = sizing.Text;
            sizing = {'variant': 'text-sm/medium', 'color': 'text-normal'};
            sizing['children'] = echo;
            kilo = result.bind(report)(output, sizing);
 3445:
            backup[3] = kilo;
            yankee['children'] = backup;
            yankee = foxtrot.bind(report)(romeo, yankee);
            offset[1] = yankee;
            golf['children'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            mike = tango.bind(report)(zulu, mike);
            return mike;
 3489:
            return entity;
        }
    };
    var _closure1_slot26 = entity;
    entity = function(argFoo) { // Original name: FractionalPremiumCredits
        _fun95753: for(var _fun95753_ip = 0; ; ) switch(_fun95753_ip) {
 0:
            entity = argFoo;
            source = entity.fractionalPremiumInfo;
            oscar = entity.showPremiumFeaturesCard;
            sierra = entity.durationText;
            control = entity.hasUnactivatedUnits;
            papa = entity.unactivatedHoursString;
            variable40 = entity.activationDate;
            entity = _closure1_slot24;
            tango = undefined;
            target = entity.bind(tango)();
            zulu = _closure1_slot21;
            mike = _closure1_slot7;
            entity = {};
            report = target.container;
            entity['style'] = report;
            if(!oscar) { _fun95753_ip = 134; continue _fun95753 }
 74:
            options = _closure1_slot20;
            golf = _closure1_slot1;
            verify = _closure1_slot2;
            report = 40;
            report = verify[report];
            golf = golf.bind(tango)(report);
            report = {'premiumType': null, 'forFractionalPremium': true, 'hideButton': true};
            verify = _closure1_slot18;
            verify = verify.TIER_2;
            report['premiumType'] = verify;
            oscar = options.bind(tango)(golf, report);
 134:
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot21;
            golf = _closure1_slot7;
            oscar = {};
            verify = target.extraInfoContainer;
            oscar['style'] = verify;
            yankee = _closure1_slot20;
            whiskey = _closure1_slot0;
            record = _closure1_slot2;
            status = 17;
            verify = record[status];
            verify = whiskey.bind(tango)(verify);
            offset = verify.Text;
            verify = {'variant': 'eyebrow', 'color': 'header-secondary'};
            variable41 = 18;
            romeo = record[variable41];
            romeo = whiskey.bind(tango)(romeo);
            backup = romeo.intl;
            foxtrot = backup.string;
            romeo = record[variable41];
            romeo = whiskey.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.Obre8v;
            romeo = foxtrot.bind(backup)(romeo);
            verify['children'] = romeo;
            offset = yankee.bind(tango)(offset, verify);
            verify = new Array(3);
            verify[0] = offset;
            romeo = _closure1_slot20;
            offset = 42;
            offset = record[offset];
            offset = whiskey.bind(tango)(offset);
            yankee = offset.TextWithIOSLinkWorkaround;
            offset = {'variant': 'text-md/semibold', 'color': 'text-normal'};
            quebec = 'text-md/semibold';
            foxtrot = record[variable41];
            foxtrot = whiskey.bind(tango)(foxtrot);
            sizing = foxtrot.intl;
            kilo = sizing.format;
            foxtrot = record[variable41];
            foxtrot = whiskey.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            backup = foxtrot.AYGoBg;
            foxtrot = {};
            variable39 = _closure1_slot1;
            output = 43;
            output = record[output];
            echo = variable39.bind(tango)(output);
            result = echo.getArticleURL;
            output = _closure1_slot13;
            output = output.FRACTIONAL_PREMIUM_ABOUT;
            output = result.bind(echo)(output);
            foxtrot['helpCenterLink'] = output;
            foxtrot = kilo.bind(sizing)(backup, foxtrot);
            offset['children'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[1] = offset;
            romeo = _closure1_slot21;
            yankee = _closure1_slot7;
            offset = {};
            output = 44;
            foxtrot = record[output];
            foxtrot = whiskey.bind(tango)(foxtrot);
            backup = foxtrot.Card;
            foxtrot = {'style': null, 'start': true, 'end': false, 'variant': 'primary'};
            kilo = target.fpRowStart;
            foxtrot['style'] = kilo;
            result = _closure1_slot20;
            sizing = _closure1_slot7;
            kilo = {};
            echo = target.fpRowIcon;
            kilo['style'] = echo;
            vacuum = _closure1_slot20;
            echo = 45;
            echo = record[echo];
            update = variable39.bind(tango)(echo);
            echo = {};
            sequence = {};
            context = 6;
            sequence['padding'] = context;
            variable38 = 13;
            context = record[variable38];
            context = variable39.bind(tango)(context);
            context = context.radii;
            context = context.sm;
            sequence['borderRadius'] = context;
            echo['style'] = sequence;
            sequence = {'x': 0, 'y': 0};
            echo['start'] = sequence;
            sequence = {'x': 0, 'y': 1};
            echo['end'] = sequence;
            sequence = record[variable38];
            sequence = variable39.bind(tango)(sequence);
            sequence = sequence.unsafe_rawColors;
            context = sequence.GUILD_BOOSTING_BLUE;
            sequence = new Array(2);
            sequence[0] = context;
            context = record[variable38];
            context = variable39.bind(tango)(context);
            context = context.unsafe_rawColors;
            context = context.GUILD_BOOSTING_PURPLE;
            sequence[1] = context;
            echo['colors'] = sequence;
            lima = _closure1_slot20;
            context = _closure1_slot7;
            sequence = {};
            variable37 = 46;
            equality = record[variable37];
            variable36 = variable39.bind(tango)(equality);
            equality = {};
            variable38 = record[variable38];
            variable38 = variable39.bind(tango)(variable38);
            variable38 = variable38.unsafe_rawColors;
            variable38 = variable38.WHITE;
            equality['color'] = variable38;
            variable38 = 47;
            variable38 = record[variable38];
            variable38 = variable39.bind(tango)(variable38);
            equality['source'] = variable38;
            variable37 = record[variable37];
            variable37 = whiskey.bind(tango)(variable37);
            variable37 = variable37.IconSizes;
            variable37 = variable37.LARGE;
            equality['size'] = variable37;
            equality = lima.bind(tango)(variable36, equality);
            sequence['children'] = equality;
            sequence = lima.bind(tango)(context, sequence);
            echo['children'] = sequence;
            echo = vacuum.bind(tango)(update, echo);
            kilo['children'] = echo;
            sizing = result.bind(tango)(sizing, kilo);
            kilo = new Array(2);
            kilo[0] = sizing;
            echo = _closure1_slot21;
            result = _closure1_slot7;
            sizing = {};
            update = target.fpRowContent;
            sizing['style'] = update;
            sequence = _closure1_slot20;
            update = record[status];
            update = whiskey.bind(tango)(update);
            vacuum = update.Text;
            update = {};
            context = 'text-sm/semibold';
            update['variant'] = context;
            context = target.fpUnitsTitle;
            update['style'] = context;
            context = record[variable41];
            context = whiskey.bind(tango)(context);
            lima = context.intl;
            context = lima.string;
            record = record[variable41];
            record = whiskey.bind(tango)(record);
            record = record.t;
            record = record.DFMPWV;
            record = context.bind(lima)(record);
            update['children'] = record;
            vacuum = sequence.bind(tango)(vacuum, update);
            update = new Array(2);
            update[0] = vacuum;
            if(!control) { _fun95753_ip = 905; continue _fun95753 }
 885:
            sequence = source.fractionalState;
            vacuum = _closure1_slot16;
            vacuum = vacuum.NONE;
            if(!(sequence !== vacuum)) { _fun95753_ip = 1007; continue _fun95753 }
 905:
            record = _closure1_slot20;
            equality = _closure1_slot0;
            context = _closure1_slot2;
            vacuum = context[status];
            vacuum = equality.bind(tango)(vacuum);
            sequence = vacuum.Text;
            vacuum = {};
            lima = 'text-sm/medium';
            vacuum['variant'] = lima;
            lima = target.fpUnitsStatusText;
            vacuum['style'] = lima;
            lima = context[variable41];
            lima = equality.bind(tango)(lima);
            whiskey = lima.intl;
            lima = whiskey.string;
            context = context[variable41];
            context = equality.bind(tango)(context);
            context = context.t;
            context = context.B66Z+f;
            context = lima.bind(whiskey)(context);
            vacuum['children'] = context;
            vacuum = record.bind(tango)(sequence, vacuum);
            _fun95753_ip = 1053; continue _fun95753;
 1007:
            context = _closure1_slot20;
            record = _closure1_slot0;
            sequence = _closure1_slot2;
            sequence = sequence[status];
            sequence = record.bind(tango)(sequence);
            record = sequence.Text;
            sequence = {};
            lima = 'text-sm/medium';
            sequence['variant'] = lima;
            sequence['children'] = papa;
            vacuum = context.bind(tango)(record, sequence);
 1053:
            update[1] = vacuum;
            sizing['children'] = update;
            sizing = echo.bind(tango)(result, sizing);
            kilo[1] = sizing;
            foxtrot['children'] = kilo;
            backup = romeo.bind(tango)(backup, foxtrot);
            foxtrot = new Array(3);
            foxtrot[0] = backup;
            sizing = _closure1_slot20;
            kilo = _closure1_slot7;
            backup = {};
            result = target.dividerContainer;
            backup['style'] = result;
            update = _closure1_slot20;
            echo = _closure1_slot7;
            result = {};
            vacuum = target.divider;
            result['style'] = vacuum;
            result = update.bind(tango)(echo, result);
            backup['children'] = result;
            backup = sizing.bind(tango)(kilo, backup);
            foxtrot[1] = backup;
            sizing = _closure1_slot20;
            kilo = _closure1_slot0;
            backup = _closure1_slot2;
            backup = backup[output];
            backup = kilo.bind(tango)(backup);
            kilo = backup.Card;
            backup = {'start': false, 'end': true, 'style': null, 'variant': 'secondary'};
            output = target.fpRowEnd;
            backup['style'] = output;
            echo = _closure1_slot21;
            result = _closure1_slot7;
            output = {};
            update = target.fpRowContent;
            output['style'] = update;
            if(!control) { _fun95753_ip = 1245; continue _fun95753 }
 1225:
            vacuum = source.fractionalState;
            update = _closure1_slot16;
            update = update.NONE;
            if(!(vacuum !== update)) { _fun95753_ip = 1346; continue _fun95753 }
 1245:
            sequence = _closure1_slot20;
            whiskey = _closure1_slot0;
            record = _closure1_slot2;
            update = record[status];
            update = whiskey.bind(tango)(update);
            vacuum = update.Text;
            update = {};
            update['variant'] = quebec;
            context = target.fpTimeRemaining;
            update['style'] = context;
            context = record[variable41];
            context = whiskey.bind(tango)(context);
            lima = context.intl;
            context = lima.string;
            record = record[variable41];
            record = whiskey.bind(tango)(record);
            record = record.t;
            record = record.3G0CTE;
            record = context.bind(lima)(record);
            update['children'] = record;
            vacuum = sequence.bind(tango)(vacuum, update);
            _fun95753_ip = 1575; continue _fun95753;
 1346:
            record = _closure1_slot21;
            sequence = _closure1_slot7;
            update = {};
            whiskey = _closure1_slot20;
            variable37 = _closure1_slot0;
            equality = _closure1_slot2;
            context = equality[status];
            context = variable37.bind(tango)(context);
            lima = context.Text;
            context = {};
            context['variant'] = quebec;
            quebec = equality[variable41];
            quebec = variable37.bind(tango)(quebec);
            variable36 = quebec.intl;
            quebec = variable36.string;
            equality = equality[variable41];
            equality = variable37.bind(tango)(equality);
            equality = equality.t;
            equality = equality.hT6i//;
            equality = quebec.bind(variable36)(equality);
            context['children'] = equality;
            lima = whiskey.bind(tango)(lima, context);
            context = new Array(2);
            context[0] = lima;
            lima = tango !== variable40;
            if(!lima) { _fun95753_ip = 1561; continue _fun95753 }
 1457:
            quebec = _closure1_slot20;
            variable37 = _closure1_slot0;
            variable36 = _closure1_slot2;
            whiskey = variable36[status];
            whiskey = variable37.bind(tango)(whiskey);
            equality = whiskey.Text;
            whiskey = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
            variable38 = variable36[variable41];
            variable38 = variable37.bind(tango)(variable38);
            variable39 = variable38.intl;
            variable38 = variable39.format;
            variable36 = variable36[variable41];
            variable36 = variable37.bind(tango)(variable36);
            variable36 = variable36.t;
            variable37 = variable36.0Vwb/v;
            variable36 = {};
            variable36['activateDate'] = variable40;
            variable36 = variable38.bind(variable39)(variable37, variable36);
            whiskey['children'] = variable36;
            lima = quebec.bind(tango)(equality, whiskey);
 1561:
            context[1] = lima;
            update['children'] = context;
            vacuum = record.bind(tango)(sequence, update);
 1575:
            update = new Array(2);
            update[0] = vacuum;
            if(!control) { _fun95753_ip = 1606; continue _fun95753 }
 1586:
            control = source.fractionalState;
            source = _closure1_slot16;
            source = source.NONE;
            if(!(control !== source)) { _fun95753_ip = 1694; continue _fun95753 }
 1606:
            vacuum = _closure1_slot20;
            control = _closure1_slot7;
            source = {};
            sequence = target.fpTimeRemainingPill;
            source['style'] = sequence;
            context = _closure1_slot20;
            record = _closure1_slot0;
            sequence = _closure1_slot2;
            sequence = sequence[status];
            sequence = record.bind(tango)(sequence);
            record = sequence.Text;
            sequence = {};
            lima = 'text-sm/medium';
            sequence['variant'] = lima;
            lima = target.fpTimeRemainingText;
            sequence['style'] = lima;
            sequence['children'] = sierra;
            sequence = context.bind(tango)(record, sequence);
            source['children'] = sequence;
            source = vacuum.bind(tango)(control, source);
            _fun95753_ip = 1780; continue _fun95753;
 1694:
            sequence = _closure1_slot20;
            vacuum = _closure1_slot7;
            control = {};
            record = target.fpUnactivatedHoursPill;
            control['style'] = record;
            context = _closure1_slot20;
            record = _closure1_slot0;
            config = _closure1_slot2;
            config = config[status];
            config = record.bind(tango)(config);
            record = config.Text;
            config = {};
            status = 'text-sm/medium';
            config['variant'] = status;
            target = target.fpTimeRemainingText;
            config['style'] = target;
            config['children'] = papa;
            config = context.bind(tango)(record, config);
            control['children'] = config;
            source = sequence.bind(tango)(vacuum, control);
 1780:
            update[1] = source;
            output['children'] = update;
            output = echo.bind(tango)(result, output);
            backup['children'] = output;
            backup = sizing.bind(tango)(kilo, backup);
            foxtrot[2] = backup;
            offset['children'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[2] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot27 = entity;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    entity = 0;
    mike = golf[entity];
    entity = undefined;
    mike = backup.bind(entity)(mike);
    var _closure1_slot3 = mike;
    source = 1;
    report = golf[source];
    mike = argCorge;
    mike = mike.bind(entity)(report);
    var _closure1_slot4 = mike;
    mike = 2;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    report = mike.Image;
    var _closure1_slot5 = report;
    report = mike.ImageBackground;
    var _closure1_slot6 = report;
    report = mike.View;
    var _closure1_slot7 = report;
    mike = mike.ScrollView;
    var _closure1_slot8 = mike;
    mike = 3;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    result = mike.TABLE_ROW_HEIGHT;
    update = 4;
    mike = golf[update];
    mike = backup.bind(entity)(mike);
    var _closure1_slot9 = mike;
    mike = 5;
    mike = golf[mike];
    mike = backup.bind(entity)(mike);
    var _closure1_slot10 = mike;
    mike = 6;
    mike = golf[mike];
    mike = backup.bind(entity)(mike);
    var _closure1_slot11 = mike;
    mike = 7;
    mike = golf[mike];
    mike = backup.bind(entity)(mike);
    var _closure1_slot12 = mike;
    echo = 8;
    mike = golf[echo];
    mike = oscar.bind(entity)(mike);
    report = mike.HelpdeskArticles;
    var _closure1_slot13 = report;
    report = mike.SubscriptionStatusTypes;
    var _closure1_slot14 = report;
    mike = mike.UserSettingsSections;
    var _closure1_slot15 = mike;
    mike = 9;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    romeo = mike.TABLE_DIVIDER_WIDTH;
    kilo = mike.TABLE_ROW_PADDING;
    mike = 10;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    report = mike.FractionalPremiumStates;
    var _closure1_slot16 = report;
    report = mike.PREMIUM_SUBSCRIPTION_APPLICATION;
    var _closure1_slot17 = report;
    report = mike.PremiumTypes;
    var _closure1_slot18 = report;
    mike = mike.SubscriptionPlanInfo;
    var _closure1_slot19 = mike;
    mike = 11;
    report = golf[mike];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot20 = report;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot21 = mike;
    report = 12;
    mike = golf[report];
    offset = oscar.bind(entity)(mike);
    verify = offset.createStyles;
    options = {};
    mike = {};
    foxtrot = 13;
    yankee = golf[foxtrot];
    yankee = backup.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_BASE_TERTIARY;
    mike['backgroundColor'] = yankee;
    yankee = '100%';
    mike['height'] = yankee;
    options['background'] = mike;
    mike = {'display': 'flex', 'paddingHorizontal': 12};
    options['container'] = mike;
    mike = 24;
    yankee = {'marginTop': 24, 'display': 'flex', 'gap': 12};
    options['contentContainer'] = yankee;
    yankee = {'position': 'absolute', 'zIndex': 5, 'top': 0, 'left': 0, 'right': 0};
    options['topBlur'] = yankee;
    yankee = {};
    control = 16;
    yankee['paddingHorizontal'] = control;
    options['accountCredit'] = yankee;
    yankee = {};
    sizing = golf[foxtrot];
    sizing = backup.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.sm;
    yankee['borderRadius'] = sizing;
    sizing = golf[foxtrot];
    sizing = backup.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BG_SURFACE_RAISED;
    yankee['backgroundColor'] = sizing;
    options['accountCreditList'] = yankee;
    yankee = {};
    yankee['paddingTop'] = control;
    options['featuresTable'] = yankee;
    yankee = 20;
    sizing = {'marginTop': 20, 'width': '100%'};
    options['subscriptionHeader'] = sizing;
    sizing = {'marginTop': 20, 'width': '100%'};
    options['billingInfo'] = sizing;
    options = verify.bind(offset)(options);
    var _closure1_slot22 = options;
    options = golf[report];
    offset = oscar.bind(entity)(options);
    verify = offset.createStyles;
    options = {};
    output = 'row';
    sizing = 'center';
    vacuum = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'paddingHorizontal': 16, 'paddingVertical': 8, 'justifyContent': 'space-between'};
    options['headerContainer'] = vacuum;
    vacuum = {'width': 24, 'height': 24, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center'};
    sequence = golf[foxtrot];
    sequence = backup.bind(entity)(sequence);
    sequence = sequence.radii;
    sequence = sequence.lg;
    vacuum['borderRadius'] = sequence;
    options['backButtonWrapper'] = vacuum;
    options = verify.bind(offset)(options);
    var _closure1_slot23 = options;
    report = golf[report];
    verify = oscar.bind(entity)(report);
    options = verify.createStyles;
    report = {};
    offset = {'display': 'flex', 'flexDirection': 'column', 'gap': 12};
    report['container'] = offset;
    offset = {};
    vacuum = golf[foxtrot];
    vacuum = backup.bind(entity)(vacuum);
    vacuum = vacuum.colors;
    vacuum = vacuum.BG_SURFACE_OVERLAY_TMP;
    offset['backgroundColor'] = vacuum;
    vacuum = golf[foxtrot];
    vacuum = backup.bind(entity)(vacuum);
    vacuum = vacuum.radii;
    vacuum = vacuum.lg;
    offset['borderRadius'] = vacuum;
    vacuum = 'hidden';
    offset['overflow'] = vacuum;
    report['errorHeader'] = offset;
    offset = {};
    offset['padding'] = control;
    report['headerBackground'] = offset;
    offset = {'flexDirection': 'row', 'alignItems': 'center', 'marginBottom': 12};
    report['logoContainer'] = offset;
    offset = {'marginRight': 10, 'height': 36, 'width': 51};
    report['wumpusImg'] = offset;
    offset = {'height': 32, 'width': 78};
    report['logoStyle'] = offset;
    offset = {'marginBottom': 16, 'marginHorizontal': 16};
    report['errorHeaderPrimaryButton'] = offset;
    offset = {'paddingTop': 16, 'paddingHorizontal': 16, 'display': 'flex', 'gap': 8};
    report['extraInfoContainer'] = offset;
    offset = {'padding': 16, 'borderRadius': null, 'backgroundColor': null, 'display': 'flex', 'gap': 18};
    control = golf[foxtrot];
    control = backup.bind(entity)(control);
    control = control.radii;
    control = control.sm;
    offset['borderRadius'] = control;
    control = golf[foxtrot];
    control = backup.bind(entity)(control);
    control = control.colors;
    control = control.BG_SURFACE_RAISED;
    offset['backgroundColor'] = control;
    report['extraInfoTextContainer'] = offset;
    offset = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'flex-start', 'gap': 8, 'padding': 16};
    control = golf[foxtrot];
    control = backup.bind(entity)(control);
    control = control.radii;
    control = control.lg;
    offset['borderRadius'] = control;
    control = golf[foxtrot];
    control = backup.bind(entity)(control);
    control = control.colors;
    control = control.BG_SURFACE_RAISED;
    offset['backgroundColor'] = control;
    report['mutationWarningContainer'] = offset;
    offset = {};
    offset['flex'] = source;
    report['mutationText'] = offset;
    offset = {};
    source = golf[foxtrot];
    source = backup.bind(entity)(source);
    source = source.colors;
    source = source.TEXT_BRAND;
    offset['color'] = source;
    report['fpTimeRemaining'] = offset;
    offset = {};
    source = golf[foxtrot];
    source = backup.bind(entity)(source);
    source = source.radii;
    source = source.lg;
    offset['borderRadius'] = source;
    source = golf[foxtrot];
    source = backup.bind(entity)(source);
    source = source.colors;
    source = source.REDESIGN_BUTTON_PRIMARY_PRESSED_BACKGROUND;
    offset['backgroundColor'] = source;
    offset['paddingVertical'] = update;
    offset['paddingHorizontal'] = echo;
    report['fpTimeRemainingPill'] = offset;
    offset = {};
    source = golf[foxtrot];
    source = backup.bind(entity)(source);
    source = source.radii;
    source = source.lg;
    offset['borderRadius'] = source;
    source = golf[foxtrot];
    source = backup.bind(entity)(source);
    source = source.colors;
    source = source.ACTIVITY_CARD_ICON_OVERLAY;
    offset['backgroundColor'] = source;
    offset['paddingVertical'] = update;
    offset['paddingHorizontal'] = echo;
    report['fpUnactivatedHoursPill'] = offset;
    offset = {};
    echo = golf[foxtrot];
    echo = backup.bind(entity)(echo);
    echo = echo.colors;
    echo = echo.WHITE;
    offset['color'] = echo;
    report['fpTimeRemainingText'] = offset;
    offset = {};
    echo = golf[foxtrot];
    echo = backup.bind(entity)(echo);
    echo = echo.colors;
    echo = echo.HEADER_PRIMARY;
    offset['color'] = echo;
    report['fpUnitsTitle'] = offset;
    offset = {'color': null, 'marginStart': 18, 'flexShrink': 1};
    echo = golf[foxtrot];
    echo = backup.bind(entity)(echo);
    echo = echo.colors;
    echo = echo.TEXT_BRAND;
    offset['color'] = echo;
    report['fpUnitsStatusText'] = offset;
    offset = {};
    offset['padding'] = kilo;
    offset['minHeight'] = result;
    offset['flexDirection'] = output;
    offset['alignItems'] = sizing;
    sizing = golf[foxtrot];
    sizing = backup.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = sizing;
    report['fpRowStart'] = offset;
    offset = {};
    offset['marginEnd'] = kilo;
    report['fpRowIcon'] = offset;
    offset = {'flexShrink': 1, 'flexGrow': 1, 'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'space-between'};
    report['fpRowContent'] = offset;
    offset = {};
    foxtrot = golf[foxtrot];
    foxtrot = backup.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_TERTIARY;
    offset['backgroundColor'] = foxtrot;
    report['fpRowEnd'] = offset;
    offset = {};
    foxtrot = 19;
    foxtrot = golf[foxtrot];
    foxtrot = oscar.bind(entity)(foxtrot);
    foxtrot = foxtrot.CARD_PRIMARY_BG;
    offset['backgroundColor'] = foxtrot;
    offset['height'] = romeo;
    report['dividerContainer'] = offset;
    offset = {};
    offset['height'] = romeo;
    yankee = golf[yankee];
    yankee = oscar.bind(entity)(yankee);
    yankee = yankee.DIVIDER_BACKGROUND;
    offset['backgroundColor'] = yankee;
    report['divider'] = offset;
    offset = {};
    yankee = 'relative';
    offset['position'] = yankee;
    report['pillAndCardContainer'] = offset;
    offset = {'position': 'absolute', 'top': 4294967278, 'left': 5, 'zIndex': 99};
    report['pillPosition'] = offset;
    report = options.bind(verify)(report);
    var _closure1_slot24 = report;
    report = 59;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/user_settings/native/premium_marketing/PremiumManagePlan.tsx';
    report = oscar.bind(golf)(report);
    tango = function() { // Original name: PremiumManagePlan
        _fun95754: for(var _fun95754_ip = 0; ; ) switch(_fun95754_ip) {
 0:
            entity = _closure1_slot22;
            tango = undefined;
            echo = entity.bind(tango)();
            offset = _closure1_slot1;
            golf = _closure1_slot2;
            entity = 48;
            entity = golf[entity];
            entity = offset.bind(tango)(entity);
            entity = entity.bind(tango)();
            vacuum = entity.top;
            foxtrot = entity.bottom;
            oscar = _closure1_slot0;
            entity = 14;
            entity = golf[entity];
            mike = oscar.bind(tango)(entity);
            entity = mike.useNavigation;
            entity = entity.bind(mike)();
            var _closure2_slot0 = entity;
            report = _closure1_slot4;
            zulu = report.useLayoutEffect;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                zulu = _closure2_slot0;
                mike = zulu.setOptions;
                entity = {};
                tango = false;
                entity['headerShown'] = tango;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            entity = zulu.bind(report)(entity, mike);
            report = 24;
            entity = golf[report];
            options = oscar.bind(tango)(entity);
            zulu = options.useStateFromStores;
            entity = _closure1_slot9;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure1_slot9;
                entity = mike.isLoadedForPremiumSKUs;
                entity = entity.bind(mike)();
                return entity;
            };
            mike = zulu.bind(options)(mike, entity);
            entity = golf[report];
            verify = oscar.bind(tango)(entity);
            options = verify.useStateFromStoresArray;
            entity = _closure1_slot10;
            zulu = new Array(1);
            zulu[0] = entity;
            entity = function() {
                zulu = _closure1_slot10;
                entity = zulu.getPremiumTypeSubscription;
                zulu = entity.bind(zulu)();
                entity = new Array(2);
                entity[0] = zulu;
                zulu = _closure1_slot10;
                mike = zulu.hasFetchedSubscriptions;
                mike = mike.bind(zulu)();
                entity[1] = mike;
                return entity;
            };
            options = options.bind(verify)(zulu, entity);
            zulu = _closure1_slot3;
            entity = 2;
            zulu = zulu.bind(tango)(options, entity);
            verify = 0;
            control = zulu[verify];
            entity = 1;
            entity = zulu[entity];
            zulu = 49;
            zulu = golf[zulu];
            options = offset.bind(tango)(zulu);
            zulu = {};
            yankee = true;
            zulu['forceFetch'] = yankee;
            result = options.bind(tango)(zulu);
            zulu = 50;
            zulu = golf[zulu];
            options = oscar.bind(tango)(zulu);
            zulu = options.useIsInReverseTrial;
            sizing = zulu.bind(options)();
            zulu = 51;
            options = golf[zulu];
            offset = offset.bind(tango)(options);
            options = result.endsAt;
            zulu = golf[zulu];
            zulu = oscar.bind(tango)(zulu);
            zulu = zulu.CountDownMessageTypes;
            zulu = zulu.SHORT_TIME;
            sequence = offset.bind(tango)(options, zulu);
            zulu = 27;
            zulu = golf[zulu];
            oscar = oscar.bind(tango)(zulu);
            zulu = oscar.getUnactivatedFractionalPremiumHoursString;
            record = zulu.bind(oscar)(result);
            zulu = record.length;
            context = zulu > verify;
            zulu = null;
            config = undefined;
            if(!(zulu !== control)) { _fun95754_ip = 368; continue _fun95754 }
 351:
            oscar = control.isPurchasedExternally;
            config = undefined;
            if(oscar) { _fun95754_ip = 368; continue _fun95754 }
 362:
            config = control.currentPeriodEnd;
 368:
            golf = result.fractionalState;
            oscar = _closure1_slot16;
            oscar = oscar.NONE;
            kilo = golf !== oscar;
            if(!kilo) { _fun95754_ip = 394; continue _fun95754 }
 391:
            kilo = !sizing;
 394:
            if(kilo) { _fun95754_ip = 400; continue _fun95754 }
 397:
            kilo = context;
 400:
            oscar = _closure1_slot0;
            golf = _closure1_slot2;
            options = 25;
            options = golf[options];
            offset = oscar.bind(tango)(options);
            options = offset.useThemeContext;
            options = options.bind(offset)();
            options = options.theme;
            backup = _closure1_slot4;
            yankee = backup.useRef;
            offset = false;
            offset = yankee.bind(backup)(offset);
            var _closure2_slot1 = offset;
            romeo = backup.useCallback;
            yankee = function(argFoo) {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 52;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.trackIfScrolledToBottom;
                entity = {};
                tango = argFoo;
                tango = tango.nativeEvent;
                entity['nativeEvent'] = tango;
                tango = 'your_nitro_plan';
                entity['trackedType'] = tango;
                tango = _closure2_slot1;
                entity['hasTrackedScrolledToBottom'] = tango;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            offset = new Array(0);
            offset = romeo.bind(backup)(yankee, offset);
            report = golf[report];
            backup = oscar.bind(tango)(report);
            romeo = backup.useStateFromStores;
            report = _closure1_slot11;
            yankee = new Array(1);
            yankee[0] = report;
            report = 53;
            report = golf[report];
            report = oscar.bind(tango)(report);
            sierra = report.areSetsEqual;
            whiskey = function() {
                _fun95759: for(var _fun95759_ip = 0; ; ) switch(_fun95759_ip) {
 0:
                    zulu = _closure1_slot11;
                    mike = zulu.getForApplication;
                    entity = _closure1_slot17;
                    entity = mike.bind(zulu)(entity);
                    mike = null;
                    if(!(mike == entity)) { _fun95759_ip = 56; continue _fun95759 }
 28:
                    mike = global;
                    mike = mike.Set;
                    zulu = mike.prototype;
                    zulu = Object.create(zulu, {constructor: {value: mike}});
                    report = zulu;
                    mike = new report[mike](tango);
                    entity = mike instanceof Object ? mike : zulu;
 56:
                    return entity;
                }
            };
            lima = new Array(0);
            quebec = backup;
            equality = yankee;
            source = quebec[romeo](equality, whiskey, lima, sierra, status);
            update = zulu != control;
            if(!update) { _fun95754_ip = 559; continue _fun95754 }
 550:
            report = control.isBoostOnly;
            update = !report;
 559:
            if(!update) { _fun95754_ip = 565; continue _fun95754 }
 562:
            update = mike;
 565:
            if(!update) { _fun95754_ip = 571; continue _fun95754 }
 568:
            update = entity;
 571:
            backup = zulu != control;
            if(!backup) { _fun95754_ip = 584; continue _fun95754 }
 578:
            backup = control.isBoostOnly;
 584:
            if(!backup) { _fun95754_ip = 590; continue _fun95754 }
 587:
            backup = mike;
 590:
            if(!backup) { _fun95754_ip = 596; continue _fun95754 }
 593:
            backup = entity;
 596:
            zulu = _closure1_slot21;
            mike = _closure1_slot7;
            entity = {};
            report = echo.background;
            entity['style'] = report;
            golf = _closure1_slot20;
            oscar = _closure1_slot1;
            yankee = _closure1_slot2;
            report = 54;
            report = yankee[report];
            oscar = oscar.bind(tango)(report);
            report = {};
            yankee = 0.2;
            report['blurAmount'] = yankee;
            romeo = echo.topBlur;
            yankee = new Array(2);
            yankee[0] = romeo;
            romeo = {};
            romeo['height'] = vacuum;
            yankee[1] = romeo;
            report['style'] = yankee;
            report['blurTheme'] = options;
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot21;
            golf = _closure1_slot8;
            oscar = {};
            romeo = echo.container;
            yankee = new Array(2);
            yankee[0] = romeo;
            romeo = {};
            romeo['paddingTop'] = vacuum;
            romeo['paddingBottom'] = foxtrot;
            yankee[1] = romeo;
            oscar['contentContainerStyle'] = yankee;
            oscar['onScrollEndDrag'] = offset;
            oscar['onMomentumScrollEnd'] = offset;
            oscar['scrollEventThrottle'] = verify;
            yankee = _closure1_slot20;
            offset = _closure1_slot25;
            verify = {};
            offset = yankee.bind(tango)(offset, verify);
            verify = new Array(2);
            verify[0] = offset;
            romeo = _closure1_slot21;
            yankee = _closure1_slot7;
            offset = {};
            foxtrot = echo.contentContainer;
            offset['style'] = foxtrot;
            if(!update) { _fun95754_ip = 836; continue _fun95754 }
 810:
            target = _closure1_slot20;
            vacuum = _closure1_slot26;
            foxtrot = {};
            foxtrot['subscription'] = control;
            foxtrot['fractionalPremiumInfo'] = result;
            update = target.bind(tango)(vacuum, foxtrot);
 836:
            foxtrot = new Array(6);
            foxtrot[0] = update;
            if(!sizing) { _fun95754_ip = 907; continue _fun95754 }
 847:
            target = _closure1_slot20;
            vacuum = _closure1_slot1;
            status = _closure1_slot2;
            update = 40;
            update = status[update];
            vacuum = vacuum.bind(tango)(update);
            update = {'premiumType': null, 'forFractionalPremium': true, 'hideButton': true};
            status = _closure1_slot18;
            status = status.TIER_2;
            update['premiumType'] = status;
            sizing = target.bind(tango)(vacuum, update);
 907:
            foxtrot[1] = sizing;
            if(!kilo) { _fun95754_ip = 980; continue _fun95754 }
 914:
            vacuum = _closure1_slot20;
            update = _closure1_slot27;
            sizing = {};
            sizing['fractionalPremiumInfo'] = result;
            status = result.fractionalState;
            target = _closure1_slot16;
            target = target.FP_ONLY;
            target = status === target;
            sizing['showPremiumFeaturesCard'] = target;
            sizing['hasUnactivatedUnits'] = context;
            sizing['unactivatedHoursString'] = record;
            sizing['activationDate'] = config;
            sizing['durationText'] = sequence;
            kilo = vacuum.bind(tango)(update, sizing);
 980:
            foxtrot[2] = kilo;
            if(!backup) { _fun95754_ip = 1120; continue _fun95754 }
 990:
            update = _closure1_slot21;
            sizing = _closure1_slot7;
            kilo = {};
            record = _closure1_slot20;
            config = _closure1_slot1;
            context = _closure1_slot2;
            vacuum = 37;
            vacuum = context[vacuum];
            sequence = config.bind(tango)(vacuum);
            vacuum = {};
            target = echo.subscriptionHeader;
            vacuum['style'] = target;
            papa = function() { // Original name: onClickManagePremiumGuild
                _fun95760: for(var _fun95760_ip = 0; ; ) switch(_fun95760_ip) {
 0:
                    zulu = _closure2_slot0;
                    entity = zulu.getState;
                    entity = entity.bind(zulu)();
                    tango = entity.routes;
                    zulu = tango.find;
                    entity = function(argFoo) {
                        entity = argFoo;
                        mike = entity.name;
                        entity = _closure1_slot15;
                        entity = entity.GUILD_BOOSTING;
                        entity = mike === entity;
                        return entity;
                    };
                    tango = zulu.bind(tango)(entity);
                    oscar = _closure1_slot1;
                    options = _closure1_slot2;
                    entity = 55;
                    report = options[entity];
                    entity = undefined;
                    verify = oscar.bind(entity)(report);
                    golf = verify.setSection;
                    report = _closure1_slot15;
                    oscar = report.GUILD_BOOSTING;
                    oscar = golf.bind(verify)(oscar);
                    golf = _closure1_slot0;
                    oscar = 56;
                    oscar = options[oscar];
                    golf = golf.bind(entity)(oscar);
                    oscar = golf.trackPaneViewed;
                    report = report.GUILD_BOOSTING;
                    report = oscar.bind(golf)(report);
                    report = null;
                    if(!(report == tango)) { _fun95760_ip = 153; continue _fun95760 }
 127:
                    oscar = _closure2_slot0;
                    report = oscar.push;
                    zulu = _closure1_slot15;
                    zulu = zulu.GUILD_BOOSTING;
                    zulu = report.bind(oscar)(zulu);
                    _fun95760_ip = 168; continue _fun95760;
 153:
                    zulu = _closure2_slot0;
                    mike = zulu.navigate;
                    mike = mike.bind(zulu)(tango);
 168:
                    return entity;
                }
            };
            vacuum['onClickManagePremiumGuild'] = papa;
            vacuum['subscription'] = control;
            sequence = record.bind(tango)(sequence, vacuum);
            vacuum = new Array(2);
            vacuum[0] = sequence;
            record = _closure1_slot20;
            sequence = 38;
            sequence = context[sequence];
            config = config.bind(tango)(sequence);
            sequence = {};
            context = echo.billingInfo;
            sequence['style'] = context;
            sequence['subscription'] = control;
            sequence = record.bind(tango)(config, sequence);
            vacuum[1] = sequence;
            kilo['children'] = vacuum;
            backup = update.bind(tango)(sizing, kilo);
 1120:
            foxtrot[3] = backup;
            update = _closure1_slot20;
            kilo = _closure1_slot1;
            vacuum = _closure1_slot2;
            backup = 57;
            backup = vacuum[backup];
            sizing = kilo.bind(tango)(backup);
            backup = {};
            sequence = echo.accountCredit;
            backup['style'] = sequence;
            sequence = echo.accountCreditList;
            backup['creditListContainerStyle'] = sequence;
            backup['currentSubscription'] = control;
            backup['entitlements'] = source;
            backup = update.bind(tango)(sizing, backup);
            foxtrot[4] = backup;
            sizing = _closure1_slot20;
            backup = 58;
            backup = vacuum[backup];
            kilo = kilo.bind(tango)(backup);
            backup = {};
            echo = echo.featuresTable;
            backup['style'] = echo;
            echo = 'nitro_home';
            backup['variant'] = echo;
            control = _closure1_slot0;
            echo = 18;
            update = vacuum[echo];
            update = control.bind(tango)(update);
            source = update.intl;
            update = source.string;
            echo = vacuum[echo];
            echo = control.bind(tango)(echo);
            echo = echo.t;
            echo = echo.QXx2go;
            echo = update.bind(source)(echo);
            backup['titleOverride'] = echo;
            result = result.fractionalState;
            output = _closure1_slot16;
            output = output.FP_ONLY;
            output = result === output;
            backup['isFractionalOnly'] = output;
            backup = sizing.bind(tango)(kilo, backup);
            foxtrot[5] = backup;
            offset['children'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = tango;
    zulu['BACK_BUTTON_SIZE'] = mike;
    return entity;
})();