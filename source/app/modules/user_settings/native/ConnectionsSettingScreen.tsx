// app/modules/user_settings/native/ConnectionsSettingScreen.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var1 = metroImportDefault;
    var _closure1_slot1 = var1;
    var _closure1_slot2 = var6;
    var1 = function onPress() {
        var5 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 2;
        var4 = var2[var1];
        var1 = undefined;
        var5 = var5.bind(var1)(var4);
        var4 = var5.openLazy;
        var6 = _closure1_slot0;
        var3 = 4;
        var3 = var2[var3];
        var6 = var6.bind(var1)(var3);
        var3 = 3;
        var3 = var2[var3];
        var2 = var2.paths;
        var3 = var6.bind(var1)(var3, var2);
        var2 = 'AddConnection';
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var _closure1_slot5 = var1;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var7 = var4.bind(var1)(var7);
    var _closure1_slot3 = var7;
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.jsx;
    var _closure1_slot4 = var4;
    var4 = var7.memo;
    var2 = function ConnectionsSettingScreen() {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
            var5 = _closure1_slot0;
            var6 = _closure1_slot2;
            var3 = 5;
            var3 = var6[var3];
            var4 = undefined;
            var7 = var5.bind(var4)(var3);
            var3 = var7.useStackNavigation;
            var8 = var3.bind(var7)();
            var _closure2_slot0 = var8;
            var3 = 6;
            var3 = var6[var3];
            var5 = var5.bind(var4)(var3);
            var3 = var5.useSettingNavigationRoute;
            var3 = var3.bind(var5)();
            var3 = var3.params;
            var5 = null;
            var6 = var5 == var3;
            var5 = undefined;
            if(var6) { _fun0001_ip = 86; continue _fun0001 }
 80:
            var5 = var3.selectedPlatformType;
 86:
            var7 = _closure1_slot3;
            var6 = var7.useLayoutEffect;
            var3 = new Array(1);
            var3[0] = var8;
            var2 = function() {
                var3 = _closure2_slot0;
                var2 = var3.setOptions;
                var1 = {};
                var4 = function headerRight(arg1) {
                    var4 = _closure1_slot4;
                    var8 = _closure1_slot0;
                    var9 = _closure1_slot2;
                    var1 = 7;
                    var1 = var9[var1];
                    var3 = undefined;
                    var1 = var8.bind(var3)(var1);
                    var2 = var1.HeaderTextButton;
                    var1 = {};
                    var10 = arg1;
                    var11 = var1;
                    var6 = copyDataProperties(var11, var10);
                    var6 = _closure1_slot5;
                    var5 = 'onPress';
                    var1[var5] = var6;
                    var5 = 8;
                    var6 = var9[var5];
                    var6 = var8.bind(var3)(var6);
                    var7 = var6.intl;
                    var6 = var7.string;
                    var5 = var9[var5];
                    var5 = var8.bind(var3)(var5);
                    var5 = var5.t;
                    var5 = var5.OYkgVl;
                    var6 = var6.bind(var7)(var5);
                    var5 = 'label';
                    var1[var5] = var6;
                    var1 = var4.bind(var3)(var2, var1);
                    return var1;
                };
                var1['headerRight'] = var4;
                var1 = var2.bind(var3)(var1);
                var1 = undefined;
                return var1;
            };
            var2 = var6.bind(var7)(var2, var3);
            var3 = _closure1_slot4;
            var2 = _closure1_slot0;
            var6 = _closure1_slot2;
            var1 = 9;
            var1 = var6[var1];
            var1 = var2.bind(var4)(var1);
            var2 = var1.UserSettingsConnections;
            var1 = {};
            var1['selectedPlatformType'] = var5;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        }
    };
    var2 = var4.bind(var7)(var2);
    var4 = 10;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/user_settings/native/ConnectionsSettingScreen.tsx';
    var4 = var5.bind(var6)(var4);
    var3['default'] = var2;
    return var1;
})();