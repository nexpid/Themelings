// app/modules/user_settings/native/showInvalidUsernameToastNative.tsx
export default (function(_, argBar, argBaz, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    tangon = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = tangon;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    oscard = {};
    entity = true;
    oscard['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, oscard);
    entity = 3;
    tangon = tangon[entity];
    entity = undefined;
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/showInvalidUsernameToastNative.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: showInvalidUsernameToast
        oscard = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 0;
        michal = golfie[entity];
        entity = undefined;
        tangon = oscard.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        option = 'USER_SETTINGS_UPDATE_FAILURE';
        michal['key'] = option;
        offset = _closure1_slot0;
        report = 1;
        option = golfie[report];
        option = offset.bind(entity)(option);
        verify = option.intl;
        option = verify.string;
        report = golfie[report];
        report = offset.bind(entity)(report);
        report = report.t;
        report = report.TGg/2t;
        report = option.bind(verify)(report);
        michal['content'] = report;
        report = 2;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        michal['icon'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['showInvalidUsernameToast'] = michal;
    return entity;
})();