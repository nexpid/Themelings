// app/modules/user_settings/native/showInvalidUsernameToastNative.tsx
export default (function(_, argBar, argBaz, __, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    tango = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = tango;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    oscar = {};
    entity = true;
    oscar['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, oscar);
    entity = 3;
    tango = tango[entity];
    entity = undefined;
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/showInvalidUsernameToastNative.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: showInvalidUsernameToast
        oscar = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 0;
        mike = golf[entity];
        entity = undefined;
        tango = oscar.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        options = 'USER_SETTINGS_UPDATE_FAILURE';
        mike['key'] = options;
        offset = _closure1_slot0;
        report = 1;
        options = golf[report];
        options = offset.bind(entity)(options);
        verify = options.intl;
        options = verify.string;
        report = golf[report];
        report = offset.bind(entity)(report);
        report = report.t;
        report = report.TGg/2t;
        report = options.bind(verify)(report);
        mike['content'] = report;
        report = 2;
        report = golf[report];
        report = oscar.bind(entity)(report);
        mike['icon'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['showInvalidUsernameToast'] = mike;
    return entity;
})();