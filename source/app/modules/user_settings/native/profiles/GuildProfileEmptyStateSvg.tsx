// app/modules/user_settings/native/profiles/GuildProfileEmptyStateSvg.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot3 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/profiles/GuildProfileEmptyStateSvg.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        tango = _closure1_slot4;
        mike = _closure1_slot1;
        kilo = _closure1_slot2;
        romeo = 2;
        entity = kilo[romeo];
        zulu = undefined;
        mike = mike.bind(zulu)(entity);
        entity = {'width': '187', 'height': '162', 'viewBox': '0 0 187 162', 'fill': 'none'};
        result = argFoo;
        echo = entity;
        oscar = copyDataProperties(echo, result);
        backup = _closure1_slot3;
        foxtrot = _closure1_slot0;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        oscar = report.Path;
        report = {'d': 'M186.5 139.464L171.853 148.774L169.969 149.961L153.555 160.412L151.206 161.902L151.067 161.995H36.77L36.7235 161.972L34.91 160.831L0.5 139.464L17.3098 127.523L21.4948 124.567L35.8633 114.349L38.351 112.58L47.2092 106.296L71.5055 117.468L73.505 118.399L73.7375 118.492L82.2703 118.516H84.572L144.58 118.609H146.719L156.693 118.632H156.763L158.995 117.445L166.97 113.139L169.342 111.859L179.711 106.296L182.199 118.539L182.641 120.634L186.5 139.464Z', 'fill': '#FFE55C'};
        report = backup.bind(zulu)(oscar, report);
        oscar = new Array(22);
        oscar[0] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M73.5049 118.399L36.7234 161.972L34.9099 160.831L71.5054 117.468L73.5049 118.399ZM156.693 118.632L151.206 161.902L153.555 160.412L158.995 117.445L156.763 118.632H156.693ZM73.9699 146.866C71.7612 148.658 68.9479 150.148 65.5999 151.335C65.3683 151.423 65.1743 151.588 65.0511 151.803C64.9278 152.018 64.8829 152.269 64.9241 152.514C64.9653 152.758 65.0899 152.981 65.2768 153.144C65.4636 153.307 65.7011 153.399 65.9487 153.406C66.0761 153.408 66.2026 153.384 66.3207 153.336C69.8779 152.08 72.9004 150.45 75.2952 148.542C75.405 148.456 75.4964 148.348 75.5642 148.226C75.632 148.104 75.6747 147.97 75.6899 147.831C75.705 147.692 75.6923 147.552 75.6525 147.418C75.6127 147.284 75.5465 147.16 75.4579 147.052C75.2839 146.832 75.0303 146.689 74.752 146.654C74.4737 146.619 74.1928 146.695 73.9699 146.866ZM56.2069 153.546C53.8026 153.872 51.3792 154.035 48.9529 154.035C48.1624 154.058 47.3487 154.011 46.5582 153.988C46.4189 153.979 46.2791 153.997 46.147 154.043C46.015 154.088 45.8934 154.16 45.7894 154.253C45.6854 154.346 45.6011 154.46 45.5415 154.586C45.4818 154.712 45.4481 154.849 45.4422 154.989C45.436 155.13 45.4575 155.27 45.5055 155.402C45.5536 155.535 45.6272 155.656 45.7223 155.76C45.8173 155.864 45.9318 155.948 46.0593 156.007C46.1868 156.067 46.3247 156.1 46.4652 156.106C47.2557 156.153 48.0927 156.153 48.8832 156.153H48.9529C51.4804 156.156 54.0052 155.985 56.5092 155.641C56.7867 155.601 57.0369 155.452 57.2047 155.227C57.3726 155.002 57.4444 154.72 57.4043 154.442C57.3642 154.164 57.2156 153.914 56.991 153.746C56.7665 153.578 56.4844 153.506 56.2069 153.546ZM91.5934 138.044C87.9664 138.37 84.4324 139.208 81.6889 140.442C81.4649 140.542 81.282 140.716 81.1711 140.935C81.0602 141.154 81.0279 141.405 81.0797 141.645C81.1315 141.885 81.2642 142.1 81.4556 142.254C81.6469 142.408 81.8853 142.491 82.1307 142.49C82.2818 142.481 82.4307 142.45 82.5724 142.397C85.1067 141.256 88.3617 140.465 91.7794 140.162C92.0611 140.133 92.3204 139.995 92.5025 139.778C92.6847 139.561 92.7756 139.281 92.7559 138.999C92.7266 138.718 92.5881 138.461 92.3704 138.282C92.1528 138.104 91.8737 138.018 91.5934 138.044ZM36.7699 154.547C37.0254 154.545 37.2717 154.451 37.4641 154.282C37.6565 154.114 37.7824 153.882 37.8189 153.629C37.8554 153.376 37.8002 153.118 37.6633 152.902C37.5263 152.686 37.3166 152.527 37.0722 152.452C33.3754 151.311 30.7947 149.659 29.6089 147.634C29.4671 147.393 29.2356 147.219 28.9652 147.149C28.6949 147.079 28.4079 147.119 28.1674 147.261C27.927 147.403 27.7527 147.635 27.6829 147.906C27.6131 148.177 27.6536 148.464 27.7954 148.705C29.2369 151.195 32.2362 153.197 36.4677 154.5L36.7699 154.547ZM29.5392 139.86C29.7138 139.968 29.9153 140.024 30.1204 140.023C30.2978 140.027 30.4731 139.984 30.6283 139.898C30.7836 139.812 30.9132 139.687 31.0039 139.534C33.4684 135.74 34.6774 132.737 34.6774 130.293C34.6774 130.13 34.6542 129.968 34.6542 129.805C34.6643 129.652 34.6418 129.5 34.5882 129.357C34.5346 129.214 34.4512 129.085 34.3435 128.977C34.2358 128.869 34.1063 128.785 33.9637 128.732C33.8211 128.678 33.6687 128.655 33.5167 128.665C33.3647 128.675 33.2165 128.718 33.0822 128.79C32.9479 128.862 32.8305 128.962 32.7379 129.083C32.6453 129.204 32.5796 129.343 32.5452 129.492C32.5108 129.64 32.5085 129.795 32.5384 129.944V130.293C32.5384 132.272 31.4224 134.995 29.2369 138.393C29.1591 138.509 29.1051 138.639 29.0782 138.776C29.0513 138.913 29.0519 139.054 29.08 139.19C29.1082 139.327 29.1633 139.456 29.2422 139.571C29.321 139.686 29.422 139.784 29.5392 139.86ZM25.9819 124.242H25.8424C24.3876 124.253 22.9351 124.362 21.4947 124.568L17.3097 127.524C18.8907 127.128 22.4944 126.36 25.8424 126.36H25.9819C26.2356 126.322 26.4672 126.194 26.6346 126C26.8021 125.806 26.8942 125.557 26.8942 125.301C26.8942 125.044 26.8021 124.796 26.6346 124.601C26.4672 124.407 26.2356 124.279 25.9819 124.242ZM101.73 138.58C101.457 138.53 101.175 138.587 100.942 138.738C100.708 138.889 100.541 139.124 100.475 139.394C100.42 139.669 100.474 139.954 100.626 140.189C100.778 140.424 101.016 140.59 101.289 140.651C104.753 141.396 107.589 142.699 109.705 144.515C109.902 144.678 110.148 144.768 110.403 144.771C110.558 144.775 110.711 144.743 110.852 144.679C110.993 144.614 111.118 144.518 111.216 144.399C111.395 144.184 111.483 143.908 111.461 143.63C111.439 143.352 111.31 143.093 111.1 142.909C108.705 140.837 105.543 139.394 101.73 138.58ZM114.774 151.172C114.636 151.189 114.503 151.233 114.382 151.303C114.262 151.372 114.156 151.464 114.072 151.575C113.987 151.685 113.926 151.812 113.891 151.946C113.855 152.081 113.847 152.221 113.867 152.359C113.942 153.031 113.981 153.707 113.983 154.384C113.983 156.572 113.565 159.016 112.751 161.646C112.705 161.757 112.682 161.875 112.681 161.995H114.867C115.642 159.531 116.057 156.967 116.099 154.384C116.101 153.621 116.054 152.859 115.959 152.103C115.925 151.822 115.78 151.567 115.558 151.393C115.336 151.218 115.054 151.139 114.774 151.172ZM152.532 135.693C152.428 135.433 152.226 135.223 151.969 135.11C151.713 134.997 151.422 134.989 151.16 135.088C149.253 135.81 147.138 136.671 144.882 137.625C143.952 138.044 142.976 138.417 142.023 138.742C141.791 138.83 141.597 138.996 141.474 139.211C141.351 139.426 141.306 139.677 141.347 139.922C141.388 140.166 141.513 140.389 141.7 140.552C141.886 140.714 142.124 140.807 142.371 140.814C142.491 140.813 142.61 140.79 142.72 140.744C143.72 140.395 144.743 139.999 145.719 139.58C147.951 138.626 150.044 137.788 151.927 137.067C152.188 136.963 152.397 136.761 152.51 136.504C152.623 136.247 152.631 135.956 152.532 135.693ZM136.28 128.361C133.722 129.13 130.607 129.455 126.864 129.316C126.582 129.309 126.308 129.412 126.1 129.603C125.892 129.794 125.766 130.058 125.748 130.34C125.741 130.62 125.845 130.891 126.036 131.096C126.227 131.3 126.491 131.422 126.771 131.434L128.561 131.48C131.723 131.48 134.536 131.108 136.908 130.386C137.141 130.276 137.326 130.086 137.43 129.849C137.534 129.613 137.549 129.347 137.472 129.101C137.396 128.855 137.233 128.644 137.014 128.508C136.795 128.372 136.534 128.32 136.28 128.361ZM170.248 135.6C170.485 135.597 170.714 135.515 170.899 135.368C171.114 135.19 171.253 134.937 171.288 134.66C171.322 134.383 171.25 134.103 171.085 133.878C169.295 131.55 166.04 130.992 160.739 132.109C160.602 132.136 160.473 132.191 160.357 132.27C160.242 132.348 160.144 132.449 160.068 132.566C159.992 132.683 159.94 132.814 159.916 132.951C159.891 133.089 159.895 133.23 159.925 133.366C159.95 133.504 160.002 133.636 160.08 133.753C160.158 133.87 160.258 133.97 160.376 134.046C160.494 134.123 160.626 134.174 160.764 134.197C160.903 134.22 161.045 134.215 161.181 134.18C165.482 133.273 168.179 133.599 169.388 135.181C169.489 135.313 169.619 135.42 169.769 135.492C169.918 135.565 170.082 135.602 170.248 135.6ZM171.062 143.095C170.926 143.068 170.786 143.068 170.65 143.096C170.514 143.124 170.385 143.178 170.271 143.256C170.156 143.334 170.058 143.434 169.982 143.55C169.907 143.666 169.855 143.797 169.83 143.933L169.737 144.352C169.59 145.143 169.512 145.945 169.504 146.749C169.499 147.837 169.656 148.92 169.969 149.961L171.852 148.774C171.701 148.11 171.623 147.431 171.62 146.749C171.62 146.084 171.691 145.421 171.829 144.771L171.922 144.352C171.97 144.072 171.907 143.784 171.747 143.549C171.586 143.314 171.34 143.152 171.062 143.095ZM143.743 124.521C143.905 124.592 144.078 124.632 144.255 124.637C144.445 124.636 144.632 124.583 144.796 124.485C144.959 124.387 145.093 124.246 145.185 124.079C146.087 122.389 146.61 120.522 146.719 118.609H144.58C144.478 120.17 144.05 121.692 143.325 123.078C143.191 123.325 143.16 123.615 143.239 123.885C143.317 124.155 143.498 124.384 143.743 124.521ZM116.82 129.036C111.914 129.735 111.402 132.295 111.402 133.366C111.402 134.436 112.1 136.066 113.425 137.393C113.527 137.491 113.647 137.569 113.779 137.621C113.91 137.673 114.051 137.698 114.192 137.695C114.332 137.696 114.471 137.667 114.599 137.611C114.727 137.555 114.842 137.473 114.936 137.369C115.035 137.272 115.113 137.156 115.166 137.028C115.22 136.9 115.247 136.763 115.247 136.624C115.247 136.486 115.22 136.349 115.166 136.221C115.113 136.093 115.035 135.977 114.936 135.88C114.03 134.972 113.518 134.087 113.518 133.366C113.518 131.83 116.029 131.294 117.122 131.131C117.402 131.091 117.655 130.941 117.825 130.714C117.995 130.487 118.069 130.202 118.029 129.921C118.009 129.783 117.962 129.65 117.89 129.53C117.818 129.41 117.723 129.306 117.61 129.224C117.498 129.141 117.37 129.082 117.234 129.05C117.098 129.018 116.957 129.013 116.82 129.036ZM132.653 140.698C129.473 140.958 126.271 140.715 123.167 139.976C123.033 139.941 122.893 139.934 122.755 139.954C122.618 139.974 122.486 140.021 122.367 140.092C122.248 140.164 122.144 140.258 122.062 140.37C121.98 140.482 121.921 140.609 121.888 140.744C121.818 141.019 121.859 141.31 122.002 141.555C122.146 141.799 122.381 141.976 122.655 142.048C125.131 142.633 127.668 142.922 130.212 142.909C131.072 142.909 131.955 142.886 132.816 142.816C133.095 142.792 133.355 142.659 133.537 142.446C133.72 142.232 133.812 141.956 133.792 141.675C133.783 141.535 133.747 141.399 133.684 141.274C133.622 141.148 133.535 141.037 133.429 140.946C133.323 140.854 133.199 140.785 133.066 140.743C132.933 140.7 132.792 140.685 132.653 140.698ZM49.6969 119.261C50.8142 119.96 51.8859 120.729 52.9054 121.565C54.5097 122.892 56.0674 124.102 57.5089 125.173C57.6943 125.298 57.9133 125.363 58.1367 125.359C58.3027 125.361 58.4669 125.324 58.6162 125.251C58.7655 125.178 58.8959 125.072 58.9969 124.94C59.0818 124.828 59.1433 124.7 59.1776 124.563C59.2119 124.427 59.2185 124.285 59.1968 124.146C59.1751 124.007 59.1256 123.873 59.0513 123.754C58.977 123.634 58.8795 123.531 58.7644 123.45C57.3462 122.403 55.8349 121.216 54.2539 119.936C53.1705 119.038 52.0287 118.214 50.8362 117.468C50.7203 117.388 50.5891 117.333 50.4509 117.306C50.3126 117.279 50.1703 117.281 50.0328 117.311C49.8953 117.342 49.7655 117.4 49.6517 117.484C49.5379 117.567 49.4425 117.672 49.3714 117.794C49.2226 118.033 49.1733 118.32 49.2342 118.594C49.2951 118.868 49.4613 119.108 49.6969 119.261ZM41.2572 115.42C41.5267 115.45 41.7972 115.374 42.0117 115.208C42.2262 115.042 42.368 114.799 42.4072 114.53C42.4464 114.262 42.3799 113.989 42.2218 113.768C42.0636 113.548 41.8262 113.397 41.5594 113.349C40.4279 113.023 39.3584 112.767 38.3509 112.58L35.8632 114.349C37.5929 114.564 39.3032 114.914 40.9782 115.397L41.2572 115.42ZM81.7354 123.939C81.9473 123.939 82.1542 123.874 82.3285 123.754C82.5029 123.633 82.6366 123.462 82.7119 123.264C82.9909 122.566 83.2699 121.891 83.5257 121.169C83.7814 120.448 84.1999 119.4 84.5719 118.516H82.2702L81.5494 120.424C81.2704 121.099 81.0147 121.798 80.7357 122.473C80.6834 122.602 80.6576 122.741 80.6598 122.881C80.662 123.021 80.6922 123.159 80.7485 123.287C80.8049 123.415 80.8863 123.53 80.9879 123.626C81.0895 123.722 81.2093 123.797 81.3402 123.846C81.4612 123.912 81.5977 123.944 81.7354 123.939ZM75.5742 129.665C73.4584 130.619 70.6219 130.224 66.9949 128.524C66.8668 128.451 66.7248 128.405 66.578 128.389C66.4312 128.374 66.2827 128.389 66.1419 128.433C66.0011 128.478 65.8711 128.551 65.76 128.648C65.6489 128.746 65.5591 128.865 65.4963 128.999C65.4335 129.132 65.3991 129.278 65.3951 129.426C65.3912 129.573 65.4179 129.72 65.4735 129.857C65.5291 129.994 65.6124 130.118 65.7182 130.221C65.824 130.324 65.95 130.404 66.0882 130.456C68.7387 131.69 70.9939 132.295 73.0167 132.295C74.2002 132.309 75.3731 132.071 76.4577 131.597C76.7129 131.475 76.9112 131.26 77.0109 130.995C77.1106 130.73 77.104 130.437 76.9924 130.177C76.8715 129.921 76.6545 129.724 76.3888 129.628C76.1231 129.532 75.8302 129.545 75.5742 129.665ZM182.199 118.539C179.362 119.47 176.921 119.982 174.945 120.052C174.692 120.095 174.462 120.228 174.299 120.426C174.135 120.624 174.049 120.874 174.054 121.131C174.06 121.388 174.158 121.634 174.33 121.825C174.502 122.016 174.736 122.138 174.991 122.17H175.038C177.13 122.1 179.688 121.565 182.64 120.634L182.199 118.539ZM167.97 116.98H168.063C168.343 116.95 168.6 116.811 168.778 116.594C168.956 116.376 169.042 116.096 169.016 115.816C168.993 115.536 168.993 115.234 168.993 114.955C169.005 113.914 169.122 112.877 169.341 111.859L166.97 113.139C166.897 113.742 166.858 114.348 166.854 114.955C166.854 115.304 166.877 115.653 166.9 116.025C166.934 116.287 167.06 116.527 167.257 116.702C167.453 116.878 167.707 116.976 167.97 116.98Z', 'fill': '#FFC419'};
        report = backup.bind(zulu)(golf, report);
        oscar[1] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M106.38 89.1881L99.266 116.444C99.132 116.934 98.8795 117.384 98.5308 117.753C98.1821 118.123 97.7479 118.401 97.2665 118.562C93.7557 119.726 85.8275 122.636 88.5245 124.265C91.9655 126.313 101.591 123.311 102.963 120.82C104.683 117.724 114.216 88.7458 114.216 88.7458L106.38 89.1881Z', 'fill': 'url(#paint0_linear_313_93366)'};
        report = backup.bind(zulu)(golf, report);
        oscar[2] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M125.422 89.2812L134.234 122.985C134.395 123.593 134.704 124.152 135.134 124.612C135.564 125.071 136.102 125.416 136.698 125.615C141.023 127.058 150.834 130.642 147.51 132.644C143.255 135.204 131.374 131.457 129.677 128.408C127.538 124.567 115.75 88.7458 115.75 88.7458L125.422 89.2812Z', 'fill': 'url(#paint1_linear_313_93366)'};
        report = backup.bind(zulu)(golf, report);
        oscar[3] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M104.474 96.4733C104.962 98.219 108.357 99.0802 111.123 98.0096L114.192 88.8389L106.357 89.2811L104.474 96.4733Z', 'fill': '#CF1581'};
        report = backup.bind(zulu)(golf, report);
        oscar[4] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M127.491 97.195L125.422 89.2812L115.75 88.7458C115.75 88.7458 117.052 92.726 118.866 98.1493C121.098 99.9183 126.189 98.2191 127.491 97.195Z', 'fill': '#CF1581'};
        report = backup.bind(zulu)(golf, report);
        oscar[5] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M48.7903 25.0864C48.7903 25.0864 59.3458 29.6252 68.1808 25.9942C70.5988 25.0166 72.668 27.9726 70.9243 29.8813C69.1805 31.7899 66.1115 33.745 61.7638 34.0244L48.7903 25.0864Z', 'fill': '#3442D7'};
        report = backup.bind(zulu)(golf, report);
        oscar[6] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M84.9905 28.4613C76.5042 31.8829 61.1592 34.257 52.8125 27.2277C36.677 13.6113 5.98698 22.6657 8.98623 48.8976C11.9855 75.1294 44.303 73.1277 44.303 73.1277L62.1357 56.1363C52.8125 57.8355 35.654 38.0743 56.207 42.52C76.2252 46.8725 84.6882 38.5863 88.199 32.0225C89.3382 29.9044 87.1992 27.5769 84.9905 28.4613Z', 'fill': 'url(#paint2_linear_313_93366)'};
        report = backup.bind(zulu)(golf, report);
        oscar[7] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M26.0983 45.9648C26.0983 45.9648 29.795 39.9829 38.8393 43.4278C49.7203 47.5709 57.2998 45.6157 62.066 42.7528C63.9725 41.6355 63.089 38.726 60.8803 38.8191C57.0208 38.9355 51.9755 37.795 46.4653 33.2097C40.955 28.6243 35.933 28.8105 32.12 29.9278', 'fill': '#5865F0'};
        report = backup.bind(zulu)(golf, report);
        oscar[8] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M26.0983 47.0356C25.9012 47.0315 25.7087 46.9753 25.5403 46.8726C25.3008 46.7236 25.1298 46.4859 25.0645 46.2113C24.9992 45.9367 25.0448 45.6473 25.1915 45.4063C26.0622 44.1557 27.2283 43.1402 28.586 42.4502C30.6553 41.3795 34.166 40.495 39.2113 42.4269C49.9993 46.5235 57.2998 44.3821 61.5313 41.845C61.7397 41.7314 61.9009 41.5472 61.9861 41.3255C62.0713 41.1037 62.0749 40.8589 61.9963 40.6347C61.9291 40.4056 61.7873 40.2056 61.5936 40.0664C61.3998 39.9273 61.1651 39.8569 60.9268 39.8666C55.742 40.0528 50.6503 38.0744 45.791 34.0244C41.6758 30.6028 37.1653 29.5554 32.4223 30.9519C32.1582 31.0097 31.8821 30.9652 31.6495 30.8274C31.4168 30.6897 31.2449 30.4688 31.1683 30.2093C31.0917 29.9498 31.1161 29.6709 31.2366 29.4287C31.3571 29.1864 31.5648 28.9989 31.8178 28.9037C37.2118 27.3209 42.5128 28.5313 47.1628 32.395C51.8128 36.2588 56.2071 37.9114 60.857 37.7485C61.5614 37.7234 62.2541 37.9329 62.8268 38.3442C63.3995 38.7554 63.8198 39.3452 64.0218 40.0212C64.2238 40.6971 64.1962 41.4211 63.9433 42.0797C63.6904 42.7382 63.2264 43.2942 62.6241 43.6606C57.9741 46.4304 50.0225 48.8278 38.444 44.4054C30.3995 41.3563 27.1213 46.314 26.9818 46.5235C26.8922 46.6788 26.7635 46.8079 26.6084 46.8977C26.4534 46.9876 26.2775 47.0351 26.0983 47.0356Z', 'fill': '#0C1AAB'};
        report = backup.bind(zulu)(golf, report);
        oscar[9] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M49.6737 65.2838C49.4877 65.9355 49.3947 66.3312 49.3947 66.3312C34.9565 77.3872 48.5577 96.939 48.5577 96.939C51.2315 93.7502 54.4865 90.701 58.4855 88.42C60.6942 68.9614 54.6492 65.2605 49.6737 65.2838Z', 'fill': '#FF78B7'};
        report = backup.bind(zulu)(golf, report);
        oscar[10] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M159.809 0.0182414C147.44 0.507034 142.836 11.9122 145.371 20.4079C148.044 29.2993 152.02 33.7915 152.811 38.3769C153.601 42.9622 150.439 47.245 145.905 47.4777C138.396 47.8501 127.096 40.2389 116.494 41.682C100.8 43.8001 105.45 54.4372 79.9917 50.1777C56.8115 46.3139 50.8595 61.1407 49.6737 65.2838C54.6492 65.2605 60.6942 68.9613 58.4855 88.42C67.2042 83.4157 79.5035 81.9725 96.9642 90.1424C122.446 102.036 146.231 81.6467 146.231 81.6467L153.438 59.9536C153.438 59.9536 185.035 50.2243 178.92 16.5907C177.223 7.23376 170.434 -0.424 159.809 0.0182414Z', 'fill': 'url(#paint3_linear_313_93366)'};
        report = backup.bind(zulu)(golf, report);
        oscar[11] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M168.783 62.4673C169.134 62.0216 169.338 61.4772 169.364 60.9102C169.391 60.3433 169.24 59.7821 168.933 59.3052C168.626 58.8282 168.177 58.4593 167.65 58.2501C167.123 58.0408 166.544 58.0016 165.993 58.138C159.553 59.7673 148.486 60.7682 136.884 53.5759C119.052 42.5199 99.1962 56.4156 103.753 73.1277C108.868 91.8415 142.836 99.4992 153.88 79.0863C153.88 79.0863 163.203 76.526 162.366 67.1923C164.881 66.2055 167.093 64.5764 168.783 62.4673Z', 'fill': '#5865F0'};
        report = backup.bind(zulu)(golf, report);
        oscar[12] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M71.1102 78.6673C73.704 78.6673 75.8067 75.3326 75.8067 71.219C75.8067 67.1055 73.704 63.7708 71.1102 63.7708C68.5164 63.7708 66.4137 67.1055 66.4137 71.219C66.4137 75.3326 68.5164 78.6673 71.1102 78.6673Z', 'fill': 'white'};
        report = backup.bind(zulu)(golf, report);
        oscar[13] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M70.994 69.2407C69.0643 69.2407 67.4833 71.7312 67.4833 74.7804C67.4854 75.2559 67.5242 75.7306 67.5995 76.2002C68.483 77.7131 69.7153 78.6674 71.1103 78.6674C72.5053 78.6674 73.4585 77.8993 74.2955 76.6657C74.439 76.0477 74.5092 75.4149 74.5048 74.7804C74.5048 71.7312 72.947 69.2407 70.994 69.2407Z', 'fill': 'black'};
        report = backup.bind(zulu)(golf, report);
        oscar[14] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M54.5097 60.3726C46.8605 58.6735 46.0002 69.7295 46.0002 69.7295C46.0002 69.7295 50.255 62.933 55.37 69.9623C56.8812 72.0105 57.23 74.6873 57.4392 77.2476C57.695 80.32 57.788 85.1149 56.6255 89.5605C57.416 89.0485 58.253 88.5364 59.09 88.0709C61.5312 79.1562 63.7167 62.4442 54.5097 60.3726Z', 'fill': '#CF1581'};
        report = backup.bind(zulu)(golf, report);
        oscar[15] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M162.367 69.4501C159.282 70.3761 156.078 70.8466 152.857 70.8466C151.927 70.8466 151.346 70.8001 151.253 70.8001C151.113 70.7913 150.977 70.7546 150.852 70.6921C150.727 70.6297 150.615 70.5427 150.524 70.4363C150.433 70.33 150.364 70.2065 150.322 70.073C150.279 69.9396 150.264 69.799 150.277 69.6595C150.282 69.5186 150.317 69.3804 150.378 69.2534C150.439 69.1265 150.526 69.0136 150.633 68.9218C150.74 68.83 150.865 68.7613 150.999 68.7201C151.134 68.6788 151.276 68.6658 151.416 68.682C151.486 68.682 156.926 69.0544 162.367 67.2156C162.436 67.9588 162.436 68.7069 162.367 69.4501ZM131.026 78.1552C130.754 78.0719 130.461 78.0999 130.21 78.233C129.96 78.3661 129.772 78.5935 129.689 78.8651C129.605 79.1368 129.633 79.4304 129.766 79.6814C129.899 79.9324 130.126 80.1202 130.398 80.2035C134.025 81.3208 139.21 82.5311 144.79 82.5311C147.283 82.5418 149.771 82.2764 152.206 81.7397C152.818 80.8904 153.377 80.0042 153.88 79.0863L154.671 78.807C146.115 81.8328 136.652 79.9009 131.026 78.1552Z', 'fill': '#0C1AAB'};
        report = backup.bind(zulu)(golf, report);
        oscar[16] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M25.5867 103.736C25.0429 103.381 24.5827 102.913 24.2382 102.362C23.8887 101.82 23.6588 101.209 23.564 100.57L23.2152 98.3588C23.2108 98.305 23.1858 98.255 23.1455 98.2192L23.006 98.1726L22.8665 98.2192C22.8261 98.255 22.8011 98.305 22.7967 98.3588L22.448 100.57C22.3531 101.209 22.1232 101.82 21.7737 102.362C21.4226 102.907 20.9637 103.375 20.4252 103.736L20.123 103.922C20.0997 103.922 20.0765 103.968 20.0532 103.992C20.0311 104.026 20.0228 104.068 20.03 104.108C20.0265 104.141 20.0347 104.174 20.0532 104.201C20.0765 104.224 20.0997 104.271 20.123 104.271L20.4252 104.457C20.9637 104.818 21.4226 105.285 21.7737 105.83C22.1232 106.373 22.3531 106.984 22.448 107.623L22.7967 109.834C22.8011 109.888 22.8261 109.938 22.8665 109.973L23.006 110.02L23.1455 109.973C23.1858 109.938 23.2108 109.888 23.2152 109.834L23.564 107.623C23.6588 106.984 23.8887 106.373 24.2382 105.83C24.5827 105.28 25.0429 104.811 25.5867 104.457L25.889 104.271C25.9122 104.271 25.9355 104.224 25.9587 104.201C25.9772 104.174 25.9854 104.141 25.982 104.108C25.9891 104.068 25.9808 104.026 25.9587 103.992C25.9355 103.968 25.9122 103.922 25.889 103.922L25.5867 103.736Z', 'fill': '#FFE55C'};
        report = backup.bind(zulu)(golf, report);
        oscar[17] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M16.403 92.8191C15.5427 92.2796 14.8122 91.5563 14.264 90.701C13.7289 89.8425 13.373 88.8845 13.2177 87.8846L12.7062 84.4398C12.6818 84.3629 12.6423 84.2917 12.59 84.2303C12.5238 84.1762 12.4427 84.1438 12.3575 84.1372C12.2732 84.1475 12.1931 84.1796 12.125 84.2303C12.0713 84.2877 12.0385 84.3615 12.032 84.4398L11.4972 87.8846C11.3407 88.8878 10.9764 89.8471 10.4277 90.701C9.88799 91.5553 9.16531 92.2788 8.31198 92.8191L7.87023 93.1217C7.82068 93.1479 7.78017 93.1885 7.75398 93.2381C7.72292 93.2867 7.70642 93.3433 7.70642 93.401C7.70642 93.4587 7.72292 93.5153 7.75398 93.5639L7.87023 93.6803L8.31198 93.9829C9.16531 94.5232 9.88799 95.2467 10.4277 96.101C10.9764 96.9549 11.3407 97.9142 11.4972 98.9174L12.032 102.362C12.0432 102.44 12.0824 102.512 12.1423 102.563C12.2022 102.614 12.2786 102.642 12.3575 102.642C12.4404 102.643 12.5217 102.619 12.59 102.572C12.6374 102.507 12.6764 102.437 12.7062 102.362L13.2177 98.9174C13.3767 97.9185 13.7323 96.9611 14.264 96.101C14.8122 95.2457 15.5427 94.5224 16.403 93.9829L16.868 93.6803C16.9109 93.6528 16.9436 93.6119 16.961 93.5639C16.992 93.5153 17.0085 93.4587 17.0085 93.401C17.0085 93.3433 16.992 93.2867 16.961 93.2381C16.9436 93.1901 16.9109 93.1492 16.868 93.1217L16.403 92.8191Z', 'fill': '#FF78B7'};
        report = backup.bind(zulu)(golf, report);
        oscar[18] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M182.873 81.8096C182.023 81.2573 181.295 80.5365 180.734 79.6915C180.193 78.836 179.837 77.8767 179.688 76.8752L179.153 73.4303C179.151 73.351 179.117 73.2758 179.06 73.2209C179.03 73.1899 178.994 73.1653 178.954 73.1485C178.914 73.1317 178.871 73.123 178.827 73.123C178.784 73.123 178.741 73.1317 178.701 73.1485C178.661 73.1653 178.625 73.1899 178.595 73.2209C178.538 73.2758 178.504 73.351 178.502 73.4303L177.967 76.8752C177.811 77.8783 177.446 78.8376 176.898 79.6915C176.352 80.5406 175.63 81.2629 174.782 81.8096L174.34 82.089L174.224 82.2286C174.194 82.2779 174.178 82.3341 174.177 82.3915C174.182 82.4483 174.198 82.5037 174.224 82.5545C174.25 82.6041 174.291 82.6446 174.34 82.6709L174.782 82.9734C175.64 83.5074 176.364 84.2322 176.898 85.0915C177.45 85.9436 177.815 86.9037 177.967 87.9079L178.502 91.3295C178.504 91.4088 178.538 91.484 178.595 91.5389C178.626 91.5691 178.662 91.5928 178.702 91.6088C178.742 91.6248 178.785 91.6327 178.827 91.6321C178.871 91.6341 178.914 91.6268 178.954 91.6107C178.994 91.5947 179.03 91.5702 179.06 91.5389C179.117 91.484 179.151 91.4088 179.153 91.3295L179.688 87.9079C179.828 86.9042 180.185 85.9432 180.734 85.0915C181.282 84.2362 182.013 83.5129 182.873 82.9734L183.338 82.6709L183.431 82.5545C183.457 82.5037 183.473 82.4483 183.477 82.3915C183.477 82.3341 183.461 82.2779 183.431 82.2286L183.338 82.089L182.873 81.8096Z', 'fill': '#8AD7FF'};
        report = backup.bind(zulu)(golf, report);
        oscar[19] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'d': 'M159.111 27.088C159.144 27.3687 159.065 27.651 158.891 27.8733C158.717 28.0957 158.462 28.2401 158.181 28.275H158.042C157.783 28.2766 157.534 28.1824 157.34 28.0105C157.147 27.8386 157.024 27.6012 156.996 27.344C155.508 15.0311 150.323 10.1664 146.44 8.2578C146.741 7.6457 147.083 7.05469 147.463 6.48883C151.881 8.72331 157.554 14.1233 159.111 27.088ZM165.714 0.693142C164.833 0.431091 163.931 0.244217 163.017 0.134521C166.435 6.13969 171.69 18.6854 166.389 32.7906C166.329 32.9522 166.309 33.126 166.33 33.2971C166.352 33.4681 166.414 33.6315 166.513 33.7732C166.611 33.9148 166.742 34.0307 166.894 34.1109C167.047 34.1911 167.216 34.2332 167.388 34.2337C167.607 34.2364 167.821 34.1706 168 34.0453C168.18 33.9201 168.315 33.7418 168.388 33.5354C173.526 19.8259 169.248 7.48969 165.714 0.693142Z', 'fill': '#29CA7A'};
        report = backup.bind(zulu)(golf, report);
        oscar[20] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Defs;
        report = {};
        options = kilo[romeo];
        options = foxtrot.bind(zulu)(options);
        verify = options.LinearGradient;
        options = {'id': 'paint0_linear_313_93366', 'x1': '95.4274', 'y1': '123.439', 'x2': '104.392', 'y2': '96.0278', 'gradientUnits': 'userSpaceOnUse'};
        offset = kilo[romeo];
        offset = foxtrot.bind(zulu)(offset);
        yankee = offset.Stop;
        offset = {'offset': '0.18', 'stopColor': '#FF78B7'};
        yankee = backup.bind(zulu)(yankee, offset);
        offset = new Array(2);
        offset[0] = yankee;
        yankee = kilo[romeo];
        yankee = foxtrot.bind(zulu)(yankee);
        sizing = yankee.Stop;
        yankee = {'offset': '0.97', 'stopColor': '#F25AA8'};
        yankee = backup.bind(zulu)(sizing, yankee);
        offset[1] = yankee;
        options['children'] = offset;
        verify = tango.bind(zulu)(verify, options);
        options = new Array(4);
        options[0] = verify;
        verify = kilo[romeo];
        verify = foxtrot.bind(zulu)(verify);
        offset = verify.LinearGradient;
        verify = {'id': 'paint1_linear_313_93366', 'x1': '136.357', 'y1': '127.053', 'x2': '128.314', 'y2': '96.2055', 'gradientUnits': 'userSpaceOnUse'};
        yankee = kilo[romeo];
        yankee = foxtrot.bind(zulu)(yankee);
        sizing = yankee.Stop;
        yankee = {'offset': '0.26', 'stopColor': '#FF78B7'};
        sizing = backup.bind(zulu)(sizing, yankee);
        yankee = new Array(4);
        yankee[0] = sizing;
        sizing = kilo[romeo];
        sizing = foxtrot.bind(zulu)(sizing);
        output = sizing.Stop;
        sizing = {'offset': '0.51', 'stopColor': '#F96BB0'};
        sizing = backup.bind(zulu)(output, sizing);
        yankee[1] = sizing;
        sizing = kilo[romeo];
        sizing = foxtrot.bind(zulu)(sizing);
        output = sizing.Stop;
        sizing = {'offset': '0.97', 'stopColor': '#EB4A9F'};
        sizing = backup.bind(zulu)(output, sizing);
        yankee[2] = sizing;
        sizing = kilo[romeo];
        sizing = foxtrot.bind(zulu)(sizing);
        output = sizing.Stop;
        sizing = {'offset': '1', 'stopColor': '#EA489E'};
        sizing = backup.bind(zulu)(output, sizing);
        yankee[3] = sizing;
        verify['children'] = yankee;
        verify = tango.bind(zulu)(offset, verify);
        options[1] = verify;
        verify = kilo[romeo];
        verify = foxtrot.bind(zulu)(verify);
        offset = verify.LinearGradient;
        verify = {'id': 'paint2_linear_313_93366', 'x1': '49.5877', 'y1': '44.6544', 'x2': '54.3549', 'y2': '71.8062', 'gradientUnits': 'userSpaceOnUse'};
        yankee = kilo[romeo];
        yankee = foxtrot.bind(zulu)(yankee);
        sizing = yankee.Stop;
        yankee = {'offset': '0.15', 'stopColor': '#5865F0'};
        sizing = backup.bind(zulu)(sizing, yankee);
        yankee = new Array(2);
        yankee[0] = sizing;
        sizing = kilo[romeo];
        sizing = foxtrot.bind(zulu)(sizing);
        output = sizing.Stop;
        sizing = {'offset': '0.89', 'stopColor': '#3442D7'};
        sizing = backup.bind(zulu)(output, sizing);
        yankee[1] = sizing;
        verify['children'] = yankee;
        verify = tango.bind(zulu)(offset, verify);
        options[2] = verify;
        verify = kilo[romeo];
        verify = foxtrot.bind(zulu)(verify);
        offset = verify.LinearGradient;
        verify = {'id': 'paint3_linear_313_93366', 'x1': '112.951', 'y1': '33.745', 'x2': '124.172', 'y2': '93.5012', 'gradientUnits': 'userSpaceOnUse'};
        yankee = kilo[romeo];
        yankee = foxtrot.bind(zulu)(yankee);
        sizing = yankee.Stop;
        yankee = {'offset': '0.42', 'stopColor': '#8FFFAB'};
        sizing = backup.bind(zulu)(sizing, yankee);
        yankee = new Array(2);
        yankee[0] = sizing;
        romeo = kilo[romeo];
        romeo = foxtrot.bind(zulu)(romeo);
        foxtrot = romeo.Stop;
        romeo = {'offset': '0.92', 'stopColor': '#58F086'};
        romeo = backup.bind(zulu)(foxtrot, romeo);
        yankee[1] = romeo;
        verify['children'] = yankee;
        verify = tango.bind(zulu)(offset, verify);
        options[3] = verify;
        report['children'] = options;
        report = tango.bind(zulu)(golf, report);
        oscar[21] = report;
        report = 'children';
        entity[report] = oscar;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();