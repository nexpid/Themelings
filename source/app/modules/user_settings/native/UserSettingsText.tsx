// app/modules/user_settings/native/UserSettingsText.tsx
export default (function(argFoo, argBar, argBaz, argCorge, argGrault, argFred, argPlugh) {
    verify = argBar;
    kilo = argBaz;
    zulu = argFred;
    offset = argPlugh;
    var _closure1_slot0 = verify;
    var _closure1_slot1 = kilo;
    var _closure1_slot2 = offset;
    entity = function(argFoo, argBar, argBaz, argCorge, argGrault) { // Original name: trackSettingsUpdated
        tango = _closure1_slot1;
        zulu = _closure1_slot2;
        entity = 10;
        zulu = zulu[entity];
        entity = undefined;
        report = tango.bind(entity)(zulu);
        tango = report.track;
        mike = _closure1_slot10;
        zulu = mike.IMAGE_VIDEO_DATA_SETTINGS_UPDATED;
        mike = {};
        oscar = argBar;
        mike['video_upload_quality'] = oscar;
        oscar = argBaz;
        mike['image_descriptions'] = oscar;
        oscar = argCorge;
        mike['low_quality_image_mode'] = oscar;
        oscar = argGrault;
        mike['data_saving_mode'] = oscar;
        oscar = argFoo;
        mike['updated_setting'] = oscar;
        mike = tango.bind(report)(zulu, mike);
        return entity;
    };
    var _closure1_slot19 = entity;
    oscar = function(argFoo) { // Original name: setDataSavingMode
        entity = argFoo;
        romeo = entity.videoUploadQuality;
        yankee = entity.viewImageDescriptions;
        offset = entity.lowQualityImageMode;
        report = entity.dataSavingMode;
        tango = _closure1_slot19;
        entity = undefined;
        foxtrot = 'data_saving_mode';
        backup = undefined;
        verify = report;
        zulu = backup[tango](foxtrot, romeo, yankee, offset, verify, options);
        zulu = _closure1_slot1;
        tango = _closure1_slot2;
        mike = 12;
        mike = tango[mike];
        tango = zulu.bind(entity)(mike);
        zulu = tango.updatedUnsyncedSettings;
        mike = {};
        mike['dataSavingMode'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    var _closure1_slot20 = oscar;
    report = function(argFoo) { // Original name: setVideoUploadQuality
        entity = argFoo;
        report = entity.videoUploadQuality;
        yankee = entity.viewImageDescriptions;
        offset = entity.lowQualityImageMode;
        verify = entity.dataSavingMode;
        tango = _closure1_slot19;
        entity = undefined;
        foxtrot = 'video_upload_quality';
        backup = undefined;
        romeo = report;
        zulu = backup[tango](foxtrot, romeo, yankee, offset, verify, options);
        zulu = _closure1_slot1;
        tango = _closure1_slot2;
        mike = 12;
        mike = tango[mike];
        tango = zulu.bind(entity)(mike);
        zulu = tango.updatedUnsyncedSettings;
        mike = {};
        mike['videoUploadQuality'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    var _closure1_slot21 = report;
    tango = function(argFoo) { // Original name: setImageDescriptions
        entity = argFoo;
        romeo = entity.videoUploadQuality;
        tango = entity.viewImageDescriptions;
        offset = entity.lowQualityImageMode;
        verify = entity.dataSavingMode;
        report = _closure1_slot19;
        entity = undefined;
        foxtrot = 'image_descriptions';
        backup = undefined;
        yankee = tango;
        zulu = backup[report](foxtrot, romeo, yankee, offset, verify, options);
        zulu = _closure1_slot0;
        report = _closure1_slot2;
        mike = 11;
        mike = report[mike];
        mike = zulu.bind(entity)(mike);
        zulu = mike.ViewImageDescriptions;
        mike = zulu.updateSetting;
        mike = mike.bind(zulu)(tango);
        return entity;
    };
    var _closure1_slot22 = tango;
    mike = function() { // Original name: CustomRendererSetting
        entity = _closure1_slot18;
        tango = undefined;
        report = entity.bind(tango)();
        golf = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 13;
        entity = verify[entity];
        oscar = golf.bind(tango)(entity);
        zulu = oscar.useStateFromStores;
        entity = _closure1_slot8;
        mike = new Array(1);
        mike[0] = entity;
        entity = function() {
            entity = _closure1_slot8;
            entity = entity.useMobileChatCustomRenderer;
            return entity;
        };
        foxtrot = zulu.bind(oscar)(mike, entity);
        zulu = _closure1_slot15;
        mike = _closure1_slot4;
        entity = {};
        report = report.container;
        entity['style'] = report;
        yankee = _closure1_slot14;
        oscar = 17;
        report = verify[oscar];
        report = golf.bind(tango)(report);
        offset = report.FormSwitchRow;
        report = {};
        backup = 'Use Custom Renderer';
        report['label'] = backup;
        report['value'] = foxtrot;
        romeo = function(argFoo) { // Original name: onValueChange
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 12;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.updatedUnsyncedSettings;
            mike = {};
            report = argFoo;
            mike['useMobileChatCustomRenderer'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        report['onValueChange'] = romeo;
        offset = yankee.bind(tango)(offset, report);
        report = new Array(2);
        report[0] = offset;
        options = _closure1_slot14;
        oscar = verify[oscar];
        oscar = golf.bind(tango)(oscar);
        golf = oscar.FormHint;
        oscar = {};
        verify = 'If you see any issues with this enabled, disable this and try to reproduce it again. If that fixes it, then please report it to Discord Testers > #mcr-bug-reports. Thanks!';
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot23 = mike;
    entity = global;
    romeo = entity.Object;
    yankee = romeo.defineProperty;
    options = {};
    entity = true;
    options['value'] = entity;
    entity = '__esModule';
    entity = yankee.bind(romeo)(zulu, entity, options);
    entity = 0;
    yankee = offset[entity];
    options = argCorge;
    entity = undefined;
    options = options.bind(entity)(yankee);
    var _closure1_slot3 = options;
    backup = 1;
    options = offset[backup];
    options = verify.bind(entity)(options);
    foxtrot = options.StyleSheet;
    options = options.View;
    var _closure1_slot4 = options;
    options = 2;
    options = offset[options];
    options = kilo.bind(entity)(options);
    var _closure1_slot5 = options;
    options = 3;
    options = offset[options];
    options = kilo.bind(entity)(options);
    var _closure1_slot6 = options;
    options = 4;
    options = offset[options];
    options = kilo.bind(entity)(options);
    var _closure1_slot7 = options;
    options = 5;
    yankee = offset[options];
    yankee = kilo.bind(entity)(yankee);
    var _closure1_slot8 = yankee;
    options = offset[options];
    options = verify.bind(entity)(options);
    options = options.VideoQualitySettings;
    var _closure1_slot9 = options;
    options = 6;
    options = offset[options];
    options = verify.bind(entity)(options);
    sizing = options.Fonts;
    yankee = options.AnalyticEvents;
    var _closure1_slot10 = yankee;
    yankee = options.AnalyticsSections;
    var _closure1_slot11 = yankee;
    options = options.UserSettingsSections;
    var _closure1_slot12 = options;
    options = 7;
    options = offset[options];
    options = verify.bind(entity)(options);
    options = options.TitleStyleType;
    var _closure1_slot13 = options;
    options = 8;
    yankee = offset[options];
    yankee = verify.bind(entity)(yankee);
    yankee = yankee.jsx;
    var _closure1_slot14 = yankee;
    yankee = offset[options];
    yankee = verify.bind(entity)(yankee);
    yankee = yankee.jsxs;
    var _closure1_slot15 = yankee;
    options = offset[options];
    options = verify.bind(entity)(options);
    options = options.Fragment;
    var _closure1_slot16 = options;
    romeo = foxtrot.create;
    yankee = {};
    options = {};
    options['flex'] = backup;
    yankee['flex'] = options;
    backup = {'position': 'absolute', 'top': 4294967256, 'right': 0, 'left': 0, 'backgroundColor': null, 'justifyContent': 'center', 'alignItems': 'center', 'paddingTop': 5, 'paddingBottom': 4};
    options = 9;
    output = offset[options];
    output = kilo.bind(entity)(output);
    output = output.unsafe_rawColors;
    output = output.GREEN_360;
    backup['backgroundColor'] = output;
    yankee['banner'] = backup;
    backup = {};
    output = offset[options];
    output = kilo.bind(entity)(output);
    output = output.unsafe_rawColors;
    output = output.WHITE_500;
    backup['color'] = output;
    sizing = sizing.PRIMARY_SEMIBOLD;
    backup['fontFamily'] = sizing;
    sizing = 14;
    backup['fontSize'] = sizing;
    yankee['cacheClearedText'] = backup;
    backup = {'display': 'flex', 'flex': 1, 'paddingLeft': 12, 'flexDirection': 'row', 'fontSize': 12, 'maxHeight': 16};
    yankee['nitroText'] = backup;
    yankee = romeo.bind(foxtrot)(yankee);
    var _closure1_slot17 = yankee;
    yankee = 23;
    yankee = offset[yankee];
    foxtrot = verify.bind(entity)(yankee);
    romeo = foxtrot.createStyles;
    yankee = {};
    backup = {};
    options = offset[options];
    options = kilo.bind(entity)(options);
    options = options.colors;
    options = options.INFO_HELP_BACKGROUND;
    backup['backgroundColor'] = options;
    options = 24;
    backup['paddingBottom'] = options;
    yankee['container'] = backup;
    yankee = romeo.bind(foxtrot)(yankee);
    var _closure1_slot18 = yankee;
    options = offset[options];
    offset = verify.bind(entity)(options);
    verify = offset.fileFinishedImporting;
    options = 'modules/user_settings/native/UserSettingsText.tsx';
    options = verify.bind(offset)(options);
    options = function() { // Original name: UserSettingsText
        _fun97645: for(var _fun97645_ip = 0; ; ) switch(_fun97645_ip) {
 0:
            oscar = _closure1_slot0;
            report = _closure1_slot2;
            source = 11;
            entity = report[source];
            tango = undefined;
            entity = oscar.bind(tango)(entity);
            mike = entity.InlineAttachmentMedia;
            entity = mike.useSetting;
            quebec = entity.bind(mike)();
            entity = report[source];
            entity = oscar.bind(tango)(entity);
            mike = entity.InlineEmbedMedia;
            entity = mike.useSetting;
            lima = entity.bind(mike)();
            entity = report[source];
            entity = oscar.bind(tango)(entity);
            mike = entity.RenderEmbeds;
            entity = mike.useSetting;
            sequence = entity.bind(mike)();
            entity = report[source];
            entity = oscar.bind(tango)(entity);
            mike = entity.RenderReactions;
            entity = mike.useSetting;
            control = entity.bind(mike)();
            entity = 13;
            mike = report[entity];
            options = oscar.bind(tango)(mike);
            golf = options.useStateFromStoresObject;
            mike = _closure1_slot8;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                entity = {};
                zulu = _closure1_slot8;
                zulu = zulu.dataSavingMode;
                entity['lowQualityImageMode'] = zulu;
                zulu = _closure1_slot8;
                zulu = zulu.videoUploadQuality;
                entity['videoUploadQuality'] = zulu;
                mike = _closure1_slot8;
                mike = mike.dataSavingMode;
                entity['dataSavingMode'] = mike;
                return entity;
            };
            mike = golf.bind(options)(zulu, mike);
            zulu = mike.lowQualityImageMode;
            var _closure2_slot0 = zulu;
            zulu = mike.videoUploadQuality;
            var _closure2_slot1 = zulu;
            target = mike.dataSavingMode;
            var _closure2_slot2 = target;
            mike = report[entity];
            options = oscar.bind(tango)(mike);
            golf = options.useStateFromStores;
            mike = _closure1_slot6;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                mike = _closure1_slot6;
                entity = mike.getPremiumTypeSubscription;
                entity = entity.bind(mike)();
                return entity;
            };
            options = golf.bind(options)(zulu, mike);
            mike = report[entity];
            verify = oscar.bind(tango)(mike);
            golf = verify.useStateFromStores;
            mike = _closure1_slot5;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                mike = _closure1_slot5;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            golf = golf.bind(verify)(zulu, mike);
            mike = 14;
            mike = report[mike];
            zulu = oscar.bind(tango)(mike);
            mike = zulu.hasPremiumSubscriptionToDisplay;
            echo = mike.bind(zulu)(golf, options);
            entity = report[entity];
            golf = oscar.bind(tango)(entity);
            zulu = golf.useStateFromStores;
            entity = _closure1_slot7;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                zulu = _closure1_slot7;
                mike = zulu.shouldSync;
                entity = 'text';
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            config = zulu.bind(golf)(mike, entity);
            entity = report[source];
            entity = oscar.bind(tango)(entity);
            mike = entity.ViewImageDescriptions;
            entity = mike.useSetting;
            equality = entity.bind(mike)();
            var _closure2_slot3 = equality;
            entity = function(argFoo) { // Original name: updateVideoUploadQuality
                zulu = _closure1_slot21;
                mike = {};
                entity = argFoo;
                mike['videoUploadQuality'] = entity;
                tango = _closure2_slot3;
                mike['viewImageDescriptions'] = tango;
                tango = _closure2_slot0;
                mike['lowQualityImageMode'] = tango;
                entity = _closure2_slot2;
                mike['dataSavingMode'] = entity;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            var _closure2_slot4 = entity;
            entity = 15;
            entity = report[entity];
            mike = oscar.bind(tango)(entity);
            entity = mike.useNavigation;
            entity = entity.bind(mike)();
            var _closure2_slot5 = entity;
            whiskey = function(argFoo) { // Original name: isVideoQualitySelected
                tango = _closure1_slot14;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 17;
                entity = zulu[entity];
                zulu = undefined;
                entity = mike.bind(zulu)(entity);
                entity = entity.FormRow;
                mike = entity.Checkmark;
                entity = {};
                oscar = _closure2_slot1;
                report = argFoo;
                report = oscar === report;
                entity['selected'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            entity = 18;
            entity = report[entity];
            mike = oscar.bind(tango)(entity);
            entity = mike.useCanUseCustomChatRenderer;
            entity = entity.bind(mike)();
            offset = entity.canUseRenderer;
            options = entity.forceUseRenderer;
            zulu = _closure1_slot14;
            mike = _closure1_slot4;
            entity = {};
            golf = _closure1_slot17;
            golf = golf.flex;
            entity['style'] = golf;
            golf = _closure1_slot15;
            foxtrot = 17;
            report = report[foxtrot];
            report = oscar.bind(tango)(report);
            oscar = report.Form;
            report = {};
            verify = null;
            if(!offset) { _fun97645_ip = 512; continue _fun97645 }
 491:
            verify = null;
            if(options) { _fun97645_ip = 512; continue _fun97645 }
 496:
            yankee = _closure1_slot14;
            offset = _closure1_slot23;
            options = {};
            verify = yankee.bind(tango)(offset, options);
 512:
            options = new Array(7);
            options[0] = verify;
            romeo = _closure1_slot15;
            verify = _closure1_slot3;
            yankee = verify.Fragment;
            offset = {};
            context = _closure1_slot15;
            sizing = _closure1_slot0;
            kilo = _closure1_slot2;
            output = kilo[foxtrot];
            output = sizing.bind(tango)(output);
            record = output.FormSection;
            output = {};
            update = _closure1_slot13;
            update = update.ANDROID_NO_BORDER;
            output['titleStyleType'] = update;
            update = 21;
            papa = kilo[update];
            papa = sizing.bind(tango)(papa);
            sierra = papa.intl;
            status = sierra.string;
            papa = kilo[update];
            papa = sizing.bind(tango)(papa);
            papa = papa.t;
            papa = papa.U68Dgo;
            papa = status.bind(sierra)(papa);
            output['title'] = papa;
            sierra = _closure1_slot14;
            papa = kilo[foxtrot];
            papa = sizing.bind(tango)(papa);
            status = papa.FormSwitchRow;
            papa = {};
            variable36 = kilo[update];
            variable36 = sizing.bind(tango)(variable36);
            variable38 = variable36.intl;
            variable37 = variable38.string;
            variable36 = kilo[update];
            variable36 = sizing.bind(tango)(variable36);
            variable36 = variable36.t;
            variable36 = variable36.U47N1t;
            variable36 = variable37.bind(variable38)(variable36);
            papa['label'] = variable36;
            papa['value'] = lima;
            lima = kilo[source];
            lima = sizing.bind(tango)(lima);
            lima = lima.InlineEmbedMedia;
            lima = lima.updateSetting;
            papa['onValueChange'] = lima;
            status = sierra.bind(tango)(status, papa);
            papa = new Array(3);
            papa[0] = status;
            lima = _closure1_slot14;
            status = kilo[foxtrot];
            status = sizing.bind(tango)(status);
            sierra = status.FormDivider;
            status = {};
            status = lima.bind(tango)(sierra, status);
            papa[1] = status;
            lima = _closure1_slot14;
            status = kilo[foxtrot];
            status = sizing.bind(tango)(status);
            sierra = status.FormSwitchRow;
            status = {};
            variable36 = kilo[update];
            variable36 = sizing.bind(tango)(variable36);
            variable38 = variable36.intl;
            variable37 = variable38.string;
            variable36 = kilo[update];
            variable36 = sizing.bind(tango)(variable36);
            variable36 = variable36.t;
            variable36 = variable36.VP11Nj;
            variable36 = variable37.bind(variable38)(variable36);
            status['label'] = variable36;
            status['value'] = quebec;
            quebec = kilo[source];
            quebec = sizing.bind(tango)(quebec);
            quebec = quebec.InlineAttachmentMedia;
            quebec = quebec.updateSetting;
            status['onValueChange'] = quebec;
            status = lima.bind(tango)(sierra, status);
            papa[2] = status;
            output['children'] = papa;
            record = context.bind(tango)(record, output);
            output = new Array(4);
            output[0] = record;
            papa = _closure1_slot14;
            record = kilo[foxtrot];
            record = sizing.bind(tango)(record);
            context = record.FormHint;
            record = {};
            status = kilo[update];
            status = sizing.bind(tango)(status);
            quebec = status.intl;
            lima = quebec.format;
            status = kilo[update];
            status = sizing.bind(tango)(status);
            status = status.t;
            sierra = status.qjjvqK;
            status = {};
            variable36 = 8;
            status['maxSize'] = variable36;
            status = lima.bind(quebec)(sierra, status);
            record['children'] = status;
            record = papa.bind(tango)(context, record);
            output[1] = record;
            papa = _closure1_slot14;
            record = kilo[foxtrot];
            record = sizing.bind(tango)(record);
            context = record.FormSection;
            record = {};
            lima = _closure1_slot14;
            status = kilo[foxtrot];
            status = sizing.bind(tango)(status);
            sierra = status.FormSwitchRow;
            status = {};
            quebec = kilo[update];
            quebec = sizing.bind(tango)(quebec);
            variable37 = quebec.intl;
            variable36 = variable37.string;
            quebec = kilo[update];
            quebec = sizing.bind(tango)(quebec);
            quebec = quebec.t;
            quebec = quebec.w8j+yc;
            quebec = variable36.bind(variable37)(quebec);
            status['label'] = quebec;
            status['value'] = equality;
            equality = function(argFoo) { // Original name: updateImageDescriptions
                zulu = _closure1_slot22;
                mike = {};
                tango = _closure2_slot1;
                mike['videoUploadQuality'] = tango;
                tango = argFoo;
                mike['viewImageDescriptions'] = tango;
                tango = _closure2_slot0;
                mike['lowQualityImageMode'] = tango;
                entity = _closure2_slot2;
                mike['dataSavingMode'] = entity;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            status['onValueChange'] = equality;
            status = lima.bind(tango)(sierra, status);
            record['children'] = status;
            record = papa.bind(tango)(context, record);
            output[2] = record;
            papa = _closure1_slot14;
            record = kilo[foxtrot];
            record = sizing.bind(tango)(record);
            context = record.FormHint;
            record = {};
            status = kilo[update];
            status = sizing.bind(tango)(status);
            lima = status.intl;
            sierra = lima.string;
            status = kilo[update];
            status = sizing.bind(tango)(status);
            status = status.t;
            status = status.T0rbtL;
            status = sierra.bind(lima)(status);
            record['children'] = status;
            record = papa.bind(tango)(context, record);
            output[3] = record;
            offset['children'] = output;
            offset = romeo.bind(tango)(yankee, offset);
            options[1] = offset;
            yankee = _closure1_slot15;
            offset = verify.Fragment;
            verify = {};
            record = _closure1_slot15;
            romeo = kilo[foxtrot];
            romeo = sizing.bind(tango)(romeo);
            output = romeo.FormSection;
            romeo = {};
            context = kilo[update];
            context = sizing.bind(tango)(context);
            status = context.intl;
            papa = status.string;
            context = kilo[update];
            context = sizing.bind(tango)(context);
            context = context.t;
            context = context.PXq9f3;
            papa = papa.bind(status)(context);
            context = papa.toUpperCase;
            context = context.bind(papa)();
            romeo['title'] = context;
            status = _closure1_slot14;
            context = kilo[foxtrot];
            context = sizing.bind(tango)(context);
            papa = context.FormRow;
            context = {};
            sierra = kilo[update];
            sierra = sizing.bind(tango)(sierra);
            equality = sierra.intl;
            lima = equality.string;
            sierra = kilo[update];
            sierra = sizing.bind(tango)(sierra);
            sierra = sierra.t;
            sierra = sierra.cWGW5e;
            sierra = lima.bind(equality)(sierra);
            context['label'] = sierra;
            sierra = function() { // Original name: onPress
                zulu = _closure2_slot4;
                entity = _closure1_slot9;
                mike = entity.BEST;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            context['onPress'] = sierra;
            lima = _closure1_slot9;
            sierra = lima.BEST;
            sierra = whiskey.bind(tango)(sierra);
            context['trailing'] = sierra;
            papa = status.bind(tango)(papa, context);
            context = new Array(5);
            context[0] = papa;
            sierra = _closure1_slot14;
            papa = kilo[foxtrot];
            papa = sizing.bind(tango)(papa);
            status = papa.FormDivider;
            papa = {};
            papa = sierra.bind(tango)(status, papa);
            context[1] = papa;
            sierra = _closure1_slot14;
            papa = kilo[foxtrot];
            papa = sizing.bind(tango)(papa);
            status = papa.FormRow;
            papa = {};
            equality = kilo[update];
            equality = sizing.bind(tango)(equality);
            variable36 = equality.intl;
            quebec = variable36.string;
            equality = kilo[update];
            equality = sizing.bind(tango)(equality);
            equality = equality.t;
            equality = equality.5hKnyM;
            equality = quebec.bind(variable36)(equality);
            papa['label'] = equality;
            equality = function() { // Original name: onPress
                zulu = _closure2_slot4;
                entity = _closure1_slot9;
                mike = entity.STANDARD;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            papa['onPress'] = equality;
            equality = lima.STANDARD;
            equality = whiskey.bind(tango)(equality);
            papa['trailing'] = equality;
            papa = sierra.bind(tango)(status, papa);
            context[2] = papa;
            sierra = _closure1_slot14;
            papa = kilo[foxtrot];
            papa = sizing.bind(tango)(papa);
            status = papa.FormDivider;
            papa = {};
            papa = sierra.bind(tango)(status, papa);
            context[3] = papa;
            sierra = _closure1_slot14;
            papa = kilo[foxtrot];
            papa = sizing.bind(tango)(papa);
            status = papa.FormRow;
            papa = {};
            equality = kilo[update];
            equality = sizing.bind(tango)(equality);
            variable36 = equality.intl;
            quebec = variable36.string;
            equality = kilo[update];
            equality = sizing.bind(tango)(equality);
            equality = equality.t;
            equality = equality.y5k4ZG;
            equality = quebec.bind(variable36)(equality);
            papa['label'] = equality;
            equality = function() { // Original name: onPress
                zulu = _closure2_slot4;
                entity = _closure1_slot9;
                mike = entity.DATA_SAVER;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            papa['onPress'] = equality;
            lima = lima.DATA_SAVER;
            lima = whiskey.bind(tango)(lima);
            papa['trailing'] = lima;
            papa = sierra.bind(tango)(status, papa);
            context[4] = papa;
            romeo['children'] = context;
            output = record.bind(tango)(output, romeo);
            romeo = new Array(3);
            romeo[0] = output;
            context = _closure1_slot14;
            output = kilo[foxtrot];
            output = sizing.bind(tango)(output);
            record = output.FormHint;
            output = {};
            papa = kilo[update];
            papa = sizing.bind(tango)(papa);
            lima = papa.intl;
            sierra = lima.format;
            papa = kilo[update];
            papa = sizing.bind(tango)(papa);
            papa = papa.t;
            status = papa.Up+hSE;
            papa = {};
            whiskey = 'https://support.discord.com/hc/articles/9665451164951';
            papa['supportURL'] = whiskey;
            papa = sierra.bind(lima)(status, papa);
            output['children'] = papa;
            output = context.bind(tango)(record, output);
            romeo[1] = output;
            output = _closure1_slot14;
            kilo = kilo[foxtrot];
            kilo = sizing.bind(tango)(kilo);
            sizing = kilo.FormHint;
            kilo = {};
            result = null;
            if(echo) { _fun97645_ip = 1836; continue _fun97645 }
 1825:
            echo = function() { // Original name: renderNitroUpsellText
                _fun97655: for(var _fun97655_ip = 0; ; ) switch(_fun97655_ip) {
 0:
                    options = _closure1_slot14;
                    zulu = _closure1_slot0;
                    tango = _closure1_slot2;
                    entity = 17;
                    oscar = tango[entity];
                    report = undefined;
                    oscar = zulu.bind(report)(oscar);
                    oscar = oscar.FormRow;
                    golf = oscar.Icon;
                    oscar = {};
                    offset = _closure1_slot1;
                    verify = 19;
                    verify = tango[verify];
                    verify = offset.bind(report)(verify);
                    oscar['source'] = verify;
                    verify = 20;
                    verify = tango[verify];
                    verify = offset.bind(report)(verify);
                    verify = verify.Sizes;
                    verify = verify.SMALL;
                    oscar['size'] = verify;
                    verify = 9;
                    verify = tango[verify];
                    verify = offset.bind(report)(verify);
                    verify = verify.unsafe_rawColors;
                    verify = verify.PRIMARY_400;
                    oscar['color'] = verify;
                    verify = options.bind(report)(golf, oscar);
                    options = _closure1_slot14;
                    oscar = tango[entity];
                    oscar = zulu.bind(report)(oscar);
                    oscar = oscar.FormRow;
                    golf = oscar.Label;
                    oscar = {};
                    offset = ' ';
                    oscar['text'] = offset;
                    offset = {};
                    yankee = 16;
                    offset['height'] = yankee;
                    oscar['style'] = offset;
                    options = options.bind(report)(golf, oscar);
                    golf = _closure1_slot14;
                    entity = tango[entity];
                    entity = zulu.bind(report)(entity);
                    entity = entity.FormRow;
                    oscar = entity.Label;
                    entity = {};
                    offset = {'fontSize': 14, 'height': 16};
                    entity['style'] = offset;
                    offset = 21;
                    yankee = tango[offset];
                    yankee = zulu.bind(report)(yankee);
                    foxtrot = yankee.intl;
                    romeo = foxtrot.format;
                    offset = tango[offset];
                    offset = zulu.bind(report)(offset);
                    offset = offset.t;
                    yankee = offset.uW1zur;
                    offset = {};
                    backup = function() { // Original name: onClick
                        tango = _closure1_slot1;
                        zulu = _closure1_slot2;
                        mike = 16;
                        zulu = zulu[mike];
                        mike = undefined;
                        tango = tango.bind(mike)(zulu);
                        zulu = tango.setSection;
                        entity = _closure1_slot12;
                        mike = entity.PREMIUM;
                        mike = zulu.bind(tango)(mike);
                        tango = _closure2_slot5;
                        zulu = tango.push;
                        mike = entity.PREMIUM;
                        entity = {};
                        report = true;
                        entity['isFromTextSection'] = report;
                        entity = zulu.bind(tango)(mike, entity);
                        entity = undefined;
                        return entity;
                    };
                    offset['onClick'] = backup;
                    offset = romeo.bind(foxtrot)(yankee, offset);
                    entity['text'] = offset;
                    golf = golf.bind(report)(oscar, entity);
                    entity = 22;
                    entity = tango[entity];
                    zulu = zulu.bind(report)(entity);
                    entity = zulu.isAndroid;
                    entity = entity.bind(zulu)();
                    tango = _closure1_slot15;
                    if(entity) { _fun97655_ip = 369; continue _fun97655 }
 321:
                    zulu = _closure1_slot4;
                    entity = {};
                    oscar = _closure1_slot17;
                    oscar = oscar.nitroText;
                    entity['style'] = oscar;
                    oscar = new Array(3);
                    oscar[0] = verify;
                    oscar[1] = options;
                    oscar[2] = golf;
                    entity['children'] = oscar;
                    entity = tango.bind(report)(zulu, entity);
                    _fun97655_ip = 401; continue _fun97655;
 369:
                    zulu = _closure1_slot16;
                    mike = {};
                    oscar = new Array(3);
                    oscar[0] = verify;
                    oscar[1] = options;
                    oscar[2] = golf;
                    mike['children'] = oscar;
                    entity = tango.bind(report)(zulu, mike);
 401:
                    return entity;
                }
            };
            result = echo.bind(tango)();
 1836:
            kilo['children'] = result;
            kilo = output.bind(tango)(sizing, kilo);
            romeo[2] = kilo;
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[2] = verify;
            romeo = _closure1_slot15;
            verify = _closure1_slot3;
            yankee = verify.Fragment;
            offset = {};
            result = _closure1_slot14;
            echo = _closure1_slot0;
            sizing = _closure1_slot2;
            kilo = sizing[foxtrot];
            kilo = echo.bind(tango)(kilo);
            output = kilo.FormSection;
            kilo = {};
            record = sizing[update];
            record = echo.bind(tango)(record);
            papa = record.intl;
            context = papa.string;
            record = sizing[update];
            record = echo.bind(tango)(record);
            record = record.t;
            record = record.fyG8t7;
            record = context.bind(papa)(record);
            kilo['title'] = record;
            papa = _closure1_slot14;
            record = sizing[foxtrot];
            record = echo.bind(tango)(record);
            context = record.FormSwitchRow;
            record = {};
            status = sizing[update];
            status = echo.bind(tango)(status);
            lima = status.intl;
            sierra = lima.string;
            status = sizing[update];
            status = echo.bind(tango)(status);
            status = status.t;
            status = status.ix8XIi;
            status = sierra.bind(lima)(status);
            record['label'] = status;
            record['value'] = target;
            target = function(argFoo) { // Original name: toggleDataSavingMode
                zulu = _closure1_slot20;
                mike = {};
                tango = _closure2_slot1;
                mike['videoUploadQuality'] = tango;
                tango = _closure2_slot3;
                mike['viewImageDescriptions'] = tango;
                entity = _closure2_slot0;
                mike['lowQualityImageMode'] = entity;
                entity = argFoo;
                mike['dataSavingMode'] = entity;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            record['onValueChange'] = target;
            record = papa.bind(tango)(context, record);
            kilo['children'] = record;
            output = result.bind(tango)(output, kilo);
            kilo = new Array(2);
            kilo[0] = output;
            record = _closure1_slot14;
            output = sizing[foxtrot];
            output = echo.bind(tango)(output);
            result = output.FormHint;
            output = {};
            context = sizing[update];
            context = echo.bind(tango)(context);
            target = context.intl;
            papa = target.string;
            context = sizing[update];
            context = echo.bind(tango)(context);
            context = context.t;
            context = context.wC0+Pj;
            context = papa.bind(target)(context);
            output['children'] = context;
            output = record.bind(tango)(result, output);
            kilo[1] = output;
            offset['children'] = kilo;
            offset = romeo.bind(tango)(yankee, offset);
            options[3] = offset;
            romeo = _closure1_slot14;
            offset = sizing[foxtrot];
            offset = echo.bind(tango)(offset);
            yankee = offset.FormSection;
            offset = {};
            kilo = sizing[update];
            kilo = echo.bind(tango)(kilo);
            result = kilo.intl;
            output = result.string;
            kilo = sizing[update];
            kilo = echo.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.PWZOn5;
            kilo = output.bind(result)(kilo);
            offset['title'] = kilo;
            result = _closure1_slot14;
            kilo = sizing[foxtrot];
            kilo = echo.bind(tango)(kilo);
            output = kilo.FormSwitchRow;
            kilo = {};
            record = sizing[update];
            record = echo.bind(tango)(record);
            papa = record.intl;
            context = papa.string;
            record = sizing[update];
            record = echo.bind(tango)(record);
            record = record.t;
            record = record.xX0ZTE;
            record = context.bind(papa)(record);
            kilo['label'] = record;
            kilo['value'] = sequence;
            sequence = sizing[source];
            sequence = echo.bind(tango)(sequence);
            sequence = sequence.RenderEmbeds;
            sequence = sequence.updateSetting;
            kilo['onValueChange'] = sequence;
            kilo = result.bind(tango)(output, kilo);
            offset['children'] = kilo;
            offset = romeo.bind(tango)(yankee, offset);
            options[4] = offset;
            romeo = _closure1_slot14;
            offset = sizing[foxtrot];
            offset = echo.bind(tango)(offset);
            yankee = offset.FormSection;
            offset = {};
            kilo = sizing[update];
            kilo = echo.bind(tango)(kilo);
            result = kilo.intl;
            output = result.string;
            kilo = sizing[update];
            kilo = echo.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.sMOuub;
            kilo = output.bind(result)(kilo);
            offset['title'] = kilo;
            result = _closure1_slot14;
            kilo = sizing[foxtrot];
            kilo = echo.bind(tango)(kilo);
            output = kilo.FormSwitchRow;
            kilo = {};
            sequence = sizing[update];
            sequence = echo.bind(tango)(sequence);
            context = sequence.intl;
            record = context.string;
            sequence = sizing[update];
            sequence = echo.bind(tango)(sequence);
            sequence = sequence.t;
            sequence = sequence.Iv24sr;
            sequence = record.bind(context)(sequence);
            kilo['label'] = sequence;
            kilo['value'] = control;
            source = sizing[source];
            source = echo.bind(tango)(source);
            source = source.RenderReactions;
            source = source.updateSetting;
            kilo['onValueChange'] = source;
            kilo = result.bind(tango)(output, kilo);
            offset['children'] = kilo;
            offset = romeo.bind(tango)(yankee, offset);
            options[5] = offset;
            yankee = _closure1_slot15;
            offset = verify.Fragment;
            verify = {};
            output = _closure1_slot14;
            romeo = sizing[foxtrot];
            romeo = echo.bind(tango)(romeo);
            kilo = romeo.FormSection;
            romeo = {};
            result = sizing[update];
            result = echo.bind(tango)(result);
            control = result.intl;
            source = control.string;
            result = sizing[update];
            result = echo.bind(tango)(result);
            result = result.t;
            result = result.BkuOOz;
            result = source.bind(control)(result);
            romeo['title'] = result;
            control = _closure1_slot14;
            result = sizing[foxtrot];
            result = echo.bind(tango)(result);
            source = result.FormSwitchRow;
            result = {};
            sequence = sizing[update];
            sequence = echo.bind(tango)(sequence);
            context = sequence.intl;
            record = context.string;
            sequence = sizing[update];
            sequence = echo.bind(tango)(sequence);
            sequence = sequence.t;
            sequence = sequence.3340dX;
            sequence = record.bind(context)(sequence);
            result['label'] = sequence;
            sequence = false;
            sequence = sequence !== config;
            result['value'] = sequence;
            vacuum = function(argFoo) { // Original name: handleSync
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 12;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.setShouldSyncTextSettings;
                mike = argFoo;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            result['onValueChange'] = vacuum;
            result = control.bind(tango)(source, result);
            romeo['children'] = result;
            kilo = output.bind(tango)(kilo, romeo);
            romeo = new Array(2);
            romeo[0] = kilo;
            kilo = _closure1_slot14;
            foxtrot = sizing[foxtrot];
            foxtrot = echo.bind(tango)(foxtrot);
            backup = foxtrot.FormHint;
            foxtrot = {};
            output = sizing[update];
            output = echo.bind(tango)(output);
            result = output.intl;
            output = result.string;
            sizing = sizing[update];
            sizing = echo.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.p4IKEx;
            sizing = output.bind(result)(sizing);
            foxtrot['children'] = sizing;
            foxtrot = kilo.bind(tango)(backup, foxtrot);
            romeo[1] = foxtrot;
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[6] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = options;
    options = function(argFoo) { // Original name: setStickerAutocomplete
        tango = argFoo;
        oscar = _closure1_slot1;
        report = _closure1_slot2;
        entity = 10;
        zulu = report[entity];
        entity = undefined;
        options = oscar.bind(entity)(zulu);
        golf = options.track;
        zulu = _closure1_slot10;
        oscar = zulu.STICKERS_IN_AUTOCOMPLETE_TOGGLED;
        zulu = {};
        zulu['enabled'] = tango;
        verify = {};
        offset = _closure1_slot11;
        offset = offset.SETTINGS_TEXT_AND_IMAGES;
        verify['section'] = offset;
        zulu['location'] = verify;
        zulu = golf.bind(options)(oscar, zulu);
        zulu = _closure1_slot0;
        mike = 11;
        mike = report[mike];
        mike = zulu.bind(entity)(mike);
        zulu = mike.IncludeStickersInAutocomplete;
        mike = zulu.updateSetting;
        mike = mike.bind(zulu)(tango);
        return entity;
    };
    zulu['setStickerAutocomplete'] = options;
    golf = function(argFoo) { // Original name: setLowQualityImageMode
        entity = argFoo;
        romeo = entity.videoUploadQuality;
        yankee = entity.viewImageDescriptions;
        report = entity.lowQualityImageMode;
        verify = entity.dataSavingMode;
        tango = _closure1_slot19;
        entity = undefined;
        foxtrot = 'low_quality_image_mode';
        backup = undefined;
        offset = report;
        zulu = backup[tango](foxtrot, romeo, yankee, offset, verify, options);
        zulu = _closure1_slot1;
        tango = _closure1_slot2;
        mike = 12;
        mike = tango[mike];
        tango = zulu.bind(entity)(mike);
        zulu = tango.updatedUnsyncedSettings;
        mike = {};
        mike['lowQualityImageMode'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['setLowQualityImageMode'] = golf;
    zulu['setDataSavingMode'] = oscar;
    zulu['setVideoUploadQuality'] = report;
    zulu['setImageDescriptions'] = tango;
    zulu['CustomRendererSetting'] = mike;
    return entity;
})();