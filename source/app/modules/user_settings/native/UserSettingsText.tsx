// app/modules/user_settings/native/UserSettingsText.tsx
export default (function(argFoo, argBar, argBaz, argCor, argGra, argFre, argPlu) {
    verify = argBar;
    kiloes = argBaz;
    zuuluu = argFre;
    offset = argPlu;
    var _closure1_slot0 = verify;
    var _closure1_slot1 = kiloes;
    var _closure1_slot2 = offset;
    entity = function(argFoo, argBar, argBaz, argCor, argGra) { // Original name: trackSettingsUpdated
        tangon = _closure1_slot1;
        zuuluu = _closure1_slot2;
        entity = 10;
        zuuluu = zuuluu[entity];
        entity = undefined;
        report = tangon.bind(entity)(zuuluu);
        tangon = report.track;
        michal = _closure1_slot10;
        zuuluu = michal.IMAGE_VIDEO_DATA_SETTINGS_UPDATED;
        michal = {};
        oscard = argBar;
        michal['video_upload_quality'] = oscard;
        oscard = argBaz;
        michal['image_descriptions'] = oscard;
        oscard = argCor;
        michal['low_quality_image_mode'] = oscard;
        oscard = argGra;
        michal['data_saving_mode'] = oscard;
        oscard = argFoo;
        michal['updated_setting'] = oscard;
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    var _closure1_slot19 = entity;
    oscard = function(argFoo) { // Original name: setDataSavingMode
        entity = argFoo;
        romeon = entity.videoUploadQuality;
        yankee = entity.viewImageDescriptions;
        offset = entity.lowQualityImageMode;
        report = entity.dataSavingMode;
        tangon = _closure1_slot19;
        entity = undefined;
        foxtra = 'data_saving_mode';
        backup = undefined;
        verify = report;
        zuuluu = backup[tangon](foxtra, romeon, yankee, offset, verify, option);
        zuuluu = _closure1_slot1;
        tangon = _closure1_slot2;
        michal = 12;
        michal = tangon[michal];
        tangon = zuuluu.bind(entity)(michal);
        zuuluu = tangon.updatedUnsyncedSettings;
        michal = {};
        michal['dataSavingMode'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    var _closure1_slot20 = oscard;
    report = function(argFoo) { // Original name: setVideoUploadQuality
        entity = argFoo;
        report = entity.videoUploadQuality;
        yankee = entity.viewImageDescriptions;
        offset = entity.lowQualityImageMode;
        verify = entity.dataSavingMode;
        tangon = _closure1_slot19;
        entity = undefined;
        foxtra = 'video_upload_quality';
        backup = undefined;
        romeon = report;
        zuuluu = backup[tangon](foxtra, romeon, yankee, offset, verify, option);
        zuuluu = _closure1_slot1;
        tangon = _closure1_slot2;
        michal = 12;
        michal = tangon[michal];
        tangon = zuuluu.bind(entity)(michal);
        zuuluu = tangon.updatedUnsyncedSettings;
        michal = {};
        michal['videoUploadQuality'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    var _closure1_slot21 = report;
    tangon = function(argFoo) { // Original name: setImageDescriptions
        entity = argFoo;
        romeon = entity.videoUploadQuality;
        tangon = entity.viewImageDescriptions;
        offset = entity.lowQualityImageMode;
        verify = entity.dataSavingMode;
        report = _closure1_slot19;
        entity = undefined;
        foxtra = 'image_descriptions';
        backup = undefined;
        yankee = tangon;
        zuuluu = backup[report](foxtra, romeon, yankee, offset, verify, option);
        zuuluu = _closure1_slot0;
        report = _closure1_slot2;
        michal = 11;
        michal = report[michal];
        michal = zuuluu.bind(entity)(michal);
        zuuluu = michal.ViewImageDescriptions;
        michal = zuuluu.updateSetting;
        michal = michal.bind(zuuluu)(tangon);
        return entity;
    };
    var _closure1_slot22 = tangon;
    michal = function() { // Original name: CustomRendererSetting
        entity = _closure1_slot18;
        tangon = undefined;
        report = entity.bind(tangon)();
        golfie = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 13;
        entity = verify[entity];
        oscard = golfie.bind(tangon)(entity);
        zuuluu = oscard.useStateFromStores;
        entity = _closure1_slot8;
        michal = new Array(1);
        michal[0] = entity;
        entity = function() {
            entity = _closure1_slot8;
            entity = entity.useMobileChatCustomRenderer;
            return entity;
        };
        foxtra = zuuluu.bind(oscard)(michal, entity);
        zuuluu = _closure1_slot15;
        michal = _closure1_slot4;
        entity = {};
        report = report.container;
        entity['style'] = report;
        yankee = _closure1_slot14;
        oscard = 17;
        report = verify[oscard];
        report = golfie.bind(tangon)(report);
        offset = report.FormSwitchRow;
        report = {};
        backup = 'Use Custom Renderer';
        report['label'] = backup;
        report['value'] = foxtra;
        romeon = function(argFoo) { // Original name: onValueChange
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 12;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.updatedUnsyncedSettings;
            michal = {};
            report = argFoo;
            michal['useMobileChatCustomRenderer'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        report['onValueChange'] = romeon;
        offset = yankee.bind(tangon)(offset, report);
        report = new Array(2);
        report[0] = offset;
        option = _closure1_slot14;
        oscard = verify[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.FormHint;
        oscard = {};
        verify = 'If you see any issues with this enabled, disable this and try to reproduce it again. If that fixes it, then please report it to Discord Testers > #mcr-bug-reports. Thanks!';
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot23 = michal;
    entity = global;
    romeon = entity.Object;
    yankee = romeon.defineProperty;
    option = {};
    entity = true;
    option['value'] = entity;
    entity = '__esModule';
    entity = yankee.bind(romeon)(zuuluu, entity, option);
    entity = 0;
    yankee = offset[entity];
    option = argCor;
    entity = undefined;
    option = option.bind(entity)(yankee);
    var _closure1_slot3 = option;
    backup = 1;
    option = offset[backup];
    option = verify.bind(entity)(option);
    foxtra = option.StyleSheet;
    option = option.View;
    var _closure1_slot4 = option;
    option = 2;
    option = offset[option];
    option = kiloes.bind(entity)(option);
    var _closure1_slot5 = option;
    option = 3;
    option = offset[option];
    option = kiloes.bind(entity)(option);
    var _closure1_slot6 = option;
    option = 4;
    option = offset[option];
    option = kiloes.bind(entity)(option);
    var _closure1_slot7 = option;
    option = 5;
    yankee = offset[option];
    yankee = kiloes.bind(entity)(yankee);
    var _closure1_slot8 = yankee;
    option = offset[option];
    option = verify.bind(entity)(option);
    option = option.VideoQualitySettings;
    var _closure1_slot9 = option;
    option = 6;
    option = offset[option];
    option = verify.bind(entity)(option);
    sizing = option.Fonts;
    yankee = option.AnalyticEvents;
    var _closure1_slot10 = yankee;
    yankee = option.AnalyticsSections;
    var _closure1_slot11 = yankee;
    option = option.UserSettingsSections;
    var _closure1_slot12 = option;
    option = 7;
    option = offset[option];
    option = verify.bind(entity)(option);
    option = option.TitleStyleType;
    var _closure1_slot13 = option;
    option = 8;
    option = offset[option];
    option = verify.bind(entity)(option);
    yankee = option.jsx;
    var _closure1_slot14 = yankee;
    yankee = option.jsxs;
    var _closure1_slot15 = yankee;
    option = option.Fragment;
    var _closure1_slot16 = option;
    romeon = foxtra.create;
    yankee = {};
    option = {};
    option['flex'] = backup;
    yankee['flex'] = option;
    backup = {'position': 'absolute', 'top': 4294967256, 'right': 0, 'left': 0, 'backgroundColor': null, 'justifyContent': 'center', 'alignItems': 'center', 'paddingTop': 5, 'paddingBottom': 4};
    option = 9;
    output = offset[option];
    output = kiloes.bind(entity)(output);
    output = output.unsafe_rawColors;
    output = output.GREEN_360;
    backup['backgroundColor'] = output;
    yankee['banner'] = backup;
    backup = {};
    output = offset[option];
    output = kiloes.bind(entity)(output);
    output = output.unsafe_rawColors;
    output = output.WHITE_500;
    backup['color'] = output;
    sizing = sizing.PRIMARY_SEMIBOLD;
    backup['fontFamily'] = sizing;
    sizing = 14;
    backup['fontSize'] = sizing;
    yankee['cacheClearedText'] = backup;
    backup = {'display': 'flex', 'flex': 1, 'paddingLeft': 12, 'flexDirection': 'row', 'fontSize': 12, 'maxHeight': 16};
    yankee['nitroText'] = backup;
    yankee = romeon.bind(foxtra)(yankee);
    var _closure1_slot17 = yankee;
    yankee = 23;
    yankee = offset[yankee];
    foxtra = verify.bind(entity)(yankee);
    romeon = foxtra.createStyles;
    yankee = {};
    backup = {};
    option = offset[option];
    option = kiloes.bind(entity)(option);
    option = option.colors;
    option = option.INFO_HELP_BACKGROUND;
    backup['backgroundColor'] = option;
    option = 24;
    backup['paddingBottom'] = option;
    yankee['container'] = backup;
    yankee = romeon.bind(foxtra)(yankee);
    var _closure1_slot18 = yankee;
    option = offset[option];
    offset = verify.bind(entity)(option);
    verify = offset.fileFinishedImporting;
    option = 'modules/user_settings/native/UserSettingsText.tsx';
    option = verify.bind(offset)(option);
    option = function() { // Original name: UserSettingsText
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            oscard = _closure1_slot0;
            report = _closure1_slot2;
            source = 11;
            entity = report[source];
            tangon = undefined;
            entity = oscard.bind(tangon)(entity);
            michal = entity.InlineAttachmentMedia;
            entity = michal.useSetting;
            quebec = entity.bind(michal)();
            entity = report[source];
            entity = oscard.bind(tangon)(entity);
            michal = entity.InlineEmbedMedia;
            entity = michal.useSetting;
            limora = entity.bind(michal)();
            entity = report[source];
            entity = oscard.bind(tangon)(entity);
            michal = entity.RenderEmbeds;
            entity = michal.useSetting;
            sequen = entity.bind(michal)();
            entity = report[source];
            entity = oscard.bind(tangon)(entity);
            michal = entity.RenderReactions;
            entity = michal.useSetting;
            ctrled = entity.bind(michal)();
            entity = 13;
            michal = report[entity];
            option = oscard.bind(tangon)(michal);
            golfie = option.useStateFromStoresObject;
            michal = _closure1_slot8;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                entity = {};
                zuuluu = _closure1_slot8;
                zuuluu = zuuluu.dataSavingMode;
                entity['lowQualityImageMode'] = zuuluu;
                zuuluu = _closure1_slot8;
                zuuluu = zuuluu.videoUploadQuality;
                entity['videoUploadQuality'] = zuuluu;
                michal = _closure1_slot8;
                michal = michal.dataSavingMode;
                entity['dataSavingMode'] = michal;
                return entity;
            };
            michal = golfie.bind(option)(zuuluu, michal);
            zuuluu = michal.lowQualityImageMode;
            var _closure2_slot0 = zuuluu;
            zuuluu = michal.videoUploadQuality;
            var _closure2_slot1 = zuuluu;
            target = michal.dataSavingMode;
            var _closure2_slot2 = target;
            michal = report[entity];
            option = oscard.bind(tangon)(michal);
            golfie = option.useStateFromStores;
            michal = _closure1_slot6;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                michal = _closure1_slot6;
                entity = michal.getPremiumTypeSubscription;
                entity = entity.bind(michal)();
                return entity;
            };
            option = golfie.bind(option)(zuuluu, michal);
            michal = report[entity];
            verify = oscard.bind(tangon)(michal);
            golfie = verify.useStateFromStores;
            michal = _closure1_slot5;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                michal = _closure1_slot5;
                entity = michal.getCurrentUser;
                entity = entity.bind(michal)();
                return entity;
            };
            golfie = golfie.bind(verify)(zuuluu, michal);
            michal = 14;
            michal = report[michal];
            zuuluu = oscard.bind(tangon)(michal);
            michal = zuuluu.hasPremiumSubscriptionToDisplay;
            echoed = michal.bind(zuuluu)(golfie, option);
            entity = report[entity];
            golfie = oscard.bind(tangon)(entity);
            zuuluu = golfie.useStateFromStores;
            entity = _closure1_slot7;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot7;
                michal = zuuluu.shouldSync;
                entity = 'text';
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            config = zuuluu.bind(golfie)(michal, entity);
            entity = report[source];
            entity = oscard.bind(tangon)(entity);
            michal = entity.ViewImageDescriptions;
            entity = michal.useSetting;
            equals = entity.bind(michal)();
            var _closure2_slot3 = equals;
            entity = function(argFoo) { // Original name: updateVideoUploadQuality
                zuuluu = _closure1_slot21;
                michal = {};
                entity = argFoo;
                michal['videoUploadQuality'] = entity;
                tangon = _closure2_slot3;
                michal['viewImageDescriptions'] = tangon;
                tangon = _closure2_slot0;
                michal['lowQualityImageMode'] = tangon;
                entity = _closure2_slot2;
                michal['dataSavingMode'] = entity;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            var _closure2_slot4 = entity;
            entity = 15;
            entity = report[entity];
            michal = oscard.bind(tangon)(entity);
            entity = michal.useNavigation;
            entity = entity.bind(michal)();
            var _closure2_slot5 = entity;
            whisks = function(argFoo) { // Original name: isVideoQualitySelected
                tangon = _closure1_slot14;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 17;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                entity = entity.FormRow;
                michal = entity.Checkmark;
                entity = {};
                oscard = _closure2_slot1;
                report = argFoo;
                report = oscard === report;
                entity['selected'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            entity = 18;
            entity = report[entity];
            michal = oscard.bind(tangon)(entity);
            entity = michal.useCanUseCustomChatRenderer;
            entity = entity.bind(michal)();
            offset = entity.canUseRenderer;
            option = entity.forceUseRenderer;
            zuuluu = _closure1_slot14;
            michal = _closure1_slot4;
            entity = {};
            golfie = _closure1_slot17;
            golfie = golfie.flex;
            entity['style'] = golfie;
            golfie = _closure1_slot15;
            foxtra = 17;
            report = report[foxtra];
            report = oscard.bind(tangon)(report);
            oscard = report.Form;
            report = {};
            verify = null;
            if(!offset) { _fun00002_ip = 512; continue _fun00001 }
 491:
            verify = null;
            if(option) { _fun00002_ip = 512; continue _fun00001 }
 496:
            yankee = _closure1_slot14;
            offset = _closure1_slot23;
            option = {};
            verify = yankee.bind(tangon)(offset, option);
 512:
            option = new Array(7);
            option[0] = verify;
            romeon = _closure1_slot15;
            verify = _closure1_slot3;
            yankee = verify.Fragment;
            offset = {};
            cntext = _closure1_slot15;
            sizing = _closure1_slot0;
            kiloes = _closure1_slot2;
            output = kiloes[foxtra];
            output = sizing.bind(tangon)(output);
            record = output.FormSection;
            output = {};
            update = _closure1_slot13;
            update = update.ANDROID_NO_BORDER;
            output['titleStyleType'] = update;
            update = 21;
            papara = kiloes[update];
            papara = sizing.bind(tangon)(papara);
            sierra = papara.intl;
            status = sierra.string;
            papara = kiloes[update];
            papara = sizing.bind(tangon)(papara);
            papara = papara.t;
            papara = papara.U68Dgo;
            papara = status.bind(sierra)(papara);
            output['title'] = papara;
            sierra = _closure1_slot14;
            papara = kiloes[foxtra];
            papara = sizing.bind(tangon)(papara);
            status = papara.FormSwitchRow;
            papara = {};
            variable36 = kiloes[update];
            variable36 = sizing.bind(tangon)(variable36);
            variable38 = variable36.intl;
            variable37 = variable38.string;
            variable36 = kiloes[update];
            variable36 = sizing.bind(tangon)(variable36);
            variable36 = variable36.t;
            variable36 = variable36.U47N1t;
            variable36 = variable37.bind(variable38)(variable36);
            papara['label'] = variable36;
            papara['value'] = limora;
            limora = kiloes[source];
            limora = sizing.bind(tangon)(limora);
            limora = limora.InlineEmbedMedia;
            limora = limora.updateSetting;
            papara['onValueChange'] = limora;
            status = sierra.bind(tangon)(status, papara);
            papara = new Array(3);
            papara[0] = status;
            limora = _closure1_slot14;
            status = kiloes[foxtra];
            status = sizing.bind(tangon)(status);
            sierra = status.FormDivider;
            status = {};
            status = limora.bind(tangon)(sierra, status);
            papara[1] = status;
            limora = _closure1_slot14;
            status = kiloes[foxtra];
            status = sizing.bind(tangon)(status);
            sierra = status.FormSwitchRow;
            status = {};
            variable36 = kiloes[update];
            variable36 = sizing.bind(tangon)(variable36);
            variable38 = variable36.intl;
            variable37 = variable38.string;
            variable36 = kiloes[update];
            variable36 = sizing.bind(tangon)(variable36);
            variable36 = variable36.t;
            variable36 = variable36.VP11Nj;
            variable36 = variable37.bind(variable38)(variable36);
            status['label'] = variable36;
            status['value'] = quebec;
            quebec = kiloes[source];
            quebec = sizing.bind(tangon)(quebec);
            quebec = quebec.InlineAttachmentMedia;
            quebec = quebec.updateSetting;
            status['onValueChange'] = quebec;
            status = limora.bind(tangon)(sierra, status);
            papara[2] = status;
            output['children'] = papara;
            record = cntext.bind(tangon)(record, output);
            output = new Array(4);
            output[0] = record;
            papara = _closure1_slot14;
            record = kiloes[foxtra];
            record = sizing.bind(tangon)(record);
            cntext = record.FormHint;
            record = {};
            status = kiloes[update];
            status = sizing.bind(tangon)(status);
            quebec = status.intl;
            limora = quebec.format;
            status = kiloes[update];
            status = sizing.bind(tangon)(status);
            status = status.t;
            sierra = status.qjjvqK;
            status = {};
            variable36 = 8;
            status['maxSize'] = variable36;
            status = limora.bind(quebec)(sierra, status);
            record['children'] = status;
            record = papara.bind(tangon)(cntext, record);
            output[1] = record;
            papara = _closure1_slot14;
            record = kiloes[foxtra];
            record = sizing.bind(tangon)(record);
            cntext = record.FormSection;
            record = {};
            limora = _closure1_slot14;
            status = kiloes[foxtra];
            status = sizing.bind(tangon)(status);
            sierra = status.FormSwitchRow;
            status = {};
            quebec = kiloes[update];
            quebec = sizing.bind(tangon)(quebec);
            variable37 = quebec.intl;
            variable36 = variable37.string;
            quebec = kiloes[update];
            quebec = sizing.bind(tangon)(quebec);
            quebec = quebec.t;
            quebec = quebec.w8j+yc;
            quebec = variable36.bind(variable37)(quebec);
            status['label'] = quebec;
            status['value'] = equals;
            equals = function(argFoo) { // Original name: updateImageDescriptions
                zuuluu = _closure1_slot22;
                michal = {};
                tangon = _closure2_slot1;
                michal['videoUploadQuality'] = tangon;
                tangon = argFoo;
                michal['viewImageDescriptions'] = tangon;
                tangon = _closure2_slot0;
                michal['lowQualityImageMode'] = tangon;
                entity = _closure2_slot2;
                michal['dataSavingMode'] = entity;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            status['onValueChange'] = equals;
            status = limora.bind(tangon)(sierra, status);
            record['children'] = status;
            record = papara.bind(tangon)(cntext, record);
            output[2] = record;
            papara = _closure1_slot14;
            record = kiloes[foxtra];
            record = sizing.bind(tangon)(record);
            cntext = record.FormHint;
            record = {};
            status = kiloes[update];
            status = sizing.bind(tangon)(status);
            limora = status.intl;
            sierra = limora.string;
            status = kiloes[update];
            status = sizing.bind(tangon)(status);
            status = status.t;
            status = status.T0rbtL;
            status = sierra.bind(limora)(status);
            record['children'] = status;
            record = papara.bind(tangon)(cntext, record);
            output[3] = record;
            offset['children'] = output;
            offset = romeon.bind(tangon)(yankee, offset);
            option[1] = offset;
            yankee = _closure1_slot15;
            offset = verify.Fragment;
            verify = {};
            record = _closure1_slot15;
            romeon = kiloes[foxtra];
            romeon = sizing.bind(tangon)(romeon);
            output = romeon.FormSection;
            romeon = {};
            cntext = kiloes[update];
            cntext = sizing.bind(tangon)(cntext);
            status = cntext.intl;
            papara = status.string;
            cntext = kiloes[update];
            cntext = sizing.bind(tangon)(cntext);
            cntext = cntext.t;
            cntext = cntext.PXq9f3;
            papara = papara.bind(status)(cntext);
            cntext = papara.toUpperCase;
            cntext = cntext.bind(papara)();
            romeon['title'] = cntext;
            status = _closure1_slot14;
            cntext = kiloes[foxtra];
            cntext = sizing.bind(tangon)(cntext);
            papara = cntext.FormRow;
            cntext = {};
            sierra = kiloes[update];
            sierra = sizing.bind(tangon)(sierra);
            equals = sierra.intl;
            limora = equals.string;
            sierra = kiloes[update];
            sierra = sizing.bind(tangon)(sierra);
            sierra = sierra.t;
            sierra = sierra.cWGW5e;
            sierra = limora.bind(equals)(sierra);
            cntext['label'] = sierra;
            sierra = function() { // Original name: onPress
                zuuluu = _closure2_slot4;
                entity = _closure1_slot9;
                michal = entity.BEST;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            cntext['onPress'] = sierra;
            limora = _closure1_slot9;
            sierra = limora.BEST;
            sierra = whisks.bind(tangon)(sierra);
            cntext['trailing'] = sierra;
            papara = status.bind(tangon)(papara, cntext);
            cntext = new Array(5);
            cntext[0] = papara;
            sierra = _closure1_slot14;
            papara = kiloes[foxtra];
            papara = sizing.bind(tangon)(papara);
            status = papara.FormDivider;
            papara = {};
            papara = sierra.bind(tangon)(status, papara);
            cntext[1] = papara;
            sierra = _closure1_slot14;
            papara = kiloes[foxtra];
            papara = sizing.bind(tangon)(papara);
            status = papara.FormRow;
            papara = {};
            equals = kiloes[update];
            equals = sizing.bind(tangon)(equals);
            variable36 = equals.intl;
            quebec = variable36.string;
            equals = kiloes[update];
            equals = sizing.bind(tangon)(equals);
            equals = equals.t;
            equals = equals.5hKnyM;
            equals = quebec.bind(variable36)(equals);
            papara['label'] = equals;
            equals = function() { // Original name: onPress
                zuuluu = _closure2_slot4;
                entity = _closure1_slot9;
                michal = entity.STANDARD;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            papara['onPress'] = equals;
            equals = limora.STANDARD;
            equals = whisks.bind(tangon)(equals);
            papara['trailing'] = equals;
            papara = sierra.bind(tangon)(status, papara);
            cntext[2] = papara;
            sierra = _closure1_slot14;
            papara = kiloes[foxtra];
            papara = sizing.bind(tangon)(papara);
            status = papara.FormDivider;
            papara = {};
            papara = sierra.bind(tangon)(status, papara);
            cntext[3] = papara;
            sierra = _closure1_slot14;
            papara = kiloes[foxtra];
            papara = sizing.bind(tangon)(papara);
            status = papara.FormRow;
            papara = {};
            equals = kiloes[update];
            equals = sizing.bind(tangon)(equals);
            variable36 = equals.intl;
            quebec = variable36.string;
            equals = kiloes[update];
            equals = sizing.bind(tangon)(equals);
            equals = equals.t;
            equals = equals.y5k4ZG;
            equals = quebec.bind(variable36)(equals);
            papara['label'] = equals;
            equals = function() { // Original name: onPress
                zuuluu = _closure2_slot4;
                entity = _closure1_slot9;
                michal = entity.DATA_SAVER;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            papara['onPress'] = equals;
            limora = limora.DATA_SAVER;
            limora = whisks.bind(tangon)(limora);
            papara['trailing'] = limora;
            papara = sierra.bind(tangon)(status, papara);
            cntext[4] = papara;
            romeon['children'] = cntext;
            output = record.bind(tangon)(output, romeon);
            romeon = new Array(3);
            romeon[0] = output;
            cntext = _closure1_slot14;
            output = kiloes[foxtra];
            output = sizing.bind(tangon)(output);
            record = output.FormHint;
            output = {};
            papara = kiloes[update];
            papara = sizing.bind(tangon)(papara);
            limora = papara.intl;
            sierra = limora.format;
            papara = kiloes[update];
            papara = sizing.bind(tangon)(papara);
            papara = papara.t;
            status = papara.Up+hSE;
            papara = {};
            whisks = 'https://support.discord.com/hc/articles/9665451164951';
            papara['supportURL'] = whisks;
            papara = sierra.bind(limora)(status, papara);
            output['children'] = papara;
            output = cntext.bind(tangon)(record, output);
            romeon[1] = output;
            output = _closure1_slot14;
            kiloes = kiloes[foxtra];
            kiloes = sizing.bind(tangon)(kiloes);
            sizing = kiloes.FormHint;
            kiloes = {};
            result = null;
            if(echoed) { _fun00002_ip = 1838; continue _fun00001 }
 1827:
            echoed = function() { // Original name: renderNitroUpsellText
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    option = _closure1_slot14;
                    zuuluu = _closure1_slot0;
                    tangon = _closure1_slot2;
                    entity = 17;
                    oscard = tangon[entity];
                    report = undefined;
                    oscard = zuuluu.bind(report)(oscard);
                    oscard = oscard.FormRow;
                    golfie = oscard.Icon;
                    oscard = {};
                    offset = _closure1_slot1;
                    verify = 19;
                    verify = tangon[verify];
                    verify = offset.bind(report)(verify);
                    oscard['source'] = verify;
                    verify = 20;
                    verify = tangon[verify];
                    verify = offset.bind(report)(verify);
                    verify = verify.Sizes;
                    verify = verify.SMALL;
                    oscard['size'] = verify;
                    verify = 9;
                    verify = tangon[verify];
                    verify = offset.bind(report)(verify);
                    verify = verify.unsafe_rawColors;
                    verify = verify.PRIMARY_400;
                    oscard['color'] = verify;
                    verify = option.bind(report)(golfie, oscard);
                    option = _closure1_slot14;
                    oscard = tangon[entity];
                    oscard = zuuluu.bind(report)(oscard);
                    oscard = oscard.FormRow;
                    golfie = oscard.Label;
                    oscard = {};
                    offset = ' ';
                    oscard['text'] = offset;
                    offset = {};
                    yankee = 16;
                    offset['height'] = yankee;
                    oscard['style'] = offset;
                    option = option.bind(report)(golfie, oscard);
                    golfie = _closure1_slot14;
                    entity = tangon[entity];
                    entity = zuuluu.bind(report)(entity);
                    entity = entity.FormRow;
                    oscard = entity.Label;
                    entity = {};
                    offset = {'fontSize': 14, 'height': 16};
                    entity['style'] = offset;
                    offset = 21;
                    yankee = tangon[offset];
                    yankee = zuuluu.bind(report)(yankee);
                    foxtra = yankee.intl;
                    romeon = foxtra.format;
                    offset = tangon[offset];
                    offset = zuuluu.bind(report)(offset);
                    offset = offset.t;
                    yankee = offset.uW1zur;
                    offset = {};
                    backup = function() { // Original name: onClick
                        tangon = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        michal = 16;
                        zuuluu = zuuluu[michal];
                        michal = undefined;
                        tangon = tangon.bind(michal)(zuuluu);
                        zuuluu = tangon.setSection;
                        entity = _closure1_slot12;
                        michal = entity.PREMIUM;
                        michal = zuuluu.bind(tangon)(michal);
                        tangon = _closure2_slot5;
                        zuuluu = tangon.push;
                        michal = entity.PREMIUM;
                        entity = {};
                        report = true;
                        entity['isFromTextSection'] = report;
                        entity = zuuluu.bind(tangon)(michal, entity);
                        entity = undefined;
                        return entity;
                    };
                    offset['onClick'] = backup;
                    offset = romeon.bind(foxtra)(yankee, offset);
                    entity['text'] = offset;
                    golfie = golfie.bind(report)(oscard, entity);
                    entity = 22;
                    entity = tangon[entity];
                    zuuluu = zuuluu.bind(report)(entity);
                    entity = zuuluu.isAndroid;
                    entity = entity.bind(zuuluu)();
                    tangon = _closure1_slot15;
                    if(entity) { _fun00004_ip = 373; continue _fun00003 }
 325:
                    zuuluu = _closure1_slot4;
                    entity = {};
                    oscard = _closure1_slot17;
                    oscard = oscard.nitroText;
                    entity['style'] = oscard;
                    oscard = new Array(3);
                    oscard[0] = verify;
                    oscard[1] = option;
                    oscard[2] = golfie;
                    entity['children'] = oscard;
                    entity = tangon.bind(report)(zuuluu, entity);
                    _fun00004_ip = 405; continue _fun00003;
 373:
                    zuuluu = _closure1_slot16;
                    michal = {};
                    oscard = new Array(3);
                    oscard[0] = verify;
                    oscard[1] = option;
                    oscard[2] = golfie;
                    michal['children'] = oscard;
                    entity = tangon.bind(report)(zuuluu, michal);
 405:
                    return entity;
                }
            };
            result = echoed.bind(tangon)();
 1838:
            kiloes['children'] = result;
            kiloes = output.bind(tangon)(sizing, kiloes);
            romeon[2] = kiloes;
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[2] = verify;
            romeon = _closure1_slot15;
            verify = _closure1_slot3;
            yankee = verify.Fragment;
            offset = {};
            result = _closure1_slot14;
            echoed = _closure1_slot0;
            sizing = _closure1_slot2;
            kiloes = sizing[foxtra];
            kiloes = echoed.bind(tangon)(kiloes);
            output = kiloes.FormSection;
            kiloes = {};
            record = sizing[update];
            record = echoed.bind(tangon)(record);
            papara = record.intl;
            cntext = papara.string;
            record = sizing[update];
            record = echoed.bind(tangon)(record);
            record = record.t;
            record = record.fyG8t7;
            record = cntext.bind(papara)(record);
            kiloes['title'] = record;
            papara = _closure1_slot14;
            record = sizing[foxtra];
            record = echoed.bind(tangon)(record);
            cntext = record.FormSwitchRow;
            record = {};
            status = sizing[update];
            status = echoed.bind(tangon)(status);
            limora = status.intl;
            sierra = limora.string;
            status = sizing[update];
            status = echoed.bind(tangon)(status);
            status = status.t;
            status = status.ix8XIi;
            status = sierra.bind(limora)(status);
            record['label'] = status;
            record['value'] = target;
            target = function(argFoo) { // Original name: toggleDataSavingMode
                zuuluu = _closure1_slot20;
                michal = {};
                tangon = _closure2_slot1;
                michal['videoUploadQuality'] = tangon;
                tangon = _closure2_slot3;
                michal['viewImageDescriptions'] = tangon;
                entity = _closure2_slot0;
                michal['lowQualityImageMode'] = entity;
                entity = argFoo;
                michal['dataSavingMode'] = entity;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            record['onValueChange'] = target;
            record = papara.bind(tangon)(cntext, record);
            kiloes['children'] = record;
            output = result.bind(tangon)(output, kiloes);
            kiloes = new Array(2);
            kiloes[0] = output;
            record = _closure1_slot14;
            output = sizing[foxtra];
            output = echoed.bind(tangon)(output);
            result = output.FormHint;
            output = {};
            cntext = sizing[update];
            cntext = echoed.bind(tangon)(cntext);
            target = cntext.intl;
            papara = target.string;
            cntext = sizing[update];
            cntext = echoed.bind(tangon)(cntext);
            cntext = cntext.t;
            cntext = cntext.wC0+Pj;
            cntext = papara.bind(target)(cntext);
            output['children'] = cntext;
            output = record.bind(tangon)(result, output);
            kiloes[1] = output;
            offset['children'] = kiloes;
            offset = romeon.bind(tangon)(yankee, offset);
            option[3] = offset;
            romeon = _closure1_slot14;
            offset = sizing[foxtra];
            offset = echoed.bind(tangon)(offset);
            yankee = offset.FormSection;
            offset = {};
            kiloes = sizing[update];
            kiloes = echoed.bind(tangon)(kiloes);
            result = kiloes.intl;
            output = result.string;
            kiloes = sizing[update];
            kiloes = echoed.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.PWZOn5;
            kiloes = output.bind(result)(kiloes);
            offset['title'] = kiloes;
            result = _closure1_slot14;
            kiloes = sizing[foxtra];
            kiloes = echoed.bind(tangon)(kiloes);
            output = kiloes.FormSwitchRow;
            kiloes = {};
            record = sizing[update];
            record = echoed.bind(tangon)(record);
            papara = record.intl;
            cntext = papara.string;
            record = sizing[update];
            record = echoed.bind(tangon)(record);
            record = record.t;
            record = record.xX0ZTE;
            record = cntext.bind(papara)(record);
            kiloes['label'] = record;
            kiloes['value'] = sequen;
            sequen = sizing[source];
            sequen = echoed.bind(tangon)(sequen);
            sequen = sequen.RenderEmbeds;
            sequen = sequen.updateSetting;
            kiloes['onValueChange'] = sequen;
            kiloes = result.bind(tangon)(output, kiloes);
            offset['children'] = kiloes;
            offset = romeon.bind(tangon)(yankee, offset);
            option[4] = offset;
            romeon = _closure1_slot14;
            offset = sizing[foxtra];
            offset = echoed.bind(tangon)(offset);
            yankee = offset.FormSection;
            offset = {};
            kiloes = sizing[update];
            kiloes = echoed.bind(tangon)(kiloes);
            result = kiloes.intl;
            output = result.string;
            kiloes = sizing[update];
            kiloes = echoed.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.sMOuub;
            kiloes = output.bind(result)(kiloes);
            offset['title'] = kiloes;
            result = _closure1_slot14;
            kiloes = sizing[foxtra];
            kiloes = echoed.bind(tangon)(kiloes);
            output = kiloes.FormSwitchRow;
            kiloes = {};
            sequen = sizing[update];
            sequen = echoed.bind(tangon)(sequen);
            cntext = sequen.intl;
            record = cntext.string;
            sequen = sizing[update];
            sequen = echoed.bind(tangon)(sequen);
            sequen = sequen.t;
            sequen = sequen.Iv24sr;
            sequen = record.bind(cntext)(sequen);
            kiloes['label'] = sequen;
            kiloes['value'] = ctrled;
            source = sizing[source];
            source = echoed.bind(tangon)(source);
            source = source.RenderReactions;
            source = source.updateSetting;
            kiloes['onValueChange'] = source;
            kiloes = result.bind(tangon)(output, kiloes);
            offset['children'] = kiloes;
            offset = romeon.bind(tangon)(yankee, offset);
            option[5] = offset;
            yankee = _closure1_slot15;
            offset = verify.Fragment;
            verify = {};
            output = _closure1_slot14;
            romeon = sizing[foxtra];
            romeon = echoed.bind(tangon)(romeon);
            kiloes = romeon.FormSection;
            romeon = {};
            result = sizing[update];
            result = echoed.bind(tangon)(result);
            ctrled = result.intl;
            source = ctrled.string;
            result = sizing[update];
            result = echoed.bind(tangon)(result);
            result = result.t;
            result = result.BkuOOz;
            result = source.bind(ctrled)(result);
            romeon['title'] = result;
            ctrled = _closure1_slot14;
            result = sizing[foxtra];
            result = echoed.bind(tangon)(result);
            source = result.FormSwitchRow;
            result = {};
            sequen = sizing[update];
            sequen = echoed.bind(tangon)(sequen);
            cntext = sequen.intl;
            record = cntext.string;
            sequen = sizing[update];
            sequen = echoed.bind(tangon)(sequen);
            sequen = sequen.t;
            sequen = sequen.3340dX;
            sequen = record.bind(cntext)(sequen);
            result['label'] = sequen;
            sequen = false;
            sequen = sequen !== config;
            result['value'] = sequen;
            vacuum = function(argFoo) { // Original name: handleSync
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 12;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.setShouldSyncTextSettings;
                michal = argFoo;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            result['onValueChange'] = vacuum;
            result = ctrled.bind(tangon)(source, result);
            romeon['children'] = result;
            kiloes = output.bind(tangon)(kiloes, romeon);
            romeon = new Array(2);
            romeon[0] = kiloes;
            kiloes = _closure1_slot14;
            foxtra = sizing[foxtra];
            foxtra = echoed.bind(tangon)(foxtra);
            backup = foxtra.FormHint;
            foxtra = {};
            output = sizing[update];
            output = echoed.bind(tangon)(output);
            result = output.intl;
            output = result.string;
            sizing = sizing[update];
            sizing = echoed.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.p4IKEx;
            sizing = output.bind(result)(sizing);
            foxtra['children'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            romeon[1] = foxtra;
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[6] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = option;
    option = function(argFoo) { // Original name: setStickerAutocomplete
        tangon = argFoo;
        oscard = _closure1_slot1;
        report = _closure1_slot2;
        entity = 10;
        zuuluu = report[entity];
        entity = undefined;
        option = oscard.bind(entity)(zuuluu);
        golfie = option.track;
        zuuluu = _closure1_slot10;
        oscard = zuuluu.STICKERS_IN_AUTOCOMPLETE_TOGGLED;
        zuuluu = {};
        zuuluu['enabled'] = tangon;
        verify = {};
        offset = _closure1_slot11;
        offset = offset.SETTINGS_TEXT_AND_IMAGES;
        verify['section'] = offset;
        zuuluu['location'] = verify;
        zuuluu = golfie.bind(option)(oscard, zuuluu);
        zuuluu = _closure1_slot0;
        michal = 11;
        michal = report[michal];
        michal = zuuluu.bind(entity)(michal);
        zuuluu = michal.IncludeStickersInAutocomplete;
        michal = zuuluu.updateSetting;
        michal = michal.bind(zuuluu)(tangon);
        return entity;
    };
    zuuluu['setStickerAutocomplete'] = option;
    golfie = function(argFoo) { // Original name: setLowQualityImageMode
        entity = argFoo;
        romeon = entity.videoUploadQuality;
        yankee = entity.viewImageDescriptions;
        report = entity.lowQualityImageMode;
        verify = entity.dataSavingMode;
        tangon = _closure1_slot19;
        entity = undefined;
        foxtra = 'low_quality_image_mode';
        backup = undefined;
        offset = report;
        zuuluu = backup[tangon](foxtra, romeon, yankee, offset, verify, option);
        zuuluu = _closure1_slot1;
        tangon = _closure1_slot2;
        michal = 12;
        michal = tangon[michal];
        tangon = zuuluu.bind(entity)(michal);
        zuuluu = tangon.updatedUnsyncedSettings;
        michal = {};
        michal['lowQualityImageMode'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['setLowQualityImageMode'] = golfie;
    zuuluu['setDataSavingMode'] = oscard;
    zuuluu['setVideoUploadQuality'] = report;
    zuuluu['setImageDescriptions'] = tangon;
    zuuluu['CustomRendererSetting'] = michal;
    return entity;
})();