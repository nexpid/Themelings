// app/modules/user_settings/native/IgnoredUsersList.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ScrollView;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['marginTop'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingHorizontal'] = romeon;
    tangon['list'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_12;
    verify['marginTop'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['marginBottom'] = offset;
    tangon['sectionLabelStyle'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = function(argFoo) { // Original name: IgnoredUsersList
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            echoed = entity.userIds;
            entity = _closure1_slot7;
            report = undefined;
            romeon = entity.bind(report)();
            tangon = _closure1_slot1;
            golfie = _closure1_slot2;
            entity = 6;
            michal = golfie[entity];
            zuuluu = tangon.bind(report)(michal);
            michal = 7;
            michal = golfie[michal];
            michal = tangon.bind(report)(michal);
            michal = michal.IGNORED_USERS;
            michal = zuuluu.bind(report)(michal);
            tangon = michal.analyticsLocations;
            zuuluu = echoed.length;
            michal = 0;
            if(!(michal !== zuuluu)) { _fun00002_ip = 422; continue _fun00001 }
 85:
            zuuluu = _closure1_slot5;
            output = _closure1_slot0;
            result = _closure1_slot2;
            entity = result[entity];
            entity = output.bind(report)(entity);
            michal = entity.AnalyticsLocationProvider;
            entity = {};
            entity['value'] = tangon;
            tangon = 11;
            tangon = result[tangon];
            tangon = output.bind(report)(tangon);
            golfie = tangon.SafeAreaPaddingView;
            tangon = {};
            kiloes = true;
            tangon['bottom'] = kiloes;
            option = romeon.list;
            tangon['style'] = option;
            offset = _closure1_slot6;
            verify = _closure1_slot3;
            option = {};
            yankee = 12;
            yankee = result[yankee];
            yankee = output.bind(report)(yankee);
            foxtra = yankee.Text;
            yankee = {'style': null, 'variant': 'text-sm/semibold', 'color': 'header-secondary'};
            romeon = romeon.sectionLabelStyle;
            yankee['style'] = romeon;
            romeon = 10;
            backup = result[romeon];
            backup = output.bind(report)(backup);
            source = backup.intl;
            update = source.formatToPlainString;
            backup = result[romeon];
            backup = output.bind(report)(backup);
            backup = backup.t;
            sizing = backup.iNKUhY;
            backup = {};
            ctrled = echoed.length;
            backup['numberOfIgnoredUsers'] = ctrled;
            backup = update.bind(source)(sizing, backup);
            yankee['children'] = backup;
            foxtra = zuuluu.bind(report)(foxtra, yankee);
            yankee = new Array(2);
            yankee[0] = foxtra;
            foxtra = 13;
            foxtra = result[foxtra];
            foxtra = output.bind(report)(foxtra);
            backup = foxtra.TableRowGroup;
            foxtra = {};
            foxtra['hasIcons'] = kiloes;
            sizing = echoed.map;
            kiloes = function(argFoo) {
                report = argFoo;
                tangon = _closure1_slot5;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 14;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                entity['userId'] = report;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            };
            kiloes = sizing.bind(echoed)(kiloes);
            foxtra['children'] = kiloes;
            kiloes = result[romeon];
            kiloes = output.bind(report)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            romeon = result[romeon];
            romeon = output.bind(report)(romeon);
            romeon = romeon.t;
            romeon = romeon.93ZDWF;
            romeon = kiloes.bind(sizing)(romeon);
            romeon = zuuluu.bind(report)(backup, foxtra, romeon);
            yankee[1] = romeon;
            option['children'] = yankee;
            option = offset.bind(report)(verify, option);
            tangon['children'] = option;
            tangon = zuuluu.bind(report)(golfie, tangon);
            entity['children'] = tangon;
            entity = zuuluu.bind(report)(michal, entity);
            _fun00002_ip = 534; continue _fun00001;
 422:
            tangon = _closure1_slot5;
            zuuluu = _closure1_slot1;
            offset = _closure1_slot2;
            michal = 8;
            michal = offset[michal];
            zuuluu = zuuluu.bind(report)(michal);
            michal = {};
            verify = _closure1_slot0;
            oscard = 9;
            oscard = offset[oscard];
            oscard = verify.bind(report)(oscard);
            oscard = oscard.Blocked;
            michal['Illustration'] = oscard;
            oscard = 10;
            golfie = offset[oscard];
            golfie = verify.bind(report)(golfie);
            option = golfie.intl;
            golfie = option.string;
            oscard = offset[oscard];
            oscard = verify.bind(report)(oscard);
            oscard = oscard.t;
            oscard = oscard.PYrWFR;
            oscard = golfie.bind(option)(oscard);
            michal['body'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 534:
            return entity;
        }
    };
    var _closure1_slot8 = tangon;
    tangon = 16;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/IgnoredUsersList.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: ConnectedIgnoredUsersList
        zuuluu = _closure1_slot0;
        tangon = _closure1_slot2;
        michal = 15;
        michal = tangon[michal];
        tangon = undefined;
        oscard = zuuluu.bind(tangon)(michal);
        report = oscard.useStateFromStoresArray;
        michal = _closure1_slot4;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            michal = _closure1_slot4;
            entity = michal.getIgnoredIDs;
            entity = entity.bind(michal)();
            return entity;
        };
        report = report.bind(oscard)(zuuluu, michal);
        zuuluu = _closure1_slot5;
        michal = _closure1_slot8;
        entity = {};
        entity['userIds'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();