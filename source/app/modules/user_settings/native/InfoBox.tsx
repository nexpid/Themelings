// app/modules/user_settings/native/InfoBox.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    report = golfie[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(report);
    yankee = 1;
    michal = golfie[yankee];
    michal = oscard.bind(entity)(michal);
    report = michal.View;
    var _closure1_slot3 = report;
    michal = michal.Image;
    var _closure1_slot4 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.jsx;
    var _closure1_slot5 = report;
    michal = michal.jsxs;
    var _closure1_slot6 = michal;
    michal = 3;
    michal = golfie[michal];
    verify = oscard.bind(entity)(michal);
    option = verify.createStyles;
    michal = {};
    offset = {'borderRadius': null, 'padding': 8, 'borderStyle': 'solid', 'borderWidth': 1, 'borderColor': null, 'backgroundColor': null, 'flexDirection': 'row', 'alignItems': 'center'};
    romeon = 4;
    report = golfie[romeon];
    report = foxtra.bind(entity)(report);
    report = report.radii;
    report = report.xs;
    offset['borderRadius'] = report;
    report = 8;
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.TEXT_LINK;
    offset['borderColor'] = backup;
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INFO_BOX_BACKGROUND;
    offset['backgroundColor'] = backup;
    michal['infoBox'] = offset;
    offset = {};
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INFO_WARNING_FOREGROUND;
    offset['borderColor'] = backup;
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INFO_WARNING_BACKGROUND;
    offset['backgroundColor'] = backup;
    michal['infoBoxWarning'] = offset;
    offset = {};
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.TEXT_LINK;
    offset['tintColor'] = backup;
    offset['marginRight'] = report;
    michal['infoIcon'] = offset;
    offset = {};
    romeon = golfie[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INFO_WARNING_FOREGROUND;
    offset['tintColor'] = romeon;
    michal['infoIconWarning'] = offset;
    offset = {};
    offset['flex'] = yankee;
    michal['infoText'] = offset;
    michal = option.bind(verify)(michal);
    var _closure1_slot7 = michal;
    michal = {};
    option = 'info';
    michal['INFO'] = option;
    option = 'warning';
    michal['WARNING'] = option;
    var _closure1_slot8 = michal;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/user_settings/native/InfoBox.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: InfoBox
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            verify = entity.children;
            option = entity.style;
            foxtra = entity.look;
            tangon = undefined;
            if(!(foxtra === tangon)) { _fun00002_ip = 38; continue _fun00001 }
 25:
            entity = _closure1_slot8;
            foxtra = entity.INFO;
 38:
            entity = _closure1_slot7;
            offset = entity.bind(tangon)();
            golfie = {};
            entity = _closure1_slot8;
            zuuluu = entity.INFO;
            report = offset.infoBox;
            michal = new Array(1);
            michal[0] = report;
            golfie[zuuluu] = michal;
            zuuluu = entity.WARNING;
            report = offset.infoBox;
            michal = new Array(2);
            michal[0] = report;
            report = offset.infoBoxWarning;
            michal[1] = report;
            golfie[zuuluu] = michal;
            backup = {};
            zuuluu = entity.INFO;
            report = offset.infoIcon;
            michal = new Array(1);
            michal[0] = report;
            backup[zuuluu] = michal;
            zuuluu = entity.WARNING;
            report = offset.infoIcon;
            michal = new Array(2);
            michal[0] = report;
            report = offset.infoIconWarning;
            michal[1] = report;
            backup[zuuluu] = michal;
            romeon = {};
            report = entity.INFO;
            zuuluu = _closure1_slot1;
            yankee = _closure1_slot2;
            michal = 5;
            michal = yankee[michal];
            michal = zuuluu.bind(tangon)(michal);
            romeon[report] = michal;
            michal = entity.WARNING;
            entity = 6;
            entity = yankee[entity];
            entity = zuuluu.bind(tangon)(entity);
            romeon[michal] = entity;
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            report = new Array(1);
            report[0] = option;
            sizing = golfie[foxtra];
            kiloes = 1;
            output = report;
            golfie = arraySpread(output, sizing, kiloes);
            entity['style'] = report;
            option = _closure1_slot5;
            golfie = _closure1_slot4;
            report = {};
            backup = backup[foxtra];
            report['style'] = backup;
            romeon = romeon[foxtra];
            report['source'] = romeon;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = golfie;
            golfie = _closure1_slot0;
            oscard = 7;
            oscard = yankee[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {};
            offset = offset.infoText;
            oscard['style'] = offset;
            offset = 'text-sm/semibold';
            oscard['variant'] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['InfoBoxLooks'] = michal;
    return entity;
})();