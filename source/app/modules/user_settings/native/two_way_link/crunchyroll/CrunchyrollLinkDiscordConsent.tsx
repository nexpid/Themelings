// app/modules/user_settings/native/two_way_link/crunchyroll/CrunchyrollLinkDiscordConsent.tsx
export default (function(native1, native2, native3, native4, native5, native6, native7) {
    var5 = native2;
    var3 = native6;
    var6 = native7;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = native4;
    var1 = undefined;
    var4 = var4.bind(var1)(var7);
    var _closure1_slot2 = var4;
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var7 = var4.CRUNCHYROLL_CLIENT_ID;
    var _closure1_slot3 = var7;
    var4 = var4.CRUNCHYROLL_CLIENT_SCOPES;
    var _closure1_slot4 = var4;
    var4 = 2;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.CrunchyrollLinkModalScenes;
    var _closure1_slot5 = var4;
    var4 = 3;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.PlatformTypes;
    var _closure1_slot6 = var4;
    var4 = 4;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.jsx;
    var _closure1_slot7 = var4;
    var4 = 7;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/user_settings/native/two_way_link/crunchyroll/CrunchyrollLinkDiscordConsent.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function CrunchyrollLinkDiscordConsent(arg1) {
        var2 = arg1;
        var9 = var2.callbackCode;
        var8 = var2.callbackState;
        var2 = _closure1_slot0;
        var10 = _closure1_slot1;
        var3 = 5;
        var3 = var10[var3];
        var4 = undefined;
        var5 = var2.bind(var4)(var3);
        var3 = var5.useNavigation;
        var12 = var3.bind(var5)();
        var _closure2_slot0 = var12;
        var11 = _closure1_slot2;
        var6 = var11.useCallback;
        var5 = new Array(1);
        var5[0] = var12;
        var3 = function() {
            var3 = _closure2_slot0;
            var2 = var3.push;
            var1 = _closure1_slot5;
            var1 = var1.SUCCESS;
            var1 = var2.bind(var3)(var1);
            var1 = undefined;
            return var1;
        };
        var6 = var6.bind(var11)(var3, var5);
        var5 = var11.useCallback;
        var3 = new Array(1);
        var3[0] = var12;
        var1 = function() {
            var3 = _closure2_slot0;
            var2 = var3.push;
            var1 = _closure1_slot5;
            var1 = var1.ERROR;
            var1 = var2.bind(var3)(var1);
            var1 = undefined;
            return var1;
        };
        var5 = var5.bind(var11)(var1, var3);
        var3 = _closure1_slot7;
        var1 = 6;
        var1 = var10[var1];
        var1 = var2.bind(var4)(var1);
        var2 = var1.TwoWayLinkDiscordConsent;
        var1 = {};
        var10 = _closure1_slot6;
        var10 = var10.CRUNCHYROLL;
        var1['platformType'] = var10;
        var1['callbackCode'] = var9;
        var1['callbackState'] = var8;
        var8 = _closure1_slot3;
        var1['clientId'] = var8;
        var7 = _closure1_slot4;
        var1['scopes'] = var7;
        var1['onNext'] = var6;
        var1['onError'] = var5;
        var1 = var3.bind(var4)(var2, var1);
        return var1;
    };
    var3['default'] = var2;
    return var1;
})();