// app/modules/user_settings/native/two_way_link/crunchyroll/CrunchyrollLinkLanding.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.CrunchyrollLinkModalScenes;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.HelpdeskArticles;
    var _closure1_slot5 = golfie;
    tangon = tangon.PlatformTypes;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'width': 234, 'height': 147};
    tangon['image'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/two_way_link/crunchyroll/CrunchyrollLinkLanding.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: CrunchyrollLinkLanding
        michal = _closure1_slot8;
        tangon = undefined;
        option = michal.bind(tangon)();
        foxtra = _closure1_slot0;
        offset = _closure1_slot2;
        michal = 7;
        michal = offset[michal];
        zuuluu = foxtra.bind(tangon)(michal);
        michal = zuuluu.useNavigation;
        verify = michal.bind(zuuluu)();
        var _closure2_slot0 = verify;
        oscard = _closure1_slot3;
        report = oscard.useMemo;
        zuuluu = function() {
            michal = {};
            tangon = _closure1_slot0;
            report = _closure1_slot2;
            entity = 5;
            oscard = report[entity];
            zuuluu = undefined;
            oscard = tangon.bind(zuuluu)(oscard);
            golfie = oscard.intl;
            oscard = golfie.string;
            entity = report[entity];
            entity = tangon.bind(zuuluu)(entity);
            entity = entity.t;
            entity = entity.2TXHQU;
            entity = oscard.bind(golfie)(entity);
            michal['label'] = entity;
            entity = 6;
            entity = report[entity];
            entity = tangon.bind(zuuluu)(entity);
            entity = entity.PlayIcon;
            michal['icon'] = entity;
            entity = new Array(1);
            entity[0] = michal;
            return entity;
        };
        michal = new Array(0);
        report = report.bind(oscard)(zuuluu, michal);
        zuuluu = oscard.useCallback;
        michal = new Array(1);
        michal[0] = verify;
        entity = function() {
            zuuluu = _closure2_slot0;
            michal = zuuluu.push;
            entity = _closure1_slot4;
            entity = entity.PRE_CONNECT;
            entity = michal.bind(zuuluu)(entity);
            entity = undefined;
            return entity;
        };
        oscard = zuuluu.bind(oscard)(entity, michal);
        zuuluu = _closure1_slot7;
        entity = 8;
        entity = offset[entity];
        entity = foxtra.bind(tangon)(entity);
        michal = entity.TwoWayLinkLanding;
        entity = {};
        verify = _closure1_slot6;
        verify = verify.CRUNCHYROLL;
        entity['platformType'] = verify;
        verify = _closure1_slot1;
        yankee = 9;
        yankee = offset[yankee];
        yankee = verify.bind(tangon)(yankee);
        entity['img'] = yankee;
        option = option.image;
        entity['imgStyle'] = option;
        option = 5;
        yankee = offset[option];
        yankee = foxtra.bind(tangon)(yankee);
        backup = yankee.intl;
        romeon = backup.string;
        yankee = offset[option];
        yankee = foxtra.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.Da+3ND;
        yankee = romeon.bind(backup)(yankee);
        entity['headerConnect'] = yankee;
        yankee = offset[option];
        yankee = foxtra.bind(tangon)(yankee);
        romeon = yankee.intl;
        yankee = romeon.string;
        option = offset[option];
        option = foxtra.bind(tangon)(option);
        option = option.t;
        option = option.MaPpPD;
        option = yankee.bind(romeon)(option);
        entity['body'] = option;
        option = 10;
        option = offset[option];
        verify = verify.bind(tangon)(option);
        option = verify.getArticleURL;
        golfie = _closure1_slot5;
        golfie = golfie.CRUNCHYROLL_CONNECTION;
        golfie = option.bind(verify)(golfie);
        entity['learnMoreLink'] = golfie;
        entity['onNext'] = oscard;
        entity['valueProps'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();