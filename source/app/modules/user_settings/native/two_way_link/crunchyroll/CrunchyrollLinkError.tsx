// app/modules/user_settings/native/two_way_link/crunchyroll/CrunchyrollLinkError.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.CrunchyrollLinkModalScenes;
    var _closure1_slot2 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot3 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/two_way_link/crunchyroll/CrunchyrollLinkError.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: CrunchyrollLinkDiscordError
        entity = argFoo;
        oscar = entity.onClose;
        offset = _closure1_slot0;
        yankee = _closure1_slot1;
        mike = 3;
        mike = yankee[mike];
        tango = undefined;
        zulu = offset.bind(tango)(mike);
        mike = zulu.useNavigation;
        golf = mike.bind(zulu)();
        mike = 4;
        mike = yankee[mike];
        report = offset.bind(tango)(mike);
        zulu = report.useConnectRetry;
        mike = _closure1_slot2;
        mike = mike.PRE_CONNECT;
        report = zulu.bind(report)(golf, mike);
        zulu = _closure1_slot3;
        entity = 5;
        entity = yankee[entity];
        entity = offset.bind(tango)(entity);
        mike = entity.TwoWayLinkError;
        entity = {};
        golf = 6;
        options = yankee[golf];
        options = offset.bind(tango)(options);
        romeo = options.intl;
        verify = romeo.string;
        options = yankee[golf];
        options = offset.bind(tango)(options);
        options = options.t;
        options = options.8YK70d;
        options = verify.bind(romeo)(options);
        entity['title'] = options;
        options = yankee[golf];
        options = offset.bind(tango)(options);
        verify = options.intl;
        options = verify.string;
        golf = yankee[golf];
        golf = offset.bind(tango)(golf);
        golf = golf.t;
        golf = golf.moyYLS;
        golf = options.bind(verify)(golf);
        entity['body'] = golf;
        entity['onClose'] = oscar;
        entity['onRetry'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();