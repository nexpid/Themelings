// app/modules/user_settings/native/two_way_link/crunchyroll/CrunchyrollLinkSuccess.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    foxtra = 1;
    tangon = oscard[foxtra];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot3 = golfie;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    romeon = 24;
    verify = {'width': 232, 'height': 108, 'marginBottom': 24};
    tangon['image'] = verify;
    verify = {'alignItems': 'center', 'alignSelf': 'stretch', 'backgroundColor': null, 'marginTop': 24, 'padding': 16, 'borderRadius': null, 'flexDirection': 'row'};
    offset = 4;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    tangon['getApp'] = verify;
    verify = {'marginRight': 12, 'width': 40, 'height': 40, 'alignItems': 'center', 'justifyContent': 'center'};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xs;
    verify['borderRadius'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.unsafe_rawColors;
    backup = backup.CRUNCHYROLL;
    verify['backgroundColor'] = backup;
    tangon['appLogoBox'] = verify;
    verify = {'width': 32, 'height': 32};
    tangon['appLogo'] = verify;
    verify = {};
    verify['flex'] = foxtra;
    tangon['getAppTitle'] = verify;
    verify = {};
    verify['marginTop'] = romeon;
    tangon['installButton'] = verify;
    verify = {};
    romeon = 8;
    verify['marginLeft'] = romeon;
    tangon['icon'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INTERACTIVE_ACTIVE;
    verify['color'] = offset;
    tangon['externalLinkIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/two_way_link/crunchyroll/CrunchyrollLinkSuccess.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: CrunchyrollLinkDiscordSuccess
        entity = argFoo;
        yankee = entity.onClose;
        entity = _closure1_slot7;
        tangon = undefined;
        verify = entity.bind(tangon)();
        kiloes = _closure1_slot0;
        sizing = _closure1_slot2;
        entity = 5;
        entity = sizing[entity];
        michal = kiloes.bind(tangon)(entity);
        entity = michal.useTwoWayLinkStyles;
        foxtra = entity.bind(michal)();
        zuuluu = _closure1_slot6;
        michal = _closure1_slot4;
        entity = {};
        report = foxtra.container;
        entity['style'] = report;
        report = {};
        oscard = foxtra.content;
        report['style'] = oscard;
        option = _closure1_slot5;
        golfie = _closure1_slot3;
        oscard = {};
        output = _closure1_slot1;
        offset = 6;
        offset = sizing[offset];
        offset = output.bind(tangon)(offset);
        oscard['source'] = offset;
        verify = verify.image;
        oscard['style'] = verify;
        golfie = option.bind(tangon)(golfie, oscard);
        oscard = new Array(3);
        oscard[0] = golfie;
        golfie = 7;
        verify = sizing[golfie];
        verify = kiloes.bind(tangon)(verify);
        offset = verify.Text;
        verify = {'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        romeon = foxtra.title;
        verify['style'] = romeon;
        romeon = 8;
        backup = sizing[romeon];
        backup = kiloes.bind(tangon)(backup);
        echoed = backup.intl;
        result = echoed.string;
        backup = sizing[romeon];
        backup = kiloes.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.Fnvxvr;
        backup = result.bind(echoed)(backup);
        verify['children'] = backup;
        verify = option.bind(tangon)(offset, verify);
        oscard[1] = verify;
        golfie = sizing[golfie];
        golfie = kiloes.bind(tangon)(golfie);
        verify = golfie.Text;
        golfie = {'variant': 'text-md/normal', 'color': 'header-secondary'};
        offset = foxtra.body;
        golfie['style'] = offset;
        offset = sizing[romeon];
        offset = kiloes.bind(tangon)(offset);
        result = offset.intl;
        backup = result.string;
        offset = sizing[romeon];
        offset = kiloes.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.YwXcen;
        offset = backup.bind(result)(offset);
        golfie['children'] = offset;
        golfie = option.bind(tangon)(verify, golfie);
        oscard[2] = golfie;
        report['children'] = oscard;
        oscard = zuuluu.bind(tangon)(michal, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = 9;
        oscard = sizing[oscard];
        oscard = kiloes.bind(tangon)(oscard);
        golfie = oscard.SafeAreaPaddingView;
        oscard = {};
        verify = true;
        oscard['bottom'] = verify;
        verify = foxtra.footerContainer;
        oscard['style'] = verify;
        backup = 10;
        verify = sizing[backup];
        offset = output.bind(tangon)(verify);
        verify = {};
        result = sizing[backup];
        result = output.bind(tangon)(result);
        result = result.Sizes;
        result = result.MEDIUM;
        verify['size'] = result;
        backup = sizing[backup];
        backup = output.bind(tangon)(backup);
        backup = backup.Colors;
        backup = backup.BRAND;
        verify['color'] = backup;
        foxtra = foxtra.footerButton;
        verify['style'] = foxtra;
        foxtra = sizing[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = sizing[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.i4jeWV;
        romeon = foxtra.bind(backup)(romeon);
        verify['text'] = romeon;
        verify['onPress'] = yankee;
        verify = option.bind(tangon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();