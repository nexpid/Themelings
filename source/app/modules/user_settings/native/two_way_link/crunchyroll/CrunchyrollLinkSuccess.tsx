// app/modules/user_settings/native/two_way_link/crunchyroll/CrunchyrollLinkSuccess.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    foxtrot = 1;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    golf = tango.Image;
    var _closure1_slot3 = golf;
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    romeo = 24;
    verify = {'width': 232, 'height': 108, 'marginBottom': 24};
    tango['image'] = verify;
    verify = {'alignItems': 'center', 'alignSelf': 'stretch', 'backgroundColor': null, 'marginTop': 24, 'padding': 16, 'borderRadius': null, 'flexDirection': 'row'};
    offset = 4;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    tango['getApp'] = verify;
    verify = {'marginRight': 12, 'width': 40, 'height': 40, 'alignItems': 'center', 'justifyContent': 'center'};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xs;
    verify['borderRadius'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.unsafe_rawColors;
    backup = backup.CRUNCHYROLL;
    verify['backgroundColor'] = backup;
    tango['appLogoBox'] = verify;
    verify = {'width': 32, 'height': 32};
    tango['appLogo'] = verify;
    verify = {};
    verify['flex'] = foxtrot;
    tango['getAppTitle'] = verify;
    verify = {};
    verify['marginTop'] = romeo;
    tango['installButton'] = verify;
    verify = {};
    romeo = 8;
    verify['marginLeft'] = romeo;
    tango['icon'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INTERACTIVE_ACTIVE;
    verify['color'] = offset;
    tango['externalLinkIcon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/two_way_link/crunchyroll/CrunchyrollLinkSuccess.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: CrunchyrollLinkDiscordSuccess
        entity = argFoo;
        yankee = entity.onClose;
        entity = _closure1_slot7;
        tango = undefined;
        verify = entity.bind(tango)();
        kilo = _closure1_slot0;
        sizing = _closure1_slot2;
        entity = 5;
        entity = sizing[entity];
        mike = kilo.bind(tango)(entity);
        entity = mike.useTwoWayLinkStyles;
        foxtrot = entity.bind(mike)();
        zulu = _closure1_slot6;
        mike = _closure1_slot4;
        entity = {};
        report = foxtrot.container;
        entity['style'] = report;
        report = {};
        oscar = foxtrot.content;
        report['style'] = oscar;
        options = _closure1_slot5;
        golf = _closure1_slot3;
        oscar = {};
        output = _closure1_slot1;
        offset = 6;
        offset = sizing[offset];
        offset = output.bind(tango)(offset);
        oscar['source'] = offset;
        verify = verify.image;
        oscar['style'] = verify;
        golf = options.bind(tango)(golf, oscar);
        oscar = new Array(3);
        oscar[0] = golf;
        golf = 7;
        verify = sizing[golf];
        verify = kilo.bind(tango)(verify);
        offset = verify.Text;
        verify = {'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        romeo = foxtrot.title;
        verify['style'] = romeo;
        romeo = 8;
        backup = sizing[romeo];
        backup = kilo.bind(tango)(backup);
        echo = backup.intl;
        result = echo.string;
        backup = sizing[romeo];
        backup = kilo.bind(tango)(backup);
        backup = backup.t;
        backup = backup.Fnvxvr;
        backup = result.bind(echo)(backup);
        verify['children'] = backup;
        verify = options.bind(tango)(offset, verify);
        oscar[1] = verify;
        golf = sizing[golf];
        golf = kilo.bind(tango)(golf);
        verify = golf.Text;
        golf = {'variant': 'text-md/normal', 'color': 'header-secondary'};
        offset = foxtrot.body;
        golf['style'] = offset;
        offset = sizing[romeo];
        offset = kilo.bind(tango)(offset);
        result = offset.intl;
        backup = result.string;
        offset = sizing[romeo];
        offset = kilo.bind(tango)(offset);
        offset = offset.t;
        offset = offset.YwXcen;
        offset = backup.bind(result)(offset);
        golf['children'] = offset;
        golf = options.bind(tango)(verify, golf);
        oscar[2] = golf;
        report['children'] = oscar;
        oscar = zulu.bind(tango)(mike, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = 9;
        oscar = sizing[oscar];
        oscar = kilo.bind(tango)(oscar);
        golf = oscar.SafeAreaPaddingView;
        oscar = {};
        verify = true;
        oscar['bottom'] = verify;
        verify = foxtrot.footerContainer;
        oscar['style'] = verify;
        backup = 10;
        verify = sizing[backup];
        offset = output.bind(tango)(verify);
        verify = {};
        result = sizing[backup];
        result = output.bind(tango)(result);
        result = result.Sizes;
        result = result.MEDIUM;
        verify['size'] = result;
        backup = sizing[backup];
        backup = output.bind(tango)(backup);
        backup = backup.Colors;
        backup = backup.BRAND;
        verify['color'] = backup;
        foxtrot = foxtrot.footerButton;
        verify['style'] = foxtrot;
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.string;
        romeo = sizing[romeo];
        romeo = kilo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.i4jeWV;
        romeo = foxtrot.bind(backup)(romeo);
        verify['text'] = romeo;
        verify['onPress'] = yankee;
        verify = options.bind(tango)(offset, verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();