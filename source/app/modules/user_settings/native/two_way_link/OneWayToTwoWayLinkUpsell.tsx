// app/modules/user_settings/native/two_way_link/OneWayToTwoWayLinkUpsell.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    romeo = tango.Fonts;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ContentDismissActionType;
    var _closure1_slot5 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'backgroundColor': null, 'margin': 16, 'padding': 12};
    offset = 6;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = foxtrot;
    output = 16;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    verify['borderRadius'] = foxtrot;
    tango['container'] = verify;
    verify = {'flexDirection': 'row', 'marginBottom': 4, 'alignItems': 'center'};
    tango['header'] = verify;
    verify = {'flexGrow': 1, 'flexShrink': 1};
    tango['titleContainer'] = verify;
    verify = {};
    foxtrot = 7;
    backup = oscar[foxtrot];
    sizing = yankee.bind(entity)(backup);
    kilo = romeo.PRIMARY_SEMIBOLD;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.TEXT_NORMAL;
    echo = sizing.bind(entity)(kilo, backup, output);
    update = verify;
    backup = copyDataProperties(update, echo);
    tango['title'] = verify;
    verify = {};
    foxtrot = oscar[foxtrot];
    foxtrot = yankee.bind(entity)(foxtrot);
    romeo = romeo.PRIMARY_MEDIUM;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    yankee = offset.TEXT_NORMAL;
    offset = 14;
    echo = foxtrot.bind(entity)(romeo, yankee, offset);
    update = verify;
    offset = copyDataProperties(update, echo);
    tango['body'] = verify;
    verify = {'paddingHorizontal': 6, 'width': 'auto', 'alignSelf': 'flex-start', 'marginBottom': 4};
    tango['newContainer'] = verify;
    verify = {};
    offset = 8;
    verify['marginTop'] = offset;
    tango['reconnectButton'] = verify;
    verify = {'alignSelf': 'center', 'marginLeft': 16};
    tango['upsellImage'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = function(argFoo) { // Original name: OneWayToTwoWayNewTag
        entity = argFoo;
        options = entity.markAsDismissed;
        var _closure2_slot0 = options;
        zulu = _closure1_slot8;
        tango = undefined;
        report = zulu.bind(tango)();
        golf = _closure1_slot3;
        oscar = golf.useEffect;
        zulu = new Array(1);
        zulu[0] = options;
        mike = function() {
            zulu = _closure2_slot0;
            entity = _closure1_slot5;
            mike = entity.UNKNOWN;
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            return entity;
        };
        mike = oscar.bind(golf)(mike, zulu);
        zulu = _closure1_slot6;
        mike = _closure1_slot1;
        oscar = _closure1_slot2;
        entity = 8;
        entity = oscar[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        report = report.newContainer;
        entity['containerStyle'] = report;
        report = 'text-xs/bold';
        entity['variant'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot9 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/two_way_link/OneWayToTwoWayLinkUpsell.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) {
        entity = argFoo;
        echo = entity.title;
        romeo = entity.body;
        kilo = entity.img;
        update = entity.newIndicatorDismissibleContent;
        var _closure2_slot0 = update;
        verify = entity.onPress;
        entity = _closure1_slot8;
        tango = undefined;
        offset = entity.bind(tango)();
        zulu = _closure1_slot7;
        mike = _closure1_slot4;
        entity = {};
        report = offset.container;
        entity['style'] = report;
        report = {};
        golf = offset.header;
        report['style'] = golf;
        yankee = {};
        golf = offset.titleContainer;
        yankee['style'] = golf;
        options = _closure1_slot6;
        golf = _closure1_slot1;
        backup = _closure1_slot2;
        foxtrot = 9;
        foxtrot = backup[foxtrot];
        sizing = golf.bind(tango)(foxtrot);
        foxtrot = {};
        result = new Array(1);
        result[0] = update;
        foxtrot['contentTypes'] = result;
        output = function(argFoo) { // Original name: children
            _fun95695: for(var _fun95695_ip = 0; ; ) switch(_fun95695_ip) {
 0:
                entity = argFoo;
                tango = entity.visibleContent;
                mike = entity.markAsDismissed;
                zulu = _closure2_slot0;
                entity = null;
                if(!(tango === zulu)) { _fun95695_ip = 54; continue _fun95695 }
 28:
                report = _closure1_slot6;
                tango = _closure1_slot9;
                zulu = {};
                zulu['markAsDismissed'] = mike;
                mike = undefined;
                entity = report.bind(mike)(tango, zulu);
 54:
                return entity;
            }
        };
        foxtrot['children'] = output;
        foxtrot = options.bind(tango)(sizing, foxtrot);
        sizing = new Array(2);
        sizing[0] = foxtrot;
        foxtrot = _closure1_slot0;
        oscar = 10;
        output = backup[oscar];
        output = foxtrot.bind(tango)(output);
        result = output.Text;
        output = {};
        update = offset.title;
        output['style'] = update;
        update = 'text-md/semibold';
        output['variant'] = update;
        output['children'] = echo;
        output = options.bind(tango)(result, output);
        sizing[1] = output;
        yankee['children'] = sizing;
        sizing = zulu.bind(tango)(mike, yankee);
        yankee = new Array(2);
        yankee[0] = sizing;
        yankee[1] = kilo;
        report['children'] = yankee;
        yankee = zulu.bind(tango)(mike, report);
        report = new Array(3);
        report[0] = yankee;
        oscar = backup[oscar];
        oscar = foxtrot.bind(tango)(oscar);
        yankee = oscar.Text;
        oscar = {};
        kilo = offset.body;
        oscar['style'] = kilo;
        kilo = 'text-sm/medium';
        oscar['variant'] = kilo;
        oscar['children'] = romeo;
        oscar = options.bind(tango)(yankee, oscar);
        report[1] = oscar;
        oscar = 11;
        oscar = backup[oscar];
        golf = golf.bind(tango)(oscar);
        oscar = {};
        offset = offset.reconnectButton;
        oscar['style'] = offset;
        offset = 12;
        yankee = backup[offset];
        yankee = foxtrot.bind(tango)(yankee);
        romeo = yankee.intl;
        yankee = romeo.string;
        offset = backup[offset];
        offset = foxtrot.bind(tango)(offset);
        offset = offset.t;
        offset = offset.vD60Pj;
        offset = yankee.bind(romeo)(offset);
        oscar['text'] = offset;
        offset = true;
        oscar['foregroundRipple'] = offset;
        oscar['onPress'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['OneWayToTwoWayLinkUpsell'] = mike;
    return entity;
})();