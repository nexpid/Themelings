// app/modules/user_settings/native/two_way_link/OneWayToTwoWayLinkUpsell.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    romeon = tangon.Fonts;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ContentDismissActionType;
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'backgroundColor': null, 'margin': 16, 'padding': 12};
    offset = 6;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = foxtra;
    output = 16;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    verify['borderRadius'] = foxtra;
    tangon['container'] = verify;
    verify = {'flexDirection': 'row', 'marginBottom': 4, 'alignItems': 'center'};
    tangon['header'] = verify;
    verify = {'flexGrow': 1, 'flexShrink': 1};
    tangon['titleContainer'] = verify;
    verify = {};
    foxtra = 7;
    backup = oscard[foxtra];
    sizing = yankee.bind(entity)(backup);
    kiloes = romeon.PRIMARY_SEMIBOLD;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.TEXT_NORMAL;
    echoed = sizing.bind(entity)(kiloes, backup, output);
    update = verify;
    backup = copyDataProperties(update, echoed);
    tangon['title'] = verify;
    verify = {};
    foxtra = oscard[foxtra];
    foxtra = yankee.bind(entity)(foxtra);
    romeon = romeon.PRIMARY_MEDIUM;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    yankee = offset.TEXT_NORMAL;
    offset = 14;
    echoed = foxtra.bind(entity)(romeon, yankee, offset);
    update = verify;
    offset = copyDataProperties(update, echoed);
    tangon['body'] = verify;
    verify = {'paddingHorizontal': 6, 'width': 'auto', 'alignSelf': 'flex-start', 'marginBottom': 4};
    tangon['newContainer'] = verify;
    verify = {};
    offset = 8;
    verify['marginTop'] = offset;
    tangon['reconnectButton'] = verify;
    verify = {'alignSelf': 'center', 'marginLeft': 16};
    tangon['upsellImage'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = function(argFoo) { // Original name: OneWayToTwoWayNewTag
        entity = argFoo;
        option = entity.markAsDismissed;
        var _closure2_slot0 = option;
        zuuluu = _closure1_slot8;
        tangon = undefined;
        report = zuuluu.bind(tangon)();
        golfie = _closure1_slot3;
        oscard = golfie.useEffect;
        zuuluu = new Array(1);
        zuuluu[0] = option;
        michal = function() {
            zuuluu = _closure2_slot0;
            entity = _closure1_slot5;
            michal = entity.UNKNOWN;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        michal = oscard.bind(golfie)(michal, zuuluu);
        zuuluu = _closure1_slot6;
        michal = _closure1_slot1;
        oscard = _closure1_slot2;
        entity = 8;
        entity = oscard[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        report = report.newContainer;
        entity['containerStyle'] = report;
        report = 'text-xs/bold';
        entity['variant'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot9 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/two_way_link/OneWayToTwoWayLinkUpsell.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) {
        entity = argFoo;
        echoed = entity.title;
        romeon = entity.body;
        kiloes = entity.img;
        update = entity.newIndicatorDismissibleContent;
        var _closure2_slot0 = update;
        verify = entity.onPress;
        entity = _closure1_slot8;
        tangon = undefined;
        offset = entity.bind(tangon)();
        zuuluu = _closure1_slot7;
        michal = _closure1_slot4;
        entity = {};
        report = offset.container;
        entity['style'] = report;
        report = {};
        golfie = offset.header;
        report['style'] = golfie;
        yankee = {};
        golfie = offset.titleContainer;
        yankee['style'] = golfie;
        option = _closure1_slot6;
        golfie = _closure1_slot1;
        backup = _closure1_slot2;
        foxtra = 9;
        foxtra = backup[foxtra];
        sizing = golfie.bind(tangon)(foxtra);
        foxtra = {};
        result = new Array(1);
        result[0] = update;
        foxtra['contentTypes'] = result;
        output = function(argFoo) { // Original name: children
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = argFoo;
                tangon = entity.visibleContent;
                michal = entity.markAsDismissed;
                zuuluu = _closure2_slot0;
                entity = null;
                if(!(tangon === zuuluu)) { _fun00002_ip = 54; continue _fun00001 }
 28:
                report = _closure1_slot6;
                tangon = _closure1_slot9;
                zuuluu = {};
                zuuluu['markAsDismissed'] = michal;
                michal = undefined;
                entity = report.bind(michal)(tangon, zuuluu);
 54:
                return entity;
            }
        };
        foxtra['children'] = output;
        foxtra = option.bind(tangon)(sizing, foxtra);
        sizing = new Array(2);
        sizing[0] = foxtra;
        foxtra = _closure1_slot0;
        oscard = 10;
        output = backup[oscard];
        output = foxtra.bind(tangon)(output);
        result = output.Text;
        output = {};
        update = offset.title;
        output['style'] = update;
        update = 'text-md/semibold';
        output['variant'] = update;
        output['children'] = echoed;
        output = option.bind(tangon)(result, output);
        sizing[1] = output;
        yankee['children'] = sizing;
        sizing = zuuluu.bind(tangon)(michal, yankee);
        yankee = new Array(2);
        yankee[0] = sizing;
        yankee[1] = kiloes;
        report['children'] = yankee;
        yankee = zuuluu.bind(tangon)(michal, report);
        report = new Array(3);
        report[0] = yankee;
        oscard = backup[oscard];
        oscard = foxtra.bind(tangon)(oscard);
        yankee = oscard.Text;
        oscard = {};
        kiloes = offset.body;
        oscard['style'] = kiloes;
        kiloes = 'text-sm/medium';
        oscard['variant'] = kiloes;
        oscard['children'] = romeon;
        oscard = option.bind(tangon)(yankee, oscard);
        report[1] = oscard;
        oscard = 11;
        oscard = backup[oscard];
        golfie = golfie.bind(tangon)(oscard);
        oscard = {};
        offset = offset.reconnectButton;
        oscard['style'] = offset;
        offset = 12;
        yankee = backup[offset];
        yankee = foxtra.bind(tangon)(yankee);
        romeon = yankee.intl;
        yankee = romeon.string;
        offset = backup[offset];
        offset = foxtra.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.vD60Pj;
        offset = yankee.bind(romeon)(offset);
        oscard['text'] = offset;
        offset = true;
        oscard['foregroundRipple'] = offset;
        oscard['onPress'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['OneWayToTwoWayLinkUpsell'] = michal;
    return entity;
})();