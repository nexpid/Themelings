// app/modules/user_settings/native/two_way_link/TwoWayLinkLanding.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Image;
    var _closure1_slot2 = golf;
    golf = tango.View;
    var _closure1_slot3 = golf;
    tango = tango.ScrollView;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    tango = argBaz;
    tango = tango.bind(entity)(golf);
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 32;
    verify['marginBottom'] = offset;
    tango['image'] = verify;
    verify = {};
    offset = 8;
    verify['marginTop'] = offset;
    tango['title'] = verify;
    verify = {'marginTop': 24, 'maxWidth': '100%'};
    tango['valueProps'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/two_way_link/TwoWayLinkLanding.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: TwoWayLinkLanding
        _fun80572: for(var _fun80572_ip = 0; ; ) switch(_fun80572_ip) {
 0:
            entity = argFoo;
            mike = entity.platformType;
            var _closure2_slot0 = mike;
            verify = entity.img;
            control = entity.imgStyle;
            sequence = entity.headerConnect;
            vacuum = entity.headerReconnect;
            update = entity.body;
            result = entity.valueProps;
            var _closure2_slot1 = result;
            echo = entity.learnMoreLink;
            foxtrot = entity.onNext;
            entity = _closure1_slot8;
            tango = undefined;
            output = entity.bind(tango)();
            mike = _closure1_slot0;
            zulu = _closure1_slot1;
            entity = 5;
            entity = zulu[entity];
            report = mike.bind(tango)(entity);
            entity = report.useTwoWayLinkStyles;
            yankee = entity.bind(report)();
            entity = 6;
            entity = zulu[entity];
            report = mike.bind(tango)(entity);
            zulu = report.useStateFromStores;
            entity = _closure1_slot5;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                _fun80573: for(var _fun80573_ip = 0; ; ) switch(_fun80573_ip) {
 0:
                    tango = _closure1_slot5;
                    zulu = tango.getAccount;
                    entity = _closure2_slot0;
                    mike = null;
                    entity = zulu.bind(tango)(mike, entity);
                    zulu = mike == entity;
                    mike = undefined;
                    if(zulu) { _fun80573_ip = 43; continue _fun80573 }
 37:
                    mike = entity.twoWayLink;
 43:
                    entity = false;
                    entity = entity === mike;
                    return entity;
                }
            };
            config = zulu.bind(report)(mike, entity);
            zulu = _closure1_slot7;
            mike = _closure1_slot3;
            entity = {};
            report = yankee.container;
            entity['style'] = report;
            golf = _closure1_slot4;
            report = {};
            options = false;
            report['alwaysBounceVertical'] = options;
            options = {};
            offset = yankee.content;
            options['style'] = offset;
            backup = _closure1_slot6;
            romeo = _closure1_slot2;
            offset = {};
            offset['source'] = verify;
            verify = output.image;
            kilo = new Array(2);
            kilo[0] = verify;
            verify = null;
            source = verify != control;
            if(!source) { _fun80572_ip = 234; continue _fun80572 }
 231:
            source = control;
 234:
            kilo[1] = source;
            offset['style'] = kilo;
            romeo = backup.bind(tango)(romeo, offset);
            offset = new Array(4);
            offset[0] = romeo;
            kilo = _closure1_slot6;
            backup = _closure1_slot0;
            romeo = _closure1_slot1;
            source = 7;
            romeo = romeo[source];
            romeo = backup.bind(tango)(romeo);
            backup = romeo.Text;
            romeo = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
            control = yankee.title;
            romeo['style'] = control;
            control = sequence;
            if(!config) { _fun80572_ip = 324; continue _fun80572 }
 314:
            control = sequence;
            if(!(verify != vacuum)) { _fun80572_ip = 324; continue _fun80572 }
 321:
            control = vacuum;
 324:
            romeo['children'] = control;
            romeo = kilo.bind(tango)(backup, romeo);
            offset[1] = romeo;
            kilo = _closure1_slot6;
            backup = _closure1_slot0;
            romeo = _closure1_slot1;
            romeo = romeo[source];
            romeo = backup.bind(tango)(romeo);
            backup = romeo.Text;
            romeo = {'variant': 'text-md/medium', 'color': 'header-secondary'};
            source = yankee.body;
            romeo['style'] = source;
            romeo['children'] = update;
            romeo = kilo.bind(tango)(backup, romeo);
            offset[2] = romeo;
            backup = _closure1_slot3;
            romeo = {};
            output = output.valueProps;
            romeo['style'] = output;
            output = result.map;
            sizing = function(argFoo, argBar) {
                entity = argFoo;
                romeo = argBar;
                report = entity.label;
                offset = entity.subLabel;
                options = entity.icon;
                tango = _closure1_slot6;
                golf = _closure1_slot0;
                verify = _closure1_slot1;
                oscar = 8;
                entity = verify[oscar];
                zulu = undefined;
                entity = golf.bind(zulu)(entity);
                mike = entity.TableRow;
                entity = {};
                yankee = 0;
                yankee = yankee === romeo;
                entity['start'] = yankee;
                yankee = _closure2_slot1;
                foxtrot = yankee.length;
                yankee = 1;
                yankee = foxtrot - yankee;
                yankee = romeo === yankee;
                entity['end'] = yankee;
                entity['subLabel'] = offset;
                offset = 7;
                offset = verify[offset];
                offset = golf.bind(zulu)(offset);
                yankee = offset.Text;
                offset = {'variant': 'text-sm/normal', 'color': 'header-primary'};
                offset['children'] = report;
                offset = tango.bind(zulu)(yankee, offset);
                entity['label'] = offset;
                oscar = verify[oscar];
                oscar = golf.bind(zulu)(oscar);
                oscar = oscar.TableRow;
                golf = oscar.Icon;
                oscar = {};
                oscar['IconComponent'] = options;
                oscar = tango.bind(zulu)(golf, oscar);
                entity['icon'] = oscar;
                entity = tango.bind(zulu)(mike, entity, report);
                return entity;
            };
            sizing = output.bind(result)(sizing);
            romeo['children'] = sizing;
            romeo = kilo.bind(tango)(backup, romeo);
            offset[3] = romeo;
            options['children'] = offset;
            offset = zulu.bind(tango)(mike, options);
            options = new Array(2);
            options[0] = offset;
            offset = verify != echo;
            verify = null;
            if(!offset) { _fun80572_ip = 593; continue _fun80572 }
 475:
            backup = _closure1_slot6;
            sizing = _closure1_slot0;
            update = _closure1_slot1;
            offset = 9;
            offset = update[offset];
            offset = sizing.bind(tango)(offset);
            romeo = offset.TextWithIOSLinkWorkaround;
            offset = {'variant': 'text-md/normal', 'color': 'header-secondary'};
            kilo = yankee.body;
            offset['style'] = kilo;
            kilo = 10;
            output = update[kilo];
            output = sizing.bind(tango)(output);
            result = output.intl;
            output = result.format;
            kilo = update[kilo];
            kilo = sizing.bind(tango)(kilo);
            kilo = kilo.t;
            sizing = kilo./l3n+/;
            kilo = {};
            kilo['helpCenterLink'] = echo;
            kilo = output.bind(result)(sizing, kilo);
            offset['children'] = kilo;
            verify = backup.bind(tango)(romeo, offset);
 593:
            options[1] = verify;
            report['children'] = options;
            golf = zulu.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            options = _closure1_slot6;
            output = _closure1_slot0;
            result = _closure1_slot1;
            oscar = 11;
            oscar = result[oscar];
            oscar = output.bind(tango)(oscar);
            golf = oscar.SafeAreaPaddingView;
            oscar = {};
            verify = true;
            oscar['bottom'] = verify;
            verify = yankee.footerContainer;
            oscar['style'] = verify;
            verify = 12;
            verify = result[verify];
            verify = output.bind(tango)(verify);
            offset = verify.Stack;
            verify = {'spacing': 8, 'direction': 'vertical'};
            yankee = yankee.footerButton;
            verify['style'] = yankee;
            yankee = 13;
            yankee = result[yankee];
            yankee = output.bind(tango)(yankee);
            romeo = yankee.Button;
            yankee = {'variant': 'primary', 'size': 'lg'};
            backup = 10;
            kilo = result[backup];
            kilo = output.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = result[backup];
            backup = output.bind(tango)(backup);
            backup = backup.t;
            backup = backup.LhlgY2;
            backup = kilo.bind(sizing)(backup);
            yankee['text'] = backup;
            yankee['onPress'] = foxtrot;
            yankee = options.bind(tango)(romeo, yankee);
            verify['children'] = yankee;
            verify = options.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['TwoWayLinkLanding'] = mike;
    return entity;
})();