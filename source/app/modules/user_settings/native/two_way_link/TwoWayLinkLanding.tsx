// app/modules/user_settings/native/two_way_link/TwoWayLinkLanding.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot2 = golfie;
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    tangon = argBaz;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 32;
    verify['marginBottom'] = offset;
    tangon['image'] = verify;
    verify = {};
    offset = 8;
    verify['marginTop'] = offset;
    tangon['title'] = verify;
    verify = {'marginTop': 24, 'maxWidth': '100%'};
    tangon['valueProps'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/two_way_link/TwoWayLinkLanding.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: TwoWayLinkLanding
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.platformType;
            var _closure2_slot0 = michal;
            verify = entity.img;
            ctrled = entity.imgStyle;
            sequen = entity.headerConnect;
            vacuum = entity.headerReconnect;
            update = entity.body;
            result = entity.valueProps;
            var _closure2_slot1 = result;
            echoed = entity.learnMoreLink;
            foxtra = entity.onNext;
            entity = _closure1_slot8;
            tangon = undefined;
            output = entity.bind(tangon)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot1;
            entity = 5;
            entity = zuuluu[entity];
            report = michal.bind(tangon)(entity);
            entity = report.useTwoWayLinkStyles;
            yankee = entity.bind(report)();
            entity = 6;
            entity = zuuluu[entity];
            report = michal.bind(tangon)(entity);
            zuuluu = report.useStateFromStores;
            entity = _closure1_slot5;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = _closure1_slot5;
                    zuuluu = tangon.getAccount;
                    entity = _closure2_slot0;
                    michal = null;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    zuuluu = michal == entity;
                    michal = undefined;
                    if(zuuluu) { _fun00004_ip = 43; continue _fun00003 }
 37:
                    michal = entity.twoWayLink;
 43:
                    entity = false;
                    entity = entity === michal;
                    return entity;
                }
            };
            config = zuuluu.bind(report)(michal, entity);
            zuuluu = _closure1_slot7;
            michal = _closure1_slot3;
            entity = {};
            report = yankee.container;
            entity['style'] = report;
            golfie = _closure1_slot4;
            report = {};
            option = false;
            report['alwaysBounceVertical'] = option;
            option = {};
            offset = yankee.content;
            option['style'] = offset;
            backup = _closure1_slot6;
            romeon = _closure1_slot2;
            offset = {};
            offset['source'] = verify;
            verify = output.image;
            kiloes = new Array(2);
            kiloes[0] = verify;
            verify = null;
            source = verify != ctrled;
            if(!source) { _fun00002_ip = 232; continue _fun00001 }
 229:
            source = ctrled;
 232:
            kiloes[1] = source;
            offset['style'] = kiloes;
            romeon = backup.bind(tangon)(romeon, offset);
            offset = new Array(4);
            offset[0] = romeon;
            kiloes = _closure1_slot6;
            backup = _closure1_slot0;
            romeon = _closure1_slot1;
            source = 7;
            romeon = romeon[source];
            romeon = backup.bind(tangon)(romeon);
            backup = romeon.Text;
            romeon = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
            ctrled = yankee.title;
            romeon['style'] = ctrled;
            ctrled = sequen;
            if(!config) { _fun00002_ip = 322; continue _fun00001 }
 312:
            ctrled = sequen;
            if(!(verify != vacuum)) { _fun00002_ip = 322; continue _fun00001 }
 319:
            ctrled = vacuum;
 322:
            romeon['children'] = ctrled;
            romeon = kiloes.bind(tangon)(backup, romeon);
            offset[1] = romeon;
            kiloes = _closure1_slot6;
            backup = _closure1_slot0;
            romeon = _closure1_slot1;
            romeon = romeon[source];
            romeon = backup.bind(tangon)(romeon);
            backup = romeon.Text;
            romeon = {'variant': 'text-md/medium', 'color': 'header-secondary'};
            source = yankee.body;
            romeon['style'] = source;
            romeon['children'] = update;
            romeon = kiloes.bind(tangon)(backup, romeon);
            offset[2] = romeon;
            backup = _closure1_slot3;
            romeon = {};
            output = output.valueProps;
            romeon['style'] = output;
            output = result.map;
            sizing = function(argFoo, argBar) {
                entity = argFoo;
                romeon = argBar;
                report = entity.label;
                offset = entity.subLabel;
                option = entity.icon;
                tangon = _closure1_slot6;
                golfie = _closure1_slot0;
                verify = _closure1_slot1;
                oscard = 8;
                entity = verify[oscard];
                zuuluu = undefined;
                entity = golfie.bind(zuuluu)(entity);
                michal = entity.TableRow;
                entity = {};
                yankee = 0;
                yankee = yankee === romeon;
                entity['start'] = yankee;
                yankee = _closure2_slot1;
                foxtra = yankee.length;
                yankee = 1;
                yankee = foxtra - yankee;
                yankee = romeon === yankee;
                entity['end'] = yankee;
                entity['subLabel'] = offset;
                offset = 7;
                offset = verify[offset];
                offset = golfie.bind(zuuluu)(offset);
                yankee = offset.Text;
                offset = {'variant': 'text-sm/normal', 'color': 'header-primary'};
                offset['children'] = report;
                offset = tangon.bind(zuuluu)(yankee, offset);
                entity['label'] = offset;
                oscard = verify[oscard];
                oscard = golfie.bind(zuuluu)(oscard);
                oscard = oscard.TableRow;
                golfie = oscard.Icon;
                oscard = {};
                oscard['IconComponent'] = option;
                oscard = tangon.bind(zuuluu)(golfie, oscard);
                entity['icon'] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            };
            sizing = output.bind(result)(sizing);
            romeon['children'] = sizing;
            romeon = kiloes.bind(tangon)(backup, romeon);
            offset[3] = romeon;
            option['children'] = offset;
            offset = zuuluu.bind(tangon)(michal, option);
            option = new Array(2);
            option[0] = offset;
            offset = verify != echoed;
            verify = null;
            if(!offset) { _fun00002_ip = 591; continue _fun00001 }
 471:
            backup = _closure1_slot6;
            sizing = _closure1_slot0;
            update = _closure1_slot1;
            offset = 9;
            offset = update[offset];
            offset = sizing.bind(tangon)(offset);
            romeon = offset.TextWithIOSLinkWorkaround;
            offset = {'variant': 'text-md/normal', 'color': 'header-secondary'};
            kiloes = yankee.body;
            offset['style'] = kiloes;
            kiloes = 10;
            output = update[kiloes];
            output = sizing.bind(tangon)(output);
            result = output.intl;
            output = result.format;
            kiloes = update[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            sizing = kiloes./l3n+/;
            kiloes = {};
            kiloes['helpCenterLink'] = echoed;
            kiloes = output.bind(result)(sizing, kiloes);
            offset['children'] = kiloes;
            verify = backup.bind(tangon)(romeon, offset);
 591:
            option[1] = verify;
            report['children'] = option;
            golfie = zuuluu.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = golfie;
            option = _closure1_slot6;
            output = _closure1_slot0;
            result = _closure1_slot1;
            oscard = 11;
            oscard = result[oscard];
            oscard = output.bind(tangon)(oscard);
            golfie = oscard.SafeAreaPaddingView;
            oscard = {};
            verify = true;
            oscard['bottom'] = verify;
            verify = yankee.footerContainer;
            oscard['style'] = verify;
            verify = 12;
            verify = result[verify];
            verify = output.bind(tangon)(verify);
            offset = verify.Stack;
            verify = {'spacing': 8, 'direction': 'vertical'};
            yankee = yankee.footerButton;
            verify['style'] = yankee;
            yankee = 13;
            yankee = result[yankee];
            yankee = output.bind(tangon)(yankee);
            romeon = yankee.Button;
            yankee = {'variant': 'primary', 'size': 'lg'};
            backup = 10;
            kiloes = result[backup];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = result[backup];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.LhlgY2;
            backup = kiloes.bind(sizing)(backup);
            yankee['text'] = backup;
            yankee['onPress'] = foxtra;
            yankee = option.bind(tangon)(romeon, yankee);
            verify['children'] = yankee;
            verify = option.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['TwoWayLinkLanding'] = michal;
    return entity;
})();