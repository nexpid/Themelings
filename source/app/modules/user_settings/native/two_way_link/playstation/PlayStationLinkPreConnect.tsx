// app/modules/user_settings/native/two_way_link/playstation/PlayStationLinkPreConnect.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.PlayStationLinkModalScenes;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'width': 231, 'height': 160};
    tango['image'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/two_way_link/playstation/PlayStationLinkPreConnect.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: PlayStationLinkPreConnect
        entity = argFoo;
        yankee = entity.platformType;
        zulu = _closure1_slot6;
        tango = undefined;
        report = zulu.bind(tango)();
        options = _closure1_slot0;
        verify = _closure1_slot2;
        zulu = 4;
        zulu = verify[zulu];
        oscar = options.bind(tango)(zulu);
        zulu = oscar.useNavigation;
        zulu = zulu.bind(oscar)();
        var _closure2_slot0 = zulu;
        romeo = _closure1_slot3;
        offset = romeo.useCallback;
        golf = new Array(1);
        golf[0] = zulu;
        oscar = function(argFoo) {
            tango = _closure2_slot0;
            zulu = tango.push;
            entity = _closure1_slot4;
            mike = entity.DISCORD_CONSENT;
            entity = argFoo;
            entity = zulu.bind(tango)(mike, entity);
            entity = undefined;
            return entity;
        };
        golf = offset.bind(romeo)(oscar, golf);
        offset = romeo.useCallback;
        oscar = new Array(1);
        oscar[0] = zulu;
        zulu = function() {
            tango = _closure2_slot0;
            zulu = tango.push;
            entity = _closure1_slot4;
            mike = entity.ERROR;
            entity = {};
            entity = zulu.bind(tango)(mike, entity);
            entity = undefined;
            return entity;
        };
        offset = offset.bind(romeo)(zulu, oscar);
        oscar = romeo.useMemo;
        zulu = function() {
            entity = {};
            tango = _closure1_slot1;
            zulu = _closure1_slot2;
            mike = 5;
            zulu = zulu[mike];
            mike = undefined;
            mike = tango.bind(mike)(zulu);
            entity['uri'] = mike;
            return entity;
        };
        mike = new Array(0);
        oscar = oscar.bind(romeo)(zulu, mike);
        zulu = _closure1_slot5;
        entity = 6;
        entity = verify[entity];
        entity = options.bind(tango)(entity);
        mike = entity.TwoWayLinkPreConnect;
        entity = {};
        entity['platformType'] = yankee;
        entity['onError'] = offset;
        entity['onNext'] = golf;
        entity['img'] = oscar;
        report = report.image;
        entity['imgStyle'] = report;
        report = 7;
        oscar = verify[report];
        oscar = options.bind(tango)(oscar);
        offset = oscar.intl;
        golf = offset.string;
        oscar = verify[report];
        oscar = options.bind(tango)(oscar);
        oscar = oscar.t;
        oscar = oscar.6n+UPT;
        oscar = golf.bind(offset)(oscar);
        entity['title'] = oscar;
        oscar = verify[report];
        oscar = options.bind(tango)(oscar);
        golf = oscar.intl;
        oscar = golf.string;
        report = verify[report];
        report = options.bind(tango)(report);
        report = report.t;
        report = report.JaaqIS;
        report = oscar.bind(golf)(report);
        entity['body'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['PlayStationLinkPreConnect'] = mike;
    return entity;
})();