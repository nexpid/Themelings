// app/modules/user_settings/native/two_way_link/playstation/PlayStationLinkPreConnect.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.PlayStationLinkModalScenes;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'width': 231, 'height': 160};
    tangon['image'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/two_way_link/playstation/PlayStationLinkPreConnect.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: PlayStationLinkPreConnect
        entity = argFoo;
        yankee = entity.platformType;
        zuuluu = _closure1_slot6;
        tangon = undefined;
        report = zuuluu.bind(tangon)();
        option = _closure1_slot0;
        verify = _closure1_slot2;
        zuuluu = 4;
        zuuluu = verify[zuuluu];
        oscard = option.bind(tangon)(zuuluu);
        zuuluu = oscard.useNavigation;
        zuuluu = zuuluu.bind(oscard)();
        var _closure2_slot0 = zuuluu;
        romeon = _closure1_slot3;
        offset = romeon.useCallback;
        golfie = new Array(1);
        golfie[0] = zuuluu;
        oscard = function(argFoo) {
            tangon = _closure2_slot0;
            zuuluu = tangon.push;
            entity = _closure1_slot4;
            michal = entity.DISCORD_CONSENT;
            entity = argFoo;
            entity = zuuluu.bind(tangon)(michal, entity);
            entity = undefined;
            return entity;
        };
        golfie = offset.bind(romeon)(oscard, golfie);
        offset = romeon.useCallback;
        oscard = new Array(1);
        oscard[0] = zuuluu;
        zuuluu = function() {
            tangon = _closure2_slot0;
            zuuluu = tangon.push;
            entity = _closure1_slot4;
            michal = entity.ERROR;
            entity = {};
            entity = zuuluu.bind(tangon)(michal, entity);
            entity = undefined;
            return entity;
        };
        offset = offset.bind(romeon)(zuuluu, oscard);
        oscard = romeon.useMemo;
        zuuluu = function() {
            entity = {};
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            michal = 5;
            zuuluu = zuuluu[michal];
            michal = undefined;
            michal = tangon.bind(michal)(zuuluu);
            entity['uri'] = michal;
            return entity;
        };
        michal = new Array(0);
        oscard = oscard.bind(romeon)(zuuluu, michal);
        zuuluu = _closure1_slot5;
        entity = 6;
        entity = verify[entity];
        entity = option.bind(tangon)(entity);
        michal = entity.TwoWayLinkPreConnect;
        entity = {};
        entity['platformType'] = yankee;
        entity['onError'] = offset;
        entity['onNext'] = golfie;
        entity['img'] = oscard;
        report = report.image;
        entity['imgStyle'] = report;
        report = 7;
        oscard = verify[report];
        oscard = option.bind(tangon)(oscard);
        offset = oscard.intl;
        golfie = offset.string;
        oscard = verify[report];
        oscard = option.bind(tangon)(oscard);
        oscard = oscard.t;
        oscard = oscard.6n+UPT;
        oscard = golfie.bind(offset)(oscard);
        entity['title'] = oscard;
        oscard = verify[report];
        oscard = option.bind(tangon)(oscard);
        golfie = oscard.intl;
        oscard = golfie.string;
        report = verify[report];
        report = option.bind(tangon)(report);
        report = report.t;
        report = report.JaaqIS;
        report = oscard.bind(golfie)(report);
        entity['body'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['PlayStationLinkPreConnect'] = michal;
    return entity;
})();