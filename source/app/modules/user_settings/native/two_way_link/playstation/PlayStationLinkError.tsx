// app/modules/user_settings/native/two_way_link/playstation/PlayStationLinkError.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.PlayStationLinkModalScenes;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AbortCodes;
    var _closure1_slot3 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/two_way_link/playstation/PlayStationLinkError.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: PlayStationLinkError
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.onClose;
            zuuluu = entity.errorCode;
            report = _closure1_slot0;
            golfie = _closure1_slot1;
            michal = 4;
            michal = golfie[michal];
            tangon = undefined;
            option = report.bind(tangon)(michal);
            michal = option.useNavigation;
            option = michal.bind(option)();
            michal = 5;
            michal = golfie[michal];
            golfie = report.bind(tangon)(michal);
            report = golfie.useConnectRetry;
            michal = _closure1_slot2;
            michal = michal.PRE_CONNECT;
            report = report.bind(golfie)(option, michal);
            michal = _closure1_slot3;
            michal = michal.UNDER_MINIMUM_AGE;
            if(!(zuuluu !== michal)) { _fun00002_ip = 157; continue _fun00001 }
 98:
            option = _closure1_slot0;
            verify = _closure1_slot1;
            michal = 6;
            zuuluu = verify[michal];
            zuuluu = option.bind(tangon)(zuuluu);
            golfie = zuuluu.intl;
            zuuluu = golfie.string;
            michal = verify[michal];
            michal = option.bind(tangon)(michal);
            michal = michal.t;
            michal = michal.qE9nqK;
            golfie = zuuluu.bind(golfie)(michal);
            _fun00002_ip = 214; continue _fun00001;
 157:
            verify = _closure1_slot0;
            offset = _closure1_slot1;
            michal = 6;
            zuuluu = offset[michal];
            zuuluu = verify.bind(tangon)(zuuluu);
            option = zuuluu.intl;
            zuuluu = option.string;
            michal = offset[michal];
            michal = verify.bind(tangon)(michal);
            michal = michal.t;
            michal = michal.3dIn2N;
            golfie = zuuluu.bind(option)(michal);
 214:
            zuuluu = _closure1_slot4;
            yankee = _closure1_slot0;
            romeon = _closure1_slot1;
            entity = 7;
            entity = romeon[entity];
            entity = yankee.bind(tangon)(entity);
            michal = entity.TwoWayLinkError;
            entity = {};
            option = 6;
            verify = romeon[option];
            verify = yankee.bind(tangon)(verify);
            offset = verify.intl;
            verify = offset.string;
            option = romeon[option];
            option = yankee.bind(tangon)(option);
            option = option.t;
            option = option.eY3qHR;
            option = verify.bind(offset)(option);
            entity['title'] = option;
            entity['body'] = golfie;
            entity['onClose'] = oscard;
            entity['onRetry'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['PlayStationLinkError'] = michal;
    return entity;
})();