// app/modules/user_settings/native/two_way_link/playstation/PlayStationLinkError.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var4 = var4.bind(var1)(var7);
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.PlayStationLinkModalScenes;
    var _closure1_slot2 = var4;
    var4 = 2;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.AbortCodes;
    var _closure1_slot3 = var4;
    var4 = 3;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.jsx;
    var _closure1_slot4 = var4;
    var4 = 8;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/user_settings/native/two_way_link/playstation/PlayStationLinkError.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function PlayStationLinkError(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
            var1 = arg1;
            var6 = var1.onClose;
            var3 = var1.errorCode;
            var5 = _closure1_slot0;
            var7 = _closure1_slot1;
            var2 = 4;
            var2 = var7[var2];
            var4 = undefined;
            var8 = var5.bind(var4)(var2);
            var2 = var8.useNavigation;
            var8 = var2.bind(var8)();
            var2 = 5;
            var2 = var7[var2];
            var7 = var5.bind(var4)(var2);
            var5 = var7.useConnectRetry;
            var2 = _closure1_slot2;
            var2 = var2.PRE_CONNECT;
            var5 = var5.bind(var7)(var8, var2);
            var2 = _closure1_slot3;
            var2 = var2.UNDER_MINIMUM_AGE;
            if(!(var3 !== var2)) { _fun0001_ip = 2; continue _fun0001 }
case 3:
            var8 = _closure1_slot0;
            var9 = _closure1_slot1;
            var2 = 6;
            var3 = var9[var2];
            var3 = var8.bind(var4)(var3);
            var7 = var3.intl;
            var3 = var7.string;
            var2 = var9[var2];
            var2 = var8.bind(var4)(var2);
            var2 = var2.t;
            var2 = var2.qE9nqK;
            var7 = var3.bind(var7)(var2);
            _fun0001_ip = 4; continue _fun0001;
case 2:
            var9 = _closure1_slot0;
            var10 = _closure1_slot1;
            var2 = 6;
            var3 = var10[var2];
            var3 = var9.bind(var4)(var3);
            var8 = var3.intl;
            var3 = var8.string;
            var2 = var10[var2];
            var2 = var9.bind(var4)(var2);
            var2 = var2.t;
            var2 = var2.3dIn2N;
            var7 = var3.bind(var8)(var2);
case 4:
            var3 = _closure1_slot4;
            var11 = _closure1_slot0;
            var12 = _closure1_slot1;
            var1 = 7;
            var1 = var12[var1];
            var1 = var11.bind(var4)(var1);
            var2 = var1.TwoWayLinkError;
            var1 = {};
            var8 = 6;
            var9 = var12[var8];
            var9 = var11.bind(var4)(var9);
            var10 = var9.intl;
            var9 = var10.string;
            var8 = var12[var8];
            var8 = var11.bind(var4)(var8);
            var8 = var8.t;
            var8 = var8.eY3qHR;
            var8 = var9.bind(var10)(var8);
            var1['title'] = var8;
            var1['body'] = var7;
            var1['onClose'] = var6;
            var1['onRetry'] = var5;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        }
    };
    var3['PlayStationLinkError'] = var2;
    return var1;
})();