// app/modules/user_settings/native/two_way_link/playstation/PlayStationLinkError.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.PlayStationLinkModalScenes;
    var _closure1_slot2 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AbortCodes;
    var _closure1_slot3 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/two_way_link/playstation/PlayStationLinkError.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: PlayStationLinkError
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscar = entity.onClose;
            zulu = entity.errorCode;
            report = _closure1_slot0;
            golf = _closure1_slot1;
            mike = 4;
            mike = golf[mike];
            tango = undefined;
            options = report.bind(tango)(mike);
            mike = options.useNavigation;
            options = mike.bind(options)();
            mike = 5;
            mike = golf[mike];
            golf = report.bind(tango)(mike);
            report = golf.useConnectRetry;
            mike = _closure1_slot2;
            mike = mike.PRE_CONNECT;
            report = report.bind(golf)(options, mike);
            mike = _closure1_slot3;
            mike = mike.UNDER_MINIMUM_AGE;
            if(!(zulu !== mike)) { _fun00002_ip = 157; continue _fun00001 }
 98:
            options = _closure1_slot0;
            verify = _closure1_slot1;
            mike = 6;
            zulu = verify[mike];
            zulu = options.bind(tango)(zulu);
            golf = zulu.intl;
            zulu = golf.string;
            mike = verify[mike];
            mike = options.bind(tango)(mike);
            mike = mike.t;
            mike = mike.qE9nqK;
            golf = zulu.bind(golf)(mike);
            _fun00002_ip = 214; continue _fun00001;
 157:
            verify = _closure1_slot0;
            offset = _closure1_slot1;
            mike = 6;
            zulu = offset[mike];
            zulu = verify.bind(tango)(zulu);
            options = zulu.intl;
            zulu = options.string;
            mike = offset[mike];
            mike = verify.bind(tango)(mike);
            mike = mike.t;
            mike = mike.3dIn2N;
            golf = zulu.bind(options)(mike);
 214:
            zulu = _closure1_slot4;
            yankee = _closure1_slot0;
            romeo = _closure1_slot1;
            entity = 7;
            entity = romeo[entity];
            entity = yankee.bind(tango)(entity);
            mike = entity.TwoWayLinkError;
            entity = {};
            options = 6;
            verify = romeo[options];
            verify = yankee.bind(tango)(verify);
            offset = verify.intl;
            verify = offset.string;
            options = romeo[options];
            options = yankee.bind(tango)(options);
            options = options.t;
            options = options.eY3qHR;
            options = verify.bind(offset)(options);
            entity['title'] = options;
            entity['body'] = golf;
            entity['onClose'] = oscar;
            entity['onRetry'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['PlayStationLinkError'] = mike;
    return entity;
})();