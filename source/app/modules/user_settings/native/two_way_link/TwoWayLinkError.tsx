// app/modules/user_settings/native/two_way_link/TwoWayLinkError.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Image;
    var _closure1_slot3 = golf;
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'width': 254, 'height': 127, 'marginBottom': 32};
    tango['image'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/two_way_link/TwoWayLinkError.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: TwoWayLinkError
        entity = argFoo;
        backup = entity.onClose;
        foxtrot = entity.title;
        offset = entity.body;
        sizing = entity.onRetry;
        entity = _closure1_slot7;
        tango = undefined;
        verify = entity.bind(tango)();
        result = _closure1_slot0;
        echo = _closure1_slot2;
        entity = 4;
        entity = echo[entity];
        mike = result.bind(tango)(entity);
        entity = mike.useTwoWayLinkStyles;
        yankee = entity.bind(mike)();
        zulu = _closure1_slot6;
        mike = _closure1_slot4;
        entity = {};
        report = yankee.container;
        entity['style'] = report;
        report = {};
        oscar = yankee.content;
        report['style'] = oscar;
        options = _closure1_slot5;
        golf = _closure1_slot3;
        oscar = {};
        kilo = _closure1_slot1;
        romeo = 5;
        romeo = echo[romeo];
        romeo = kilo.bind(tango)(romeo);
        oscar['source'] = romeo;
        verify = verify.image;
        oscar['style'] = verify;
        golf = options.bind(tango)(golf, oscar);
        oscar = new Array(3);
        oscar[0] = golf;
        golf = 6;
        verify = echo[golf];
        verify = result.bind(tango)(verify);
        romeo = verify.Text;
        verify = {'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        kilo = yankee.title;
        verify['style'] = kilo;
        verify['children'] = foxtrot;
        verify = options.bind(tango)(romeo, verify);
        oscar[1] = verify;
        golf = echo[golf];
        golf = result.bind(tango)(golf);
        verify = golf.Text;
        golf = {'variant': 'text-md/normal', 'color': 'header-secondary'};
        romeo = yankee.body;
        golf['style'] = romeo;
        golf['children'] = offset;
        golf = options.bind(tango)(verify, golf);
        oscar[2] = golf;
        report['children'] = oscar;
        oscar = zulu.bind(tango)(mike, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = 7;
        oscar = echo[oscar];
        oscar = result.bind(tango)(oscar);
        golf = oscar.SafeAreaPaddingView;
        oscar = {};
        verify = true;
        oscar['bottom'] = verify;
        verify = yankee.footerContainer;
        oscar['style'] = verify;
        verify = 8;
        verify = echo[verify];
        verify = result.bind(tango)(verify);
        offset = verify.Stack;
        verify = {'spacing': 8, 'direction': 'vertical'};
        yankee = yankee.footerButton;
        verify['style'] = yankee;
        romeo = 9;
        yankee = echo[romeo];
        yankee = result.bind(tango)(yankee);
        foxtrot = yankee.Button;
        yankee = {'size': 'lg', 'variant': 'primary'};
        kilo = 10;
        output = echo[kilo];
        output = result.bind(tango)(output);
        source = output.intl;
        update = source.string;
        output = echo[kilo];
        output = result.bind(tango)(output);
        output = output.t;
        output = output.5911LS;
        output = update.bind(source)(output);
        yankee['text'] = output;
        yankee['onPress'] = sizing;
        foxtrot = options.bind(tango)(foxtrot, yankee);
        yankee = new Array(2);
        yankee[0] = foxtrot;
        romeo = echo[romeo];
        romeo = result.bind(tango)(romeo);
        foxtrot = romeo.Button;
        romeo = {'size': 'lg', 'variant': 'secondary'};
        sizing = echo[kilo];
        sizing = result.bind(tango)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kilo = echo[kilo];
        kilo = result.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.ETE/oK;
        kilo = sizing.bind(output)(kilo);
        romeo['text'] = kilo;
        romeo['onPress'] = backup;
        romeo = options.bind(tango)(foxtrot, romeo);
        yankee[1] = romeo;
        verify['children'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['TwoWayLinkError'] = mike;
    return entity;
})();