// app/modules/user_settings/native/two_way_link/xbox/XboxLinkDiscordConsent.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot2 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.XboxLinkModalScenes;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.PlatformTypes;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.XBOX_CLIENT_SCOPES;
    var _closure1_slot5 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot6 = tango;
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/two_way_link/xbox/XboxLinkDiscordConsent.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: XboxLinkDiscordConsent
        mike = argFoo;
        yankee = mike.callbackCode;
        options = mike.callbackState;
        verify = _closure1_slot0;
        offset = _closure1_slot1;
        mike = 5;
        mike = offset[mike];
        tango = undefined;
        zulu = verify.bind(tango)(mike);
        mike = zulu.useNavigation;
        romeo = mike.bind(zulu)();
        var _closure2_slot0 = romeo;
        report = _closure1_slot2;
        oscar = report.useCallback;
        zulu = new Array(1);
        zulu[0] = romeo;
        mike = function() {
            zulu = _closure2_slot0;
            mike = zulu.push;
            entity = _closure1_slot3;
            entity = entity.SUCCESS;
            entity = mike.bind(zulu)(entity);
            entity = undefined;
            return entity;
        };
        oscar = oscar.bind(report)(mike, zulu);
        zulu = report.useCallback;
        mike = new Array(1);
        mike[0] = romeo;
        entity = function() {
            zulu = _closure2_slot0;
            mike = zulu.push;
            entity = _closure1_slot3;
            entity = entity.ERROR;
            entity = mike.bind(zulu)(entity);
            entity = undefined;
            return entity;
        };
        report = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot6;
        entity = 6;
        entity = offset[entity];
        entity = verify.bind(tango)(entity);
        mike = entity.TwoWayLinkDiscordConsent;
        entity = {};
        romeo = _closure1_slot4;
        romeo = romeo.XBOX;
        entity['platformType'] = romeo;
        entity['callbackCode'] = yankee;
        entity['callbackState'] = options;
        options = 7;
        options = offset[options];
        options = verify.bind(tango)(options);
        options = options.ConsoleOAuthApplications;
        options = options.XBOX_APPLICATION_ID;
        entity['clientId'] = options;
        golf = _closure1_slot5;
        entity['scopes'] = golf;
        entity['onNext'] = oscar;
        entity['onError'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();