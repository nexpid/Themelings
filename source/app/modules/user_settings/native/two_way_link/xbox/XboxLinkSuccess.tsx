// app/modules/user_settings/native/two_way_link/xbox/XboxLinkSuccess.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    foxtrot = 1;
    golf = oscar[foxtrot];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Image;
    var _closure1_slot5 = golf;
    golf = tango.View;
    var _closure1_slot6 = golf;
    golf = tango.Linking;
    var _closure1_slot7 = golf;
    tango = tango.Pressable;
    var _closure1_slot8 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.XboxLinkModalScenes;
    var _closure1_slot9 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.XBOX_ANDROID_APP_LINK;
    var _closure1_slot10 = golf;
    golf = tango.XBOX_IOS_APP_LINK;
    var _closure1_slot11 = golf;
    tango = tango.XBOX_URL_BASE;
    var _closure1_slot12 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot13 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot14 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    romeo = 24;
    verify = {'width': 58, 'height': 85, 'marginBottom': 24};
    tango['image'] = verify;
    verify = {'alignItems': 'center', 'alignSelf': 'stretch', 'backgroundColor': null, 'marginTop': 24, 'padding': 16, 'borderRadius': null, 'flexDirection': 'row'};
    offset = 7;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    tango['getApp'] = verify;
    verify = {'marginRight': 12, 'width': 40, 'height': 40, 'alignItems': 'center', 'justifyContent': 'center'};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xs;
    verify['borderRadius'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.unsafe_rawColors;
    backup = backup.XBOX;
    verify['backgroundColor'] = backup;
    tango['appLogoBox'] = verify;
    verify = {'width': 32, 'height': 32};
    tango['appLogo'] = verify;
    verify = {};
    verify['flex'] = foxtrot;
    tango['getAppTitle'] = verify;
    verify = {};
    verify['marginTop'] = romeo;
    tango['installButton'] = verify;
    verify = {};
    romeo = 8;
    verify['marginLeft'] = romeo;
    tango['icon'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INTERACTIVE_ACTIVE;
    verify['color'] = offset;
    tango['externalLinkIcon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot15 = tango;
    tango = 20;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/two_way_link/xbox/XboxLinkSuccess.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: XboxLinkDiscordSuccess
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = _closure1_slot15;
            tango = undefined;
            echo = mike.bind(tango)();
            sizing = _closure1_slot0;
            update = _closure1_slot2;
            mike = 8;
            mike = update[mike];
            zulu = sizing.bind(tango)(mike);
            mike = zulu.useTwoWayLinkStyles;
            yankee = mike.bind(zulu)();
            report = _closure1_slot4;
            mike = report.useState;
            offset = true;
            oscar = mike.bind(report)(offset);
            zulu = _closure1_slot3;
            mike = 2;
            zulu = zulu.bind(tango)(oscar, mike);
            mike = 0;
            backup = zulu[mike];
            var _closure2_slot0 = backup;
            mike = 1;
            mike = zulu[mike];
            var _closure2_slot1 = mike;
            oscar = report.useEffect;
            zulu = function() {
                zulu = _closure1_slot7;
                mike = zulu.canOpenURL;
                entity = _closure1_slot12;
                zulu = mike.bind(zulu)(entity);
                mike = zulu.then;
                entity = _closure2_slot1;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            mike = new Array(0);
            mike = oscar.bind(report)(zulu, mike);
            oscar = report.useCallback;
            zulu = new Array(1);
            zulu[0] = backup;
            mike = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure2_slot0;
                    if(entity) { _fun00004_ip = 77; continue _fun00003 }
 10:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    mike = 9;
                    zulu = zulu[mike];
                    mike = undefined;
                    zulu = tango.bind(mike)(zulu);
                    mike = zulu.isAndroid;
                    tango = mike.bind(zulu)();
                    zulu = _closure1_slot7;
                    mike = zulu.openURL;
                    if(tango) { _fun00004_ip = 68; continue _fun00003 }
 57:
                    tango = _closure1_slot11;
                    tango = mike.bind(zulu)(tango);
                    _fun00004_ip = 77; continue _fun00003;
 68:
                    entity = _closure1_slot10;
                    entity = mike.bind(zulu)(entity);
 77:
                    entity = undefined;
                    return entity;
                }
            };
            romeo = oscar.bind(report)(mike, zulu);
            mike = 10;
            mike = update[mike];
            zulu = sizing.bind(tango)(mike);
            mike = zulu.useNavigation;
            oscar = mike.bind(zulu)();
            var _closure2_slot2 = oscar;
            zulu = report.useCallback;
            mike = new Array(1);
            mike[0] = oscar;
            entity = function() {
                zulu = _closure2_slot2;
                mike = zulu.push;
                entity = _closure1_slot9;
                entity = entity.EDUCATION;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            foxtrot = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot14;
            mike = _closure1_slot6;
            entity = {};
            report = yankee.container;
            entity['style'] = report;
            report = {};
            oscar = yankee.content;
            report['style'] = oscar;
            output = _closure1_slot13;
            control = _closure1_slot5;
            oscar = {};
            sequence = _closure1_slot1;
            golf = 11;
            golf = update[golf];
            golf = sequence.bind(tango)(golf);
            oscar['source'] = golf;
            golf = echo.image;
            oscar['style'] = golf;
            golf = output.bind(tango)(control, oscar);
            oscar = new Array(4);
            oscar[0] = golf;
            kilo = 12;
            golf = update[kilo];
            golf = sizing.bind(tango)(golf);
            options = golf.Text;
            golf = {'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            result = yankee.title;
            golf['style'] = result;
            result = 13;
            source = update[result];
            source = sizing.bind(tango)(source);
            config = source.intl;
            vacuum = config.string;
            source = update[result];
            source = sizing.bind(tango)(source);
            source = source.t;
            source = source.aGRPVl;
            source = vacuum.bind(config)(source);
            golf['children'] = source;
            golf = output.bind(tango)(options, golf);
            oscar[1] = golf;
            golf = update[kilo];
            golf = sizing.bind(tango)(golf);
            options = golf.Text;
            golf = {'variant': 'text-md/normal', 'color': 'header-secondary'};
            source = yankee.body;
            golf['style'] = source;
            source = update[result];
            source = sizing.bind(tango)(source);
            config = source.intl;
            vacuum = config.string;
            source = update[result];
            source = sizing.bind(tango)(source);
            source = source.t;
            source = source.m3mBYG;
            source = vacuum.bind(config)(source);
            golf['children'] = source;
            golf = output.bind(tango)(options, golf);
            oscar[2] = golf;
            options = _closure1_slot8;
            golf = {};
            golf['onPress'] = romeo;
            romeo = echo.getApp;
            golf['style'] = romeo;
            romeo = {};
            source = echo.appLogoBox;
            romeo['style'] = source;
            source = {};
            vacuum = 14;
            vacuum = update[vacuum];
            vacuum = sequence.bind(tango)(vacuum);
            source['source'] = vacuum;
            vacuum = echo.appLogo;
            source['style'] = vacuum;
            source = output.bind(tango)(control, source);
            romeo['children'] = source;
            source = output.bind(tango)(mike, romeo);
            romeo = new Array(3);
            romeo[0] = source;
            kilo = update[kilo];
            kilo = sizing.bind(tango)(kilo);
            sizing = kilo.Text;
            kilo = {'style': null, 'variant': 'heading-md/semibold', 'color': 'header-primary'};
            update = echo.getAppTitle;
            kilo['style'] = update;
            source = _closure1_slot0;
            update = _closure1_slot2;
            control = update[result];
            control = source.bind(tango)(control);
            vacuum = control.intl;
            control = vacuum.string;
            update = update[result];
            update = source.bind(tango)(update);
            source = update.t;
            if(backup) { _fun00002_ip = 656; continue _fun00001 }
 643:
            update = source.12Kx2t;
            update = control.bind(vacuum)(update);
            _fun00002_ip = 667; continue _fun00001;
 656:
            source = source.zcKE8f;
            update = control.bind(vacuum)(source);
 667:
            kilo['children'] = update;
            kilo = output.bind(tango)(sizing, kilo);
            romeo[1] = kilo;
            output = _closure1_slot13;
            if(backup) { _fun00002_ip = 783; continue _fun00001 }
 688:
            update = _closure1_slot1;
            source = _closure1_slot2;
            sizing = 16;
            backup = source[sizing];
            kilo = update.bind(tango)(backup);
            backup = {};
            control = 17;
            control = source[control];
            control = update.bind(tango)(control);
            backup['source'] = control;
            sizing = source[sizing];
            sizing = update.bind(tango)(sizing);
            sizing = sizing.Sizes;
            sizing = sizing.SMALL;
            backup['size'] = sizing;
            sizing = echo.externalLinkIcon;
            sizing = sizing.color;
            backup['color'] = sizing;
            sizing = echo.icon;
            backup['style'] = sizing;
            backup = output.bind(tango)(kilo, backup);
            _fun00002_ip = 828; continue _fun00001;
 783:
            sizing = _closure1_slot5;
            kilo = {};
            source = _closure1_slot1;
            control = _closure1_slot2;
            update = 15;
            update = control[update];
            update = source.bind(tango)(update);
            kilo['source'] = update;
            echo = echo.icon;
            kilo['style'] = echo;
            backup = output.bind(tango)(sizing, kilo);
 828:
            romeo[2] = backup;
            golf['children'] = romeo;
            golf = zulu.bind(tango)(options, golf);
            oscar[3] = golf;
            report['children'] = oscar;
            oscar = zulu.bind(tango)(mike, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot13;
            output = _closure1_slot0;
            backup = _closure1_slot2;
            oscar = 18;
            oscar = backup[oscar];
            oscar = output.bind(tango)(oscar);
            golf = oscar.SafeAreaPaddingView;
            oscar = {};
            oscar['bottom'] = offset;
            offset = yankee.footerContainer;
            oscar['style'] = offset;
            offset = _closure1_slot6;
            verify = {};
            yankee = yankee.footerButton;
            verify['style'] = yankee;
            yankee = 19;
            yankee = backup[yankee];
            yankee = output.bind(tango)(yankee);
            romeo = yankee.Button;
            yankee = {'size': 'lg', 'variant': 'primary'};
            kilo = backup[result];
            kilo = output.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = backup[result];
            backup = output.bind(tango)(backup);
            backup = backup.t;
            backup = backup.3PatS0;
            backup = kilo.bind(sizing)(backup);
            yankee['text'] = backup;
            yankee['onPress'] = foxtrot;
            yankee = options.bind(tango)(romeo, yankee);
            verify['children'] = yankee;
            verify = options.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();