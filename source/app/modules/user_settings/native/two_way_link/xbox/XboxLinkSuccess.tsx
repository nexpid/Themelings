// app/modules/user_settings/native/two_way_link/xbox/XboxLinkSuccess.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    foxtra = 1;
    golfie = oscard[foxtra];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot5 = golfie;
    golfie = tangon.View;
    var _closure1_slot6 = golfie;
    golfie = tangon.Linking;
    var _closure1_slot7 = golfie;
    tangon = tangon.Pressable;
    var _closure1_slot8 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.XboxLinkModalScenes;
    var _closure1_slot9 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.XBOX_ANDROID_APP_LINK;
    var _closure1_slot10 = golfie;
    golfie = tangon.XBOX_IOS_APP_LINK;
    var _closure1_slot11 = golfie;
    tangon = tangon.XBOX_URL_BASE;
    var _closure1_slot12 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot13 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot14 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    romeon = 24;
    verify = {'width': 58, 'height': 85, 'marginBottom': 24};
    tangon['image'] = verify;
    verify = {'alignItems': 'center', 'alignSelf': 'stretch', 'backgroundColor': null, 'marginTop': 24, 'padding': 16, 'borderRadius': null, 'flexDirection': 'row'};
    offset = 7;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    tangon['getApp'] = verify;
    verify = {'marginRight': 12, 'width': 40, 'height': 40, 'alignItems': 'center', 'justifyContent': 'center'};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xs;
    verify['borderRadius'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.unsafe_rawColors;
    backup = backup.XBOX;
    verify['backgroundColor'] = backup;
    tangon['appLogoBox'] = verify;
    verify = {'width': 32, 'height': 32};
    tangon['appLogo'] = verify;
    verify = {};
    verify['flex'] = foxtra;
    tangon['getAppTitle'] = verify;
    verify = {};
    verify['marginTop'] = romeon;
    tangon['installButton'] = verify;
    verify = {};
    romeon = 8;
    verify['marginLeft'] = romeon;
    tangon['icon'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INTERACTIVE_ACTIVE;
    verify['color'] = offset;
    tangon['externalLinkIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot15 = tangon;
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/two_way_link/xbox/XboxLinkSuccess.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: XboxLinkDiscordSuccess
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = _closure1_slot15;
            tangon = undefined;
            echoed = michal.bind(tangon)();
            sizing = _closure1_slot0;
            update = _closure1_slot2;
            michal = 8;
            michal = update[michal];
            zuuluu = sizing.bind(tangon)(michal);
            michal = zuuluu.useTwoWayLinkStyles;
            yankee = michal.bind(zuuluu)();
            report = _closure1_slot4;
            michal = report.useState;
            offset = true;
            oscard = michal.bind(report)(offset);
            zuuluu = _closure1_slot3;
            michal = 2;
            zuuluu = zuuluu.bind(tangon)(oscard, michal);
            michal = 0;
            backup = zuuluu[michal];
            var _closure2_slot0 = backup;
            michal = 1;
            michal = zuuluu[michal];
            var _closure2_slot1 = michal;
            oscard = report.useEffect;
            zuuluu = function() {
                zuuluu = _closure1_slot7;
                michal = zuuluu.canOpenURL;
                entity = _closure1_slot12;
                zuuluu = michal.bind(zuuluu)(entity);
                michal = zuuluu.then;
                entity = _closure2_slot1;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            michal = new Array(0);
            michal = oscard.bind(report)(zuuluu, michal);
            oscard = report.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = backup;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure2_slot0;
                    if(entity) { _fun00004_ip = 77; continue _fun00003 }
 10:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 9;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    zuuluu = tangon.bind(michal)(zuuluu);
                    michal = zuuluu.isAndroid;
                    tangon = michal.bind(zuuluu)();
                    zuuluu = _closure1_slot7;
                    michal = zuuluu.openURL;
                    if(tangon) { _fun00004_ip = 68; continue _fun00003 }
 57:
                    tangon = _closure1_slot11;
                    tangon = michal.bind(zuuluu)(tangon);
                    _fun00004_ip = 77; continue _fun00003;
 68:
                    entity = _closure1_slot10;
                    entity = michal.bind(zuuluu)(entity);
 77:
                    entity = undefined;
                    return entity;
                }
            };
            romeon = oscard.bind(report)(michal, zuuluu);
            michal = 10;
            michal = update[michal];
            zuuluu = sizing.bind(tangon)(michal);
            michal = zuuluu.useNavigation;
            oscard = michal.bind(zuuluu)();
            var _closure2_slot2 = oscard;
            zuuluu = report.useCallback;
            michal = new Array(1);
            michal[0] = oscard;
            entity = function() {
                zuuluu = _closure2_slot2;
                michal = zuuluu.push;
                entity = _closure1_slot9;
                entity = entity.EDUCATION;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            foxtra = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot14;
            michal = _closure1_slot6;
            entity = {};
            report = yankee.container;
            entity['style'] = report;
            report = {};
            oscard = yankee.content;
            report['style'] = oscard;
            output = _closure1_slot13;
            ctrled = _closure1_slot5;
            oscard = {};
            sequen = _closure1_slot1;
            golfie = 11;
            golfie = update[golfie];
            golfie = sequen.bind(tangon)(golfie);
            oscard['source'] = golfie;
            golfie = echoed.image;
            oscard['style'] = golfie;
            golfie = output.bind(tangon)(ctrled, oscard);
            oscard = new Array(4);
            oscard[0] = golfie;
            kiloes = 12;
            golfie = update[kiloes];
            golfie = sizing.bind(tangon)(golfie);
            option = golfie.Text;
            golfie = {'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            result = yankee.title;
            golfie['style'] = result;
            result = 13;
            source = update[result];
            source = sizing.bind(tangon)(source);
            config = source.intl;
            vacuum = config.string;
            source = update[result];
            source = sizing.bind(tangon)(source);
            source = source.t;
            source = source.aGRPVl;
            source = vacuum.bind(config)(source);
            golfie['children'] = source;
            golfie = output.bind(tangon)(option, golfie);
            oscard[1] = golfie;
            golfie = update[kiloes];
            golfie = sizing.bind(tangon)(golfie);
            option = golfie.Text;
            golfie = {'variant': 'text-md/normal', 'color': 'header-secondary'};
            source = yankee.body;
            golfie['style'] = source;
            source = update[result];
            source = sizing.bind(tangon)(source);
            config = source.intl;
            vacuum = config.string;
            source = update[result];
            source = sizing.bind(tangon)(source);
            source = source.t;
            source = source.m3mBYG;
            source = vacuum.bind(config)(source);
            golfie['children'] = source;
            golfie = output.bind(tangon)(option, golfie);
            oscard[2] = golfie;
            option = _closure1_slot8;
            golfie = {};
            golfie['onPress'] = romeon;
            romeon = echoed.getApp;
            golfie['style'] = romeon;
            romeon = {};
            source = echoed.appLogoBox;
            romeon['style'] = source;
            source = {};
            vacuum = 14;
            vacuum = update[vacuum];
            vacuum = sequen.bind(tangon)(vacuum);
            source['source'] = vacuum;
            vacuum = echoed.appLogo;
            source['style'] = vacuum;
            source = output.bind(tangon)(ctrled, source);
            romeon['children'] = source;
            source = output.bind(tangon)(michal, romeon);
            romeon = new Array(3);
            romeon[0] = source;
            kiloes = update[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            sizing = kiloes.Text;
            kiloes = {'style': null, 'variant': 'heading-md/semibold', 'color': 'header-primary'};
            update = echoed.getAppTitle;
            kiloes['style'] = update;
            source = _closure1_slot0;
            update = _closure1_slot2;
            ctrled = update[result];
            ctrled = source.bind(tangon)(ctrled);
            vacuum = ctrled.intl;
            ctrled = vacuum.string;
            update = update[result];
            update = source.bind(tangon)(update);
            source = update.t;
            if(backup) { _fun00002_ip = 654; continue _fun00001 }
 641:
            update = source.12Kx2t;
            update = ctrled.bind(vacuum)(update);
            _fun00002_ip = 667; continue _fun00001;
 654:
            source = source.zcKE8f;
            update = ctrled.bind(vacuum)(source);
 667:
            kiloes['children'] = update;
            kiloes = output.bind(tangon)(sizing, kiloes);
            romeon[1] = kiloes;
            output = _closure1_slot13;
            if(backup) { _fun00002_ip = 783; continue _fun00001 }
 688:
            update = _closure1_slot1;
            source = _closure1_slot2;
            sizing = 16;
            backup = source[sizing];
            kiloes = update.bind(tangon)(backup);
            backup = {};
            ctrled = 17;
            ctrled = source[ctrled];
            ctrled = update.bind(tangon)(ctrled);
            backup['source'] = ctrled;
            sizing = source[sizing];
            sizing = update.bind(tangon)(sizing);
            sizing = sizing.Sizes;
            sizing = sizing.SMALL;
            backup['size'] = sizing;
            sizing = echoed.externalLinkIcon;
            sizing = sizing.color;
            backup['color'] = sizing;
            sizing = echoed.icon;
            backup['style'] = sizing;
            backup = output.bind(tangon)(kiloes, backup);
            _fun00002_ip = 828; continue _fun00001;
 783:
            sizing = _closure1_slot5;
            kiloes = {};
            source = _closure1_slot1;
            ctrled = _closure1_slot2;
            update = 15;
            update = ctrled[update];
            update = source.bind(tangon)(update);
            kiloes['source'] = update;
            echoed = echoed.icon;
            kiloes['style'] = echoed;
            backup = output.bind(tangon)(sizing, kiloes);
 828:
            romeon[2] = backup;
            golfie['children'] = romeon;
            golfie = zuuluu.bind(tangon)(option, golfie);
            oscard[3] = golfie;
            report['children'] = oscard;
            oscard = zuuluu.bind(tangon)(michal, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot13;
            output = _closure1_slot0;
            backup = _closure1_slot2;
            oscard = 18;
            oscard = backup[oscard];
            oscard = output.bind(tangon)(oscard);
            golfie = oscard.SafeAreaPaddingView;
            oscard = {};
            oscard['bottom'] = offset;
            offset = yankee.footerContainer;
            oscard['style'] = offset;
            offset = _closure1_slot6;
            verify = {};
            yankee = yankee.footerButton;
            verify['style'] = yankee;
            yankee = 19;
            yankee = backup[yankee];
            yankee = output.bind(tangon)(yankee);
            romeon = yankee.Button;
            yankee = {'size': 'lg', 'variant': 'primary'};
            kiloes = backup[result];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = backup[result];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.3PatS0;
            backup = kiloes.bind(sizing)(backup);
            yankee['text'] = backup;
            yankee['onPress'] = foxtra;
            yankee = option.bind(tangon)(romeon, yankee);
            verify['children'] = yankee;
            verify = option.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();