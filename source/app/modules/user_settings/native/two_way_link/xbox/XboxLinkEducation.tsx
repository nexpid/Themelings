// app/modules/user_settings/native/two_way_link/xbox/XboxLinkEducation.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Image;
    var _closure1_slot4 = golf;
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.HelpdeskArticles;
    var _closure1_slot6 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'width': 124, 'height': 160, 'marginBottom': 24};
    tango['image'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/two_way_link/xbox/XboxLinkEducation.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: XboxLinkEducation
        entity = argFoo;
        romeo = entity.onClose;
        entity = _closure1_slot9;
        tango = undefined;
        verify = entity.bind(tango)();
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        entity = 5;
        entity = output[entity];
        mike = sizing.bind(tango)(entity);
        entity = mike.useTwoWayLinkStyles;
        offset = entity.bind(mike)();
        mike = _closure1_slot1;
        entity = 6;
        entity = output[entity];
        zulu = mike.bind(tango)(entity);
        mike = zulu.getArticleURL;
        entity = _closure1_slot6;
        entity = entity.XBOX_CONNECTION;
        echo = mike.bind(zulu)(entity);
        report = _closure1_slot3;
        zulu = report.useMemo;
        mike = function() {
            entity = {};
            tango = _closure1_slot1;
            zulu = _closure1_slot2;
            mike = 7;
            zulu = zulu[mike];
            mike = undefined;
            mike = tango.bind(mike)(zulu);
            entity['uri'] = mike;
            return entity;
        };
        entity = new Array(0);
        yankee = zulu.bind(report)(mike, entity);
        zulu = _closure1_slot8;
        mike = _closure1_slot5;
        entity = {};
        report = offset.container;
        entity['style'] = report;
        report = {};
        golf = offset.content;
        report['style'] = golf;
        options = _closure1_slot7;
        golf = _closure1_slot4;
        oscar = {};
        oscar['source'] = yankee;
        verify = verify.image;
        oscar['style'] = verify;
        golf = options.bind(tango)(golf, oscar);
        oscar = new Array(3);
        oscar[0] = golf;
        golf = 8;
        golf = output[golf];
        golf = sizing.bind(tango)(golf);
        verify = golf.Text;
        golf = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
        yankee = offset.title;
        golf['style'] = yankee;
        foxtrot = 9;
        yankee = output[foxtrot];
        yankee = sizing.bind(tango)(yankee);
        kilo = yankee.intl;
        backup = kilo.string;
        yankee = output[foxtrot];
        yankee = sizing.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.jHytam;
        yankee = backup.bind(kilo)(yankee);
        golf['children'] = yankee;
        golf = options.bind(tango)(verify, golf);
        oscar[1] = golf;
        golf = 10;
        golf = output[golf];
        golf = sizing.bind(tango)(golf);
        verify = golf.TextWithIOSLinkWorkaround;
        golf = {'variant': 'text-md/medium', 'color': 'header-secondary'};
        yankee = offset.body;
        golf['style'] = yankee;
        yankee = output[foxtrot];
        yankee = sizing.bind(tango)(yankee);
        result = yankee.intl;
        kilo = result.format;
        yankee = output[foxtrot];
        yankee = sizing.bind(tango)(yankee);
        yankee = yankee.t;
        backup = yankee.yhozp6;
        yankee = {};
        yankee['helpdeskArticleUrl'] = echo;
        yankee = kilo.bind(result)(backup, yankee);
        golf['children'] = yankee;
        golf = options.bind(tango)(verify, golf);
        oscar[2] = golf;
        report['children'] = oscar;
        oscar = zulu.bind(tango)(mike, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = 11;
        oscar = output[oscar];
        oscar = sizing.bind(tango)(oscar);
        golf = oscar.SafeAreaPaddingView;
        oscar = {};
        verify = true;
        oscar['bottom'] = verify;
        verify = offset.footerContainer;
        oscar['style'] = verify;
        verify = {};
        offset = offset.footerButton;
        verify['style'] = offset;
        offset = 12;
        offset = output[offset];
        offset = sizing.bind(tango)(offset);
        yankee = offset.Button;
        offset = {'size': 'lg', 'variant': 'primary'};
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = output[foxtrot];
        foxtrot = sizing.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.i4jeWV;
        foxtrot = backup.bind(kilo)(foxtrot);
        offset['text'] = foxtrot;
        offset['onPress'] = romeo;
        offset = options.bind(tango)(yankee, offset);
        verify['children'] = offset;
        verify = options.bind(tango)(mike, verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();