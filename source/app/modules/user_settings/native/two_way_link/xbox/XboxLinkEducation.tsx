// app/modules/user_settings/native/two_way_link/xbox/XboxLinkEducation.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot4 = golfie;
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot6 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'width': 124, 'height': 160, 'marginBottom': 24};
    tangon['image'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/two_way_link/xbox/XboxLinkEducation.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: XboxLinkEducation
        entity = argFoo;
        romeon = entity.onClose;
        entity = _closure1_slot9;
        tangon = undefined;
        verify = entity.bind(tangon)();
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        entity = 5;
        entity = output[entity];
        michal = sizing.bind(tangon)(entity);
        entity = michal.useTwoWayLinkStyles;
        offset = entity.bind(michal)();
        michal = _closure1_slot1;
        entity = 6;
        entity = output[entity];
        zuuluu = michal.bind(tangon)(entity);
        michal = zuuluu.getArticleURL;
        entity = _closure1_slot6;
        entity = entity.XBOX_CONNECTION;
        echoed = michal.bind(zuuluu)(entity);
        report = _closure1_slot3;
        zuuluu = report.useMemo;
        michal = function() {
            entity = {};
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            michal = 7;
            zuuluu = zuuluu[michal];
            michal = undefined;
            michal = tangon.bind(michal)(zuuluu);
            entity['uri'] = michal;
            return entity;
        };
        entity = new Array(0);
        yankee = zuuluu.bind(report)(michal, entity);
        zuuluu = _closure1_slot8;
        michal = _closure1_slot5;
        entity = {};
        report = offset.container;
        entity['style'] = report;
        report = {};
        golfie = offset.content;
        report['style'] = golfie;
        option = _closure1_slot7;
        golfie = _closure1_slot4;
        oscard = {};
        oscard['source'] = yankee;
        verify = verify.image;
        oscard['style'] = verify;
        golfie = option.bind(tangon)(golfie, oscard);
        oscard = new Array(3);
        oscard[0] = golfie;
        golfie = 8;
        golfie = output[golfie];
        golfie = sizing.bind(tangon)(golfie);
        verify = golfie.Text;
        golfie = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
        yankee = offset.title;
        golfie['style'] = yankee;
        foxtra = 9;
        yankee = output[foxtra];
        yankee = sizing.bind(tangon)(yankee);
        kiloes = yankee.intl;
        backup = kiloes.string;
        yankee = output[foxtra];
        yankee = sizing.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.jHytam;
        yankee = backup.bind(kiloes)(yankee);
        golfie['children'] = yankee;
        golfie = option.bind(tangon)(verify, golfie);
        oscard[1] = golfie;
        golfie = 10;
        golfie = output[golfie];
        golfie = sizing.bind(tangon)(golfie);
        verify = golfie.TextWithIOSLinkWorkaround;
        golfie = {'variant': 'text-md/medium', 'color': 'header-secondary'};
        yankee = offset.body;
        golfie['style'] = yankee;
        yankee = output[foxtra];
        yankee = sizing.bind(tangon)(yankee);
        result = yankee.intl;
        kiloes = result.format;
        yankee = output[foxtra];
        yankee = sizing.bind(tangon)(yankee);
        yankee = yankee.t;
        backup = yankee.yhozp6;
        yankee = {};
        yankee['helpdeskArticleUrl'] = echoed;
        yankee = kiloes.bind(result)(backup, yankee);
        golfie['children'] = yankee;
        golfie = option.bind(tangon)(verify, golfie);
        oscard[2] = golfie;
        report['children'] = oscard;
        oscard = zuuluu.bind(tangon)(michal, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = 11;
        oscard = output[oscard];
        oscard = sizing.bind(tangon)(oscard);
        golfie = oscard.SafeAreaPaddingView;
        oscard = {};
        verify = true;
        oscard['bottom'] = verify;
        verify = offset.footerContainer;
        oscard['style'] = verify;
        verify = {};
        offset = offset.footerButton;
        verify['style'] = offset;
        offset = 12;
        offset = output[offset];
        offset = sizing.bind(tangon)(offset);
        yankee = offset.Button;
        offset = {'size': 'lg', 'variant': 'primary'};
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = output[foxtra];
        foxtra = sizing.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.i4jeWV;
        foxtra = backup.bind(kiloes)(foxtra);
        offset['text'] = foxtra;
        offset['onPress'] = romeon;
        offset = option.bind(tangon)(yankee, offset);
        verify['children'] = offset;
        verify = option.bind(tangon)(michal, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();