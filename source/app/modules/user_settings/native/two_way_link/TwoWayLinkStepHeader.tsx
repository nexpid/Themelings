// app/modules/user_settings/native/two_way_link/TwoWayLinkStepHeader.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot2 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/two_way_link/TwoWayLinkStepHeader.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: TwoWayLinkStepHeader
        entity = argFoo;
        offset = entity.idx;
        verify = entity.total;
        oscard = _closure1_slot0;
        yankee = _closure1_slot1;
        michal = 2;
        michal = yankee[michal];
        tangon = undefined;
        zuuluu = oscard.bind(tangon)(michal);
        michal = zuuluu.useTwoWayLinkStyles;
        report = michal.bind(zuuluu)();
        zuuluu = _closure1_slot2;
        entity = 3;
        entity = yankee[entity];
        entity = oscard.bind(tangon)(entity);
        michal = entity.Text;
        entity = {'variant': 'text-xs/bold', 'color': 'header-secondary'};
        report = report.stepHeader;
        entity['style'] = report;
        report = 4;
        golfie = yankee[report];
        golfie = oscard.bind(tangon)(golfie);
        option = golfie.intl;
        golfie = option.format;
        report = yankee[report];
        report = oscard.bind(tangon)(report);
        report = report.t;
        oscard = report.fHz6eX;
        report = {};
        report['number'] = offset;
        report['total'] = verify;
        report = golfie.bind(option)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['TwoWayLinkStepHeader'] = michal;
    return entity;
})();