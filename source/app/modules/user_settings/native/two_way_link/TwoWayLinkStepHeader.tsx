// app/modules/user_settings/native/two_way_link/TwoWayLinkStepHeader.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot2 = tango;
    tango = 5;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/two_way_link/TwoWayLinkStepHeader.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: TwoWayLinkStepHeader
        entity = argFoo;
        offset = entity.idx;
        verify = entity.total;
        oscar = _closure1_slot0;
        yankee = _closure1_slot1;
        mike = 2;
        mike = yankee[mike];
        tango = undefined;
        zulu = oscar.bind(tango)(mike);
        mike = zulu.useTwoWayLinkStyles;
        report = mike.bind(zulu)();
        zulu = _closure1_slot2;
        entity = 3;
        entity = yankee[entity];
        entity = oscar.bind(tango)(entity);
        mike = entity.Text;
        entity = {'variant': 'text-xs/bold', 'color': 'header-secondary'};
        report = report.stepHeader;
        entity['style'] = report;
        report = 4;
        golf = yankee[report];
        golf = oscar.bind(tango)(golf);
        options = golf.intl;
        golf = options.format;
        report = yankee[report];
        report = oscar.bind(tango)(report);
        report = report.t;
        oscar = report.fHz6eX;
        report = {};
        report['number'] = offset;
        report['total'] = verify;
        report = golf.bind(options)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['TwoWayLinkStepHeader'] = mike;
    return entity;
})();