// app/modules/user_settings/native/mfa_modal_flow/TwoFASetupModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    sizing = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = sizing;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: getPageMarker
        entity = global;
        zuuluu = entity.Object;
        michal = zuuluu.keys;
        entity = _closure1_slot9;
        entity = michal.bind(zuuluu)(entity);
        oscard = entity.length;
        tangon = _closure1_slot6;
        michal = _closure1_slot0;
        zuuluu = _closure1_slot2;
        entity = 12;
        entity = zuuluu[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.PageMarker;
        entity = {};
        golfie = _closure1_slot9;
        report = argFoo;
        report = golfie[report];
        entity['currentPage'] = report;
        report = 1;
        report = oscard - report;
        entity['numMarkers'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    yankee = 1;
    tangon = oscard[yankee];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    offset = 2;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.TwoFAModalSetupSections;
    var _closure1_slot5 = golfie;
    option = 3;
    tangon = oscard[option];
    tangon = report.bind(entity)(tangon);
    backup = tangon.Fonts;
    tangon = 4;
    verify = oscard[tangon];
    verify = report.bind(entity)(verify);
    verify = verify.jsx;
    var _closure1_slot6 = verify;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    romeon = report.bind(entity)(tangon);
    verify = romeon.createStyles;
    tangon = {};
    foxtra = {};
    foxtra['flex'] = yankee;
    kiloes = 6;
    kiloes = oscard[kiloes];
    kiloes = sizing.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_PRIMARY;
    foxtra['backgroundColor'] = kiloes;
    tangon['container'] = foxtra;
    foxtra = {'position': 'absolute', 'bottom': 12, 'left': 12, 'right': 12};
    tangon['floatingButton'] = foxtra;
    foxtra = {};
    kiloes = 14;
    foxtra['fontSize'] = kiloes;
    backup = backup.PRIMARY_SEMIBOLD;
    foxtra['fontFamily'] = backup;
    tangon['buttonTextStyles'] = foxtra;
    tangon = verify.bind(romeon)(tangon);
    var _closure1_slot8 = tangon;
    tangon = {};
    verify = golfie.LANDING;
    tangon[verify] = yankee;
    verify = golfie.SCAN;
    tangon[verify] = offset;
    golfie = golfie.ENTER_CODE;
    tangon[golfie] = option;
    var _closure1_slot9 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/mfa_modal_flow/TwoFASetupModal.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: TwoFASetupModal
        michal = argFoo;
        michal = michal.password;
        var _closure2_slot0 = michal;
        zuuluu = _closure1_slot1;
        verify = _closure1_slot2;
        michal = 18;
        michal = verify[michal];
        tangon = undefined;
        michal = zuuluu.bind(tangon)(michal);
        entity = function() {
            tangon = _closure2_slot0;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 19;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = michal.generateTotpSecret;
            michal = entity.bind(michal)();
            entity = function(argFoo, argBar) { // Original name: getScreens
                entity = argFoo;
                var _closure4_slot0 = entity;
                entity = argBar;
                var _closure4_slot1 = entity;
                entity = {};
                michal = _closure1_slot5;
                yankee = michal.LANDING;
                zuuluu = {};
                golfie = _closure1_slot0;
                offset = _closure1_slot2;
                oscard = 13;
                option = offset[oscard];
                verify = undefined;
                backup = golfie.bind(verify)(option);
                foxtra = backup.getHeaderCloseButton;
                option = _closure1_slot1;
                report = 8;
                romeon = offset[report];
                romeon = option.bind(verify)(romeon);
                romeon = romeon.close;
                romeon = foxtra.bind(backup)(romeon);
                zuuluu['headerLeft'] = romeon;
                romeon = function() { // Original name: headerTitle
                    zuuluu = _closure1_slot10;
                    entity = _closure1_slot5;
                    michal = entity.LANDING;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                zuuluu['headerTitle'] = romeon;
                romeon = function() { // Original name: render
                    tangon = _closure1_slot6;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 14;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                zuuluu['render'] = romeon;
                entity[yankee] = zuuluu;
                yankee = michal.SCAN;
                zuuluu = {};
                romeon = function() { // Original name: headerTitle
                    zuuluu = _closure1_slot10;
                    entity = _closure1_slot5;
                    michal = entity.SCAN;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                zuuluu['headerTitle'] = romeon;
                romeon = function() { // Original name: render
                    tangon = _closure1_slot6;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 15;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    report = _closure4_slot1;
                    entity['totpSecret'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                zuuluu['render'] = romeon;
                entity[yankee] = zuuluu;
                yankee = michal.ENTER_CODE;
                zuuluu = {};
                romeon = function() { // Original name: headerTitle
                    zuuluu = _closure1_slot10;
                    entity = _closure1_slot5;
                    michal = entity.ENTER_CODE;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                zuuluu['headerTitle'] = romeon;
                romeon = function() { // Original name: render
                    tangon = _closure1_slot6;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 16;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    oscard = _closure4_slot1;
                    entity['totpSecret'] = oscard;
                    report = _closure4_slot0;
                    entity['password'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                zuuluu['render'] = romeon;
                entity[yankee] = zuuluu;
                zuuluu = michal.SUCCESS;
                michal = {};
                oscard = offset[oscard];
                golfie = golfie.bind(verify)(oscard);
                oscard = golfie.getHeaderCloseButton;
                report = offset[report];
                report = option.bind(verify)(report);
                report = report.close;
                report = oscard.bind(golfie)(report);
                michal['headerLeft'] = report;
                report = function() { // Original name: headerTitle
                    entity = null;
                    return entity;
                };
                michal['headerTitle'] = report;
                tangon = function() { // Original name: render
                    tangon = _closure1_slot6;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 17;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    report = _closure4_slot0;
                    entity['password'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                michal['render'] = tangon;
                entity[zuuluu] = michal;
                return entity;
            };
            entity = entity.bind(zuuluu)(tangon, michal);
            return entity;
        };
        report = michal.bind(tangon)(entity);
        zuuluu = _closure1_slot6;
        option = _closure1_slot0;
        entity = 20;
        entity = verify[entity];
        entity = option.bind(tangon)(entity);
        michal = entity.Navigator;
        entity = {};
        oscard = _closure1_slot5;
        oscard = oscard.LANDING;
        entity['initialRouteName'] = oscard;
        entity['screens'] = report;
        report = 11;
        oscard = verify[report];
        oscard = option.bind(tangon)(oscard);
        golfie = oscard.intl;
        oscard = golfie.string;
        report = verify[report];
        report = option.bind(tangon)(report);
        report = report.t;
        report = report.13/7kZ;
        report = oscard.bind(golfie)(report);
        entity['headerBackTitle'] = report;
        report = 'center';
        entity['headerTitleAlign'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    michal = function(argFoo) { // Original name: TwoFASetupModalScreen
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            golfie = michal.children;
            michal = _closure1_slot8;
            tangon = undefined;
            foxtra = michal.bind(tangon)();
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            michal = 7;
            michal = report[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.useNavigation;
            option = michal.bind(zuuluu)();
            var _closure2_slot0 = option;
            michal = option.getState;
            michal = michal.bind(option)();
            zuuluu = michal.routes;
            michal = option.getState;
            michal = michal.bind(option)();
            michal = michal.routes;
            report = michal.length;
            michal = 1;
            michal = report - michal;
            michal = zuuluu[michal];
            kiloes = michal.name;
            var _closure2_slot1 = kiloes;
            michal = _closure1_slot5;
            michal = michal.ENTER_CODE;
            oscard = kiloes !== michal;
            report = _closure1_slot3;
            zuuluu = report.useCallback;
            michal = new Array(2);
            michal[0] = option;
            michal[1] = kiloes;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = _closure2_slot1;
                    zuuluu = _closure1_slot5;
                    zuuluu = zuuluu.LANDING;
                    if(!(tangon !== zuuluu)) { _fun00004_ip = 149; continue _fun00003 }
 27:
                    tangon = _closure2_slot1;
                    zuuluu = _closure1_slot5;
                    zuuluu = zuuluu.SCAN;
                    if(!(tangon !== zuuluu)) { _fun00004_ip = 123; continue _fun00003 }
 45:
                    tangon = _closure2_slot1;
                    zuuluu = _closure1_slot5;
                    zuuluu = zuuluu.ENTER_CODE;
                    if(!(tangon !== zuuluu)) { _fun00004_ip = 97; continue _fun00003 }
 63:
                    report = _closure1_slot1;
                    tangon = _closure1_slot2;
                    zuuluu = 8;
                    tangon = tangon[zuuluu];
                    zuuluu = undefined;
                    tangon = report.bind(zuuluu)(tangon);
                    zuuluu = tangon.close;
                    zuuluu = zuuluu.bind(tangon)();
                    _fun00004_ip = 173; continue _fun00003;
 97:
                    report = _closure2_slot0;
                    tangon = report.push;
                    zuuluu = _closure1_slot5;
                    zuuluu = zuuluu.SUCCESS;
                    zuuluu = tangon.bind(report)(zuuluu);
                    _fun00004_ip = 173; continue _fun00003;
 123:
                    report = _closure2_slot0;
                    tangon = report.push;
                    zuuluu = _closure1_slot5;
                    zuuluu = zuuluu.ENTER_CODE;
                    zuuluu = tangon.bind(report)(zuuluu);
                    _fun00004_ip = 173; continue _fun00003;
 149:
                    zuuluu = _closure2_slot0;
                    michal = zuuluu.push;
                    entity = _closure1_slot5;
                    entity = entity.SCAN;
                    entity = michal.bind(zuuluu)(entity);
 173:
                    entity = undefined;
                    return entity;
                }
            };
            sizing = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot7;
            michal = _closure1_slot4;
            entity = {};
            report = foxtra.container;
            entity['style'] = report;
            report = new Array(2);
            report[0] = golfie;
            if(!oscard) { _fun00002_ip = 426; continue _fun00001 }
 195:
            verify = _closure1_slot6;
            option = _closure1_slot0;
            output = _closure1_slot2;
            golfie = 9;
            golfie = output[golfie];
            golfie = option.bind(tangon)(golfie);
            option = golfie.SafeAreaPaddingView;
            golfie = {};
            offset = true;
            golfie['bottom'] = offset;
            offset = foxtra.floatingButton;
            golfie['style'] = offset;
            romeon = _closure1_slot6;
            yankee = _closure1_slot1;
            offset = 10;
            offset = output[offset];
            yankee = yankee.bind(tangon)(offset);
            offset = {};
            offset['onPress'] = sizing;
            foxtra = foxtra.buttonTextStyles;
            offset['textStyle'] = foxtra;
            foxtra = _closure1_slot5;
            foxtra = foxtra.SUCCESS;
            if(!(kiloes !== foxtra)) { _fun00002_ip = 351; continue _fun00001 }
 294:
            output = _closure1_slot0;
            result = _closure1_slot2;
            foxtra = 11;
            kiloes = result[foxtra];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            foxtra = result[foxtra];
            foxtra = output.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.XiOHRU;
            foxtra = kiloes.bind(sizing)(foxtra);
            _fun00002_ip = 406; continue _fun00001;
 351:
            output = _closure1_slot0;
            result = _closure1_slot2;
            backup = 11;
            kiloes = result[backup];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = result[backup];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.i4jeWV;
            foxtra = kiloes.bind(sizing)(backup);
 406:
            offset['text'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 426:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['TwoFASetupModalScreen'] = michal;
    return entity;
})();