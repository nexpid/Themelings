// app/modules/user_settings/native/mfa_modal_flow/TwoFASetupSuccess.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    backup = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot4 = golf;
    tango = tango.Image;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = backup.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    yankee = tango.Fonts;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.PHONE_VERIFICATION_MODAL_KEY;
    var _closure1_slot7 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    tango = {'alignSelf': 'stretch', 'flex': 1, 'alignItems': 'center', 'justifyContent': 'flex-start', 'flexDirection': 'column'};
    golf['container'] = tango;
    tango = {};
    tango['flex'] = offset;
    golf['flex'] = tango;
    tango = {'width': 190, 'height': 70};
    golf['image'] = tango;
    tango = {'alignSelf': 'stretch', 'margin': 16, 'marginTop': 0};
    golf['buttonWrapper'] = tango;
    tango = {'height': 38, 'alignSelf': 'stretch'};
    golf['button'] = tango;
    tango = {'height': 2, 'width': 48, 'margin': 32};
    foxtrot = 7;
    offset = oscar[foxtrot];
    offset = backup.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.DIVIDER_STRONG;
    tango['backgroundColor'] = offset;
    golf['divider'] = tango;
    offset = {};
    tango = 8;
    tango = oscar[tango];
    sizing = backup.bind(entity)(tango);
    kilo = yankee.DISPLAY_SEMIBOLD;
    tango = oscar[foxtrot];
    tango = backup.bind(entity)(tango);
    tango = tango.colors;
    romeo = tango.HEADER_PRIMARY;
    tango = 20;
    result = sizing.bind(entity)(kilo, romeo, tango);
    echo = offset;
    romeo = copyDataProperties(echo, result);
    kilo = 33;
    romeo = 'marginTop';
    offset[romeo] = kilo;
    golf['success'] = offset;
    offset = {'fontSize': 14, 'textAlign': 'center', 'marginHorizontal': 20, 'marginTop': 4};
    romeo = 14;
    kilo = oscar[foxtrot];
    kilo = backup.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.TEXT_PRIMARY;
    offset['color'] = kilo;
    golf['successBody'] = offset;
    offset = {'fontSize': 14, 'textAlign': 'center', 'marginTop': 4, 'marginHorizontal': 16};
    foxtrot = oscar[foxtrot];
    foxtrot = backup.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.TEXT_PRIMARY;
    offset['color'] = foxtrot;
    golf['smsRecovery'] = offset;
    offset = {};
    offset['fontSize'] = romeo;
    yankee = yankee.PRIMARY_SEMIBOLD;
    offset['fontFamily'] = yankee;
    golf['buttonTextStyles'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot10 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/mfa_modal_flow/TwoFASetupSuccess.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: TwoFASetupSuccess
        zulu = argFoo;
        var _closure2_slot0 = zulu;
        mike = _closure1_slot10;
        tango = undefined;
        offset = mike.bind(tango)();
        report = _closure1_slot3;
        mike = report.useRef;
        mike = mike.bind(report)(zulu);
        var _closure2_slot1 = mike;
        zulu = report.useEffect;
        mike = function() {
            mike = _closure2_slot1;
            entity = _closure2_slot0;
            mike['current'] = entity;
            entity = undefined;
            return entity;
        };
        mike = zulu.bind(report)(mike);
        zulu = report.useCallback;
        mike = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zulu = _closure1_slot6;
                entity = zulu.getCurrentUser;
                report = entity.bind(zulu)();
                entity = _closure2_slot1;
                entity = entity.current;
                oscar = entity.password;
                tango = null;
                golf = tango == report;
                entity = undefined;
                zulu = undefined;
                if(golf) { _fun00002_ip = 53; continue _fun00001 }
 47:
                zulu = report.phone;
 53:
                if(!(tango == zulu)) { _fun00002_ip = 186; continue _fun00001 }
 60:
                tango = _closure1_slot1;
                offset = _closure1_slot2;
                zulu = 10;
                zulu = offset[zulu];
                report = tango.bind(entity)(zulu);
                zulu = report.close;
                zulu = zulu.bind(report)();
                zulu = 11;
                zulu = offset[zulu];
                options = tango.bind(entity)(zulu);
                golf = options.pushLazy;
                verify = _closure1_slot0;
                zulu = 13;
                zulu = offset[zulu];
                report = verify.bind(entity)(zulu);
                zulu = 12;
                tango = offset[zulu];
                zulu = offset.paths;
                report = report.bind(entity)(tango, zulu);
                tango = {};
                zulu = 14;
                zulu = offset[zulu];
                zulu = verify.bind(entity)(zulu);
                zulu = zulu.ChangePhoneReason;
                zulu = zulu.MFA_PHONE_UPDATE;
                tango['reason'] = zulu;
                zulu = _closure1_slot7;
                zulu = golf.bind(options)(report, tango, zulu);
                _fun00002_ip = 239; continue _fun00001;
 186:
                zulu = _closure1_slot1;
                tango = _closure1_slot2;
                mike = 9;
                mike = tango[mike];
                report = zulu.bind(entity)(mike);
                mike = report.enableSMS;
                mike = mike.bind(report)(oscar);
                mike = 10;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.close;
                mike = mike.bind(zulu)();
 239:
                return entity;
            }
        };
        entity = new Array(0);
        output = zulu.bind(report)(mike, entity);
        zulu = _closure1_slot8;
        kilo = _closure1_slot0;
        sizing = _closure1_slot2;
        entity = 15;
        entity = sizing[entity];
        entity = kilo.bind(tango)(entity);
        mike = entity.TwoFASetupModalScreen;
        entity = {};
        golf = _closure1_slot9;
        oscar = _closure1_slot4;
        report = {};
        options = offset.container;
        report['style'] = options;
        options = {};
        verify = offset.flex;
        options['style'] = verify;
        verify = zulu.bind(tango)(oscar, options);
        options = new Array(8);
        options[0] = verify;
        yankee = _closure1_slot5;
        verify = {};
        romeo = 16;
        romeo = sizing[romeo];
        romeo = kilo.bind(tango)(romeo);
        verify['source'] = romeo;
        romeo = offset.image;
        verify['style'] = romeo;
        verify = zulu.bind(tango)(yankee, verify);
        options[1] = verify;
        verify = 17;
        yankee = sizing[verify];
        yankee = kilo.bind(tango)(yankee);
        backup = yankee.LegacyText;
        yankee = {};
        romeo = offset.success;
        yankee['style'] = romeo;
        romeo = 18;
        result = sizing[romeo];
        result = kilo.bind(tango)(result);
        update = result.intl;
        echo = update.string;
        result = sizing[romeo];
        result = kilo.bind(tango)(result);
        result = result.t;
        result = result.Awk3Gx;
        result = echo.bind(update)(result);
        yankee['children'] = result;
        yankee = zulu.bind(tango)(backup, yankee);
        options[2] = yankee;
        yankee = sizing[verify];
        yankee = kilo.bind(tango)(yankee);
        backup = yankee.LegacyText;
        yankee = {};
        result = offset.successBody;
        yankee['style'] = result;
        result = sizing[romeo];
        result = kilo.bind(tango)(result);
        update = result.intl;
        echo = update.string;
        result = sizing[romeo];
        result = kilo.bind(tango)(result);
        result = result.t;
        result = result.0d1bXF;
        result = echo.bind(update)(result);
        yankee['children'] = result;
        yankee = zulu.bind(tango)(backup, yankee);
        options[3] = yankee;
        yankee = {};
        backup = offset.divider;
        yankee['style'] = backup;
        yankee = zulu.bind(tango)(oscar, yankee);
        options[4] = yankee;
        yankee = {};
        backup = offset.buttonWrapper;
        yankee['style'] = backup;
        backup = _closure1_slot1;
        foxtrot = 19;
        foxtrot = sizing[foxtrot];
        backup = backup.bind(tango)(foxtrot);
        foxtrot = {};
        result = offset.buttonTextStyles;
        foxtrot['textStyle'] = result;
        result = sizing[romeo];
        result = kilo.bind(tango)(result);
        update = result.intl;
        echo = update.string;
        result = sizing[romeo];
        result = kilo.bind(tango)(result);
        result = result.t;
        result = result.DZQe29;
        result = echo.bind(update)(result);
        foxtrot['text'] = result;
        result = offset.button;
        foxtrot['style'] = result;
        foxtrot['onPress'] = output;
        foxtrot = zulu.bind(tango)(backup, foxtrot);
        yankee['children'] = foxtrot;
        yankee = zulu.bind(tango)(oscar, yankee);
        options[5] = yankee;
        verify = sizing[verify];
        verify = kilo.bind(tango)(verify);
        yankee = verify.LegacyText;
        verify = {};
        foxtrot = offset.smsRecovery;
        verify['style'] = foxtrot;
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.string;
        romeo = sizing[romeo];
        romeo = kilo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.B2hnhY;
        romeo = foxtrot.bind(backup)(romeo);
        verify['children'] = romeo;
        verify = zulu.bind(tango)(yankee, verify);
        options[6] = verify;
        verify = {};
        offset = offset.flex;
        verify['style'] = offset;
        verify = zulu.bind(tango)(oscar, verify);
        options[7] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();