// app/modules/user_settings/native/mfa_modal_flow/TwoFASetupSuccess.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    backup = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    tangon = tangon.Image;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = backup.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    yankee = tangon.Fonts;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.PHONE_VERIFICATION_MODAL_KEY;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot8 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    tangon = {'alignSelf': 'stretch', 'flex': 1, 'alignItems': 'center', 'justifyContent': 'flex-start', 'flexDirection': 'column'};
    golfie['container'] = tangon;
    tangon = {};
    tangon['flex'] = offset;
    golfie['flex'] = tangon;
    tangon = {'width': 190, 'height': 70};
    golfie['image'] = tangon;
    tangon = {'alignSelf': 'stretch', 'margin': 16, 'marginTop': 0};
    golfie['buttonWrapper'] = tangon;
    tangon = {'height': 38, 'alignSelf': 'stretch'};
    golfie['button'] = tangon;
    tangon = {'height': 2, 'width': 48, 'margin': 32};
    foxtra = 7;
    offset = oscard[foxtra];
    offset = backup.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.DIVIDER_STRONG;
    tangon['backgroundColor'] = offset;
    golfie['divider'] = tangon;
    offset = {};
    tangon = 8;
    tangon = oscard[tangon];
    sizing = backup.bind(entity)(tangon);
    kiloes = yankee.DISPLAY_SEMIBOLD;
    tangon = oscard[foxtra];
    tangon = backup.bind(entity)(tangon);
    tangon = tangon.colors;
    romeon = tangon.HEADER_PRIMARY;
    tangon = 20;
    result = sizing.bind(entity)(kiloes, romeon, tangon);
    echoed = offset;
    romeon = copyDataProperties(echoed, result);
    kiloes = 33;
    romeon = 'marginTop';
    offset[romeon] = kiloes;
    golfie['success'] = offset;
    offset = {'fontSize': 14, 'textAlign': 'center', 'marginHorizontal': 20, 'marginTop': 4};
    romeon = 14;
    kiloes = oscard[foxtra];
    kiloes = backup.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.TEXT_PRIMARY;
    offset['color'] = kiloes;
    golfie['successBody'] = offset;
    offset = {'fontSize': 14, 'textAlign': 'center', 'marginTop': 4, 'marginHorizontal': 16};
    foxtra = oscard[foxtra];
    foxtra = backup.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.TEXT_PRIMARY;
    offset['color'] = foxtra;
    golfie['smsRecovery'] = offset;
    offset = {};
    offset['fontSize'] = romeon;
    yankee = yankee.PRIMARY_SEMIBOLD;
    offset['fontFamily'] = yankee;
    golfie['buttonTextStyles'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/mfa_modal_flow/TwoFASetupSuccess.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: TwoFASetupSuccess
        zuuluu = argFoo;
        var _closure2_slot0 = zuuluu;
        michal = _closure1_slot10;
        tangon = undefined;
        offset = michal.bind(tangon)();
        report = _closure1_slot3;
        michal = report.useRef;
        michal = michal.bind(report)(zuuluu);
        var _closure2_slot1 = michal;
        zuuluu = report.useEffect;
        michal = function() {
            michal = _closure2_slot1;
            entity = _closure2_slot0;
            michal['current'] = entity;
            entity = undefined;
            return entity;
        };
        michal = zuuluu.bind(report)(michal);
        zuuluu = report.useCallback;
        michal = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zuuluu = _closure1_slot6;
                entity = zuuluu.getCurrentUser;
                report = entity.bind(zuuluu)();
                entity = _closure2_slot1;
                entity = entity.current;
                oscard = entity.password;
                tangon = null;
                golfie = tangon == report;
                entity = undefined;
                zuuluu = undefined;
                if(golfie) { _fun00002_ip = 53; continue _fun00001 }
 47:
                zuuluu = report.phone;
 53:
                if(!(tangon == zuuluu)) { _fun00002_ip = 186; continue _fun00001 }
 60:
                tangon = _closure1_slot1;
                offset = _closure1_slot2;
                zuuluu = 10;
                zuuluu = offset[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                zuuluu = report.close;
                zuuluu = zuuluu.bind(report)();
                zuuluu = 11;
                zuuluu = offset[zuuluu];
                option = tangon.bind(entity)(zuuluu);
                golfie = option.pushLazy;
                verify = _closure1_slot0;
                zuuluu = 13;
                zuuluu = offset[zuuluu];
                report = verify.bind(entity)(zuuluu);
                zuuluu = 12;
                tangon = offset[zuuluu];
                zuuluu = offset.paths;
                report = report.bind(entity)(tangon, zuuluu);
                tangon = {};
                zuuluu = 14;
                zuuluu = offset[zuuluu];
                zuuluu = verify.bind(entity)(zuuluu);
                zuuluu = zuuluu.ChangePhoneReason;
                zuuluu = zuuluu.MFA_PHONE_UPDATE;
                tangon['reason'] = zuuluu;
                zuuluu = _closure1_slot7;
                zuuluu = golfie.bind(option)(report, tangon, zuuluu);
                _fun00002_ip = 239; continue _fun00001;
 186:
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                michal = 9;
                michal = tangon[michal];
                report = zuuluu.bind(entity)(michal);
                michal = report.enableSMS;
                michal = michal.bind(report)(oscard);
                michal = 10;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.close;
                michal = michal.bind(zuuluu)();
 239:
                return entity;
            }
        };
        entity = new Array(0);
        output = zuuluu.bind(report)(michal, entity);
        zuuluu = _closure1_slot8;
        kiloes = _closure1_slot0;
        sizing = _closure1_slot2;
        entity = 15;
        entity = sizing[entity];
        entity = kiloes.bind(tangon)(entity);
        michal = entity.TwoFASetupModalScreen;
        entity = {};
        golfie = _closure1_slot9;
        oscard = _closure1_slot4;
        report = {};
        option = offset.container;
        report['style'] = option;
        option = {};
        verify = offset.flex;
        option['style'] = verify;
        verify = zuuluu.bind(tangon)(oscard, option);
        option = new Array(8);
        option[0] = verify;
        yankee = _closure1_slot5;
        verify = {};
        romeon = 16;
        romeon = sizing[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        verify['source'] = romeon;
        romeon = offset.image;
        verify['style'] = romeon;
        verify = zuuluu.bind(tangon)(yankee, verify);
        option[1] = verify;
        verify = 17;
        yankee = sizing[verify];
        yankee = kiloes.bind(tangon)(yankee);
        backup = yankee.LegacyText;
        yankee = {};
        romeon = offset.success;
        yankee['style'] = romeon;
        romeon = 18;
        result = sizing[romeon];
        result = kiloes.bind(tangon)(result);
        update = result.intl;
        echoed = update.string;
        result = sizing[romeon];
        result = kiloes.bind(tangon)(result);
        result = result.t;
        result = result.Awk3Gx;
        result = echoed.bind(update)(result);
        yankee['children'] = result;
        yankee = zuuluu.bind(tangon)(backup, yankee);
        option[2] = yankee;
        yankee = sizing[verify];
        yankee = kiloes.bind(tangon)(yankee);
        backup = yankee.LegacyText;
        yankee = {};
        result = offset.successBody;
        yankee['style'] = result;
        result = sizing[romeon];
        result = kiloes.bind(tangon)(result);
        update = result.intl;
        echoed = update.string;
        result = sizing[romeon];
        result = kiloes.bind(tangon)(result);
        result = result.t;
        result = result.0d1bXF;
        result = echoed.bind(update)(result);
        yankee['children'] = result;
        yankee = zuuluu.bind(tangon)(backup, yankee);
        option[3] = yankee;
        yankee = {};
        backup = offset.divider;
        yankee['style'] = backup;
        yankee = zuuluu.bind(tangon)(oscard, yankee);
        option[4] = yankee;
        yankee = {};
        backup = offset.buttonWrapper;
        yankee['style'] = backup;
        backup = _closure1_slot1;
        foxtra = 19;
        foxtra = sizing[foxtra];
        backup = backup.bind(tangon)(foxtra);
        foxtra = {};
        result = offset.buttonTextStyles;
        foxtra['textStyle'] = result;
        result = sizing[romeon];
        result = kiloes.bind(tangon)(result);
        update = result.intl;
        echoed = update.string;
        result = sizing[romeon];
        result = kiloes.bind(tangon)(result);
        result = result.t;
        result = result.DZQe29;
        result = echoed.bind(update)(result);
        foxtra['text'] = result;
        result = offset.button;
        foxtra['style'] = result;
        foxtra['onPress'] = output;
        foxtra = zuuluu.bind(tangon)(backup, foxtra);
        yankee['children'] = foxtra;
        yankee = zuuluu.bind(tangon)(oscard, yankee);
        option[5] = yankee;
        verify = sizing[verify];
        verify = kiloes.bind(tangon)(verify);
        yankee = verify.LegacyText;
        verify = {};
        foxtra = offset.smsRecovery;
        verify['style'] = foxtra;
        foxtra = sizing[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = sizing[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.B2hnhY;
        romeon = foxtra.bind(backup)(romeon);
        verify['children'] = romeon;
        verify = zuuluu.bind(tangon)(yankee, verify);
        option[6] = verify;
        verify = {};
        offset = offset.flex;
        verify['style'] = offset;
        verify = zuuluu.bind(tangon)(oscard, verify);
        option[7] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();