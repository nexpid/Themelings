// app/modules/user_settings/native/mfa_modal_flow/TwoFASetupStyles.tsx
export default (function(_, argBar, argBaz, __, ___, argFred, argPlugh) {
    report = argBar;
    offset = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    entity = global;
    golf = entity.Object;
    tango = golf.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(golf)(zulu, entity, mike);
    entity = 0;
    mike = oscar[entity];
    entity = undefined;
    mike = report.bind(entity)(mike);
    verify = mike.Fonts;
    mike = 1;
    mike = oscar[mike];
    golf = report.bind(entity)(mike);
    tango = golf.createStyles;
    mike = {};
    options = {'textAlign': 'center', 'marginLeft': 20, 'marginRight': 20};
    mike['text'] = options;
    options = {};
    yankee = 2;
    yankee = oscar[yankee];
    backup = offset.bind(entity)(yankee);
    foxtrot = verify.DISPLAY_EXTRABOLD;
    verify = 3;
    yankee = oscar[verify];
    yankee = offset.bind(entity)(yankee);
    yankee = yankee.colors;
    romeo = yankee.HEADER_PRIMARY;
    yankee = 24;
    sizing = backup.bind(entity)(foxtrot, romeo, yankee);
    output = options;
    yankee = copyDataProperties(output, sizing);
    mike['modalHeader'] = options;
    options = {};
    verify = oscar[verify];
    verify = offset.bind(entity)(verify);
    verify = verify.colors;
    verify = verify.HEADER_SECONDARY;
    options['color'] = verify;
    verify = 8;
    options['marginTop'] = verify;
    mike['modalBody'] = options;
    mike = tango.bind(golf)(mike);
    tango = 4;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/mfa_modal_flow/TwoFASetupStyles.tsx';
    tango = report.bind(oscar)(tango);
    zulu['useTwoFASetupStyles'] = mike;
    return entity;
})();