// app/modules/user_settings/native/mfa_modal_flow/TwoFASetupLanding.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Image;
    var _closure1_slot3 = golf;
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    tango['container'] = verify;
    verify = {'width': 120, 'height': 120, 'marginBottom': 32};
    tango['authIcon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/mfa_modal_flow/TwoFASetupLanding.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: TwoFASetupLanding
        entity = _closure1_slot7;
        tango = undefined;
        romeo = entity.bind(tango)();
        backup = _closure1_slot0;
        output = _closure1_slot2;
        entity = 4;
        entity = output[entity];
        mike = backup.bind(tango)(entity);
        entity = mike.useTwoFASetupStyles;
        sizing = entity.bind(mike)();
        zulu = _closure1_slot5;
        entity = 5;
        entity = output[entity];
        entity = backup.bind(tango)(entity);
        mike = entity.TwoFASetupModalScreen;
        entity = {};
        oscar = _closure1_slot4;
        report = {};
        golf = romeo.container;
        report['style'] = golf;
        verify = _closure1_slot6;
        golf = 6;
        golf = output[golf];
        golf = backup.bind(tango)(golf);
        options = golf.SafeAreaPaddingView;
        golf = {};
        offset = true;
        golf['bottom'] = offset;
        offset = romeo.container;
        golf['style'] = offset;
        yankee = _closure1_slot3;
        offset = {};
        kilo = _closure1_slot1;
        foxtrot = 7;
        foxtrot = output[foxtrot];
        foxtrot = kilo.bind(tango)(foxtrot);
        offset['source'] = foxtrot;
        romeo = romeo.authIcon;
        offset['style'] = romeo;
        yankee = zulu.bind(tango)(yankee, offset);
        offset = new Array(3);
        offset[0] = yankee;
        yankee = 8;
        romeo = output[yankee];
        romeo = backup.bind(tango)(romeo);
        kilo = romeo.LegacyText;
        romeo = {};
        result = sizing.modalHeader;
        foxtrot = new Array(2);
        foxtrot[0] = result;
        result = sizing.text;
        foxtrot[1] = result;
        romeo['style'] = foxtrot;
        foxtrot = 9;
        result = output[foxtrot];
        result = backup.bind(tango)(result);
        update = result.intl;
        echo = update.string;
        result = output[foxtrot];
        result = backup.bind(tango)(result);
        result = result.t;
        result = result.9E74Dw;
        result = echo.bind(update)(result);
        romeo['children'] = result;
        romeo = zulu.bind(tango)(kilo, romeo);
        offset[1] = romeo;
        yankee = output[yankee];
        yankee = backup.bind(tango)(yankee);
        romeo = yankee.LegacyText;
        yankee = {};
        result = sizing.modalBody;
        kilo = new Array(2);
        kilo[0] = result;
        sizing = sizing.text;
        kilo[1] = sizing;
        yankee['style'] = kilo;
        kilo = output[foxtrot];
        kilo = backup.bind(tango)(kilo);
        sizing = kilo.intl;
        kilo = sizing.format;
        foxtrot = output[foxtrot];
        foxtrot = backup.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        backup = foxtrot.A7Aeh4;
        foxtrot = {'googleAuthURL': 'https://support.google.com/accounts/answer/1066447?hl=en', 'authyURL': 'https://www.authy.com/'};
        foxtrot = kilo.bind(sizing)(backup, foxtrot);
        yankee['children'] = foxtrot;
        yankee = zulu.bind(tango)(romeo, yankee);
        offset[2] = yankee;
        golf['children'] = offset;
        golf = verify.bind(tango)(options, golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();