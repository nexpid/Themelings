// app/modules/user_settings/native/mfa_modal_flow/TwoFASetupLanding.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot3 = golfie;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    tangon['container'] = verify;
    verify = {'width': 120, 'height': 120, 'marginBottom': 32};
    tangon['authIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/mfa_modal_flow/TwoFASetupLanding.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: TwoFASetupLanding
        entity = _closure1_slot7;
        tangon = undefined;
        romeon = entity.bind(tangon)();
        backup = _closure1_slot0;
        output = _closure1_slot2;
        entity = 4;
        entity = output[entity];
        michal = backup.bind(tangon)(entity);
        entity = michal.useTwoFASetupStyles;
        sizing = entity.bind(michal)();
        zuuluu = _closure1_slot5;
        entity = 5;
        entity = output[entity];
        entity = backup.bind(tangon)(entity);
        michal = entity.TwoFASetupModalScreen;
        entity = {};
        oscard = _closure1_slot4;
        report = {};
        golfie = romeon.container;
        report['style'] = golfie;
        verify = _closure1_slot6;
        golfie = 6;
        golfie = output[golfie];
        golfie = backup.bind(tangon)(golfie);
        option = golfie.SafeAreaPaddingView;
        golfie = {};
        offset = true;
        golfie['bottom'] = offset;
        offset = romeon.container;
        golfie['style'] = offset;
        yankee = _closure1_slot3;
        offset = {};
        kiloes = _closure1_slot1;
        foxtra = 7;
        foxtra = output[foxtra];
        foxtra = kiloes.bind(tangon)(foxtra);
        offset['source'] = foxtra;
        romeon = romeon.authIcon;
        offset['style'] = romeon;
        yankee = zuuluu.bind(tangon)(yankee, offset);
        offset = new Array(3);
        offset[0] = yankee;
        yankee = 8;
        romeon = output[yankee];
        romeon = backup.bind(tangon)(romeon);
        kiloes = romeon.LegacyText;
        romeon = {};
        result = sizing.modalHeader;
        foxtra = new Array(2);
        foxtra[0] = result;
        result = sizing.text;
        foxtra[1] = result;
        romeon['style'] = foxtra;
        foxtra = 9;
        result = output[foxtra];
        result = backup.bind(tangon)(result);
        update = result.intl;
        echoed = update.string;
        result = output[foxtra];
        result = backup.bind(tangon)(result);
        result = result.t;
        result = result.9E74Dw;
        result = echoed.bind(update)(result);
        romeon['children'] = result;
        romeon = zuuluu.bind(tangon)(kiloes, romeon);
        offset[1] = romeon;
        yankee = output[yankee];
        yankee = backup.bind(tangon)(yankee);
        romeon = yankee.LegacyText;
        yankee = {};
        result = sizing.modalBody;
        kiloes = new Array(2);
        kiloes[0] = result;
        sizing = sizing.text;
        kiloes[1] = sizing;
        yankee['style'] = kiloes;
        kiloes = output[foxtra];
        kiloes = backup.bind(tangon)(kiloes);
        sizing = kiloes.intl;
        kiloes = sizing.format;
        foxtra = output[foxtra];
        foxtra = backup.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        backup = foxtra.A7Aeh4;
        foxtra = {'googleAuthURL': 'https://support.google.com/accounts/answer/1066447?hl=en', 'authyURL': 'https://www.authy.com/'};
        foxtra = kiloes.bind(sizing)(backup, foxtra);
        yankee['children'] = foxtra;
        yankee = zuuluu.bind(tangon)(romeon, yankee);
        offset[2] = yankee;
        golfie['children'] = offset;
        golfie = verify.bind(tangon)(option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();