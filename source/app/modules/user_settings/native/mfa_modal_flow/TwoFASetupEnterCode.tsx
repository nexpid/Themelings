// app/modules/user_settings/native/mfa_modal_flow/TwoFASetupEnterCode.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    option = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.TwoFAModalSetupSections;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    offset = tangon.Fonts;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'justifyContent': 'center', 'alignItems': 'center'};
    tangon['container'] = verify;
    verify = {};
    yankee = 14;
    verify['fontSize'] = yankee;
    offset = offset.PRIMARY_SEMIBOLD;
    verify['fontFamily'] = offset;
    tangon['buttonTextStyles'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 18;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/mfa_modal_flow/TwoFASetupEnterCode.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: TwoFASetupEnterCode
        zuuluu = argFoo;
        var _closure2_slot0 = zuuluu;
        michal = _closure1_slot9;
        tangon = undefined;
        option = michal.bind(tangon)();
        update = _closure1_slot0;
        kiloes = _closure1_slot2;
        michal = 7;
        michal = kiloes[michal];
        report = update.bind(tangon)(michal);
        michal = report.useTwoFASetupStyles;
        result = michal.bind(report)();
        report = _closure1_slot4;
        michal = report.useRef;
        michal = michal.bind(report)(zuuluu);
        var _closure2_slot1 = michal;
        zuuluu = report.useEffect;
        michal = function() {
            michal = _closure2_slot1;
            entity = _closure2_slot0;
            michal['current'] = entity;
            entity = undefined;
            return entity;
        };
        michal = zuuluu.bind(report)(michal);
        michal = 8;
        michal = kiloes[michal];
        zuuluu = update.bind(tangon)(michal);
        michal = zuuluu.useNavigation;
        oscard = michal.bind(zuuluu)();
        var _closure2_slot2 = oscard;
        michal = 9;
        michal = kiloes[michal];
        offset = update.bind(tangon)(michal);
        golfie = offset.useStateFromStores;
        michal = _closure1_slot5;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            michal = _closure1_slot5;
            entity = michal.getState;
            entity = entity.bind(michal)();
            return entity;
        };
        yankee = golfie.bind(offset)(zuuluu, michal);
        zuuluu = report.useState;
        michal = false;
        golfie = zuuluu.bind(report)(michal);
        zuuluu = _closure1_slot3;
        michal = 2;
        zuuluu = zuuluu.bind(tangon)(golfie, michal);
        michal = 0;
        sizing = zuuluu[michal];
        michal = 1;
        michal = zuuluu[michal];
        var _closure2_slot3 = michal;
        michal = report.useRef;
        zuuluu = null;
        foxtra = michal.bind(report)(zuuluu);
        var _closure2_slot4 = foxtra;
        michal = report.useRef;
        output = michal.bind(report)(zuuluu);
        var _closure2_slot5 = output;
        zuuluu = report.useCallback;
        michal = new Array(1);
        michal[0] = oscard;
        entity = function(argFoo) {
            entity = _closure2_slot1;
            entity = entity.current;
            option = entity.totpSecret;
            golfie = _closure1_slot0;
            report = _closure1_slot2;
            entity = 10;
            oscard = report[entity];
            entity = undefined;
            golfie = golfie.bind(entity)(oscard);
            oscard = golfie.encodeTotpSecret;
            oscard = oscard.bind(golfie)(option);
            golfie = _closure2_slot3;
            tangon = true;
            tangon = golfie.bind(entity)(tangon);
            tangon = _closure1_slot1;
            zuuluu = 11;
            zuuluu = report[zuuluu];
            report = tangon.bind(entity)(zuuluu);
            tangon = report.enable;
            zuuluu = {};
            golfie = argFoo;
            zuuluu['code'] = golfie;
            zuuluu['secret'] = oscard;
            report = tangon.bind(report)(zuuluu);
            tangon = report.then;
            zuuluu = function() {
                zuuluu = _closure2_slot2;
                michal = zuuluu.push;
                entity = _closure1_slot6;
                entity = entity.SUCCESS;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            tangon = tangon.bind(report)(zuuluu);
            zuuluu = tangon.catch;
            michal = function(argFoo) {
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    report = argFoo;
                    tangon = _closure2_slot4;
                    zuuluu = report.body;
                    michal = null;
                    if(!(michal == zuuluu)) { _fun00002_ip = 85; continue _fun00001 }
 21:
                    verify = _closure1_slot0;
                    offset = _closure1_slot2;
                    zuuluu = 12;
                    oscard = offset[zuuluu];
                    option = undefined;
                    oscard = verify.bind(option)(oscard);
                    golfie = oscard.intl;
                    oscard = golfie.string;
                    zuuluu = offset[zuuluu];
                    zuuluu = verify.bind(option)(zuuluu);
                    zuuluu = zuuluu.t;
                    zuuluu = zuuluu.1u5B+P;
                    zuuluu = oscard.bind(golfie)(zuuluu);
                    _fun00002_ip = 95; continue _fun00001;
 85:
                    report = report.body;
                    zuuluu = report.message;
 95:
                    tangon['current'] = zuuluu;
                    zuuluu = _closure2_slot5;
                    zuuluu = zuuluu.current;
                    if(!(michal != zuuluu)) { _fun00002_ip = 124; continue _fun00001 }
 114:
                    michal = zuuluu.clear;
                    michal = michal.bind(zuuluu)();
 124:
                    zuuluu = _closure2_slot3;
                    entity = undefined;
                    michal = false;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                }
            };
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        romeon = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot7;
        entity = 13;
        entity = kiloes[entity];
        entity = update.bind(tangon)(entity);
        michal = entity.TwoFASetupModalScreen;
        entity = {};
        golfie = _closure1_slot8;
        report = 14;
        report = kiloes[report];
        report = update.bind(tangon)(report);
        oscard = report.SafeAreaPaddingView;
        report = {};
        offset = true;
        report['bottom'] = offset;
        option = option.container;
        report['style'] = option;
        option = 15;
        option = kiloes[option];
        option = update.bind(tangon)(option);
        offset = option.LegacyText;
        option = {};
        echoed = result.modalHeader;
        backup = new Array(2);
        backup[0] = echoed;
        result = result.text;
        backup[1] = result;
        option['style'] = backup;
        backup = 12;
        result = kiloes[backup];
        result = update.bind(tangon)(result);
        echoed = result.intl;
        result = echoed.string;
        backup = kiloes[backup];
        backup = update.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.HZPBOT;
        backup = result.bind(echoed)(backup);
        option['children'] = backup;
        offset = zuuluu.bind(tangon)(offset, option);
        option = new Array(2);
        option[0] = offset;
        backup = _closure1_slot1;
        verify = 16;
        verify = kiloes[verify];
        offset = backup.bind(tangon)(verify);
        verify = {};
        result = {};
        echoed = 520;
        result['maxHeight'] = echoed;
        verify['style'] = result;
        verify['ref'] = output;
        verify['showActivityIndicator'] = sizing;
        verify['handleSubmit'] = romeon;
        romeon = 17;
        romeon = kiloes[romeon];
        romeon = backup.bind(tangon)(romeon);
        romeon = romeon.bind(tangon)(foxtra);
        verify['error'] = romeon;
        verify['appState'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[1] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();