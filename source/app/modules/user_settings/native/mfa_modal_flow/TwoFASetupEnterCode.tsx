// app/modules/user_settings/native/mfa_modal_flow/TwoFASetupEnterCode.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    options = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(options);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.TwoFAModalSetupSections;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    offset = tango.Fonts;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'justifyContent': 'center', 'alignItems': 'center'};
    tango['container'] = verify;
    verify = {};
    yankee = 14;
    verify['fontSize'] = yankee;
    offset = offset.PRIMARY_SEMIBOLD;
    verify['fontFamily'] = offset;
    tango['buttonTextStyles'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 20;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/mfa_modal_flow/TwoFASetupEnterCode.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: TwoFASetupEnterCode
        zulu = argFoo;
        var _closure2_slot0 = zulu;
        mike = _closure1_slot10;
        tango = undefined;
        options = mike.bind(tango)();
        update = _closure1_slot0;
        kilo = _closure1_slot2;
        mike = 8;
        mike = kilo[mike];
        report = update.bind(tango)(mike);
        mike = report.useTwoFASetupStyles;
        result = mike.bind(report)();
        report = _closure1_slot4;
        mike = report.useRef;
        mike = mike.bind(report)(zulu);
        var _closure2_slot1 = mike;
        zulu = report.useEffect;
        mike = function() {
            mike = _closure2_slot1;
            entity = _closure2_slot0;
            mike['current'] = entity;
            entity = undefined;
            return entity;
        };
        mike = zulu.bind(report)(mike);
        mike = 9;
        mike = kilo[mike];
        zulu = update.bind(tango)(mike);
        mike = zulu.useNavigation;
        offset = mike.bind(zulu)();
        var _closure2_slot2 = offset;
        mike = 10;
        zulu = kilo[mike];
        yankee = update.bind(tango)(zulu);
        golf = yankee.useStateFromStores;
        zulu = _closure1_slot6;
        oscar = new Array(1);
        oscar[0] = zulu;
        zulu = function() {
            mike = _closure1_slot6;
            entity = mike.getState;
            entity = entity.bind(mike)();
            return entity;
        };
        yankee = golf.bind(yankee)(oscar, zulu);
        oscar = report.useState;
        zulu = false;
        golf = oscar.bind(report)(zulu);
        oscar = _closure1_slot3;
        zulu = 2;
        oscar = oscar.bind(tango)(golf, zulu);
        zulu = 0;
        sizing = oscar[zulu];
        zulu = 1;
        zulu = oscar[zulu];
        var _closure2_slot3 = zulu;
        zulu = report.useRef;
        oscar = null;
        foxtrot = zulu.bind(report)(oscar);
        var _closure2_slot4 = foxtrot;
        zulu = report.useRef;
        output = zulu.bind(report)(oscar);
        var _closure2_slot5 = output;
        mike = kilo[mike];
        golf = update.bind(tango)(mike);
        oscar = golf.useStateFromStores;
        mike = _closure1_slot5;
        zulu = new Array(1);
        zulu[0] = mike;
        mike = function() {
            entity = _closure1_slot5;
            entity = entity.emailToken;
            return entity;
        };
        oscar = oscar.bind(golf)(zulu, mike);
        var _closure2_slot6 = oscar;
        mike = 11;
        mike = kilo[mike];
        zulu = update.bind(tango)(mike);
        mike = zulu.useIsMfaEmailVerificationEnabled;
        golf = mike.bind(zulu)();
        var _closure2_slot7 = golf;
        zulu = report.useCallback;
        mike = new Array(3);
        mike[0] = offset;
        mike[1] = golf;
        mike[2] = oscar;
        entity = function(argFoo) {
            _fun94550: for(var _fun94550_ip = 0; ; ) switch(_fun94550_ip) {
 0:
                entity = _closure2_slot1;
                entity = entity.current;
                verify = entity.totpSecret;
                oscar = entity.password;
                golf = _closure1_slot0;
                report = _closure1_slot2;
                entity = 12;
                tango = report[entity];
                entity = undefined;
                golf = golf.bind(entity)(tango);
                tango = golf.encodeTotpSecret;
                golf = tango.bind(golf)(verify);
                verify = _closure2_slot3;
                tango = true;
                tango = verify.bind(entity)(tango);
                tango = _closure1_slot1;
                zulu = 13;
                zulu = report[zulu];
                report = tango.bind(entity)(zulu);
                tango = report.enable;
                zulu = {};
                verify = argFoo;
                zulu['code'] = verify;
                zulu['secret'] = golf;
                zulu['password'] = oscar;
                oscar = _closure2_slot7;
                if(!oscar) { _fun94550_ip = 135; continue _fun94550 }
 121:
                golf = {};
                options = _closure2_slot6;
                golf['emailToken'] = options;
                oscar = golf;
 135:
                yankee = zulu;
                offset = oscar;
                oscar = copyDataProperties(yankee, offset);
                report = tango.bind(report)(zulu);
                tango = report.then;
                zulu = function() {
                    zulu = _closure2_slot2;
                    mike = zulu.push;
                    entity = _closure1_slot7;
                    entity = entity.SUCCESS;
                    entity = mike.bind(zulu)(entity);
                    entity = undefined;
                    return entity;
                };
                tango = tango.bind(report)(zulu);
                zulu = tango.catch;
                mike = function(argFoo) {
                    _fun94552: for(var _fun94552_ip = 0; ; ) switch(_fun94552_ip) {
 0:
                        report = argFoo;
                        tango = _closure2_slot4;
                        zulu = report.body;
                        mike = null;
                        if(!(mike == zulu)) { _fun94552_ip = 83; continue _fun94552 }
 21:
                        verify = _closure1_slot0;
                        offset = _closure1_slot2;
                        zulu = 14;
                        oscar = offset[zulu];
                        options = undefined;
                        oscar = verify.bind(options)(oscar);
                        golf = oscar.intl;
                        oscar = golf.string;
                        zulu = offset[zulu];
                        zulu = verify.bind(options)(zulu);
                        zulu = zulu.t;
                        zulu = zulu.1u5B+P;
                        zulu = oscar.bind(golf)(zulu);
                        _fun94552_ip = 93; continue _fun94552;
 83:
                        report = report.body;
                        zulu = report.message;
 93:
                        tango['current'] = zulu;
                        zulu = _closure2_slot5;
                        zulu = zulu.current;
                        if(!(mike != zulu)) { _fun94552_ip = 122; continue _fun94552 }
 112:
                        mike = zulu.clear;
                        mike = mike.bind(zulu)();
 122:
                        zulu = _closure2_slot3;
                        entity = undefined;
                        mike = false;
                        mike = zulu.bind(entity)(mike);
                        return entity;
                    }
                };
                mike = zulu.bind(tango)(mike);
                return entity;
            }
        };
        romeo = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot8;
        entity = 15;
        entity = kilo[entity];
        entity = update.bind(tango)(entity);
        mike = entity.TwoFASetupModalScreen;
        entity = {};
        golf = _closure1_slot9;
        report = 16;
        report = kilo[report];
        report = update.bind(tango)(report);
        oscar = report.SafeAreaPaddingView;
        report = {};
        offset = true;
        report['bottom'] = offset;
        options = options.container;
        report['style'] = options;
        options = 17;
        options = kilo[options];
        options = update.bind(tango)(options);
        offset = options.LegacyText;
        options = {};
        echo = result.modalHeader;
        backup = new Array(2);
        backup[0] = echo;
        result = result.text;
        backup[1] = result;
        options['style'] = backup;
        backup = 14;
        result = kilo[backup];
        result = update.bind(tango)(result);
        echo = result.intl;
        result = echo.string;
        backup = kilo[backup];
        backup = update.bind(tango)(backup);
        backup = backup.t;
        backup = backup.HZPBOT;
        backup = result.bind(echo)(backup);
        options['children'] = backup;
        offset = zulu.bind(tango)(offset, options);
        options = new Array(2);
        options[0] = offset;
        backup = _closure1_slot1;
        verify = 18;
        verify = kilo[verify];
        offset = backup.bind(tango)(verify);
        verify = {};
        result = {};
        echo = 520;
        result['maxHeight'] = echo;
        verify['style'] = result;
        verify['ref'] = output;
        verify['showActivityIndicator'] = sizing;
        verify['handleSubmit'] = romeo;
        romeo = 19;
        romeo = kilo[romeo];
        romeo = backup.bind(tango)(romeo);
        romeo = romeo.bind(tango)(foxtrot);
        verify['error'] = romeo;
        verify['appState'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[1] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();