// app/modules/user_settings/native/UserSettingsCommunityNotifications.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/UserSettingsCommunityNotifications.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: UserSettingsCommunityNotifications
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zulu = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 3;
            entity = golf[entity];
            report = undefined;
            options = zulu.bind(report)(entity);
            tango = options.useStateFromStores;
            entity = _closure1_slot3;
            zulu = new Array(1);
            zulu[0] = entity;
            entity = function() {
                mike = _closure1_slot3;
                entity = mike.getGuildAlertSettings;
                entity = entity.bind(mike)();
                return entity;
            };
            tango = tango.bind(options)(zulu, entity);
            var _closure2_slot0 = tango;
            zulu = _closure1_slot1;
            entity = 4;
            entity = golf[entity];
            zulu = zulu.bind(report)(entity);
            entity = zulu.keys;
            options = entity.bind(zulu)(tango);
            tango = options.length;
            zulu = 0;
            entity = null;
            if(!(zulu !== tango)) { _fun00002_ip = 159; continue _fun00001 }
 100:
            tango = _closure1_slot4;
            zulu = _closure1_slot0;
            golf = _closure1_slot2;
            mike = 5;
            mike = golf[mike];
            mike = zulu.bind(report)(mike);
            zulu = mike.Form;
            mike = {};
            golf = options.map;
            oscar = function(argFoo) {
                report = argFoo;
                var _closure3_slot0 = report;
                tango = _closure1_slot5;
                kilo = _closure1_slot0;
                sizing = _closure1_slot2;
                golf = 5;
                entity = sizing[golf];
                zulu = undefined;
                entity = kilo.bind(zulu)(entity);
                mike = entity.FormSection;
                entity = {};
                yankee = _closure2_slot0;
                options = yankee[report];
                options = options.guildName;
                entity['title'] = options;
                verify = _closure1_slot4;
                oscar = sizing[golf];
                oscar = kilo.bind(zulu)(oscar);
                options = oscar.FormSwitchRow;
                oscar = {};
                romeo = 6;
                foxtrot = sizing[romeo];
                foxtrot = kilo.bind(zulu)(foxtrot);
                output = foxtrot.intl;
                backup = output.string;
                foxtrot = sizing[romeo];
                foxtrot = kilo.bind(zulu)(foxtrot);
                foxtrot = foxtrot.t;
                foxtrot = foxtrot.u6dc5O;
                foxtrot = backup.bind(output)(foxtrot);
                oscar['label'] = foxtrot;
                foxtrot = yankee[report];
                foxtrot = foxtrot.disableRaidAlertNag;
                foxtrot = !foxtrot;
                oscar['value'] = foxtrot;
                foxtrot = function() { // Original name: onValueChange
                    zulu = _closure1_slot0;
                    golf = _closure1_slot2;
                    mike = 7;
                    tango = golf[mike];
                    entity = undefined;
                    oscar = zulu.bind(entity)(tango);
                    report = oscar.updateUserGuildSettings;
                    tango = _closure3_slot0;
                    mike = golf[mike];
                    mike = zulu.bind(entity)(mike);
                    mike = mike.UserSettingsDelay;
                    zulu = mike.INFREQUENT_USER_ACTION;
                    mike = function(argFoo) {
                        mike = argFoo;
                        entity = mike.disableRaidAlertNag;
                        entity = !entity;
                        mike['disableRaidAlertNag'] = entity;
                        entity = undefined;
                        return entity;
                    };
                    mike = report.bind(oscar)(tango, mike, zulu);
                    return entity;
                };
                oscar['onValueChange'] = foxtrot;
                options = verify.bind(zulu)(options, oscar);
                oscar = new Array(2);
                oscar[0] = options;
                golf = sizing[golf];
                golf = kilo.bind(zulu)(golf);
                options = golf.FormSwitchRow;
                golf = {};
                foxtrot = sizing[romeo];
                foxtrot = kilo.bind(zulu)(foxtrot);
                backup = foxtrot.intl;
                foxtrot = backup.string;
                romeo = sizing[romeo];
                romeo = kilo.bind(zulu)(romeo);
                romeo = romeo.t;
                romeo = romeo.P8MG6u;
                romeo = foxtrot.bind(backup)(romeo);
                golf['label'] = romeo;
                yankee = yankee[report];
                yankee = yankee.disableRaidAlertPush;
                yankee = !yankee;
                golf['value'] = yankee;
                offset = function() { // Original name: onValueChange
                    zulu = _closure1_slot0;
                    golf = _closure1_slot2;
                    mike = 7;
                    tango = golf[mike];
                    entity = undefined;
                    oscar = zulu.bind(entity)(tango);
                    report = oscar.updateUserGuildSettings;
                    tango = _closure3_slot0;
                    mike = golf[mike];
                    mike = zulu.bind(entity)(mike);
                    mike = mike.UserSettingsDelay;
                    zulu = mike.INFREQUENT_USER_ACTION;
                    mike = function(argFoo) {
                        mike = argFoo;
                        entity = mike.disableRaidAlertPush;
                        entity = !entity;
                        mike['disableRaidAlertPush'] = entity;
                        entity = undefined;
                        return entity;
                    };
                    mike = report.bind(oscar)(tango, mike, zulu);
                    return entity;
                };
                golf['onValueChange'] = offset;
                golf = verify.bind(zulu)(options, golf);
                oscar[1] = golf;
                entity['children'] = oscar;
                entity = tango.bind(zulu)(mike, entity, report);
                return entity;
            };
            oscar = golf.bind(options)(oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 159:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();