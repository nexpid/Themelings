// app/modules/user_settings/native/UserSettingsAuthedApp.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: AuthorizedAppTwoWay
        michal = argFoo;
        backup = michal.application;
        michal = _closure1_slot16;
        tangon = undefined;
        verify = michal.bind(tangon)();
        offset = _closure1_slot0;
        kiloes = _closure1_slot2;
        michal = 11;
        michal = kiloes[michal];
        zuuluu = offset.bind(tangon)(michal);
        michal = zuuluu.useNavigation;
        golfie = michal.bind(zuuluu)();
        var _closure2_slot0 = golfie;
        report = _closure1_slot3;
        zuuluu = report.useCallback;
        michal = new Array(1);
        michal[0] = golfie;
        entity = function() {
            tangon = _closure2_slot0;
            zuuluu = tangon.dispatch;
            report = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 12;
            michal = michal[entity];
            entity = undefined;
            michal = report.bind(entity)(michal);
            oscard = michal.CommonActions;
            report = oscard.navigate;
            michal = {};
            golfie = _closure1_slot10;
            golfie = golfie.CONNECTIONS;
            michal['name'] = golfie;
            michal = report.bind(oscard)(michal);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        foxtra = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot15;
        michal = _closure1_slot5;
        entity = {};
        report = verify.twoWayWarning;
        entity['style'] = report;
        option = _closure1_slot14;
        report = 13;
        report = kiloes[report];
        report = offset.bind(tangon)(report);
        golfie = report.CircleInformationIcon;
        report = {};
        yankee = 'xs';
        report['size'] = yankee;
        romeon = _closure1_slot1;
        yankee = 10;
        yankee = kiloes[yankee];
        yankee = romeon.bind(tangon)(yankee);
        yankee = yankee.colors;
        yankee = yankee.TEXT_MUTED;
        report['color'] = yankee;
        verify = verify.twoWayWarningIcon;
        report['style'] = verify;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        option = _closure1_slot14;
        oscard = 14;
        oscard = kiloes[oscard];
        oscard = offset.bind(tangon)(oscard);
        golfie = oscard.TextWithIOSLinkWorkaround;
        oscard = {'color': 'text-normal', 'variant': 'text-sm/medium'};
        verify = 15;
        yankee = kiloes[verify];
        yankee = offset.bind(tangon)(yankee);
        romeon = yankee.intl;
        yankee = romeon.format;
        verify = kiloes[verify];
        verify = offset.bind(tangon)(verify);
        verify = verify.t;
        offset = verify.jUhnwc;
        verify = {};
        backup = backup.name;
        verify['applicationName'] = backup;
        verify['onConnectionPress'] = foxtra;
        verify = yankee.bind(romeon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot17 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.ScrollView;
    var _closure1_slot4 = golfie;
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.UserSettingsSections;
    var _closure1_slot10 = golfie;
    golfie = tangon.ComponentActions;
    var _closure1_slot11 = golfie;
    tangon = tangon.AnalyticsSections;
    var _closure1_slot12 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.BLOCK_CONFIRMATION_ACTION_SHEET_KEY;
    var _closure1_slot13 = tangon;
    tangon = 8;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot14 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot15 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    offset = 24;
    verify = {'paddingHorizontal': 16, 'paddingVertical': 24};
    tangon['container'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tangon['section'] = verify;
    verify = {'flexDirection': 'column', 'alignItems': 'center', 'justifyContent': 'center', 'gap': 12};
    tangon['header'] = verify;
    verify = {};
    offset = '100%';
    verify['width'] = offset;
    tangon['appAboutDescription'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row'};
    tangon['twoWayWarning'] = verify;
    verify = {'width': 16, 'height': 16, 'marginRight': 8};
    offset = 10;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_MUTED;
    verify['color'] = offset;
    tangon['twoWayWarningIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot16 = tangon;
    tangon = 36;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/UserSettingsAuthedApp.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: UserSettingsAuthedApp
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            report = entity.oauth2Token;
            var _closure2_slot0 = report;
            entity = _closure1_slot16;
            tangon = undefined;
            backup = entity.bind(tangon)();
            offset = report.application;
            var _closure2_slot1 = offset;
            source = _closure1_slot0;
            output = _closure1_slot2;
            zuuluu = 16;
            entity = output[zuuluu];
            verify = source.bind(tangon)(entity);
            oscard = verify.useStateFromStores;
            entity = _closure1_slot7;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot7;
                entity = michal.getApps;
                entity = entity.bind(michal)();
                return entity;
            };
            foxtra = oscard.bind(verify)(michal, entity);
            var _closure2_slot2 = foxtra;
            entity = output[zuuluu];
            verify = source.bind(tangon)(entity);
            oscard = verify.useStateFromStores;
            entity = _closure1_slot9;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                entity = _closure1_slot9;
                entity = entity.locale;
                return entity;
            };
            romeon = oscard.bind(verify)(michal, entity);
            entity = output[zuuluu];
            verify = source.bind(tangon)(entity);
            oscard = verify.useStateFromStores;
            entity = _closure1_slot6;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot6;
                entity = michal.getSelfEmbeddedActivities;
                entity = entity.bind(michal)();
                return entity;
            };
            entity = oscard.bind(verify)(michal, entity);
            var _closure2_slot3 = entity;
            michal = 11;
            michal = output[michal];
            oscard = source.bind(tangon)(michal);
            michal = oscard.useNavigation;
            michal = michal.bind(oscard)();
            var _closure2_slot4 = michal;
            zuuluu = output[zuuluu];
            yankee = source.bind(tangon)(zuuluu);
            verify = yankee.useStateFromStores;
            zuuluu = _closure1_slot8;
            oscard = new Array(1);
            oscard[0] = zuuluu;
            zuuluu = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure1_slot8;
                    michal = zuuluu.isBlocked;
                    entity = _closure2_slot1;
                    report = null;
                    golfie = report == entity;
                    entity = undefined;
                    if(golfie) { _fun00004_ip = 55; continue _fun00003 }
 31:
                    tangon = _closure2_slot1;
                    tangon = tangon.bot;
                    report = report == tangon;
                    entity = undefined;
                    if(report) { _fun00004_ip = 55; continue _fun00003 }
 50:
                    entity = tangon.id;
 55:
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                }
            };
            zuuluu = verify.bind(yankee)(oscard, zuuluu);
            var _closure2_slot5 = zuuluu;
            zuuluu = 17;
            zuuluu = output[zuuluu];
            verify = source.bind(tangon)(zuuluu);
            oscard = verify.useShouldWarnAuthorizedAppTwoWay;
            zuuluu = offset.id;
            oscard = oscard.bind(verify)(zuuluu);
            echoed = _closure1_slot1;
            zuuluu = 18;
            zuuluu = output[zuuluu];
            yankee = echoed.bind(tangon)(zuuluu);
            verify = yankee.getApplicationIconSource;
            zuuluu = {};
            kiloes = offset.id;
            zuuluu['id'] = kiloes;
            kiloes = offset.icon;
            zuuluu['icon'] = kiloes;
            sizing = verify.bind(yankee)(zuuluu);
            yankee = _closure1_slot3;
            verify = yankee.useEffect;
            zuuluu = new Array(3);
            zuuluu[0] = foxtra;
            zuuluu[1] = report;
            zuuluu[2] = michal;
            michal = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = _closure2_slot2;
                    michal = null;
                    michal = michal != zuuluu;
                    if(!michal) { _fun00006_ip = 40; continue _fun00005 }
 16:
                    report = _closure2_slot2;
                    tangon = report.some;
                    zuuluu = function(argFoo) {
                        entity = argFoo;
                        michal = entity.id;
                        entity = _closure2_slot0;
                        entity = entity.id;
                        entity = michal === entity;
                        return entity;
                    };
                    michal = tangon.bind(report)(zuuluu);
 40:
                    if(michal) { _fun00006_ip = 57; continue _fun00005 }
 43:
                    michal = _closure2_slot4;
                    entity = michal.goBack;
                    entity = entity.bind(michal)();
 57:
                    entity = undefined;
                    return entity;
                }
            };
            michal = verify.bind(yankee)(michal, zuuluu);
            verify = _closure1_slot3;
            zuuluu = verify.useCallback;
            michal = new Array(1);
            michal[0] = entity;
            entity = function(argFoo) {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    entity = argFoo;
                    option = entity.id;
                    report = entity.application;
                    zuuluu = _closure1_slot1;
                    tangon = _closure1_slot2;
                    entity = 19;
                    oscard = tangon[entity];
                    entity = undefined;
                    golfie = zuuluu.bind(entity)(oscard);
                    oscard = golfie.delete;
                    oscard = oscard.bind(golfie)(option);
                    golfie = _closure1_slot0;
                    oscard = 20;
                    oscard = tangon[oscard];
                    oscard = golfie.bind(entity)(oscard);
                    option = oscard.ComponentDispatch;
                    golfie = option.safeDispatch;
                    michal = _closure1_slot11;
                    oscard = michal.HIDE_APP_LAUNCHER_BUTTON_APP_INSTALLED_EDUCATION;
                    michal = {};
                    verify = report.id;
                    michal['applicationId'] = verify;
                    michal = golfie.bind(option)(oscard, michal);
                    golfie = _closure2_slot3;
                    oscard = golfie.get;
                    michal = report.id;
                    golfie = oscard.bind(golfie)(michal);
                    michal = 21;
                    michal = tangon[michal];
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.leaveActivity;
                    michal = {};
                    oscard = null;
                    option = oscard == golfie;
                    oscard = undefined;
                    if(option) { _fun00008_ip = 161; continue _fun00007 }
 156:
                    oscard = golfie.location;
 161:
                    michal['location'] = oscard;
                    report = report.id;
                    michal['applicationId'] = report;
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                }
            };
            entity = zuuluu.bind(verify)(entity, michal);
            var _closure2_slot6 = entity;
            verify = _closure1_slot3;
            zuuluu = verify.useCallback;
            michal = new Array(3);
            michal[0] = offset;
            michal[1] = entity;
            michal[2] = report;
            entity = function() {
                tangon = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 22;
                zuuluu = golfie[entity];
                entity = undefined;
                report = tangon.bind(entity)(zuuluu);
                tangon = report.openAlert;
                oscard = _closure1_slot14;
                zuuluu = _closure1_slot1;
                michal = 23;
                michal = golfie[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = {};
                golfie = _closure2_slot1;
                michal['application'] = golfie;
                golfie = function() { // Original name: onDelete
                    zuuluu = _closure2_slot6;
                    michal = _closure2_slot0;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal['onDelete'] = golfie;
                zuuluu = oscard.bind(entity)(zuuluu, michal);
                michal = 'confirm-delete-authed-app';
                michal = tangon.bind(report)(michal, zuuluu);
                return entity;
            };
            update = zuuluu.bind(verify)(entity, michal);
            verify = _closure1_slot3;
            zuuluu = verify.useCallback;
            michal = function(argFoo) {
                tangon = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 24;
                zuuluu = verify[entity];
                entity = undefined;
                golfie = tangon.bind(entity)(zuuluu);
                oscard = golfie.openLazy;
                option = _closure1_slot0;
                zuuluu = 26;
                zuuluu = verify[zuuluu];
                report = option.bind(entity)(zuuluu);
                zuuluu = 25;
                tangon = verify[zuuluu];
                zuuluu = verify.paths;
                report = report.bind(entity)(tangon, zuuluu);
                romeon = _closure1_slot13;
                zuuluu = {};
                michal = argFoo;
                zuuluu['userId'] = michal;
                michal = 27;
                michal = verify[michal];
                michal = option.bind(entity)(michal);
                michal = michal.ImpressionNames;
                michal = michal.BLOCK_USER_CONFIRMATION;
                zuuluu['impressionName'] = michal;
                offset = 'stack';
                backup = golfie;
                foxtra = report;
                yankee = zuuluu;
                michal = backup[oscard](foxtra, romeon, yankee, offset, verify);
                return entity;
            };
            entity = new Array(0);
            entity = zuuluu.bind(verify)(michal, entity);
            var _closure2_slot7 = entity;
            verify = _closure1_slot3;
            zuuluu = verify.useCallback;
            michal = function(argFoo) {
                tangon = argFoo;
                zuuluu = _closure1_slot1;
                report = _closure1_slot2;
                entity = 28;
                michal = report[entity];
                entity = undefined;
                golfie = zuuluu.bind(entity)(michal);
                oscard = golfie.unblockUser;
                michal = {};
                option = _closure1_slot12;
                option = option.SETTINGS_AUTHORIZED_APP;
                michal['location'] = option;
                michal = oscard.bind(golfie)(tangon, michal);
                michal = 29;
                michal = report[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.showUnblockSuccessToast;
                michal = michal.bind(zuuluu)(tangon);
                return entity;
            };
            entity = new Array(0);
            entity = zuuluu.bind(verify)(michal, entity);
            var _closure2_slot8 = entity;
            zuuluu = _closure1_slot15;
            michal = _closure1_slot4;
            entity = {};
            verify = backup.container;
            entity['contentContainerStyle'] = verify;
            result = offset.description;
            verify = 31;
            verify = output[verify];
            yankee = echoed.bind(tangon)(verify);
            verify = yankee.extractTimestamp;
            report = report.id;
            whisks = verify.bind(yankee)(report);
            report = global;
            report = report.Date;
            verify = report.prototype;
            verify = Object.create(verify, {constructor: {value: report}});
            equals = verify;
            report = new equals[report](whisks, limora);
            yankee = report instanceof Object ? report : verify;
            verify = yankee.toLocaleDateString;
            report = {'year': 'numeric', 'month': 'short', 'day': 'numeric'};
            sequen = verify.bind(yankee)(romeon, report);
            yankee = _closure1_slot15;
            verify = _closure1_slot5;
            report = {};
            foxtra = backup.header;
            romeon = new Array(2);
            romeon[0] = foxtra;
            foxtra = backup.section;
            romeon[1] = foxtra;
            report['style'] = romeon;
            kiloes = _closure1_slot14;
            romeon = 32;
            romeon = output[romeon];
            foxtra = echoed.bind(tangon)(romeon);
            romeon = {};
            romeon['iconSource'] = sizing;
            sizing = 10;
            sizing = output[sizing];
            sizing = echoed.bind(tangon)(sizing);
            sizing = sizing.radii;
            sizing = sizing.xl;
            romeon['iconBorderRadius'] = sizing;
            sizing = 64;
            romeon['iconSize'] = sizing;
            foxtra = kiloes.bind(tangon)(foxtra, romeon);
            romeon = new Array(3);
            romeon[0] = foxtra;
            sizing = _closure1_slot14;
            echoed = 33;
            foxtra = output[echoed];
            foxtra = source.bind(tangon)(foxtra);
            kiloes = foxtra.Text;
            foxtra = {'variant': 'text-sm/normal', 'color': 'text-muted'};
            config = 15;
            ctrled = output[config];
            ctrled = source.bind(tangon)(ctrled);
            vacuum = ctrled.intl;
            ctrled = vacuum.format;
            output = output[config];
            output = source.bind(tangon)(output);
            output = output.t;
            source = output.yOApCA;
            output = {};
            output['date'] = sequen;
            output = ctrled.bind(vacuum)(source, output);
            foxtra['children'] = output;
            foxtra = sizing.bind(tangon)(kiloes, foxtra);
            romeon[1] = foxtra;
            vacuum = null;
            foxtra = null;
            if(!(tangon !== result)) { _fun00002_ip = 889; continue _fun00001 }
 817:
            kiloes = '';
            foxtra = null;
            if(!(kiloes !== result)) { _fun00002_ip = 889; continue _fun00001 }
 827:
            output = _closure1_slot14;
            sizing = _closure1_slot0;
            kiloes = _closure1_slot2;
            kiloes = kiloes[echoed];
            kiloes = sizing.bind(tangon)(kiloes);
            sizing = kiloes.Text;
            kiloes = {'style': null, 'variant': 'text-sm/normal', 'color': 'text-normal'};
            echoed = backup.appAboutDescription;
            kiloes['style'] = echoed;
            kiloes['children'] = result;
            foxtra = output.bind(tangon)(sizing, kiloes);
 889:
            romeon[2] = foxtra;
            report['children'] = romeon;
            verify = yankee.bind(tangon)(verify, report);
            report = new Array(5);
            report[0] = verify;
            romeon = _closure1_slot14;
            yankee = _closure1_slot5;
            verify = {};
            foxtra = backup.section;
            verify['style'] = foxtra;
            result = _closure1_slot15;
            papara = _closure1_slot0;
            echoed = _closure1_slot2;
            foxtra = 34;
            kiloes = echoed[foxtra];
            kiloes = papara.bind(tangon)(kiloes);
            output = kiloes.TableRowGroup;
            kiloes = {};
            sizing = echoed[config];
            sizing = papara.bind(tangon)(sizing);
            ctrled = sizing.intl;
            source = ctrled.string;
            sizing = echoed[config];
            sizing = papara.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.8pMev7;
            sizing = source.bind(ctrled)(sizing);
            kiloes['title'] = sizing;
            sequen = _closure1_slot14;
            sizing = 35;
            source = echoed[sizing];
            source = papara.bind(tangon)(source);
            ctrled = source.TableRow;
            source = {};
            record = echoed[config];
            record = papara.bind(tangon)(record);
            cntext = record.intl;
            record = cntext.string;
            echoed = echoed[config];
            echoed = papara.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.xrmhRU;
            echoed = record.bind(cntext)(echoed);
            source['label'] = echoed;
            echoed = function() { // Original name: handleClickPermissions
                tangon = _closure2_slot4;
                zuuluu = tangon.navigate;
                entity = _closure1_slot10;
                michal = entity.AUTHORIZED_APP_PERMISSIONS;
                entity = {};
                report = _closure2_slot0;
                entity['oauth2Token'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                entity = undefined;
                return entity;
            };
            source['onPress'] = echoed;
            echoed = true;
            source['arrow'] = echoed;
            ctrled = sequen.bind(tangon)(ctrled, source);
            source = new Array(3);
            source[0] = ctrled;
            ctrled = offset.terms_of_service_url;
            ctrled = vacuum != ctrled;
            if(!ctrled) { _fun00002_ip = 1228; continue _fun00001 }
 1129:
            cntext = _closure1_slot14;
            sierra = _closure1_slot0;
            papara = _closure1_slot2;
            sequen = papara[sizing];
            sequen = sierra.bind(tangon)(sequen);
            record = sequen.TableRow;
            sequen = {};
            target = papara[config];
            target = sierra.bind(tangon)(target);
            status = target.intl;
            target = status.string;
            papara = papara[config];
            papara = sierra.bind(tangon)(papara);
            papara = papara.t;
            papara = papara.lx+GeX;
            papara = target.bind(status)(papara);
            sequen['label'] = papara;
            papara = function() { // Original name: handleClickToS
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    entity = _closure2_slot1;
                    michal = entity.terms_of_service_url;
                    entity = null;
                    if(!(entity != michal)) { _fun00010_ip = 79; continue _fun00009 }
 19:
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 30;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.handleClick;
                    entity = {};
                    tangon = _closure2_slot1;
                    tangon = tangon.terms_of_service_url;
                    entity['href'] = tangon;
                    tangon = true;
                    entity['shouldConfirm'] = tangon;
                    entity = michal.bind(zuuluu)(entity);
 79:
                    entity = undefined;
                    return entity;
                }
            };
            sequen['onPress'] = papara;
            sequen['arrow'] = echoed;
            ctrled = cntext.bind(tangon)(record, sequen);
 1228:
            source[1] = ctrled;
            ctrled = offset.privacy_policy_url;
            ctrled = vacuum != ctrled;
            if(!ctrled) { _fun00002_ip = 1344; continue _fun00001 }
 1245:
            record = _closure1_slot14;
            status = _closure1_slot0;
            cntext = _closure1_slot2;
            vacuum = cntext[sizing];
            vacuum = status.bind(tangon)(vacuum);
            sequen = vacuum.TableRow;
            vacuum = {};
            papara = cntext[config];
            papara = status.bind(tangon)(papara);
            target = papara.intl;
            papara = target.string;
            cntext = cntext[config];
            cntext = status.bind(tangon)(cntext);
            cntext = cntext.t;
            cntext = cntext.okSwq6;
            cntext = papara.bind(target)(cntext);
            vacuum['label'] = cntext;
            cntext = function() { // Original name: handleClickPrivacyPolicy
                _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                    entity = _closure2_slot1;
                    michal = entity.privacy_policy_url;
                    entity = null;
                    if(!(entity != michal)) { _fun00012_ip = 79; continue _fun00011 }
 19:
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 30;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.handleClick;
                    entity = {};
                    tangon = _closure2_slot1;
                    tangon = tangon.privacy_policy_url;
                    entity['href'] = tangon;
                    tangon = true;
                    entity['shouldConfirm'] = tangon;
                    entity = michal.bind(zuuluu)(entity);
 79:
                    entity = undefined;
                    return entity;
                }
            };
            vacuum['onPress'] = cntext;
            vacuum['arrow'] = echoed;
            ctrled = record.bind(tangon)(sequen, vacuum);
 1344:
            source[2] = ctrled;
            kiloes['children'] = source;
            kiloes = result.bind(tangon)(output, kiloes);
            verify['children'] = kiloes;
            verify = romeon.bind(tangon)(yankee, verify);
            report[1] = verify;
            romeon = _closure1_slot14;
            yankee = _closure1_slot5;
            verify = {};
            backup = backup.section;
            verify['style'] = backup;
            kiloes = _closure1_slot14;
            sequen = _closure1_slot0;
            source = _closure1_slot2;
            foxtra = source[foxtra];
            foxtra = sequen.bind(tangon)(foxtra);
            backup = foxtra.TableRowGroup;
            foxtra = {};
            output = source[config];
            output = sequen.bind(tangon)(output);
            ctrled = output.intl;
            result = ctrled.string;
            output = source[config];
            output = sequen.bind(tangon)(output);
            output = output.t;
            output = output.gAHBAw;
            output = result.bind(ctrled)(output);
            foxtra['title'] = output;
            result = _closure1_slot14;
            sizing = source[sizing];
            sizing = sequen.bind(tangon)(sizing);
            output = sizing.TableRow;
            sizing = {};
            ctrled = source[config];
            ctrled = sequen.bind(tangon)(ctrled);
            vacuum = ctrled.intl;
            ctrled = vacuum.string;
            source = source[config];
            source = sequen.bind(tangon)(source);
            source = source.t;
            source = source.xUqheH;
            source = ctrled.bind(vacuum)(source);
            sizing['label'] = source;
            source = 'danger';
            sizing['variant'] = source;
            sizing['onPress'] = update;
            sizing['arrow'] = echoed;
            sizing = result.bind(tangon)(output, sizing);
            foxtra['children'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            verify['children'] = foxtra;
            verify = romeon.bind(tangon)(yankee, verify);
            report[2] = verify;
            option = function() {
                _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                    entity = _closure2_slot1;
                    michal = null;
                    zuuluu = michal == entity;
                    tangon = undefined;
                    entity = undefined;
                    if(zuuluu) { _fun00014_ip = 46; continue _fun00013 }
 22:
                    zuuluu = _closure2_slot1;
                    zuuluu = zuuluu.bot;
                    oscard = michal == zuuluu;
                    entity = undefined;
                    if(oscard) { _fun00014_ip = 46; continue _fun00013 }
 41:
                    entity = zuuluu.id;
 46:
                    var _closure3_slot0 = entity;
                    if(!(michal == entity)) { _fun00014_ip = 56; continue _fun00013 }
 54:
                    return tangon;
 56:
                    zuuluu = _closure1_slot14;
                    option = _closure1_slot0;
                    yankee = _closure1_slot2;
                    entity = 34;
                    entity = yankee[entity];
                    entity = option.bind(tangon)(entity);
                    michal = entity.TableRowGroup;
                    entity = {};
                    backup = 15;
                    oscard = yankee[backup];
                    oscard = option.bind(tangon)(oscard);
                    romeon = oscard.intl;
                    golfie = romeon.string;
                    oscard = yankee[backup];
                    oscard = option.bind(tangon)(oscard);
                    oscard = oscard.t;
                    oscard = oscard.8msQQE;
                    oscard = golfie.bind(romeon)(oscard);
                    entity['title'] = oscard;
                    golfie = _closure1_slot14;
                    oscard = 35;
                    oscard = yankee[oscard];
                    oscard = option.bind(tangon)(oscard);
                    oscard = oscard.TableRow;
                    report = _closure2_slot5;
                    if(report) { _fun00014_ip = 259; continue _fun00013 }
 173:
                    report = {};
                    foxtra = _closure1_slot0;
                    option = _closure1_slot2;
                    yankee = option[backup];
                    yankee = foxtra.bind(tangon)(yankee);
                    romeon = yankee.intl;
                    yankee = romeon.string;
                    option = option[backup];
                    option = foxtra.bind(tangon)(option);
                    option = option.t;
                    option = option.l4EmaW;
                    option = yankee.bind(romeon)(option);
                    report['label'] = option;
                    option = 'danger';
                    report['variant'] = option;
                    option = function() { // Original name: onPress
                        zuuluu = _closure2_slot7;
                        michal = _closure3_slot0;
                        entity = undefined;
                        entity = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    report['onPress'] = option;
                    option = true;
                    report['arrow'] = option;
                    _fun00014_ip = 338; continue _fun00013;
 259:
                    option = {};
                    foxtra = _closure1_slot0;
                    offset = _closure1_slot2;
                    yankee = offset[backup];
                    yankee = foxtra.bind(tangon)(yankee);
                    romeon = yankee.intl;
                    yankee = romeon.string;
                    offset = offset[backup];
                    offset = foxtra.bind(tangon)(offset);
                    offset = offset.t;
                    offset = offset.XyHpKC;
                    offset = yankee.bind(romeon)(offset);
                    option['label'] = offset;
                    verify = function() { // Original name: onPress
                        zuuluu = _closure2_slot8;
                        michal = _closure3_slot0;
                        entity = undefined;
                        entity = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    option['onPress'] = verify;
                    verify = true;
                    option['arrow'] = verify;
                    report = option;
 338:
                    report = golfie.bind(tangon)(oscard, report);
                    entity['children'] = report;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    return entity;
                }
            };
            option = option.bind(tangon)();
            report[3] = option;
            if(!oscard) { _fun00002_ip = 1624; continue _fun00001 }
 1604:
            verify = _closure1_slot14;
            option = _closure1_slot17;
            golfie = {};
            golfie['application'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 1624:
            report[4] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();