// app/modules/user_settings/native/components/account/SMSBackupWarningAlert.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot3 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'center';
    verify['textAlign'] = offset;
    tangon['title'] = verify;
    verify = {'marginTop': 8, 'textAlign': 'center', 'lineHeight': 18};
    tangon['body'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/components/account/SMSBackupWarningAlert.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SMSBackupWarningAlert
        entity = argFoo;
        entity = entity.onConfirm;
        var _closure2_slot0 = entity;
        entity = _closure1_slot5;
        tangon = undefined;
        offset = entity.bind(tangon)();
        zuuluu = _closure1_slot4;
        michal = _closure1_slot1;
        foxtra = _closure1_slot2;
        entity = 3;
        entity = foxtra[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        romeon = _closure1_slot0;
        verify = 4;
        golfie = foxtra[verify];
        golfie = romeon.bind(tangon)(golfie);
        yankee = golfie.intl;
        option = yankee.string;
        golfie = foxtra[verify];
        golfie = romeon.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.ETE/oK;
        golfie = option.bind(yankee)(golfie);
        entity['cancelText'] = golfie;
        golfie = foxtra[verify];
        golfie = romeon.bind(tangon)(golfie);
        yankee = golfie.intl;
        option = yankee.string;
        golfie = foxtra[verify];
        golfie = romeon.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.N86XcH;
        golfie = option.bind(yankee)(golfie);
        entity['confirmText'] = golfie;
        golfie = function() { // Original name: onConfirm
            michal = _closure2_slot0;
            entity = undefined;
            michal = michal.bind(entity)();
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            michal = 5;
            michal = tangon[michal];
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.close;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        entity['onConfirm'] = golfie;
        oscard = function() { // Original name: onCancel
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 5;
            michal = michal[entity];
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            entity = michal.close;
            entity = entity.bind(michal)();
            return entity;
        };
        entity['onCancel'] = oscard;
        option = _closure1_slot3;
        oscard = 6;
        report = foxtra[oscard];
        report = romeon.bind(tangon)(report);
        golfie = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        yankee = offset.title;
        report['style'] = yankee;
        yankee = foxtra[verify];
        yankee = romeon.bind(tangon)(yankee);
        kiloes = yankee.intl;
        backup = kiloes.string;
        yankee = foxtra[verify];
        yankee = romeon.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.Ed4XQE;
        yankee = backup.bind(kiloes)(yankee);
        report['children'] = yankee;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        oscard = foxtra[oscard];
        oscard = romeon.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        offset = offset.body;
        oscard['style'] = offset;
        offset = foxtra[verify];
        offset = romeon.bind(tangon)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtra[verify];
        verify = romeon.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.EDU2Eh;
        verify = offset.bind(yankee)(verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();