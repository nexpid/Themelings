// app/modules/user_settings/native/components/account/SMSBackupWarningAlert.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot3 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 'center';
    verify['textAlign'] = offset;
    tango['title'] = verify;
    verify = {'marginTop': 8, 'textAlign': 'center', 'lineHeight': 18};
    tango['body'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/components/account/SMSBackupWarningAlert.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SMSBackupWarningAlert
        entity = argFoo;
        entity = entity.onConfirm;
        var _closure2_slot0 = entity;
        entity = _closure1_slot5;
        tango = undefined;
        offset = entity.bind(tango)();
        zulu = _closure1_slot4;
        mike = _closure1_slot1;
        foxtrot = _closure1_slot2;
        entity = 3;
        entity = foxtrot[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        romeo = _closure1_slot0;
        verify = 4;
        golf = foxtrot[verify];
        golf = romeo.bind(tango)(golf);
        yankee = golf.intl;
        options = yankee.string;
        golf = foxtrot[verify];
        golf = romeo.bind(tango)(golf);
        golf = golf.t;
        golf = golf.ETE/oK;
        golf = options.bind(yankee)(golf);
        entity['cancelText'] = golf;
        golf = foxtrot[verify];
        golf = romeo.bind(tango)(golf);
        yankee = golf.intl;
        options = yankee.string;
        golf = foxtrot[verify];
        golf = romeo.bind(tango)(golf);
        golf = golf.t;
        golf = golf.N86XcH;
        golf = options.bind(yankee)(golf);
        entity['confirmText'] = golf;
        golf = function() { // Original name: onConfirm
            mike = _closure2_slot0;
            entity = undefined;
            mike = mike.bind(entity)();
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            mike = 5;
            mike = tango[mike];
            zulu = zulu.bind(entity)(mike);
            mike = zulu.close;
            mike = mike.bind(zulu)();
            return entity;
        };
        entity['onConfirm'] = golf;
        oscar = function() { // Original name: onCancel
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 5;
            mike = mike[entity];
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            entity = mike.close;
            entity = entity.bind(mike)();
            return entity;
        };
        entity['onCancel'] = oscar;
        options = _closure1_slot3;
        oscar = 6;
        report = foxtrot[oscar];
        report = romeo.bind(tango)(report);
        golf = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        yankee = offset.title;
        report['style'] = yankee;
        yankee = foxtrot[verify];
        yankee = romeo.bind(tango)(yankee);
        kilo = yankee.intl;
        backup = kilo.string;
        yankee = foxtrot[verify];
        yankee = romeo.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.Ed4XQE;
        yankee = backup.bind(kilo)(yankee);
        report['children'] = yankee;
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        oscar = foxtrot[oscar];
        oscar = romeo.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        offset = offset.body;
        oscar['style'] = offset;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        verify = verify.t;
        verify = verify.EDU2Eh;
        verify = offset.bind(yankee)(verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();