// app/modules/user_settings/native/voice/KrispLogo.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    oscar = argBar;
    options = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = options;
    var _closure1_slot2 = golf;
    mike = function() { // Original name: handleKrispLinkPressed
        zulu = _closure1_slot1;
        report = _closure1_slot2;
        entity = 5;
        mike = report[entity];
        entity = undefined;
        oscar = zulu.bind(entity)(mike);
        tango = oscar.getArticleURL;
        mike = _closure1_slot9;
        mike = mike.NOISE_SUPPRESSION;
        tango = tango.bind(oscar)(mike);
        mike = 6;
        mike = report[mike];
        options = zulu.bind(entity)(mike);
        golf = options.track;
        mike = _closure1_slot6;
        oscar = mike.NOISE_CANCELLATION_LINK_CLICKED;
        mike = {};
        foxtrot = _closure1_slot0;
        verify = 7;
        yankee = report[verify];
        yankee = foxtrot.bind(entity)(yankee);
        romeo = yankee.intl;
        yankee = romeo.string;
        verify = report[verify];
        verify = foxtrot.bind(entity)(verify);
        verify = verify.t;
        verify = verify.hvVgAQ;
        verify = yankee.bind(romeo)(verify);
        mike['text'] = verify;
        mike['href'] = tango;
        verify = {};
        yankee = _closure1_slot7;
        yankee = yankee.USER_SETTINGS;
        verify['page'] = yankee;
        offset = _closure1_slot8;
        offset = offset.SETTINGS_VOICE_AND_VIDEO;
        verify['section'] = offset;
        mike['location'] = verify;
        mike = golf.bind(options)(oscar, mike);
        mike = 8;
        mike = report[mike];
        zulu = zulu.bind(entity)(mike);
        mike = zulu.openURL;
        mike = mike.bind(zulu)(tango);
        return entity;
    };
    var _closure1_slot13 = mike;
    entity = global;
    offset = entity.Object;
    verify = offset.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = verify.bind(offset)(zulu, entity, report);
    entity = 0;
    verify = golf[entity];
    report = argCorge;
    entity = undefined;
    report = report.bind(entity)(verify);
    report = 1;
    report = golf[report];
    report = oscar.bind(entity)(report);
    verify = report.Image;
    var _closure1_slot3 = verify;
    report = report.View;
    var _closure1_slot4 = report;
    report = 2;
    report = golf[report];
    report = options.bind(entity)(report);
    var _closure1_slot5 = report;
    report = 3;
    report = golf[report];
    report = oscar.bind(entity)(report);
    options = report.AnalyticEvents;
    var _closure1_slot6 = options;
    options = report.AnalyticsPages;
    var _closure1_slot7 = options;
    options = report.AnalyticsSections;
    var _closure1_slot8 = options;
    report = report.HelpdeskArticles;
    var _closure1_slot9 = report;
    report = 4;
    options = golf[report];
    options = oscar.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot10 = options;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot11 = report;
    report = {};
    options = {};
    verify = 20;
    options['marginLeft'] = verify;
    report['logo'] = options;
    options = {'flexDirection': 'row', 'alignItems': 'center', 'paddingBottom': 12, 'gap': 12};
    report['detailsView'] = options;
    var _closure1_slot12 = report;
    report = 14;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/user_settings/native/voice/KrispLogo.tsx';
    report = oscar.bind(golf)(report);
    tango = function() { // Original name: KrispLogo
        _fun97010: for(var _fun97010_ip = 0; ; ) switch(_fun97010_ip) {
 0:
            mike = _closure1_slot0;
            report = _closure1_slot2;
            entity = 9;
            entity = report[entity];
            tango = undefined;
            golf = mike.bind(tango)(entity);
            oscar = golf.useStateFromStores;
            entity = _closure1_slot5;
            zulu = new Array(1);
            zulu[0] = entity;
            entity = function() {
                entity = _closure1_slot5;
                entity = entity.theme;
                return entity;
            };
            zulu = oscar.bind(golf)(zulu, entity);
            entity = 10;
            entity = report[entity];
            mike = mike.bind(tango)(entity);
            entity = mike.isThemeLight;
            entity = entity.bind(mike)(zulu);
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            if(entity) { _fun97010_ip = 105; continue _fun97010 }
 91:
            entity = 12;
            entity = zulu[entity];
            golf = mike.bind(tango)(entity);
            _fun97010_ip = 117; continue _fun97010;
 105:
            entity = 11;
            entity = zulu[entity];
            golf = mike.bind(tango)(entity);
 117:
            zulu = _closure1_slot11;
            mike = _closure1_slot4;
            entity = {};
            verify = _closure1_slot12;
            report = verify.detailsView;
            entity['style'] = report;
            options = _closure1_slot10;
            oscar = _closure1_slot3;
            report = {};
            verify = verify.logo;
            report['style'] = verify;
            report['source'] = golf;
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            verify = 7;
            golf = foxtrot[verify];
            golf = romeo.bind(tango)(golf);
            backup = golf.intl;
            yankee = backup.string;
            golf = foxtrot[verify];
            golf = romeo.bind(tango)(golf);
            golf = golf.t;
            golf = golf.vFiCS0;
            golf = yankee.bind(backup)(golf);
            report['accessibilityLabel'] = golf;
            oscar = options.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            oscar = 13;
            oscar = foxtrot[oscar];
            oscar = romeo.bind(tango)(oscar);
            golf = oscar.Text;
            oscar = {'variant': 'text-sm/medium', 'color': 'text-link', 'accessibilityRole': 'link'};
            offset = _closure1_slot13;
            oscar['onPress'] = offset;
            offset = foxtrot[verify];
            offset = romeo.bind(tango)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = foxtrot[verify];
            verify = romeo.bind(tango)(verify);
            verify = verify.t;
            verify = verify.hvVgAQ;
            verify = offset.bind(yankee)(verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = tango;
    zulu['handleKrispLinkPressed'] = mike;
    return entity;
})();