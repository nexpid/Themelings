// app/modules/user_settings/native/voice/KrispLogo.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    oscard = argBar;
    option = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = option;
    var _closure1_slot2 = golfie;
    michal = function() { // Original name: handleKrispLinkPressed
        zuuluu = _closure1_slot1;
        report = _closure1_slot2;
        entity = 5;
        michal = report[entity];
        entity = undefined;
        oscard = zuuluu.bind(entity)(michal);
        tangon = oscard.getArticleURL;
        michal = _closure1_slot9;
        michal = michal.NOISE_SUPPRESSION;
        tangon = tangon.bind(oscard)(michal);
        michal = 6;
        michal = report[michal];
        option = zuuluu.bind(entity)(michal);
        golfie = option.track;
        michal = _closure1_slot6;
        oscard = michal.NOISE_CANCELLATION_LINK_CLICKED;
        michal = {};
        foxtra = _closure1_slot0;
        verify = 7;
        yankee = report[verify];
        yankee = foxtra.bind(entity)(yankee);
        romeon = yankee.intl;
        yankee = romeon.string;
        verify = report[verify];
        verify = foxtra.bind(entity)(verify);
        verify = verify.t;
        verify = verify.hvVgAQ;
        verify = yankee.bind(romeon)(verify);
        michal['text'] = verify;
        michal['href'] = tangon;
        verify = {};
        yankee = _closure1_slot7;
        yankee = yankee.USER_SETTINGS;
        verify['page'] = yankee;
        offset = _closure1_slot8;
        offset = offset.SETTINGS_VOICE_AND_VIDEO;
        verify['section'] = offset;
        michal['location'] = verify;
        michal = golfie.bind(option)(oscard, michal);
        michal = 8;
        michal = report[michal];
        zuuluu = zuuluu.bind(entity)(michal);
        michal = zuuluu.openURL;
        michal = michal.bind(zuuluu)(tangon);
        return entity;
    };
    var _closure1_slot13 = michal;
    entity = global;
    offset = entity.Object;
    verify = offset.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = verify.bind(offset)(zuuluu, entity, report);
    entity = 0;
    verify = golfie[entity];
    report = argCor;
    entity = undefined;
    report = report.bind(entity)(verify);
    report = 1;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    verify = report.Image;
    var _closure1_slot3 = verify;
    report = report.View;
    var _closure1_slot4 = report;
    report = 2;
    report = golfie[report];
    report = option.bind(entity)(report);
    var _closure1_slot5 = report;
    report = 3;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.AnalyticEvents;
    var _closure1_slot6 = option;
    option = report.AnalyticsPages;
    var _closure1_slot7 = option;
    option = report.AnalyticsSections;
    var _closure1_slot8 = option;
    report = report.HelpdeskArticles;
    var _closure1_slot9 = report;
    report = 4;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.jsx;
    var _closure1_slot10 = option;
    report = report.jsxs;
    var _closure1_slot11 = report;
    report = {};
    option = {};
    verify = 20;
    option['marginLeft'] = verify;
    report['logo'] = option;
    option = {'flexDirection': 'row', 'alignItems': 'center', 'paddingBottom': 12, 'gap': 12};
    report['detailsView'] = option;
    var _closure1_slot12 = report;
    report = 14;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/user_settings/native/voice/KrispLogo.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function() { // Original name: KrispLogo
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = _closure1_slot0;
            report = _closure1_slot2;
            entity = 9;
            entity = report[entity];
            tangon = undefined;
            golfie = michal.bind(tangon)(entity);
            oscard = golfie.useStateFromStores;
            entity = _closure1_slot5;
            zuuluu = new Array(1);
            zuuluu[0] = entity;
            entity = function() {
                entity = _closure1_slot5;
                entity = entity.theme;
                return entity;
            };
            zuuluu = oscard.bind(golfie)(zuuluu, entity);
            entity = 10;
            entity = report[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.isThemeLight;
            entity = entity.bind(michal)(zuuluu);
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            if(entity) { _fun00002_ip = 105; continue _fun00001 }
 91:
            entity = 12;
            entity = zuuluu[entity];
            golfie = michal.bind(tangon)(entity);
            _fun00002_ip = 117; continue _fun00001;
 105:
            entity = 11;
            entity = zuuluu[entity];
            golfie = michal.bind(tangon)(entity);
 117:
            zuuluu = _closure1_slot11;
            michal = _closure1_slot4;
            entity = {};
            verify = _closure1_slot12;
            report = verify.detailsView;
            entity['style'] = report;
            option = _closure1_slot10;
            oscard = _closure1_slot3;
            report = {};
            verify = verify.logo;
            report['style'] = verify;
            report['source'] = golfie;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            verify = 7;
            golfie = foxtra[verify];
            golfie = romeon.bind(tangon)(golfie);
            backup = golfie.intl;
            yankee = backup.string;
            golfie = foxtra[verify];
            golfie = romeon.bind(tangon)(golfie);
            golfie = golfie.t;
            golfie = golfie.vFiCS0;
            golfie = yankee.bind(backup)(golfie);
            report['accessibilityLabel'] = golfie;
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = 13;
            oscard = foxtra[oscard];
            oscard = romeon.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {'variant': 'text-sm/medium', 'color': 'text-link', 'accessibilityRole': 'link'};
            offset = _closure1_slot13;
            oscard['onPress'] = offset;
            offset = foxtra[verify];
            offset = romeon.bind(tangon)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = foxtra[verify];
            verify = romeon.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.hvVgAQ;
            verify = offset.bind(yankee)(verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['handleKrispLinkPressed'] = michal;
    return entity;
})();