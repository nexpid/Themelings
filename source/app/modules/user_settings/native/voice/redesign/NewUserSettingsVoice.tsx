// app/modules/user_settings/native/voice/redesign/NewUserSettingsVoice.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.USER_SETTINGS_VOICE_GUILD_URL;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    offset = {};
    tangon = 16;
    offset['paddingHorizontal'] = tangon;
    golfie['container'] = offset;
    offset = {};
    yankee = 12;
    offset['marginTop'] = yankee;
    golfie['tableRow'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/voice/redesign/NewUserSettingsVoice.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function() { // Original name: NewUserSettingsVoice
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot7;
            tangon = undefined;
            kiloes = entity.bind(tangon)();
            zuuluu = _closure1_slot5;
            michal = _closure1_slot3;
            entity = {};
            report = kiloes.container;
            entity['style'] = report;
            golfie = _closure1_slot6;
            yankee = _closure1_slot0;
            romeon = _closure1_slot2;
            report = 6;
            report = romeon[report];
            report = yankee.bind(tangon)(report);
            oscard = report.Stack;
            report = {};
            option = 24;
            report['spacing'] = option;
            foxtra = _closure1_slot1;
            option = 7;
            option = romeon[option];
            offset = foxtra.bind(tangon)(option);
            option = {};
            offset = zuuluu.bind(tangon)(offset, option);
            option = new Array(7);
            option[0] = offset;
            offset = 8;
            offset = romeon[offset];
            backup = foxtra.bind(tangon)(offset);
            offset = {};
            offset = zuuluu.bind(tangon)(backup, offset);
            option[1] = offset;
            offset = 9;
            offset = romeon[offset];
            offset = yankee.bind(tangon)(offset);
            backup = offset.TextWithIOSLinkWorkaround;
            offset = {};
            kiloes = kiloes.tableRow;
            offset['style'] = kiloes;
            kiloes = 'text-sm/medium';
            offset['variant'] = kiloes;
            kiloes = 10;
            sizing = romeon[kiloes];
            sizing = yankee.bind(tangon)(sizing);
            result = sizing.intl;
            output = result.format;
            kiloes = romeon[kiloes];
            kiloes = yankee.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            sizing = kiloes.V+B3FB;
            kiloes = {};
            echoed = _closure1_slot4;
            kiloes['guideURL'] = echoed;
            kiloes = output.bind(result)(sizing, kiloes);
            offset['children'] = kiloes;
            offset = zuuluu.bind(tangon)(backup, offset);
            option[2] = offset;
            offset = 11;
            offset = romeon[offset];
            foxtra = foxtra.bind(tangon)(offset);
            offset = {};
            offset = zuuluu.bind(tangon)(foxtra, offset);
            option[3] = offset;
            offset = 12;
            offset = romeon[offset];
            yankee = yankee.bind(tangon)(offset);
            offset = yankee.isAndroid;
            offset = offset.bind(yankee)();
            if(!offset) { _fun00002_ip = 318; continue _fun00001 }
 286:
            foxtra = _closure1_slot5;
            romeon = _closure1_slot1;
            backup = _closure1_slot2;
            yankee = 13;
            yankee = backup[yankee];
            romeon = romeon.bind(tangon)(yankee);
            yankee = {};
            offset = foxtra.bind(tangon)(romeon, yankee);
 318:
            option[4] = offset;
            yankee = _closure1_slot5;
            foxtra = _closure1_slot1;
            romeon = _closure1_slot2;
            offset = 14;
            offset = romeon[offset];
            foxtra = foxtra.bind(tangon)(offset);
            offset = {};
            offset = yankee.bind(tangon)(foxtra, offset);
            option[5] = offset;
            offset = _closure1_slot0;
            verify = 15;
            verify = romeon[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.SafeAreaPaddingView;
            verify = {};
            romeon = true;
            verify['bottom'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[6] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    michal = function(argFoo) { // Original name: NewUserSettingsTableRowGroup
        tangon = _closure1_slot5;
        michal = _closure1_slot0;
        zuuluu = _closure1_slot2;
        entity = 5;
        entity = zuuluu[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.TableRowGroup;
        entity = {};
        golfie = argFoo;
        option = entity;
        report = copyDataProperties(option, golfie);
        oscard = false;
        report = 'hasIcons';
        entity[report] = oscard;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['NewUserSettingsTableRowGroup'] = michal;
    return entity;
})();