// app/modules/user_settings/native/voice/redesign/NewUserSettingsVoice.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.USER_SETTINGS_VOICE_GUILD_URL;
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    offset = {};
    tango = 16;
    offset['paddingHorizontal'] = tango;
    golf['container'] = offset;
    offset = {};
    yankee = 12;
    offset['marginTop'] = yankee;
    golf['tableRow'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/voice/redesign/NewUserSettingsVoice.tsx';
    tango = report.bind(oscar)(tango);
    tango = function() { // Original name: NewUserSettingsVoice
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot7;
            tango = undefined;
            kilo = entity.bind(tango)();
            zulu = _closure1_slot5;
            mike = _closure1_slot3;
            entity = {};
            report = kilo.container;
            entity['style'] = report;
            golf = _closure1_slot6;
            yankee = _closure1_slot0;
            romeo = _closure1_slot2;
            report = 6;
            report = romeo[report];
            report = yankee.bind(tango)(report);
            oscar = report.Stack;
            report = {};
            options = 24;
            report['spacing'] = options;
            foxtrot = _closure1_slot1;
            options = 7;
            options = romeo[options];
            offset = foxtrot.bind(tango)(options);
            options = {};
            offset = zulu.bind(tango)(offset, options);
            options = new Array(7);
            options[0] = offset;
            offset = 8;
            offset = romeo[offset];
            backup = foxtrot.bind(tango)(offset);
            offset = {};
            offset = zulu.bind(tango)(backup, offset);
            options[1] = offset;
            offset = 9;
            offset = romeo[offset];
            offset = yankee.bind(tango)(offset);
            backup = offset.TextWithIOSLinkWorkaround;
            offset = {};
            kilo = kilo.tableRow;
            offset['style'] = kilo;
            kilo = 'text-sm/medium';
            offset['variant'] = kilo;
            kilo = 10;
            sizing = romeo[kilo];
            sizing = yankee.bind(tango)(sizing);
            result = sizing.intl;
            output = result.format;
            kilo = romeo[kilo];
            kilo = yankee.bind(tango)(kilo);
            kilo = kilo.t;
            sizing = kilo.V+B3FB;
            kilo = {};
            echo = _closure1_slot4;
            kilo['guideURL'] = echo;
            kilo = output.bind(result)(sizing, kilo);
            offset['children'] = kilo;
            offset = zulu.bind(tango)(backup, offset);
            options[2] = offset;
            offset = 11;
            offset = romeo[offset];
            foxtrot = foxtrot.bind(tango)(offset);
            offset = {};
            offset = zulu.bind(tango)(foxtrot, offset);
            options[3] = offset;
            offset = 12;
            offset = romeo[offset];
            yankee = yankee.bind(tango)(offset);
            offset = yankee.isAndroid;
            offset = offset.bind(yankee)();
            if(!offset) { _fun00002_ip = 318; continue _fun00001 }
 286:
            foxtrot = _closure1_slot5;
            romeo = _closure1_slot1;
            backup = _closure1_slot2;
            yankee = 13;
            yankee = backup[yankee];
            romeo = romeo.bind(tango)(yankee);
            yankee = {};
            offset = foxtrot.bind(tango)(romeo, yankee);
 318:
            options[4] = offset;
            yankee = _closure1_slot5;
            foxtrot = _closure1_slot1;
            romeo = _closure1_slot2;
            offset = 14;
            offset = romeo[offset];
            foxtrot = foxtrot.bind(tango)(offset);
            offset = {};
            offset = yankee.bind(tango)(foxtrot, offset);
            options[5] = offset;
            offset = _closure1_slot0;
            verify = 15;
            verify = romeo[verify];
            verify = offset.bind(tango)(verify);
            offset = verify.SafeAreaPaddingView;
            verify = {};
            romeo = true;
            verify['bottom'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[6] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = tango;
    mike = function(argFoo) { // Original name: NewUserSettingsTableRowGroup
        tango = _closure1_slot5;
        mike = _closure1_slot0;
        zulu = _closure1_slot2;
        entity = 5;
        entity = zulu[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.TableRowGroup;
        entity = {};
        golf = argFoo;
        options = entity;
        report = copyDataProperties(options, golf);
        oscar = false;
        report = 'hasIcons';
        entity[report] = oscar;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['NewUserSettingsTableRowGroup'] = mike;
    return entity;
})();