// app/modules/user_settings/native/voice/redesign/NewUserSettingsVoiceOverlay.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/voice/redesign/NewUserSettingsVoiceOverlay.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: NewUserSettingsVoiceOverlay
        foxtra = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 3;
        entity = verify[entity];
        tangon = undefined;
        report = foxtra.bind(tangon)(entity);
        zuuluu = report.useStateFromStores;
        entity = _closure1_slot3;
        michal = new Array(1);
        michal[0] = entity;
        entity = function() {
            michal = _closure1_slot3;
            entity = michal.getEnabled;
            entity = entity.bind(michal)();
            return entity;
        };
        option = zuuluu.bind(report)(michal, entity);
        zuuluu = _closure1_slot4;
        entity = 4;
        entity = verify[entity];
        entity = foxtra.bind(tangon)(entity);
        michal = entity.NewUserSettingsTableRowGroup;
        entity = {};
        offset = 5;
        report = verify[offset];
        report = foxtra.bind(tangon)(report);
        yankee = report.intl;
        oscard = yankee.string;
        report = verify[offset];
        report = foxtra.bind(tangon)(report);
        report = report.t;
        report = report.bNqkDw;
        report = oscard.bind(yankee)(report);
        entity['title'] = report;
        report = 6;
        report = verify[report];
        report = foxtra.bind(tangon)(report);
        oscard = report.TableSwitchRow;
        report = {};
        yankee = verify[offset];
        yankee = foxtra.bind(tangon)(yankee);
        backup = yankee.intl;
        romeon = backup.string;
        yankee = verify[offset];
        yankee = foxtra.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.9CSZJi;
        yankee = romeon.bind(backup)(yankee);
        report['label'] = yankee;
        yankee = verify[offset];
        yankee = foxtra.bind(tangon)(yankee);
        romeon = yankee.intl;
        yankee = romeon.string;
        offset = verify[offset];
        offset = foxtra.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.Wfoivr;
        offset = yankee.bind(romeon)(offset);
        report['subLabel'] = offset;
        report['value'] = option;
        option = _closure1_slot1;
        golfie = 7;
        golfie = verify[golfie];
        golfie = option.bind(tangon)(golfie);
        golfie = golfie.setEnabled;
        report['onValueChange'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();