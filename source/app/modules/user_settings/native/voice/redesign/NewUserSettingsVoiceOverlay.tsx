// app/modules/user_settings/native/voice/redesign/NewUserSettingsVoiceOverlay.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/voice/redesign/NewUserSettingsVoiceOverlay.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: NewUserSettingsVoiceOverlay
        foxtrot = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 3;
        entity = verify[entity];
        tango = undefined;
        report = foxtrot.bind(tango)(entity);
        zulu = report.useStateFromStores;
        entity = _closure1_slot3;
        mike = new Array(1);
        mike[0] = entity;
        entity = function() {
            mike = _closure1_slot3;
            entity = mike.getEnabled;
            entity = entity.bind(mike)();
            return entity;
        };
        options = zulu.bind(report)(mike, entity);
        zulu = _closure1_slot4;
        entity = 4;
        entity = verify[entity];
        entity = foxtrot.bind(tango)(entity);
        mike = entity.NewUserSettingsTableRowGroup;
        entity = {};
        offset = 5;
        report = verify[offset];
        report = foxtrot.bind(tango)(report);
        yankee = report.intl;
        oscar = yankee.string;
        report = verify[offset];
        report = foxtrot.bind(tango)(report);
        report = report.t;
        report = report.bNqkDw;
        report = oscar.bind(yankee)(report);
        entity['title'] = report;
        report = 6;
        report = verify[report];
        report = foxtrot.bind(tango)(report);
        oscar = report.TableSwitchRow;
        report = {};
        yankee = verify[offset];
        yankee = foxtrot.bind(tango)(yankee);
        backup = yankee.intl;
        romeo = backup.string;
        yankee = verify[offset];
        yankee = foxtrot.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.9CSZJi;
        yankee = romeo.bind(backup)(yankee);
        report['label'] = yankee;
        yankee = verify[offset];
        yankee = foxtrot.bind(tango)(yankee);
        romeo = yankee.intl;
        yankee = romeo.string;
        offset = verify[offset];
        offset = foxtrot.bind(tango)(offset);
        offset = offset.t;
        offset = offset.Wfoivr;
        offset = yankee.bind(romeo)(offset);
        report['subLabel'] = offset;
        report['value'] = options;
        options = _closure1_slot1;
        golf = 7;
        golf = verify[golf];
        golf = options.bind(tango)(golf);
        golf = golf.setEnabled;
        report['onValueChange'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();