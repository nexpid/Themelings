// app/modules/user_settings/native/voice/redesign/NewUserSettingsSoundboardVolume.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.StyleSheet;
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.HelpdeskArticles;
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    golf = options.create;
    tango = {};
    verify = {};
    offset = 4;
    verify['marginTop'] = offset;
    tango['slider'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tango['text'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/voice/redesign/NewUserSettingsSoundboardVolume.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: NewSoundboardVolume
        backup = _closure1_slot0;
        update = _closure1_slot2;
        entity = 4;
        entity = update[entity];
        tango = undefined;
        mike = backup.bind(tango)(entity);
        entity = mike.getAmplitudinalSoundboardVolume;
        result = entity.bind(mike)();
        zulu = _closure1_slot5;
        entity = 5;
        entity = update[entity];
        entity = backup.bind(tango)(entity);
        mike = entity.NewUserSettingsTableRowGroup;
        entity = {};
        foxtrot = 6;
        report = update[foxtrot];
        report = backup.bind(tango)(report);
        golf = report.intl;
        oscar = golf.string;
        report = update[foxtrot];
        report = backup.bind(tango)(report);
        report = report.t;
        report = report.xbMc8v;
        report = oscar.bind(golf)(report);
        entity['title'] = report;
        report = 7;
        report = update[report];
        report = backup.bind(tango)(report);
        oscar = report.TableRow;
        report = {};
        golf = update[foxtrot];
        golf = backup.bind(tango)(golf);
        verify = golf.intl;
        options = verify.string;
        golf = update[foxtrot];
        golf = backup.bind(tango)(golf);
        golf = golf.t;
        golf = golf.kbFsAA;
        golf = options.bind(verify)(golf);
        report['label'] = golf;
        verify = _closure1_slot7;
        options = _closure1_slot6;
        golf = {};
        yankee = _closure1_slot3;
        offset = {};
        kilo = _closure1_slot8;
        romeo = kilo.slider;
        offset['style'] = romeo;
        echo = _closure1_slot1;
        romeo = 8;
        romeo = update[romeo];
        sizing = echo.bind(tango)(romeo);
        romeo = {};
        romeo['value'] = result;
        result = 100;
        romeo['maxVolume'] = result;
        result = 9;
        result = update[result];
        result = backup.bind(tango)(result);
        result = result.updateUserSoundboardVolume;
        romeo['onValueChange'] = result;
        romeo = zulu.bind(tango)(sizing, romeo);
        offset['children'] = romeo;
        yankee = zulu.bind(tango)(yankee, offset);
        offset = new Array(2);
        offset[0] = yankee;
        yankee = 10;
        yankee = update[yankee];
        yankee = backup.bind(tango)(yankee);
        romeo = yankee.TextWithIOSLinkWorkaround;
        yankee = {};
        kilo = kilo.text;
        yankee['style'] = kilo;
        kilo = 'text-sm/medium';
        yankee['variant'] = kilo;
        kilo = update[foxtrot];
        kilo = backup.bind(tango)(kilo);
        sizing = kilo.intl;
        kilo = sizing.format;
        foxtrot = update[foxtrot];
        foxtrot = backup.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        backup = foxtrot.BPbGq6;
        foxtrot = {};
        result = 11;
        result = update[result];
        echo = echo.bind(tango)(result);
        result = echo.getArticleURL;
        output = _closure1_slot4;
        output = output.SOUNDBOARD;
        output = result.bind(echo)(output);
        foxtrot['helpCenterArticle'] = output;
        foxtrot = kilo.bind(sizing)(backup, foxtrot);
        yankee['children'] = foxtrot;
        yankee = zulu.bind(tango)(romeo, yankee);
        offset[1] = yankee;
        golf['children'] = offset;
        golf = verify.bind(tango)(options, golf);
        report['subLabel'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();