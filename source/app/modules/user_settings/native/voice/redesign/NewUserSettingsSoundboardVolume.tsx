// app/modules/user_settings/native/voice/redesign/NewUserSettingsSoundboardVolume.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.StyleSheet;
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot4 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    golfie = option.create;
    tangon = {};
    verify = {};
    offset = 4;
    verify['marginTop'] = offset;
    tangon['slider'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tangon['text'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/voice/redesign/NewUserSettingsSoundboardVolume.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: NewSoundboardVolume
        backup = _closure1_slot0;
        update = _closure1_slot2;
        entity = 4;
        entity = update[entity];
        tangon = undefined;
        michal = backup.bind(tangon)(entity);
        entity = michal.getAmplitudinalSoundboardVolume;
        source = entity.bind(michal)();
        echoed = _closure1_slot1;
        entity = 5;
        entity = update[entity];
        entity = echoed.bind(tangon)(entity);
        entity = entity.bind(tangon)();
        entity = entity.analyticsLocations;
        var _closure2_slot0 = entity;
        zuuluu = _closure1_slot5;
        entity = 6;
        entity = update[entity];
        entity = backup.bind(tangon)(entity);
        michal = entity.NewUserSettingsTableRowGroup;
        entity = {};
        foxtra = 7;
        report = update[foxtra];
        report = backup.bind(tangon)(report);
        golfie = report.intl;
        oscard = golfie.string;
        report = update[foxtra];
        report = backup.bind(tangon)(report);
        report = report.t;
        report = report.xbMc8v;
        report = oscard.bind(golfie)(report);
        entity['title'] = report;
        report = 8;
        report = update[report];
        report = backup.bind(tangon)(report);
        oscard = report.TableRow;
        report = {};
        golfie = update[foxtra];
        golfie = backup.bind(tangon)(golfie);
        verify = golfie.intl;
        option = verify.string;
        golfie = update[foxtra];
        golfie = backup.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.kbFsAA;
        golfie = option.bind(verify)(golfie);
        report['label'] = golfie;
        verify = _closure1_slot7;
        option = _closure1_slot6;
        golfie = {};
        yankee = _closure1_slot3;
        offset = {};
        kiloes = _closure1_slot8;
        romeon = kiloes.slider;
        offset['style'] = romeon;
        romeon = 9;
        romeon = update[romeon];
        sizing = echoed.bind(tangon)(romeon);
        romeon = {};
        romeon['value'] = source;
        source = 100;
        romeon['maxVolume'] = source;
        result = function(argFoo) { // Original name: onValueChange
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 10;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.updateUserSoundboardVolume;
            michal = _closure2_slot0;
            entity = argFoo;
            entity = zuuluu.bind(tangon)(entity, michal);
            return entity;
        };
        romeon['onValueChange'] = result;
        romeon = zuuluu.bind(tangon)(sizing, romeon);
        offset['children'] = romeon;
        yankee = zuuluu.bind(tangon)(yankee, offset);
        offset = new Array(2);
        offset[0] = yankee;
        yankee = 11;
        yankee = update[yankee];
        yankee = backup.bind(tangon)(yankee);
        romeon = yankee.TextWithIOSLinkWorkaround;
        yankee = {};
        kiloes = kiloes.text;
        yankee['style'] = kiloes;
        kiloes = 'text-sm/medium';
        yankee['variant'] = kiloes;
        kiloes = update[foxtra];
        kiloes = backup.bind(tangon)(kiloes);
        sizing = kiloes.intl;
        kiloes = sizing.format;
        foxtra = update[foxtra];
        foxtra = backup.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        backup = foxtra.BPbGq6;
        foxtra = {};
        result = 12;
        result = update[result];
        echoed = echoed.bind(tangon)(result);
        result = echoed.getArticleURL;
        output = _closure1_slot4;
        output = output.SOUNDBOARD;
        output = result.bind(echoed)(output);
        foxtra['helpCenterArticle'] = output;
        foxtra = kiloes.bind(sizing)(backup, foxtra);
        yankee['children'] = foxtra;
        yankee = zuuluu.bind(tangon)(romeon, yankee);
        offset[1] = yankee;
        golfie['children'] = offset;
        golfie = verify.bind(tangon)(option, golfie);
        report['subLabel'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();