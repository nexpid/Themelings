// app/modules/user_settings/native/design_system/UserSettingsDesignSystemButton.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: ExampleButton
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            foxtra = michal.variant;
            romeon = michal.text;
            yankee = michal.grow;
            zuuluu = _closure1_slot1;
            result = _closure1_slot2;
            michal = 5;
            michal = result[michal];
            tangon = undefined;
            michal = zuuluu.bind(tangon)(michal);
            zuuluu = michal.bind(tangon)();
            report = zuuluu.buttonScale;
            golfie = zuuluu.buttonSize;
            michal = zuuluu.enableLoadingState;
            var _closure2_slot0 = michal;
            oscard = zuuluu.iconPosition;
            verify = zuuluu.showIcon;
            output = zuuluu.showDisabled;
            backup = _closure1_slot4;
            zuuluu = backup.useRef;
            offset = null;
            zuuluu = zuuluu.bind(backup)(offset);
            var _closure2_slot1 = zuuluu;
            kiloes = _closure1_slot4;
            backup = kiloes.useState;
            zuuluu = false;
            kiloes = backup.bind(kiloes)(zuuluu);
            backup = _closure1_slot3;
            zuuluu = 2;
            kiloes = backup.bind(tangon)(kiloes, zuuluu);
            zuuluu = 0;
            backup = kiloes[zuuluu];
            zuuluu = 1;
            zuuluu = kiloes[zuuluu];
            var _closure2_slot2 = zuuluu;
            sizing = _closure1_slot4;
            kiloes = sizing.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = _closure2_slot0;
                    if(!michal) { _fun00004_ip = 101; continue _fun00003 }
 10:
                    michal = _closure2_slot1;
                    zuuluu = michal.current;
                    michal = null;
                    if(!(michal != zuuluu)) { _fun00004_ip = 49; continue _fun00003 }
 25:
                    michal = global;
                    tangon = michal.clearTimeout;
                    michal = _closure2_slot1;
                    zuuluu = michal.current;
                    michal = undefined;
                    michal = tangon.bind(michal)(zuuluu);
 49:
                    zuuluu = _closure2_slot2;
                    report = undefined;
                    michal = true;
                    michal = zuuluu.bind(report)(michal);
                    michal = _closure2_slot1;
                    entity = global;
                    tangon = entity.setTimeout;
                    zuuluu = function() {
                        zuuluu = _closure2_slot2;
                        entity = undefined;
                        michal = false;
                        michal = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    entity = 5000;
                    entity = tangon.bind(report)(zuuluu, entity);
                    michal['current'] = entity;
 101:
                    entity = undefined;
                    return entity;
                }
            };
            sizing = kiloes.bind(sizing)(michal, zuuluu);
            kiloes = _closure1_slot4;
            zuuluu = kiloes.useCallback;
            michal = function() {
                tangon = _closure2_slot2;
                entity = undefined;
                zuuluu = true;
                zuuluu = tangon.bind(entity)(zuuluu);
                zuuluu = _closure2_slot1;
                michal = global;
                report = michal.setTimeout;
                tangon = function() {
                    zuuluu = _closure2_slot2;
                    entity = undefined;
                    michal = false;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal = 5000;
                michal = report.bind(entity)(tangon, michal);
                zuuluu['current'] = michal;
                return entity;
            };
            entity = new Array(0);
            kiloes = zuuluu.bind(kiloes)(michal, entity);
            zuuluu = _closure1_slot9;
            michal = _closure1_slot0;
            entity = 6;
            entity = result[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.Button;
            entity = {};
            entity['disabled'] = output;
            entity['onPress'] = sizing;
            entity['onLongPress'] = kiloes;
            entity['loading'] = backup;
            entity['variant'] = foxtra;
            if(!(offset != romeon)) { _fun00002_ip = 269; continue _fun00001 }
 266:
            foxtra = romeon;
 269:
            backup = offset != foxtra;
            romeon = '';
            if(!backup) { _fun00002_ip = 283; continue _fun00001 }
 280:
            romeon = foxtra;
 283:
            entity['text'] = romeon;
            offset = offset != yankee;
            if(!offset) { _fun00002_ip = 297; continue _fun00001 }
 294:
            offset = yankee;
 297:
            entity['grow'] = offset;
            entity['size'] = golfie;
            golfie = undefined;
            if(!verify) { _fun00002_ip = 331; continue _fun00001 }
 311:
            verify = _closure1_slot1;
            offset = _closure1_slot2;
            option = 7;
            option = offset[option];
            golfie = verify.bind(tangon)(option);
 331:
            entity['icon'] = golfie;
            entity['iconPosition'] = oscard;
            entity['scaleAmountInPx'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot17 = entity;
    entity = function(argFoo) { // Original name: ExampleIconButton
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            golfie = entity.variant;
            yankee = entity.showLabel;
            tangon = undefined;
            if(!(yankee === tangon)) { _fun00006_ip = 24; continue _fun00005 }
 22:
            yankee = false;
 24:
            var _closure2_slot0 = tangon;
            var _closure2_slot1 = tangon;
            var _closure2_slot2 = tangon;
            var _closure2_slot3 = tangon;
            michal = _closure1_slot1;
            foxtra = _closure1_slot2;
            entity = 5;
            entity = foxtra[entity];
            entity = michal.bind(tangon)(entity);
            zuuluu = entity.bind(tangon)();
            entity = zuuluu.buttonSize;
            michal = zuuluu.enableLoadingState;
            _closure2_slot0 = michal;
            romeon = zuuluu.showDisabled;
            report = _closure1_slot4;
            zuuluu = report.useRef;
            verify = null;
            zuuluu = zuuluu.bind(report)(verify);
            _closure2_slot1 = zuuluu;
            option = _closure1_slot4;
            report = option.useState;
            zuuluu = false;
            option = report.bind(option)(zuuluu);
            report = _closure1_slot3;
            zuuluu = 2;
            report = report.bind(tangon)(option, zuuluu);
            zuuluu = 0;
            option = report[zuuluu];
            zuuluu = 1;
            zuuluu = report[zuuluu];
            _closure2_slot2 = zuuluu;
            backup = _closure1_slot4;
            report = backup.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    michal = _closure2_slot0;
                    if(!michal) { _fun00008_ip = 101; continue _fun00007 }
 10:
                    michal = _closure2_slot1;
                    zuuluu = michal.current;
                    michal = null;
                    if(!(michal != zuuluu)) { _fun00008_ip = 49; continue _fun00007 }
 25:
                    michal = global;
                    tangon = michal.clearTimeout;
                    michal = _closure2_slot1;
                    zuuluu = michal.current;
                    michal = undefined;
                    michal = tangon.bind(michal)(zuuluu);
 49:
                    zuuluu = _closure2_slot2;
                    report = undefined;
                    michal = true;
                    michal = zuuluu.bind(report)(michal);
                    michal = _closure2_slot1;
                    entity = global;
                    tangon = entity.setTimeout;
                    zuuluu = function() {
                        zuuluu = _closure2_slot2;
                        entity = undefined;
                        michal = false;
                        michal = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    entity = 5000;
                    entity = tangon.bind(report)(zuuluu, entity);
                    michal['current'] = entity;
 101:
                    entity = undefined;
                    return entity;
                }
            };
            michal = report.bind(backup)(michal, zuuluu);
            _closure2_slot3 = michal;
            zuuluu = _closure1_slot9;
            report = _closure1_slot0;
            michal = 8;
            michal = foxtra[michal];
            michal = report.bind(tangon)(michal);
            michal = michal.IconButton;
            report = {};
            report['disabled'] = romeon;
            if(yankee) { _fun00006_ip = 295; continue _fun00005 }
 224:
            yankee = function() { // Original name: onPress
                michal = _closure2_slot3;
                entity = undefined;
                entity = michal.bind(entity)();
                return entity;
            };
            report['onPress'] = yankee;
            romeon = verify != golfie;
            yankee = '';
            if(!romeon) { _fun00006_ip = 249; continue _fun00005 }
 246:
            yankee = golfie;
 249:
            report['accessibilityLabel'] = yankee;
            report['loading'] = option;
            report['variant'] = golfie;
            report['size'] = entity;
            yankee = _closure1_slot1;
            romeon = _closure1_slot2;
            entity = 9;
            entity = romeon[entity];
            entity = yankee.bind(tangon)(entity);
            report['icon'] = entity;
            entity = report;
            _fun00006_ip = 367; continue _fun00005;
 295:
            offset = function() { // Original name: onPress
                michal = _closure2_slot3;
                entity = undefined;
                entity = michal.bind(entity)();
                return entity;
            };
            report['onPress'] = offset;
            offset = verify != golfie;
            verify = '';
            if(!offset) { _fun00006_ip = 320; continue _fun00005 }
 317:
            verify = golfie;
 320:
            report['label'] = verify;
            verify = true;
            report['grow'] = verify;
            report['loading'] = option;
            report['variant'] = golfie;
            golfie = _closure1_slot1;
            option = _closure1_slot2;
            oscard = 9;
            oscard = option[oscard];
            oscard = golfie.bind(tangon)(oscard);
            report['icon'] = oscard;
            entity = report;
 367:
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot18 = entity;
    entity = function(argFoo) { // Original name: ExampleImageButton
        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
            entity = argFoo;
            oscard = entity.image;
            option = entity.label;
            offset = entity.showLabel;
            tangon = undefined;
            if(!(offset === tangon)) { _fun00010_ip = 30; continue _fun00009 }
 28:
            offset = false;
 30:
            var _closure2_slot0 = tangon;
            var _closure2_slot1 = tangon;
            var _closure2_slot2 = tangon;
            var _closure2_slot3 = tangon;
            zuuluu = _closure1_slot1;
            romeon = _closure1_slot2;
            entity = 5;
            entity = romeon[entity];
            entity = zuuluu.bind(tangon)(entity);
            report = entity.bind(tangon)();
            entity = report.buttonSize;
            zuuluu = report.enableLoadingState;
            _closure2_slot0 = zuuluu;
            yankee = report.showDisabled;
            foxtra = _closure1_slot4;
            golfie = foxtra.useRef;
            report = null;
            report = golfie.bind(foxtra)(report);
            _closure2_slot1 = report;
            foxtra = _closure1_slot4;
            golfie = foxtra.useState;
            report = false;
            foxtra = golfie.bind(foxtra)(report);
            golfie = _closure1_slot3;
            report = 2;
            foxtra = golfie.bind(tangon)(foxtra, report);
            report = 0;
            golfie = foxtra[report];
            report = 1;
            report = foxtra[report];
            _closure2_slot2 = report;
            backup = _closure1_slot4;
            foxtra = backup.useCallback;
            report = new Array(1);
            report[0] = zuuluu;
            zuuluu = function() {
                _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                    michal = _closure2_slot0;
                    if(!michal) { _fun00012_ip = 101; continue _fun00011 }
 10:
                    michal = _closure2_slot1;
                    zuuluu = michal.current;
                    michal = null;
                    if(!(michal != zuuluu)) { _fun00012_ip = 49; continue _fun00011 }
 25:
                    michal = global;
                    tangon = michal.clearTimeout;
                    michal = _closure2_slot1;
                    zuuluu = michal.current;
                    michal = undefined;
                    michal = tangon.bind(michal)(zuuluu);
 49:
                    zuuluu = _closure2_slot2;
                    report = undefined;
                    michal = true;
                    michal = zuuluu.bind(report)(michal);
                    michal = _closure2_slot1;
                    entity = global;
                    tangon = entity.setTimeout;
                    zuuluu = function() {
                        zuuluu = _closure2_slot2;
                        entity = undefined;
                        michal = false;
                        michal = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    entity = 5000;
                    entity = tangon.bind(report)(zuuluu, entity);
                    michal['current'] = entity;
 101:
                    entity = undefined;
                    return entity;
                }
            };
            zuuluu = foxtra.bind(backup)(zuuluu, report);
            _closure2_slot3 = zuuluu;
            zuuluu = _closure1_slot9;
            report = _closure1_slot0;
            michal = 10;
            michal = romeon[michal];
            michal = report.bind(tangon)(michal);
            michal = michal.ImageButton;
            report = {};
            report['disabled'] = yankee;
            if(offset) { _fun00010_ip = 264; continue _fun00009 }
 230:
            offset = function() { // Original name: onPress
                michal = _closure2_slot3;
                entity = undefined;
                entity = michal.bind(entity)();
                return entity;
            };
            report['onPress'] = offset;
            report['accessibilityLabel'] = option;
            report['loading'] = golfie;
            report['size'] = entity;
            report['image'] = oscard;
            entity = report;
            _fun00010_ip = 299; continue _fun00009;
 264:
            verify = function() { // Original name: onPress
                michal = _closure2_slot3;
                entity = undefined;
                entity = michal.bind(entity)();
                return entity;
            };
            report['onPress'] = verify;
            report['label'] = option;
            option = true;
            report['grow'] = option;
            report['loading'] = golfie;
            report['image'] = oscard;
            entity = report;
 299:
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot19 = entity;
    entity = function() { // Original name: ExampleToggleButton
        tangon = _closure1_slot4;
        zuuluu = tangon.useState;
        michal = false;
        oscard = zuuluu.bind(tangon)(michal);
        zuuluu = _closure1_slot3;
        tangon = undefined;
        michal = 2;
        zuuluu = zuuluu.bind(tangon)(oscard, michal);
        michal = 0;
        verify = zuuluu[michal];
        var _closure2_slot0 = verify;
        michal = 1;
        michal = zuuluu[michal];
        var _closure2_slot1 = michal;
        michal = _closure1_slot0;
        golfie = _closure1_slot2;
        zuuluu = 11;
        zuuluu = golfie[zuuluu];
        option = michal.bind(tangon)(zuuluu);
        oscard = option.useToggleButtonProps;
        zuuluu = {};
        offset = {};
        yankee = 'Unfollow';
        offset['text'] = yankee;
        romeon = _closure1_slot1;
        yankee = 12;
        yankee = golfie[yankee];
        yankee = romeon.bind(tangon)(yankee);
        offset['icon'] = yankee;
        zuuluu['on'] = offset;
        offset = {};
        yankee = 'Follow';
        offset['text'] = yankee;
        yankee = 13;
        yankee = golfie[yankee];
        yankee = romeon.bind(tangon)(yankee);
        offset['icon'] = yankee;
        zuuluu['off'] = offset;
        foxtra = oscard.bind(option)(zuuluu, verify);
        zuuluu = _closure1_slot9;
        entity = 6;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Button;
        entity = {};
        backup = entity;
        oscard = copyDataProperties(backup, foxtra);
        oscard = function() { // Original name: onPress
            zuuluu = _closure2_slot1;
            entity = _closure2_slot0;
            michal = !entity;
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        report = 'onPress';
        entity[report] = oscard;
        oscard = 'secondary';
        report = 'variant';
        entity[report] = oscard;
        oscard = 'md';
        report = 'size';
        entity[report] = oscard;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot20 = entity;
    entity = function() { // Original name: ExampleIconToggleButton
        tangon = _closure1_slot4;
        zuuluu = tangon.useState;
        michal = false;
        oscard = zuuluu.bind(tangon)(michal);
        zuuluu = _closure1_slot3;
        tangon = undefined;
        michal = 2;
        zuuluu = zuuluu.bind(tangon)(oscard, michal);
        michal = 0;
        verify = zuuluu[michal];
        var _closure2_slot0 = verify;
        michal = 1;
        michal = zuuluu[michal];
        var _closure2_slot1 = michal;
        michal = _closure1_slot0;
        golfie = _closure1_slot2;
        zuuluu = 11;
        zuuluu = golfie[zuuluu];
        option = michal.bind(tangon)(zuuluu);
        oscard = option.useToggleIconButtonProps;
        zuuluu = {};
        offset = {'variant': 'destructive', 'accessibilityLabel': 'Mute'};
        romeon = _closure1_slot1;
        yankee = 14;
        foxtra = golfie[yankee];
        foxtra = romeon.bind(tangon)(foxtra);
        offset['icon'] = foxtra;
        zuuluu['on'] = offset;
        offset = {'variant': 'secondary', 'accessibilityLabel': 'Mute'};
        yankee = golfie[yankee];
        yankee = romeon.bind(tangon)(yankee);
        offset['icon'] = yankee;
        zuuluu['off'] = offset;
        backup = oscard.bind(option)(zuuluu, verify);
        zuuluu = _closure1_slot9;
        entity = 8;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.IconButton;
        entity = {};
        kiloes = entity;
        oscard = copyDataProperties(kiloes, backup);
        oscard = function() { // Original name: onPress
            zuuluu = _closure2_slot1;
            entity = _closure2_slot0;
            michal = !entity;
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        report = 'onPress';
        entity[report] = oscard;
        oscard = 'md';
        report = 'size';
        entity[report] = oscard;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot21 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.LIGHT_BACKGROUND_GRADIENT_PRESETS;
    var _closure1_slot7 = golfie;
    tangon = tangon.DARK_BACKGROUND_GRADIENT_PRESETS;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot9 = golfie;
    golfie = tangon.jsxs;
    var _closure1_slot10 = golfie;
    tangon = tangon.Fragment;
    var _closure1_slot11 = tangon;
    tangon = ['primary', 'secondary', 'tertiary'];
    var _closure1_slot12 = tangon;
    tangon = ['primary-overlay', 'secondary-overlay'];
    var _closure1_slot13 = tangon;
    tangon = ['destructive', 'active'];
    var _closure1_slot14 = tangon;
    tangon = ['experimental_premium-primary', 'experimental_premium-secondary'];
    var _closure1_slot15 = tangon;
    tangon = 15;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 16;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingHorizontal'] = romeon;
    tangon['container'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingHorizontal'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['paddingVertical'] = romeon;
    tangon['buttonContainer'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.unsafe_rawColors;
    romeon = romeon.BG_GRADIENT_CHROMA_GLOW_1;
    verify['backgroundColor'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_48;
    verify['paddingVertical'] = offset;
    tangon['overlayButtonContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot16 = tangon;
    tangon = 39;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/design_system/UserSettingsDesignSystemButton.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: UserSettingsDesignSystemButton
        entity = _closure1_slot16;
        tangon = undefined;
        verify = entity.bind(tangon)();
        var _closure2_slot0 = verify;
        golfie = _closure1_slot0;
        backup = _closure1_slot2;
        entity = 17;
        entity = backup[entity];
        michal = golfie.bind(tangon)(entity);
        entity = michal.useNavigation;
        zuuluu = entity.bind(michal)();
        option = _closure1_slot4;
        report = option.useCallback;
        michal = function() {
            report = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 18;
            tangon = michal[entity];
            entity = undefined;
            report = report.bind(entity)(tangon);
            tangon = report.openLazy;
            oscard = _closure1_slot0;
            zuuluu = 20;
            zuuluu = michal[zuuluu];
            oscard = oscard.bind(entity)(zuuluu);
            zuuluu = 19;
            zuuluu = michal[zuuluu];
            michal = michal.paths;
            zuuluu = oscard.bind(entity)(zuuluu, michal);
            michal = 'UserSettingsDesignSystemButtonActionSheet';
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        entity = new Array(0);
        entity = report.bind(option)(michal, entity);
        var _closure2_slot1 = entity;
        michal = zuuluu.setOptions;
        entity = {};
        report = function() { // Original name: headerRight
            tangon = _closure1_slot9;
            michal = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 8;
            entity = golfie[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.IconButton;
            entity = {'onPress': null, 'icon': null, 'size': 'sm', 'variant': 'secondary', 'accessibilityLabel': 'Settings'};
            oscard = _closure2_slot1;
            entity['onPress'] = oscard;
            oscard = _closure1_slot1;
            report = 9;
            report = golfie[report];
            report = oscard.bind(zuuluu)(report);
            entity['icon'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        entity['headerRight'] = report;
        entity = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot10;
        michal = _closure1_slot11;
        entity = {};
        kiloes = _closure1_slot9;
        option = _closure1_slot6;
        report = {};
        source = 21;
        offset = backup[source];
        offset = golfie.bind(tangon)(offset);
        output = offset.Stack;
        sizing = {};
        update = 24;
        sizing['spacing'] = update;
        offset = backup[source];
        offset = golfie.bind(tangon)(offset);
        romeon = offset.Stack;
        offset = {};
        echoed = _closure1_slot9;
        foxtra = backup[source];
        foxtra = golfie.bind(tangon)(foxtra);
        result = foxtra.Stack;
        foxtra = {};
        ctrled = verify.container;
        foxtra['style'] = ctrled;
        sequen = _closure1_slot9;
        config = 22;
        ctrled = backup[config];
        ctrled = golfie.bind(tangon)(ctrled);
        vacuum = ctrled.Text;
        ctrled = {'variant': 'heading-lg/bold', 'children': 'Hierarchical buttons'};
        ctrled = sequen.bind(tangon)(vacuum, ctrled);
        foxtra['children'] = ctrled;
        result = echoed.bind(tangon)(result, foxtra);
        foxtra = new Array(2);
        foxtra[0] = result;
        echoed = _closure1_slot9;
        sequen = _closure1_slot5;
        result = {};
        variable36 = _closure1_slot12;
        vacuum = variable36.map;
        ctrled = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot5;
            michal = {};
            oscard = _closure2_slot0;
            oscard = oscard.buttonContainer;
            michal['style'] = oscard;
            option = _closure1_slot9;
            golfie = _closure1_slot17;
            oscard = {};
            oscard['variant'] = report;
            entity = undefined;
            oscard = option.bind(entity)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        ctrled = vacuum.bind(variable36)(ctrled);
        result['children'] = ctrled;
        result = echoed.bind(tangon)(sequen, result);
        foxtra[1] = result;
        offset['children'] = foxtra;
        offset = zuuluu.bind(tangon)(romeon, offset);
        result = new Array(19);
        result[0] = offset;
        offset = backup[source];
        offset = golfie.bind(tangon)(offset);
        romeon = offset.Stack;
        offset = {};
        ctrled = _closure1_slot9;
        foxtra = backup[source];
        foxtra = golfie.bind(tangon)(foxtra);
        echoed = foxtra.Stack;
        foxtra = {};
        vacuum = verify.container;
        foxtra['style'] = vacuum;
        cntext = _closure1_slot9;
        vacuum = backup[config];
        vacuum = golfie.bind(tangon)(vacuum);
        record = vacuum.Text;
        vacuum = {'variant': 'heading-lg/bold', 'children': 'Sentiment buttons'};
        vacuum = cntext.bind(tangon)(record, vacuum);
        foxtra['children'] = vacuum;
        echoed = ctrled.bind(tangon)(echoed, foxtra);
        foxtra = new Array(2);
        foxtra[0] = echoed;
        ctrled = _closure1_slot9;
        echoed = {};
        variable37 = _closure1_slot14;
        record = variable37.map;
        vacuum = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot5;
            michal = {};
            oscard = _closure2_slot0;
            oscard = oscard.buttonContainer;
            michal['style'] = oscard;
            option = _closure1_slot9;
            golfie = _closure1_slot17;
            oscard = {};
            oscard['variant'] = report;
            entity = undefined;
            oscard = option.bind(entity)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        vacuum = record.bind(variable37)(vacuum);
        echoed['children'] = vacuum;
        echoed = ctrled.bind(tangon)(sequen, echoed);
        foxtra[1] = echoed;
        offset['children'] = foxtra;
        offset = zuuluu.bind(tangon)(romeon, offset);
        result[1] = offset;
        offset = backup[source];
        offset = golfie.bind(tangon)(offset);
        romeon = offset.Stack;
        offset = {};
        ctrled = _closure1_slot9;
        foxtra = backup[source];
        foxtra = golfie.bind(tangon)(foxtra);
        echoed = foxtra.Stack;
        foxtra = {};
        vacuum = verify.container;
        foxtra['style'] = vacuum;
        cntext = _closure1_slot9;
        vacuum = backup[config];
        vacuum = golfie.bind(tangon)(vacuum);
        record = vacuum.Text;
        vacuum = {'variant': 'heading-lg/bold', 'children': 'Experimental premium buttons'};
        vacuum = cntext.bind(tangon)(record, vacuum);
        foxtra['children'] = vacuum;
        echoed = ctrled.bind(tangon)(echoed, foxtra);
        foxtra = new Array(2);
        foxtra[0] = echoed;
        ctrled = _closure1_slot9;
        echoed = {};
        cntext = _closure1_slot15;
        record = cntext.map;
        vacuum = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot5;
            michal = {};
            oscard = _closure2_slot0;
            oscard = oscard.buttonContainer;
            michal['style'] = oscard;
            option = _closure1_slot9;
            golfie = _closure1_slot17;
            oscard = {};
            oscard['variant'] = report;
            entity = undefined;
            oscard = option.bind(entity)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        vacuum = record.bind(cntext)(vacuum);
        echoed['children'] = vacuum;
        echoed = ctrled.bind(tangon)(sequen, echoed);
        foxtra[1] = echoed;
        offset['children'] = foxtra;
        offset = zuuluu.bind(tangon)(romeon, offset);
        result[2] = offset;
        offset = backup[source];
        offset = golfie.bind(tangon)(offset);
        romeon = offset.Stack;
        offset = {};
        foxtra = backup[source];
        foxtra = golfie.bind(tangon)(foxtra);
        echoed = foxtra.Stack;
        foxtra = {};
        ctrled = verify.container;
        foxtra['style'] = ctrled;
        record = _closure1_slot9;
        ctrled = backup[config];
        ctrled = golfie.bind(tangon)(ctrled);
        vacuum = ctrled.Text;
        ctrled = {'variant': 'heading-lg/bold', 'children': 'Overlay buttons'};
        vacuum = record.bind(tangon)(vacuum, ctrled);
        ctrled = new Array(2);
        ctrled[0] = vacuum;
        cntext = _closure1_slot9;
        vacuum = backup[config];
        vacuum = golfie.bind(tangon)(vacuum);
        record = vacuum.Text;
        vacuum = {'variant': 'text-sm/normal', 'children': 'Overlay buttons are meant to be used overlayed on top of an image or background color. They do not change colors with the theme.'};
        vacuum = cntext.bind(tangon)(record, vacuum);
        ctrled[1] = vacuum;
        foxtra['children'] = ctrled;
        echoed = zuuluu.bind(tangon)(echoed, foxtra);
        foxtra = new Array(2);
        foxtra[0] = echoed;
        ctrled = _closure1_slot9;
        echoed = {};
        papara = _closure1_slot13;
        record = papara.map;
        vacuum = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot5;
            michal = {};
            golfie = _closure2_slot0;
            option = golfie.buttonContainer;
            oscard = new Array(2);
            oscard[0] = option;
            golfie = golfie.overlayButtonContainer;
            oscard[1] = golfie;
            michal['style'] = oscard;
            option = _closure1_slot9;
            golfie = _closure1_slot17;
            oscard = {};
            oscard['variant'] = report;
            entity = undefined;
            oscard = option.bind(entity)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        vacuum = record.bind(papara)(vacuum);
        echoed['children'] = vacuum;
        echoed = ctrled.bind(tangon)(sequen, echoed);
        foxtra[1] = echoed;
        offset['children'] = foxtra;
        offset = zuuluu.bind(tangon)(romeon, offset);
        result[3] = offset;
        offset = backup[source];
        offset = golfie.bind(tangon)(offset);
        romeon = offset.Stack;
        offset = {};
        foxtra = backup[source];
        foxtra = golfie.bind(tangon)(foxtra);
        echoed = foxtra.Stack;
        foxtra = {};
        ctrled = verify.container;
        foxtra['style'] = ctrled;
        record = _closure1_slot9;
        ctrled = backup[config];
        ctrled = golfie.bind(tangon)(ctrled);
        vacuum = ctrled.Text;
        ctrled = {'variant': 'heading-lg/bold', 'children': 'Custom color icons'};
        vacuum = record.bind(tangon)(vacuum, ctrled);
        ctrled = new Array(2);
        ctrled[0] = vacuum;
        cntext = _closure1_slot9;
        vacuum = backup[config];
        vacuum = golfie.bind(tangon)(vacuum);
        record = vacuum.Text;
        vacuum = {'variant': 'text-sm/normal', 'children': 'If a button needs to have an icon which has its own custom color, then create your own Button.Icon to pass as the icon prop.'};
        vacuum = cntext.bind(tangon)(record, vacuum);
        ctrled[1] = vacuum;
        foxtra['children'] = ctrled;
        foxtra = zuuluu.bind(tangon)(echoed, foxtra);
        echoed = new Array(2);
        echoed[0] = foxtra;
        ctrled = {};
        record = _closure1_slot9;
        vacuum = {};
        foxtra = verify.buttonContainer;
        vacuum['style'] = foxtra;
        limora = _closure1_slot9;
        target = 6;
        foxtra = backup[target];
        foxtra = golfie.bind(tangon)(foxtra);
        sierra = foxtra.Button;
        cntext = {'onPress': null, 'variant': 'secondary', 'text': 'Button with a custom color icon', 'size': 'md'};
        foxtra = function() { // Original name: onPress
            entity = undefined;
            return entity;
        };
        cntext['onPress'] = foxtra;
        status = 'secondary';
        variable38 = _closure1_slot9;
        foxtra = backup[target];
        foxtra = golfie.bind(tangon)(foxtra);
        foxtra = foxtra.Button;
        quebec = foxtra.Icon;
        whisks = {};
        foxtra = _closure1_slot1;
        equals = 23;
        variable39 = backup[equals];
        variable39 = foxtra.bind(tangon)(variable39);
        whisks['source'] = variable39;
        whisks = variable38.bind(tangon)(quebec, whisks);
        cntext['icon'] = whisks;
        cntext = limora.bind(tangon)(sierra, cntext);
        vacuum['children'] = cntext;
        record = record.bind(tangon)(sequen, vacuum);
        vacuum = new Array(2);
        vacuum[0] = record;
        cntext = _closure1_slot9;
        record = {};
        sierra = verify.buttonContainer;
        record['style'] = sierra;
        whisks = _closure1_slot9;
        sierra = backup[target];
        sierra = golfie.bind(tangon)(sierra);
        limora = sierra.Button;
        sierra = {'onPress': null, 'variant': 'secondary', 'text': 'Button with a entity variant icon', 'size': 'md'};
        quebec = function() { // Original name: onPress
            entity = undefined;
            return entity;
        };
        sierra['onPress'] = quebec;
        variable39 = _closure1_slot9;
        quebec = backup[target];
        quebec = golfie.bind(tangon)(quebec);
        quebec = quebec.Button;
        variable38 = quebec.Icon;
        quebec = {};
        variable40 = 'entity';
        quebec['variant'] = variable40;
        variable40 = backup[update];
        variable40 = foxtra.bind(tangon)(variable40);
        quebec['source'] = variable40;
        quebec = variable39.bind(tangon)(variable38, quebec);
        sierra['icon'] = quebec;
        sierra = whisks.bind(tangon)(limora, sierra);
        record['children'] = sierra;
        record = cntext.bind(tangon)(sequen, record);
        vacuum[1] = record;
        ctrled['children'] = vacuum;
        ctrled = zuuluu.bind(tangon)(sequen, ctrled);
        echoed[1] = ctrled;
        offset['children'] = echoed;
        offset = zuuluu.bind(tangon)(romeon, offset);
        result[4] = offset;
        offset = backup[source];
        offset = golfie.bind(tangon)(offset);
        romeon = offset.Stack;
        offset = {};
        vacuum = _closure1_slot9;
        echoed = backup[source];
        echoed = golfie.bind(tangon)(echoed);
        ctrled = echoed.Stack;
        echoed = {};
        record = verify.container;
        echoed['style'] = record;
        sierra = _closure1_slot9;
        record = backup[config];
        record = golfie.bind(tangon)(record);
        cntext = record.Text;
        record = {'variant': 'heading-lg/bold', 'children': 'Buttons with various text lengths'};
        record = sierra.bind(tangon)(cntext, record);
        echoed['children'] = record;
        ctrled = vacuum.bind(tangon)(ctrled, echoed);
        echoed = new Array(2);
        echoed[0] = ctrled;
        ctrled = {};
        record = _closure1_slot9;
        vacuum = {};
        cntext = verify.buttonContainer;
        vacuum['style'] = cntext;
        limora = _closure1_slot9;
        cntext = backup[target];
        cntext = golfie.bind(tangon)(cntext);
        sierra = cntext.Button;
        cntext = {'onPress': null, 'variant': 'secondary', 'text': 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur', 'size': 'md'};
        whisks = function() { // Original name: onPress
            entity = undefined;
            return entity;
        };
        cntext['onPress'] = whisks;
        whisks = backup[equals];
        whisks = foxtra.bind(tangon)(whisks);
        cntext['icon'] = whisks;
        cntext = limora.bind(tangon)(sierra, cntext);
        vacuum['children'] = cntext;
        record = record.bind(tangon)(sequen, vacuum);
        vacuum = new Array(4);
        vacuum[0] = record;
        cntext = _closure1_slot9;
        record = {};
        sierra = verify.buttonContainer;
        record['style'] = sierra;
        whisks = _closure1_slot9;
        sierra = backup[target];
        sierra = golfie.bind(tangon)(sierra);
        limora = sierra.Button;
        sierra = {'onPress': null, 'variant': 'secondary', 'text': 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur', 'size': 'md', 'icon': null, 'iconPosition': 'end'};
        quebec = function() { // Original name: onPress
            entity = undefined;
            return entity;
        };
        sierra['onPress'] = quebec;
        equals = backup[equals];
        equals = foxtra.bind(tangon)(equals);
        sierra['icon'] = equals;
        sierra = whisks.bind(tangon)(limora, sierra);
        record['children'] = sierra;
        record = cntext.bind(tangon)(sequen, record);
        vacuum[1] = record;
        cntext = _closure1_slot9;
        record = {};
        sierra = verify.buttonContainer;
        record['style'] = sierra;
        whisks = _closure1_slot9;
        sierra = backup[target];
        sierra = golfie.bind(tangon)(sierra);
        limora = sierra.Button;
        sierra = {'onPress': null, 'variant': 'secondary', 'text': 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur', 'size': 'md'};
        equals = function() { // Original name: onPress
            entity = undefined;
            return entity;
        };
        sierra['onPress'] = equals;
        sierra = whisks.bind(tangon)(limora, sierra);
        record['children'] = sierra;
        record = cntext.bind(tangon)(sequen, record);
        vacuum[2] = record;
        cntext = _closure1_slot9;
        record = {};
        sierra = verify.buttonContainer;
        record['style'] = sierra;
        limora = _closure1_slot9;
        target = backup[target];
        target = golfie.bind(tangon)(target);
        sierra = target.Button;
        target = {'onPress': null, 'variant': 'secondary', 'text': 'A', 'size': 'md'};
        whisks = function() { // Original name: onPress
            entity = undefined;
            return entity;
        };
        target['onPress'] = whisks;
        target = limora.bind(tangon)(sierra, target);
        record['children'] = target;
        record = cntext.bind(tangon)(sequen, record);
        vacuum[3] = record;
        ctrled['children'] = vacuum;
        ctrled = zuuluu.bind(tangon)(sequen, ctrled);
        echoed[1] = ctrled;
        offset['children'] = echoed;
        offset = zuuluu.bind(tangon)(romeon, offset);
        result[5] = offset;
        offset = backup[source];
        offset = golfie.bind(tangon)(offset);
        romeon = offset.Stack;
        offset = {};
        echoed = backup[source];
        echoed = golfie.bind(tangon)(echoed);
        ctrled = echoed.Stack;
        echoed = {};
        vacuum = verify.container;
        echoed['style'] = vacuum;
        cntext = _closure1_slot9;
        vacuum = backup[config];
        vacuum = golfie.bind(tangon)(vacuum);
        record = vacuum.Text;
        vacuum = {'variant': 'heading-lg/bold', 'children': 'Toggling button states'};
        record = cntext.bind(tangon)(record, vacuum);
        vacuum = new Array(3);
        vacuum[0] = record;
        target = _closure1_slot9;
        record = backup[config];
        record = golfie.bind(tangon)(record);
        cntext = record.Text;
        record = {'variant': 'text-sm/normal', 'children': 'Use the useToggleButtonProps hook or the useToggleIconButtonProps hook to toggle a button between two states.'};
        record = target.bind(tangon)(cntext, record);
        vacuum[1] = record;
        target = _closure1_slot9;
        record = backup[config];
        record = golfie.bind(tangon)(record);
        cntext = record.Text;
        record = {'variant': 'text-sm/normal', 'children': 'This hook changes the button presentation and adds some important accessibility attributes for a toggle button.'};
        record = target.bind(tangon)(cntext, record);
        vacuum[2] = record;
        echoed['children'] = vacuum;
        ctrled = zuuluu.bind(tangon)(ctrled, echoed);
        echoed = new Array(2);
        echoed[0] = ctrled;
        ctrled = {};
        record = _closure1_slot9;
        vacuum = {};
        cntext = verify.buttonContainer;
        vacuum['style'] = cntext;
        sierra = _closure1_slot9;
        target = _closure1_slot20;
        cntext = {};
        cntext = sierra.bind(tangon)(target, cntext);
        vacuum['children'] = cntext;
        record = record.bind(tangon)(sequen, vacuum);
        vacuum = new Array(2);
        vacuum[0] = record;
        cntext = _closure1_slot9;
        record = {};
        target = verify.buttonContainer;
        record['style'] = target;
        limora = _closure1_slot9;
        sierra = _closure1_slot21;
        target = {};
        target = limora.bind(tangon)(sierra, target);
        record['children'] = target;
        record = cntext.bind(tangon)(sequen, record);
        vacuum[1] = record;
        ctrled['children'] = vacuum;
        ctrled = zuuluu.bind(tangon)(sequen, ctrled);
        echoed[1] = ctrled;
        offset['children'] = echoed;
        offset = zuuluu.bind(tangon)(romeon, offset);
        result[6] = offset;
        offset = backup[source];
        offset = golfie.bind(tangon)(offset);
        romeon = offset.Stack;
        offset = {};
        echoed = backup[source];
        echoed = golfie.bind(tangon)(echoed);
        ctrled = echoed.Stack;
        echoed = {};
        vacuum = verify.container;
        echoed['style'] = vacuum;
        cntext = _closure1_slot9;
        vacuum = backup[config];
        vacuum = golfie.bind(tangon)(vacuum);
        record = vacuum.Text;
        vacuum = {'variant': 'heading-lg/bold', 'children': 'Hierarchical icon buttons'};
        record = cntext.bind(tangon)(record, vacuum);
        vacuum = new Array(3);
        vacuum[0] = record;
        target = _closure1_slot9;
        record = backup[config];
        record = golfie.bind(tangon)(record);
        cntext = record.Text;
        record = {'variant': 'text-sm/normal', 'children': 'While the primary variants of IconButton are supported, these should be used very rarely.'};
        record = target.bind(tangon)(cntext, record);
        vacuum[1] = record;
        target = _closure1_slot9;
        record = backup[config];
        record = golfie.bind(tangon)(record);
        cntext = record.Text;
        record = {'variant': 'text-sm/normal', 'children': 'An icon button usually has a secondary function and should use the secondary variants.'};
        record = target.bind(tangon)(cntext, record);
        vacuum[2] = record;
        echoed['children'] = vacuum;
        ctrled = zuuluu.bind(tangon)(ctrled, echoed);
        echoed = new Array(2);
        echoed[0] = ctrled;
        vacuum = _closure1_slot9;
        ctrled = {};
        cntext = variable36.map;
        record = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot5;
            michal = {};
            oscard = _closure2_slot0;
            oscard = oscard.buttonContainer;
            michal['style'] = oscard;
            option = _closure1_slot9;
            golfie = _closure1_slot18;
            oscard = {};
            oscard['variant'] = report;
            entity = undefined;
            oscard = option.bind(entity)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        record = cntext.bind(variable36)(record);
        ctrled['children'] = record;
        ctrled = vacuum.bind(tangon)(sequen, ctrled);
        echoed[1] = ctrled;
        offset['children'] = echoed;
        offset = zuuluu.bind(tangon)(romeon, offset);
        result[7] = offset;
        offset = backup[source];
        offset = golfie.bind(tangon)(offset);
        romeon = offset.Stack;
        offset = {};
        vacuum = _closure1_slot9;
        echoed = backup[source];
        echoed = golfie.bind(tangon)(echoed);
        ctrled = echoed.Stack;
        echoed = {};
        record = verify.container;
        echoed['style'] = record;
        target = _closure1_slot9;
        record = backup[config];
        record = golfie.bind(tangon)(record);
        cntext = record.Text;
        record = {'variant': 'heading-lg/bold', 'children': 'Sentiment icon buttons'};
        record = target.bind(tangon)(cntext, record);
        echoed['children'] = record;
        ctrled = vacuum.bind(tangon)(ctrled, echoed);
        echoed = new Array(2);
        echoed[0] = ctrled;
        vacuum = _closure1_slot9;
        ctrled = {};
        cntext = variable37.map;
        record = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot5;
            michal = {};
            oscard = _closure2_slot0;
            oscard = oscard.buttonContainer;
            michal['style'] = oscard;
            option = _closure1_slot9;
            golfie = _closure1_slot18;
            oscard = {};
            oscard['variant'] = report;
            entity = undefined;
            oscard = option.bind(entity)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        record = cntext.bind(variable37)(record);
        ctrled['children'] = record;
        ctrled = vacuum.bind(tangon)(sequen, ctrled);
        echoed[1] = ctrled;
        offset['children'] = echoed;
        offset = zuuluu.bind(tangon)(romeon, offset);
        result[8] = offset;
        offset = backup[source];
        offset = golfie.bind(tangon)(offset);
        romeon = offset.Stack;
        offset = {};
        vacuum = _closure1_slot9;
        echoed = backup[source];
        echoed = golfie.bind(tangon)(echoed);
        ctrled = echoed.Stack;
        echoed = {};
        record = verify.container;
        echoed['style'] = record;
        target = _closure1_slot9;
        record = backup[config];
        record = golfie.bind(tangon)(record);
        cntext = record.Text;
        record = {'variant': 'heading-lg/bold', 'children': 'Overlay icon buttons'};
        record = target.bind(tangon)(cntext, record);
        echoed['children'] = record;
        ctrled = vacuum.bind(tangon)(ctrled, echoed);
        echoed = new Array(2);
        echoed[0] = ctrled;
        vacuum = _closure1_slot9;
        ctrled = {};
        cntext = papara.map;
        record = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot5;
            michal = {};
            golfie = _closure2_slot0;
            option = golfie.buttonContainer;
            oscard = new Array(2);
            oscard[0] = option;
            golfie = golfie.overlayButtonContainer;
            oscard[1] = golfie;
            michal['style'] = oscard;
            option = _closure1_slot9;
            golfie = _closure1_slot18;
            oscard = {};
            oscard['variant'] = report;
            entity = undefined;
            oscard = option.bind(entity)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        record = cntext.bind(papara)(record);
        ctrled['children'] = record;
        ctrled = vacuum.bind(tangon)(sequen, ctrled);
        echoed[1] = ctrled;
        offset['children'] = echoed;
        offset = zuuluu.bind(tangon)(romeon, offset);
        result[9] = offset;
        offset = backup[source];
        offset = golfie.bind(tangon)(offset);
        romeon = offset.Stack;
        offset = {};
        echoed = backup[source];
        echoed = golfie.bind(tangon)(echoed);
        ctrled = echoed.Stack;
        echoed = {};
        vacuum = verify.container;
        echoed['style'] = vacuum;
        cntext = _closure1_slot9;
        vacuum = backup[config];
        vacuum = golfie.bind(tangon)(vacuum);
        record = vacuum.Text;
        vacuum = {'variant': 'heading-lg/bold', 'children': 'Image buttons'};
        record = cntext.bind(tangon)(record, vacuum);
        vacuum = new Array(2);
        vacuum[0] = record;
        papara = _closure1_slot9;
        record = backup[config];
        record = golfie.bind(tangon)(record);
        cntext = record.Text;
        record = {'variant': 'text-sm/normal', 'children': 'Image buttons are rereserved for more branded buttons, like social media sharing buttons.'};
        record = papara.bind(tangon)(cntext, record);
        vacuum[1] = record;
        echoed['children'] = vacuum;
        ctrled = zuuluu.bind(tangon)(ctrled, echoed);
        echoed = new Array(2);
        echoed[0] = ctrled;
        ctrled = {};
        record = _closure1_slot9;
        vacuum = {};
        papara = verify.buttonContainer;
        cntext = new Array(1);
        cntext[0] = papara;
        vacuum['style'] = cntext;
        papara = _closure1_slot9;
        equals = _closure1_slot19;
        cntext = {};
        whisks = 25;
        target = backup[whisks];
        target = foxtra.bind(tangon)(target);
        cntext['image'] = target;
        target = 'Telegram';
        cntext['label'] = target;
        cntext = papara.bind(tangon)(equals, cntext);
        vacuum['children'] = cntext;
        record = record.bind(tangon)(sequen, vacuum);
        vacuum = new Array(3);
        vacuum[0] = record;
        cntext = _closure1_slot9;
        record = {};
        target = verify.buttonContainer;
        papara = new Array(1);
        papara[0] = target;
        record['style'] = papara;
        target = _closure1_slot9;
        papara = {};
        variable39 = 26;
        sierra = backup[variable39];
        sierra = foxtra.bind(tangon)(sierra);
        papara['image'] = sierra;
        sierra = 'WhatsApp';
        papara['label'] = sierra;
        papara = target.bind(tangon)(equals, papara);
        record['children'] = papara;
        record = cntext.bind(tangon)(sequen, record);
        vacuum[1] = record;
        cntext = _closure1_slot9;
        record = {};
        target = verify.buttonContainer;
        papara = new Array(1);
        papara[0] = target;
        record['style'] = papara;
        target = _closure1_slot9;
        papara = {};
        quebec = 27;
        sierra = backup[quebec];
        sierra = foxtra.bind(tangon)(sierra);
        papara['image'] = sierra;
        sierra = 'Twitter';
        papara['label'] = sierra;
        papara = target.bind(tangon)(equals, papara);
        record['children'] = papara;
        record = cntext.bind(tangon)(sequen, record);
        vacuum[2] = record;
        ctrled['children'] = vacuum;
        ctrled = zuuluu.bind(tangon)(sequen, ctrled);
        echoed[1] = ctrled;
        offset['children'] = echoed;
        offset = zuuluu.bind(tangon)(romeon, offset);
        result[10] = offset;
        offset = backup[source];
        offset = golfie.bind(tangon)(offset);
        echoed = offset.Stack;
        offset = {};
        offset['spacing'] = update;
        romeon = backup[source];
        romeon = golfie.bind(tangon)(romeon);
        ctrled = romeon.Stack;
        romeon = {};
        vacuum = verify.container;
        romeon['style'] = vacuum;
        cntext = _closure1_slot9;
        vacuum = backup[config];
        vacuum = golfie.bind(tangon)(vacuum);
        record = vacuum.Text;
        vacuum = {'variant': 'heading-lg/bold', 'children': 'IconButton with a label'};
        record = cntext.bind(tangon)(record, vacuum);
        vacuum = new Array(3);
        vacuum[0] = record;
        papara = _closure1_slot9;
        record = backup[config];
        record = golfie.bind(tangon)(record);
        cntext = record.Text;
        record = {'variant': 'text-sm/normal', 'children': "Icon buttons with a label require a different combination of props and will only appear in the 'lg' size."};
        record = papara.bind(tangon)(cntext, record);
        vacuum[1] = record;
        papara = _closure1_slot9;
        record = backup[config];
        record = golfie.bind(tangon)(record);
        cntext = record.Text;
        record = {'variant': 'text-sm/normal', 'children': 'It is highly recommended that a list of these buttons appear wrapped in a ScrollView, so that they will horizontally scroll when there are many buttons, when the text is longer through internationalization, or the text is larger through OS font size settings.'};
        record = papara.bind(tangon)(cntext, record);
        vacuum[2] = record;
        romeon['children'] = vacuum;
        romeon = zuuluu.bind(tangon)(ctrled, romeon);
        ctrled = new Array(3);
        ctrled[0] = romeon;
        vacuum = _closure1_slot9;
        romeon = {};
        variable38 = true;
        romeon['horizontal'] = variable38;
        record = {};
        target = '100%';
        record['minWidth'] = target;
        romeon['contentContainerStyle'] = record;
        sierra = _closure1_slot9;
        record = backup[source];
        record = golfie.bind(tangon)(record);
        papara = record.Stack;
        cntext = {'direction': 'horizontal', 'justify': 'center'};
        record = 'horizontal';
        limora = verify.buttonContainer;
        cntext['style'] = limora;
        variable40 = variable36.map;
        limora = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot18;
            michal = {};
            michal['variant'] = report;
            entity = true;
            michal['showLabel'] = entity;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        limora = variable40.bind(variable36)(limora);
        cntext['children'] = limora;
        cntext = sierra.bind(tangon)(papara, cntext);
        romeon['children'] = cntext;
        romeon = vacuum.bind(tangon)(option, romeon);
        ctrled[1] = romeon;
        cntext = _closure1_slot9;
        vacuum = {};
        vacuum['horizontal'] = variable38;
        romeon = {};
        romeon['minWidth'] = target;
        vacuum['contentContainerStyle'] = romeon;
        romeon = backup[source];
        romeon = golfie.bind(tangon)(romeon);
        sierra = romeon.Stack;
        papara = {'direction': 'horizontal', 'justify': 'center'};
        romeon = verify.buttonContainer;
        papara['style'] = romeon;
        variable42 = _closure1_slot9;
        variable40 = 8;
        romeon = backup[variable40];
        romeon = golfie.bind(tangon)(romeon);
        variable41 = romeon.IconButton;
        limora = {'variant': 'secondary', 'icon': null, 'label': 'Supercalifragilisticexpialidocious', 'grow': true};
        romeon = 9;
        variable43 = backup[romeon];
        variable43 = foxtra.bind(tangon)(variable43);
        limora['icon'] = variable43;
        variable43 = function() { // Original name: onPress
            entity = undefined;
            return entity;
        };
        limora['onPress'] = variable43;
        variable41 = variable42.bind(tangon)(variable41, limora);
        limora = new Array(3);
        limora[0] = variable41;
        variable43 = _closure1_slot9;
        variable41 = backup[variable40];
        variable41 = golfie.bind(tangon)(variable41);
        variable42 = variable41.IconButton;
        variable41 = {'variant': 'secondary', 'icon': null, 'label': 'Supercalifragilisticexpialidocious', 'grow': true};
        variable44 = backup[romeon];
        variable44 = foxtra.bind(tangon)(variable44);
        variable41['icon'] = variable44;
        variable44 = function() { // Original name: onPress
            entity = undefined;
            return entity;
        };
        variable41['onPress'] = variable44;
        variable41 = variable43.bind(tangon)(variable42, variable41);
        limora[1] = variable41;
        variable42 = _closure1_slot9;
        variable40 = backup[variable40];
        variable40 = golfie.bind(tangon)(variable40);
        variable41 = variable40.IconButton;
        variable40 = {'variant': 'secondary', 'icon': null, 'label': 'Supercalifragilisticexpialidocious', 'grow': true};
        variable43 = backup[romeon];
        variable43 = foxtra.bind(tangon)(variable43);
        variable40['icon'] = variable43;
        variable43 = function() { // Original name: onPress
            entity = undefined;
            return entity;
        };
        variable40['onPress'] = variable43;
        variable40 = variable42.bind(tangon)(variable41, variable40);
        limora[2] = variable40;
        papara['children'] = limora;
        papara = zuuluu.bind(tangon)(sierra, papara);
        vacuum['children'] = papara;
        vacuum = cntext.bind(tangon)(option, vacuum);
        ctrled[2] = vacuum;
        offset['children'] = ctrled;
        offset = zuuluu.bind(tangon)(echoed, offset);
        result[11] = offset;
        offset = backup[source];
        offset = golfie.bind(tangon)(offset);
        echoed = offset.Stack;
        offset = {};
        offset['spacing'] = update;
        cntext = _closure1_slot9;
        ctrled = backup[source];
        ctrled = golfie.bind(tangon)(ctrled);
        vacuum = ctrled.Stack;
        ctrled = {};
        papara = verify.container;
        ctrled['style'] = papara;
        limora = _closure1_slot9;
        papara = backup[config];
        papara = golfie.bind(tangon)(papara);
        sierra = papara.Text;
        papara = {'variant': 'heading-lg/bold', 'children': 'ImageButton with a label'};
        papara = limora.bind(tangon)(sierra, papara);
        ctrled['children'] = papara;
        vacuum = cntext.bind(tangon)(vacuum, ctrled);
        ctrled = new Array(3);
        ctrled[0] = vacuum;
        cntext = _closure1_slot9;
        vacuum = {};
        vacuum['horizontal'] = variable38;
        papara = {};
        papara['minWidth'] = target;
        vacuum['contentContainerStyle'] = papara;
        papara = backup[source];
        papara = golfie.bind(tangon)(papara);
        sierra = papara.Stack;
        papara = {'direction': 'horizontal', 'justify': 'center'};
        limora = verify.buttonContainer;
        papara['style'] = limora;
        variable40 = _closure1_slot9;
        limora = {'image': null, 'label': 'Label', 'showLabel': true};
        variable41 = 28;
        variable41 = backup[variable41];
        variable41 = foxtra.bind(tangon)(variable41);
        limora['image'] = variable41;
        variable40 = variable40.bind(tangon)(equals, limora);
        limora = new Array(3);
        limora[0] = variable40;
        variable41 = _closure1_slot9;
        variable40 = {'image': null, 'label': 'Label', 'showLabel': true};
        variable42 = backup[update];
        variable42 = foxtra.bind(tangon)(variable42);
        variable40['image'] = variable42;
        variable40 = variable41.bind(tangon)(equals, variable40);
        limora[1] = variable40;
        variable41 = _closure1_slot9;
        variable40 = {'image': null, 'label': 'Label', 'showLabel': true};
        variable42 = 29;
        variable42 = backup[variable42];
        variable42 = foxtra.bind(tangon)(variable42);
        variable40['image'] = variable42;
        variable40 = variable41.bind(tangon)(equals, variable40);
        limora[2] = variable40;
        papara['children'] = limora;
        papara = zuuluu.bind(tangon)(sierra, papara);
        vacuum['children'] = papara;
        vacuum = cntext.bind(tangon)(option, vacuum);
        ctrled[1] = vacuum;
        cntext = _closure1_slot9;
        vacuum = {};
        vacuum['horizontal'] = variable38;
        papara = {};
        papara['minWidth'] = target;
        vacuum['contentContainerStyle'] = papara;
        papara = backup[source];
        papara = golfie.bind(tangon)(papara);
        target = papara.Stack;
        papara = {'direction': 'horizontal', 'justify': 'center'};
        sierra = verify.buttonContainer;
        papara['style'] = sierra;
        limora = _closure1_slot9;
        sierra = {'image': null, 'label': 'Supercalifragilisticexpialidocious', 'showLabel': true};
        whisks = backup[whisks];
        whisks = foxtra.bind(tangon)(whisks);
        sierra['image'] = whisks;
        limora = limora.bind(tangon)(equals, sierra);
        sierra = new Array(3);
        sierra[0] = limora;
        whisks = _closure1_slot9;
        limora = {'image': null, 'label': 'Supercalifragilisticexpialidocious', 'showLabel': true};
        variable39 = backup[variable39];
        variable39 = foxtra.bind(tangon)(variable39);
        limora['image'] = variable39;
        limora = whisks.bind(tangon)(equals, limora);
        sierra[1] = limora;
        whisks = _closure1_slot9;
        limora = {'image': null, 'label': 'Supercalifragilisticexpialidocious', 'showLabel': true};
        quebec = backup[quebec];
        quebec = foxtra.bind(tangon)(quebec);
        limora['image'] = quebec;
        limora = whisks.bind(tangon)(equals, limora);
        sierra[2] = limora;
        papara['children'] = sierra;
        papara = zuuluu.bind(tangon)(target, papara);
        vacuum['children'] = papara;
        vacuum = cntext.bind(tangon)(option, vacuum);
        ctrled[2] = vacuum;
        offset['children'] = ctrled;
        offset = zuuluu.bind(tangon)(echoed, offset);
        result[12] = offset;
        offset = backup[source];
        offset = golfie.bind(tangon)(offset);
        echoed = offset.Stack;
        offset = {};
        offset['spacing'] = update;
        vacuum = _closure1_slot9;
        update = backup[source];
        update = golfie.bind(tangon)(update);
        ctrled = update.Stack;
        update = {};
        cntext = verify.container;
        update['style'] = cntext;
        target = _closure1_slot9;
        cntext = backup[config];
        cntext = golfie.bind(tangon)(cntext);
        papara = cntext.Text;
        cntext = {'variant': 'heading-lg/bold', 'children': 'Mixing buttons'};
        cntext = target.bind(tangon)(papara, cntext);
        update['children'] = cntext;
        ctrled = vacuum.bind(tangon)(ctrled, update);
        update = new Array(2);
        update[0] = ctrled;
        ctrled = 30;
        ctrled = backup[ctrled];
        ctrled = golfie.bind(tangon)(ctrled);
        vacuum = ctrled.ButtonGroup;
        ctrled = {};
        ctrled['direction'] = record;
        record = verify.container;
        ctrled['style'] = record;
        papara = _closure1_slot9;
        cntext = _closure1_slot17;
        record = {'variant': 'secondary', 'text': 'Search', 'grow': true};
        cntext = papara.bind(tangon)(cntext, record);
        record = new Array(2);
        record[0] = cntext;
        target = _closure1_slot9;
        papara = _closure1_slot18;
        cntext = {};
        cntext['variant'] = status;
        cntext = target.bind(tangon)(papara, cntext);
        record[1] = cntext;
        ctrled['children'] = record;
        ctrled = zuuluu.bind(tangon)(vacuum, ctrled);
        update[1] = ctrled;
        offset['children'] = update;
        offset = zuuluu.bind(tangon)(echoed, offset);
        result[13] = offset;
        offset = backup[source];
        offset = golfie.bind(tangon)(offset);
        update = offset.Stack;
        echoed = {};
        offset = backup[source];
        offset = golfie.bind(tangon)(offset);
        ctrled = offset.Stack;
        offset = {};
        vacuum = verify.container;
        offset['style'] = vacuum;
        cntext = _closure1_slot9;
        vacuum = backup[config];
        vacuum = golfie.bind(tangon)(vacuum);
        record = vacuum.Text;
        vacuum = {'variant': 'heading-lg/bold', 'children': 'Light Profile Themes'};
        record = cntext.bind(tangon)(record, vacuum);
        vacuum = new Array(2);
        vacuum[0] = record;
        papara = _closure1_slot9;
        record = backup[config];
        record = golfie.bind(tangon)(record);
        cntext = record.Text;
        record = {'variant': 'text-sm/normal', 'children': 'All buttons as they appear on a light profile theme'};
        record = papara.bind(tangon)(cntext, record);
        vacuum[1] = record;
        offset['children'] = vacuum;
        offset = zuuluu.bind(tangon)(ctrled, offset);
        ctrled = new Array(2);
        ctrled[0] = offset;
        papara = _closure1_slot9;
        vacuum = 31;
        offset = backup[vacuum];
        offset = golfie.bind(tangon)(offset);
        cntext = offset.ThemeContextProvider;
        record = {};
        offset = 'light';
        record['theme'] = offset;
        offset = 32;
        target = backup[offset];
        sierra = golfie.bind(tangon)(target);
        status = sierra.hex2int;
        target = '#ffae70';
        target = status.bind(sierra)(target);
        record['primaryColor'] = target;
        target = backup[offset];
        status = golfie.bind(tangon)(target);
        target = status.hex2int;
        whisks = '#cc2300';
        target = target.bind(status)(whisks);
        record['secondaryColor'] = target;
        variable39 = _closure1_slot9;
        target = 33;
        status = backup[target];
        sierra = foxtra.bind(tangon)(status);
        status = {};
        limora = {};
        equals = 16;
        limora['padding'] = equals;
        status['style'] = limora;
        quebec = 0;
        limora = {'x': 0, 'y': 0};
        status['start'] = limora;
        limora = {'x': 0, 'y': 1};
        status['end'] = limora;
        limora = ['#ffae70', '#cc2300'];
        status['colors'] = limora;
        variable42 = _closure1_slot9;
        limora = 34;
        variable40 = backup[limora];
        variable40 = golfie.bind(tangon)(variable40);
        variable41 = variable40.Card;
        variable40 = {};
        variable43 = backup[source];
        variable43 = golfie.bind(tangon)(variable43);
        variable44 = variable43.Stack;
        variable43 = {};
        variable43['spacing'] = equals;
        variable46 = variable36.map;
        variable45 = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot17;
            michal = {};
            michal['variant'] = report;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        variable46 = variable46.bind(variable36)(variable45);
        variable45 = new Array(2);
        variable45[0] = variable46;
        variable47 = variable37.map;
        variable46 = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot17;
            michal = {};
            michal['variant'] = report;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        variable46 = variable47.bind(variable37)(variable46);
        variable45[1] = variable46;
        variable43['children'] = variable45;
        variable43 = zuuluu.bind(tangon)(variable44, variable43);
        variable40['children'] = variable43;
        variable40 = variable42.bind(tangon)(variable41, variable40);
        status['children'] = variable40;
        status = variable39.bind(tangon)(sierra, status);
        record['children'] = status;
        record = papara.bind(tangon)(cntext, record);
        ctrled[1] = record;
        echoed['children'] = ctrled;
        echoed = zuuluu.bind(tangon)(update, echoed);
        result[14] = echoed;
        echoed = backup[source];
        echoed = golfie.bind(tangon)(echoed);
        update = echoed.Stack;
        echoed = {};
        ctrled = backup[source];
        ctrled = golfie.bind(tangon)(ctrled);
        record = ctrled.Stack;
        ctrled = {};
        cntext = verify.container;
        ctrled['style'] = cntext;
        status = _closure1_slot9;
        cntext = backup[config];
        cntext = golfie.bind(tangon)(cntext);
        papara = cntext.Text;
        cntext = {'variant': 'heading-lg/bold', 'children': 'Dark Profile Themes'};
        papara = status.bind(tangon)(papara, cntext);
        cntext = new Array(2);
        cntext[0] = papara;
        sierra = _closure1_slot9;
        papara = backup[config];
        papara = golfie.bind(tangon)(papara);
        status = papara.Text;
        papara = {'variant': 'text-sm/normal', 'children': 'All buttons as they appear on a dark profile theme'};
        papara = sierra.bind(tangon)(status, papara);
        cntext[1] = papara;
        ctrled['children'] = cntext;
        record = zuuluu.bind(tangon)(record, ctrled);
        ctrled = new Array(2);
        ctrled[0] = record;
        papara = _closure1_slot9;
        record = backup[vacuum];
        record = golfie.bind(tangon)(record);
        cntext = record.ThemeContextProvider;
        record = {};
        status = 'dark';
        record['theme'] = status;
        status = backup[offset];
        variable39 = golfie.bind(tangon)(status);
        sierra = variable39.hex2int;
        status = '#490000';
        status = sierra.bind(variable39)(status);
        record['primaryColor'] = status;
        status = backup[offset];
        sierra = golfie.bind(tangon)(status);
        status = sierra.hex2int;
        status = status.bind(sierra)(whisks);
        record['secondaryColor'] = status;
        sierra = _closure1_slot9;
        target = backup[target];
        status = foxtra.bind(tangon)(target);
        target = {};
        whisks = {};
        whisks['padding'] = equals;
        target['style'] = whisks;
        whisks = {'x': 0, 'y': 0};
        target['start'] = whisks;
        whisks = {'x': 0, 'y': 1};
        target['end'] = whisks;
        whisks = ['#490000', '#cc2300'];
        target['colors'] = whisks;
        variable39 = _closure1_slot9;
        limora = backup[limora];
        limora = golfie.bind(tangon)(limora);
        whisks = limora.Card;
        limora = {};
        variable40 = backup[source];
        variable40 = golfie.bind(tangon)(variable40);
        variable41 = variable40.Stack;
        variable40 = {};
        variable40['spacing'] = equals;
        variable43 = variable36.map;
        variable42 = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot17;
            michal = {};
            michal['variant'] = report;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        variable43 = variable43.bind(variable36)(variable42);
        variable42 = new Array(2);
        variable42[0] = variable43;
        variable44 = variable37.map;
        variable43 = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot17;
            michal = {};
            michal['variant'] = report;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        variable43 = variable44.bind(variable37)(variable43);
        variable42[1] = variable43;
        variable40['children'] = variable42;
        variable40 = zuuluu.bind(tangon)(variable41, variable40);
        limora['children'] = variable40;
        limora = variable39.bind(tangon)(whisks, limora);
        target['children'] = limora;
        target = sierra.bind(tangon)(status, target);
        record['children'] = target;
        record = papara.bind(tangon)(cntext, record);
        ctrled[1] = record;
        echoed['children'] = ctrled;
        echoed = zuuluu.bind(tangon)(update, echoed);
        result[15] = echoed;
        echoed = backup[source];
        echoed = golfie.bind(tangon)(echoed);
        update = echoed.Stack;
        echoed = {};
        ctrled = backup[source];
        ctrled = golfie.bind(tangon)(ctrled);
        record = ctrled.Stack;
        ctrled = {};
        cntext = verify.container;
        ctrled['style'] = cntext;
        target = _closure1_slot9;
        cntext = backup[config];
        cntext = golfie.bind(tangon)(cntext);
        papara = cntext.Text;
        cntext = {'variant': 'heading-lg/bold', 'children': 'Light Client Theme'};
        papara = target.bind(tangon)(papara, cntext);
        cntext = new Array(2);
        cntext[0] = papara;
        status = _closure1_slot9;
        papara = backup[config];
        papara = golfie.bind(tangon)(papara);
        target = papara.Text;
        papara = {'variant': 'text-sm/normal', 'children': 'All buttons as they appear on a light client theme'};
        papara = status.bind(tangon)(target, papara);
        cntext[1] = papara;
        ctrled['children'] = cntext;
        record = zuuluu.bind(tangon)(record, ctrled);
        ctrled = new Array(2);
        ctrled[0] = record;
        status = _closure1_slot9;
        record = backup[vacuum];
        record = golfie.bind(tangon)(record);
        cntext = record.ThemeContextProvider;
        record = {};
        variable40 = _closure1_slot7;
        papara = variable40[quebec];
        papara = papara.theme;
        record['theme'] = papara;
        papara = variable40[quebec];
        record['gradient'] = papara;
        papara = 35;
        target = backup[papara];
        limora = golfie.bind(tangon)(target);
        sierra = limora.setThemeFlag;
        target = backup[papara];
        target = golfie.bind(tangon)(target);
        target = target.ThemeContextFlags;
        target = target.MOBILE_LIGHT_GRADIENT_THEME_ENABLED;
        target = sierra.bind(limora)(quebec, target);
        record['flags'] = target;
        sierra = {};
        target = {'position': 'relative', 'padding': 16};
        sierra['style'] = target;
        variable39 = _closure1_slot9;
        target = 36;
        limora = backup[target];
        limora = golfie.bind(tangon)(limora);
        whisks = limora.Gradient;
        limora = {};
        limora['absolute'] = variable38;
        variable40 = variable40[quebec];
        limora['gradient'] = variable40;
        whisks = variable39.bind(tangon)(whisks, limora);
        limora = new Array(2);
        limora[0] = whisks;
        variable41 = _closure1_slot9;
        variable40 = {};
        variable42 = {'backgroundColor': null, 'padding': 16, 'borderRadius': 16};
        whisks = 37;
        variable39 = backup[whisks];
        variable45 = golfie.bind(tangon)(variable39);
        variable44 = variable45.setColorOpacity;
        variable43 = 'white';
        variable39 = 0.7;
        variable43 = variable44.bind(variable45)(variable43, variable39);
        variable42['backgroundColor'] = variable43;
        variable40['style'] = variable42;
        variable42 = backup[source];
        variable42 = golfie.bind(tangon)(variable42);
        variable43 = variable42.Stack;
        variable42 = {};
        variable42['spacing'] = equals;
        variable45 = variable36.map;
        variable44 = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot17;
            michal = {};
            michal['variant'] = report;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        variable45 = variable45.bind(variable36)(variable44);
        variable44 = new Array(2);
        variable44[0] = variable45;
        variable46 = variable37.map;
        variable45 = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot17;
            michal = {};
            michal['variant'] = report;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        variable45 = variable46.bind(variable37)(variable45);
        variable44[1] = variable45;
        variable42['children'] = variable44;
        variable42 = zuuluu.bind(tangon)(variable43, variable42);
        variable40['children'] = variable42;
        variable40 = variable41.bind(tangon)(sequen, variable40);
        limora[1] = variable40;
        sierra['children'] = limora;
        sierra = zuuluu.bind(tangon)(sequen, sierra);
        record['children'] = sierra;
        record = status.bind(tangon)(cntext, record);
        ctrled[1] = record;
        echoed['children'] = ctrled;
        echoed = zuuluu.bind(tangon)(update, echoed);
        result[16] = echoed;
        echoed = backup[source];
        echoed = golfie.bind(tangon)(echoed);
        update = echoed.Stack;
        echoed = {};
        ctrled = backup[source];
        ctrled = golfie.bind(tangon)(ctrled);
        record = ctrled.Stack;
        ctrled = {};
        cntext = verify.container;
        ctrled['style'] = cntext;
        sierra = _closure1_slot9;
        cntext = backup[config];
        cntext = golfie.bind(tangon)(cntext);
        status = cntext.Text;
        cntext = {'variant': 'heading-lg/bold', 'children': 'Dark Client Theme'};
        status = sierra.bind(tangon)(status, cntext);
        cntext = new Array(2);
        cntext[0] = status;
        limora = _closure1_slot9;
        status = backup[config];
        status = golfie.bind(tangon)(status);
        sierra = status.Text;
        status = {'variant': 'text-sm/normal', 'children': 'All buttons as they appear on a dark client theme'};
        status = limora.bind(tangon)(sierra, status);
        cntext[1] = status;
        ctrled['children'] = cntext;
        record = zuuluu.bind(tangon)(record, ctrled);
        ctrled = new Array(2);
        ctrled[0] = record;
        cntext = _closure1_slot9;
        vacuum = backup[vacuum];
        vacuum = golfie.bind(tangon)(vacuum);
        record = vacuum.ThemeContextProvider;
        vacuum = {};
        limora = _closure1_slot8;
        status = limora[quebec];
        status = status.theme;
        vacuum['theme'] = status;
        status = limora[quebec];
        vacuum['gradient'] = status;
        status = backup[papara];
        sierra = golfie.bind(tangon)(status);
        status = sierra.setThemeFlag;
        papara = backup[papara];
        papara = golfie.bind(tangon)(papara);
        papara = papara.ThemeContextFlags;
        papara = papara.MOBILE_DARK_GRADIENT_THEME_ENABLED;
        papara = status.bind(sierra)(quebec, papara);
        vacuum['flags'] = papara;
        papara = {};
        status = {'position': 'relative', 'padding': 16};
        papara['style'] = status;
        sierra = _closure1_slot9;
        target = backup[target];
        target = golfie.bind(tangon)(target);
        status = target.Gradient;
        target = {};
        target['absolute'] = variable38;
        limora = limora[quebec];
        target['gradient'] = limora;
        status = sierra.bind(tangon)(status, target);
        target = new Array(2);
        target[0] = status;
        sierra = _closure1_slot9;
        status = {};
        limora = {'backgroundColor': null, 'padding': 16, 'borderRadius': 16};
        whisks = backup[whisks];
        variable38 = golfie.bind(tangon)(whisks);
        quebec = variable38.setColorOpacity;
        whisks = 'black';
        whisks = quebec.bind(variable38)(whisks, variable39);
        limora['backgroundColor'] = whisks;
        status['style'] = limora;
        limora = backup[source];
        limora = golfie.bind(tangon)(limora);
        whisks = limora.Stack;
        limora = {};
        limora['spacing'] = equals;
        quebec = variable36.map;
        equals = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot17;
            michal = {};
            michal['variant'] = report;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        quebec = quebec.bind(variable36)(equals);
        equals = new Array(2);
        equals[0] = quebec;
        variable36 = variable37.map;
        quebec = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot17;
            michal = {};
            michal['variant'] = report;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        quebec = variable36.bind(variable37)(quebec);
        equals[1] = quebec;
        limora['children'] = equals;
        limora = zuuluu.bind(tangon)(whisks, limora);
        status['children'] = limora;
        status = sierra.bind(tangon)(sequen, status);
        target[1] = status;
        papara['children'] = target;
        papara = zuuluu.bind(tangon)(sequen, papara);
        vacuum['children'] = papara;
        vacuum = cntext.bind(tangon)(record, vacuum);
        ctrled[1] = vacuum;
        echoed['children'] = ctrled;
        echoed = zuuluu.bind(tangon)(update, echoed);
        result[17] = echoed;
        echoed = backup[source];
        echoed = golfie.bind(tangon)(echoed);
        update = echoed.Stack;
        echoed = {};
        source = backup[source];
        source = golfie.bind(tangon)(source);
        ctrled = source.Stack;
        source = {};
        verify = verify.container;
        source['style'] = verify;
        cntext = _closure1_slot9;
        verify = backup[config];
        verify = golfie.bind(tangon)(verify);
        record = verify.Text;
        verify = 'Floating Action Button';
        vacuum = {'variant': 'heading-lg/bold', 'children': 'Floating Action Button'};
        record = cntext.bind(tangon)(record, vacuum);
        vacuum = new Array(2);
        vacuum[0] = record;
        cntext = _closure1_slot9;
        config = backup[config];
        config = golfie.bind(tangon)(config);
        record = config.Text;
        config = {'variant': 'text-sm/normal', 'children': 'An ever-present icon button, giving the most important call to action in a compact way.'};
        config = cntext.bind(tangon)(record, config);
        vacuum[1] = config;
        source['children'] = vacuum;
        ctrled = zuuluu.bind(tangon)(ctrled, source);
        source = new Array(2);
        source[0] = ctrled;
        vacuum = _closure1_slot9;
        ctrled = {};
        config = {};
        record = 48;
        config['padding'] = record;
        ctrled['style'] = config;
        ctrled = vacuum.bind(tangon)(sequen, ctrled);
        source[1] = ctrled;
        echoed['children'] = source;
        echoed = zuuluu.bind(tangon)(update, echoed);
        result[18] = echoed;
        sizing['children'] = result;
        sizing = zuuluu.bind(tangon)(output, sizing);
        report['children'] = sizing;
        option = kiloes.bind(tangon)(option, report);
        report = new Array(2);
        report[0] = option;
        option = _closure1_slot9;
        oscard = 38;
        oscard = backup[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.FloatingActionButton;
        oscard = {};
        romeon = backup[romeon];
        romeon = foxtra.bind(tangon)(romeon);
        oscard['icon'] = romeon;
        yankee = function() { // Original name: onPress
            entity = undefined;
            return entity;
        };
        oscard['onPress'] = yankee;
        oscard['positionBottom'] = offset;
        oscard['accessibilityLabel'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();