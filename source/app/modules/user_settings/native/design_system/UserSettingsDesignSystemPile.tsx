// app/modules/user_settings/native/design_system/UserSettingsDesignSystemPile.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: SampleCard
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.title;
            option = entity.noScroll;
            verify = entity.children;
            entity = _closure1_slot7;
            tangon = undefined;
            report = entity.bind(tangon)();
            zuuluu = _closure1_slot5;
            oscard = _closure1_slot0;
            romeon = _closure1_slot2;
            entity = 6;
            entity = romeon[entity];
            entity = oscard.bind(tangon)(entity);
            michal = entity.Stack;
            entity = {};
            offset = 16;
            entity['spacing'] = offset;
            entity['children'] = verify;
            offset = zuuluu.bind(tangon)(michal, entity);
            zuuluu = _closure1_slot6;
            entity = 7;
            entity = romeon[entity];
            entity = oscard.bind(tangon)(entity);
            michal = entity.Card;
            entity = {};
            report = report.card;
            entity['style'] = report;
            verify = _closure1_slot5;
            report = 8;
            report = romeon[report];
            report = oscard.bind(tangon)(report);
            oscard = report.Text;
            report = {};
            romeon = 'text-lg/bold';
            report['variant'] = romeon;
            report['children'] = yankee;
            oscard = verify.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = offset;
            if(option) { _fun00002_ip = 199; continue _fun00001 }
 172:
            verify = _closure1_slot5;
            option = _closure1_slot4;
            golfie = {};
            yankee = true;
            golfie['horizontal'] = yankee;
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 199:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    yankee = 12;
    tangon = 16;
    offset = {'flexDirection': 'column', 'gap': 12, 'padding': 16};
    golfie['container'] = offset;
    offset = {};
    offset['gap'] = yankee;
    golfie['card'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot7 = golfie;
    option = 4;
    golfie = oscard[option];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.AvatarSizes;
    verify = golfie.XSMALL;
    golfie = new Array(5);
    golfie[0] = verify;
    verify = oscard[option];
    verify = report.bind(entity)(verify);
    verify = verify.AvatarSizes;
    verify = verify.REFRESH_MEDIUM_32;
    golfie[1] = verify;
    verify = oscard[option];
    verify = report.bind(entity)(verify);
    verify = verify.AvatarSizes;
    verify = verify.NORMAL;
    golfie[2] = verify;
    verify = oscard[option];
    verify = report.bind(entity)(verify);
    verify = verify.AvatarSizes;
    verify = verify.LARGE_48;
    golfie[3] = verify;
    option = oscard[option];
    option = report.bind(entity)(option);
    option = option.AvatarSizes;
    option = option.XLARGE;
    golfie[4] = option;
    var _closure1_slot8 = golfie;
    option = 5;
    golfie = oscard[option];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.GuildIconSizes;
    verify = golfie.XSMALL;
    golfie = new Array(5);
    golfie[0] = verify;
    verify = oscard[option];
    verify = report.bind(entity)(verify);
    verify = verify.GuildIconSizes;
    verify = verify.SMALL_32;
    golfie[1] = verify;
    verify = oscard[option];
    verify = report.bind(entity)(verify);
    verify = verify.GuildIconSizes;
    verify = verify.NORMAL;
    golfie[2] = verify;
    verify = oscard[option];
    verify = report.bind(entity)(verify);
    verify = verify.GuildIconSizes;
    verify = verify.LARGE;
    golfie[3] = verify;
    option = oscard[option];
    option = report.bind(entity)(option);
    option = option.GuildIconSizes;
    option = option.XLARGE;
    golfie[4] = option;
    var _closure1_slot9 = golfie;
    golfie = ['Clyde', 'Phibi', 'Cap'];
    var _closure1_slot10 = golfie;
    golfie = ['test', 'cats', 'Evil Marcus', 'robot overlords', 'not a bug', 'O M G'];
    var _closure1_slot11 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/design_system/UserSettingsDesignSystemPile.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: UserSettingsDesignSystemPile
        entity = _closure1_slot7;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        michal = _closure1_slot4;
        entity = {};
        golfie = _closure1_slot6;
        oscard = _closure1_slot3;
        report = {};
        option = option.container;
        report['style'] = option;
        verify = _closure1_slot5;
        yankee = _closure1_slot12;
        option = {};
        offset = 'Avatar Pile';
        option['title'] = offset;
        sizing = _closure1_slot8;
        backup = sizing.map;
        offset = function(argFoo) {
            report = argFoo;
            var _closure3_slot0 = report;
            tangon = _closure1_slot6;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            entity = 6;
            entity = foxtra[entity];
            zuuluu = undefined;
            entity = romeon.bind(zuuluu)(entity);
            michal = entity.Stack;
            entity = {};
            option = _closure1_slot5;
            oscard = 8;
            oscard = foxtra[oscard];
            oscard = romeon.bind(zuuluu)(oscard);
            golfie = oscard.Text;
            oscard = {'variant': 'text-md/medium', 'color': 'text-secondary'};
            oscard['children'] = report;
            golfie = option.bind(zuuluu)(golfie, oscard);
            oscard = new Array(2);
            oscard[0] = golfie;
            verify = _closure1_slot5;
            golfie = 9;
            golfie = foxtra[golfie];
            golfie = romeon.bind(zuuluu)(golfie);
            option = golfie.AvatarPile;
            golfie = {};
            golfie['size'] = report;
            yankee = _closure1_slot10;
            golfie['names'] = yankee;
            yankee = 10;
            backup = foxtra[yankee];
            backup = romeon.bind(zuuluu)(backup);
            backup = backup.DEFAULT_AVATARS;
            backup = backup.length;
            golfie['totalCount'] = backup;
            yankee = foxtra[yankee];
            yankee = romeon.bind(zuuluu)(yankee);
            romeon = yankee.DEFAULT_AVATARS;
            yankee = romeon.map;
            offset = function(argFoo, argBar) {
                report = _closure1_slot5;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 4;
                entity = zuuluu[entity];
                tangon = undefined;
                zuuluu = michal.bind(tangon)(entity);
                michal = {};
                entity = argFoo;
                michal['source'] = entity;
                entity = _closure3_slot0;
                michal['size'] = entity;
                entity = argBar;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            offset = yankee.bind(romeon)(offset);
            golfie['children'] = offset;
            golfie = verify.bind(zuuluu)(option, golfie);
            oscard[1] = golfie;
            entity['children'] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity, report);
            return entity;
        };
        offset = backup.bind(sizing)(offset);
        option['children'] = offset;
        verify = verify.bind(tangon)(yankee, option);
        option = new Array(6);
        option[0] = verify;
        offset = _closure1_slot5;
        verify = {};
        backup = 'Avatar Pile (with overflow)';
        verify['title'] = backup;
        kiloes = sizing.map;
        backup = function(argFoo) {
            report = argFoo;
            var _closure3_slot0 = report;
            tangon = _closure1_slot6;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            entity = 6;
            entity = foxtra[entity];
            zuuluu = undefined;
            entity = romeon.bind(zuuluu)(entity);
            michal = entity.Stack;
            entity = {};
            option = _closure1_slot5;
            oscard = 8;
            oscard = foxtra[oscard];
            oscard = romeon.bind(zuuluu)(oscard);
            golfie = oscard.Text;
            oscard = {'variant': 'text-md/medium', 'color': 'text-secondary'};
            oscard['children'] = report;
            golfie = option.bind(zuuluu)(golfie, oscard);
            oscard = new Array(2);
            oscard[0] = golfie;
            verify = _closure1_slot5;
            golfie = 9;
            golfie = foxtra[golfie];
            golfie = romeon.bind(zuuluu)(golfie);
            option = golfie.AvatarPile;
            golfie = {};
            golfie['size'] = report;
            yankee = _closure1_slot10;
            golfie['names'] = yankee;
            yankee = 9500;
            golfie['totalCount'] = yankee;
            yankee = 10;
            yankee = foxtra[yankee];
            yankee = romeon.bind(zuuluu)(yankee);
            romeon = yankee.DEFAULT_AVATARS;
            yankee = romeon.map;
            offset = function(argFoo, argBar) {
                report = _closure1_slot5;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 4;
                entity = zuuluu[entity];
                tangon = undefined;
                zuuluu = michal.bind(tangon)(entity);
                michal = {};
                entity = argFoo;
                michal['source'] = entity;
                entity = _closure3_slot0;
                michal['size'] = entity;
                entity = argBar;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            offset = yankee.bind(romeon)(offset);
            golfie['children'] = offset;
            golfie = verify.bind(zuuluu)(option, golfie);
            oscard[1] = golfie;
            entity['children'] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity, report);
            return entity;
        };
        backup = kiloes.bind(sizing)(backup);
        verify['children'] = backup;
        verify = offset.bind(tangon)(yankee, verify);
        option[1] = verify;
        offset = _closure1_slot5;
        verify = {};
        backup = 'Avatar Duo Pile';
        verify['title'] = backup;
        kiloes = sizing.map;
        backup = function(argFoo) {
            report = argFoo;
            var _closure3_slot0 = report;
            tangon = _closure1_slot6;
            romeon = _closure1_slot0;
            kiloes = _closure1_slot2;
            entity = 6;
            entity = kiloes[entity];
            zuuluu = undefined;
            entity = romeon.bind(zuuluu)(entity);
            michal = entity.Stack;
            entity = {};
            option = _closure1_slot5;
            oscard = 8;
            oscard = kiloes[oscard];
            oscard = romeon.bind(zuuluu)(oscard);
            golfie = oscard.Text;
            oscard = {'variant': 'text-md/medium', 'color': 'text-secondary'};
            oscard['children'] = report;
            golfie = option.bind(zuuluu)(golfie, oscard);
            oscard = new Array(2);
            oscard[0] = golfie;
            verify = _closure1_slot5;
            golfie = 11;
            golfie = kiloes[golfie];
            golfie = romeon.bind(zuuluu)(golfie);
            option = golfie.AvatarDuoPile;
            golfie = {};
            golfie['size'] = report;
            sizing = _closure1_slot10;
            yankee = sizing.slice;
            backup = 0;
            foxtra = 2;
            yankee = yankee.bind(sizing)(backup, foxtra);
            golfie['names'] = yankee;
            yankee = 10;
            yankee = kiloes[yankee];
            yankee = romeon.bind(zuuluu)(yankee);
            romeon = yankee.DEFAULT_AVATARS;
            yankee = romeon.slice;
            romeon = yankee.bind(romeon)(backup, foxtra);
            yankee = romeon.map;
            offset = function(argFoo, argBar) {
                report = _closure1_slot5;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 4;
                entity = zuuluu[entity];
                tangon = undefined;
                zuuluu = michal.bind(tangon)(entity);
                michal = {};
                entity = argFoo;
                michal['source'] = entity;
                entity = _closure3_slot0;
                michal['size'] = entity;
                entity = argBar;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            offset = yankee.bind(romeon)(offset);
            golfie['children'] = offset;
            golfie = verify.bind(zuuluu)(option, golfie);
            oscard[1] = golfie;
            entity['children'] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity, report);
            return entity;
        };
        backup = kiloes.bind(sizing)(backup);
        verify['children'] = backup;
        verify = offset.bind(tangon)(yankee, verify);
        option[2] = verify;
        offset = _closure1_slot5;
        verify = {};
        backup = 'Avatar Duo Pile (different sizes)';
        verify['title'] = backup;
        kiloes = sizing.map;
        backup = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot6;
            kiloes = _closure1_slot0;
            sizing = _closure1_slot2;
            entity = 6;
            entity = sizing[entity];
            zuuluu = undefined;
            entity = kiloes.bind(zuuluu)(entity);
            michal = entity.Stack;
            entity = {};
            option = _closure1_slot5;
            oscard = 8;
            oscard = sizing[oscard];
            oscard = kiloes.bind(zuuluu)(oscard);
            golfie = oscard.Text;
            oscard = {'variant': 'text-md/medium', 'color': 'text-secondary'};
            oscard['children'] = report;
            golfie = option.bind(zuuluu)(golfie, oscard);
            oscard = new Array(2);
            oscard[0] = golfie;
            verify = _closure1_slot6;
            golfie = 11;
            golfie = sizing[golfie];
            golfie = kiloes.bind(zuuluu)(golfie);
            option = golfie.AvatarDuoPile;
            golfie = {};
            offset = new Array(2);
            offset[0] = report;
            backup = 4;
            romeon = sizing[backup];
            romeon = kiloes.bind(zuuluu)(romeon);
            romeon = romeon.AvatarSizes;
            romeon = romeon.NORMAL;
            offset[1] = romeon;
            golfie['size'] = offset;
            foxtra = _closure1_slot10;
            romeon = foxtra.slice;
            update = 0;
            offset = 2;
            offset = romeon.bind(foxtra)(update, offset);
            golfie['names'] = offset;
            result = _closure1_slot5;
            romeon = _closure1_slot1;
            offset = sizing[backup];
            foxtra = romeon.bind(zuuluu)(offset);
            offset = {};
            output = 10;
            echoed = sizing[output];
            echoed = kiloes.bind(zuuluu)(echoed);
            echoed = echoed.DEFAULT_AVATARS;
            echoed = echoed[update];
            offset['source'] = echoed;
            offset['size'] = report;
            foxtra = result.bind(zuuluu)(foxtra, offset);
            offset = new Array(2);
            offset[0] = foxtra;
            foxtra = _closure1_slot5;
            yankee = sizing[backup];
            romeon = romeon.bind(zuuluu)(yankee);
            yankee = {};
            output = sizing[output];
            output = kiloes.bind(zuuluu)(output);
            result = output.DEFAULT_AVATARS;
            output = 1;
            output = result[output];
            yankee['source'] = output;
            backup = sizing[backup];
            backup = kiloes.bind(zuuluu)(backup);
            backup = backup.AvatarSizes;
            backup = backup.NORMAL;
            yankee['size'] = backup;
            yankee = foxtra.bind(zuuluu)(romeon, yankee);
            offset[1] = yankee;
            golfie['children'] = offset;
            golfie = verify.bind(zuuluu)(option, golfie);
            oscard[1] = golfie;
            entity['children'] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity, report);
            return entity;
        };
        backup = kiloes.bind(sizing)(backup);
        verify['children'] = backup;
        verify = offset.bind(tangon)(yankee, verify);
        option[3] = verify;
        offset = _closure1_slot5;
        verify = {};
        backup = 'Guild Icon Pile (with overflow)';
        verify['title'] = backup;
        sizing = _closure1_slot9;
        kiloes = sizing.map;
        backup = function(argFoo) {
            report = argFoo;
            var _closure3_slot0 = report;
            tangon = _closure1_slot6;
            option = _closure1_slot0;
            romeon = _closure1_slot2;
            entity = 6;
            entity = romeon[entity];
            zuuluu = undefined;
            entity = option.bind(zuuluu)(entity);
            michal = entity.Stack;
            entity = {};
            verify = _closure1_slot5;
            oscard = 8;
            oscard = romeon[oscard];
            oscard = option.bind(zuuluu)(oscard);
            golfie = oscard.Text;
            oscard = {'variant': 'text-md/medium', 'color': 'text-secondary'};
            foxtra = report.toLowerCase;
            foxtra = foxtra.bind(report)();
            oscard['children'] = foxtra;
            golfie = verify.bind(zuuluu)(golfie, oscard);
            oscard = new Array(2);
            oscard[0] = golfie;
            verify = _closure1_slot5;
            golfie = 12;
            golfie = romeon[golfie];
            golfie = option.bind(zuuluu)(golfie);
            option = golfie.GuildIconPile;
            golfie = {};
            golfie['size'] = report;
            romeon = _closure1_slot11;
            golfie['names'] = romeon;
            yankee = 128;
            golfie['totalCount'] = yankee;
            yankee = romeon.map;
            offset = function(argFoo, argBar) {
                report = _closure1_slot5;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 5;
                entity = zuuluu[entity];
                tangon = undefined;
                zuuluu = michal.bind(tangon)(entity);
                michal = {};
                entity = argFoo;
                michal['value'] = entity;
                entity = _closure3_slot0;
                michal['size'] = entity;
                entity = argBar;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            offset = yankee.bind(romeon)(offset);
            golfie['children'] = offset;
            golfie = verify.bind(zuuluu)(option, golfie);
            oscard[1] = golfie;
            entity['children'] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity, report);
            return entity;
        };
        backup = kiloes.bind(sizing)(backup);
        verify['children'] = backup;
        verify = offset.bind(tangon)(yankee, verify);
        option[4] = verify;
        offset = _closure1_slot6;
        verify = {'title': 'Weird Piles', 'noScroll': true};
        kiloes = _closure1_slot6;
        backup = _closure1_slot0;
        sizing = _closure1_slot2;
        romeon = 8;
        romeon = sizing[romeon];
        romeon = backup.bind(tangon)(romeon);
        backup = romeon.Text;
        romeon = {'variant': 'text-md/medium', 'color': 'text-secondary'};
        sizing = ['These examples explore the edge cases of the underlying ', '<Pile>', " component and aren't recommended uses."];
        romeon['children'] = sizing;
        backup = kiloes.bind(tangon)(backup, romeon);
        romeon = new Array(2);
        romeon[0] = backup;
        kiloes = new Array(7);
        backup = [1, 1];
        kiloes[0] = backup;
        backup = [0.5, 0.5];
        kiloes[1] = backup;
        backup = [null, 0.5];
        kiloes[2] = backup;
        backup = [0.5, null];
        kiloes[3] = backup;
        backup = [0, 0.5];
        kiloes[4] = backup;
        backup = [0.5, 0];
        kiloes[5] = backup;
        backup = [0, 0];
        kiloes[6] = backup;
        backup = kiloes.map;
        foxtra = function(argFoo) {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                zuuluu = argFoo;
                entity = zuuluu[Symbol.iterator];
                zuuluu = entity().next;
                tangon = zuuluu().value;
                michal = entity;
                report = undefined;
                michal = michal === report;
                verify = undefined;
                if(michal) { _fun00004_ip = 29; continue _fun00003 }
 26:
                verify = tangon;
 29:
                option = undefined;
                if(michal) { _fun00004_ip = 59; continue _fun00003 }
 34:
                tangon = zuuluu().value;
                zuuluu = entity;
                zuuluu = zuuluu === report;
                option = undefined;
                michal = zuuluu;
                if(zuuluu) { _fun00004_ip = 59; continue _fun00003 }
 53:
                option = tangon;
                michal = zuuluu;
 59:
                if(michal) { _fun00004_ip = 65; continue _fun00003 }
 62:
                entity.return();
 65:
                tangon = _closure1_slot6;
                oscard = _closure1_slot0;
                offset = _closure1_slot2;
                entity = 6;
                entity = offset[entity];
                entity = oscard.bind(report)(entity);
                zuuluu = entity.Stack;
                michal = {};
                golfie = _closure1_slot6;
                entity = 8;
                entity = offset[entity];
                entity = oscard.bind(report)(entity);
                oscard = entity.Text;
                entity = {'variant': 'text-md/medium', 'color': 'text-secondary'};
                backup = null;
                offset = backup != verify;
                romeon = 'null';
                kiloes = romeon;
                if(!offset) { _fun00004_ip = 154; continue _fun00003 }
 151:
                kiloes = verify;
 154:
                offset = ['depthX='];
                offset[1] = kiloes;
                kiloes = ', depthY=';
                offset[2] = kiloes;
                backup = backup != option;
                if(!backup) { _fun00004_ip = 188; continue _fun00003 }
 185:
                romeon = option;
 188:
                offset[3] = romeon;
                entity['children'] = offset;
                oscard = golfie.bind(report)(oscard, entity);
                entity = new Array(3);
                entity[0] = oscard;
                echoed = _closure1_slot5;
                sizing = _closure1_slot0;
                output = _closure1_slot2;
                oscard = 13;
                golfie = output[oscard];
                golfie = sizing.bind(report)(golfie);
                offset = golfie.Pile;
                golfie = {};
                result = 14;
                romeon = output[result];
                source = sizing.bind(report)(romeon);
                kiloes = source.getListSummaryLabel;
                backup = _closure1_slot10;
                update = 10;
                romeon = output[update];
                romeon = sizing.bind(report)(romeon);
                romeon = romeon.DEFAULT_AVATARS;
                romeon = romeon.length;
                romeon = kiloes.bind(source)(backup, romeon);
                golfie['aria-label'] = romeon;
                kiloes = 15;
                romeon = output[kiloes];
                romeon = sizing.bind(report)(romeon);
                romeon = romeon.CutoutShape;
                romeon = romeon.Circle;
                golfie['shape'] = romeon;
                backup = 48;
                golfie['size'] = backup;
                romeon = 2;
                golfie['gap'] = romeon;
                golfie['depthX'] = verify;
                golfie['depthY'] = option;
                update = output[update];
                update = sizing.bind(report)(update);
                ctrled = update.DEFAULT_AVATARS;
                source = ctrled.map;
                update = function(argFoo, argBar) {
                    report = _closure1_slot5;
                    zuuluu = _closure1_slot1;
                    golfie = _closure1_slot2;
                    entity = 4;
                    michal = golfie[entity];
                    tangon = undefined;
                    zuuluu = zuuluu.bind(tangon)(michal);
                    michal = {};
                    option = argFoo;
                    michal['source'] = option;
                    oscard = _closure1_slot0;
                    entity = golfie[entity];
                    entity = oscard.bind(tangon)(entity);
                    entity = entity.AvatarSizes;
                    entity = entity.LARGE_48;
                    michal['size'] = entity;
                    entity = argBar;
                    entity = report.bind(tangon)(zuuluu, michal, entity);
                    return entity;
                };
                update = source.bind(ctrled)(update);
                golfie['children'] = update;
                golfie = echoed.bind(report)(offset, golfie);
                entity[1] = golfie;
                offset = _closure1_slot5;
                oscard = output[oscard];
                oscard = sizing.bind(report)(oscard);
                golfie = oscard.Pile;
                oscard = {};
                result = output[result];
                update = sizing.bind(report)(result);
                echoed = update.getListSummaryLabel;
                foxtra = _closure1_slot11;
                result = foxtra.length;
                result = echoed.bind(update)(foxtra, result);
                oscard['aria-label'] = result;
                kiloes = output[kiloes];
                kiloes = sizing.bind(report)(kiloes);
                kiloes = kiloes.CutoutShape;
                kiloes = kiloes.RoundedRect;
                oscard['shape'] = kiloes;
                oscard['size'] = backup;
                oscard['gap'] = romeon;
                oscard['depthX'] = verify;
                oscard['depthY'] = option;
                romeon = foxtra.map;
                yankee = function(argFoo, argBar) {
                    report = _closure1_slot5;
                    zuuluu = _closure1_slot1;
                    golfie = _closure1_slot2;
                    entity = 5;
                    michal = golfie[entity];
                    tangon = undefined;
                    zuuluu = zuuluu.bind(tangon)(michal);
                    michal = {};
                    option = argFoo;
                    michal['value'] = option;
                    oscard = _closure1_slot0;
                    entity = golfie[entity];
                    entity = oscard.bind(tangon)(entity);
                    entity = entity.GuildIconSizes;
                    entity = entity.LARGE;
                    michal['size'] = entity;
                    entity = argBar;
                    entity = report.bind(tangon)(zuuluu, michal, entity);
                    return entity;
                };
                yankee = romeon.bind(foxtra)(yankee);
                oscard['children'] = yankee;
                oscard = offset.bind(report)(golfie, oscard);
                entity[2] = oscard;
                michal['children'] = entity;
                entity = global;
                entity = entity.HermesInternal;
                golfie = entity.concat;
                oscard = '';
                entity = ',';
                entity = golfie.bind(oscard)(verify, entity, option);
                entity = tangon.bind(report)(zuuluu, michal, entity);
                return entity;
            }
        };
        foxtra = backup.bind(kiloes)(foxtra);
        romeon[1] = foxtra;
        verify['children'] = romeon;
        verify = offset.bind(tangon)(yankee, verify);
        option[5] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();