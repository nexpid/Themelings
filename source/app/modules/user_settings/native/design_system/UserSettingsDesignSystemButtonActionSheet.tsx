// app/modules/user_settings/native/design_system/UserSettingsDesignSystemButtonActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = new Array(3);
    golfie = {'label': 'Small', 'value': 'sm'};
    tangon[0] = golfie;
    golfie = {'label': 'Medium', 'value': 'md'};
    tangon[1] = golfie;
    golfie = {'label': 'Large', 'value': 'lg'};
    tangon[2] = golfie;
    var _closure1_slot6 = tangon;
    tangon = new Array(2);
    golfie = {'value': 6, 'label': '6'};
    tangon[0] = golfie;
    golfie = {'value': 8, 'label': '8'};
    tangon[1] = golfie;
    var _closure1_slot7 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/design_system/UserSettingsDesignSystemButtonActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: UserSettingsDesignSystemButtonActionSheet
        michal = _closure1_slot1;
        kiloes = _closure1_slot2;
        entity = 2;
        entity = kiloes[entity];
        tangon = undefined;
        entity = michal.bind(tangon)(entity);
        result = entity.bind(tangon)();
        var _closure2_slot0 = result;
        report = _closure1_slot3;
        zuuluu = report.useCallback;
        michal = function(argFoo) {
            entity = argFoo;
            var _closure3_slot0 = entity;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 3;
            zuuluu = zuuluu[entity];
            entity = undefined;
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.batchUpdates;
            michal = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 2;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.setState;
                entity = {};
                tangon = _closure3_slot0;
                entity['buttonSize'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity = new Array(0);
        entity = zuuluu.bind(report)(michal, entity);
        var _closure2_slot1 = entity;
        zuuluu = report.useCallback;
        michal = function(argFoo) {
            entity = argFoo;
            var _closure3_slot0 = entity;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 3;
            zuuluu = zuuluu[entity];
            entity = undefined;
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.batchUpdates;
            michal = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 2;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.setState;
                entity = {};
                tangon = _closure3_slot0;
                entity['buttonScale'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity = new Array(0);
        entity = zuuluu.bind(report)(michal, entity);
        var _closure2_slot2 = entity;
        zuuluu = report.useCallback;
        michal = function(argFoo) {
            entity = argFoo;
            var _closure3_slot0 = entity;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 3;
            zuuluu = zuuluu[entity];
            entity = undefined;
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.batchUpdates;
            michal = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 2;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.setState;
                entity = {};
                tangon = _closure3_slot0;
                entity['showDisabled'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity = new Array(0);
        entity = zuuluu.bind(report)(michal, entity);
        var _closure2_slot3 = entity;
        zuuluu = report.useCallback;
        michal = function(argFoo) {
            entity = argFoo;
            var _closure3_slot0 = entity;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 3;
            zuuluu = zuuluu[entity];
            entity = undefined;
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.batchUpdates;
            michal = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 2;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.setState;
                entity = {};
                tangon = _closure3_slot0;
                entity['showIcon'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity = new Array(0);
        entity = zuuluu.bind(report)(michal, entity);
        var _closure2_slot4 = entity;
        zuuluu = report.useCallback;
        michal = function(argFoo) {
            entity = argFoo;
            var _closure3_slot0 = entity;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 3;
            zuuluu = zuuluu[entity];
            entity = undefined;
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.batchUpdates;
            michal = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 2;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.setState;
                entity = {};
                tangon = _closure3_slot0;
                entity['iconPosition'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity = new Array(0);
        entity = zuuluu.bind(report)(michal, entity);
        var _closure2_slot5 = entity;
        zuuluu = report.useCallback;
        michal = function(argFoo) {
            entity = argFoo;
            var _closure3_slot0 = entity;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 3;
            zuuluu = zuuluu[entity];
            entity = undefined;
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.batchUpdates;
            michal = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 2;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.setState;
                entity = {};
                tangon = _closure3_slot0;
                entity['enableLoadingState'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity = new Array(0);
        entity = zuuluu.bind(report)(michal, entity);
        var _closure2_slot6 = entity;
        zuuluu = _closure1_slot5;
        foxtra = _closure1_slot0;
        entity = 4;
        entity = kiloes[entity];
        entity = foxtra.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        backup = _closure1_slot4;
        report = 5;
        report = kiloes[report];
        report = foxtra.bind(tangon)(report);
        oscard = report.BottomSheetTitleHeader;
        report = {};
        golfie = 'Button Settings';
        report['title'] = golfie;
        oscard = backup.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        yankee = 6;
        oscard = kiloes[yankee];
        oscard = foxtra.bind(tangon)(oscard);
        golfie = oscard.Form;
        oscard = {};
        option = kiloes[yankee];
        option = foxtra.bind(tangon)(option);
        verify = option.FormSection;
        option = {'title': 'Button Size', 'accessibilityRole': 'radiogroup'};
        echoed = _closure1_slot6;
        sizing = echoed.map;
        offset = function(argFoo) {
            entity = argFoo;
            foxtra = entity.label;
            report = entity.value;
            var _closure3_slot0 = report;
            tangon = _closure1_slot5;
            michal = _closure1_slot3;
            zuuluu = michal.Fragment;
            michal = {};
            verify = _closure1_slot4;
            option = _closure1_slot0;
            offset = _closure1_slot2;
            golfie = 6;
            oscard = offset[golfie];
            entity = undefined;
            oscard = option.bind(entity)(oscard);
            yankee = oscard.FormRadioRow;
            oscard = {};
            backup = 'right';
            oscard['align'] = backup;
            backup = _closure2_slot0;
            backup = backup.buttonSize;
            backup = backup === report;
            oscard['selected'] = backup;
            oscard['label'] = foxtra;
            romeon = function() { // Original name: onPress
                zuuluu = _closure2_slot1;
                michal = _closure3_slot0;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            oscard['onPress'] = romeon;
            romeon = {};
            foxtra = true;
            romeon['selected'] = foxtra;
            oscard['accessibilityState'] = romeon;
            romeon = 'radio';
            oscard['accessibilityRole'] = romeon;
            yankee = verify.bind(entity)(yankee, oscard);
            oscard = new Array(2);
            oscard[0] = yankee;
            golfie = offset[golfie];
            golfie = option.bind(entity)(golfie);
            option = golfie.FormDivider;
            golfie = {};
            golfie = verify.bind(entity)(option, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        offset = sizing.bind(echoed)(offset);
        option['children'] = offset;
        verify = backup.bind(tangon)(verify, option);
        option = new Array(6);
        option[0] = verify;
        verify = kiloes[yankee];
        verify = foxtra.bind(tangon)(verify);
        offset = verify.FormSection;
        verify = {'title': 'Button Scale', 'accessibilityRole': 'radiogroup'};
        sizing = kiloes[yankee];
        sizing = foxtra.bind(tangon)(sizing);
        echoed = sizing.FormHint;
        sizing = {};
        update = 'The amount in pixels that the button width will scale when pressed';
        sizing['children'] = update;
        echoed = backup.bind(tangon)(echoed, sizing);
        sizing = new Array(2);
        sizing[0] = echoed;
        update = _closure1_slot7;
        echoed = update.map;
        output = function(argFoo) {
            entity = argFoo;
            foxtra = entity.label;
            report = entity.value;
            var _closure3_slot0 = report;
            tangon = _closure1_slot5;
            michal = _closure1_slot3;
            zuuluu = michal.Fragment;
            michal = {};
            verify = _closure1_slot4;
            option = _closure1_slot0;
            offset = _closure1_slot2;
            golfie = 6;
            oscard = offset[golfie];
            entity = undefined;
            oscard = option.bind(entity)(oscard);
            yankee = oscard.FormRadioRow;
            oscard = {};
            backup = 'right';
            oscard['align'] = backup;
            backup = _closure2_slot0;
            backup = backup.buttonScale;
            backup = backup === report;
            oscard['selected'] = backup;
            oscard['label'] = foxtra;
            romeon = function() { // Original name: onPress
                zuuluu = _closure2_slot2;
                michal = _closure3_slot0;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            oscard['onPress'] = romeon;
            romeon = {};
            foxtra = true;
            romeon['selected'] = foxtra;
            oscard['accessibilityState'] = romeon;
            romeon = 'radio';
            oscard['accessibilityRole'] = romeon;
            yankee = verify.bind(entity)(yankee, oscard);
            oscard = new Array(2);
            oscard[0] = yankee;
            golfie = offset[golfie];
            golfie = option.bind(entity)(golfie);
            option = golfie.FormDivider;
            golfie = {};
            golfie = verify.bind(entity)(option, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        output = echoed.bind(update)(output);
        sizing[1] = output;
        verify['children'] = sizing;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[1] = verify;
        verify = kiloes[yankee];
        verify = foxtra.bind(tangon)(verify);
        offset = verify.FormSection;
        verify = {};
        sizing = kiloes[yankee];
        sizing = foxtra.bind(tangon)(sizing);
        output = sizing.FormSwitchRow;
        sizing = {};
        echoed = 'Disabled';
        sizing['label'] = echoed;
        echoed = result.showDisabled;
        sizing['value'] = echoed;
        echoed = function(argFoo) { // Original name: onValueChange
            zuuluu = _closure2_slot3;
            michal = undefined;
            entity = argFoo;
            entity = zuuluu.bind(michal)(entity);
            return entity;
        };
        sizing['onValueChange'] = echoed;
        sizing = backup.bind(tangon)(output, sizing);
        verify['children'] = sizing;
        verify = backup.bind(tangon)(offset, verify);
        option[2] = verify;
        verify = kiloes[yankee];
        verify = foxtra.bind(tangon)(verify);
        offset = verify.FormSection;
        verify = {};
        sizing = kiloes[yankee];
        sizing = foxtra.bind(tangon)(sizing);
        output = sizing.FormSwitchRow;
        sizing = {};
        echoed = 'Show Icons';
        sizing['label'] = echoed;
        result = result.showIcon;
        sizing['value'] = result;
        result = function(argFoo) { // Original name: onValueChange
            zuuluu = _closure2_slot4;
            michal = undefined;
            entity = argFoo;
            entity = zuuluu.bind(michal)(entity);
            return entity;
        };
        sizing['onValueChange'] = result;
        sizing = backup.bind(tangon)(output, sizing);
        verify['children'] = sizing;
        verify = backup.bind(tangon)(offset, verify);
        option[3] = verify;
        verify = kiloes[yankee];
        verify = foxtra.bind(tangon)(verify);
        offset = verify.FormSection;
        verify = {'title': 'Icon Position', 'accessibilityRole': 'radiogroup'};
        sizing = kiloes[yankee];
        sizing = foxtra.bind(tangon)(sizing);
        output = sizing.FormHint;
        sizing = {};
        result = 'Whether to show the example icon on the left (default) or right.';
        sizing['children'] = result;
        output = backup.bind(tangon)(output, sizing);
        sizing = new Array(2);
        sizing[0] = output;
        echoed = ['start', 'end'];
        result = echoed.map;
        output = function(argFoo) {
            report = argFoo;
            var _closure3_slot0 = report;
            tangon = _closure1_slot5;
            michal = _closure1_slot3;
            zuuluu = michal.Fragment;
            michal = {};
            verify = _closure1_slot4;
            option = _closure1_slot0;
            offset = _closure1_slot2;
            golfie = 6;
            oscard = offset[golfie];
            entity = undefined;
            oscard = option.bind(entity)(oscard);
            yankee = oscard.FormRadioRow;
            oscard = {};
            foxtra = 'right';
            oscard['align'] = foxtra;
            foxtra = _closure2_slot0;
            backup = foxtra.iconPosition;
            backup = backup === report;
            oscard['selected'] = backup;
            oscard['label'] = report;
            romeon = function() { // Original name: onPress
                zuuluu = _closure2_slot5;
                michal = _closure3_slot0;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            oscard['onPress'] = romeon;
            romeon = {};
            foxtra = foxtra.iconPosition;
            foxtra = foxtra === report;
            romeon['selected'] = foxtra;
            oscard['accessibilityState'] = romeon;
            romeon = 'radio';
            oscard['accessibilityRole'] = romeon;
            yankee = verify.bind(entity)(yankee, oscard);
            oscard = new Array(2);
            oscard[0] = yankee;
            golfie = offset[golfie];
            golfie = option.bind(entity)(golfie);
            option = golfie.FormDivider;
            golfie = {};
            golfie = verify.bind(entity)(option, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        output = result.bind(echoed)(output);
        sizing[1] = output;
        verify['children'] = sizing;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[4] = verify;
        verify = kiloes[yankee];
        verify = foxtra.bind(tangon)(verify);
        offset = verify.FormSection;
        verify = {'title': 'Loading state', 'accessibilityRole': 'radiogroup'};
        yankee = kiloes[yankee];
        yankee = foxtra.bind(tangon)(yankee);
        foxtra = yankee.FormHint;
        yankee = {};
        kiloes = 'Whether or not to show a loading state when a button is pressed';
        yankee['children'] = kiloes;
        foxtra = backup.bind(tangon)(foxtra, yankee);
        yankee = new Array(2);
        yankee[0] = foxtra;
        backup = new Array(2);
        foxtra = true;
        backup[0] = foxtra;
        foxtra = false;
        backup[1] = foxtra;
        foxtra = backup.map;
        romeon = function(argFoo) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                foxtra = argFoo;
                var _closure3_slot0 = foxtra;
                report = _closure1_slot5;
                entity = _closure1_slot3;
                tangon = entity.Fragment;
                zuuluu = {};
                verify = _closure1_slot4;
                oscard = _closure1_slot0;
                entity = _closure1_slot2;
                offset = 6;
                entity = entity[offset];
                michal = undefined;
                entity = oscard.bind(michal)(entity);
                option = entity.FormRadioRow;
                entity = {};
                oscard = 'right';
                entity['align'] = oscard;
                oscard = _closure2_slot0;
                oscard = oscard.enableLoadingState;
                oscard = oscard === foxtra;
                entity['selected'] = oscard;
                oscard = true;
                oscard = oscard === foxtra;
                backup = 'Disabled';
                if(!oscard) { _fun00002_ip = 109; continue _fun00001 }
 105:
                backup = 'Enabled';
 109:
                entity['label'] = backup;
                yankee = function() { // Original name: onPress
                    zuuluu = _closure2_slot6;
                    michal = _closure3_slot0;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                entity['onPress'] = yankee;
                yankee = {};
                romeon = _closure2_slot0;
                romeon = romeon.enableLoadingState;
                romeon = romeon === foxtra;
                yankee['selected'] = romeon;
                entity['accessibilityState'] = yankee;
                yankee = 'radio';
                entity['accessibilityRole'] = yankee;
                option = verify.bind(michal)(option, entity);
                entity = new Array(2);
                entity[0] = option;
                verify = _closure1_slot4;
                option = _closure1_slot0;
                golfie = _closure1_slot2;
                golfie = golfie[offset];
                golfie = option.bind(michal)(golfie);
                option = golfie.FormDivider;
                golfie = {};
                golfie = verify.bind(michal)(option, golfie);
                entity[1] = golfie;
                zuuluu['children'] = entity;
                entity = 'disabled';
                if(!oscard) { _fun00002_ip = 226; continue _fun00001 }
 222:
                entity = 'enabled';
 226:
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            }
        };
        romeon = foxtra.bind(backup)(romeon);
        yankee[1] = romeon;
        verify['children'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[5] = verify;
        oscard['children'] = option;
        oscard = zuuluu.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();