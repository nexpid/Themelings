// app/modules/user_settings/native/design_system/UserSettingsDesignSystemButtonGroup.tsx
export default (function(native1, native2, native3, native4, native5, native6, native7) {
    var5 = native2;
    var3 = native6;
    var6 = native7;
    var _closure1_slot0 = var5;
    var1 = native3;
    var _closure1_slot1 = var1;
    var _closure1_slot2 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = native4;
    var1 = undefined;
    var4 = var4.bind(var1)(var7);
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var7 = var4.View;
    var _closure1_slot3 = var7;
    var4 = var4.ScrollView;
    var _closure1_slot4 = var4;
    var4 = 2;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var7 = var4.jsx;
    var _closure1_slot5 = var7;
    var4 = var4.jsxs;
    var _closure1_slot6 = var4;
    var4 = 3;
    var4 = var6[var4];
    var8 = var5.bind(var1)(var4);
    var7 = var8.createStyles;
    var4 = {};
    var9 = {'padding': 16, 'paddingBottom': 64};
    var4['container'] = var9;
    var4 = var7.bind(var8)(var4);
    var _closure1_slot7 = var4;
    var4 = 10;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/user_settings/native/design_system/UserSettingsDesignSystemButtonGroup.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function UserSettingsDesignSystemButtonGroup() {
        var1 = _closure1_slot7;
        var4 = undefined;
        var7 = var1.bind(var4)();
        var3 = _closure1_slot5;
        var2 = _closure1_slot4;
        var1 = {};
        var6 = _closure1_slot3;
        var5 = {};
        var7 = var7.container;
        var5['style'] = var7;
        var9 = _closure1_slot6;
        var16 = _closure1_slot0;
        var17 = _closure1_slot2;
        var12 = 4;
        var7 = var17[var12];
        var7 = var16.bind(var4)(var7);
        var8 = var7.Stack;
        var7 = {};
        var10 = 24;
        var7['spacing'] = var10;
        var10 = {};
        var11 = var17[var12];
        var11 = var16.bind(var4)(var11);
        var13 = var11.Stack;
        var11 = {};
        var15 = 5;
        var14 = var17[var15];
        var14 = var16.bind(var4)(var14);
        var18 = var14.Text;
        var14 = {'variant': 'text-lg/bold', 'children': 'Text Button Example'};
        var18 = var3.bind(var4)(var18, var14);
        var14 = new Array(3);
        var14[0] = var18;
        var18 = var17[var15];
        var18 = var16.bind(var4)(var18);
        var19 = var18.Text;
        var18 = {'variant': 'text-md/medium', 'color': 'text-secondary', 'children': 'By default, stacks buttons vertically. This is best for buttons with text.'};
        var18 = var3.bind(var4)(var19, var18);
        var14[1] = var18;
        var18 = 6;
        var19 = var17[var18];
        var19 = var16.bind(var4)(var19);
        var21 = var19.ButtonGroup;
        var19 = {};
        var20 = 7;
        var22 = var17[var20];
        var22 = var16.bind(var4)(var22);
        var25 = var22.Button;
        var22 = {'text': 'Agree', 'variant': 'primary'};
        var26 = function onPress() {
            var1 = undefined;
            return var1;
        };
        var22['onPress'] = var26;
        var25 = var3.bind(var4)(var25, var22);
        var22 = new Array(2);
        var22[0] = var25;
        var25 = var17[var20];
        var25 = var16.bind(var4)(var25);
        var26 = var25.Button;
        var25 = {'text': 'Cancel', 'variant': 'secondary'};
        var27 = function onPress() {
            var1 = undefined;
            return var1;
        };
        var25['onPress'] = var27;
        var25 = var3.bind(var4)(var26, var25);
        var22[1] = var25;
        var19['children'] = var22;
        var19 = var9.bind(var4)(var21, var19);
        var14[2] = var19;
        var11['children'] = var14;
        var11 = var9.bind(var4)(var13, var11);
        var10['children'] = var11;
        var11 = var3.bind(var4)(var6, var10);
        var10 = new Array(3);
        var10[0] = var11;
        var11 = {};
        var13 = var17[var12];
        var13 = var16.bind(var4)(var13);
        var14 = var13.Stack;
        var13 = {};
        var19 = var17[var15];
        var19 = var16.bind(var4)(var19);
        var21 = var19.Text;
        var19 = {'variant': 'text-lg/bold', 'children': 'IconButton Example'};
        var21 = var3.bind(var4)(var21, var19);
        var19 = new Array(3);
        var19[0] = var21;
        var21 = var17[var15];
        var21 = var16.bind(var4)(var21);
        var22 = var21.Text;
        var21 = {'variant': 'text-md/medium', 'color': 'text-secondary', 'children': 'For IconButtons, a horizontal layout is recommended'};
        var21 = var3.bind(var4)(var22, var21);
        var19[1] = var21;
        var21 = var17[var18];
        var21 = var16.bind(var4)(var21);
        var27 = var21.ButtonGroup;
        var26 = {};
        var22 = 'horizontal';
        var26['direction'] = var22;
        var21 = 8;
        var25 = var17[var21];
        var25 = var16.bind(var4)(var25);
        var29 = var25.IconButton;
        var28 = {'accessibilityLabel': 'Settings', 'variant': 'secondary'};
        var25 = _closure1_slot1;
        var24 = 9;
        var30 = var17[var24];
        var30 = var25.bind(var4)(var30);
        var28['icon'] = var30;
        var30 = function onPress() {
            var1 = undefined;
            return var1;
        };
        var28['onPress'] = var30;
        var29 = var3.bind(var4)(var29, var28);
        var28 = new Array(2);
        var28[0] = var29;
        var29 = var17[var21];
        var29 = var16.bind(var4)(var29);
        var30 = var29.IconButton;
        var29 = {'accessibilityLabel': 'Settings', 'variant': 'secondary'};
        var31 = var17[var24];
        var31 = var25.bind(var4)(var31);
        var29['icon'] = var31;
        var31 = function onPress() {
            var1 = undefined;
            return var1;
        };
        var29['onPress'] = var31;
        var29 = var3.bind(var4)(var30, var29);
        var28[1] = var29;
        var26['children'] = var28;
        var26 = var9.bind(var4)(var27, var26);
        var19[2] = var26;
        var13['children'] = var19;
        var13 = var9.bind(var4)(var14, var13);
        var11['children'] = var13;
        var11 = var3.bind(var4)(var6, var11);
        var10[1] = var11;
        var11 = {};
        var12 = var17[var12];
        var12 = var16.bind(var4)(var12);
        var13 = var12.Stack;
        var12 = {};
        var14 = var17[var15];
        var14 = var16.bind(var4)(var14);
        var19 = var14.Text;
        var14 = {'variant': 'text-lg/bold', 'children': 'Mixed Buttons Example'};
        var19 = var3.bind(var4)(var19, var14);
        var14 = new Array(6);
        var14[0] = var19;
        var19 = var17[var15];
        var19 = var16.bind(var4)(var19);
        var26 = var19.Text;
        var19 = {'variant': 'text-md/medium', 'color': 'text-secondary', 'children': 'A single text button can be used in a ButtonGroup with smaller IconButtons, using the horizontal layout.'};
        var19 = var3.bind(var4)(var26, var19);
        var14[1] = var19;
        var19 = var17[var15];
        var19 = var16.bind(var4)(var19);
        var26 = var19.Text;
        var19 = {'variant': 'text-md/medium', 'color': 'text-secondary', 'children': 'The Button with text must have the grow prop.'};
        var19 = var3.bind(var4)(var26, var19);
        var14[2] = var19;
        var18 = var17[var18];
        var18 = var16.bind(var4)(var18);
        var19 = var18.ButtonGroup;
        var18 = {};
        var18['direction'] = var22;
        var20 = var17[var20];
        var20 = var16.bind(var4)(var20);
        var22 = var20.Button;
        var20 = {'text': 'Search', 'variant': 'secondary', 'grow': true};
        var26 = function onPress() {
            var1 = undefined;
            return var1;
        };
        var20['onPress'] = var26;
        var22 = var3.bind(var4)(var22, var20);
        var20 = new Array(2);
        var20[0] = var22;
        var21 = var17[var21];
        var21 = var16.bind(var4)(var21);
        var22 = var21.IconButton;
        var21 = {'accessibilityLabel': 'Cancel', 'variant': 'secondary'};
        var24 = var17[var24];
        var24 = var25.bind(var4)(var24);
        var21['icon'] = var24;
        var23 = function onPress() {
            var1 = undefined;
            return var1;
        };
        var21['onPress'] = var23;
        var21 = var3.bind(var4)(var22, var21);
        var20[1] = var21;
        var18['children'] = var20;
        var18 = var9.bind(var4)(var19, var18);
        var14[3] = var18;
        var18 = var17[var15];
        var18 = var16.bind(var4)(var18);
        var19 = var18.Text;
        var18 = {'variant': 'text-sm/medium', 'color': 'text-danger', 'children': 'More than one text button should not be put in a horizontal group.'};
        var18 = var3.bind(var4)(var19, var18);
        var14[4] = var18;
        var15 = var17[var15];
        var15 = var16.bind(var4)(var15);
        var16 = var15.Text;
        var15 = {'variant': 'text-sm/medium', 'color': 'text-secondary', 'children': 'This does not flex well with internationalization and enlarged font size settings. Use TwinButtons instead when there are specifically two text Buttons.'};
        var15 = var3.bind(var4)(var16, var15);
        var14[5] = var15;
        var12['children'] = var14;
        var12 = var9.bind(var4)(var13, var12);
        var11['children'] = var12;
        var11 = var3.bind(var4)(var6, var11);
        var10[2] = var11;
        var7['children'] = var10;
        var7 = var9.bind(var4)(var8, var7);
        var5['children'] = var7;
        var5 = var3.bind(var4)(var6, var5);
        var1['children'] = var5;
        var1 = var3.bind(var4)(var2, var1);
        return var1;
    };
    var3['default'] = var2;
    return var1;
})();