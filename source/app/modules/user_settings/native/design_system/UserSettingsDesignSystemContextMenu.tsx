// app/modules/user_settings/native/design_system/UserSettingsDesignSystemContextMenu.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var11 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var6;
    var1 = function contextMenuItems(arg1) {
        var5 = arg1;
        var _closure2_slot0 = var5;
        var6 = _closure1_slot0;
        var7 = _closure1_slot1;
        var3 = 13;
        var8 = var7[var3];
        var4 = undefined;
        var10 = var6.bind(var4)(var8);
        var9 = var10.shuffle;
        var8 = _closure1_slot8;
        var8 = var9.bind(var10)(var8);
        var _closure2_slot1 = var8;
        var3 = var7[var3];
        var4 = var6.bind(var4)(var3);
        var3 = var4.shuffle;
        var2 = _closure1_slot7;
        var2 = var3.bind(var4)(var2);
        var _closure2_slot2 = var2;
        var2 = global;
        var4 = var2.Array;
        var3 = var4.from;
        var2 = {};
        var2['length'] = var5;
        var3 = var3.bind(var4)(var2);
        var2 = var3.map;
        var1 = function(arg1, arg2) {
            _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
                var4 = arg2;
                var1 = {};
                var5 = _closure2_slot1;
                var3 = var5.length;
                var3 = var4 % var3;
                var3 = var5[var3];
                var1['label'] = var3;
                var3 = undefined;
                var1['IconComponent'] = var3;
                var5 = _closure2_slot2;
                var3 = var5.length;
                var3 = var4 % var3;
                var3 = var5[var3];
                var1['iconSource'] = var3;
                var3 = _closure2_slot0;
                var2 = 1;
                var3 = var3 - var2;
                var2 = 'default';
                if(!(var4 === var3)) { _fun0001_ip = 2; continue _fun0001 }
case 3:
                var2 = 'destructive';
case 2:
                var1['variant'] = var2;
                var2 = function action() {
                    var1 = undefined;
                    return var1;
                };
                var1['action'] = var2;
                return var1;
            }
        };
        var1 = var2.bind(var3)(var1);
        return var1;
    };
    var _closure1_slot10 = var1;
    var1 = function DemoContextMenu(arg1) {
        _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
case 0:
            var2 = arg1;
            var1 = var2.label;
            var _closure2_slot0 = var1;
            var9 = var2.align;
            var11 = var2.triggerOnLongPress;
            var4 = undefined;
            if(!(var11 === var4)) { _fun0002_ip = 4; continue _fun0002 }
case 5:
            var11 = false;
case 4:
            var10 = var2.count;
            if(!(var10 === var4)) { _fun0002_ip = 6; continue _fun0002 }
case 7:
            var10 = 3;
case 6:
            var _closure2_slot1 = var10;
            var1 = var2.sections;
            if(!(var1 === var4)) { _fun0002_ip = 8; continue _fun0002 }
case 9:
            var1 = 1;
case 8:
            var _closure2_slot2 = var1;
            var7 = var2.alignButton;
            if(!(var7 === var4)) { _fun0002_ip = 10; continue _fun0002 }
case 11:
            var7 = 'flex-start';
case 10:
            var6 = _closure1_slot2;
            var3 = var6.useMemo;
            var2 = new Array(2);
            var2[0] = var10;
            var2[1] = var1;
            var1 = function() {
                _fun0003: for(var _fun0003_ip = 0; ; ) switch(_fun0003_ip) {
case 0:
                    var2 = _closure2_slot2;
                    var1 = 1;
                    if(!(!(var2 > var1))) { _fun0003_ip = 4; continue _fun0003 }
case 12:
                    var3 = _closure1_slot10;
                    var2 = _closure2_slot1;
                    var1 = undefined;
                    var1 = var3.bind(var1)(var2);
                    _fun0003_ip = 13; continue _fun0003;
case 4:
                    var2 = global;
                    var4 = var2.Array;
                    var3 = var4.from;
                    var2 = {};
                    var5 = _closure2_slot2;
                    var2['length'] = var5;
                    var4 = var3.bind(var4)(var2);
                    var3 = var4.map;
                    var2 = function() {
                        var3 = _closure1_slot10;
                        var2 = _closure2_slot1;
                        var1 = undefined;
                        var1 = var3.bind(var1)(var2);
                        return var1;
                    };
                    var1 = var3.bind(var4)(var2);
case 13:
                    return var1;
                }
            };
            var10 = var3.bind(var6)(var1, var2);
            var3 = _closure1_slot5;
            var2 = _closure1_slot3;
            var1 = {};
            var6 = {};
            var6['alignSelf'] = var7;
            var1['style'] = var6;
            var7 = _closure1_slot5;
            var6 = _closure1_slot0;
            var12 = _closure1_slot1;
            var5 = 14;
            var5 = var12[var5];
            var5 = var6.bind(var4)(var5);
            var6 = var5.ContextMenu;
            var5 = {};
            var5['triggerOnLongPress'] = var11;
            var5['items'] = var10;
            var5['align'] = var9;
            var9 = 'Sample title';
            var5['title'] = var9;
            var8 = function children(arg1) {
                var3 = arg1;
                var6 = var3.ref;
                var1 = null;
                var2 = Object.create(var1);
                var1 = 0;
                var2['ref'] = var1;
                var9 = {};
                var8 = var3;
                var7 = var2;
                var8 = copyDataProperties(var9, var8, var7);
                var4 = _closure1_slot5;
                var2 = _closure1_slot0;
                var3 = _closure1_slot1;
                var1 = 15;
                var1 = var3[var1];
                var3 = undefined;
                var1 = var2.bind(var3)(var1);
                var2 = var1.Button;
                var1 = {};
                var1['ref'] = var6;
                var9 = var1;
                var5 = copyDataProperties(var9, var8);
                var6 = _closure2_slot0;
                var5 = 'text';
                var1[var5] = var6;
                var6 = 'primary';
                var5 = 'variant';
                var1[var5] = var6;
                var1 = var4.bind(var3)(var2, var1);
                return var1;
            };
            var5['children'] = var8;
            var5 = var7.bind(var4)(var6, var5);
            var1['children'] = var5;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        }
    };
    var _closure1_slot11 = var1;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var4 = var4.bind(var1)(var7);
    var _closure1_slot2 = var4;
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var7 = var4.View;
    var _closure1_slot3 = var7;
    var4 = var4.ScrollView;
    var _closure1_slot4 = var4;
    var4 = 2;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var7 = var4.jsx;
    var _closure1_slot5 = var7;
    var4 = var4.jsxs;
    var _closure1_slot6 = var4;
    var4 = 3;
    var4 = var6[var4];
    var7 = var11.bind(var1)(var4);
    var4 = new Array(8);
    var4[0] = var7;
    var7 = 4;
    var7 = var6[var7];
    var7 = var11.bind(var1)(var7);
    var4[1] = var7;
    var7 = 5;
    var7 = var6[var7];
    var7 = var11.bind(var1)(var7);
    var4[2] = var7;
    var7 = 6;
    var7 = var6[var7];
    var7 = var11.bind(var1)(var7);
    var4[3] = var7;
    var7 = 7;
    var7 = var6[var7];
    var7 = var11.bind(var1)(var7);
    var4[4] = var7;
    var7 = 8;
    var7 = var6[var7];
    var7 = var11.bind(var1)(var7);
    var4[5] = var7;
    var7 = 9;
    var7 = var6[var7];
    var7 = var11.bind(var1)(var7);
    var4[6] = var7;
    var7 = 10;
    var7 = var6[var7];
    var7 = var11.bind(var1)(var7);
    var4[7] = var7;
    var _closure1_slot7 = var4;
    var4 = ['Launch Probe!', 'Activate Laser', 'Teleport Widget', 'Engage Hyperdrive', 'Deploy Robots', 'Initiate Time Warp', 'Beam Up Snacks', 'Hack Database', 'Trigger Cosmic Boom', 'Unleash Space Vortex', 'Activate Cloaking Device'];
    var _closure1_slot8 = var4;
    var4 = 11;
    var4 = var6[var4];
    var8 = var5.bind(var1)(var4);
    var7 = var8.createStyles;
    var4 = {};
    var10 = 12;
    var9 = {'flexDirection': 'column', 'gap': 12, 'padding': 16};
    var4['container'] = var9;
    var9 = {};
    var9['gap'] = var10;
    var4['card'] = var9;
    var9 = {'height': 1, 'backgroundColor': null, 'marginVertical': 12};
    var10 = var6[var10];
    var10 = var11.bind(var1)(var10);
    var10 = var10.colors;
    var10 = var10.DIVIDER_SUBTLE;
    var9['backgroundColor'] = var10;
    var4['divider'] = var9;
    var4 = var7.bind(var8)(var4);
    var _closure1_slot9 = var4;
    var4 = 18;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/user_settings/native/design_system/UserSettingsDesignSystemContextMenu.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function UserSettingsDesignSystemAlertModal() {
        var1 = _closure1_slot9;
        var4 = undefined;
        var11 = var1.bind(var4)();
        var3 = _closure1_slot5;
        var2 = _closure1_slot4;
        var1 = {};
        var7 = _closure1_slot6;
        var6 = _closure1_slot3;
        var5 = {};
        var8 = var11.container;
        var5['style'] = var8;
        var15 = _closure1_slot0;
        var17 = _closure1_slot1;
        var9 = 16;
        var8 = var17[var9];
        var8 = var15.bind(var4)(var8);
        var10 = var8.Card;
        var8 = {};
        var13 = var11.card;
        var8['style'] = var13;
        var18 = _closure1_slot5;
        var13 = 17;
        var14 = var17[var13];
        var14 = var15.bind(var4)(var14);
        var16 = var14.Text;
        var14 = {'variant': 'text-lg/bold', 'children': 'Basic Example'};
        var14 = var18.bind(var4)(var16, var14);
        var16 = new Array(3);
        var16[0] = var14;
        var19 = _closure1_slot5;
        var14 = var17[var13];
        var14 = var15.bind(var4)(var14);
        var18 = var14.Text;
        var14 = {'variant': 'text-md/medium', 'color': 'text-secondary', 'children': 'You press the button to open the menu and then select an action, or tap and pan down in a single gesture.'};
        var14 = var19.bind(var4)(var18, var14);
        var16[1] = var14;
        var19 = _closure1_slot5;
        var14 = _closure1_slot11;
        var18 = {};
        var20 = 'Open Menu';
        var18['label'] = var20;
        var18 = var19.bind(var4)(var14, var18);
        var16[2] = var18;
        var8['children'] = var16;
        var10 = var7.bind(var4)(var10, var8);
        var8 = new Array(6);
        var8[0] = var10;
        var10 = var17[var9];
        var10 = var15.bind(var4)(var10);
        var16 = var10.Card;
        var10 = {};
        var18 = var11.card;
        var10['style'] = var18;
        var20 = _closure1_slot5;
        var18 = var17[var13];
        var18 = var15.bind(var4)(var18);
        var19 = var18.Text;
        var18 = {'variant': 'text-lg/bold', 'children': 'Long Press'};
        var19 = var20.bind(var4)(var19, var18);
        var18 = new Array(3);
        var18[0] = var19;
        var21 = _closure1_slot5;
        var19 = var17[var13];
        var19 = var15.bind(var4)(var19);
        var20 = var19.Text;
        var19 = {'variant': 'text-md/medium', 'color': 'text-secondary', 'children': 'You can also have the menu open on long press instead.'};
        var19 = var21.bind(var4)(var20, var19);
        var18[1] = var19;
        var20 = _closure1_slot5;
        var19 = {'triggerOnLongPress': true, 'label': 'Long Press to Open'};
        var19 = var20.bind(var4)(var14, var19);
        var18[2] = var19;
        var10['children'] = var18;
        var10 = var7.bind(var4)(var16, var10);
        var8[1] = var10;
        var10 = var17[var9];
        var10 = var15.bind(var4)(var10);
        var16 = var10.Card;
        var10 = {};
        var18 = var11.card;
        var10['style'] = var18;
        var20 = _closure1_slot5;
        var18 = var17[var13];
        var18 = var15.bind(var4)(var18);
        var19 = var18.Text;
        var18 = {'variant': 'text-lg/bold', 'children': 'Sections'};
        var19 = var20.bind(var4)(var19, var18);
        var18 = new Array(3);
        var18[0] = var19;
        var21 = _closure1_slot5;
        var19 = var17[var13];
        var19 = var15.bind(var4)(var19);
        var20 = var19.Text;
        var19 = {'variant': 'text-md/medium', 'color': 'text-secondary', 'children': 'You can pass an array of arrays of items to create sections in the menu.'};
        var19 = var21.bind(var4)(var20, var19);
        var18[1] = var19;
        var20 = _closure1_slot5;
        var19 = {'label': 'Open Sectioned Menu', 'sections': 3, 'count': 2};
        var19 = var20.bind(var4)(var14, var19);
        var18[2] = var19;
        var10['children'] = var18;
        var10 = var7.bind(var4)(var16, var10);
        var8[2] = var10;
        var10 = var17[var9];
        var10 = var15.bind(var4)(var10);
        var16 = var10.Card;
        var10 = {};
        var18 = var11.card;
        var10['style'] = var18;
        var20 = _closure1_slot5;
        var18 = var17[var13];
        var18 = var15.bind(var4)(var18);
        var19 = var18.Text;
        var18 = {'variant': 'text-lg/bold', 'children': 'Automatic Alignment'};
        var19 = var20.bind(var4)(var19, var18);
        var18 = new Array(6);
        var18[0] = var19;
        var21 = _closure1_slot5;
        var19 = var17[var13];
        var19 = var15.bind(var4)(var19);
        var20 = var19.Text;
        var19 = {'variant': 'text-md/medium', 'color': 'text-secondary', 'children': "The menu will automatically align itself so that it doesn't overflow offscreen horizontally."};
        var19 = var21.bind(var4)(var20, var19);
        var18[1] = var19;
        var20 = _closure1_slot5;
        var19 = {'alignButton': 'flex-end', 'label': 'Open Right-Aligned Menu'};
        var19 = var20.bind(var4)(var14, var19);
        var18[2] = var19;
        var21 = _closure1_slot5;
        var20 = _closure1_slot3;
        var19 = {};
        var22 = var11.divider;
        var19['style'] = var22;
        var19 = var21.bind(var4)(var20, var19);
        var18[3] = var19;
        var21 = _closure1_slot5;
        var19 = var17[var13];
        var19 = var15.bind(var4)(var19);
        var20 = var19.Text;
        var19 = {'variant': 'text-md/medium', 'color': 'text-secondary', 'children': "It will also position itself vertically, so that it doesn't overflow offscreen vertically."};
        var19 = var21.bind(var4)(var20, var19);
        var18[4] = var19;
        var20 = _closure1_slot5;
        var19 = {'count': 8, 'label': 'Open Tall Menu'};
        var19 = var20.bind(var4)(var14, var19);
        var18[5] = var19;
        var10['children'] = var18;
        var10 = var7.bind(var4)(var16, var10);
        var8[3] = var10;
        var10 = var17[var9];
        var10 = var15.bind(var4)(var10);
        var16 = var10.Card;
        var10 = {};
        var18 = var11.card;
        var10['style'] = var18;
        var20 = _closure1_slot5;
        var18 = var17[var13];
        var18 = var15.bind(var4)(var18);
        var19 = var18.Text;
        var18 = {'variant': 'text-lg/bold', 'children': 'Intentional Alignment'};
        var19 = var20.bind(var4)(var19, var18);
        var18 = new Array(11);
        var18[0] = var19;
        var21 = _closure1_slot5;
        var19 = var17[var13];
        var19 = var15.bind(var4)(var19);
        var20 = var19.Text;
        var19 = {'variant': 'text-md/medium', 'color': 'text-secondary', 'children': 'Menus can take an align prop to intentionally align the menu, instead of using the automatic menu positioning.'};
        var19 = var21.bind(var4)(var20, var19);
        var18[1] = var19;
        var21 = _closure1_slot5;
        var19 = var17[var13];
        var19 = var15.bind(var4)(var19);
        var20 = var19.Text;
        var19 = {'variant': 'text-md/medium', 'color': 'text-secondary', 'children': 'The align prop can be set to above, below, left, or right of the menu trigger. How the menu positions relative to the start or end of the trigger is then automatically determined based on the available space.'};
        var19 = var21.bind(var4)(var20, var19);
        var18[2] = var19;
        var21 = _closure1_slot5;
        var20 = _closure1_slot3;
        var19 = {};
        var22 = var11.divider;
        var19['style'] = var22;
        var19 = var21.bind(var4)(var20, var19);
        var18[3] = var19;
        var20 = _closure1_slot5;
        var19 = {'count': 3, 'align': 'right', 'label': 'Open Right'};
        var19 = var20.bind(var4)(var14, var19);
        var18[4] = var19;
        var21 = _closure1_slot5;
        var20 = _closure1_slot3;
        var19 = {};
        var22 = var11.divider;
        var19['style'] = var22;
        var19 = var21.bind(var4)(var20, var19);
        var18[5] = var19;
        var20 = _closure1_slot5;
        var19 = {'count': 3, 'alignButton': 'flex-end', 'align': 'left', 'label': 'Open Left'};
        var19 = var20.bind(var4)(var14, var19);
        var18[6] = var19;
        var21 = _closure1_slot5;
        var20 = _closure1_slot3;
        var19 = {};
        var22 = var11.divider;
        var19['style'] = var22;
        var19 = var21.bind(var4)(var20, var19);
        var18[7] = var19;
        var20 = _closure1_slot5;
        var19 = {'count': 3, 'align': 'below', 'label': 'Always Open Below'};
        var19 = var20.bind(var4)(var14, var19);
        var18[8] = var19;
        var21 = _closure1_slot5;
        var20 = _closure1_slot3;
        var19 = {};
        var22 = var11.divider;
        var19['style'] = var22;
        var19 = var21.bind(var4)(var20, var19);
        var18[9] = var19;
        var20 = _closure1_slot5;
        var19 = {'count': 3, 'alignButton': 'flex-end', 'align': 'above', 'label': 'Always Open Above'};
        var19 = var20.bind(var4)(var14, var19);
        var18[10] = var19;
        var10['children'] = var18;
        var10 = var7.bind(var4)(var16, var10);
        var8[4] = var10;
        var9 = var17[var9];
        var9 = var15.bind(var4)(var9);
        var10 = var9.Card;
        var9 = {};
        var11 = var11.card;
        var9['style'] = var11;
        var18 = _closure1_slot5;
        var11 = var17[var13];
        var11 = var15.bind(var4)(var11);
        var16 = var11.Text;
        var11 = {'variant': 'text-lg/bold', 'children': 'Overflow Scrolling'};
        var16 = var18.bind(var4)(var16, var11);
        var11 = new Array(3);
        var11[0] = var16;
        var16 = _closure1_slot5;
        var13 = var17[var13];
        var13 = var15.bind(var4)(var13);
        var15 = var13.Text;
        var13 = {'variant': 'text-md/medium', 'color': 'text-secondary', 'children': 'Menus should not typically have enough items to require scrolling, but with font scaling and smaller devices its possible. In this case, the menu will allow the user to scroll.'};
        var13 = var16.bind(var4)(var15, var13);
        var11[1] = var13;
        var13 = _closure1_slot5;
        var12 = {'count': 30, 'label': 'Open Really Tall Menu'};
        var12 = var13.bind(var4)(var14, var12);
        var11[2] = var12;
        var9['children'] = var11;
        var9 = var7.bind(var4)(var10, var9);
        var8[5] = var9;
        var5['children'] = var8;
        var5 = var7.bind(var4)(var6, var5);
        var1['children'] = var5;
        var1 = var3.bind(var4)(var2, var1);
        return var1;
    };
    var3['default'] = var2;
    return var1;
})();