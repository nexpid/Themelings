// app/modules/user_settings/native/design_system/UserSettingsDesignSystemModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: useScreens
        zulu = _closure1_slot0;
        mike = _closure1_slot2;
        entity = 6;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.useNavigatorScreens;
        mike = function() {
            entity = {};
            zulu = _closure1_slot10;
            verify = zulu.START;
            zulu = {};
            golf = _closure1_slot0;
            options = _closure1_slot2;
            report = 7;
            offset = options[report];
            oscar = undefined;
            backup = golf.bind(oscar)(offset);
            romeo = backup.getHeaderCloseButton;
            foxtrot = _closure1_slot1;
            offset = 8;
            yankee = options[offset];
            yankee = foxtrot.bind(oscar)(yankee);
            yankee = yankee.pop;
            yankee = romeo.bind(backup)(yankee);
            zulu['headerLeft'] = yankee;
            yankee = function() { // Original name: headerRight
                tango = _closure1_slot7;
                offset = _closure1_slot0;
                golf = _closure1_slot2;
                entity = 9;
                entity = golf[entity];
                zulu = undefined;
                entity = offset.bind(zulu)(entity);
                mike = entity.HeaderActionButton;
                entity = {};
                oscar = 10;
                options = golf[oscar];
                options = offset.bind(zulu)(options);
                verify = options.intl;
                options = verify.string;
                oscar = golf[oscar];
                oscar = offset.bind(zulu)(oscar);
                oscar = oscar.t;
                oscar = oscar.5WxrcX;
                oscar = options.bind(verify)(oscar);
                entity['text'] = oscar;
                oscar = _closure1_slot1;
                report = 8;
                report = golf[report];
                report = oscar.bind(zulu)(report);
                report = report.pop;
                entity['onPress'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            zulu['headerRight'] = yankee;
            yankee = function() { // Original name: headerTitle
                tango = _closure1_slot7;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 7;
                entity = zulu[entity];
                zulu = undefined;
                entity = mike.bind(zulu)(entity);
                mike = entity.NavigatorHeader;
                entity = {};
                report = _closure1_slot10;
                report = report.START;
                entity['title'] = report;
                report = 'I said come on fhqwhgads';
                entity['subtitle'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            zulu['headerTitle'] = yankee;
            yankee = function(argFoo, argBar) { // Original name: render
                entity = argBar;
                var _closure4_slot0 = entity;
                tango = _closure1_slot7;
                zulu = _closure1_slot14;
                mike = {'title': 'Come on fhqwhgads.', 'emoji': '😎', 'action': 'Everybody to the limit', 'onAction': null, 'secondaryAction': 'Maybe later', 'onSecondaryAction': null, 'disclaimer': 'I said come on fhqwhgads.'};
                report = function() { // Original name: onAction
                    zulu = _closure4_slot0;
                    mike = zulu.push;
                    entity = _closure1_slot10;
                    entity = entity.WHO_DAT;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                mike['onAction'] = report;
                oscar = _closure1_slot1;
                report = _closure1_slot2;
                entity = 8;
                report = report[entity];
                entity = undefined;
                report = oscar.bind(entity)(report);
                report = report.pop;
                mike['onSecondaryAction'] = report;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            zulu['render'] = yankee;
            entity[verify] = zulu;
            zulu = _closure1_slot10;
            verify = zulu.WHO_DAT;
            zulu = {};
            yankee = options[report];
            romeo = golf.bind(oscar)(yankee);
            yankee = romeo.getHeaderBackButton;
            yankee = yankee.bind(romeo)();
            zulu['headerLeft'] = yankee;
            yankee = options[report];
            backup = golf.bind(oscar)(yankee);
            romeo = backup.getHeaderCloseButton;
            yankee = options[offset];
            yankee = foxtrot.bind(oscar)(yankee);
            yankee = yankee.pop;
            yankee = romeo.bind(backup)(yankee);
            zulu['headerRight'] = yankee;
            yankee = function() { // Original name: headerTitle
                tango = _closure1_slot7;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 7;
                entity = zulu[entity];
                zulu = undefined;
                entity = mike.bind(zulu)(entity);
                mike = entity.NavigatorHeader;
                entity = {};
                report = _closure1_slot10;
                report = report.WHO_DAT;
                entity['title'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            zulu['headerTitle'] = yankee;
            yankee = function(argFoo, argBar) { // Original name: render
                entity = argBar;
                var _closure4_slot0 = entity;
                tango = _closure1_slot7;
                zulu = _closure1_slot14;
                mike = {'title': "Who's that?", 'emoji': '💿', 'action': "It's to the limit"};
                report = function() { // Original name: onAction
                    zulu = _closure4_slot0;
                    mike = zulu.push;
                    entity = _closure1_slot10;
                    entity = entity.EVERYBODY;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                mike['onAction'] = report;
                golf = _closure1_slot7;
                oscar = _closure1_slot0;
                report = _closure1_slot2;
                entity = 11;
                report = report[entity];
                entity = undefined;
                report = oscar.bind(entity)(report);
                oscar = report.TextInput;
                report = {};
                options = 'My friend Jake';
                report['placeholder'] = options;
                report = golf.bind(entity)(oscar, report);
                mike['children'] = report;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            zulu['render'] = yankee;
            entity[verify] = zulu;
            zulu = _closure1_slot10;
            verify = zulu.EVERYBODY;
            zulu = {};
            yankee = options[report];
            romeo = golf.bind(oscar)(yankee);
            yankee = romeo.getHeaderBackButton;
            yankee = yankee.bind(romeo)();
            zulu['headerLeft'] = yankee;
            yankee = options[report];
            backup = golf.bind(oscar)(yankee);
            romeo = backup.getHeaderCloseButton;
            yankee = options[offset];
            yankee = foxtrot.bind(oscar)(yankee);
            yankee = yankee.pop;
            yankee = romeo.bind(backup)(yankee);
            zulu['headerRight'] = yankee;
            yankee = function() { // Original name: headerTitle
                tango = _closure1_slot7;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 7;
                entity = zulu[entity];
                zulu = undefined;
                entity = mike.bind(zulu)(entity);
                mike = entity.NavigatorHeader;
                entity = {};
                report = _closure1_slot10;
                report = report.EVERYBODY;
                entity['title'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            zulu['headerTitle'] = yankee;
            yankee = function(argFoo, argBar) { // Original name: render
                mike = argBar;
                var _closure4_slot0 = mike;
                tango = _closure1_slot7;
                zulu = _closure1_slot15;
                mike = {};
                entity = function() { // Original name: onAction
                    zulu = _closure4_slot0;
                    mike = zulu.push;
                    entity = _closure1_slot10;
                    entity = entity.JOCKIN;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                mike['onAction'] = entity;
                entity = undefined;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            zulu['render'] = yankee;
            entity[verify] = zulu;
            zulu = _closure1_slot10;
            verify = zulu.JOCKIN;
            zulu = {};
            yankee = options[report];
            romeo = golf.bind(oscar)(yankee);
            yankee = romeo.getHeaderBackButton;
            yankee = yankee.bind(romeo)();
            zulu['headerLeft'] = yankee;
            yankee = options[report];
            romeo = golf.bind(oscar)(yankee);
            yankee = romeo.getHeaderCloseButton;
            offset = options[offset];
            offset = foxtrot.bind(oscar)(offset);
            offset = offset.pop;
            offset = yankee.bind(romeo)(offset);
            zulu['headerRight'] = offset;
            offset = function() { // Original name: headerTitle
                tango = _closure1_slot7;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 7;
                entity = zulu[entity];
                zulu = undefined;
                entity = mike.bind(zulu)(entity);
                mike = entity.NavigatorHeader;
                entity = {};
                report = _closure1_slot10;
                report = report.JOCKIN;
                entity['title'] = report;
                report = "Tryin' to play like, you know me";
                entity['subtitle'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            zulu['headerTitle'] = offset;
            offset = function(argFoo, argBar) { // Original name: render
                mike = argBar;
                var _closure4_slot0 = mike;
                tango = _closure1_slot7;
                zulu = _closure1_slot14;
                mike = {'title': "I see you jockin' me.", 'emoji': '🔥', 'action': "I'm like come on fhqwhgads", 'onAction': null, 'disclaimer': "Tryin' to play like, you know me."};
                entity = function() { // Original name: onAction
                    zulu = _closure4_slot0;
                    mike = zulu.push;
                    entity = _closure1_slot10;
                    entity = entity.LIMIT;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                mike['onAction'] = entity;
                entity = undefined;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            zulu['render'] = offset;
            entity[verify] = zulu;
            mike = _closure1_slot10;
            zulu = mike.LIMIT;
            mike = {};
            report = options[report];
            oscar = golf.bind(oscar)(report);
            report = oscar.getHeaderBackButton;
            report = report.bind(oscar)();
            mike['headerLeft'] = report;
            report = function() { // Original name: headerRight
                tango = _closure1_slot7;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 7;
                entity = zulu[entity];
                zulu = undefined;
                entity = mike.bind(zulu)(entity);
                mike = entity.HeaderSubmittingIndicator;
                entity = {};
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            mike['headerRight'] = report;
            report = function() { // Original name: headerTitle
                tango = _closure1_slot7;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 7;
                entity = zulu[entity];
                zulu = undefined;
                entity = mike.bind(zulu)(entity);
                mike = entity.NavigatorHeader;
                entity = {};
                report = _closure1_slot10;
                report = report.LIMIT;
                entity['title'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            mike['headerTitle'] = report;
            tango = function() { // Original name: render
                tango = _closure1_slot7;
                zulu = _closure1_slot14;
                mike = {'title': 'Everybody to the limit.', 'emoji': '👏', 'action': 'Everybody come on fhqwhgads!', 'onAction': null, 'secondaryAction': 'Push that fh-h-h-h-wqhgad', 'onSecondaryAction': null, 'disclaimer': 'The cheat is to the limit.'};
                oscar = _closure1_slot1;
                report = _closure1_slot2;
                entity = 8;
                report = report[entity];
                entity = undefined;
                report = oscar.bind(entity)(report);
                report = report.pop;
                mike['onAction'] = report;
                report = function() { // Original name: onSecondaryAction
                    zulu = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 12;
                    mike = mike[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.openURL;
                    entity = 'https://www.youtube.com/watch?v=votBDwhTu1E';
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                mike['onSecondaryAction'] = report;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            mike['render'] = tango;
            entity[zulu] = mike;
            return entity;
        };
        entity = new Array(0);
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = function() { // Original name: DemoModal
        entity = _closure1_slot11;
        tango = undefined;
        oscar = entity.bind(tango)();
        zulu = _closure1_slot7;
        mike = _closure1_slot0;
        golf = _closure1_slot2;
        entity = 13;
        entity = golf[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.Modal;
        entity = {};
        entity['screens'] = oscar;
        report = _closure1_slot10;
        report = report.START;
        entity['initialRouteName'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = function() { // Original name: DemoStepModal
        entity = _closure1_slot11;
        tango = undefined;
        golf = entity.bind(tango)();
        oscar = _closure1_slot4;
        zulu = oscar.useMemo;
        mike = function() {
            entity = _closure1_slot10;
            zulu = entity.START;
            entity = new Array(5);
            entity[0] = zulu;
            zulu = _closure1_slot10;
            zulu = zulu.WHO_DAT;
            entity[1] = zulu;
            zulu = _closure1_slot10;
            zulu = zulu.EVERYBODY;
            entity[2] = zulu;
            zulu = _closure1_slot10;
            zulu = zulu.JOCKIN;
            entity[3] = zulu;
            mike = _closure1_slot10;
            mike = mike.LIMIT;
            entity[4] = mike;
            return entity;
        };
        entity = new Array(0);
        oscar = zulu.bind(oscar)(mike, entity);
        zulu = _closure1_slot7;
        mike = _closure1_slot0;
        options = _closure1_slot2;
        entity = 14;
        entity = options[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.StepModal;
        entity = {};
        entity['screens'] = golf;
        entity['steps'] = oscar;
        report = _closure1_slot10;
        report = report.START;
        entity['initialRouteName'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot13 = entity;
    entity = function(argFoo) { // Original name: DemoScreen
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            source = entity.title;
            record = entity.emoji;
            update = entity.action;
            echo = entity.onAction;
            sizing = entity.secondaryAction;
            kilo = entity.onSecondaryAction;
            result = entity.disclaimer;
            oscar = entity.footer;
            offset = entity.children;
            entity = _closure1_slot9;
            tango = undefined;
            control = entity.bind(tango)();
            zulu = _closure1_slot8;
            golf = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 15;
            entity = verify[entity];
            entity = golf.bind(tango)(entity);
            mike = entity.ModalScreen;
            entity = {};
            options = _closure1_slot8;
            report = 16;
            report = verify[report];
            report = golf.bind(tango)(report);
            golf = report.ModalContent;
            report = {};
            yankee = null;
            foxtrot = yankee != record;
            if(!foxtrot) { _fun00002_ip = 223; continue _fun00001 }
 132:
            output = _closure1_slot7;
            backup = _closure1_slot5;
            verify = {};
            vacuum = control.emojiContainer;
            verify['style'] = vacuum;
            config = _closure1_slot7;
            sequence = _closure1_slot0;
            context = _closure1_slot2;
            vacuum = 17;
            vacuum = context[vacuum];
            vacuum = sequence.bind(tango)(vacuum);
            sequence = vacuum.Text;
            vacuum = {};
            context = 'heading-xxl/medium';
            vacuum['variant'] = context;
            context = control.emoji;
            vacuum['style'] = context;
            vacuum['children'] = record;
            vacuum = config.bind(tango)(sequence, vacuum);
            verify['children'] = vacuum;
            foxtrot = output.bind(tango)(backup, verify);
 223:
            verify = new Array(3);
            verify[0] = foxtrot;
            output = _closure1_slot7;
            backup = _closure1_slot0;
            vacuum = _closure1_slot2;
            foxtrot = 17;
            foxtrot = vacuum[foxtrot];
            foxtrot = backup.bind(tango)(foxtrot);
            backup = foxtrot.Text;
            foxtrot = {'accessibilityRole': 'header', 'variant': 'heading-xl/bold', 'color': 'header-primary'};
            control = control.title;
            foxtrot['style'] = control;
            foxtrot['children'] = source;
            foxtrot = output.bind(tango)(backup, foxtrot);
            verify[1] = foxtrot;
            verify[2] = offset;
            report['children'] = verify;
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            if(!(yankee == oscar)) { _fun00002_ip = 555; continue _fun00001 }
 326:
            verify = _closure1_slot8;
            options = _closure1_slot0;
            offset = _closure1_slot2;
            golf = 18;
            golf = offset[golf];
            golf = options.bind(tango)(golf);
            options = golf.ModalFooter;
            golf = {};
            foxtrot = yankee != result;
            if(!foxtrot) { _fun00002_ip = 407; continue _fun00001 }
 365:
            output = _closure1_slot7;
            backup = _closure1_slot0;
            source = _closure1_slot2;
            offset = 19;
            offset = source[offset];
            offset = backup.bind(tango)(offset);
            backup = offset.ModalDisclaimer;
            offset = {};
            offset['children'] = result;
            foxtrot = output.bind(tango)(backup, offset);
 407:
            offset = new Array(3);
            offset[0] = foxtrot;
            foxtrot = yankee != update;
            if(!foxtrot) { _fun00002_ip = 476; continue _fun00001 }
 422:
            result = _closure1_slot7;
            output = _closure1_slot0;
            source = _closure1_slot2;
            backup = 20;
            backup = source[backup];
            backup = output.bind(tango)(backup);
            output = backup.ModalActionButton;
            backup = {};
            source = 'primary';
            backup['variant'] = source;
            backup['text'] = update;
            backup['onPress'] = echo;
            foxtrot = result.bind(tango)(output, backup);
 476:
            offset[1] = foxtrot;
            yankee = yankee != sizing;
            if(!yankee) { _fun00002_ip = 541; continue _fun00001 }
 487:
            backup = _closure1_slot7;
            foxtrot = _closure1_slot0;
            output = _closure1_slot2;
            romeo = 20;
            romeo = output[romeo];
            romeo = foxtrot.bind(tango)(romeo);
            foxtrot = romeo.ModalActionButton;
            romeo = {};
            output = 'secondary';
            romeo['variant'] = output;
            romeo['text'] = sizing;
            romeo['onPress'] = kilo;
            yankee = backup.bind(tango)(foxtrot, romeo);
 541:
            offset[2] = yankee;
            golf['children'] = offset;
            oscar = verify.bind(tango)(options, golf);
 555:
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot14 = entity;
    entity = function(argFoo) { // Original name: SwitchesScreen
        entity = argFoo;
        foxtrot = entity.onAction;
        entity = _closure1_slot9;
        tango = undefined;
        romeo = entity.bind(tango)();
        zulu = 'I said ooh ah fhqwhgads, I said ooh ah fhqhgads!';
        mike = zulu.split;
        entity = ' ';
        oscar = mike.bind(zulu)(entity);
        var _closure2_slot0 = oscar;
        zulu = _closure1_slot4;
        mike = zulu.useState;
        report = oscar.map;
        entity = function() {
            entity = false;
            return entity;
        };
        entity = report.bind(oscar)(entity);
        zulu = mike.bind(zulu)(entity);
        mike = _closure1_slot3;
        entity = 2;
        mike = mike.bind(tango)(zulu, entity);
        entity = 0;
        output = mike[entity];
        entity = 1;
        entity = mike[entity];
        var _closure2_slot1 = entity;
        zulu = _closure1_slot8;
        mike = _closure1_slot14;
        entity = {'title': 'Everybody come on fhqwhgads.', 'emoji': '👏'};
        yankee = _closure1_slot7;
        golf = _closure1_slot0;
        verify = _closure1_slot2;
        oscar = 21;
        report = verify[oscar];
        report = golf.bind(tango)(report);
        offset = report.ModalFloatingAction;
        report = {};
        sizing = output.some;
        backup = function(argFoo) {
            entity = argFoo;
            return entity;
        };
        backup = sizing.bind(output)(backup);
        report['isVisible'] = backup;
        backup = romeo.screen;
        backup = backup.backgroundColor;
        report['floatingBackgroundColor'] = backup;
        backup = 'Come on fhqwhgads';
        report['text'] = backup;
        report['onPress'] = foxtrot;
        report = yankee.bind(tango)(offset, report);
        entity['footer'] = report;
        yankee = _closure1_slot7;
        offset = _closure1_slot5;
        report = {};
        romeo = romeo.tableRows;
        report['style'] = romeo;
        backup = _closure1_slot7;
        romeo = 22;
        romeo = verify[romeo];
        romeo = golf.bind(tango)(romeo);
        foxtrot = romeo.TableRowGroup;
        romeo = {};
        sizing = false;
        romeo['hasIcons'] = sizing;
        sizing = output.map;
        kilo = function(argFoo, argBar) {
            report = argBar;
            var _closure3_slot0 = report;
            tango = _closure1_slot7;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 23;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.TableSwitchRow;
            entity = {};
            golf = _closure2_slot0;
            golf = golf[report];
            entity['label'] = golf;
            golf = argFoo;
            entity['value'] = golf;
            oscar = function(argFoo) { // Original name: onValueChange
                entity = argFoo;
                var _closure4_slot0 = entity;
                zulu = _closure2_slot1;
                entity = undefined;
                mike = function(argFoo) {
                    zulu = argFoo;
                    mike = zulu.map;
                    entity = function(argFoo, argBar) {
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            entity = argFoo;
                            zulu = _closure3_slot0;
                            mike = argBar;
                            if(!(mike === zulu)) { _fun00004_ip = 24; continue _fun00003 }
 17:
                            entity = _closure4_slot0;
 24:
                            return entity;
                        }
                    };
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            entity['onValueChange'] = oscar;
            entity = tango.bind(zulu)(mike, entity, report);
            return entity;
        };
        kilo = sizing.bind(output)(kilo);
        romeo['children'] = kilo;
        romeo = backup.bind(tango)(foxtrot, romeo);
        report['children'] = romeo;
        offset = yankee.bind(tango)(offset, report);
        report = new Array(2);
        report[0] = offset;
        options = _closure1_slot7;
        oscar = verify[oscar];
        oscar = golf.bind(tango)(oscar);
        golf = oscar.ModalFloatingActionSpacer;
        oscar = {};
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot15 = entity;
    entity = function() { // Original name: openDemoModal
        tango = _closure1_slot1;
        zulu = _closure1_slot2;
        entity = 8;
        zulu = zulu[entity];
        entity = undefined;
        tango = tango.bind(entity)(zulu);
        zulu = tango.push;
        mike = _closure1_slot12;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    var _closure1_slot16 = entity;
    entity = function() { // Original name: openDemoStepModal
        tango = _closure1_slot1;
        zulu = _closure1_slot2;
        entity = 8;
        zulu = zulu[entity];
        entity = undefined;
        tango = tango.bind(entity)(zulu);
        zulu = tango.push;
        mike = _closure1_slot13;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    var _closure1_slot17 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    tango = tango.ScrollView;
    var _closure1_slot6 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    offset = 16;
    verify = {'flex': 1, 'alignItems': 'center', 'padding': 16, 'gap': 16};
    tango['container'] = verify;
    verify = {};
    yankee = 5;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = foxtrot;
    tango['screen'] = verify;
    verify = {'alignItems': 'center', 'justifyContent': 'center', 'width': 80, 'height': 80, 'borderRadius': null, 'backgroundColor': null, 'marginBottom': 16};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.round;
    verify['borderRadius'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = yankee;
    tango['emojiContainer'] = verify;
    verify = {'fontSize': 48, 'lineHeight': 80};
    tango['emoji'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tango['title'] = verify;
    verify = {};
    offset = '100%';
    verify['width'] = offset;
    tango['tableRows'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = {};
    golf = 'Come on fhqwhgads';
    tango['START'] = golf;
    golf = "Who's that?";
    tango['WHO_DAT'] = golf;
    golf = 'Everybody come on fhqwhgads';
    tango['EVERYBODY'] = golf;
    golf = "I see you jockin' me";
    tango['JOCKIN'] = golf;
    golf = 'Everybody to the limit';
    tango['LIMIT'] = golf;
    var _closure1_slot10 = tango;
    tango = 25;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/design_system/UserSettingsDesignSystemModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: UserSettingsDesignSystemModal
        entity = _closure1_slot9;
        tango = undefined;
        options = entity.bind(tango)();
        zulu = _closure1_slot7;
        mike = _closure1_slot6;
        entity = {};
        golf = _closure1_slot8;
        oscar = _closure1_slot5;
        report = {};
        options = options.container;
        report['style'] = options;
        backup = _closure1_slot7;
        offset = _closure1_slot0;
        foxtrot = _closure1_slot2;
        verify = 24;
        options = foxtrot[verify];
        options = offset.bind(tango)(options);
        yankee = options.Button;
        options = {};
        kilo = _closure1_slot16;
        options['onPress'] = kilo;
        kilo = 'Show Modal';
        options['text'] = kilo;
        yankee = backup.bind(tango)(yankee, options);
        options = new Array(2);
        options[0] = yankee;
        yankee = _closure1_slot7;
        verify = foxtrot[verify];
        verify = offset.bind(tango)(verify);
        offset = verify.Button;
        verify = {};
        romeo = _closure1_slot17;
        verify['onPress'] = romeo;
        romeo = 'Show Stepped Modal';
        verify['text'] = romeo;
        verify = yankee.bind(tango)(offset, verify);
        options[1] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();