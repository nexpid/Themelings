// app/modules/user_settings/native/design_system/UserSettingsDesignSystemModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: useScreens
        zuuluu = _closure1_slot0;
        michal = _closure1_slot2;
        entity = 6;
        michal = michal[entity];
        entity = undefined;
        tangon = zuuluu.bind(entity)(michal);
        zuuluu = tangon.useNavigatorScreens;
        michal = function() {
            entity = {};
            zuuluu = _closure1_slot10;
            verify = zuuluu.START;
            zuuluu = {};
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            report = 7;
            offset = option[report];
            oscard = undefined;
            backup = golfie.bind(oscard)(offset);
            romeon = backup.getHeaderCloseButton;
            foxtra = _closure1_slot1;
            offset = 8;
            yankee = option[offset];
            yankee = foxtra.bind(oscard)(yankee);
            yankee = yankee.pop;
            yankee = romeon.bind(backup)(yankee);
            zuuluu['headerLeft'] = yankee;
            yankee = function() { // Original name: headerRight
                tangon = _closure1_slot7;
                offset = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 9;
                entity = golfie[entity];
                zuuluu = undefined;
                entity = offset.bind(zuuluu)(entity);
                michal = entity.HeaderActionButton;
                entity = {};
                oscard = 10;
                option = golfie[oscard];
                option = offset.bind(zuuluu)(option);
                verify = option.intl;
                option = verify.string;
                oscard = golfie[oscard];
                oscard = offset.bind(zuuluu)(oscard);
                oscard = oscard.t;
                oscard = oscard.5WxrcX;
                oscard = option.bind(verify)(oscard);
                entity['text'] = oscard;
                oscard = _closure1_slot1;
                report = 8;
                report = golfie[report];
                report = oscard.bind(zuuluu)(report);
                report = report.pop;
                entity['onPress'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            zuuluu['headerRight'] = yankee;
            yankee = function() { // Original name: headerTitle
                tangon = _closure1_slot7;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 7;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.NavigatorHeader;
                entity = {};
                report = _closure1_slot10;
                report = report.START;
                entity['title'] = report;
                report = 'I said come on fhqwhgads';
                entity['subtitle'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            zuuluu['headerTitle'] = yankee;
            yankee = function(argFoo, argBar) { // Original name: render
                entity = argBar;
                var _closure4_slot0 = entity;
                tangon = _closure1_slot7;
                zuuluu = _closure1_slot14;
                michal = {'title': 'Come on fhqwhgads.', 'emoji': '😎', 'action': 'Everybody to the limit', 'onAction': null, 'secondaryAction': 'Maybe later', 'onSecondaryAction': null, 'disclaimer': 'I said come on fhqwhgads.'};
                report = function() { // Original name: onAction
                    zuuluu = _closure4_slot0;
                    michal = zuuluu.push;
                    entity = _closure1_slot10;
                    entity = entity.WHO_DAT;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                michal['onAction'] = report;
                oscard = _closure1_slot1;
                report = _closure1_slot2;
                entity = 8;
                report = report[entity];
                entity = undefined;
                report = oscard.bind(entity)(report);
                report = report.pop;
                michal['onSecondaryAction'] = report;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            zuuluu['render'] = yankee;
            entity[verify] = zuuluu;
            zuuluu = _closure1_slot10;
            verify = zuuluu.WHO_DAT;
            zuuluu = {};
            yankee = option[report];
            romeon = golfie.bind(oscard)(yankee);
            yankee = romeon.getHeaderBackButton;
            yankee = yankee.bind(romeon)();
            zuuluu['headerLeft'] = yankee;
            yankee = option[report];
            backup = golfie.bind(oscard)(yankee);
            romeon = backup.getHeaderCloseButton;
            yankee = option[offset];
            yankee = foxtra.bind(oscard)(yankee);
            yankee = yankee.pop;
            yankee = romeon.bind(backup)(yankee);
            zuuluu['headerRight'] = yankee;
            yankee = function() { // Original name: headerTitle
                tangon = _closure1_slot7;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 7;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.NavigatorHeader;
                entity = {};
                report = _closure1_slot10;
                report = report.WHO_DAT;
                entity['title'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            zuuluu['headerTitle'] = yankee;
            yankee = function(argFoo, argBar) { // Original name: render
                entity = argBar;
                var _closure4_slot0 = entity;
                tangon = _closure1_slot7;
                zuuluu = _closure1_slot14;
                michal = {'title': "Who's that?", 'emoji': '💿', 'action': "It's to the limit"};
                report = function() { // Original name: onAction
                    zuuluu = _closure4_slot0;
                    michal = zuuluu.push;
                    entity = _closure1_slot10;
                    entity = entity.EVERYBODY;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                michal['onAction'] = report;
                golfie = _closure1_slot7;
                oscard = _closure1_slot0;
                report = _closure1_slot2;
                entity = 11;
                report = report[entity];
                entity = undefined;
                report = oscard.bind(entity)(report);
                oscard = report.TextInput;
                report = {};
                option = 'My friend Jake';
                report['placeholder'] = option;
                report = golfie.bind(entity)(oscard, report);
                michal['children'] = report;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            zuuluu['render'] = yankee;
            entity[verify] = zuuluu;
            zuuluu = _closure1_slot10;
            verify = zuuluu.EVERYBODY;
            zuuluu = {};
            yankee = option[report];
            romeon = golfie.bind(oscard)(yankee);
            yankee = romeon.getHeaderBackButton;
            yankee = yankee.bind(romeon)();
            zuuluu['headerLeft'] = yankee;
            yankee = option[report];
            backup = golfie.bind(oscard)(yankee);
            romeon = backup.getHeaderCloseButton;
            yankee = option[offset];
            yankee = foxtra.bind(oscard)(yankee);
            yankee = yankee.pop;
            yankee = romeon.bind(backup)(yankee);
            zuuluu['headerRight'] = yankee;
            yankee = function() { // Original name: headerTitle
                tangon = _closure1_slot7;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 7;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.NavigatorHeader;
                entity = {};
                report = _closure1_slot10;
                report = report.EVERYBODY;
                entity['title'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            zuuluu['headerTitle'] = yankee;
            yankee = function(argFoo, argBar) { // Original name: render
                michal = argBar;
                var _closure4_slot0 = michal;
                tangon = _closure1_slot7;
                zuuluu = _closure1_slot15;
                michal = {};
                entity = function() { // Original name: onAction
                    zuuluu = _closure4_slot0;
                    michal = zuuluu.push;
                    entity = _closure1_slot10;
                    entity = entity.JOCKIN;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                michal['onAction'] = entity;
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            zuuluu['render'] = yankee;
            entity[verify] = zuuluu;
            zuuluu = _closure1_slot10;
            verify = zuuluu.JOCKIN;
            zuuluu = {};
            yankee = option[report];
            romeon = golfie.bind(oscard)(yankee);
            yankee = romeon.getHeaderBackButton;
            yankee = yankee.bind(romeon)();
            zuuluu['headerLeft'] = yankee;
            yankee = option[report];
            romeon = golfie.bind(oscard)(yankee);
            yankee = romeon.getHeaderCloseButton;
            offset = option[offset];
            offset = foxtra.bind(oscard)(offset);
            offset = offset.pop;
            offset = yankee.bind(romeon)(offset);
            zuuluu['headerRight'] = offset;
            offset = function() { // Original name: headerTitle
                tangon = _closure1_slot7;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 7;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.NavigatorHeader;
                entity = {};
                report = _closure1_slot10;
                report = report.JOCKIN;
                entity['title'] = report;
                report = "Tryin' to play like, you know me";
                entity['subtitle'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            zuuluu['headerTitle'] = offset;
            offset = function(argFoo, argBar) { // Original name: render
                michal = argBar;
                var _closure4_slot0 = michal;
                tangon = _closure1_slot7;
                zuuluu = _closure1_slot14;
                michal = {'title': "I see you jockin' me.", 'emoji': '🔥', 'action': "I'm like come on fhqwhgads", 'onAction': null, 'disclaimer': "Tryin' to play like, you know me."};
                entity = function() { // Original name: onAction
                    zuuluu = _closure4_slot0;
                    michal = zuuluu.push;
                    entity = _closure1_slot10;
                    entity = entity.LIMIT;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                michal['onAction'] = entity;
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            zuuluu['render'] = offset;
            entity[verify] = zuuluu;
            michal = _closure1_slot10;
            zuuluu = michal.LIMIT;
            michal = {};
            report = option[report];
            oscard = golfie.bind(oscard)(report);
            report = oscard.getHeaderBackButton;
            report = report.bind(oscard)();
            michal['headerLeft'] = report;
            report = function() { // Original name: headerRight
                tangon = _closure1_slot7;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 7;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.HeaderSubmittingIndicator;
                entity = {};
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            michal['headerRight'] = report;
            report = function() { // Original name: headerTitle
                tangon = _closure1_slot7;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 7;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.NavigatorHeader;
                entity = {};
                report = _closure1_slot10;
                report = report.LIMIT;
                entity['title'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            michal['headerTitle'] = report;
            tangon = function() { // Original name: render
                tangon = _closure1_slot7;
                zuuluu = _closure1_slot14;
                michal = {'title': 'Everybody to the limit.', 'emoji': '👏', 'action': 'Everybody come on fhqwhgads!', 'onAction': null, 'secondaryAction': 'Push that fh-h-h-h-wqhgad', 'onSecondaryAction': null, 'disclaimer': 'The cheat is to the limit.'};
                oscard = _closure1_slot1;
                report = _closure1_slot2;
                entity = 8;
                report = report[entity];
                entity = undefined;
                report = oscard.bind(entity)(report);
                report = report.pop;
                michal['onAction'] = report;
                report = function() { // Original name: onSecondaryAction
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 12;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.openURL;
                    entity = 'https://www.youtube.com/watch?v=votBDwhTu1E';
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                michal['onSecondaryAction'] = report;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            michal['render'] = tangon;
            entity[zuuluu] = michal;
            return entity;
        };
        entity = new Array(0);
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = function() { // Original name: DemoModal
        entity = _closure1_slot11;
        tangon = undefined;
        oscard = entity.bind(tangon)();
        zuuluu = _closure1_slot7;
        michal = _closure1_slot0;
        golfie = _closure1_slot2;
        entity = 13;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Modal;
        entity = {};
        entity['screens'] = oscard;
        report = _closure1_slot10;
        report = report.START;
        entity['initialRouteName'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = function() { // Original name: DemoStepModal
        entity = _closure1_slot11;
        tangon = undefined;
        golfie = entity.bind(tangon)();
        oscard = _closure1_slot4;
        zuuluu = oscard.useMemo;
        michal = function() {
            entity = _closure1_slot10;
            zuuluu = entity.START;
            entity = new Array(5);
            entity[0] = zuuluu;
            zuuluu = _closure1_slot10;
            zuuluu = zuuluu.WHO_DAT;
            entity[1] = zuuluu;
            zuuluu = _closure1_slot10;
            zuuluu = zuuluu.EVERYBODY;
            entity[2] = zuuluu;
            zuuluu = _closure1_slot10;
            zuuluu = zuuluu.JOCKIN;
            entity[3] = zuuluu;
            michal = _closure1_slot10;
            michal = michal.LIMIT;
            entity[4] = michal;
            return entity;
        };
        entity = new Array(0);
        oscard = zuuluu.bind(oscard)(michal, entity);
        zuuluu = _closure1_slot7;
        michal = _closure1_slot0;
        option = _closure1_slot2;
        entity = 14;
        entity = option[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.StepModal;
        entity = {};
        entity['screens'] = golfie;
        entity['steps'] = oscard;
        report = _closure1_slot10;
        report = report.START;
        entity['initialRouteName'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot13 = entity;
    entity = function(argFoo) { // Original name: DemoScreen
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            source = entity.title;
            record = entity.emoji;
            update = entity.action;
            echoed = entity.onAction;
            sizing = entity.secondaryAction;
            kiloes = entity.onSecondaryAction;
            result = entity.disclaimer;
            oscard = entity.footer;
            offset = entity.children;
            entity = _closure1_slot9;
            tangon = undefined;
            ctrled = entity.bind(tangon)();
            zuuluu = _closure1_slot8;
            golfie = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 15;
            entity = verify[entity];
            entity = golfie.bind(tangon)(entity);
            michal = entity.ModalScreen;
            entity = {};
            option = _closure1_slot8;
            report = 16;
            report = verify[report];
            report = golfie.bind(tangon)(report);
            golfie = report.ModalContent;
            report = {};
            yankee = null;
            foxtra = yankee != record;
            if(!foxtra) { _fun00002_ip = 223; continue _fun00001 }
 132:
            output = _closure1_slot7;
            backup = _closure1_slot5;
            verify = {};
            vacuum = ctrled.emojiContainer;
            verify['style'] = vacuum;
            config = _closure1_slot7;
            sequen = _closure1_slot0;
            cntext = _closure1_slot2;
            vacuum = 17;
            vacuum = cntext[vacuum];
            vacuum = sequen.bind(tangon)(vacuum);
            sequen = vacuum.Text;
            vacuum = {};
            cntext = 'heading-xxl/medium';
            vacuum['variant'] = cntext;
            cntext = ctrled.emoji;
            vacuum['style'] = cntext;
            vacuum['children'] = record;
            vacuum = config.bind(tangon)(sequen, vacuum);
            verify['children'] = vacuum;
            foxtra = output.bind(tangon)(backup, verify);
 223:
            verify = new Array(3);
            verify[0] = foxtra;
            output = _closure1_slot7;
            backup = _closure1_slot0;
            vacuum = _closure1_slot2;
            foxtra = 17;
            foxtra = vacuum[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            backup = foxtra.Text;
            foxtra = {'accessibilityRole': 'header', 'variant': 'heading-xl/bold', 'color': 'header-primary'};
            ctrled = ctrled.title;
            foxtra['style'] = ctrled;
            foxtra['children'] = source;
            foxtra = output.bind(tangon)(backup, foxtra);
            verify[1] = foxtra;
            verify[2] = offset;
            report['children'] = verify;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = golfie;
            if(!(yankee == oscard)) { _fun00002_ip = 555; continue _fun00001 }
 326:
            verify = _closure1_slot8;
            option = _closure1_slot0;
            offset = _closure1_slot2;
            golfie = 18;
            golfie = offset[golfie];
            golfie = option.bind(tangon)(golfie);
            option = golfie.ModalFooter;
            golfie = {};
            foxtra = yankee != result;
            if(!foxtra) { _fun00002_ip = 407; continue _fun00001 }
 365:
            output = _closure1_slot7;
            backup = _closure1_slot0;
            source = _closure1_slot2;
            offset = 19;
            offset = source[offset];
            offset = backup.bind(tangon)(offset);
            backup = offset.ModalDisclaimer;
            offset = {};
            offset['children'] = result;
            foxtra = output.bind(tangon)(backup, offset);
 407:
            offset = new Array(3);
            offset[0] = foxtra;
            foxtra = yankee != update;
            if(!foxtra) { _fun00002_ip = 476; continue _fun00001 }
 422:
            result = _closure1_slot7;
            output = _closure1_slot0;
            source = _closure1_slot2;
            backup = 20;
            backup = source[backup];
            backup = output.bind(tangon)(backup);
            output = backup.ModalActionButton;
            backup = {};
            source = 'primary';
            backup['variant'] = source;
            backup['text'] = update;
            backup['onPress'] = echoed;
            foxtra = result.bind(tangon)(output, backup);
 476:
            offset[1] = foxtra;
            yankee = yankee != sizing;
            if(!yankee) { _fun00002_ip = 541; continue _fun00001 }
 487:
            backup = _closure1_slot7;
            foxtra = _closure1_slot0;
            output = _closure1_slot2;
            romeon = 20;
            romeon = output[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            foxtra = romeon.ModalActionButton;
            romeon = {};
            output = 'secondary';
            romeon['variant'] = output;
            romeon['text'] = sizing;
            romeon['onPress'] = kiloes;
            yankee = backup.bind(tangon)(foxtra, romeon);
 541:
            offset[2] = yankee;
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 555:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot14 = entity;
    entity = function(argFoo) { // Original name: SwitchesScreen
        entity = argFoo;
        foxtra = entity.onAction;
        entity = _closure1_slot9;
        tangon = undefined;
        romeon = entity.bind(tangon)();
        zuuluu = 'I said ooh ah fhqwhgads, I said ooh ah fhqhgads!';
        michal = zuuluu.split;
        entity = ' ';
        oscard = michal.bind(zuuluu)(entity);
        var _closure2_slot0 = oscard;
        zuuluu = _closure1_slot4;
        michal = zuuluu.useState;
        report = oscard.map;
        entity = function() {
            entity = false;
            return entity;
        };
        entity = report.bind(oscard)(entity);
        zuuluu = michal.bind(zuuluu)(entity);
        michal = _closure1_slot3;
        entity = 2;
        michal = michal.bind(tangon)(zuuluu, entity);
        entity = 0;
        output = michal[entity];
        entity = 1;
        entity = michal[entity];
        var _closure2_slot1 = entity;
        zuuluu = _closure1_slot8;
        michal = _closure1_slot14;
        entity = {'title': 'Everybody come on fhqwhgads.', 'emoji': '👏'};
        yankee = _closure1_slot7;
        golfie = _closure1_slot0;
        verify = _closure1_slot2;
        oscard = 21;
        report = verify[oscard];
        report = golfie.bind(tangon)(report);
        offset = report.ModalFloatingAction;
        report = {};
        sizing = output.some;
        backup = function(argFoo) {
            entity = argFoo;
            return entity;
        };
        backup = sizing.bind(output)(backup);
        report['isVisible'] = backup;
        backup = romeon.screen;
        backup = backup.backgroundColor;
        report['floatingBackgroundColor'] = backup;
        backup = 'Come on fhqwhgads';
        report['text'] = backup;
        report['onPress'] = foxtra;
        report = yankee.bind(tangon)(offset, report);
        entity['footer'] = report;
        yankee = _closure1_slot7;
        offset = _closure1_slot5;
        report = {};
        romeon = romeon.tableRows;
        report['style'] = romeon;
        backup = _closure1_slot7;
        romeon = 22;
        romeon = verify[romeon];
        romeon = golfie.bind(tangon)(romeon);
        foxtra = romeon.TableRowGroup;
        romeon = {};
        sizing = false;
        romeon['hasIcons'] = sizing;
        sizing = output.map;
        kiloes = function(argFoo, argBar) {
            report = argBar;
            var _closure3_slot0 = report;
            tangon = _closure1_slot7;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 23;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.TableSwitchRow;
            entity = {};
            golfie = _closure2_slot0;
            golfie = golfie[report];
            entity['label'] = golfie;
            golfie = argFoo;
            entity['value'] = golfie;
            oscard = function(argFoo) { // Original name: onValueChange
                entity = argFoo;
                var _closure4_slot0 = entity;
                zuuluu = _closure2_slot1;
                entity = undefined;
                michal = function(argFoo) {
                    zuuluu = argFoo;
                    michal = zuuluu.map;
                    entity = function(argFoo, argBar) {
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            entity = argFoo;
                            zuuluu = _closure3_slot0;
                            michal = argBar;
                            if(!(michal === zuuluu)) { _fun00004_ip = 24; continue _fun00003 }
 17:
                            entity = _closure4_slot0;
 24:
                            return entity;
                        }
                    };
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity['onValueChange'] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity, report);
            return entity;
        };
        kiloes = sizing.bind(output)(kiloes);
        romeon['children'] = kiloes;
        romeon = backup.bind(tangon)(foxtra, romeon);
        report['children'] = romeon;
        offset = yankee.bind(tangon)(offset, report);
        report = new Array(2);
        report[0] = offset;
        option = _closure1_slot7;
        oscard = verify[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.ModalFloatingActionSpacer;
        oscard = {};
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot15 = entity;
    entity = function() { // Original name: openDemoModal
        tangon = _closure1_slot1;
        zuuluu = _closure1_slot2;
        entity = 8;
        zuuluu = zuuluu[entity];
        entity = undefined;
        tangon = tangon.bind(entity)(zuuluu);
        zuuluu = tangon.push;
        michal = _closure1_slot12;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    var _closure1_slot16 = entity;
    entity = function() { // Original name: openDemoStepModal
        tangon = _closure1_slot1;
        zuuluu = _closure1_slot2;
        entity = 8;
        zuuluu = zuuluu[entity];
        entity = undefined;
        tangon = tangon.bind(entity)(zuuluu);
        zuuluu = tangon.push;
        michal = _closure1_slot13;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    var _closure1_slot17 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot6 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    offset = 16;
    verify = {'flex': 1, 'alignItems': 'center', 'padding': 16, 'gap': 16};
    tangon['container'] = verify;
    verify = {};
    yankee = 5;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = foxtra;
    tangon['screen'] = verify;
    verify = {'alignItems': 'center', 'justifyContent': 'center', 'width': 80, 'height': 80, 'borderRadius': null, 'backgroundColor': null, 'marginBottom': 16};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.round;
    verify['borderRadius'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = yankee;
    tangon['emojiContainer'] = verify;
    verify = {'fontSize': 48, 'lineHeight': 80};
    tangon['emoji'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tangon['title'] = verify;
    verify = {};
    offset = '100%';
    verify['width'] = offset;
    tangon['tableRows'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = {};
    golfie = 'Come on fhqwhgads';
    tangon['START'] = golfie;
    golfie = "Who's that?";
    tangon['WHO_DAT'] = golfie;
    golfie = 'Everybody come on fhqwhgads';
    tangon['EVERYBODY'] = golfie;
    golfie = "I see you jockin' me";
    tangon['JOCKIN'] = golfie;
    golfie = 'Everybody to the limit';
    tangon['LIMIT'] = golfie;
    var _closure1_slot10 = tangon;
    tangon = 25;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/design_system/UserSettingsDesignSystemModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: UserSettingsDesignSystemModal
        entity = _closure1_slot9;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot7;
        michal = _closure1_slot6;
        entity = {};
        golfie = _closure1_slot8;
        oscard = _closure1_slot5;
        report = {};
        option = option.container;
        report['style'] = option;
        backup = _closure1_slot7;
        offset = _closure1_slot0;
        foxtra = _closure1_slot2;
        verify = 24;
        option = foxtra[verify];
        option = offset.bind(tangon)(option);
        yankee = option.Button;
        option = {};
        kiloes = _closure1_slot16;
        option['onPress'] = kiloes;
        kiloes = 'Show Modal';
        option['text'] = kiloes;
        yankee = backup.bind(tangon)(yankee, option);
        option = new Array(2);
        option[0] = yankee;
        yankee = _closure1_slot7;
        verify = foxtra[verify];
        verify = offset.bind(tangon)(verify);
        offset = verify.Button;
        verify = {};
        romeon = _closure1_slot17;
        verify['onPress'] = romeon;
        romeon = 'Show Stepped Modal';
        verify['text'] = romeon;
        verify = yankee.bind(tangon)(offset, verify);
        option[1] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();