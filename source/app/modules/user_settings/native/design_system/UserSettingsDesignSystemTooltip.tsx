// app/modules/user_settings/native/design_system/UserSettingsDesignSystemTooltip.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var7 = require;
    var3 = exports;
    var8 = dependencyMap;
    var _closure1_slot0 = var7;
    var _closure1_slot1 = var8;
    var4 = function useCanRotate() {
        var5 = _closure1_slot3;
        var3 = var5.useState;
        var2 = false;
        var6 = var3.bind(var5)(var2);
        var5 = _closure1_slot2;
        var3 = undefined;
        var2 = 2;
        var5 = var5.bind(var3)(var6, var2);
        var2 = 0;
        var3 = var5[var2];
        var _closure2_slot0 = var3;
        var2 = 1;
        var2 = var5[var2];
        var7 = _closure1_slot3;
        var6 = var7.useEffect;
        var5 = function() {
            _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
                var2 = _closure2_slot0;
                var4 = _closure1_slot0;
                var3 = _closure1_slot1;
                var1 = 5;
                var3 = var3[var1];
                var1 = undefined;
                var4 = var4.bind(var1)(var3);
                if(var2) { _fun0001_ip = 2; continue _fun0001 }
case 3:
                var2 = var4.lockOrientationForiOS;
                var2 = var2.bind(var4)();
                _fun0001_ip = 4; continue _fun0001;
case 2:
                var3 = var4.unlockOrientation;
                var2 = {};
                var5 = false;
                var2['unlockAfterRotatingToPreviousLock'] = var5;
                var2 = var3.bind(var4)(var2);
case 4:
                return var1;
            }
        };
        var5 = var6.bind(var7)(var5);
        var6 = _closure1_slot3;
        var5 = var6.useEffect;
        var4 = function() {
            var1 = function() {
                var3 = _closure1_slot0;
                var2 = _closure1_slot1;
                var1 = 5;
                var2 = var2[var1];
                var1 = undefined;
                var2 = var3.bind(var1)(var2);
                var1 = var2.lockOrientationForiOS;
                var1 = var1.bind(var2)();
                return var1;
            };
            return var1;
        };
        var1 = new Array(0);
        var1 = var5.bind(var6)(var4, var1);
        var1 = new Array(2);
        var1[0] = var3;
        var1[1] = var2;
        return var1;
    };
    var _closure1_slot10 = var4;
    var1 = function Content() {
        _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
case 0:
            var1 = _closure1_slot8;
            var4 = undefined;
            var13 = var1.bind(var4)();
            var2 = _closure1_slot3;
            var1 = var2.useState;
            var9 = false;
            var2 = var1.bind(var2)(var9);
            var1 = _closure1_slot2;
            var8 = 2;
            var2 = var1.bind(var4)(var2, var8);
            var5 = 0;
            var1 = var2[var5];
            var _closure2_slot0 = var1;
            var3 = 1;
            var2 = var2[var3];
            var _closure2_slot1 = var2;
            var2 = _closure1_slot10;
            var7 = var2.bind(var4)();
            var2 = _closure1_slot2;
            var2 = var2.bind(var4)(var7, var8);
            var16 = var2[var5];
            var15 = var2[var3];
            var7 = _closure1_slot3;
            var2 = var7.useState;
            var7 = var2.bind(var7)(var9);
            var2 = _closure1_slot2;
            var2 = var2.bind(var4)(var7, var8);
            var11 = var2[var5];
            var _closure2_slot2 = var11;
            var10 = var2[var3];
            var18 = 'Show tooltip';
            if(!var1) { _fun0002_ip = 5; continue _fun0002 }
case 6:
            var18 = 'Hide tooltip';
case 5:
            var5 = _closure1_slot3;
            var3 = var5.useRef;
            var2 = null;
            var20 = var3.bind(var5)(var2);
            var5 = _closure1_slot3;
            var3 = var5.useMemo;
            var2 = new Array(2);
            var2[0] = var11;
            var2[1] = var1;
            var1 = function() {
                _fun0003: for(var _fun0003_ip = 0; ; ) switch(_fun0003_ip) {
case 0:
                    var1 = {};
                    var2 = 'NEW';
                    var1['label'] = var2;
                    var4 = _closure2_slot2;
                    var3 = 'top';
                    if(!var4) { _fun0003_ip = 7; continue _fun0003 }
case 8:
                    var3 = 'bottom';
case 7:
                    var1['position'] = var3;
                    var2 = _closure2_slot0;
                    var1['visible'] = var2;
                    var2 = function onPress() {
                        var3 = _closure2_slot1;
                        var2 = undefined;
                        var1 = false;
                        var1 = var3.bind(var2)(var1);
                        return var1;
                    };
                    var1['onPress'] = var2;
                    return var1;
                }
            };
            var3 = var3.bind(var5)(var1, var2);
            var8 = _closure1_slot0;
            var12 = _closure1_slot1;
            var1 = 6;
            var1 = var12[var1];
            var2 = var8.bind(var4)(var1);
            var1 = var2.useTooltip;
            var1 = var1.bind(var2)(var20, var3);
            var3 = _closure1_slot7;
            var2 = _closure1_slot6;
            var1 = {};
            var9 = _closure1_slot5;
            var7 = _closure1_slot4;
            var5 = {};
            var13 = var13.container;
            var5['style'] = var13;
            var17 = _closure1_slot5;
            var13 = 7;
            var13 = var12[var13];
            var13 = var8.bind(var4)(var13);
            var14 = var13.Button;
            var13 = {};
            var13['ref'] = var20;
            var19 = function onPress() {
                var3 = _closure2_slot1;
                var1 = _closure2_slot0;
                var2 = !var1;
                var1 = undefined;
                var2 = var3.bind(var1)(var2);
                return var1;
            };
            var13['onPress'] = var19;
            var19 = 'primary';
            var13['variant'] = var19;
            var13['text'] = var18;
            var18 = 'md';
            var13['size'] = var18;
            var13 = var17.bind(var4)(var14, var13);
            var5['children'] = var13;
            var7 = var9.bind(var4)(var7, var5);
            var5 = new Array(4);
            var5[0] = var7;
            var14 = _closure1_slot5;
            var7 = 8;
            var9 = var12[var7];
            var9 = var8.bind(var4)(var9);
            var13 = var9.TableSwitchRow;
            var9 = {};
            var17 = 'Unlock Orientation';
            var9['label'] = var17;
            var9['value'] = var16;
            var9['onValueChange'] = var15;
            var9 = var14.bind(var4)(var13, var9);
            var5[1] = var9;
            var9 = _closure1_slot5;
            var7 = var12[var7];
            var7 = var8.bind(var4)(var7);
            var8 = var7.TableSwitchRow;
            var7 = {};
            var12 = 'Enable Bottom Position';
            var7['label'] = var12;
            var7['value'] = var11;
            var7['onValueChange'] = var10;
            var7 = var9.bind(var4)(var8, var7);
            var5[2] = var7;
            var8 = _closure1_slot5;
            var7 = _closure1_slot9;
            var6 = {};
            var6 = var8.bind(var4)(var7, var6);
            var5[3] = var6;
            var1['children'] = var5;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        }
    };
    var _closure1_slot11 = var1;
    var1 = global;
    var9 = var1.Object;
    var6 = var9.defineProperty;
    var2 = {};
    var1 = true;
    var2['value'] = var1;
    var1 = '__esModule';
    var1 = var6.bind(var9)(var3, var1, var2);
    var1 = 0;
    var6 = var8[var1];
    var2 = metroImportDefault;
    var1 = undefined;
    var2 = var2.bind(var1)(var6);
    var _closure1_slot2 = var2;
    var11 = 1;
    var6 = var8[var11];
    var2 = metroImportAll;
    var2 = var2.bind(var1)(var6);
    var _closure1_slot3 = var2;
    var2 = 2;
    var2 = var8[var2];
    var2 = var7.bind(var1)(var2);
    var2 = var2.View;
    var _closure1_slot4 = var2;
    var2 = 3;
    var2 = var8[var2];
    var2 = var7.bind(var1)(var2);
    var6 = var2.jsx;
    var _closure1_slot5 = var6;
    var6 = var2.Fragment;
    var _closure1_slot6 = var6;
    var2 = var2.jsxs;
    var _closure1_slot7 = var2;
    var2 = 4;
    var2 = var8[var2];
    var9 = var7.bind(var1)(var2);
    var6 = var9.createStyles;
    var2 = {};
    var10 = {'padding': 16, 'flex': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    var2['container'] = var10;
    var10 = {};
    var10['flex'] = var11;
    var2['flex'] = var10;
    var2 = var6.bind(var9)(var2);
    var _closure1_slot8 = var2;
    var2 = function TooltipNote() {
        var4 = _closure1_slot7;
        var6 = _closure1_slot0;
        var8 = _closure1_slot1;
        var5 = 9;
        var1 = var8[var5];
        var3 = undefined;
        var1 = var6.bind(var3)(var1);
        var2 = var1.Text;
        var1 = {};
        var9 = 'text-sm/normal';
        var1['variant'] = var9;
        var9 = {'padding': 16, 'paddingTop': 16};
        var1['style'] = var9;
        var7 = _closure1_slot5;
        var5 = var8[var5];
        var5 = var6.bind(var3)(var5);
        var6 = var5.Text;
        var5 = {'variant': 'text-sm/bold', 'children': ' <LayerScope/>'};
        var6 = var7.bind(var3)(var6, var5);
        var5 = ['Note: If your tooltip is not displaying or it is not in the right position/zIndex, consider adding or moving an existing'];
        var5[1] = var6;
        var6 = ' on the surface you expect to see the tooltip.';
        var5[2] = var6;
        var1['children'] = var5;
        var1 = var4.bind(var3)(var2, var1);
        return var1;
    };
    var _closure1_slot9 = var2;
    var6 = 12;
    var6 = var8[var6];
    var8 = var7.bind(var1)(var6);
    var7 = var8.fileFinishedImporting;
    var6 = 'modules/user_settings/native/design_system/UserSettingsDesignSystemTooltip.tsx';
    var6 = var7.bind(var8)(var6);
    var5 = function UserSettingsDesignSystemTooltip() {
        var1 = _closure1_slot8;
        var4 = undefined;
        var5 = var1.bind(var4)();
        var3 = _closure1_slot5;
        var6 = _closure1_slot0;
        var9 = _closure1_slot1;
        var1 = 10;
        var1 = var9[var1];
        var1 = var6.bind(var4)(var1);
        var2 = var1.SafeAreaPaddingView;
        var1 = {};
        var5 = var5.flex;
        var1['style'] = var5;
        var5 = true;
        var1['bottom'] = var5;
        var7 = _closure1_slot5;
        var5 = 11;
        var5 = var9[var5];
        var5 = var6.bind(var4)(var5);
        var6 = var5.LayerScope;
        var5 = {};
        var10 = _closure1_slot5;
        var9 = _closure1_slot11;
        var8 = {};
        var8 = var10.bind(var4)(var9, var8);
        var5['children'] = var8;
        var5 = var7.bind(var4)(var6, var5);
        var1['children'] = var5;
        var1 = var3.bind(var4)(var2, var1);
        return var1;
    };
    var3['default'] = var5;
    var3['useCanRotate'] = var4;
    var3['TooltipNote'] = var2;
    return var1;
})();