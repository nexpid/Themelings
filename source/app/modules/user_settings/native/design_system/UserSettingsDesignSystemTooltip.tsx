// app/modules/user_settings/native/design_system/UserSettingsDesignSystemTooltip.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    golfie = argBar;
    zuuluu = argFre;
    option = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = option;
    tangon = function() { // Original name: useCanRotate
        report = _closure1_slot3;
        zuuluu = report.useState;
        michal = false;
        oscard = zuuluu.bind(report)(michal);
        report = _closure1_slot2;
        zuuluu = undefined;
        michal = 2;
        report = report.bind(zuuluu)(oscard, michal);
        michal = 0;
        zuuluu = report[michal];
        var _closure2_slot0 = zuuluu;
        michal = 1;
        michal = report[michal];
        golfie = _closure1_slot3;
        oscard = golfie.useEffect;
        report = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = _closure2_slot0;
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot1;
                entity = 5;
                zuuluu = zuuluu[entity];
                entity = undefined;
                tangon = tangon.bind(entity)(zuuluu);
                if(michal) { _fun00002_ip = 47; continue _fun00001 }
 35:
                michal = tangon.lockOrientationForiOS;
                michal = michal.bind(tangon)();
                _fun00002_ip = 67; continue _fun00001;
 47:
                zuuluu = tangon.unlockOrientation;
                michal = {};
                report = false;
                michal['unlockAfterRotatingToPreviousLock'] = report;
                michal = zuuluu.bind(tangon)(michal);
 67:
                return entity;
            }
        };
        report = oscard.bind(golfie)(report);
        oscard = _closure1_slot3;
        report = oscard.useEffect;
        tangon = function() {
            entity = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot1;
                entity = 5;
                michal = michal[entity];
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                entity = michal.lockOrientationForiOS;
                entity = entity.bind(michal)();
                return entity;
            };
            return entity;
        };
        entity = new Array(0);
        entity = report.bind(oscard)(tangon, entity);
        entity = new Array(2);
        entity[0] = zuuluu;
        entity[1] = michal;
        return entity;
    };
    var _closure1_slot10 = tangon;
    entity = function() { // Original name: Content
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = _closure1_slot8;
            tangon = undefined;
            foxtra = entity.bind(tangon)();
            michal = _closure1_slot3;
            entity = michal.useState;
            verify = false;
            michal = entity.bind(michal)(verify);
            entity = _closure1_slot2;
            option = 2;
            michal = entity.bind(tangon)(michal, option);
            report = 0;
            entity = michal[report];
            var _closure2_slot0 = entity;
            zuuluu = 1;
            michal = michal[zuuluu];
            var _closure2_slot1 = michal;
            michal = _closure1_slot10;
            golfie = michal.bind(tangon)();
            michal = _closure1_slot2;
            michal = michal.bind(tangon)(golfie, option);
            sizing = michal[report];
            kiloes = michal[zuuluu];
            golfie = _closure1_slot3;
            michal = golfie.useState;
            golfie = michal.bind(golfie)(verify);
            michal = _closure1_slot2;
            michal = michal.bind(tangon)(golfie, option);
            yankee = michal[report];
            var _closure2_slot2 = yankee;
            offset = michal[zuuluu];
            result = 'Show tooltip';
            if(!entity) { _fun00004_ip = 142; continue _fun00003 }
 136:
            result = 'Hide tooltip';
 142:
            report = _closure1_slot3;
            zuuluu = report.useRef;
            michal = null;
            update = zuuluu.bind(report)(michal);
            report = _closure1_slot3;
            zuuluu = report.useMemo;
            michal = new Array(2);
            michal[0] = yankee;
            michal[1] = entity;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = {};
                    michal = 'NEW';
                    entity['label'] = michal;
                    tangon = _closure2_slot2;
                    zuuluu = 'top';
                    if(!tangon) { _fun00006_ip = 28; continue _fun00005 }
 24:
                    zuuluu = 'bottom';
 28:
                    entity['position'] = zuuluu;
                    michal = _closure2_slot0;
                    entity['visible'] = michal;
                    michal = function() { // Original name: onPress
                        zuuluu = _closure2_slot1;
                        michal = undefined;
                        entity = false;
                        entity = zuuluu.bind(michal)(entity);
                        return entity;
                    };
                    entity['onPress'] = michal;
                    return entity;
                }
            };
            zuuluu = zuuluu.bind(report)(entity, michal);
            option = _closure1_slot0;
            romeon = _closure1_slot1;
            entity = 6;
            entity = romeon[entity];
            michal = option.bind(tangon)(entity);
            entity = michal.useTooltip;
            entity = entity.bind(michal)(update, zuuluu);
            zuuluu = _closure1_slot7;
            michal = _closure1_slot6;
            entity = {};
            verify = _closure1_slot5;
            golfie = _closure1_slot4;
            report = {};
            foxtra = foxtra.container;
            report['style'] = foxtra;
            output = _closure1_slot5;
            foxtra = 7;
            foxtra = romeon[foxtra];
            foxtra = option.bind(tangon)(foxtra);
            backup = foxtra.Button;
            foxtra = {};
            foxtra['ref'] = update;
            echoed = function() { // Original name: onPress
                zuuluu = _closure2_slot1;
                entity = _closure2_slot0;
                michal = !entity;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            foxtra['onPress'] = echoed;
            echoed = 'primary';
            foxtra['variant'] = echoed;
            foxtra['text'] = result;
            result = 'md';
            foxtra['size'] = result;
            foxtra = output.bind(tangon)(backup, foxtra);
            report['children'] = foxtra;
            golfie = verify.bind(tangon)(golfie, report);
            report = new Array(4);
            report[0] = golfie;
            backup = _closure1_slot5;
            golfie = 8;
            verify = romeon[golfie];
            verify = option.bind(tangon)(verify);
            foxtra = verify.TableSwitchRow;
            verify = {};
            output = 'Unlock Orientation';
            verify['label'] = output;
            verify['value'] = sizing;
            verify['onValueChange'] = kiloes;
            verify = backup.bind(tangon)(foxtra, verify);
            report[1] = verify;
            verify = _closure1_slot5;
            golfie = romeon[golfie];
            golfie = option.bind(tangon)(golfie);
            option = golfie.TableSwitchRow;
            golfie = {};
            romeon = 'Enable Bottom Position';
            golfie['label'] = romeon;
            golfie['value'] = yankee;
            golfie['onValueChange'] = offset;
            golfie = verify.bind(tangon)(option, golfie);
            report[2] = golfie;
            option = _closure1_slot5;
            golfie = _closure1_slot9;
            oscard = {};
            oscard = option.bind(tangon)(golfie, oscard);
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot11 = entity;
    entity = global;
    verify = entity.Object;
    oscard = verify.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = oscard.bind(verify)(zuuluu, entity, michal);
    entity = 0;
    oscard = option[entity];
    michal = argBaz;
    entity = undefined;
    michal = michal.bind(entity)(oscard);
    var _closure1_slot2 = michal;
    yankee = 1;
    oscard = option[yankee];
    michal = argCor;
    michal = michal.bind(entity)(oscard);
    var _closure1_slot3 = michal;
    michal = 2;
    michal = option[michal];
    michal = golfie.bind(entity)(michal);
    michal = michal.View;
    var _closure1_slot4 = michal;
    michal = 3;
    michal = option[michal];
    michal = golfie.bind(entity)(michal);
    oscard = michal.jsx;
    var _closure1_slot5 = oscard;
    oscard = michal.Fragment;
    var _closure1_slot6 = oscard;
    michal = michal.jsxs;
    var _closure1_slot7 = michal;
    michal = 4;
    michal = option[michal];
    verify = golfie.bind(entity)(michal);
    oscard = verify.createStyles;
    michal = {};
    offset = {'padding': 16, 'flex': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    michal['container'] = offset;
    offset = {};
    offset['flex'] = yankee;
    michal['flex'] = offset;
    michal = oscard.bind(verify)(michal);
    var _closure1_slot8 = michal;
    michal = function() { // Original name: TooltipNote
        tangon = _closure1_slot7;
        oscard = _closure1_slot0;
        option = _closure1_slot1;
        report = 9;
        entity = option[report];
        zuuluu = undefined;
        entity = oscard.bind(zuuluu)(entity);
        michal = entity.Text;
        entity = {};
        verify = 'text-sm/normal';
        entity['variant'] = verify;
        verify = {'padding': 16, 'paddingTop': 16};
        entity['style'] = verify;
        golfie = _closure1_slot5;
        report = option[report];
        report = oscard.bind(zuuluu)(report);
        oscard = report.Text;
        report = {'variant': 'text-sm/bold', 'children': ' <LayerScope/>'};
        oscard = golfie.bind(zuuluu)(oscard, report);
        report = ['Note: If your tooltip is not displaying or it is not in the right position/zIndex, consider adding or moving an existing'];
        report[1] = oscard;
        oscard = ' on the surface you expect to see the tooltip.';
        report[2] = oscard;
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    var _closure1_slot9 = michal;
    oscard = 12;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/user_settings/native/design_system/UserSettingsDesignSystemTooltip.tsx';
    oscard = golfie.bind(option)(oscard);
    report = function() { // Original name: UserSettingsDesignSystemTooltip
        entity = _closure1_slot8;
        tangon = undefined;
        report = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        oscard = _closure1_slot0;
        verify = _closure1_slot1;
        entity = 10;
        entity = verify[entity];
        entity = oscard.bind(tangon)(entity);
        michal = entity.SafeAreaPaddingView;
        entity = {};
        report = report.flex;
        entity['style'] = report;
        report = true;
        entity['bottom'] = report;
        golfie = _closure1_slot5;
        report = 11;
        report = verify[report];
        report = oscard.bind(tangon)(report);
        oscard = report.LayerScope;
        report = {};
        offset = _closure1_slot5;
        verify = _closure1_slot11;
        option = {};
        option = offset.bind(tangon)(verify, option);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = report;
    zuuluu['useCanRotate'] = tangon;
    zuuluu['TooltipNote'] = michal;
    return entity;
})();