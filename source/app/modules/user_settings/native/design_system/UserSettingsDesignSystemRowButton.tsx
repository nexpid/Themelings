// app/modules/user_settings/native/design_system/UserSettingsDesignSystemRowButton.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot3 = golf;
    tango = tango.ScrollView;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/design_system/UserSettingsDesignSystemRowButton.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: UserSettingsDesignSystemRowButton
        tango = _closure1_slot6;
        zulu = _closure1_slot4;
        mike = {};
        options = _closure1_slot5;
        foxtrot = _closure1_slot0;
        output = _closure1_slot2;
        entity = 3;
        report = output[entity];
        entity = undefined;
        report = foxtrot.bind(entity)(report);
        oscar = report.FormSection;
        report = {};
        verify = 'Row Buttons';
        report['title'] = verify;
        verify = 4;
        offset = output[verify];
        offset = foxtrot.bind(entity)(offset);
        yankee = offset.Stack;
        offset = {};
        romeo = {};
        sizing = _closure1_slot1;
        kilo = 5;
        kilo = output[kilo];
        kilo = sizing.bind(entity)(kilo);
        kilo = kilo.spacing;
        kilo = kilo.PX_16;
        romeo['padding'] = kilo;
        offset['style'] = romeo;
        kilo = 6;
        romeo = output[kilo];
        romeo = foxtrot.bind(entity)(romeo);
        result = romeo.Text;
        romeo = {'variant': 'text-sm/normal', 'children': 'Row Button Row Buttons are full-width, high-emphasis buttons that are used as primary CTAs in a page.'};
        result = options.bind(entity)(result, romeo);
        romeo = new Array(2);
        romeo[0] = result;
        kilo = output[kilo];
        kilo = foxtrot.bind(entity)(kilo);
        result = kilo.Text;
        kilo = {'variant': 'text-sm/normal', 'children': 'Only stack up to 2 Row Buttons in a row to to prevent decision fatigue.'};
        kilo = options.bind(entity)(result, kilo);
        romeo[1] = kilo;
        offset['children'] = romeo;
        offset = tango.bind(entity)(yankee, offset);
        report['description'] = offset;
        golf = _closure1_slot3;
        offset = {};
        offset = options.bind(entity)(golf, offset);
        report['children'] = offset;
        oscar = options.bind(entity)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = {};
        offset = {};
        yankee = 16;
        offset['padding'] = yankee;
        oscar['style'] = offset;
        verify = output[verify];
        verify = foxtrot.bind(entity)(verify);
        offset = verify.Stack;
        verify = {};
        romeo = 7;
        yankee = output[romeo];
        yankee = foxtrot.bind(entity)(yankee);
        result = yankee.RowButton;
        yankee = {'variant': 'primary', 'icon': null, 'label': 'Primary Row Button'};
        kilo = 8;
        echo = output[kilo];
        echo = sizing.bind(entity)(echo);
        yankee['icon'] = echo;
        echo = function() { // Original name: onPress
            entity = undefined;
            return entity;
        };
        yankee['onPress'] = echo;
        result = options.bind(entity)(result, yankee);
        yankee = new Array(7);
        yankee[0] = result;
        result = output[romeo];
        result = foxtrot.bind(entity)(result);
        echo = result.RowButton;
        result = {'variant': 'primary', 'icon': null, 'label': 'Primary Row Button', 'subLabel': 'I am a high emphasis button with a subLabel'};
        update = output[kilo];
        update = sizing.bind(entity)(update);
        result['icon'] = update;
        update = function() { // Original name: onPress
            entity = undefined;
            return entity;
        };
        result['onPress'] = update;
        result = options.bind(entity)(echo, result);
        yankee[1] = result;
        result = output[romeo];
        result = foxtrot.bind(entity)(result);
        echo = result.RowButton;
        result = {'variant': 'secondary', 'icon': null, 'label': 'Secondary Row Button'};
        update = output[kilo];
        update = sizing.bind(entity)(update);
        result['icon'] = update;
        update = function() { // Original name: onPress
            entity = undefined;
            return entity;
        };
        result['onPress'] = update;
        result = options.bind(entity)(echo, result);
        yankee[2] = result;
        result = output[romeo];
        result = foxtrot.bind(entity)(result);
        echo = result.RowButton;
        result = {'icon': null, 'label': 'Secondary Row Button', 'subLabel': 'I am a high emphasis button with a subLabel'};
        update = output[kilo];
        update = sizing.bind(entity)(update);
        result['icon'] = update;
        update = function() { // Original name: onPress
            entity = undefined;
            return entity;
        };
        result['onPress'] = update;
        result = options.bind(entity)(echo, result);
        yankee[3] = result;
        result = output[romeo];
        result = foxtrot.bind(entity)(result);
        echo = result.RowButton;
        result = {'icon': null, 'label': 'Secondary Row Button', 'subLabel': 'I am a high-emphasis button with more text. You can fit quite a lot of text in a row button. The text will continue to wrap'};
        update = output[kilo];
        update = sizing.bind(entity)(update);
        result['icon'] = update;
        update = function() { // Original name: onPress
            entity = undefined;
            return entity;
        };
        result['onPress'] = update;
        result = options.bind(entity)(echo, result);
        yankee[4] = result;
        result = output[romeo];
        result = foxtrot.bind(entity)(result);
        echo = result.RowButton;
        result = {'icon': null, 'label': 'Row Button', 'subLabel': 'With a custom RowButton.Icon'};
        update = output[romeo];
        update = foxtrot.bind(entity)(update);
        update = update.RowButton;
        source = update.Icon;
        update = {};
        control = output[kilo];
        control = sizing.bind(entity)(control);
        update['source'] = control;
        control = 'boosting-pink';
        update['variant'] = control;
        update = options.bind(entity)(source, update);
        result['icon'] = update;
        update = function() { // Original name: onPress
            entity = undefined;
            return entity;
        };
        result['onPress'] = update;
        result = options.bind(entity)(echo, result);
        yankee[5] = result;
        romeo = output[romeo];
        romeo = foxtrot.bind(entity)(romeo);
        foxtrot = romeo.RowButton;
        romeo = {'icon': null, 'label': 'Row Button', 'subLabel': 'I am disabled', 'onPress': null, 'disabled': true};
        kilo = output[kilo];
        kilo = sizing.bind(entity)(kilo);
        romeo['icon'] = kilo;
        backup = function() { // Original name: onPress
            entity = undefined;
            return entity;
        };
        romeo['onPress'] = backup;
        romeo = options.bind(entity)(foxtrot, romeo);
        yankee[6] = romeo;
        verify['children'] = yankee;
        verify = tango.bind(entity)(offset, verify);
        oscar['children'] = verify;
        oscar = options.bind(entity)(golf, oscar);
        report[1] = oscar;
        mike['children'] = report;
        entity = tango.bind(entity)(zulu, mike);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();