// app/modules/user_settings/native/design_system/UserSettingsDesignSystemBackdrop.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = function(argFoo) { // Original name: BackdropCard
        entity = argFoo;
        foxtrot = entity.buttonLabel;
        result = entity.title;
        output = entity.description;
        mike = entity.blur;
        var _closure2_slot0 = mike;
        mike = entity.setShowBackdrop;
        var _closure2_slot1 = mike;
        entity = entity.setBlurAmount;
        var _closure2_slot2 = entity;
        tango = _closure1_slot5;
        offset = _closure1_slot0;
        backup = _closure1_slot1;
        entity = 5;
        entity = backup[entity];
        zulu = undefined;
        entity = offset.bind(zulu)(entity);
        mike = entity.Card;
        entity = {};
        golf = _closure1_slot6;
        report = 6;
        report = backup[report];
        report = offset.bind(zulu)(report);
        oscar = report.Stack;
        report = {};
        options = 12;
        report['spacing'] = options;
        sizing = _closure1_slot5;
        yankee = 7;
        options = backup[yankee];
        options = offset.bind(zulu)(options);
        kilo = options.Text;
        options = {};
        echo = 'heading-lg/bold';
        options['variant'] = echo;
        options['children'] = result;
        kilo = sizing.bind(zulu)(kilo, options);
        options = new Array(3);
        options[0] = kilo;
        sizing = _closure1_slot5;
        yankee = backup[yankee];
        yankee = offset.bind(zulu)(yankee);
        kilo = yankee.Text;
        yankee = {'variant': 'text-md/normal', 'color': 'text-secondary'};
        yankee['children'] = output;
        yankee = sizing.bind(zulu)(kilo, yankee);
        options[1] = yankee;
        yankee = _closure1_slot5;
        verify = 8;
        verify = backup[verify];
        verify = offset.bind(zulu)(verify);
        offset = verify.Button;
        verify = {};
        verify['text'] = foxtrot;
        romeo = function() { // Original name: onPress
            tango = _closure2_slot2;
            zulu = _closure2_slot0;
            entity = undefined;
            zulu = tango.bind(entity)(zulu);
            zulu = _closure2_slot1;
            mike = true;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        verify['onPress'] = romeo;
        verify = yankee.bind(zulu)(offset, verify);
        options[2] = verify;
        report['children'] = options;
        report = golf.bind(zulu)(oscar, report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argBaz;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot2 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    offset = tango.StyleSheet;
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    yankee = 16;
    verify['padding'] = yankee;
    tango['container'] = verify;
    verify = {};
    backup = offset.absoluteFillObject;
    kilo = verify;
    offset = copyDataProperties(kilo, backup);
    romeo = 'stretch';
    offset = 'alignItems';
    verify[offset] = romeo;
    romeo = 'center';
    offset = 'justifyContent';
    verify[offset] = romeo;
    offset = 'padding';
    verify[offset] = yankee;
    tango['backdropContent'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = {};
    golf = "function UserSettingsDesignSystemBackdropTsx1(){const{withSpring,showBackdrop,SUBTLE_SPRING}=this.__closure;return{opacity:withSpring(showBackdrop?1:0,SUBTLE_SPRING,'animate-always')};}";
    tango['code'] = golf;
    var _closure1_slot8 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/design_system/UserSettingsDesignSystemBackdrop.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: UserSettingsDesignSystemBackdrop
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            foxtrot = function() { // Original name: handleClose
                zulu = _closure2_slot1;
                entity = undefined;
                mike = false;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            mike = _closure1_slot7;
            tango = undefined;
            backup = mike.bind(tango)();
            offset = _closure1_slot3;
            zulu = offset.useState;
            mike = false;
            mike = zulu.bind(offset)(mike);
            options = _closure1_slot2;
            golf = 2;
            mike = options.bind(tango)(mike, golf);
            report = 0;
            oscar = mike[report];
            var _closure2_slot0 = oscar;
            zulu = 1;
            result = mike[zulu];
            var _closure2_slot1 = result;
            verify = offset.useState;
            mike = 'none';
            mike = verify.bind(offset)(mike);
            mike = options.bind(tango)(mike, golf);
            source = mike[report];
            sizing = mike[zulu];
            golf = _closure1_slot0;
            verify = _closure1_slot1;
            mike = 9;
            mike = verify[mike];
            zulu = golf.bind(tango)(mike);
            mike = zulu.useAnimatedStyle;
            entity = function() { // Original name: n
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = {};
                    tango = _closure1_slot0;
                    report = _closure1_slot1;
                    zulu = 10;
                    zulu = report[zulu];
                    golf = undefined;
                    oscar = tango.bind(golf)(zulu);
                    report = oscar.withSpring;
                    zulu = _closure2_slot0;
                    tango = 0;
                    if(!zulu) { _fun00004_ip = 47; continue _fun00003 }
 44:
                    tango = 1;
 47:
                    zulu = _closure1_slot0;
                    options = _closure1_slot1;
                    mike = 11;
                    mike = options[mike];
                    mike = zulu.bind(golf)(mike);
                    zulu = mike.SUBTLE_SPRING;
                    mike = 'animate-always';
                    mike = report.bind(oscar)(tango, zulu, mike);
                    entity['opacity'] = mike;
                    return entity;
                }
            };
            report = {};
            options = 10;
            options = verify[options];
            options = golf.bind(tango)(options);
            options = options.withSpring;
            report['withSpring'] = options;
            report['showBackdrop'] = oscar;
            options = 11;
            options = verify[options];
            options = golf.bind(tango)(options);
            options = options.SUBTLE_SPRING;
            report['SUBTLE_SPRING'] = options;
            entity['__closure'] = report;
            report = 1929832617927.0;
            entity['__workletHash'] = report;
            report = _closure1_slot8;
            entity['__initData'] = report;
            kilo = mike.bind(zulu)(entity);
            zulu = _closure1_slot6;
            mike = _closure1_slot4;
            entity = {};
            report = backup.container;
            entity['style'] = report;
            options = _closure1_slot6;
            report = 6;
            report = verify[report];
            report = golf.bind(tango)(report);
            golf = report.Stack;
            report = {};
            verify = 24;
            report['spacing'] = verify;
            offset = _closure1_slot5;
            romeo = _closure1_slot9;
            verify = {'title': 'Backdrop', 'description': 'A backdrop is an overlay that appears behind a component to provide separation between the component and the rest of the interface. By default it is a semi-transparent overlay.', 'buttonLabel': 'Show Backdrop', 'blur': 'none'};
            verify['setShowBackdrop'] = result;
            verify['setBlurAmount'] = sizing;
            offset = offset.bind(tango)(romeo, verify);
            verify = new Array(3);
            verify[0] = offset;
            yankee = _closure1_slot5;
            offset = {'title': 'Subtle Blur', 'description': "Backdrop also supports blur. You can use a subtle blur for a lite-touch obfuscation, like for Context Menus that help create seperation but don't completly lift you out of the context", 'buttonLabel': 'Show Subtle Blur Backdrop', 'blur': 'subtle'};
            offset['setShowBackdrop'] = result;
            offset['setBlurAmount'] = sizing;
            offset = yankee.bind(tango)(romeo, offset);
            verify[1] = offset;
            yankee = _closure1_slot5;
            offset = {'title': 'Strong Blur', 'description': 'You can use a strong blur for places where you want to completly lift the user out of the context, like for modals', 'buttonLabel': 'Show Strong Blur Backdrop', 'blur': 'strong'};
            offset['setShowBackdrop'] = result;
            offset['setBlurAmount'] = sizing;
            offset = yankee.bind(tango)(romeo, offset);
            verify[2] = offset;
            report['children'] = verify;
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            if(!oscar) { _fun00002_ip = 652; continue _fun00001 }
 417:
            verify = _closure1_slot6;
            result = _closure1_slot0;
            update = _closure1_slot1;
            golf = 12;
            golf = update[golf];
            golf = result.bind(tango)(golf);
            options = golf.Dialog;
            golf = {};
            golf['onDismiss'] = foxtrot;
            romeo = _closure1_slot5;
            offset = 13;
            offset = update[offset];
            offset = result.bind(tango)(offset);
            yankee = offset.Backdrop;
            offset = {};
            offset['style'] = kilo;
            offset['blur'] = source;
            offset['onDismiss'] = foxtrot;
            yankee = romeo.bind(tango)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            foxtrot = _closure1_slot5;
            romeo = _closure1_slot4;
            yankee = {};
            backup = backup.backdropContent;
            yankee['style'] = backup;
            backup = 'box-none';
            yankee['pointerEvents'] = backup;
            sizing = _closure1_slot5;
            backup = 5;
            backup = update[backup];
            backup = result.bind(tango)(backup);
            kilo = backup.Card;
            backup = {};
            echo = _closure1_slot6;
            output = 7;
            output = update[output];
            output = result.bind(tango)(output);
            result = output.Text;
            output = {};
            update = 'text-md/normal';
            output['variant'] = update;
            update = ['blur style: '];
            update[1] = source;
            output['children'] = update;
            output = echo.bind(tango)(result, output);
            backup['children'] = output;
            backup = sizing.bind(tango)(kilo, backup);
            yankee['children'] = backup;
            yankee = foxtrot.bind(tango)(romeo, yankee);
            offset[1] = yankee;
            golf['children'] = offset;
            oscar = verify.bind(tango)(options, golf);
 652:
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();