// app/modules/user_settings/native/design_system/UserSettingsDesignSystemCoachmark.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: Content
        _fun99310: for(var _fun99310_ip = 0; ; ) switch(_fun99310_ip) {
 0:
            entity = _closure1_slot10;
            tango = undefined;
            sequence = entity.bind(tango)();
            zulu = _closure1_slot4;
            mike = zulu.useState;
            entity = true;
            mike = mike.bind(zulu)(entity);
            entity = _closure1_slot3;
            golf = 2;
            mike = entity.bind(tango)(mike, golf);
            report = 0;
            entity = mike[report];
            var _closure2_slot0 = entity;
            zulu = 1;
            mike = mike[zulu];
            var _closure2_slot1 = mike;
            oscar = _closure1_slot4;
            mike = oscar.useState;
            offset = false;
            oscar = mike.bind(oscar)(offset);
            mike = _closure1_slot3;
            mike = mike.bind(tango)(oscar, golf);
            output = mike[report];
            var _closure2_slot2 = output;
            sizing = mike[zulu];
            oscar = _closure1_slot4;
            mike = oscar.useState;
            oscar = mike.bind(oscar)(offset);
            mike = _closure1_slot3;
            mike = mike.bind(tango)(oscar, golf);
            record = mike[report];
            var _closure2_slot3 = record;
            config = mike[zulu];
            oscar = _closure1_slot0;
            mike = _closure1_slot2;
            verify = 5;
            mike = mike[verify];
            oscar = oscar.bind(tango)(mike);
            mike = oscar.useCanRotate;
            oscar = mike.bind(oscar)();
            mike = _closure1_slot3;
            mike = mike.bind(tango)(oscar, golf);
            backup = mike[report];
            foxtrot = mike[zulu];
            oscar = _closure1_slot4;
            mike = oscar.useState;
            oscar = mike.bind(oscar)(offset);
            mike = _closure1_slot3;
            mike = mike.bind(tango)(oscar, golf);
            result = mike[report];
            var _closure2_slot4 = result;
            romeo = mike[zulu];
            oscar = _closure1_slot4;
            mike = oscar.useState;
            source = 'secondary';
            oscar = mike.bind(oscar)(source);
            mike = _closure1_slot3;
            mike = mike.bind(tango)(oscar, golf);
            control = mike[report];
            var _closure2_slot5 = control;
            update = mike[zulu];
            report = 'Show tooltip';
            if(!entity) { _fun99310_ip = 278; continue _fun99310 }
 272:
            report = 'Hide tooltip';
 278:
            zulu = _closure1_slot4;
            mike = zulu.useRef;
            vacuum = null;
            oscar = mike.bind(zulu)(vacuum);
            golf = _closure1_slot4;
            zulu = golf.useMemo;
            mike = new Array(5);
            mike[0] = result;
            mike[1] = record;
            mike[2] = entity;
            mike[3] = output;
            mike[4] = control;
            entity = function() {
                _fun99311: for(var _fun99311_ip = 0; ; ) switch(_fun99311_ip) {
 0:
                    entity = {'title': 'Introducing Coachmark!', 'description': 'Coachmark is a new component that can be used to highlight new features or UI elements.'};
                    report = _closure2_slot3;
                    tango = 'top';
                    if(!report) { _fun99311_ip = 34; continue _fun99311 }
 30:
                    tango = 'bottom';
 34:
                    entity['position'] = tango;
                    tango = _closure2_slot0;
                    entity['visible'] = tango;
                    tango = function() { // Original name: onDismiss
                        zulu = _closure2_slot1;
                        mike = undefined;
                        entity = false;
                        entity = zulu.bind(mike)(entity);
                        return entity;
                    };
                    entity['onDismiss'] = tango;
                    oscar = _closure1_slot1;
                    report = _closure1_slot2;
                    tango = 6;
                    report = report[tango];
                    tango = undefined;
                    report = oscar.bind(tango)(report);
                    entity['imgSource'] = report;
                    report = _closure2_slot2;
                    entity['experimental_withBlurBackground'] = report;
                    report = _closure2_slot4;
                    if(!report) { _fun99311_ip = 111; continue _fun99311 }
 105:
                    tango = 'Got it!';
 111:
                    entity['buttonLabel'] = tango;
                    zulu = function() { // Original name: onButtonPress
                        zulu = _closure2_slot1;
                        mike = undefined;
                        entity = false;
                        entity = zulu.bind(mike)(entity);
                        return entity;
                    };
                    entity['onButtonPress'] = zulu;
                    mike = _closure2_slot5;
                    entity['buttonVariant'] = mike;
                    return entity;
                }
            };
            offset = zulu.bind(golf)(entity, mike);
            mike = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 7;
            entity = golf[entity];
            zulu = mike.bind(tango)(entity);
            entity = zulu.useCoachmark;
            entity = entity.bind(zulu)(oscar, offset);
            zulu = _closure1_slot7;
            entity = 8;
            entity = golf[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.Button;
            entity = {};
            entity['ref'] = oscar;
            oscar = function() { // Original name: onPress
                zulu = _closure2_slot1;
                entity = _closure2_slot0;
                mike = !entity;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            entity['onPress'] = oscar;
            oscar = 'primary';
            entity['variant'] = oscar;
            entity['text'] = report;
            report = 'md';
            entity['size'] = report;
            yankee = zulu.bind(tango)(mike, entity);
            zulu = _closure1_slot9;
            mike = _closure1_slot8;
            entity = {};
            offset = _closure1_slot7;
            if(output) { _fun99310_ip = 505; continue _fun99310 }
 454:
            oscar = _closure1_slot5;
            report = {};
            kilo = {};
            golf = 300;
            kilo['height'] = golf;
            golf = new Array(2);
            golf[0] = kilo;
            kilo = sequence.container;
            golf[1] = kilo;
            report['style'] = golf;
            report['children'] = yankee;
            oscar = offset.bind(tango)(oscar, report);
            _fun99310_ip = 612; continue _fun99310;
 505:
            golf = _closure1_slot1;
            kilo = _closure1_slot2;
            report = 9;
            report = kilo[report];
            golf = golf.bind(tango)(report);
            report = {};
            context = {};
            kilo = 300;
            context['height'] = kilo;
            kilo = new Array(2);
            kilo[0] = context;
            sequence = sequence.container;
            kilo[1] = sequence;
            report['style'] = kilo;
            kilo = {'x': 0, 'y': 0};
            report['start'] = kilo;
            kilo = {'x': 1, 'y': 0};
            report['end'] = kilo;
            kilo = ['red', 'orange', 'yellow', 'green', 'teal', 'blue', 'purple'];
            report['colors'] = kilo;
            report['children'] = yankee;
            oscar = offset.bind(tango)(golf, report);
 612:
            report = new Array(7);
            report[0] = oscar;
            yankee = _closure1_slot7;
            kilo = _closure1_slot0;
            sequence = _closure1_slot2;
            offset = 10;
            oscar = sequence[offset];
            oscar = kilo.bind(tango)(oscar);
            golf = oscar.TableSwitchRow;
            oscar = {};
            context = 'Enable Bottom Position';
            oscar['label'] = context;
            oscar['value'] = record;
            oscar['onValueChange'] = config;
            oscar = yankee.bind(tango)(golf, oscar);
            report[1] = oscar;
            yankee = _closure1_slot7;
            oscar = sequence[offset];
            oscar = kilo.bind(tango)(oscar);
            golf = oscar.TableSwitchRow;
            oscar = {};
            config = 'Enable Button';
            oscar['label'] = config;
            oscar['value'] = result;
            oscar['onValueChange'] = romeo;
            oscar = yankee.bind(tango)(golf, oscar);
            report[2] = oscar;
            yankee = _closure1_slot7;
            golf = _closure1_slot5;
            oscar = {};
            romeo = {};
            result = 16;
            romeo['marginVertical'] = result;
            oscar['style'] = romeo;
            result = _closure1_slot7;
            romeo = 11;
            romeo = sequence[romeo];
            romeo = kilo.bind(tango)(romeo);
            kilo = romeo.TableRadioGroup;
            romeo = {};
            sequence = 'Button Variant';
            romeo['title'] = sequence;
            vacuum = vacuum != control;
            if(!vacuum) { _fun99310_ip = 799; continue _fun99310 }
 796:
            source = control;
 799:
            romeo['value'] = source;
            romeo['onChange'] = update;
            source = ['secondary', 'primary', 'experimental_premium-primary'];
            update = source.map;
            echo = function(argFoo) {
                report = argFoo;
                tango = _closure1_slot7;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 12;
                entity = zulu[entity];
                zulu = undefined;
                entity = mike.bind(zulu)(entity);
                mike = entity.TableRadioRow;
                entity = {};
                entity['value'] = report;
                entity['label'] = report;
                entity = tango.bind(zulu)(mike, entity, report);
                return entity;
            };
            echo = update.bind(source)(echo);
            romeo['children'] = echo;
            romeo = result.bind(tango)(kilo, romeo);
            oscar['children'] = romeo;
            oscar = yankee.bind(tango)(golf, oscar);
            report[3] = oscar;
            kilo = _closure1_slot7;
            golf = _closure1_slot0;
            oscar = _closure1_slot2;
            yankee = oscar[offset];
            yankee = golf.bind(tango)(yankee);
            romeo = yankee.TableSwitchRow;
            yankee = {};
            result = 'Enable Blur Background';
            yankee['label'] = result;
            yankee['value'] = output;
            yankee['onValueChange'] = sizing;
            yankee = kilo.bind(tango)(romeo, yankee);
            report[4] = yankee;
            romeo = _closure1_slot7;
            offset = oscar[offset];
            offset = golf.bind(tango)(offset);
            yankee = offset.TableSwitchRow;
            offset = {};
            kilo = 'Unlock Orientation';
            offset['label'] = kilo;
            offset['value'] = backup;
            offset['onValueChange'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            report[5] = offset;
            options = _closure1_slot7;
            oscar = oscar[verify];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.TooltipNote;
            oscar = {};
            oscar = options.bind(tango)(golf, oscar);
            report[6] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot11 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    offset = 1;
    golf = oscar[offset];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    tango = tango.ScrollView;
    var _closure1_slot6 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'paddingTop': 200, 'flex': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    tango['container'] = verify;
    verify = {};
    verify['flex'] = offset;
    tango['flex'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 15;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/design_system/UserSettingsDesignSystemCoachmark.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: UserSettingsDesignSystemCoachmark
        entity = _closure1_slot10;
        tango = undefined;
        report = entity.bind(tango)();
        zulu = _closure1_slot7;
        verify = _closure1_slot0;
        yankee = _closure1_slot2;
        entity = 13;
        entity = yankee[entity];
        entity = verify.bind(tango)(entity);
        mike = entity.SafeAreaPaddingView;
        entity = {};
        report = report.flex;
        entity['style'] = report;
        report = true;
        entity['bottom'] = report;
        golf = _closure1_slot7;
        oscar = _closure1_slot6;
        report = {};
        options = 14;
        options = yankee[options];
        options = verify.bind(tango)(options);
        verify = options.LayerScope;
        options = {};
        romeo = _closure1_slot7;
        yankee = _closure1_slot11;
        offset = {};
        offset = romeo.bind(tango)(yankee, offset);
        options['children'] = offset;
        options = golf.bind(tango)(verify, options);
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();