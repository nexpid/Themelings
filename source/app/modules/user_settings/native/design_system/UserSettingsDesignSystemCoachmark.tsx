// app/modules/user_settings/native/design_system/UserSettingsDesignSystemCoachmark.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: Content
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot10;
            tangon = undefined;
            sequen = entity.bind(tangon)();
            zuuluu = _closure1_slot4;
            michal = zuuluu.useState;
            entity = true;
            michal = michal.bind(zuuluu)(entity);
            entity = _closure1_slot3;
            golfie = 2;
            michal = entity.bind(tangon)(michal, golfie);
            report = 0;
            entity = michal[report];
            var _closure2_slot0 = entity;
            zuuluu = 1;
            michal = michal[zuuluu];
            var _closure2_slot1 = michal;
            oscard = _closure1_slot4;
            michal = oscard.useState;
            offset = false;
            oscard = michal.bind(oscard)(offset);
            michal = _closure1_slot3;
            michal = michal.bind(tangon)(oscard, golfie);
            output = michal[report];
            var _closure2_slot2 = output;
            sizing = michal[zuuluu];
            oscard = _closure1_slot4;
            michal = oscard.useState;
            oscard = michal.bind(oscard)(offset);
            michal = _closure1_slot3;
            michal = michal.bind(tangon)(oscard, golfie);
            record = michal[report];
            var _closure2_slot3 = record;
            config = michal[zuuluu];
            oscard = _closure1_slot0;
            michal = _closure1_slot2;
            verify = 5;
            michal = michal[verify];
            oscard = oscard.bind(tangon)(michal);
            michal = oscard.useCanRotate;
            oscard = michal.bind(oscard)();
            michal = _closure1_slot3;
            michal = michal.bind(tangon)(oscard, golfie);
            backup = michal[report];
            foxtra = michal[zuuluu];
            oscard = _closure1_slot4;
            michal = oscard.useState;
            oscard = michal.bind(oscard)(offset);
            michal = _closure1_slot3;
            michal = michal.bind(tangon)(oscard, golfie);
            result = michal[report];
            var _closure2_slot4 = result;
            romeon = michal[zuuluu];
            oscard = _closure1_slot4;
            michal = oscard.useState;
            source = 'secondary';
            oscard = michal.bind(oscard)(source);
            michal = _closure1_slot3;
            michal = michal.bind(tangon)(oscard, golfie);
            ctrled = michal[report];
            var _closure2_slot5 = ctrled;
            update = michal[zuuluu];
            report = 'Show tooltip';
            if(!entity) { _fun00002_ip = 278; continue _fun00001 }
 272:
            report = 'Hide tooltip';
 278:
            zuuluu = _closure1_slot4;
            michal = zuuluu.useRef;
            vacuum = null;
            oscard = michal.bind(zuuluu)(vacuum);
            golfie = _closure1_slot4;
            zuuluu = golfie.useMemo;
            michal = new Array(5);
            michal[0] = result;
            michal[1] = record;
            michal[2] = entity;
            michal[3] = output;
            michal[4] = ctrled;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = {'title': 'Introducing Coachmark!', 'description': 'Coachmark is a new component that can be used to highlight new features or UI elements.'};
                    report = _closure2_slot3;
                    tangon = 'top';
                    if(!report) { _fun00004_ip = 34; continue _fun00003 }
 30:
                    tangon = 'bottom';
 34:
                    entity['position'] = tangon;
                    tangon = _closure2_slot0;
                    entity['visible'] = tangon;
                    tangon = function() { // Original name: onDismiss
                        zuuluu = _closure2_slot1;
                        michal = undefined;
                        entity = false;
                        entity = zuuluu.bind(michal)(entity);
                        return entity;
                    };
                    entity['onDismiss'] = tangon;
                    oscard = _closure1_slot1;
                    report = _closure1_slot2;
                    tangon = 6;
                    report = report[tangon];
                    tangon = undefined;
                    report = oscard.bind(tangon)(report);
                    entity['imgSource'] = report;
                    report = _closure2_slot2;
                    entity['experimental_withBlurBackground'] = report;
                    report = _closure2_slot4;
                    if(!report) { _fun00004_ip = 111; continue _fun00003 }
 105:
                    tangon = 'Got it!';
 111:
                    entity['buttonLabel'] = tangon;
                    zuuluu = function() { // Original name: onButtonPress
                        zuuluu = _closure2_slot1;
                        michal = undefined;
                        entity = false;
                        entity = zuuluu.bind(michal)(entity);
                        return entity;
                    };
                    entity['onButtonPress'] = zuuluu;
                    michal = _closure2_slot5;
                    entity['buttonVariant'] = michal;
                    return entity;
                }
            };
            offset = zuuluu.bind(golfie)(entity, michal);
            michal = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 7;
            entity = golfie[entity];
            zuuluu = michal.bind(tangon)(entity);
            entity = zuuluu.useCoachmark;
            entity = entity.bind(zuuluu)(oscard, offset);
            zuuluu = _closure1_slot7;
            entity = 8;
            entity = golfie[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.Button;
            entity = {};
            entity['ref'] = oscard;
            oscard = function() { // Original name: onPress
                zuuluu = _closure2_slot1;
                entity = _closure2_slot0;
                michal = !entity;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity['onPress'] = oscard;
            oscard = 'primary';
            entity['variant'] = oscard;
            entity['text'] = report;
            report = 'md';
            entity['size'] = report;
            yankee = zuuluu.bind(tangon)(michal, entity);
            zuuluu = _closure1_slot9;
            michal = _closure1_slot8;
            entity = {};
            offset = _closure1_slot7;
            if(output) { _fun00002_ip = 505; continue _fun00001 }
 454:
            oscard = _closure1_slot5;
            report = {};
            kiloes = {};
            golfie = 300;
            kiloes['height'] = golfie;
            golfie = new Array(2);
            golfie[0] = kiloes;
            kiloes = sequen.container;
            golfie[1] = kiloes;
            report['style'] = golfie;
            report['children'] = yankee;
            oscard = offset.bind(tangon)(oscard, report);
            _fun00002_ip = 612; continue _fun00001;
 505:
            golfie = _closure1_slot1;
            kiloes = _closure1_slot2;
            report = 9;
            report = kiloes[report];
            golfie = golfie.bind(tangon)(report);
            report = {};
            cntext = {};
            kiloes = 300;
            cntext['height'] = kiloes;
            kiloes = new Array(2);
            kiloes[0] = cntext;
            sequen = sequen.container;
            kiloes[1] = sequen;
            report['style'] = kiloes;
            kiloes = {'x': 0, 'y': 0};
            report['start'] = kiloes;
            kiloes = {'x': 1, 'y': 0};
            report['end'] = kiloes;
            kiloes = ['red', 'orange', 'yellow', 'green', 'teal', 'blue', 'purple'];
            report['colors'] = kiloes;
            report['children'] = yankee;
            oscard = offset.bind(tangon)(golfie, report);
 612:
            report = new Array(7);
            report[0] = oscard;
            yankee = _closure1_slot7;
            kiloes = _closure1_slot0;
            sequen = _closure1_slot2;
            offset = 10;
            oscard = sequen[offset];
            oscard = kiloes.bind(tangon)(oscard);
            golfie = oscard.TableSwitchRow;
            oscard = {};
            cntext = 'Enable Bottom Position';
            oscard['label'] = cntext;
            oscard['value'] = record;
            oscard['onValueChange'] = config;
            oscard = yankee.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            yankee = _closure1_slot7;
            oscard = sequen[offset];
            oscard = kiloes.bind(tangon)(oscard);
            golfie = oscard.TableSwitchRow;
            oscard = {};
            config = 'Enable Button';
            oscard['label'] = config;
            oscard['value'] = result;
            oscard['onValueChange'] = romeon;
            oscard = yankee.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            yankee = _closure1_slot7;
            golfie = _closure1_slot5;
            oscard = {};
            romeon = {};
            result = 16;
            romeon['marginVertical'] = result;
            oscard['style'] = romeon;
            result = _closure1_slot7;
            romeon = 11;
            romeon = sequen[romeon];
            romeon = kiloes.bind(tangon)(romeon);
            kiloes = romeon.TableRadioGroup;
            romeon = {};
            sequen = 'Button Variant';
            romeon['title'] = sequen;
            vacuum = vacuum != ctrled;
            if(!vacuum) { _fun00002_ip = 799; continue _fun00001 }
 796:
            source = ctrled;
 799:
            romeon['value'] = source;
            romeon['onChange'] = update;
            source = ['secondary', 'primary', 'experimental_premium-primary'];
            update = source.map;
            echoed = function(argFoo) {
                report = argFoo;
                tangon = _closure1_slot7;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 12;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.TableRadioRow;
                entity = {};
                entity['value'] = report;
                entity['label'] = report;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            };
            echoed = update.bind(source)(echoed);
            romeon['children'] = echoed;
            romeon = result.bind(tangon)(kiloes, romeon);
            oscard['children'] = romeon;
            oscard = yankee.bind(tangon)(golfie, oscard);
            report[3] = oscard;
            kiloes = _closure1_slot7;
            golfie = _closure1_slot0;
            oscard = _closure1_slot2;
            yankee = oscard[offset];
            yankee = golfie.bind(tangon)(yankee);
            romeon = yankee.TableSwitchRow;
            yankee = {};
            result = 'Enable Blur Background';
            yankee['label'] = result;
            yankee['value'] = output;
            yankee['onValueChange'] = sizing;
            yankee = kiloes.bind(tangon)(romeon, yankee);
            report[4] = yankee;
            romeon = _closure1_slot7;
            offset = oscard[offset];
            offset = golfie.bind(tangon)(offset);
            yankee = offset.TableSwitchRow;
            offset = {};
            kiloes = 'Unlock Orientation';
            offset['label'] = kiloes;
            offset['value'] = backup;
            offset['onValueChange'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            report[5] = offset;
            option = _closure1_slot7;
            oscard = oscard[verify];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.TooltipNote;
            oscard = {};
            oscard = option.bind(tangon)(golfie, oscard);
            report[6] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot11 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    offset = 1;
    golfie = oscard[offset];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot6 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'paddingTop': 200, 'flex': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    tangon['container'] = verify;
    verify = {};
    verify['flex'] = offset;
    tangon['flex'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/design_system/UserSettingsDesignSystemCoachmark.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: UserSettingsDesignSystemCoachmark
        entity = _closure1_slot10;
        tangon = undefined;
        report = entity.bind(tangon)();
        zuuluu = _closure1_slot7;
        verify = _closure1_slot0;
        yankee = _closure1_slot2;
        entity = 13;
        entity = yankee[entity];
        entity = verify.bind(tangon)(entity);
        michal = entity.SafeAreaPaddingView;
        entity = {};
        report = report.flex;
        entity['style'] = report;
        report = true;
        entity['bottom'] = report;
        golfie = _closure1_slot7;
        oscard = _closure1_slot6;
        report = {};
        option = 14;
        option = yankee[option];
        option = verify.bind(tangon)(option);
        verify = option.LayerScope;
        option = {};
        romeon = _closure1_slot7;
        yankee = _closure1_slot11;
        offset = {};
        offset = romeon.bind(tangon)(yankee, offset);
        option['children'] = offset;
        option = golfie.bind(tangon)(verify, option);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();