// app/modules/user_settings/native/design_system/UserSettingsDesignSystemSegmentedControl.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot2 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsxs;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsx;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'margin': 16, 'flex': 1, 'alignItems': 'center', 'padding': 40};
    tangon['container'] = verify;
    verify = {'backgroundColor': null, 'borderWidth': 2, 'borderColor': null, 'flex': 1, 'alignItems': 'center', 'justifyContent': 'center', 'height': 400};
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_BASE_TERTIARY;
    verify['backgroundColor'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BORDER_STRONG;
    verify['borderColor'] = offset;
    tangon['item'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/design_system/UserSettingsDesignSystemSegmentedControl.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: UserSettingsDesignSystemSegmentedControl
        report = _closure1_slot3;
        entity = report.useState;
        michal = 0;
        entity = entity.bind(report)(michal);
        zuuluu = _closure1_slot2;
        tangon = undefined;
        result = 2;
        entity = zuuluu.bind(tangon)(entity, result);
        option = entity[michal];
        oscard = 1;
        entity = entity[oscard];
        var _closure2_slot0 = entity;
        verify = report.useState;
        entity = 3;
        entity = verify.bind(report)(entity);
        entity = zuuluu.bind(tangon)(entity, result);
        output = entity[michal];
        var _closure2_slot1 = output;
        entity = entity[oscard];
        var _closure2_slot2 = entity;
        entity = _closure1_slot8;
        verify = entity.bind(tangon)();
        entity = function(argFoo) { // Original name: useSegmentedControlItems
            oscard = argFoo;
            var _closure3_slot0 = oscard;
            tangon = _closure1_slot8;
            zuuluu = undefined;
            report = tangon.bind(zuuluu)();
            var _closure3_slot1 = report;
            tangon = _closure1_slot3;
            zuuluu = tangon.useMemo;
            michal = new Array(2);
            michal[0] = oscard;
            report = report.item;
            michal[1] = report;
            entity = function() {
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    entity = new Array(0);
                    michal = _closure3_slot0;
                    yankee = 0;
                    michal = yankee < michal;
                    offset = 1;
                    verify = global;
                    option = 'Item ';
                    golfie = 'item-';
                    report = 6;
                    tangon = undefined;
                    zuuluu = 'heading-xxl/bold';
                    if(!michal) { _fun00002_ip = 226; continue _fun00001 }
 54:
                    foxtra = entity.push;
                    michal = {};
                    kiloes = yankee + offset;
                    backup = verify.HermesInternal;
                    backup = backup.concat;
                    backup = backup.bind(option)(kiloes);
                    michal['label'] = backup;
                    kiloes = yankee + offset;
                    backup = verify.HermesInternal;
                    backup = backup.concat;
                    backup = backup.bind(golfie)(kiloes);
                    michal['id'] = backup;
                    sizing = _closure1_slot7;
                    kiloes = _closure1_slot4;
                    backup = {};
                    output = _closure3_slot1;
                    output = output.item;
                    backup['style'] = output;
                    echoed = _closure1_slot6;
                    result = _closure1_slot0;
                    output = _closure1_slot1;
                    output = output[report];
                    output = result.bind(tangon)(output);
                    result = output.Text;
                    output = {};
                    output['variant'] = zuuluu;
                    source = yankee + offset;
                    update = ['Item '];
                    update[1] = source;
                    output['children'] = update;
                    output = echoed.bind(tangon)(result, output);
                    backup['children'] = output;
                    backup = sizing.bind(tangon)(kiloes, backup);
                    michal['page'] = backup;
                    michal = foxtra.bind(entity)(michal);
                    yankee = yankee + 1;
                    michal = _closure3_slot0;
                    if(yankee < michal) { _fun00002_ip = 54; continue _fun00001 }
 226:
                    return entity;
                }
            };
            entity = zuuluu.bind(tangon)(entity, michal);
            return entity;
        };
        offset = entity.bind(tangon)(output);
        kiloes = _closure1_slot0;
        echoed = _closure1_slot1;
        entity = 7;
        entity = echoed[entity];
        zuuluu = kiloes.bind(tangon)(entity);
        michal = zuuluu.useSegmentedControlState;
        entity = {};
        entity['items'] = offset;
        entity['pageWidth'] = option;
        entity['defaultIndex'] = oscard;
        backup = michal.bind(zuuluu)(entity);
        zuuluu = report.useCallback;
        michal = function(argFoo) {
            entity = argFoo;
            entity = entity.nativeEvent;
            entity = entity.layout;
            zuuluu = entity.width;
            michal = _closure2_slot0;
            entity = undefined;
            michal = michal.bind(entity)(zuuluu);
            return entity;
        };
        entity = new Array(0);
        option = zuuluu.bind(report)(michal, entity);
        zuuluu = _closure1_slot7;
        michal = _closure1_slot5;
        entity = {};
        oscard = _closure1_slot4;
        report = {};
        verify = verify.container;
        report['style'] = verify;
        report['onLayout'] = option;
        verify = _closure1_slot6;
        yankee = 8;
        golfie = echoed[yankee];
        golfie = kiloes.bind(tangon)(golfie);
        option = golfie.Stack;
        golfie = {};
        offset = 24;
        golfie['spacing'] = offset;
        offset = 9;
        offset = echoed[offset];
        offset = kiloes.bind(tangon)(offset);
        romeon = offset.SegmentedControl;
        offset = {};
        offset['state'] = backup;
        romeon = zuuluu.bind(tangon)(romeon, offset);
        offset = new Array(3);
        offset[0] = romeon;
        romeon = 10;
        romeon = echoed[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        foxtra = romeon.SegmentedControlPages;
        romeon = {};
        romeon['state'] = backup;
        romeon = zuuluu.bind(tangon)(foxtra, romeon);
        offset[1] = romeon;
        yankee = echoed[yankee];
        yankee = kiloes.bind(tangon)(yankee);
        romeon = yankee.Stack;
        yankee = {'spacing': 8, 'direction': 'horizontal'};
        backup = 11;
        foxtra = echoed[backup];
        foxtra = kiloes.bind(tangon)(foxtra);
        update = foxtra.Button;
        foxtra = {'text': 'Add Tab', 'variant': 'active', 'size': 'sm'};
        source = 5;
        source = output >= source;
        foxtra['disabled'] = source;
        source = function() { // Original name: onPress
            zuuluu = _closure2_slot2;
            michal = _closure2_slot1;
            entity = 1;
            michal = michal + entity;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        foxtra['onPress'] = source;
        update = zuuluu.bind(tangon)(update, foxtra);
        foxtra = new Array(2);
        foxtra[0] = update;
        backup = echoed[backup];
        backup = kiloes.bind(tangon)(backup);
        kiloes = backup.Button;
        backup = {'text': 'Remove Tab', 'variant': 'destructive', 'size': 'sm'};
        output = result === output;
        backup['disabled'] = output;
        sizing = function() { // Original name: onPress
            zuuluu = _closure2_slot2;
            michal = _closure2_slot1;
            entity = 1;
            michal = michal - entity;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        backup['onPress'] = sizing;
        backup = zuuluu.bind(tangon)(kiloes, backup);
        foxtra[1] = backup;
        yankee['children'] = foxtra;
        yankee = verify.bind(tangon)(romeon, yankee);
        offset[2] = yankee;
        golfie['children'] = offset;
        golfie = verify.bind(tangon)(option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();