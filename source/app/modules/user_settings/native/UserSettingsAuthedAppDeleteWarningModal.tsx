// app/modules/user_settings/native/UserSettingsAuthedAppDeleteWarningModal.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    tangon = 0;
    golfie = oscard[tangon];
    entity = undefined;
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot3 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/UserSettingsAuthedAppDeleteWarningModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: UserSettingsAuthedAppDeleteWarningModal
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            offset = entity.application;
            option = entity.onDelete;
            michal = _closure1_slot1;
            entity = _closure1_slot2;
            foxtra = 1;
            entity = entity[foxtra];
            tangon = undefined;
            entity = michal.bind(tangon)(entity);
            michal = entity.bind(tangon)(offset);
            zuuluu = _closure1_slot0;
            entity = _closure1_slot2;
            kiloes = 2;
            oscard = entity[kiloes];
            oscard = zuuluu.bind(tangon)(oscard);
            golfie = oscard.intl;
            if(michal) { _fun00002_ip = 104; continue _fun00001 }
 72:
            verify = golfie.string;
            oscard = entity[kiloes];
            oscard = zuuluu.bind(tangon)(oscard);
            oscard = oscard.t;
            oscard = oscard.DT39Aw;
            yankee = verify.bind(golfie)(oscard);
            _fun00002_ip = 149; continue _fun00001;
 104:
            oscard = golfie.formatToPlainString;
            entity = entity[kiloes];
            entity = zuuluu.bind(tangon)(entity);
            entity = entity.t;
            zuuluu = entity.paC+UV;
            entity = {};
            verify = offset.name;
            entity['applicationName'] = verify;
            yankee = oscard.bind(golfie)(zuuluu, entity);
 149:
            golfie = _closure1_slot0;
            entity = _closure1_slot2;
            zuuluu = entity[kiloes];
            zuuluu = golfie.bind(tangon)(zuuluu);
            oscard = zuuluu.intl;
            zuuluu = oscard.formatToPlainString;
            entity = entity[kiloes];
            entity = golfie.bind(tangon)(entity);
            entity = entity.t;
            if(michal) { _fun00002_ip = 221; continue _fun00001 }
 193:
            golfie = entity.QWGvxM;
            michal = {};
            verify = offset.name;
            michal['applicationName'] = verify;
            golfie = zuuluu.bind(oscard)(golfie, michal);
            _fun00002_ip = 247; continue _fun00001;
 221:
            michal = entity.inM1Ym;
            entity = {};
            verify = offset.name;
            entity['applicationName'] = verify;
            golfie = zuuluu.bind(oscard)(michal, entity);
 247:
            zuuluu = _closure1_slot5;
            michal = _closure1_slot4;
            entity = {};
            verify = _closure1_slot1;
            romeon = _closure1_slot2;
            oscard = 3;
            oscard = romeon[oscard];
            verify = verify.bind(tangon)(oscard);
            oscard = offset.id;
            verify = verify.bind(tangon)(oscard);
            if(!verify) { _fun00002_ip = 389; continue _fun00001 }
 290:
            backup = _closure1_slot3;
            romeon = _closure1_slot1;
            sizing = _closure1_slot2;
            oscard = 4;
            oscard = sizing[oscard];
            romeon = romeon.bind(tangon)(oscard);
            oscard = {};
            output = _closure1_slot0;
            result = sizing[kiloes];
            result = output.bind(tangon)(result);
            echoed = result.intl;
            result = echoed.format;
            sizing = sizing[kiloes];
            sizing = output.bind(tangon)(sizing);
            sizing = sizing.t;
            output = sizing.KRnERk;
            sizing = {};
            update = offset.name;
            sizing['applicationName'] = update;
            sizing = result.bind(echoed)(output, sizing);
            oscard['children'] = sizing;
            verify = backup.bind(tangon)(romeon, oscard);
 389:
            oscard = new Array(2);
            oscard[0] = verify;
            romeon = _closure1_slot1;
            verify = _closure1_slot2;
            verify = verify[foxtra];
            verify = romeon.bind(tangon)(verify);
            verify = verify.bind(tangon)(offset);
            if(!verify) { _fun00002_ip = 534; continue _fun00001 }
 422:
            foxtra = _closure1_slot3;
            romeon = _closure1_slot1;
            backup = _closure1_slot2;
            sizing = 4;
            offset = backup[sizing];
            romeon = romeon.bind(tangon)(offset);
            offset = {};
            result = _closure1_slot0;
            sizing = backup[sizing];
            sizing = result.bind(tangon)(sizing);
            sizing = sizing.InfoBoxLooks;
            sizing = sizing.WARNING;
            offset['look'] = sizing;
            sizing = backup[kiloes];
            sizing = result.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.string;
            backup = backup[kiloes];
            backup = result.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.LY35Z2;
            backup = sizing.bind(output)(backup);
            offset['children'] = backup;
            verify = foxtra.bind(tangon)(romeon, offset);
 534:
            oscard[1] = verify;
            entity['children'] = oscard;
            oscard = zuuluu.bind(tangon)(michal, entity);
            zuuluu = _closure1_slot3;
            backup = _closure1_slot0;
            verify = _closure1_slot2;
            offset = 5;
            entity = verify[offset];
            entity = backup.bind(tangon)(entity);
            michal = entity.AlertModal;
            entity = {};
            entity['title'] = yankee;
            entity['content'] = golfie;
            entity['extraContent'] = oscard;
            golfie = _closure1_slot5;
            oscard = _closure1_slot4;
            report = {};
            yankee = verify[offset];
            yankee = backup.bind(tangon)(yankee);
            romeon = yankee.AlertActionButton;
            yankee = {};
            foxtra = 'destructive';
            yankee['variant'] = foxtra;
            foxtra = verify[kiloes];
            foxtra = backup.bind(tangon)(foxtra);
            output = foxtra.intl;
            sizing = output.string;
            foxtra = verify[kiloes];
            foxtra = backup.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.xUqheH;
            foxtra = sizing.bind(output)(foxtra);
            yankee['text'] = foxtra;
            yankee['onPress'] = option;
            option = 'confirm';
            yankee = zuuluu.bind(tangon)(romeon, yankee, option);
            option = new Array(2);
            option[0] = yankee;
            offset = verify[offset];
            offset = backup.bind(tangon)(offset);
            yankee = offset.AlertActionButton;
            offset = {};
            romeon = 'secondary';
            offset['variant'] = romeon;
            romeon = verify[kiloes];
            romeon = backup.bind(tangon)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            verify = verify[kiloes];
            verify = backup.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.ETE/oK;
            verify = romeon.bind(foxtra)(verify);
            offset['text'] = verify;
            verify = 'cancel';
            verify = zuuluu.bind(tangon)(yankee, offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['actions'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();