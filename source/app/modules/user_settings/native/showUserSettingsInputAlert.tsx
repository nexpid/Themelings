// app/modules/user_settings/native/showUserSettingsInputAlert.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var1 = metroImportDefault;
    var _closure1_slot1 = var1;
    var _closure1_slot2 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var4 = var4.bind(var1)(var7);
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.jsx;
    var _closure1_slot3 = var4;
    var4 = 7;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/user_settings/native/showUserSettingsInputAlert.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function showUserSettingsInputAlert(arg1) {
        var3 = arg1;
        var1 = var3.onSubmit;
        var _closure2_slot0 = var1;
        var1 = var3.onSuccess;
        var _closure2_slot1 = var1;
        var1 = var3.onError;
        var _closure2_slot2 = var1;
        var2 = {'onSubmit': 0, 'onSuccess': 0, 'onError': 0};
        var7 = null;
        var8 = var2;
        var1 = silentSetPrototypeOf(var8, var7);
        var8 = {};
        var7 = var3;
        var6 = var2;
        var1 = copyDataProperties(var8, var7, var6);
        var _closure2_slot3 = var1;
        var3 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 2;
        var2 = var2[var1];
        var1 = undefined;
        var4 = var3.bind(var1)(var2);
        var3 = var4.openLazy;
        var2 = {};
        var5 = function importer() {
            var3 = _closure1_slot0;
            var1 = _closure1_slot2;
            var2 = 4;
            var2 = var1[var2];
            var4 = undefined;
            var3 = var3.bind(var4)(var2);
            var2 = 3;
            var2 = var1[var2];
            var1 = var1.paths;
            var3 = var3.bind(var4)(var2, var1);
            var2 = var3.then;
            var1 = function(arg1) {
                var2 = arg1;
                var2 = var2.default;
                var _closure4_slot0 = var2;
                var1 = function(arg1) {
                    _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
                        var4 = _closure1_slot3;
                        var3 = _closure4_slot0;
                        var2 = {};
                        var14 = arg1;
                        var15 = var2;
                        var1 = copyDataProperties(var15, var14);
                        var7 = _closure2_slot3;
                        var15 = var2;
                        var14 = var7;
                        var1 = copyDataProperties(var15, var14);
                        var11 = _closure1_slot0;
                        var12 = _closure1_slot2;
                        var8 = 5;
                        var9 = var12[var8];
                        var1 = undefined;
                        var9 = var11.bind(var1)(var9);
                        var13 = var9.intl;
                        var10 = var13.string;
                        var9 = var12[var8];
                        var9 = var11.bind(var1)(var9);
                        var9 = var9.t;
                        var9 = var9.ETE/oK;
                        var10 = var10.bind(var13)(var9);
                        var9 = 'cancelText';
                        var2[var9] = var10;
                        var9 = var12[var8];
                        var9 = var11.bind(var1)(var9);
                        var10 = var9.intl;
                        var9 = var10.string;
                        var8 = var12[var8];
                        var8 = var11.bind(var1)(var8);
                        var8 = var8.t;
                        var8 = var8.BddRzc;
                        var9 = var9.bind(var10)(var8);
                        var8 = 'confirmText';
                        var2[var8] = var9;
                        var8 = var7.confirmColor;
                        var7 = null;
                        if(!(var7 == var8)) { _fun0001_ip = 2; continue _fun0001 }
case 3:
                        var7 = _closure1_slot1;
                        var8 = _closure1_slot2;
                        var6 = 6;
                        var6 = var8[var6];
                        var6 = var7.bind(var1)(var6);
                        var6 = var6.Colors;
                        var7 = var6.RED;
                        _fun0001_ip = 4; continue _fun0001;
case 2:
                        var6 = _closure2_slot3;
                        var7 = var6.confirmColor;
case 4:
                        var6 = 'confirmColor';
                        var2[var6] = var7;
                        var7 = _closure2_slot0;
                        var6 = 'onSubmit';
                        var2[var6] = var7;
                        var7 = _closure2_slot1;
                        var6 = 'onSuccess';
                        var2[var6] = var7;
                        var6 = _closure2_slot2;
                        var5 = 'onError';
                        var2[var5] = var6;
                        var1 = var4.bind(var1)(var3, var2);
                        return var1;
                    }
                };
                return var1;
            };
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var2['importer'] = var5;
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['default'] = var2;
    return var1;
})();