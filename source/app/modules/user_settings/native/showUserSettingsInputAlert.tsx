// app/modules/user_settings/native/showUserSettingsInputAlert.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot3 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/showUserSettingsInputAlert.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: showUserSettingsInputAlert
        zuuluu = argFoo;
        entity = zuuluu.onSubmit;
        var _closure2_slot0 = entity;
        entity = zuuluu.onSuccess;
        var _closure2_slot1 = entity;
        entity = zuuluu.onError;
        var _closure2_slot2 = entity;
        michal = {'onSubmit': 0, 'onSuccess': 0, 'onError': 0};
        golfie = null;
        option = michal;
        entity = silentSetPrototypeOf(option, golfie);
        option = {};
        golfie = zuuluu;
        oscard = michal;
        entity = copyDataProperties(option, golfie, oscard);
        var _closure2_slot3 = entity;
        zuuluu = _closure1_slot1;
        michal = _closure1_slot2;
        entity = 2;
        michal = michal[entity];
        entity = undefined;
        tangon = zuuluu.bind(entity)(michal);
        zuuluu = tangon.openLazy;
        michal = {};
        report = function() { // Original name: importer
            zuuluu = _closure1_slot0;
            entity = _closure1_slot2;
            michal = 4;
            michal = entity[michal];
            tangon = undefined;
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = 3;
            michal = entity[michal];
            entity = entity.paths;
            zuuluu = zuuluu.bind(tangon)(michal, entity);
            michal = zuuluu.then;
            entity = function(argFoo) {
                michal = argFoo;
                michal = michal.default;
                var _closure4_slot0 = michal;
                entity = function(argFoo) {
                    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                        tangon = _closure1_slot3;
                        zuuluu = _closure4_slot0;
                        michal = {};
                        backup = argFoo;
                        kiloes = michal;
                        entity = copyDataProperties(kiloes, backup);
                        golfie = _closure2_slot3;
                        kiloes = michal;
                        backup = golfie;
                        entity = copyDataProperties(kiloes, backup);
                        yankee = _closure1_slot0;
                        romeon = _closure1_slot2;
                        option = 5;
                        verify = romeon[option];
                        entity = undefined;
                        verify = yankee.bind(entity)(verify);
                        foxtra = verify.intl;
                        offset = foxtra.string;
                        verify = romeon[option];
                        verify = yankee.bind(entity)(verify);
                        verify = verify.t;
                        verify = verify.ETE/oK;
                        offset = offset.bind(foxtra)(verify);
                        verify = 'cancelText';
                        michal[verify] = offset;
                        verify = romeon[option];
                        verify = yankee.bind(entity)(verify);
                        offset = verify.intl;
                        verify = offset.string;
                        option = romeon[option];
                        option = yankee.bind(entity)(option);
                        option = option.t;
                        option = option.BddRzc;
                        verify = verify.bind(offset)(option);
                        option = 'confirmText';
                        michal[option] = verify;
                        option = golfie.confirmColor;
                        golfie = null;
                        if(!(golfie == option)) { _fun00002_ip = 208; continue _fun00001 }
 174:
                        golfie = _closure1_slot1;
                        option = _closure1_slot2;
                        oscard = 6;
                        oscard = option[oscard];
                        oscard = golfie.bind(entity)(oscard);
                        oscard = oscard.Colors;
                        golfie = oscard.RED;
                        _fun00002_ip = 218; continue _fun00001;
 208:
                        oscard = _closure2_slot3;
                        golfie = oscard.confirmColor;
 218:
                        oscard = 'confirmColor';
                        michal[oscard] = golfie;
                        golfie = _closure2_slot0;
                        oscard = 'onSubmit';
                        michal[oscard] = golfie;
                        golfie = _closure2_slot1;
                        oscard = 'onSuccess';
                        michal[oscard] = golfie;
                        oscard = _closure2_slot2;
                        report = 'onError';
                        michal[report] = oscard;
                        entity = tangon.bind(entity)(zuuluu, michal);
                        return entity;
                    }
                };
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        michal['importer'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();