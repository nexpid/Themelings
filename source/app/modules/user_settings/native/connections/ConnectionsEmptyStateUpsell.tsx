// app/modules/user_settings/native/connections/ConnectionsEmptyStateUpsell.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: EmptyStateCard
        _fun95625: for(var _fun95625_ip = 0; ; ) switch(_fun95625_ip) {
 0:
            mike = argFoo;
            offset = mike.platform;
            var _closure2_slot0 = offset;
            mike = _closure1_slot8;
            tango = undefined;
            romeo = mike.bind(tango)();
            zulu = _closure1_slot1;
            oscar = _closure1_slot2;
            mike = 6;
            mike = oscar[mike];
            mike = zulu.bind(tango)(mike);
            yankee = mike.bind(tango)();
            var _closure2_slot1 = yankee;
            golf = _closure1_slot3;
            report = golf.useCallback;
            zulu = new Array(1);
            zulu[0] = offset;
            mike = function() {
                report = _closure1_slot1;
                tango = _closure1_slot2;
                entity = 7;
                zulu = tango[entity];
                entity = undefined;
                oscar = report.bind(entity)(zulu);
                zulu = {};
                report = _closure2_slot0;
                golf = report.type;
                zulu['platformType'] = golf;
                golf = _closure1_slot5;
                golf = golf.CONNECTIONS_EMPTY_STATE;
                zulu['location'] = golf;
                zulu = oscar.bind(entity)(zulu);
                zulu = _closure1_slot0;
                mike = 8;
                mike = tango[mike];
                tango = zulu.bind(entity)(mike);
                zulu = tango.trackEmptyStateCardClicked;
                mike = {};
                report = report.type;
                mike['platformType'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            report = report.bind(golf)(mike, zulu);
            mike = _closure1_slot0;
            zulu = 9;
            zulu = oscar[zulu];
            verify = mike.bind(tango)(zulu);
            golf = verify.getConnectionBackgroundColor;
            zulu = offset.type;
            backup = golf.bind(verify)(zulu);
            var _closure2_slot2 = backup;
            verify = _closure1_slot3;
            golf = verify.useMemo;
            zulu = new Array(5);
            zulu[0] = backup;
            foxtrot = offset.icon;
            foxtrot = foxtrot.darkPNG;
            zulu[1] = foxtrot;
            foxtrot = offset.icon;
            foxtrot = foxtrot.lightPNG;
            zulu[2] = foxtrot;
            foxtrot = offset.icon;
            foxtrot = foxtrot.whitePNG;
            zulu[3] = foxtrot;
            zulu[4] = yankee;
            entity = function() {
                _fun95627: for(var _fun95627_ip = 0; ; ) switch(_fun95627_ip) {
 0:
                    zulu = _closure1_slot0;
                    tango = _closure1_slot2;
                    mike = 10;
                    mike = tango[mike];
                    oscar = undefined;
                    zulu = zulu.bind(oscar)(mike);
                    mike = zulu.makeSource;
                    golf = _closure2_slot2;
                    report = null;
                    if(!(report == golf)) { _fun95627_ip = 107; continue _fun95627 }
 44:
                    report = _closure1_slot0;
                    golf = _closure1_slot2;
                    entity = 11;
                    entity = golf[entity];
                    oscar = report.bind(oscar)(entity);
                    report = oscar.isThemeDark;
                    entity = _closure2_slot1;
                    entity = report.bind(oscar)(entity);
                    report = _closure2_slot0;
                    report = report.icon;
                    if(entity) { _fun95627_ip = 99; continue _fun95627 }
 91:
                    entity = report.lightPNG;
                    _fun95627_ip = 105; continue _fun95627;
 99:
                    entity = report.darkPNG;
 105:
                    _fun95627_ip = 122; continue _fun95627;
 107:
                    tango = _closure2_slot0;
                    tango = tango.icon;
                    entity = tango.whitePNG;
 122:
                    entity = mike.bind(zulu)(entity);
                    return entity;
                }
            };
            yankee = golf.bind(verify)(entity, zulu);
            zulu = _closure1_slot6;
            entity = 12;
            entity = oscar[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.Card;
            entity = {};
            entity['onPress'] = report;
            report = romeo.card;
            entity['style'] = report;
            report = 'strong';
            entity['border'] = report;
            golf = _closure1_slot6;
            oscar = _closure1_slot4;
            report = {};
            foxtrot = romeo.iconContainer;
            verify = new Array(2);
            verify[0] = foxtrot;
            foxtrot = offset.color;
            offset = null;
            offset = offset != foxtrot;
            if(!offset) { _fun95625_ip = 295; continue _fun95625 }
 286:
            foxtrot = {};
            foxtrot['backgroundColor'] = backup;
            offset = foxtrot;
 295:
            verify[1] = offset;
            report['style'] = verify;
            offset = _closure1_slot6;
            verify = _closure1_slot1;
            foxtrot = _closure1_slot2;
            options = 13;
            options = foxtrot[options];
            verify = verify.bind(tango)(options);
            options = {};
            romeo = romeo.icon;
            options['style'] = romeo;
            options['source'] = yankee;
            yankee = 'contain';
            options['resizeMode'] = yankee;
            yankee = true;
            options['disableColor'] = yankee;
            options = offset.bind(tango)(verify, options);
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot9 = entity;
    entity = function(argFoo) { // Original name: OtherConnectionsCard
        entity = argFoo;
        offset = entity.count;
        entity = _closure1_slot8;
        tango = undefined;
        golf = entity.bind(tango)();
        oscar = _closure1_slot3;
        zulu = oscar.useCallback;
        mike = function() {
            report = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 14;
            tango = mike[entity];
            entity = undefined;
            report = report.bind(entity)(tango);
            tango = report.openLazy;
            oscar = _closure1_slot0;
            zulu = 16;
            zulu = mike[zulu];
            oscar = oscar.bind(entity)(zulu);
            zulu = 15;
            zulu = mike[zulu];
            mike = mike.paths;
            zulu = oscar.bind(entity)(zulu, mike);
            mike = 'AddConnection';
            mike = tango.bind(report)(zulu, mike);
            return entity;
        };
        entity = new Array(0);
        verify = zulu.bind(oscar)(mike, entity);
        zulu = _closure1_slot6;
        oscar = _closure1_slot0;
        options = _closure1_slot2;
        entity = 12;
        entity = options[entity];
        entity = oscar.bind(tango)(entity);
        mike = entity.Card;
        entity = {};
        entity['onPress'] = verify;
        golf = golf.card;
        entity['style'] = golf;
        golf = 'strong';
        entity['border'] = golf;
        golf = _closure1_slot6;
        report = 17;
        report = options[report];
        report = oscar.bind(tango)(report);
        oscar = report.Text;
        report = {'variant': 'text-md/medium', 'color': 'interactive-normal'};
        options = global;
        options = options.HermesInternal;
        verify = options.concat;
        options = '+';
        options = verify.bind(options)(offset);
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticsLocations;
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = function() {
        entity = {};
        zulu = 'center';
        mike = {'flex': 1, 'alignItems': 'center'};
        entity['container'] = mike;
        mike = {'flex': 1, 'width': '100%', 'maxWidth': 260, 'alignItems': 'center', 'justifyContent': 'center'};
        entity['content'] = mike;
        mike = {'flex': 1, 'maxHeight': 76, 'maxWidth': 76, 'aspectRatio': 1, 'alignItems': 'center', 'justifyContent': 'center', 'padding': 12};
        entity['card'] = mike;
        mike = {};
        tango = 32;
        mike['marginTop'] = tango;
        entity['textContainer'] = mike;
        mike = {};
        mike['textAlign'] = zulu;
        entity['text'] = mike;
        mike = {'flex': 1, 'maxHeight': 52, 'maxWidth': 52, 'aspectRatio': 1, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center', 'padding': 8};
        report = _closure1_slot1;
        tango = _closure1_slot2;
        zulu = 5;
        tango = tango[zulu];
        zulu = undefined;
        zulu = report.bind(zulu)(tango);
        zulu = zulu.radii;
        zulu = zulu.round;
        mike['borderRadius'] = zulu;
        entity['iconContainer'] = mike;
        mike = {'flex': 1, 'aspectRatio': 1};
        entity['icon'] = mike;
        return entity;
    };
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 22;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/connections/ConnectionsEmptyStateUpsell.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: ConnectionsEmptyStateUpsell
        entity = _closure1_slot8;
        tango = undefined;
        sizing = entity.bind(tango)();
        result = _closure1_slot0;
        echo = _closure1_slot2;
        entity = 18;
        entity = echo[entity];
        mike = result.bind(tango)(entity);
        entity = mike.useEmptyStatePlatforms;
        control = entity.bind(mike)();
        var _closure2_slot0 = control;
        report = _closure1_slot3;
        zulu = report.useMemo;
        mike = new Array(1);
        mike[0] = control;
        entity = function() {
            tango = _closure2_slot0;
            zulu = tango.slice;
            mike = 0;
            entity = 3;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        };
        vacuum = zulu.bind(report)(entity, mike);
        report = _closure1_slot3;
        zulu = report.useMemo;
        mike = new Array(1);
        mike[0] = control;
        entity = function() {
            tango = _closure2_slot0;
            zulu = tango.slice;
            mike = 3;
            entity = 5;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        };
        update = zulu.bind(report)(entity, mike);
        mike = _closure1_slot1;
        entity = 19;
        entity = echo[entity];
        entity = mike.bind(tango)(entity);
        entity = entity.bind(tango)();
        golf = entity.bottom;
        zulu = _closure1_slot6;
        mike = _closure1_slot4;
        entity = {};
        oscar = sizing.container;
        report = new Array(2);
        report[0] = oscar;
        oscar = {};
        oscar['paddingBottom'] = golf;
        report[1] = oscar;
        entity['style'] = report;
        golf = _closure1_slot7;
        oscar = _closure1_slot4;
        report = {};
        options = sizing.content;
        report['style'] = options;
        verify = 20;
        options = echo[verify];
        options = result.bind(tango)(options);
        offset = options.Stack;
        options = {'spacing': 16, 'direction': 'vertical', 'align': 'center'};
        yankee = sizing.textContainer;
        options['style'] = yankee;
        backup = _closure1_slot6;
        yankee = echo[verify];
        yankee = result.bind(tango)(yankee);
        romeo = yankee.Stack;
        yankee = {'spacing': 16, 'justify': 'center', 'direction': 'horizontal'};
        source = vacuum.map;
        output = function(argFoo) {
            entity = argFoo;
            report = _closure1_slot6;
            tango = _closure1_slot9;
            zulu = {};
            zulu['platform'] = entity;
            mike = entity.type;
            entity = undefined;
            entity = report.bind(entity)(tango, zulu, mike);
            return entity;
        };
        output = source.bind(vacuum)(output);
        yankee['children'] = output;
        romeo = backup.bind(tango)(romeo, yankee);
        yankee = new Array(2);
        yankee[0] = romeo;
        romeo = echo[verify];
        romeo = result.bind(tango)(romeo);
        backup = romeo.Stack;
        romeo = {'spacing': 16, 'justify': 'center', 'direction': 'horizontal'};
        output = update.map;
        kilo = function(argFoo) {
            entity = argFoo;
            report = _closure1_slot6;
            tango = _closure1_slot9;
            zulu = {};
            zulu['platform'] = entity;
            mike = entity.type;
            entity = undefined;
            entity = report.bind(entity)(tango, zulu, mike);
            return entity;
        };
        output = output.bind(update)(kilo);
        kilo = new Array(2);
        kilo[0] = output;
        source = _closure1_slot6;
        update = _closure1_slot10;
        output = {};
        vacuum = control.length;
        control = 5;
        control = vacuum - control;
        output['count'] = control;
        output = source.bind(tango)(update, output);
        kilo[1] = output;
        romeo['children'] = kilo;
        romeo = golf.bind(tango)(backup, romeo);
        yankee[1] = romeo;
        options['children'] = yankee;
        offset = golf.bind(tango)(offset, options);
        options = new Array(2);
        options[0] = offset;
        verify = echo[verify];
        verify = result.bind(tango)(verify);
        offset = verify.Stack;
        verify = {'spacing': 8, 'align': 'center'};
        yankee = sizing.textContainer;
        verify['style'] = yankee;
        output = _closure1_slot6;
        romeo = 17;
        yankee = echo[romeo];
        yankee = result.bind(tango)(yankee);
        backup = yankee.Text;
        yankee = {'variant': 'text-lg/bold', 'color': 'header-primary'};
        kilo = sizing.text;
        yankee['style'] = kilo;
        kilo = 21;
        update = echo[kilo];
        update = result.bind(tango)(update);
        control = update.intl;
        source = control.string;
        update = echo[kilo];
        update = result.bind(tango)(update);
        update = update.t;
        update = update.JlrHXV;
        update = source.bind(control)(update);
        yankee['children'] = update;
        backup = output.bind(tango)(backup, yankee);
        yankee = new Array(2);
        yankee[0] = backup;
        backup = _closure1_slot6;
        romeo = echo[romeo];
        romeo = result.bind(tango)(romeo);
        foxtrot = romeo.Text;
        romeo = {'variant': 'text-md/medium', 'color': 'header-secondary'};
        sizing = sizing.text;
        romeo['style'] = sizing;
        sizing = echo[kilo];
        sizing = result.bind(tango)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kilo = echo[kilo];
        kilo = result.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.XijaQE;
        kilo = sizing.bind(output)(kilo);
        romeo['children'] = kilo;
        romeo = backup.bind(tango)(foxtrot, romeo);
        yankee[1] = romeo;
        verify['children'] = yankee;
        verify = golf.bind(tango)(offset, verify);
        options[1] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();