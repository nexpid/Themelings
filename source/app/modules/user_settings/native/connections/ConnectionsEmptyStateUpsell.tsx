// app/modules/user_settings/native/connections/ConnectionsEmptyStateUpsell.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: EmptyStateCard
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            yankee = michal.platform;
            var _closure2_slot0 = yankee;
            michal = _closure1_slot8;
            tangon = undefined;
            foxtra = michal.bind(tangon)();
            zuuluu = _closure1_slot1;
            oscard = _closure1_slot2;
            michal = 6;
            michal = oscard[michal];
            michal = zuuluu.bind(tangon)(michal);
            offset = michal.bind(tangon)();
            var _closure2_slot1 = offset;
            golfie = _closure1_slot3;
            report = golfie.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = yankee;
            michal = function() {
                report = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 7;
                zuuluu = tangon[entity];
                entity = undefined;
                oscard = report.bind(entity)(zuuluu);
                zuuluu = {};
                report = _closure2_slot0;
                golfie = report.type;
                zuuluu['platformType'] = golfie;
                golfie = _closure1_slot5;
                golfie = golfie.CONNECTIONS_EMPTY_STATE;
                zuuluu['location'] = golfie;
                zuuluu = oscard.bind(entity)(zuuluu);
                zuuluu = _closure1_slot0;
                michal = 8;
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.trackEmptyStateCardClicked;
                michal = {};
                report = report.type;
                michal['platformType'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            report = report.bind(golfie)(michal, zuuluu);
            michal = _closure1_slot0;
            zuuluu = 9;
            zuuluu = oscard[zuuluu];
            verify = michal.bind(tangon)(zuuluu);
            golfie = verify.getConnectionBackgroundColor;
            zuuluu = yankee.type;
            kiloes = golfie.bind(verify)(zuuluu);
            var _closure2_slot2 = kiloes;
            verify = _closure1_slot3;
            golfie = verify.useMemo;
            zuuluu = new Array(5);
            zuuluu[0] = kiloes;
            romeon = yankee.icon;
            romeon = romeon.darkPNG;
            zuuluu[1] = romeon;
            romeon = yankee.icon;
            romeon = romeon.lightPNG;
            zuuluu[2] = romeon;
            romeon = yankee.icon;
            romeon = romeon.whitePNG;
            zuuluu[3] = romeon;
            zuuluu[4] = offset;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure1_slot0;
                    tangon = _closure1_slot2;
                    michal = 10;
                    michal = tangon[michal];
                    oscard = undefined;
                    zuuluu = zuuluu.bind(oscard)(michal);
                    michal = zuuluu.makeSource;
                    golfie = _closure2_slot2;
                    report = null;
                    if(!(report == golfie)) { _fun00004_ip = 107; continue _fun00003 }
 44:
                    report = _closure1_slot0;
                    golfie = _closure1_slot2;
                    entity = 11;
                    entity = golfie[entity];
                    oscard = report.bind(oscard)(entity);
                    report = oscard.isThemeDark;
                    entity = _closure2_slot1;
                    entity = report.bind(oscard)(entity);
                    report = _closure2_slot0;
                    report = report.icon;
                    if(entity) { _fun00004_ip = 99; continue _fun00003 }
 91:
                    entity = report.lightPNG;
                    _fun00004_ip = 105; continue _fun00003;
 99:
                    entity = report.darkPNG;
 105:
                    _fun00004_ip = 122; continue _fun00003;
 107:
                    tangon = _closure2_slot0;
                    tangon = tangon.icon;
                    entity = tangon.whitePNG;
 122:
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                }
            };
            romeon = golfie.bind(verify)(entity, zuuluu);
            zuuluu = _closure1_slot6;
            entity = 12;
            entity = oscard[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.Card;
            entity = {};
            entity['onPress'] = report;
            report = foxtra.card;
            entity['style'] = report;
            report = 'strong';
            entity['border'] = report;
            golfie = _closure1_slot6;
            oscard = _closure1_slot4;
            report = {};
            offset = foxtra.iconContainer;
            verify = new Array(2);
            verify[0] = offset;
            backup = yankee.color;
            offset = null;
            offset = offset != backup;
            if(!offset) { _fun00002_ip = 295; continue _fun00001 }
 286:
            backup = {};
            backup['backgroundColor'] = kiloes;
            offset = backup;
 295:
            verify[1] = offset;
            report['style'] = verify;
            offset = _closure1_slot6;
            verify = _closure1_slot1;
            backup = _closure1_slot2;
            option = 13;
            option = backup[option];
            verify = verify.bind(tangon)(option);
            option = {};
            foxtra = foxtra.icon;
            option['style'] = foxtra;
            option['source'] = romeon;
            romeon = 'contain';
            option['resizeMode'] = romeon;
            romeon = true;
            option['disableColor'] = romeon;
            yankee = yankee.name;
            option['accessibilityLabel'] = yankee;
            option = offset.bind(tangon)(verify, option);
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot9 = entity;
    entity = function(argFoo) { // Original name: OtherConnectionsCard
        entity = argFoo;
        offset = entity.count;
        entity = _closure1_slot8;
        tangon = undefined;
        golfie = entity.bind(tangon)();
        oscard = _closure1_slot3;
        zuuluu = oscard.useCallback;
        michal = function() {
            report = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 14;
            tangon = michal[entity];
            entity = undefined;
            report = report.bind(entity)(tangon);
            tangon = report.openLazy;
            oscard = _closure1_slot0;
            zuuluu = 16;
            zuuluu = michal[zuuluu];
            oscard = oscard.bind(entity)(zuuluu);
            zuuluu = 15;
            zuuluu = michal[zuuluu];
            michal = michal.paths;
            zuuluu = oscard.bind(entity)(zuuluu, michal);
            michal = 'AddConnection';
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        entity = new Array(0);
        verify = zuuluu.bind(oscard)(michal, entity);
        zuuluu = _closure1_slot6;
        oscard = _closure1_slot0;
        option = _closure1_slot2;
        entity = 12;
        entity = option[entity];
        entity = oscard.bind(tangon)(entity);
        michal = entity.Card;
        entity = {};
        entity['onPress'] = verify;
        golfie = golfie.card;
        entity['style'] = golfie;
        golfie = 'strong';
        entity['border'] = golfie;
        golfie = _closure1_slot6;
        report = 17;
        report = option[report];
        report = oscard.bind(tangon)(report);
        oscard = report.Text;
        report = {'variant': 'text-md/medium', 'color': 'interactive-normal'};
        option = global;
        option = option.HermesInternal;
        verify = option.concat;
        option = '+';
        option = verify.bind(option)(offset);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticsLocations;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = function() {
        entity = {};
        zuuluu = 'center';
        michal = {'flex': 1, 'alignItems': 'center'};
        entity['container'] = michal;
        michal = {'flex': 1, 'width': '100%', 'maxWidth': 260, 'alignItems': 'center', 'justifyContent': 'center'};
        entity['content'] = michal;
        michal = {'flex': 1, 'maxHeight': 76, 'maxWidth': 76, 'aspectRatio': 1, 'alignItems': 'center', 'justifyContent': 'center', 'padding': 12};
        entity['card'] = michal;
        michal = {};
        tangon = 32;
        michal['marginTop'] = tangon;
        entity['textContainer'] = michal;
        michal = {};
        michal['textAlign'] = zuuluu;
        entity['text'] = michal;
        michal = {'flex': 1, 'maxHeight': 52, 'maxWidth': 52, 'aspectRatio': 1, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center', 'padding': 8};
        report = _closure1_slot1;
        tangon = _closure1_slot2;
        zuuluu = 5;
        tangon = tangon[zuuluu];
        zuuluu = undefined;
        zuuluu = report.bind(zuuluu)(tangon);
        zuuluu = zuuluu.radii;
        zuuluu = zuuluu.round;
        michal['borderRadius'] = zuuluu;
        entity['iconContainer'] = michal;
        michal = {'flex': 1, 'aspectRatio': 1};
        entity['icon'] = michal;
        return entity;
    };
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 22;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/connections/ConnectionsEmptyStateUpsell.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: ConnectionsEmptyStateUpsell
        entity = _closure1_slot8;
        tangon = undefined;
        sizing = entity.bind(tangon)();
        result = _closure1_slot0;
        echoed = _closure1_slot2;
        entity = 18;
        entity = echoed[entity];
        michal = result.bind(tangon)(entity);
        entity = michal.useEmptyStatePlatforms;
        ctrled = entity.bind(michal)();
        var _closure2_slot0 = ctrled;
        report = _closure1_slot3;
        zuuluu = report.useMemo;
        michal = new Array(1);
        michal[0] = ctrled;
        entity = function() {
            tangon = _closure2_slot0;
            zuuluu = tangon.slice;
            michal = 0;
            entity = 3;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        vacuum = zuuluu.bind(report)(entity, michal);
        report = _closure1_slot3;
        zuuluu = report.useMemo;
        michal = new Array(1);
        michal[0] = ctrled;
        entity = function() {
            tangon = _closure2_slot0;
            zuuluu = tangon.slice;
            michal = 3;
            entity = 5;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        update = zuuluu.bind(report)(entity, michal);
        michal = _closure1_slot1;
        entity = 19;
        entity = echoed[entity];
        entity = michal.bind(tangon)(entity);
        entity = entity.bind(tangon)();
        golfie = entity.bottom;
        zuuluu = _closure1_slot6;
        michal = _closure1_slot4;
        entity = {};
        oscard = sizing.container;
        report = new Array(2);
        report[0] = oscard;
        oscard = {};
        oscard['paddingBottom'] = golfie;
        report[1] = oscard;
        entity['style'] = report;
        golfie = _closure1_slot7;
        oscard = _closure1_slot4;
        report = {};
        option = sizing.content;
        report['style'] = option;
        verify = 20;
        option = echoed[verify];
        option = result.bind(tangon)(option);
        offset = option.Stack;
        option = {'spacing': 16, 'direction': 'vertical', 'align': 'center'};
        yankee = sizing.textContainer;
        option['style'] = yankee;
        backup = _closure1_slot6;
        yankee = echoed[verify];
        yankee = result.bind(tangon)(yankee);
        romeon = yankee.Stack;
        yankee = {'spacing': 16, 'justify': 'center', 'direction': 'horizontal'};
        source = vacuum.map;
        output = function(argFoo) {
            entity = argFoo;
            report = _closure1_slot6;
            tangon = _closure1_slot9;
            zuuluu = {};
            zuuluu['platform'] = entity;
            michal = entity.type;
            entity = undefined;
            entity = report.bind(entity)(tangon, zuuluu, michal);
            return entity;
        };
        output = source.bind(vacuum)(output);
        yankee['children'] = output;
        romeon = backup.bind(tangon)(romeon, yankee);
        yankee = new Array(2);
        yankee[0] = romeon;
        romeon = echoed[verify];
        romeon = result.bind(tangon)(romeon);
        backup = romeon.Stack;
        romeon = {'spacing': 16, 'justify': 'center', 'direction': 'horizontal'};
        output = update.map;
        kiloes = function(argFoo) {
            entity = argFoo;
            report = _closure1_slot6;
            tangon = _closure1_slot9;
            zuuluu = {};
            zuuluu['platform'] = entity;
            michal = entity.type;
            entity = undefined;
            entity = report.bind(entity)(tangon, zuuluu, michal);
            return entity;
        };
        output = output.bind(update)(kiloes);
        kiloes = new Array(2);
        kiloes[0] = output;
        source = _closure1_slot6;
        update = _closure1_slot10;
        output = {};
        vacuum = ctrled.length;
        ctrled = 5;
        ctrled = vacuum - ctrled;
        output['count'] = ctrled;
        output = source.bind(tangon)(update, output);
        kiloes[1] = output;
        romeon['children'] = kiloes;
        romeon = golfie.bind(tangon)(backup, romeon);
        yankee[1] = romeon;
        option['children'] = yankee;
        offset = golfie.bind(tangon)(offset, option);
        option = new Array(2);
        option[0] = offset;
        verify = echoed[verify];
        verify = result.bind(tangon)(verify);
        offset = verify.Stack;
        verify = {'spacing': 8, 'align': 'center'};
        yankee = sizing.textContainer;
        verify['style'] = yankee;
        output = _closure1_slot6;
        romeon = 17;
        yankee = echoed[romeon];
        yankee = result.bind(tangon)(yankee);
        backup = yankee.Text;
        yankee = {'variant': 'text-lg/bold', 'color': 'header-primary'};
        kiloes = sizing.text;
        yankee['style'] = kiloes;
        kiloes = 21;
        update = echoed[kiloes];
        update = result.bind(tangon)(update);
        ctrled = update.intl;
        source = ctrled.string;
        update = echoed[kiloes];
        update = result.bind(tangon)(update);
        update = update.t;
        update = update.JlrHXV;
        update = source.bind(ctrled)(update);
        yankee['children'] = update;
        backup = output.bind(tangon)(backup, yankee);
        yankee = new Array(2);
        yankee[0] = backup;
        backup = _closure1_slot6;
        romeon = echoed[romeon];
        romeon = result.bind(tangon)(romeon);
        foxtra = romeon.Text;
        romeon = {'variant': 'text-md/medium', 'color': 'header-secondary'};
        sizing = sizing.text;
        romeon['style'] = sizing;
        sizing = echoed[kiloes];
        sizing = result.bind(tangon)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kiloes = echoed[kiloes];
        kiloes = result.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.XijaQE;
        kiloes = sizing.bind(output)(kiloes);
        romeon['children'] = kiloes;
        romeon = backup.bind(tangon)(foxtra, romeon);
        yankee[1] = romeon;
        verify['children'] = yankee;
        verify = golfie.bind(tangon)(offset, verify);
        option[1] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();