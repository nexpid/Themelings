// app/modules/user_settings/native/UserSettingsPremiumGifting.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    yankee = 0;
    tangon = oscard[yankee];
    entity = undefined;
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    sizing = 1;
    golfie = oscard[sizing];
    tangon = argCor;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot4 = golfie;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.ActivityIndicator;
    var _closure1_slot5 = option;
    option = tangon.Image;
    var _closure1_slot6 = option;
    option = tangon.View;
    var _closure1_slot7 = option;
    backup = tangon.StyleSheet;
    tangon = tangon.ScrollView;
    var _closure1_slot8 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.UserSettingsSections;
    var _closure1_slot10 = option;
    kiloes = tangon.USER_SETTINGS_CONTAINER_HORIZONTAL_PADDING;
    tangon = tangon.AnalyticsPages;
    var _closure1_slot11 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.PremiumTypes;
    var _closure1_slot12 = option;
    tangon = tangon.SubscriptionPlans;
    var _closure1_slot13 = tangon;
    tangon = 6;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot14 = option;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsxs;
    var _closure1_slot15 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot16 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    offset['flex'] = sizing;
    tangon['giftingSettingsContainer'] = offset;
    offset = {'alignSelf': 'center', 'position': 'absolute', 'top': 0};
    tangon['topBackground'] = offset;
    offset = {'alignSelf': 'center', 'position': 'absolute', 'bottom': 0};
    tangon['bottomBackground'] = offset;
    offset = {};
    offset['paddingHorizontal'] = yankee;
    tangon['hint'] = offset;
    offset = {};
    yankee = 50;
    offset['marginBottom'] = yankee;
    tangon['subscriptionHeader'] = offset;
    offset = {};
    offset['flex'] = sizing;
    romeon = 8;
    yankee = oscard[romeon];
    yankee = foxtra.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_MOBILE_PRIMARY;
    offset['backgroundColor'] = yankee;
    tangon['inventorySectionWrapper'] = offset;
    offset = {'flex': 1, 'paddingTop': 36, 'paddingBottom': 16};
    yankee = 16;
    output = oscard[romeon];
    output = foxtra.bind(entity)(output);
    output = output.colors;
    output = output.BACKGROUND_MOBILE_PRIMARY;
    offset['backgroundColor'] = output;
    tangon['giftPurchaseSectionWrapper'] = offset;
    offset = {'flex': 1, 'flexDirection': 'row', 'alignItems': 'center', 'paddingVertical': 16};
    backup = backup.hairlineWidth;
    offset['borderWidth'] = backup;
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MOBILE_SECONDARY;
    offset['backgroundColor'] = backup;
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY_ALT;
    offset['borderColor'] = backup;
    tangon['emptyGiftLinks'] = offset;
    offset = {};
    backup = 18;
    offset['marginRight'] = backup;
    tangon['emptyImage'] = offset;
    offset = {};
    output = 20;
    offset['lineHeight'] = output;
    tangon['emptyGiftHeader'] = offset;
    offset = {};
    offset['flex'] = sizing;
    tangon['emptyGiftDescription'] = offset;
    offset = {};
    offset['marginTop'] = romeon;
    tangon['emptyGiftInformation'] = offset;
    offset = {'lineHeight': 16, 'textTransform': 'uppercase'};
    offset['marginHorizontal'] = kiloes;
    tangon['title'] = offset;
    offset = {'marginTop': 12, 'fontSize': 14, 'fontWeight': '400'};
    kiloes = oscard[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.HEADER_SECONDARY;
    offset['color'] = kiloes;
    tangon['subtitle'] = offset;
    offset = {'paddingTop': 28, 'paddingBottom': 8};
    kiloes = oscard[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_MOBILE_PRIMARY;
    offset['backgroundColor'] = kiloes;
    tangon['titleWrapper'] = offset;
    offset = {};
    offset['lineHeight'] = backup;
    tangon['cardText'] = offset;
    offset = {};
    offset['marginTop'] = yankee;
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_ACCENT;
    offset['backgroundColor'] = romeon;
    tangon['ctaButton'] = offset;
    offset = {};
    offset['marginTop'] = yankee;
    tangon['tierCard'] = offset;
    offset = {'marginTop': 8, 'height': 40};
    tangon['giftPurchaseButton'] = offset;
    offset = {};
    offset['marginTop'] = yankee;
    tangon['buttonWrapper'] = offset;
    offset = {};
    romeon = 32;
    offset['marginTop'] = romeon;
    tangon['loading'] = offset;
    offset = {};
    offset['marginHorizontal'] = yankee;
    tangon['warningMargins'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot17 = tangon;
    tangon = golfie.forwardRef;
    michal = function(argFoo, argBar) { // Original name: UserSettingsPremiumGifting
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            verify = argBar;
            equals = entity.recipientUserId;
            sierra = entity.analyticsLocation;
            report = undefined;
            if(!(sierra === report)) { _fun00002_ip = 49; continue _fun00001 }
 26:
            entity = {};
            michal = _closure1_slot11;
            michal = michal.GIFTING_SETTINGS;
            entity['page'] = michal;
            sierra = entity;
 49:
            var _closure2_slot0 = report;
            var _closure2_slot1 = report;
            var _closure2_slot2 = report;
            var _closure2_slot3 = report;
            var _closure2_slot4 = report;
            var _closure2_slot5 = report;
            var _closure2_slot6 = report;
            var _closure2_slot7 = report;
            var _closure2_slot8 = report;
            variable37 = function() { // Original name: handleLearnMorePremiumClick
                tangon = _closure1_slot1;
                report = _closure1_slot2;
                entity = 22;
                michal = report[entity];
                entity = undefined;
                golfie = tangon.bind(entity)(michal);
                oscard = golfie.setSection;
                michal = _closure1_slot10;
                tangon = michal.PREMIUM_GIFTING;
                tangon = oscard.bind(golfie)(tangon);
                tangon = _closure1_slot0;
                zuuluu = 23;
                zuuluu = report[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                tangon = report.trackPaneViewed;
                zuuluu = michal.PREMIUM_GIFTING;
                zuuluu = tangon.bind(report)(zuuluu);
                tangon = _closure2_slot1;
                zuuluu = tangon.push;
                michal = michal.PREMIUM;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity = _closure1_slot17;
            oscard = entity.bind(report)();
            _closure2_slot0 = oscard;
            romeon = _closure1_slot1;
            tangon = _closure1_slot2;
            entity = 9;
            entity = tangon[entity];
            entity = romeon.bind(report)(entity);
            entity = entity.bind(report)();
            zuuluu = _closure1_slot0;
            entity = 10;
            entity = tangon[entity];
            michal = zuuluu.bind(report)(entity);
            entity = michal.useNavigation;
            entity = entity.bind(michal)();
            _closure2_slot1 = entity;
            entity = 11;
            entity = tangon[entity];
            entity = romeon.bind(report)(entity);
            entity = entity.bind(report)();
            offset = entity.bottom;
            entity = 12;
            entity = tangon[entity];
            yankee = zuuluu.bind(report)(entity);
            golfie = yankee.useStateFromStoresArray;
            entity = _closure1_slot9;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot9;
                entity = michal.getGiftable;
                entity = entity.bind(michal)();
                return entity;
            };
            entity = golfie.bind(yankee)(michal, entity);
            _closure2_slot2 = entity;
            golfie = _closure1_slot4;
            yankee = golfie.useMemo;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 13;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.groupBy;
                michal = _closure2_slot2;
                entity = function(argFoo) {
                    entity = argFoo;
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 14;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    report = tangon.bind(michal)(zuuluu);
                    tangon = report.makeComboId;
                    zuuluu = entity.skuId;
                    michal = entity.subscriptionPlanId;
                    entity = entity.giftStyle;
                    entity = tangon.bind(report)(zuuluu, michal, entity);
                    return entity;
                };
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            entity = yankee.bind(golfie)(entity, michal);
            _closure2_slot3 = entity;
            entity = 15;
            entity = tangon[entity];
            backup = romeon.bind(report)(entity);
            foxtra = backup.useExperiment;
            michal = {};
            entity = '458d7b_1';
            michal['location'] = entity;
            entity = {};
            yankee = false;
            entity['autoTrackExposure'] = yankee;
            entity = foxtra.bind(backup)(michal, entity);
            entity = entity.paymentsBlocked;
            michal = 16;
            michal = tangon[michal];
            foxtra = zuuluu.bind(report)(michal);
            michal = foxtra.useOutboundPromotions;
            michal = michal.bind(foxtra)();
            sizing = michal.promotionsLoaded;
            foxtra = michal.activeOutboundPromotions;
            _closure2_slot4 = foxtra;
            foxtra = michal.claimedEndedOutboundPromotions;
            _closure2_slot5 = foxtra;
            foxtra = michal.claimedOutboundPromotionCodeMap;
            _closure2_slot6 = foxtra;
            michal = michal.addClaimedOutboundPromotionCode;
            _closure2_slot7 = michal;
            michal = 17;
            michal = tangon[michal];
            michal = romeon.bind(report)(michal);
            kiloes = michal.bind(report)();
            michal = golfie.useState;
            romeon = michal.bind(golfie)(yankee);
            yankee = _closure1_slot3;
            michal = 2;
            yankee = yankee.bind(report)(romeon, michal);
            michal = 0;
            result = yankee[michal];
            michal = 1;
            michal = yankee[michal];
            _closure2_slot8 = michal;
            michal = 18;
            michal = tangon[michal];
            zuuluu = zuuluu.bind(report)(michal);
            michal = zuuluu.useSubscriptionPlansLoaded;
            backup = michal.bind(zuuluu)();
            tangon = golfie.useEffect;
            zuuluu = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 19;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.wait;
                michal = function() {
                    report = _closure1_slot0;
                    tangon = _closure1_slot2;
                    entity = 20;
                    zuuluu = tangon[entity];
                    entity = undefined;
                    report = report.bind(entity)(zuuluu);
                    zuuluu = report.fetchGiftableEntitlements;
                    oscard = zuuluu.bind(report)();
                    report = oscard.then;
                    zuuluu = function() {
                        zuuluu = _closure2_slot8;
                        michal = undefined;
                        entity = true;
                        entity = zuuluu.bind(michal)(entity);
                        return entity;
                    };
                    zuuluu = report.bind(oscard)(zuuluu);
                    zuuluu = _closure1_slot1;
                    michal = 21;
                    michal = tangon[michal];
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.init;
                    michal = michal.bind(zuuluu)();
                    return entity;
                };
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            michal = new Array(0);
            michal = tangon.bind(golfie)(zuuluu, michal);
            if(entity) { _fun00002_ip = 1698; continue _fun00001 }
 488:
            zuuluu = _closure1_slot15;
            michal = _closure1_slot7;
            entity = {};
            tangon = oscard.giftingSettingsContainer;
            entity['style'] = tangon;
            yankee = _closure1_slot14;
            golfie = _closure1_slot1;
            echoed = _closure1_slot2;
            tangon = 35;
            tangon = echoed[tangon];
            golfie = golfie.bind(report)(tangon);
            tangon = {};
            golfie = yankee.bind(report)(golfie, tangon);
            tangon = new Array(2);
            tangon[0] = golfie;
            yankee = _closure1_slot8;
            golfie = {};
            golfie['ref'] = verify;
            romeon = {};
            romeon['bottom'] = offset;
            golfie['contentInset'] = romeon;
            foxtra = _closure1_slot0;
            romeon = 36;
            romeon = echoed[romeon];
            foxtra = foxtra.bind(report)(romeon);
            romeon = foxtra.isThemeDark;
            foxtra = romeon.bind(foxtra)(kiloes);
            kiloes = _closure1_slot1;
            echoed = _closure1_slot2;
            romeon = 8;
            romeon = echoed[romeon];
            romeon = kiloes.bind(report)(romeon);
            romeon = romeon.unsafe_rawColors;
            if(foxtra) { _fun00002_ip = 632; continue _fun00001 }
 624:
            update = romeon.PRIMARY_500;
            _fun00002_ip = 638; continue _fun00001;
 632:
            update = romeon.WHITE_500;
 638:
            kiloes = _closure1_slot14;
            foxtra = _closure1_slot7;
            romeon = {};
            if(!result) { _fun00002_ip = 657; continue _fun00001 }
 651:
            if(!sizing) { _fun00002_ip = 657; continue _fun00001 }
 654:
            if(backup) { _fun00002_ip = 689; continue _fun00001 }
 657:
            echoed = _closure1_slot14;
            result = _closure1_slot5;
            sizing = {};
            source = oscard.loading;
            sizing['style'] = source;
            sizing['color'] = update;
            sizing = echoed.bind(report)(result, sizing);
            _fun00002_ip = 700; continue _fun00001;
 689:
            output = function() { // Original name: renderInventory
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = global;
                    zuuluu = entity.Object;
                    michal = zuuluu.keys;
                    entity = _closure2_slot3;
                    backup = michal.bind(zuuluu)(entity);
                    entity = backup.length;
                    option = 0;
                    if(!(option === entity)) { _fun00004_ip = 67; continue _fun00003 }
 38:
                    entity = _closure2_slot4;
                    entity = entity.length;
                    if(!(option === entity)) { _fun00004_ip = 67; continue _fun00003 }
 51:
                    entity = _closure2_slot5;
                    entity = entity.length;
                    if(!(option !== entity)) { _fun00004_ip = 596; continue _fun00003 }
 67:
                    tangon = _closure1_slot15;
                    zuuluu = _closure1_slot7;
                    michal = {};
                    entity = _closure2_slot0;
                    entity = entity.inventorySectionWrapper;
                    michal['style'] = entity;
                    entity = _closure2_slot4;
                    report = entity.length;
                    entity = _closure2_slot5;
                    entity = entity.length;
                    entity = report + entity;
                    golfie = null;
                    if(!(entity > option)) { _fun00004_ip = 352; continue _fun00003 }
 125:
                    romeon = _closure1_slot15;
                    offset = _closure1_slot16;
                    verify = {};
                    output = _closure1_slot14;
                    sizing = _closure1_slot7;
                    kiloes = {};
                    entity = _closure2_slot0;
                    entity = entity.titleWrapper;
                    kiloes['style'] = entity;
                    vacuum = _closure1_slot0;
                    sequen = _closure1_slot2;
                    entity = 25;
                    result = sequen[entity];
                    entity = undefined;
                    result = vacuum.bind(entity)(result);
                    echoed = result.Text;
                    result = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-xs/bold', 'color': 'header-secondary'};
                    update = _closure2_slot0;
                    update = update.title;
                    result['style'] = update;
                    update = 26;
                    source = sequen[update];
                    source = vacuum.bind(entity)(source);
                    ctrled = source.intl;
                    source = ctrled.string;
                    update = sequen[update];
                    update = vacuum.bind(entity)(update);
                    update = update.t;
                    update = update.wFsj3N;
                    update = source.bind(ctrled)(update);
                    result['children'] = update;
                    result = output.bind(entity)(echoed, result);
                    kiloes['children'] = result;
                    sizing = output.bind(entity)(sizing, kiloes);
                    kiloes = new Array(3);
                    kiloes[0] = sizing;
                    result = _closure2_slot5;
                    output = result.map;
                    sizing = function(argFoo) {
                        entity = argFoo;
                        oscard = entity.code;
                        entity = entity.promotion;
                        report = _closure1_slot14;
                        zuuluu = _closure1_slot1;
                        tangon = _closure1_slot2;
                        michal = 27;
                        michal = tangon[michal];
                        tangon = undefined;
                        zuuluu = zuuluu.bind(tangon)(michal);
                        michal = {};
                        michal['outboundPromotion'] = entity;
                        michal['code'] = oscard;
                        oscard = _closure2_slot7;
                        michal['addClaimedOutboundPromotionCode'] = oscard;
                        entity = entity.id;
                        entity = report.bind(tangon)(zuuluu, michal, entity);
                        return entity;
                    };
                    sizing = output.bind(result)(sizing);
                    kiloes[1] = sizing;
                    result = _closure2_slot4;
                    output = result.map;
                    sizing = function(argFoo) {
                        entity = argFoo;
                        report = _closure1_slot14;
                        zuuluu = _closure1_slot1;
                        tangon = _closure1_slot2;
                        michal = 27;
                        michal = tangon[michal];
                        tangon = undefined;
                        zuuluu = zuuluu.bind(tangon)(michal);
                        michal = {};
                        michal['outboundPromotion'] = entity;
                        option = _closure2_slot6;
                        golfie = entity.id;
                        golfie = option[golfie];
                        michal['code'] = golfie;
                        oscard = _closure2_slot7;
                        michal['addClaimedOutboundPromotionCode'] = oscard;
                        entity = entity.id;
                        entity = report.bind(tangon)(zuuluu, michal, entity);
                        return entity;
                    };
                    sizing = output.bind(result)(sizing);
                    kiloes[2] = sizing;
                    verify['children'] = kiloes;
                    golfie = romeon.bind(entity)(offset, verify);
 352:
                    entity = new Array(2);
                    entity[0] = golfie;
                    golfie = backup.length;
                    golfie = golfie > option;
                    report = null;
                    if(!golfie) { _fun00004_ip = 575; continue _fun00003 }
 377:
                    verify = _closure1_slot15;
                    option = _closure1_slot16;
                    golfie = {};
                    kiloes = _closure1_slot14;
                    romeon = _closure1_slot7;
                    offset = {};
                    sizing = _closure2_slot0;
                    sizing = sizing.titleWrapper;
                    offset['style'] = sizing;
                    source = _closure1_slot0;
                    ctrled = _closure1_slot2;
                    oscard = 25;
                    sizing = ctrled[oscard];
                    oscard = undefined;
                    sizing = source.bind(oscard)(sizing);
                    output = sizing.Text;
                    sizing = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-xs/bold', 'color': 'header-secondary'};
                    result = _closure2_slot0;
                    result = result.title;
                    sizing['style'] = result;
                    result = 26;
                    echoed = ctrled[result];
                    echoed = source.bind(oscard)(echoed);
                    update = echoed.intl;
                    echoed = update.string;
                    result = ctrled[result];
                    result = source.bind(oscard)(result);
                    result = result.t;
                    result = result.9KeUbW;
                    result = echoed.bind(update)(result);
                    sizing['children'] = result;
                    sizing = kiloes.bind(oscard)(output, sizing);
                    offset['children'] = sizing;
                    romeon = kiloes.bind(oscard)(romeon, offset);
                    offset = new Array(2);
                    offset[0] = romeon;
                    romeon = backup.map;
                    yankee = function(argFoo) {
                        report = argFoo;
                        zuuluu = _closure1_slot0;
                        verify = _closure1_slot2;
                        michal = 14;
                        michal = verify[michal];
                        tangon = undefined;
                        zuuluu = zuuluu.bind(tangon)(michal);
                        michal = zuuluu.parseComboId;
                        michal = michal.bind(zuuluu)(report);
                        option = michal.skuId;
                        golfie = michal.subscriptionPlanId;
                        oscard = michal.giftStyle;
                        zuuluu = _closure1_slot14;
                        michal = _closure1_slot1;
                        entity = 28;
                        entity = verify[entity];
                        michal = michal.bind(tangon)(entity);
                        entity = {};
                        entity['skuId'] = option;
                        entity['subscriptionPlanId'] = golfie;
                        golfie = _closure2_slot3;
                        golfie = golfie[report];
                        entity['entitlements'] = golfie;
                        entity['giftStyle'] = oscard;
                        entity = zuuluu.bind(tangon)(michal, entity, report);
                        return entity;
                    };
                    yankee = romeon.bind(backup)(yankee);
                    offset[1] = yankee;
                    golfie['children'] = offset;
                    report = verify.bind(oscard)(option, golfie);
 575:
                    entity[1] = report;
                    michal['children'] = entity;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    _fun00004_ip = 952; continue _fun00003;
 596:
                    report = _closure1_slot15;
                    tangon = _closure1_slot7;
                    zuuluu = {};
                    michal = _closure2_slot0;
                    michal = michal.emptyGiftLinks;
                    zuuluu['style'] = michal;
                    yankee = _closure1_slot14;
                    golfie = _closure1_slot6;
                    oscard = {};
                    michal = _closure2_slot0;
                    michal = michal.emptyImage;
                    oscard['style'] = michal;
                    offset = _closure1_slot1;
                    sizing = _closure1_slot2;
                    michal = 24;
                    verify = sizing[michal];
                    michal = undefined;
                    verify = offset.bind(michal)(verify);
                    oscard['source'] = verify;
                    golfie = yankee.bind(michal)(golfie, oscard);
                    oscard = new Array(2);
                    oscard[0] = golfie;
                    golfie = {};
                    verify = _closure2_slot0;
                    verify = verify.emptyGiftDescription;
                    golfie['style'] = verify;
                    verify = true;
                    golfie['accessible'] = verify;
                    kiloes = _closure1_slot0;
                    verify = 25;
                    option = sizing[verify];
                    option = kiloes.bind(michal)(option);
                    offset = option.Text;
                    option = {'style': null, 'variant': 'text-md/semibold', 'color': 'header-primary'};
                    romeon = _closure2_slot0;
                    romeon = romeon.emptyGiftHeader;
                    option['style'] = romeon;
                    romeon = 26;
                    backup = sizing[romeon];
                    backup = kiloes.bind(michal)(backup);
                    result = backup.intl;
                    output = result.string;
                    backup = sizing[romeon];
                    backup = kiloes.bind(michal)(backup);
                    backup = backup.t;
                    backup = backup.B1qgZm;
                    backup = output.bind(result)(backup);
                    option['children'] = backup;
                    offset = yankee.bind(michal)(offset, option);
                    option = new Array(2);
                    option[0] = offset;
                    verify = sizing[verify];
                    verify = kiloes.bind(michal)(verify);
                    offset = verify.Text;
                    verify = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
                    foxtra = _closure2_slot0;
                    foxtra = foxtra.emptyGiftInformation;
                    verify['style'] = foxtra;
                    foxtra = sizing[romeon];
                    foxtra = kiloes.bind(michal)(foxtra);
                    backup = foxtra.intl;
                    foxtra = backup.string;
                    romeon = sizing[romeon];
                    romeon = kiloes.bind(michal)(romeon);
                    romeon = romeon.t;
                    romeon = romeon.OV/u0t;
                    romeon = foxtra.bind(backup)(romeon);
                    verify['children'] = romeon;
                    verify = yankee.bind(michal)(offset, verify);
                    option[1] = verify;
                    golfie['children'] = option;
                    golfie = report.bind(michal)(tangon, golfie);
                    oscard[1] = golfie;
                    zuuluu['children'] = oscard;
                    entity = report.bind(michal)(tangon, zuuluu);
 952:
                    return entity;
                }
            };
            sizing = output.bind(report)();
 700:
            romeon['children'] = sizing;
            foxtra = kiloes.bind(report)(foxtra, romeon);
            romeon = new Array(2);
            romeon[0] = foxtra;
            foxtra = null;
            if(!backup) { _fun00002_ip = 1668; continue _fun00001 }
 726:
            sizing = _closure1_slot15;
            kiloes = _closure1_slot7;
            backup = {};
            output = oscard.giftPurchaseSectionWrapper;
            backup['style'] = output;
            vacuum = _closure1_slot14;
            status = _closure1_slot0;
            sequen = _closure1_slot2;
            output = 25;
            output = sequen[output];
            output = status.bind(report)(output);
            result = output.Text;
            output = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-xs/bold', 'color': 'header-secondary'};
            echoed = oscard.title;
            output['style'] = echoed;
            papara = 26;
            echoed = sequen[papara];
            echoed = status.bind(report)(echoed);
            source = echoed.intl;
            update = source.string;
            echoed = sequen[papara];
            echoed = status.bind(report)(echoed);
            echoed = echoed.t;
            echoed = echoed.55Ccy8;
            echoed = update.bind(source)(echoed);
            output['children'] = echoed;
            result = vacuum.bind(report)(result, output);
            output = new Array(4);
            output[0] = result;
            ctrled = _closure1_slot1;
            update = 29;
            result = sequen[update];
            echoed = ctrled.bind(report)(result);
            result = {};
            cntext = _closure1_slot12;
            source = cntext.TIER_2;
            result['premiumType'] = source;
            source = oscard.tierCard;
            result['style'] = source;
            record = 30;
            source = sequen[record];
            source = status.bind(report)(source);
            config = source.TextWithIOSLinkWorkaround;
            source = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            target = oscard.cardText;
            source['style'] = target;
            target = sequen[papara];
            target = status.bind(report)(target);
            quebec = target.intl;
            whisks = quebec.format;
            target = sequen[papara];
            target = status.bind(report)(target);
            target = target.t;
            limora = target.thORjo;
            target = {};
            target['onClick'] = variable37;
            target = whisks.bind(quebec)(limora, target);
            source['children'] = target;
            config = vacuum.bind(report)(config, source);
            source = new Array(2);
            source[0] = config;
            config = {};
            target = oscard.buttonWrapper;
            config['style'] = target;
            target = 31;
            limora = sequen[target];
            variable36 = ctrled.bind(report)(limora);
            quebec = {};
            quebec['recipientUserId'] = equals;
            limora = oscard.giftPurchaseButton;
            quebec['style'] = limora;
            whisks = 32;
            limora = sequen[whisks];
            limora = ctrled.bind(report)(limora);
            limora = limora.Colors;
            limora = limora.GREEN;
            quebec['color'] = limora;
            limora = _closure1_slot13;
            variable38 = limora.PREMIUM_YEAR_TIER_2;
            quebec['planId'] = variable38;
            quebec['analyticsLocation'] = sierra;
            variable36 = vacuum.bind(report)(variable36, quebec);
            quebec = new Array(2);
            quebec[0] = variable36;
            variable36 = sequen[target];
            variable38 = ctrled.bind(report)(variable36);
            variable36 = {};
            variable36['recipientUserId'] = equals;
            variable39 = oscard.giftPurchaseButton;
            variable36['style'] = variable39;
            variable39 = sequen[whisks];
            variable39 = ctrled.bind(report)(variable39);
            variable39 = variable39.Colors;
            variable39 = variable39.LIGHTGREY;
            variable36['color'] = variable39;
            variable39 = limora.PREMIUM_MONTH_TIER_2;
            variable36['planId'] = variable39;
            variable36['analyticsLocation'] = sierra;
            variable36 = vacuum.bind(report)(variable38, variable36);
            quebec[1] = variable36;
            config['children'] = quebec;
            config = sizing.bind(report)(kiloes, config);
            source[1] = config;
            result['children'] = source;
            result = sizing.bind(report)(echoed, result);
            output[1] = result;
            source = 33;
            result = sequen[source];
            echoed = ctrled.bind(report)(result);
            result = {};
            config = oscard.warningMargins;
            result['style'] = config;
            result = vacuum.bind(report)(echoed, result);
            output[2] = result;
            echoed = _closure1_slot16;
            result = {};
            update = sequen[update];
            config = ctrled.bind(report)(update);
            update = {};
            cntext = cntext.TIER_0;
            update['premiumType'] = cntext;
            cntext = oscard.tierCard;
            update['style'] = cntext;
            record = sequen[record];
            record = status.bind(report)(record);
            cntext = record.TextWithIOSLinkWorkaround;
            record = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            quebec = oscard.cardText;
            record['style'] = quebec;
            quebec = sequen[papara];
            quebec = status.bind(report)(quebec);
            variable36 = quebec.intl;
            quebec = variable36.format;
            papara = sequen[papara];
            papara = status.bind(report)(papara);
            papara = papara.t;
            status = papara.NmpnsL;
            papara = {};
            papara['onClick'] = variable37;
            papara = quebec.bind(variable36)(status, papara);
            record['children'] = papara;
            cntext = vacuum.bind(report)(cntext, record);
            record = new Array(2);
            record[0] = cntext;
            cntext = {};
            papara = oscard.buttonWrapper;
            cntext['style'] = papara;
            papara = sequen[target];
            status = ctrled.bind(report)(papara);
            papara = {};
            papara['recipientUserId'] = equals;
            quebec = oscard.giftPurchaseButton;
            papara['style'] = quebec;
            quebec = sequen[whisks];
            quebec = ctrled.bind(report)(quebec);
            quebec = quebec.Colors;
            quebec = quebec.GREEN;
            papara['color'] = quebec;
            quebec = limora.PREMIUM_YEAR_TIER_0;
            papara['planId'] = quebec;
            papara['analyticsLocation'] = sierra;
            status = vacuum.bind(report)(status, papara);
            papara = new Array(2);
            papara[0] = status;
            target = sequen[target];
            status = ctrled.bind(report)(target);
            target = {};
            target['recipientUserId'] = equals;
            equals = oscard.giftPurchaseButton;
            target['style'] = equals;
            whisks = sequen[whisks];
            whisks = ctrled.bind(report)(whisks);
            whisks = whisks.Colors;
            whisks = whisks.LIGHTGREY;
            target['color'] = whisks;
            limora = limora.PREMIUM_MONTH_TIER_0;
            target['planId'] = limora;
            target['analyticsLocation'] = sierra;
            target = vacuum.bind(report)(status, target);
            papara[1] = target;
            cntext['children'] = papara;
            cntext = sizing.bind(report)(kiloes, cntext);
            record[1] = cntext;
            update['children'] = record;
            config = sizing.bind(report)(config, update);
            update = new Array(2);
            update[0] = config;
            source = sequen[source];
            ctrled = ctrled.bind(report)(source);
            source = {};
            sequen = oscard.warningMargins;
            source['style'] = sequen;
            source = vacuum.bind(report)(ctrled, source);
            update[1] = source;
            result['children'] = update;
            result = sizing.bind(report)(echoed, result);
            output[3] = result;
            backup['children'] = output;
            foxtra = sizing.bind(report)(kiloes, backup);
 1668:
            romeon[1] = foxtra;
            golfie['children'] = romeon;
            golfie = zuuluu.bind(report)(yankee, golfie);
            tangon[1] = golfie;
            entity['children'] = tangon;
            entity = zuuluu.bind(report)(michal, entity);
            _fun00002_ip = 1794; continue _fun00001;
 1698:
            tangon = _closure1_slot14;
            zuuluu = _closure1_slot7;
            michal = {};
            oscard = oscard.giftingSettingsContainer;
            michal['style'] = oscard;
            golfie = _closure1_slot8;
            oscard = {};
            oscard['ref'] = verify;
            verify = {};
            yankee = 40;
            verify['top'] = yankee;
            verify['bottom'] = offset;
            oscard['contentInset'] = verify;
            verify = _closure1_slot1;
            offset = _closure1_slot2;
            option = 34;
            option = offset[option];
            verify = verify.bind(report)(option);
            option = {};
            option = tangon.bind(report)(verify, option);
            oscard['children'] = option;
            oscard = tangon.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 1794:
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 37;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/UserSettingsPremiumGifting.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();