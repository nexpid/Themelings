// app/modules/user_settings/native/UserSettingsAccountBackupCodes.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: CodeRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            oscard = michal.code;
            var _closure2_slot0 = oscard;
            option = michal.showCheckMark;
            tangon = _closure1_slot3;
            zuuluu = tangon.useCallback;
            michal = new Array(1);
            michal[0] = oscard;
            entity = function() {
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 6;
                michal = tangon[entity];
                entity = undefined;
                oscard = zuuluu.bind(entity)(michal);
                report = oscard.copy;
                verify = _closure2_slot0;
                option = verify.replace;
                golfie = /[^a-zA-Z0-9]/g;
                michal = '';
                michal = option.bind(verify)(golfie, michal);
                michal = report.bind(oscard)(michal);
                michal = 7;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.presentCopiedToClipboard;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            offset = zuuluu.bind(tangon)(entity, michal);
            tangon = _closure1_slot7;
            michal = _closure1_slot0;
            entity = _closure1_slot2;
            verify = 8;
            entity = entity[verify];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.FormRow;
            entity = {};
            golfie = undefined;
            if(option) { _fun00002_ip = 95; continue _fun00001 }
 92:
            golfie = offset;
 95:
            entity['onPress'] = golfie;
            entity['label'] = oscard;
            golfie = _closure1_slot7;
            oscard = _closure1_slot0;
            report = _closure1_slot2;
            report = report[verify];
            report = oscard.bind(zuuluu)(report);
            report = report.FormRow;
            oscard = report.Checkmark;
            report = {};
            report['selected'] = option;
            report = golfie.bind(zuuluu)(oscard, report);
            entity['trailing'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot10 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    offset = 12;
    verify = {'marginTop': 16, 'marginHorizontal': 12};
    tangon['text'] = verify;
    verify = {};
    romeon = 8;
    verify['marginTop'] = romeon;
    tangon['section'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tangon['generateCodeContainer'] = verify;
    verify = {};
    offset = 5;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_BRAND;
    verify['color'] = offset;
    tangon['generateCode'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/UserSettingsAccountBackupCodes.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: UserSettingsAccountBackupCodes
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = _closure1_slot9;
            tangon = undefined;
            sequen = entity.bind(tangon)();
            var _closure2_slot0 = sequen;
            oscard = _closure1_slot0;
            option = _closure1_slot2;
            entity = 9;
            entity = option[entity];
            report = oscard.bind(tangon)(entity);
            zuuluu = report.useStateFromStores;
            entity = _closure1_slot6;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot6;
                entity = michal.getBackupCodes;
                entity = entity.bind(michal)();
                return entity;
            };
            entity = zuuluu.bind(report)(michal, entity);
            var _closure2_slot1 = entity;
            report = _closure1_slot3;
            zuuluu = report.useMemo;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = new Array(0);
                var _closure3_slot0 = zuuluu;
                michal = new Array(0);
                var _closure3_slot1 = michal;
                report = _closure2_slot1;
                tangon = report.forEach;
                entity = function(argFoo) {
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        tangon = argFoo;
                        entity = tangon.consumed;
                        if(entity) { _fun00006_ip = 31; continue _fun00005 }
 15:
                        zuuluu = _closure3_slot1;
                        entity = zuuluu.push;
                        entity = entity.bind(zuuluu)(tangon);
                        _fun00006_ip = 45; continue _fun00005;
 31:
                        zuuluu = _closure3_slot0;
                        michal = zuuluu.push;
                        entity = michal.bind(zuuluu)(tangon);
 45:
                        return entity;
                    }
                };
                entity = tangon.bind(report)(entity);
                entity = {};
                entity['usedCodes'] = zuuluu;
                entity['unusedCodes'] = michal;
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            result = entity.usedCodes;
            ctrled = entity.unusedCodes;
            report = _closure1_slot3;
            zuuluu = report.useEffect;
            michal = function() {
                entity = function() {
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 10;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.clearBackupCodes;
                    michal = michal.bind(zuuluu)();
                    return entity;
                };
                return entity;
            };
            entity = new Array(0);
            entity = zuuluu.bind(report)(michal, entity);
            cntext = 11;
            entity = option[cntext];
            entity = oscard.bind(tangon)(entity);
            report = entity.intl;
            zuuluu = report.format;
            entity = option[cntext];
            entity = oscard.bind(tangon)(entity);
            entity = entity.t;
            michal = entity.OhmvYm;
            entity = {};
            offset = zuuluu.bind(report)(michal, entity);
            zuuluu = _closure1_slot7;
            michal = _closure1_slot5;
            entity = {};
            golfie = _closure1_slot8;
            report = 12;
            report = option[report];
            report = oscard.bind(tangon)(report);
            oscard = report.RedesignCompat;
            report = {};
            verify = offset.map;
            option = function(argFoo, argBar) {
                report = _closure1_slot7;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 13;
                entity = zuuluu[entity];
                tangon = undefined;
                entity = michal.bind(tangon)(entity);
                zuuluu = entity.Text;
                michal = {};
                entity = _closure2_slot0;
                entity = entity.text;
                michal['style'] = entity;
                entity = 'text-sm/medium';
                michal['variant'] = entity;
                entity = argFoo;
                michal['children'] = entity;
                entity = argBar;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            verify = verify.bind(offset)(option);
            option = new Array(4);
            option[0] = verify;
            verify = ctrled.length;
            offset = 0;
            verify = verify > offset;
            if(!verify) { _fun00004_ip = 407; continue _fun00003 }
 269:
            foxtra = _closure1_slot7;
            romeon = _closure1_slot4;
            yankee = {};
            backup = sequen.section;
            yankee['style'] = backup;
            sizing = _closure1_slot7;
            config = _closure1_slot0;
            output = _closure1_slot2;
            backup = 8;
            backup = output[backup];
            backup = config.bind(tangon)(backup);
            kiloes = backup.FormSection;
            backup = {};
            source = output[cntext];
            source = config.bind(tangon)(source);
            vacuum = source.intl;
            source = vacuum.string;
            output = output[cntext];
            output = config.bind(tangon)(output);
            output = output.t;
            output = output.zdzyFh;
            output = source.bind(vacuum)(output);
            backup['title'] = output;
            source = ctrled.map;
            output = function(argFoo, argBar) {
                report = _closure1_slot7;
                tangon = _closure1_slot10;
                zuuluu = {};
                entity = argFoo;
                entity = entity.code;
                zuuluu['code'] = entity;
                entity = false;
                zuuluu['showCheckMark'] = entity;
                michal = undefined;
                entity = argBar;
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            };
            output = source.bind(ctrled)(output);
            backup['children'] = output;
            backup = sizing.bind(tangon)(kiloes, backup);
            yankee['children'] = backup;
            verify = foxtra.bind(tangon)(romeon, yankee);
 407:
            option[1] = verify;
            verify = result.length;
            verify = verify > offset;
            if(!verify) { _fun00004_ip = 564; continue _fun00003 }
 426:
            romeon = _closure1_slot7;
            yankee = _closure1_slot4;
            offset = {};
            foxtra = sequen.section;
            offset['style'] = foxtra;
            kiloes = _closure1_slot7;
            ctrled = _closure1_slot0;
            sizing = _closure1_slot2;
            foxtra = 8;
            foxtra = sizing[foxtra];
            foxtra = ctrled.bind(tangon)(foxtra);
            backup = foxtra.FormSection;
            foxtra = {};
            output = sizing[cntext];
            output = ctrled.bind(tangon)(output);
            source = output.intl;
            output = source.string;
            sizing = sizing[cntext];
            sizing = ctrled.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.FkFLDA;
            sizing = output.bind(source)(sizing);
            foxtra['title'] = sizing;
            output = result.map;
            sizing = function(argFoo, argBar) {
                report = _closure1_slot7;
                tangon = _closure1_slot10;
                zuuluu = {};
                entity = argFoo;
                entity = entity.code;
                zuuluu['code'] = entity;
                entity = true;
                zuuluu['showCheckMark'] = entity;
                michal = undefined;
                entity = argBar;
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            };
            sizing = output.bind(result)(sizing);
            foxtra['children'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            offset['children'] = foxtra;
            verify = romeon.bind(tangon)(yankee, offset);
 564:
            option[2] = verify;
            verify = argFoo;
            offset = verify.onGenerate;
            verify = null;
            verify = verify !== offset;
            if(!verify) { _fun00004_ip = 800; continue _fun00003 }
 589:
            romeon = _closure1_slot7;
            yankee = _closure1_slot4;
            offset = {};
            foxtra = sequen.generateCodeContainer;
            offset['style'] = foxtra;
            kiloes = _closure1_slot7;
            record = _closure1_slot0;
            vacuum = _closure1_slot2;
            sizing = 8;
            foxtra = vacuum[sizing];
            foxtra = record.bind(tangon)(foxtra);
            backup = foxtra.FormSection;
            foxtra = {};
            result = _closure1_slot7;
            sizing = vacuum[sizing];
            sizing = record.bind(tangon)(sizing);
            output = sizing.FormRow;
            sizing = {};
            ctrled = _closure1_slot7;
            update = 13;
            update = vacuum[update];
            update = record.bind(tangon)(update);
            source = update.Text;
            update = {};
            config = 'text-md/semibold';
            update['variant'] = config;
            sequen = sequen.generateCode;
            update['style'] = sequen;
            sequen = vacuum[cntext];
            sequen = record.bind(tangon)(sequen);
            config = sequen.intl;
            sequen = config.string;
            vacuum = vacuum[cntext];
            vacuum = record.bind(tangon)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.RIThUl;
            vacuum = sequen.bind(config)(vacuum);
            update['children'] = vacuum;
            update = ctrled.bind(tangon)(source, update);
            sizing['label'] = update;
            echoed = function() { // Original name: onPress
                zuuluu = _closure1_slot6;
                michal = zuuluu.getVerificationKey;
                report = michal.bind(zuuluu)();
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 10;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.confirmViewBackupCodes;
                michal = true;
                michal = zuuluu.bind(tangon)(report, michal);
                return entity;
            };
            sizing['onPress'] = echoed;
            sizing = result.bind(tangon)(output, sizing);
            foxtra['children'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            offset['children'] = foxtra;
            verify = romeon.bind(tangon)(yankee, offset);
 800:
            option[3] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();