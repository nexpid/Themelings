// app/modules/user_settings/native/AddConnectionActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticsLocations;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 16;
    verify['paddingHorizontal'] = offset;
    tangon['list'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/AddConnectionActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: AddConnectionActionSheet
        michal = _closure1_slot5;
        tangon = undefined;
        option = michal.bind(tangon)();
        zuuluu = _closure1_slot1;
        yankee = _closure1_slot2;
        michal = 4;
        michal = yankee[michal];
        michal = zuuluu.bind(tangon)(michal);
        michal = michal.bind(tangon)();
        var _closure2_slot0 = michal;
        michal = 5;
        michal = yankee[michal];
        michal = zuuluu.bind(tangon)(michal);
        michal = michal.bind(tangon)();
        offset = michal.bottom;
        oscard = _closure1_slot0;
        michal = 6;
        michal = yankee[michal];
        zuuluu = oscard.bind(tangon)(michal);
        michal = zuuluu.usePlatforms;
        verify = michal.bind(zuuluu)();
        var _closure2_slot1 = verify;
        zuuluu = _closure1_slot4;
        entity = 7;
        entity = yankee[entity];
        entity = oscard.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {'scrollable': true, 'startExpanded': true};
        report = 8;
        report = yankee[report];
        report = oscard.bind(tangon)(report);
        romeon = report.BottomSheetTitleHeader;
        report = {};
        foxtra = 9;
        backup = yankee[foxtra];
        backup = oscard.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = yankee[foxtra];
        foxtra = oscard.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.Zhcj9f;
        foxtra = backup.bind(kiloes)(foxtra);
        report['title'] = foxtra;
        report = zuuluu.bind(tangon)(romeon, report);
        entity['header'] = report;
        report = 10;
        report = yankee[report];
        report = oscard.bind(tangon)(report);
        oscard = report.BottomSheetScrollView;
        report = {};
        option = option.list;
        report['style'] = option;
        option = {};
        option['paddingBottom'] = offset;
        report['contentContainerStyle'] = option;
        option = verify.map;
        golfie = function(argFoo, argBar) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = argFoo;
                romeon = argBar;
                option = entity.name;
                report = entity.type;
                var _closure3_slot0 = report;
                foxtra = entity.icon;
                tangon = _closure1_slot4;
                kiloes = _closure1_slot0;
                sizing = _closure1_slot2;
                verify = 11;
                entity = sizing[verify];
                zuuluu = undefined;
                entity = kiloes.bind(zuuluu)(entity);
                michal = entity.TableRow;
                entity = {};
                offset = 0;
                offset = offset === romeon;
                entity['start'] = offset;
                yankee = _closure2_slot1;
                backup = yankee.length;
                yankee = 1;
                yankee = backup - yankee;
                yankee = romeon === yankee;
                entity['end'] = yankee;
                entity['label'] = option;
                golfie = function() { // Original name: onPress
                    zuuluu = _closure1_slot1;
                    report = _closure1_slot2;
                    entity = 12;
                    michal = report[entity];
                    entity = undefined;
                    oscard = zuuluu.bind(entity)(michal);
                    michal = oscard.hideActionSheet;
                    michal = michal.bind(oscard)();
                    michal = 13;
                    michal = report[michal];
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = {};
                    report = _closure3_slot0;
                    michal['platformType'] = report;
                    tangon = _closure1_slot3;
                    tangon = tangon.USER_SETTINGS;
                    michal['location'] = tangon;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                entity['onPress'] = golfie;
                option = _closure1_slot1;
                golfie = 14;
                golfie = sizing[golfie];
                option = option.bind(zuuluu)(golfie);
                golfie = {};
                yankee = 15;
                yankee = sizing[yankee];
                romeon = kiloes.bind(zuuluu)(yankee);
                yankee = romeon.makeSource;
                backup = 16;
                backup = sizing[backup];
                kiloes = kiloes.bind(zuuluu)(backup);
                backup = kiloes.isThemeDark;
                offset = _closure2_slot0;
                offset = backup.bind(kiloes)(offset);
                if(offset) { _fun00002_ip = 190; continue _fun00001 }
 182:
                offset = foxtra.lightPNG;
                _fun00002_ip = 196; continue _fun00001;
 190:
                offset = foxtra.darkPNG;
 196:
                offset = yankee.bind(romeon)(offset);
                golfie['source'] = offset;
                offset = true;
                golfie['disableColor'] = offset;
                golfie = tangon.bind(zuuluu)(option, golfie);
                entity['icon'] = golfie;
                option = _closure1_slot4;
                golfie = _closure1_slot0;
                oscard = _closure1_slot2;
                oscard = oscard[verify];
                oscard = golfie.bind(zuuluu)(oscard);
                oscard = oscard.TableRow;
                golfie = oscard.Arrow;
                oscard = {};
                oscard = option.bind(zuuluu)(golfie, oscard);
                entity['trailing'] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            }
        };
        golfie = option.bind(verify)(golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();