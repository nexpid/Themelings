// app/modules/user_settings/native/AddConnectionActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticsLocations;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 16;
    verify['paddingHorizontal'] = offset;
    tango['list'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/AddConnectionActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: AddConnectionActionSheet
        mike = _closure1_slot5;
        tango = undefined;
        options = mike.bind(tango)();
        zulu = _closure1_slot1;
        yankee = _closure1_slot2;
        mike = 4;
        mike = yankee[mike];
        mike = zulu.bind(tango)(mike);
        mike = mike.bind(tango)();
        var _closure2_slot0 = mike;
        mike = 5;
        mike = yankee[mike];
        mike = zulu.bind(tango)(mike);
        mike = mike.bind(tango)();
        offset = mike.bottom;
        oscar = _closure1_slot0;
        mike = 6;
        mike = yankee[mike];
        zulu = oscar.bind(tango)(mike);
        mike = zulu.usePlatforms;
        verify = mike.bind(zulu)();
        var _closure2_slot1 = verify;
        zulu = _closure1_slot4;
        entity = 7;
        entity = yankee[entity];
        entity = oscar.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {'scrollable': true, 'startExpanded': true};
        report = 8;
        report = yankee[report];
        report = oscar.bind(tango)(report);
        romeo = report.BottomSheetTitleHeader;
        report = {};
        foxtrot = 9;
        backup = yankee[foxtrot];
        backup = oscar.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = yankee[foxtrot];
        foxtrot = oscar.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.Zhcj9f;
        foxtrot = backup.bind(kilo)(foxtrot);
        report['title'] = foxtrot;
        report = zulu.bind(tango)(romeo, report);
        entity['header'] = report;
        report = 10;
        report = yankee[report];
        report = oscar.bind(tango)(report);
        oscar = report.BottomSheetScrollView;
        report = {};
        options = options.list;
        report['style'] = options;
        options = {};
        options['paddingBottom'] = offset;
        report['contentContainerStyle'] = options;
        options = verify.map;
        golf = function(argFoo, argBar) {
            _fun95615: for(var _fun95615_ip = 0; ; ) switch(_fun95615_ip) {
 0:
                entity = argFoo;
                romeo = argBar;
                options = entity.name;
                report = entity.type;
                var _closure3_slot0 = report;
                foxtrot = entity.icon;
                tango = _closure1_slot4;
                kilo = _closure1_slot0;
                sizing = _closure1_slot2;
                verify = 11;
                entity = sizing[verify];
                zulu = undefined;
                entity = kilo.bind(zulu)(entity);
                mike = entity.TableRow;
                entity = {};
                offset = 0;
                offset = offset === romeo;
                entity['start'] = offset;
                yankee = _closure2_slot1;
                backup = yankee.length;
                yankee = 1;
                yankee = backup - yankee;
                yankee = romeo === yankee;
                entity['end'] = yankee;
                entity['label'] = options;
                golf = function() { // Original name: onPress
                    zulu = _closure1_slot1;
                    report = _closure1_slot2;
                    entity = 12;
                    mike = report[entity];
                    entity = undefined;
                    oscar = zulu.bind(entity)(mike);
                    mike = oscar.hideActionSheet;
                    mike = mike.bind(oscar)();
                    mike = 13;
                    mike = report[mike];
                    zulu = zulu.bind(entity)(mike);
                    mike = {};
                    report = _closure3_slot0;
                    mike['platformType'] = report;
                    tango = _closure1_slot3;
                    tango = tango.USER_SETTINGS;
                    mike['location'] = tango;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                };
                entity['onPress'] = golf;
                options = _closure1_slot1;
                golf = 14;
                golf = sizing[golf];
                options = options.bind(zulu)(golf);
                golf = {};
                yankee = 15;
                yankee = sizing[yankee];
                romeo = kilo.bind(zulu)(yankee);
                yankee = romeo.makeSource;
                backup = 16;
                backup = sizing[backup];
                kilo = kilo.bind(zulu)(backup);
                backup = kilo.isThemeDark;
                offset = _closure2_slot0;
                offset = backup.bind(kilo)(offset);
                if(offset) { _fun95615_ip = 190; continue _fun95615 }
 182:
                offset = foxtrot.lightPNG;
                _fun95615_ip = 196; continue _fun95615;
 190:
                offset = foxtrot.darkPNG;
 196:
                offset = yankee.bind(romeo)(offset);
                golf['source'] = offset;
                offset = true;
                golf['disableColor'] = offset;
                golf = tango.bind(zulu)(options, golf);
                entity['icon'] = golf;
                options = _closure1_slot4;
                golf = _closure1_slot0;
                oscar = _closure1_slot2;
                oscar = oscar[verify];
                oscar = golf.bind(zulu)(oscar);
                oscar = oscar.TableRow;
                golf = oscar.Arrow;
                oscar = {};
                oscar = options.bind(zulu)(golf, oscar);
                entity['trailing'] = oscar;
                entity = tango.bind(zulu)(mike, entity, report);
                return entity;
            }
        };
        golf = options.bind(verify)(golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();