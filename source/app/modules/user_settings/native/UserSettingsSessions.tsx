// app/modules/user_settings/native/UserSettingsSessions.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: UserSettingsSessions
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot13;
            tangon = undefined;
            romeon = entity.bind(tangon)();
            var _closure2_slot0 = romeon;
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 9;
            entity = golfie[entity];
            michal = oscard.bind(tangon)(entity);
            entity = michal.useAuthSessions;
            entity = entity.bind(michal)();
            ctrled = entity.currentSession;
            verify = entity.otherSessions;
            var _closure2_slot1 = verify;
            entity = 10;
            entity = golfie[entity];
            report = oscard.bind(tangon)(entity);
            zuuluu = report.useStateFromStores;
            entity = _closure1_slot8;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot8;
                entity = michal.getCurrentUser;
                entity = entity.bind(michal)();
                return entity;
            };
            yankee = zuuluu.bind(report)(michal, entity);
            zuuluu = _closure1_slot4;
            michal = zuuluu.useState;
            entity = false;
            zuuluu = michal.bind(zuuluu)(entity);
            michal = _closure1_slot3;
            entity = 2;
            zuuluu = michal.bind(tangon)(zuuluu, entity);
            offset = 0;
            michal = zuuluu[offset];
            entity = 1;
            entity = zuuluu[entity];
            var _closure2_slot2 = entity;
            report = _closure1_slot4;
            zuuluu = report.useContext;
            entity = 11;
            entity = golfie[entity];
            entity = oscard.bind(tangon)(entity);
            entity = entity.RedesignCompatContext;
            entity = zuuluu.bind(report)(entity);
            var _closure2_slot3 = entity;
            oscard = _closure1_slot4;
            report = oscard.useEffect;
            zuuluu = function() {
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 12;
                michal = tangon[michal];
                report = undefined;
                zuuluu = zuuluu.bind(report)(michal);
                michal = zuuluu.fetchAuthSessions;
                michal = michal.bind(zuuluu)();
                michal = global;
                tangon = michal.setTimeout;
                zuuluu = function() {
                    zuuluu = _closure2_slot2;
                    michal = undefined;
                    entity = true;
                    entity = zuuluu.bind(michal)(entity);
                    return entity;
                };
                michal = 500;
                michal = tangon.bind(report)(zuuluu, michal);
                var _closure3_slot0 = michal;
                entity = function() {
                    entity = global;
                    zuuluu = entity.clearTimeout;
                    michal = _closure3_slot0;
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    zuuluu = _closure1_slot0;
                    tangon = _closure1_slot2;
                    michal = 12;
                    michal = tangon[michal];
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.clearAuthSessions;
                    michal = michal.bind(zuuluu)();
                    return entity;
                };
                return entity;
            };
            entity = new Array(0);
            entity = report.bind(oscard)(zuuluu, entity);
            entity = null;
            if(!(entity != ctrled)) { _fun00002_ip = 781; continue _fun00001 }
 225:
            oscard = _closure1_slot11;
            update = _closure1_slot0;
            output = _closure1_slot2;
            zuuluu = 13;
            zuuluu = output[zuuluu];
            zuuluu = update.bind(tangon)(zuuluu);
            report = zuuluu.Stack;
            zuuluu = {};
            golfie = 24;
            zuuluu['spacing'] = golfie;
            golfie = romeon.list;
            zuuluu['style'] = golfie;
            kiloes = _closure1_slot10;
            foxtra = 14;
            golfie = output[foxtra];
            golfie = update.bind(tangon)(golfie);
            backup = golfie.TableRowGroup;
            golfie = {};
            source = 15;
            result = output[source];
            result = update.bind(tangon)(result);
            echoed = result.intl;
            result = echoed.string;
            output = output[source];
            output = update.bind(tangon)(output);
            output = output.t;
            output = output.LLS19v;
            output = result.bind(echoed)(output);
            golfie['title'] = output;
            result = entity != ctrled;
            output = null;
            if(!result) { _fun00002_ip = 387; continue _fun00001 }
 360:
            update = _closure1_slot10;
            echoed = _closure1_slot15;
            result = {};
            result['session'] = ctrled;
            ctrled = true;
            result['current'] = ctrled;
            output = update.bind(tangon)(echoed, result);
 387:
            golfie['children'] = output;
            backup = kiloes.bind(tangon)(backup, golfie);
            golfie = new Array(3);
            golfie[0] = backup;
            backup = verify.length;
            if(!(!(backup > offset))) { _fun00002_ip = 432; continue _fun00001 }
 414:
            if(!(entity != yankee)) { _fun00002_ip = 432; continue _fun00001 }
 418:
            backup = yankee.mfaEnabled;
            yankee = null;
            if(backup) { _fun00002_ip = 566; continue _fun00001 }
 432:
            kiloes = _closure1_slot11;
            update = _closure1_slot0;
            output = _closure1_slot2;
            foxtra = output[foxtra];
            foxtra = update.bind(tangon)(foxtra);
            backup = foxtra.TableRowGroup;
            foxtra = {};
            result = output[source];
            result = update.bind(tangon)(result);
            echoed = result.intl;
            result = echoed.string;
            output = output[source];
            output = update.bind(tangon)(output);
            output = output.t;
            output = output.xx1MWV;
            output = result.bind(echoed)(output);
            foxtra['title'] = output;
            result = verify.map;
            output = function(argFoo, argBar) {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = argFoo;
                    report = _closure1_slot11;
                    zuuluu = _closure1_slot4;
                    tangon = zuuluu.Fragment;
                    zuuluu = {};
                    option = _closure2_slot3;
                    golfie = null;
                    if(option) { _fun00004_ip = 76; continue _fun00003 }
 33:
                    verify = 0;
                    option = argBar;
                    golfie = null;
                    if(!(verify !== option)) { _fun00004_ip = 76; continue _fun00003 }
 44:
                    offset = _closure1_slot10;
                    verify = _closure1_slot6;
                    option = {};
                    oscard = _closure2_slot0;
                    oscard = oscard.divider;
                    option['style'] = oscard;
                    oscard = undefined;
                    golfie = offset.bind(oscard)(verify, option);
 76:
                    oscard = new Array(2);
                    oscard[0] = golfie;
                    verify = _closure1_slot10;
                    option = _closure1_slot15;
                    golfie = {};
                    golfie['session'] = entity;
                    michal = undefined;
                    golfie = verify.bind(michal)(option, golfie);
                    oscard[1] = golfie;
                    zuuluu['children'] = oscard;
                    entity = entity.id_hash;
                    entity = report.bind(michal)(tangon, zuuluu, entity);
                    return entity;
                }
            };
            result = result.bind(verify)(output);
            output = new Array(2);
            output[0] = result;
            update = _closure1_slot10;
            echoed = _closure1_slot16;
            result = {};
            result = update.bind(tangon)(echoed, result);
            output[1] = result;
            foxtra['children'] = output;
            yankee = kiloes.bind(tangon)(backup, foxtra);
 566:
            golfie[1] = yankee;
            verify = verify.length;
            offset = verify > offset;
            verify = null;
            if(!offset) { _fun00002_ip = 765; continue _fun00001 }
 587:
            foxtra = _closure1_slot10;
            yankee = _closure1_slot12;
            offset = {};
            update = _closure1_slot0;
            output = _closure1_slot2;
            backup = 16;
            backup = output[backup];
            backup = update.bind(tangon)(backup);
            kiloes = backup.TableRow;
            backup = {'start': true, 'end': true, 'variant': 'danger'};
            result = output[source];
            result = update.bind(tangon)(result);
            ctrled = result.intl;
            echoed = ctrled.string;
            result = output[source];
            result = update.bind(tangon)(result);
            result = result.t;
            result = result.cLmmeX;
            result = echoed.bind(ctrled)(result);
            backup['label'] = result;
            result = output[source];
            result = update.bind(tangon)(result);
            echoed = result.intl;
            result = echoed.string;
            output = output[source];
            output = update.bind(tangon)(output);
            output = output.t;
            output = output.OTXyaW;
            output = result.bind(echoed)(output);
            backup['subLabel'] = output;
            sizing = function() { // Original name: onPress
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 12;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.logOutSessions;
                report = _closure2_slot1;
                tangon = report.map;
                entity = function(argFoo) {
                    entity = argFoo;
                    entity = entity.id_hash;
                    return entity;
                };
                entity = tangon.bind(report)(entity);
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            backup['onPress'] = sizing;
            backup = foxtra.bind(tangon)(kiloes, backup);
            offset['children'] = backup;
            verify = foxtra.bind(tangon)(yankee, offset);
 765:
            golfie[2] = verify;
            zuuluu['children'] = golfie;
            verify = oscard.bind(tangon)(report, zuuluu);
            _fun00002_ip = 835; continue _fun00001;
 781:
            entity = null;
            if(!michal) { _fun00002_ip = 832; continue _fun00001 }
 786:
            report = _closure1_slot10;
            zuuluu = _closure1_slot6;
            michal = {};
            oscard = romeon.loading;
            michal['style'] = oscard;
            offset = _closure1_slot10;
            golfie = _closure1_slot5;
            oscard = {};
            oscard = offset.bind(tangon)(golfie, oscard);
            michal['children'] = oscard;
            entity = report.bind(tangon)(zuuluu, michal);
 832:
            verify = entity;
 835:
            zuuluu = _closure1_slot10;
            michal = _closure1_slot7;
            entity = {};
            report = romeon.container;
            entity['style'] = report;
            golfie = _closure1_slot11;
            kiloes = _closure1_slot0;
            sizing = _closure1_slot2;
            report = 17;
            report = sizing[report];
            report = kiloes.bind(tangon)(report);
            oscard = report.SafeAreaPaddingView;
            report = {};
            offset = true;
            report['bottom'] = offset;
            yankee = _closure1_slot10;
            option = 18;
            option = sizing[option];
            option = kiloes.bind(tangon)(option);
            offset = option.Text;
            option = {};
            foxtra = 'text-sm/medium';
            option['variant'] = foxtra;
            romeon = romeon.description;
            option['style'] = romeon;
            romeon = 15;
            foxtra = sizing[romeon];
            foxtra = kiloes.bind(tangon)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            romeon = sizing[romeon];
            romeon = kiloes.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.zZp619;
            romeon = foxtra.bind(backup)(romeon);
            option['children'] = romeon;
            offset = yankee.bind(tangon)(offset, option);
            option = new Array(2);
            option[0] = offset;
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot14 = entity;
    entity = function(argFoo) { // Original name: SessionInfo
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            report = entity.session;
            var _closure2_slot0 = report;
            entity = entity.current;
            michal = _closure1_slot13;
            tangon = undefined;
            result = michal.bind(tangon)();
            michal = report.client_info;
            offset = null;
            zuuluu = offset == michal;
            source = undefined;
            if(zuuluu) { _fun00006_ip = 55; continue _fun00005 }
 50:
            source = michal.location;
 55:
            if(!(offset == source)) { _fun00006_ip = 82; continue _fun00005 }
 59:
            zuuluu = report.client_info;
            golfie = offset == zuuluu;
            michal = undefined;
            if(golfie) { _fun00006_ip = 79; continue _fun00005 }
 74:
            michal = zuuluu.ip;
 79:
            source = michal;
 82:
            zuuluu = report.client_info;
            golfie = offset == zuuluu;
            michal = undefined;
            if(golfie) { _fun00006_ip = 103; continue _fun00005 }
 97:
            michal = zuuluu.platform;
 103:
            zuuluu = report.client_info;
            golfie = offset == zuuluu;
            option = undefined;
            if(golfie) { _fun00006_ip = 124; continue _fun00005 }
 118:
            option = zuuluu.os;
 124:
            zuuluu = offset == option;
            golfie = undefined;
            if(zuuluu) { _fun00006_ip = 153; continue _fun00005 }
 133:
            zuuluu = option.toLowerCase;
            verify = zuuluu.bind(option)();
            zuuluu = verify.trim;
            golfie = zuuluu.bind(verify)();
 153:
            if(!(offset !== golfie)) { _fun00006_ip = 320; continue _fun00005 }
 160:
            if(!(tangon !== golfie)) { _fun00006_ip = 320; continue _fun00005 }
 167:
            zuuluu = '';
            if(!(zuuluu !== golfie)) { _fun00006_ip = 320; continue _fun00005 }
 178:
            zuuluu = 'ios';
            if(!(zuuluu !== golfie)) { _fun00006_ip = 257; continue _fun00005 }
 186:
            zuuluu = 'android';
            if(!(zuuluu !== golfie)) { _fun00006_ip = 257; continue _fun00005 }
 194:
            golfie = {};
            golfie['text'] = option;
            verify = _closure1_slot1;
            yankee = _closure1_slot2;
            zuuluu = 26;
            zuuluu = yankee[zuuluu];
            zuuluu = verify.bind(tangon)(zuuluu);
            golfie['iconSource'] = zuuluu;
            verify = _closure1_slot0;
            zuuluu = 27;
            zuuluu = yankee[zuuluu];
            zuuluu = verify.bind(tangon)(zuuluu);
            zuuluu = zuuluu.ScreenIcon;
            golfie['IconComponent'] = zuuluu;
            _fun00006_ip = 430; continue _fun00005;
 257:
            zuuluu = {};
            zuuluu['text'] = option;
            verify = _closure1_slot1;
            yankee = _closure1_slot2;
            option = 28;
            option = yankee[option];
            option = verify.bind(tangon)(option);
            zuuluu['iconSource'] = option;
            verify = _closure1_slot0;
            option = 29;
            option = yankee[option];
            option = verify.bind(tangon)(option);
            option = option.MobilePhoneIcon;
            zuuluu['IconComponent'] = option;
            golfie = zuuluu;
            _fun00006_ip = 430; continue _fun00005;
 320:
            zuuluu = {};
            verify = _closure1_slot0;
            yankee = _closure1_slot2;
            option = 15;
            romeon = yankee[option];
            romeon = verify.bind(tangon)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            option = yankee[option];
            option = verify.bind(tangon)(option);
            option = option.t;
            option = option.cDHCNT;
            option = romeon.bind(foxtra)(option);
            zuuluu['text'] = option;
            romeon = _closure1_slot1;
            option = 26;
            option = yankee[option];
            option = romeon.bind(tangon)(option);
            zuuluu['iconSource'] = option;
            option = 27;
            option = yankee[option];
            option = verify.bind(tangon)(option);
            option = option.ScreenIcon;
            zuuluu['IconComponent'] = option;
            golfie = zuuluu;
 430:
            zuuluu = golfie.text;
            foxtra = golfie.iconSource;
            romeon = golfie.IconComponent;
            output = null;
            if(entity) { _fun00006_ip = 489; continue _fun00005 }
 452:
            option = _closure1_slot0;
            verify = _closure1_slot2;
            golfie = 9;
            golfie = verify[golfie];
            option = option.bind(tangon)(golfie);
            golfie = option.formatDate;
            report = report.approx_last_used_time;
            output = golfie.bind(option)(report);
 489:
            report = new Array(2);
            report[0] = zuuluu;
            report[1] = michal;
            zuuluu = report.filter;
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            michal = 19;
            michal = option[michal];
            michal = golfie.bind(tangon)(michal);
            michal = michal.isNotNullish;
            papara = zuuluu.bind(report)(michal);
            report = null;
            if(entity) { _fun00006_ip = 732; continue _fun00005 }
 545:
            zuuluu = _closure1_slot10;
            yankee = _closure1_slot0;
            kiloes = _closure1_slot2;
            entity = 20;
            entity = kiloes[entity];
            entity = yankee.bind(tangon)(entity);
            michal = entity.PressableOpacity;
            entity = {};
            golfie = 'button';
            entity['accessibilityRole'] = golfie;
            golfie = 15;
            option = kiloes[golfie];
            option = yankee.bind(tangon)(option);
            verify = option.intl;
            option = verify.string;
            golfie = kiloes[golfie];
            golfie = yankee.bind(tangon)(golfie);
            golfie = golfie.t;
            golfie = golfie.E4MJNj;
            golfie = option.bind(verify)(golfie);
            entity['accessibilityLabel'] = golfie;
            oscard = function() { // Original name: onPress
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 12;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.logOutSessions;
                entity = _closure2_slot0;
                entity = entity.id_hash;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity['onPress'] = oscard;
            oscard = {'top': 5, 'left': 5, 'bottom': 5, 'right': 5};
            entity['hitSlop'] = oscard;
            option = _closure1_slot10;
            yankee = _closure1_slot1;
            oscard = 21;
            oscard = kiloes[oscard];
            golfie = yankee.bind(tangon)(oscard);
            oscard = {};
            verify = result.logoutButton;
            oscard['style'] = verify;
            verify = 22;
            verify = kiloes[verify];
            verify = yankee.bind(tangon)(verify);
            oscard['source'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            entity['children'] = oscard;
            report = zuuluu.bind(tangon)(michal, entity);
 732:
            zuuluu = _closure1_slot10;
            michal = _closure1_slot6;
            entity = {};
            oscard = result.sessionInfo;
            entity['style'] = oscard;
            verify = true;
            entity['accessible'] = verify;
            option = _closure1_slot11;
            golfie = _closure1_slot6;
            oscard = {};
            yankee = result.sessionInfoRow;
            oscard['style'] = yankee;
            sizing = _closure1_slot10;
            kiloes = _closure1_slot0;
            yankee = _closure1_slot2;
            echoed = 18;
            yankee = yankee[echoed];
            yankee = kiloes.bind(tangon)(yankee);
            kiloes = yankee.Text;
            yankee = {};
            target = 'text-md/semibold';
            yankee['variant'] = target;
            update = 0;
            update = papara[update];
            yankee['children'] = update;
            kiloes = sizing.bind(tangon)(kiloes, yankee);
            yankee = new Array(2);
            yankee[0] = kiloes;
            kiloes = papara.length;
            cntext = 1;
            kiloes = kiloes > cntext;
            if(!kiloes) { _fun00006_ip = 988; continue _fun00005 }
 860:
            ctrled = _closure1_slot11;
            update = _closure1_slot12;
            sizing = {};
            status = _closure1_slot10;
            config = _closure1_slot0;
            sequen = _closure1_slot2;
            vacuum = sequen[echoed];
            vacuum = config.bind(tangon)(vacuum);
            record = vacuum.Text;
            vacuum = {'variant': 'text-md/semibold', 'accessibilityLabel': ',', 'style': null, 'children': '·'};
            sierra = result.sessionInfoRowSpacing;
            vacuum['style'] = sierra;
            record = status.bind(tangon)(record, vacuum);
            vacuum = new Array(2);
            vacuum[0] = record;
            record = _closure1_slot10;
            sequen = sequen[echoed];
            sequen = config.bind(tangon)(sequen);
            config = sequen.Text;
            sequen = {};
            sequen['variant'] = target;
            cntext = papara[cntext];
            sequen['children'] = cntext;
            sequen = record.bind(tangon)(config, sequen);
            vacuum[1] = sequen;
            sizing['children'] = vacuum;
            kiloes = ctrled.bind(tangon)(update, sizing);
 988:
            yankee[1] = kiloes;
            oscard['children'] = yankee;
            oscard = option.bind(tangon)(golfie, oscard);
            entity['children'] = oscard;
            oscard = zuuluu.bind(tangon)(michal, entity);
            zuuluu = _closure1_slot10;
            option = _closure1_slot0;
            kiloes = _closure1_slot2;
            golfie = 16;
            entity = kiloes[golfie];
            entity = option.bind(tangon)(entity);
            michal = entity.TableRow;
            entity = {};
            yankee = _closure1_slot10;
            golfie = kiloes[golfie];
            golfie = option.bind(tangon)(golfie);
            golfie = golfie.TableRow;
            option = golfie.Icon;
            golfie = {};
            golfie['source'] = foxtra;
            golfie['IconComponent'] = romeon;
            romeon = 'translucent';
            golfie['variant'] = romeon;
            golfie = yankee.bind(tangon)(option, golfie);
            entity['icon'] = golfie;
            entity['label'] = oscard;
            option = _closure1_slot11;
            golfie = _closure1_slot6;
            oscard = {};
            oscard['accessible'] = verify;
            yankee = offset != source;
            if(!yankee) { _fun00006_ip = 1214; continue _fun00005 }
 1124:
            foxtra = _closure1_slot10;
            romeon = _closure1_slot6;
            verify = {};
            kiloes = result.sessionInfoRow;
            verify['style'] = kiloes;
            update = _closure1_slot10;
            sizing = _closure1_slot0;
            kiloes = _closure1_slot2;
            kiloes = kiloes[echoed];
            kiloes = sizing.bind(tangon)(kiloes);
            sizing = kiloes.Text;
            kiloes = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
            ctrled = result.detailsText;
            kiloes['style'] = ctrled;
            kiloes['children'] = source;
            kiloes = update.bind(tangon)(sizing, kiloes);
            verify['children'] = kiloes;
            yankee = foxtra.bind(tangon)(romeon, verify);
 1214:
            verify = new Array(2);
            verify[0] = yankee;
            offset = offset != output;
            if(!offset) { _fun00006_ip = 1319; continue _fun00005 }
 1229:
            foxtra = _closure1_slot10;
            romeon = _closure1_slot6;
            yankee = {};
            kiloes = result.sessionInfoRow;
            yankee['style'] = kiloes;
            sizing = _closure1_slot10;
            kiloes = _closure1_slot0;
            backup = _closure1_slot2;
            backup = backup[echoed];
            backup = kiloes.bind(tangon)(backup);
            kiloes = backup.Text;
            backup = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
            result = result.detailsText;
            backup['style'] = result;
            backup['children'] = output;
            backup = sizing.bind(tangon)(kiloes, backup);
            yankee['children'] = backup;
            offset = foxtra.bind(tangon)(romeon, yankee);
 1319:
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            entity['subLabel'] = oscard;
            entity['trailing'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot15 = entity;
    entity = function() { // Original name: UnknownLegacySessionsInfo
        oscard = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 23;
        entity = offset[entity];
        tangon = undefined;
        michal = oscard.bind(tangon)(entity);
        entity = michal.useNavigation;
        entity = entity.bind(michal)();
        var _closure2_slot0 = entity;
        zuuluu = _closure1_slot10;
        report = 16;
        entity = offset[report];
        entity = oscard.bind(tangon)(entity);
        michal = entity.TableRow;
        entity = {};
        option = _closure1_slot10;
        report = offset[report];
        report = oscard.bind(tangon)(report);
        report = report.TableRow;
        golfie = report.Icon;
        report = {};
        romeon = 'translucent';
        report['variant'] = romeon;
        romeon = _closure1_slot1;
        yankee = 24;
        yankee = offset[yankee];
        yankee = romeon.bind(tangon)(yankee);
        report['source'] = yankee;
        report = option.bind(tangon)(golfie, report);
        entity['icon'] = report;
        report = 15;
        golfie = offset[report];
        golfie = oscard.bind(tangon)(golfie);
        yankee = golfie.intl;
        option = yankee.string;
        golfie = offset[report];
        golfie = oscard.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.iUa0sr;
        golfie = option.bind(yankee)(golfie);
        entity['label'] = golfie;
        golfie = offset[report];
        golfie = oscard.bind(tangon)(golfie);
        option = golfie.intl;
        golfie = option.format;
        report = offset[report];
        report = oscard.bind(tangon)(report);
        report = report.t;
        oscard = report.044+8v;
        report = {};
        verify = function() { // Original name: onClick
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 25;
            zuuluu = zuuluu[entity];
            entity = undefined;
            report = tangon.bind(entity)(zuuluu);
            tangon = report.setSection;
            zuuluu = _closure1_slot9;
            zuuluu = zuuluu.ACCOUNT;
            zuuluu = tangon.bind(report)(zuuluu);
            tangon = _closure2_slot0;
            zuuluu = tangon.push;
            michal = _closure1_slot9;
            michal = michal.ACCOUNT;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        report['onClick'] = verify;
        report = golfie.bind(option)(oscard, report);
        entity['subLabel'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot16 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.ActivityIndicator;
    var _closure1_slot5 = golfie;
    golfie = tangon.View;
    var _closure1_slot6 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    backup = 4;
    tangon = oscard[backup];
    tangon = report.bind(entity)(tangon);
    output = tangon.Fonts;
    tangon = tangon.UserSettingsSections;
    var _closure1_slot9 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot10 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot11 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot12 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    offset = 16;
    romeon = 8;
    verify = {'paddingHorizontal': 16, 'paddingTop': 8, 'marginBottom': 8};
    tangon['description'] = verify;
    verify = {};
    result = 7;
    yankee = oscard[result];
    sizing = foxtra.bind(entity)(yankee);
    kiloes = output.DISPLAY_MEDIUM;
    yankee = oscard[romeon];
    yankee = foxtra.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.TEXT_NORMAL;
    vacuum = 12;
    config = sizing.bind(entity)(kiloes, yankee, vacuum);
    record = verify;
    yankee = copyDataProperties(record, config);
    echoed = '700';
    sizing = 'fontWeight';
    verify[sizing] = echoed;
    yankee = 'uppercase';
    kiloes = 'textTransform';
    verify[kiloes] = yankee;
    tangon['headerText'] = verify;
    verify = {};
    update = oscard[result];
    ctrled = foxtra.bind(entity)(update);
    source = output.DISPLAY_MEDIUM;
    update = oscard[romeon];
    update = foxtra.bind(entity)(update);
    update = update.colors;
    update = update.TEXT_MUTED;
    config = ctrled.bind(entity)(source, update, vacuum);
    record = verify;
    update = copyDataProperties(record, config);
    verify[sizing] = echoed;
    verify[kiloes] = yankee;
    tangon['legacySessionHeaderText'] = verify;
    verify = {};
    kiloes = oscard[result];
    source = foxtra.bind(entity)(kiloes);
    echoed = output.PRIMARY_MEDIUM;
    kiloes = oscard[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.TEXT_NORMAL;
    update = 14;
    config = source.bind(entity)(echoed, kiloes, update);
    record = verify;
    kiloes = copyDataProperties(record, config);
    kiloes = '500';
    verify[sizing] = kiloes;
    tangon['detailsText'] = verify;
    verify = {};
    result = oscard[result];
    echoed = foxtra.bind(entity)(result);
    result = output.PRIMARY_MEDIUM;
    output = oscard[romeon];
    output = foxtra.bind(entity)(output);
    output = output.colors;
    output = output.TEXT_MUTED;
    config = echoed.bind(entity)(result, output, update);
    record = verify;
    output = copyDataProperties(record, config);
    verify[sizing] = kiloes;
    tangon['legacySessionText'] = verify;
    kiloes = 'flex';
    verify = {'display': 'flex', 'flex': 1};
    tangon['container'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tangon['loading'] = verify;
    verify = {};
    verify['paddingVertical'] = romeon;
    tangon['sessionList'] = verify;
    verify = {'width': 48, 'height': 48, 'padding': 8};
    sizing = oscard[romeon];
    sizing = foxtra.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.xl;
    verify['borderRadius'] = sizing;
    sizing = oscard[romeon];
    sizing = foxtra.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.INTERACTIVE_NORMAL;
    verify['backgroundColor'] = sizing;
    tangon['sessionIcon'] = verify;
    verify = {};
    sizing = oscard[romeon];
    sizing = foxtra.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.INTERACTIVE_MUTED;
    verify['backgroundColor'] = sizing;
    tangon['legacySessionIcon'] = verify;
    verify = {};
    sizing = oscard[romeon];
    sizing = foxtra.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BACKGROUND_NESTED_FLOATING;
    verify['color'] = sizing;
    tangon['sessionIconColor'] = verify;
    verify = {};
    verify['display'] = kiloes;
    tangon['sessionInfo'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'flexWrap': 'wrap'};
    tangon['sessionInfoRow'] = verify;
    verify = {};
    verify['marginBottom'] = backup;
    tangon['sessionInfoHeaderRow'] = verify;
    verify = {};
    verify['marginHorizontal'] = backup;
    tangon['sessionInfoRowSpacing'] = verify;
    verify = {};
    backup = 10;
    verify['marginRight'] = backup;
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INTERACTIVE_NORMAL;
    verify['tintColor'] = backup;
    tangon['logoutButton'] = verify;
    verify = {};
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.unsafe_rawColors;
    backup = backup.RED_400;
    verify['color'] = backup;
    tangon['logoutAllButton'] = verify;
    verify = {'backgroundColor': null, 'height': 1, 'marginVertical': 8, 'marginLeft': 16};
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_MODIFIER_ACCENT;
    verify['backgroundColor'] = romeon;
    tangon['divider'] = verify;
    verify = {};
    verify['textTransform'] = yankee;
    tangon['label'] = verify;
    verify = {};
    verify['paddingHorizontal'] = offset;
    tangon['list'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot13 = tangon;
    tangon = 30;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/UserSettingsSessions.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: UserSettingsSessionsContainer
        tangon = _closure1_slot10;
        michal = _closure1_slot0;
        zuuluu = _closure1_slot2;
        entity = 11;
        entity = zuuluu[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.RedesignCompat;
        entity = {};
        golfie = _closure1_slot10;
        oscard = _closure1_slot14;
        report = {};
        report = golfie.bind(zuuluu)(oscard, report);
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();