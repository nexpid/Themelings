// app/modules/user_settings/native/UserSettingsEditGuildProfile.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    romeo = tango.StyleSheet;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 5;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_NESTED_FLOATING;
    verify['backgroundColor'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.none;
    verify['borderRadius'] = foxtrot;
    foxtrot = romeo.hairlineWidth;
    verify['borderTopWidth'] = foxtrot;
    romeo = romeo.hairlineWidth;
    verify['borderBottomWidth'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_TERTIARY;
    verify['borderColor'] = offset;
    offset = 'hidden';
    verify['overflow'] = offset;
    tango['guildSelector'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/UserSettingsEditGuildProfile.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: UserSettingsEditGuildProfile
        _fun93321: for(var _fun93321_ip = 0; ; ) switch(_fun93321_ip) {
 0:
            mike = _closure1_slot8;
            tango = undefined;
            foxtrot = mike.bind(tango)();
            zulu = _closure1_slot0;
            report = _closure1_slot2;
            mike = 6;
            mike = report[mike];
            golf = zulu.bind(tango)(mike);
            oscar = golf.useStateFromStores;
            mike = _closure1_slot4;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                mike = _closure1_slot4;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            yankee = oscar.bind(golf)(zulu, mike);
            var _closure2_slot0 = yankee;
            zulu = _closure1_slot1;
            mike = 7;
            mike = report[mike];
            mike = zulu.bind(tango)(mike);
            mike = mike.bind(tango)();
            golf = mike.guild;
            var _closure2_slot1 = golf;
            zulu = mike.resetPending;
            var _closure2_slot2 = zulu;
            mike = mike.hasEdits;
            var _closure2_slot3 = mike;
            oscar = _closure1_slot3;
            report = oscar.useEffect;
            zulu = new Array(2);
            zulu[0] = yankee;
            zulu[1] = golf;
            mike = function() {
                _fun93323: for(var _fun93323_ip = 0; ; ) switch(_fun93323_ip) {
 0:
                    mike = _closure2_slot0;
                    tango = null;
                    mike = tango != mike;
                    if(!mike) { _fun93323_ip = 24; continue _fun93323 }
 16:
                    zulu = _closure2_slot1;
                    mike = tango != zulu;
 24:
                    if(!mike) { _fun93323_ip = 137; continue _fun93323 }
 27:
                    oscar = _closure1_slot0;
                    tango = _closure1_slot2;
                    zulu = 8;
                    zulu = tango[zulu];
                    report = undefined;
                    golf = oscar.bind(report)(zulu);
                    zulu = golf.setCurrentGuild;
                    oscar = _closure2_slot1;
                    zulu = zulu.bind(golf)(oscar);
                    zulu = _closure1_slot1;
                    mike = 9;
                    mike = tango[mike];
                    tango = zulu.bind(report)(mike);
                    options = _closure2_slot0;
                    zulu = options.id;
                    golf = options.getAvatarURL;
                    mike = oscar.id;
                    entity = 80;
                    mike = golf.bind(options)(mike, entity);
                    entity = {};
                    oscar = oscar.id;
                    entity['guildId'] = oscar;
                    oscar = true;
                    entity['dispatchWait'] = oscar;
                    entity = tango.bind(report)(zulu, mike, entity);
 137:
                    entity = undefined;
                    return entity;
                }
            };
            mike = report.bind(oscar)(mike, zulu);
            mike = null;
            if(!(mike != yankee)) { _fun93321_ip = 436; continue _fun93321 }
 161:
            if(!(mike != golf)) { _fun93321_ip = 436; continue _fun93321 }
 168:
            mike = function(argFoo) { // Original name: onSelectGuild
                mike = _closure2_slot2;
                entity = undefined;
                mike = mike.bind(entity)();
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                mike = 8;
                mike = tango[mike];
                tango = zulu.bind(entity)(mike);
                zulu = tango.setCurrentGuild;
                mike = argFoo;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            var _closure2_slot4 = mike;
            report = _closure1_slot7;
            zulu = _closure1_slot6;
            mike = {};
            offset = _closure1_slot5;
            sizing = _closure1_slot0;
            romeo = _closure1_slot2;
            kilo = 11;
            oscar = romeo[kilo];
            oscar = sizing.bind(tango)(oscar);
            options = oscar.FormRow;
            oscar = {};
            verify = _closure1_slot1;
            echo = 12;
            output = romeo[echo];
            result = verify.bind(tango)(output);
            output = {};
            output['guild'] = golf;
            echo = romeo[echo];
            echo = sizing.bind(tango)(echo);
            echo = echo.GuildIconSizes;
            echo = echo.XSMALL;
            output['size'] = echo;
            output = offset.bind(tango)(result, output);
            oscar['leading'] = output;
            output = golf.name;
            oscar['label'] = output;
            kilo = romeo[kilo];
            kilo = sizing.bind(tango)(kilo);
            kilo = kilo.FormRow;
            sizing = kilo.Arrow;
            kilo = {};
            kilo = offset.bind(tango)(sizing, kilo);
            oscar['trailing'] = kilo;
            backup = function() { // Original name: onPress
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 13;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = {};
                tango = function() { // Original name: onConfirm
                    report = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 14;
                    tango = mike[entity];
                    entity = undefined;
                    oscar = report.bind(entity)(tango);
                    report = oscar.openLazy;
                    tango = _closure1_slot0;
                    zulu = 16;
                    zulu = mike[zulu];
                    tango = tango.bind(entity)(zulu);
                    zulu = 15;
                    zulu = mike[zulu];
                    mike = mike.paths;
                    tango = tango.bind(entity)(zulu, mike);
                    zulu = {};
                    golf = _closure2_slot0;
                    zulu['user'] = golf;
                    golf = _closure2_slot1;
                    zulu['selectedGuild'] = golf;
                    mike = _closure2_slot4;
                    zulu['onSelectGuild'] = mike;
                    mike = 'GuildSelectComponentActionSheet';
                    mike = report.bind(oscar)(tango, mike, zulu);
                    return entity;
                };
                mike['onConfirm'] = tango;
                report = _closure2_slot3;
                mike['hasEdits'] = report;
                tango = _closure2_slot2;
                mike['resetPending'] = tango;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            oscar['onPress'] = backup;
            foxtrot = foxtrot.guildSelector;
            oscar['style'] = foxtrot;
            options = offset.bind(tango)(options, oscar);
            oscar = new Array(2);
            oscar[0] = options;
            options = 17;
            options = romeo[options];
            verify = verify.bind(tango)(options);
            options = {};
            options['user'] = yankee;
            backup = yankee.id;
            foxtrot = golf.id;
            golf = global;
            golf = golf.HermesInternal;
            romeo = golf.concat;
            yankee = '';
            golf = '-';
            golf = romeo.bind(yankee)(backup, golf, foxtrot);
            golf = offset.bind(tango)(verify, options, golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            mike = report.bind(tango)(zulu, mike);
            return mike;
 436:
            zulu = _closure1_slot5;
            mike = _closure1_slot1;
            report = _closure1_slot2;
            entity = 10;
            entity = report[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();