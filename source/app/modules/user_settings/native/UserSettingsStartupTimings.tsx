// app/modules/user_settings/native/UserSettingsStartupTimings.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: Code
        entity = argFoo;
        report = entity.children;
        golf = entity.color;
        mike = _closure1_slot10;
        tango = undefined;
        oscar = mike.bind(tango)();
        zulu = _closure1_slot7;
        mike = _closure1_slot0;
        options = _closure1_slot2;
        entity = 7;
        entity = options[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.Text;
        entity = {'variant': 'text-sm/normal', 'color': null, 'lineClamp': 1};
        entity['color'] = golf;
        oscar = oscar.code;
        entity['style'] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    backup = 1;
    golf = oscar[backup];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    romeo = 2;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    tango = tango.NativeModules;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    foxtrot = tango.Fonts;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 6;
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = kilo;
    verify['flex'] = backup;
    tango['wrap'] = verify;
    verify = {};
    backup = foxtrot.CODE_BOLD;
    verify['fontFamily'] = backup;
    tango['code'] = verify;
    verify = {};
    backup = 14;
    verify['fontSize'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.TEXT_NORMAL;
    verify['color'] = backup;
    foxtrot = foxtrot.CODE_BOLD;
    verify['fontFamily'] = foxtrot;
    tango['text'] = verify;
    verify = {};
    verify['marginRight'] = romeo;
    verify['backgroundColor'] = entity;
    tango['share'] = verify;
    verify = {'height': 1, 'backgroundColor': null, 'marginBottom': 8};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = offset;
    offset = 8;
    tango['border'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tango['heading'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_settings/native/UserSettingsStartupTimings.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: UserSettingsStartupTimings
        _fun98212: for(var _fun98212_ip = 0; ; ) switch(_fun98212_ip) {
 0:
            entity = _closure1_slot10;
            tango = undefined;
            oscar = entity.bind(tango)();
            var _closure2_slot0 = oscar;
            verify = _closure1_slot4;
            entity = verify.useState;
            romeo = true;
            entity = entity.bind(verify)(romeo);
            yankee = _closure1_slot3;
            golf = 2;
            mike = yankee.bind(tango)(entity, golf);
            entity = 0;
            offset = mike[entity];
            var _closure2_slot1 = offset;
            zulu = 1;
            mike = mike[zulu];
            var _closure2_slot2 = mike;
            mike = verify.useState;
            mike = mike.bind(verify)(romeo);
            mike = yankee.bind(tango)(mike, golf);
            entity = mike[entity];
            var _closure2_slot3 = entity;
            mike = mike[zulu];
            var _closure2_slot4 = mike;
            mike = _closure1_slot6;
            mike = mike.TTIManager;
            golf = mike.AppOpenedTimestamp;
            var _closure2_slot5 = golf;
            zulu = verify.useMemo;
            mike = new Array(3);
            mike[0] = golf;
            mike[1] = offset;
            mike[2] = entity;
            entity = function() {
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 8;
                entity = zulu[entity];
                report = undefined;
                tango = mike.bind(report)(entity);
                zulu = _closure2_slot5;
                mike = _closure2_slot1;
                mike = !mike;
                entity = _closure2_slot3;
                zulu = tango.bind(report)(zulu, mike, entity);
                mike = zulu.split;
                entity = '\n';
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            verify = zulu.bind(verify)(entity, mike);
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 9;
            offset = mike[entity];
            offset = zulu.bind(tango)(offset);
            offset = offset.loadIndex;
            offset = offset.start;
            offset = offset - golf;
            var _closure2_slot6 = offset;
            offset = mike[entity];
            offset = zulu.bind(tango)(offset);
            offset = offset.loadMiniCache;
            yankee = offset.end;
            offset = mike[entity];
            offset = zulu.bind(tango)(offset);
            offset = offset.loadMiniCache;
            offset = offset.start;
            yankee = yankee - offset;
            offset = mike[entity];
            offset = zulu.bind(tango)(offset);
            offset = offset.parseStorage;
            romeo = offset.end;
            offset = mike[entity];
            offset = zulu.bind(tango)(offset);
            offset = offset.parseStorage;
            offset = offset.start;
            offset = romeo - offset;
            offset = yankee + offset;
            var _closure2_slot7 = offset;
            offset = mike[entity];
            offset = zulu.bind(tango)(offset);
            offset = offset.loadLazyCache;
            yankee = offset.end;
            offset = mike[entity];
            offset = zulu.bind(tango)(offset);
            offset = offset.loadLazyCache;
            offset = offset.start;
            offset = yankee - offset;
            var _closure2_slot8 = offset;
            offset = mike[entity];
            offset = zulu.bind(tango)(offset);
            offset = offset.ready;
            yankee = offset.end;
            offset = mike[entity];
            offset = zulu.bind(tango)(offset);
            offset = offset.ready;
            offset = offset.start;
            offset = yankee - offset;
            var _closure2_slot9 = offset;
            mike = mike[entity];
            mike = zulu.bind(tango)(mike);
            mike = mike.extraProperties;
            mike = mike.time_first_native_message_render_end;
            zulu = null;
            if(!(zulu == mike)) { _fun98212_ip = 446; continue _fun98212 }
 413:
            offset = _closure1_slot1;
            zulu = _closure1_slot2;
            zulu = zulu[entity];
            zulu = offset.bind(tango)(zulu);
            zulu = zulu.renderMessagesWithCache;
            zulu = zulu.time;
            mike = zulu - golf;
 446:
            var _closure2_slot10 = mike;
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            mike = mike[entity];
            mike = zulu.bind(tango)(mike);
            zulu = mike.renderLatestMessages;
            mike = zulu.hasData;
            mike = mike.bind(zulu)();
            golf = _closure1_slot1;
            zulu = _closure1_slot2;
            zulu = zulu[entity];
            zulu = golf.bind(tango)(zulu);
            if(mike) { _fun98212_ip = 516; continue _fun98212 }
 503:
            mike = zulu.ready;
            mike = mike.end;
            _fun98212_ip = 528; continue _fun98212;
 516:
            zulu = zulu.renderLatestMessages;
            mike = zulu.time;
 528:
            var _closure2_slot11 = mike;
            mike = global;
            zulu = mike.Math;
            mike = zulu.ceil;
            golf = _closure1_slot1;
            offset = _closure1_slot2;
            entity = offset[entity];
            entity = golf.bind(tango)(entity);
            entity = entity.renderLatestMessages;
            entity = entity.importTime;
            entity = mike.bind(zulu)(entity);
            var _closure2_slot12 = entity;
            entity = function(argFoo) { // Original name: renderTime
                options = argFoo;
                tango = _closure1_slot7;
                zulu = _closure1_slot11;
                mike = {};
                entity = 'text-brand';
                mike['color'] = entity;
                entity = 1000;
                verify = options / entity;
                entity = global;
                golf = entity.Math;
                oscar = golf.round;
                offset = _closure2_slot11;
                report = _closure2_slot5;
                report = offset - report;
                options = options / report;
                report = 100;
                report = options * report;
                romeo = oscar.bind(golf)(report);
                entity = entity.HermesInternal;
                golf = entity.concat;
                kilo = '';
                foxtrot = 's (';
                yankee = '%)';
                backup = verify;
                entity = kilo[golf](backup, foxtrot, romeo, yankee, offset);
                mike['children'] = entity;
                entity = undefined;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            var _closure2_slot13 = entity;
            entity = function(argFoo) { // Original name: renderTTi
                _fun98215: for(var _fun98215_ip = 0; ; ) switch(_fun98215_ip) {
 0:
                    oscar = argFoo;
                    tango = _closure1_slot7;
                    zulu = _closure1_slot11;
                    mike = {};
                    entity = 'text-brand';
                    mike['color'] = entity;
                    entity = null;
                    report = entity == oscar;
                    golf = '';
                    entity = golf;
                    if(report) { _fun98215_ip = 72; continue _fun98215 }
 42:
                    report = 0;
                    report = oscar <= report;
                    entity = golf;
                    if(report) { _fun98215_ip = 72; continue _fun98215 }
 54:
                    report = 1000;
                    oscar = oscar / report;
                    report = 's';
                    entity = oscar + report;
 72:
                    mike['children'] = entity;
                    entity = undefined;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                }
            };
            var _closure2_slot14 = entity;
            zulu = _closure1_slot7;
            mike = _closure1_slot5;
            entity = {};
            oscar = oscar.wrap;
            entity['style'] = oscar;
            golf = _closure1_slot7;
            oscar = _closure1_slot0;
            report = 10;
            report = offset[report];
            report = oscar.bind(tango)(report);
            oscar = report.FlashList;
            report = {};
            offset = function() { // Original name: ListHeaderComponent
                tango = _closure1_slot8;
                zulu = _closure1_slot9;
                mike = {};
                result = _closure1_slot0;
                update = _closure1_slot2;
                entity = 11;
                report = update[entity];
                entity = undefined;
                report = result.bind(entity)(report);
                golf = report.Stack;
                report = {};
                verify = 16;
                report['spacing'] = verify;
                options = {};
                options['padding'] = verify;
                report['style'] = options;
                romeo = _closure1_slot7;
                offset = 12;
                options = update[offset];
                options = result.bind(entity)(options);
                yankee = options.TableRowGroup;
                options = {};
                verify = 'Key Cold Start Times';
                options['title'] = verify;
                output = _closure1_slot7;
                foxtrot = 13;
                verify = update[foxtrot];
                verify = result.bind(entity)(verify);
                kilo = verify.TableRow;
                backup = {};
                echo = {};
                sequence = _closure1_slot11;
                source = {};
                vacuum = _closure2_slot13;
                control = _closure2_slot6;
                vacuum = vacuum.bind(entity)(control);
                control = ['Native: '];
                control[1] = vacuum;
                source['children'] = control;
                control = tango.bind(entity)(sequence, source);
                source = new Array(7);
                source[0] = control;
                control = {};
                config = _closure2_slot13;
                vacuum = _closure2_slot12;
                config = config.bind(entity)(vacuum);
                vacuum = ['JS Imports: '];
                vacuum[1] = config;
                control['children'] = vacuum;
                control = tango.bind(entity)(sequence, control);
                source[1] = control;
                control = {};
                config = _closure2_slot13;
                vacuum = _closure2_slot7;
                config = config.bind(entity)(vacuum);
                vacuum = ['Mini Cache: '];
                vacuum[1] = config;
                control['children'] = vacuum;
                control = tango.bind(entity)(sequence, control);
                source[2] = control;
                control = {};
                config = _closure2_slot13;
                vacuum = _closure2_slot8;
                config = config.bind(entity)(vacuum);
                vacuum = ['Lazy Cache: '];
                vacuum[1] = config;
                control['children'] = vacuum;
                control = tango.bind(entity)(sequence, control);
                source[3] = control;
                control = {};
                config = _closure2_slot13;
                vacuum = _closure2_slot9;
                config = config.bind(entity)(vacuum);
                vacuum = ['Ready: '];
                vacuum[1] = config;
                control['children'] = vacuum;
                control = tango.bind(entity)(sequence, control);
                source[4] = control;
                control = {};
                config = _closure2_slot14;
                vacuum = _closure2_slot10;
                config = config.bind(entity)(vacuum);
                vacuum = ['First Cached Render: '];
                vacuum[1] = config;
                control['children'] = vacuum;
                control = tango.bind(entity)(sequence, control);
                source[5] = control;
                control = {};
                config = _closure2_slot14;
                record = _closure2_slot11;
                vacuum = _closure2_slot5;
                vacuum = record - vacuum;
                config = config.bind(entity)(vacuum);
                vacuum = ['Full TTI: '];
                vacuum[1] = config;
                control['children'] = vacuum;
                control = tango.bind(entity)(sequence, control);
                source[6] = control;
                echo['children'] = source;
                echo = tango.bind(entity)(zulu, echo);
                backup['label'] = echo;
                backup = output.bind(entity)(kilo, backup);
                options['children'] = backup;
                yankee = romeo.bind(entity)(yankee, options);
                options = new Array(4);
                options[0] = yankee;
                backup = _closure1_slot7;
                yankee = update[offset];
                yankee = result.bind(entity)(yankee);
                romeo = yankee.TableRowGroup;
                yankee = {};
                kilo = 'Legend';
                yankee['title'] = kilo;
                echo = _closure1_slot7;
                kilo = update[foxtrot];
                kilo = result.bind(entity)(kilo);
                output = kilo.TableRow;
                kilo = {};
                source = {};
                control = {};
                vacuum = ['☕', ' - Java / Kotlin'];
                control['children'] = vacuum;
                vacuum = tango.bind(entity)(sequence, control);
                control = new Array(6);
                control[0] = vacuum;
                vacuum = {};
                config = ['🎨', ' - React render'];
                vacuum['children'] = config;
                vacuum = tango.bind(entity)(sequence, vacuum);
                control[1] = vacuum;
                vacuum = {};
                config = ['💾', ' - CacheStore'];
                vacuum['children'] = config;
                vacuum = tango.bind(entity)(sequence, vacuum);
                control[2] = vacuum;
                vacuum = {};
                config = ['🦥', ' - Slow Store Update / Handler'];
                vacuum['children'] = config;
                vacuum = tango.bind(entity)(sequence, vacuum);
                control[3] = vacuum;
                vacuum = {};
                config = ['🏃', ' - Startup Event'];
                vacuum['children'] = config;
                vacuum = tango.bind(entity)(sequence, vacuum);
                control[4] = vacuum;
                vacuum = {};
                config = ['🌐', ' - Socket Event'];
                vacuum['children'] = config;
                vacuum = tango.bind(entity)(sequence, vacuum);
                control[5] = vacuum;
                source['children'] = control;
                source = tango.bind(entity)(zulu, source);
                kilo['label'] = source;
                kilo = echo.bind(entity)(output, kilo);
                yankee['children'] = kilo;
                yankee = backup.bind(entity)(romeo, yankee);
                options[1] = yankee;
                yankee = update[offset];
                yankee = result.bind(entity)(yankee);
                romeo = yankee.TableRowGroup;
                yankee = {};
                backup = 'Detailed Times';
                yankee['title'] = backup;
                echo = _closure1_slot7;
                kilo = 14;
                backup = update[kilo];
                backup = result.bind(entity)(backup);
                output = backup.TableCheckboxRow;
                backup = {};
                source = 'Hide the Noise';
                backup['label'] = source;
                source = function() { // Original name: onPress
                    zulu = _closure2_slot2;
                    mike = undefined;
                    entity = function(argFoo) {
                        entity = argFoo;
                        entity = !entity;
                        return entity;
                    };
                    entity = zulu.bind(mike)(entity);
                    return entity;
                };
                backup['onPress'] = source;
                source = _closure2_slot1;
                backup['checked'] = source;
                output = echo.bind(entity)(output, backup);
                backup = new Array(2);
                backup[0] = output;
                echo = _closure1_slot7;
                kilo = update[kilo];
                kilo = result.bind(entity)(kilo);
                output = kilo.TableCheckboxRow;
                kilo = {};
                source = 'Hide paints';
                kilo['label'] = source;
                source = function() { // Original name: onPress
                    zulu = _closure2_slot4;
                    mike = undefined;
                    entity = function(argFoo) {
                        entity = argFoo;
                        entity = !entity;
                        return entity;
                    };
                    entity = zulu.bind(mike)(entity);
                    return entity;
                };
                kilo['onPress'] = source;
                source = _closure2_slot3;
                source = !source;
                kilo['checked'] = source;
                kilo = echo.bind(entity)(output, kilo);
                backup[1] = kilo;
                yankee['children'] = backup;
                yankee = tango.bind(entity)(romeo, yankee);
                options[2] = yankee;
                romeo = _closure1_slot7;
                offset = update[offset];
                offset = result.bind(entity)(offset);
                yankee = offset.TableRowGroup;
                offset = {'title': 'Share Timings', 'hasIcons': true};
                kilo = _closure1_slot7;
                foxtrot = update[foxtrot];
                foxtrot = result.bind(entity)(foxtrot);
                backup = foxtrot.TableRow;
                foxtrot = {'icon': null, 'label': 'Copy timings to clipboard.', 'arrow': true};
                echo = _closure1_slot7;
                output = 15;
                output = update[output];
                output = result.bind(entity)(output);
                result = output.ShareIcon;
                output = {};
                output = echo.bind(entity)(result, output);
                foxtrot['icon'] = output;
                sizing = function() { // Original name: onPress
                    zulu = _closure1_slot0;
                    options = _closure1_slot2;
                    mike = 16;
                    mike = options[mike];
                    oscar = undefined;
                    tango = zulu.bind(oscar)(mike);
                    zulu = tango.showShareActionSheet;
                    mike = {};
                    golf = _closure1_slot1;
                    report = 8;
                    report = options[report];
                    report = golf.bind(oscar)(report);
                    entity = _closure1_slot6;
                    entity = entity.TTIManager;
                    entity = entity.AppOpenedTimestamp;
                    entity = report.bind(oscar)(entity);
                    mike['message'] = entity;
                    entity = 'Startup Timing';
                    entity = zulu.bind(tango)(mike, entity);
                    return entity;
                };
                foxtrot['onPress'] = sizing;
                foxtrot = kilo.bind(entity)(backup, foxtrot);
                offset['children'] = foxtrot;
                offset = romeo.bind(entity)(yankee, offset);
                options[3] = offset;
                report['children'] = options;
                golf = tango.bind(entity)(golf, report);
                report = new Array(2);
                report[0] = golf;
                options = _closure1_slot7;
                golf = _closure1_slot5;
                oscar = {};
                verify = _closure2_slot0;
                verify = verify.border;
                oscar['style'] = verify;
                oscar = options.bind(entity)(golf, oscar);
                report[1] = oscar;
                mike['children'] = report;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            report['ListHeaderComponent'] = offset;
            report['data'] = verify;
            options = function(argFoo) { // Original name: renderItem
                entity = argFoo;
                entity = entity.item;
                tango = _closure1_slot7;
                zulu = _closure1_slot11;
                mike = {};
                mike['children'] = entity;
                entity = undefined;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            report['renderItem'] = options;
            options = 20;
            report['estimatedItemSize'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();