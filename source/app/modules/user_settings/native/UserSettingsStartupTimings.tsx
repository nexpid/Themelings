// app/modules/user_settings/native/UserSettingsStartupTimings.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: Code
        entity = argFoo;
        report = entity.children;
        golfie = entity.color;
        michal = _closure1_slot10;
        tangon = undefined;
        oscard = michal.bind(tangon)();
        zuuluu = _closure1_slot7;
        michal = _closure1_slot0;
        option = _closure1_slot2;
        entity = 7;
        entity = option[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Text;
        entity = {'variant': 'text-sm/normal', 'color': null, 'lineClamp': 1};
        entity['color'] = golfie;
        oscard = oscard.code;
        entity['style'] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    backup = 1;
    golfie = oscard[backup];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    romeon = 2;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.NativeModules;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    foxtra = tangon.Fonts;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 6;
    kiloes = oscard[offset];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = kiloes;
    verify['flex'] = backup;
    tangon['wrap'] = verify;
    verify = {};
    backup = foxtra.CODE_BOLD;
    verify['fontFamily'] = backup;
    tangon['code'] = verify;
    verify = {};
    backup = 14;
    verify['fontSize'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.TEXT_NORMAL;
    verify['color'] = backup;
    foxtra = foxtra.CODE_BOLD;
    verify['fontFamily'] = foxtra;
    tangon['text'] = verify;
    verify = {};
    verify['marginRight'] = romeon;
    verify['backgroundColor'] = entity;
    tangon['share'] = verify;
    verify = {'height': 1, 'backgroundColor': null, 'marginBottom': 8};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = offset;
    offset = 8;
    tangon['border'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tangon['heading'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_settings/native/UserSettingsStartupTimings.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: UserSettingsStartupTimings
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot10;
            tangon = undefined;
            oscard = entity.bind(tangon)();
            var _closure2_slot0 = oscard;
            golfie = _closure1_slot4;
            entity = golfie.useState;
            romeon = true;
            entity = entity.bind(golfie)(romeon);
            yankee = _closure1_slot3;
            offset = 2;
            michal = yankee.bind(tangon)(entity, offset);
            entity = 0;
            verify = michal[entity];
            var _closure2_slot1 = verify;
            zuuluu = 1;
            michal = michal[zuuluu];
            var _closure2_slot2 = michal;
            michal = golfie.useState;
            michal = michal.bind(golfie)(romeon);
            michal = yankee.bind(tangon)(michal, offset);
            entity = michal[entity];
            var _closure2_slot3 = entity;
            michal = michal[zuuluu];
            var _closure2_slot4 = michal;
            michal = _closure1_slot6;
            michal = michal.TTIManager;
            offset = michal.AppOpenedTimestamp;
            var _closure2_slot5 = offset;
            zuuluu = golfie.useMemo;
            michal = new Array(3);
            michal[0] = offset;
            michal[1] = verify;
            michal[2] = entity;
            entity = function() {
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 8;
                entity = zuuluu[entity];
                report = undefined;
                tangon = michal.bind(report)(entity);
                zuuluu = _closure2_slot5;
                michal = _closure2_slot1;
                michal = !michal;
                entity = _closure2_slot3;
                zuuluu = tangon.bind(report)(zuuluu, michal, entity);
                michal = zuuluu.split;
                entity = '\n';
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            verify = zuuluu.bind(golfie)(entity, michal);
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 9;
            golfie = michal[entity];
            golfie = zuuluu.bind(tangon)(golfie);
            golfie = golfie.loadIndex;
            golfie = golfie.start;
            golfie = golfie - offset;
            var _closure2_slot6 = golfie;
            golfie = michal[entity];
            golfie = zuuluu.bind(tangon)(golfie);
            golfie = golfie.loadMiniCache;
            offset = golfie.end;
            golfie = michal[entity];
            golfie = zuuluu.bind(tangon)(golfie);
            golfie = golfie.loadMiniCache;
            golfie = golfie.start;
            offset = offset - golfie;
            golfie = michal[entity];
            golfie = zuuluu.bind(tangon)(golfie);
            golfie = golfie.parseStorage;
            yankee = golfie.end;
            golfie = michal[entity];
            golfie = zuuluu.bind(tangon)(golfie);
            golfie = golfie.parseStorage;
            golfie = golfie.start;
            golfie = yankee - golfie;
            golfie = offset + golfie;
            var _closure2_slot7 = golfie;
            golfie = michal[entity];
            golfie = zuuluu.bind(tangon)(golfie);
            golfie = golfie.loadLazyCache;
            offset = golfie.end;
            golfie = michal[entity];
            golfie = zuuluu.bind(tangon)(golfie);
            golfie = golfie.loadLazyCache;
            golfie = golfie.start;
            golfie = offset - golfie;
            var _closure2_slot8 = golfie;
            golfie = michal[entity];
            golfie = zuuluu.bind(tangon)(golfie);
            golfie = golfie.ready;
            offset = golfie.end;
            golfie = michal[entity];
            golfie = zuuluu.bind(tangon)(golfie);
            golfie = golfie.ready;
            golfie = golfie.start;
            golfie = offset - golfie;
            var _closure2_slot9 = golfie;
            michal = michal[entity];
            michal = zuuluu.bind(tangon)(michal);
            michal = michal.extraProperties;
            michal = michal.time_first_native_message_render_end;
            zuuluu = null;
            if(!(zuuluu == michal)) { _fun00002_ip = 442; continue _fun00001 }
 413:
            golfie = _closure1_slot1;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu[entity];
            zuuluu = golfie.bind(tangon)(zuuluu);
            zuuluu = zuuluu.renderMessagesWithCache;
            michal = zuuluu.time;
 442:
            var _closure2_slot10 = michal;
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            michal = michal[entity];
            michal = zuuluu.bind(tangon)(michal);
            zuuluu = michal.renderLatestMessages;
            michal = zuuluu.hasData;
            michal = michal.bind(zuuluu)();
            golfie = _closure1_slot1;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu[entity];
            zuuluu = golfie.bind(tangon)(zuuluu);
            if(michal) { _fun00002_ip = 512; continue _fun00001 }
 499:
            michal = zuuluu.ready;
            michal = michal.end;
            _fun00002_ip = 524; continue _fun00001;
 512:
            zuuluu = zuuluu.renderLatestMessages;
            michal = zuuluu.time;
 524:
            var _closure2_slot11 = michal;
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            michal = michal[entity];
            michal = zuuluu.bind(tangon)(michal);
            zuuluu = michal.displayLatestMessages;
            michal = zuuluu.hasData;
            michal = michal.bind(zuuluu)();
            golfie = _closure1_slot1;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu[entity];
            zuuluu = golfie.bind(tangon)(zuuluu);
            if(michal) { _fun00002_ip = 594; continue _fun00001 }
 581:
            michal = zuuluu.ready;
            michal = michal.end;
            _fun00002_ip = 606; continue _fun00001;
 594:
            zuuluu = zuuluu.displayLatestMessages;
            michal = zuuluu.time;
 606:
            var _closure2_slot12 = michal;
            michal = global;
            zuuluu = michal.Math;
            michal = zuuluu.ceil;
            golfie = _closure1_slot1;
            offset = _closure1_slot2;
            entity = offset[entity];
            entity = golfie.bind(tangon)(entity);
            entity = entity.renderLatestMessages;
            entity = entity.importTime;
            entity = michal.bind(zuuluu)(entity);
            var _closure2_slot13 = entity;
            entity = function(argFoo) { // Original name: renderTime
                option = argFoo;
                tangon = _closure1_slot7;
                zuuluu = _closure1_slot11;
                michal = {};
                entity = 'text-brand';
                michal['color'] = entity;
                entity = 1000;
                verify = option / entity;
                entity = global;
                golfie = entity.Math;
                oscard = golfie.round;
                offset = _closure2_slot12;
                report = _closure2_slot5;
                report = offset - report;
                option = option / report;
                report = 100;
                report = option * report;
                romeon = oscard.bind(golfie)(report);
                entity = entity.HermesInternal;
                golfie = entity.concat;
                kiloes = '';
                foxtra = 's (';
                yankee = '%)';
                backup = verify;
                entity = kiloes[golfie](backup, foxtra, romeon, yankee, offset);
                michal['children'] = entity;
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            var _closure2_slot14 = entity;
            entity = function(argFoo) { // Original name: renderTTi
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    oscard = argFoo;
                    tangon = _closure1_slot7;
                    zuuluu = _closure1_slot11;
                    michal = {};
                    entity = 'text-brand';
                    michal['color'] = entity;
                    entity = null;
                    report = entity == oscard;
                    golfie = '';
                    entity = golfie;
                    if(report) { _fun00004_ip = 72; continue _fun00003 }
 42:
                    report = 0;
                    report = oscard <= report;
                    entity = golfie;
                    if(report) { _fun00004_ip = 72; continue _fun00003 }
 54:
                    report = 1000;
                    oscard = oscard / report;
                    report = 's';
                    entity = oscard + report;
 72:
                    michal['children'] = entity;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                }
            };
            var _closure2_slot15 = entity;
            zuuluu = _closure1_slot7;
            michal = _closure1_slot5;
            entity = {};
            oscard = oscard.wrap;
            entity['style'] = oscard;
            golfie = _closure1_slot7;
            oscard = _closure1_slot0;
            report = 10;
            report = offset[report];
            report = oscard.bind(tangon)(report);
            oscard = report.FlashList;
            report = {};
            offset = function() { // Original name: ListHeaderComponent
                tangon = _closure1_slot8;
                zuuluu = _closure1_slot9;
                michal = {};
                result = _closure1_slot0;
                update = _closure1_slot2;
                entity = 11;
                report = update[entity];
                entity = undefined;
                report = result.bind(entity)(report);
                golfie = report.Stack;
                report = {};
                verify = 16;
                report['spacing'] = verify;
                option = {};
                option['padding'] = verify;
                report['style'] = option;
                romeon = _closure1_slot7;
                offset = 12;
                option = update[offset];
                option = result.bind(entity)(option);
                yankee = option.TableRowGroup;
                option = {};
                verify = 'Key Cold Start Times';
                option['title'] = verify;
                output = _closure1_slot7;
                foxtra = 13;
                verify = update[foxtra];
                verify = result.bind(entity)(verify);
                kiloes = verify.TableRow;
                backup = {};
                echoed = {};
                sequen = _closure1_slot11;
                source = {};
                vacuum = _closure2_slot14;
                ctrled = _closure2_slot6;
                vacuum = vacuum.bind(entity)(ctrled);
                ctrled = ['Native: '];
                ctrled[1] = vacuum;
                source['children'] = ctrled;
                ctrled = tangon.bind(entity)(sequen, source);
                source = new Array(8);
                source[0] = ctrled;
                ctrled = {};
                config = _closure2_slot14;
                vacuum = _closure2_slot13;
                config = config.bind(entity)(vacuum);
                vacuum = ['JS Imports: '];
                vacuum[1] = config;
                ctrled['children'] = vacuum;
                ctrled = tangon.bind(entity)(sequen, ctrled);
                source[1] = ctrled;
                ctrled = {};
                config = _closure2_slot14;
                vacuum = _closure2_slot7;
                config = config.bind(entity)(vacuum);
                vacuum = ['Mini Cache: '];
                vacuum[1] = config;
                ctrled['children'] = vacuum;
                ctrled = tangon.bind(entity)(sequen, ctrled);
                source[2] = ctrled;
                ctrled = {};
                config = _closure2_slot14;
                vacuum = _closure2_slot8;
                config = config.bind(entity)(vacuum);
                vacuum = ['Lazy Cache: '];
                vacuum[1] = config;
                ctrled['children'] = vacuum;
                ctrled = tangon.bind(entity)(sequen, ctrled);
                source[3] = ctrled;
                ctrled = {};
                config = _closure2_slot14;
                vacuum = _closure2_slot9;
                config = config.bind(entity)(vacuum);
                vacuum = ['Ready: '];
                vacuum[1] = config;
                ctrled['children'] = vacuum;
                ctrled = tangon.bind(entity)(sequen, ctrled);
                source[4] = ctrled;
                ctrled = {};
                config = _closure2_slot15;
                vacuum = _closure2_slot10;
                record = _closure2_slot5;
                vacuum = vacuum - record;
                config = config.bind(entity)(vacuum);
                vacuum = ['Cached Messages Render: '];
                vacuum[1] = config;
                ctrled['children'] = vacuum;
                ctrled = tangon.bind(entity)(sequen, ctrled);
                source[5] = ctrled;
                ctrled = {};
                config = _closure2_slot15;
                vacuum = _closure2_slot11;
                vacuum = vacuum - record;
                config = config.bind(entity)(vacuum);
                vacuum = ['Latest Messages Render: '];
                vacuum[1] = config;
                ctrled['children'] = vacuum;
                ctrled = tangon.bind(entity)(sequen, ctrled);
                source[6] = ctrled;
                ctrled = {};
                config = _closure2_slot15;
                vacuum = _closure2_slot12;
                vacuum = vacuum - record;
                config = config.bind(entity)(vacuum);
                vacuum = ['Full TTI: '];
                vacuum[1] = config;
                ctrled['children'] = vacuum;
                ctrled = tangon.bind(entity)(sequen, ctrled);
                source[7] = ctrled;
                echoed['children'] = source;
                echoed = tangon.bind(entity)(zuuluu, echoed);
                backup['label'] = echoed;
                backup = output.bind(entity)(kiloes, backup);
                option['children'] = backup;
                yankee = romeon.bind(entity)(yankee, option);
                option = new Array(4);
                option[0] = yankee;
                backup = _closure1_slot7;
                yankee = update[offset];
                yankee = result.bind(entity)(yankee);
                romeon = yankee.TableRowGroup;
                yankee = {};
                kiloes = 'Legend';
                yankee['title'] = kiloes;
                echoed = _closure1_slot7;
                kiloes = update[foxtra];
                kiloes = result.bind(entity)(kiloes);
                output = kiloes.TableRow;
                kiloes = {};
                source = {};
                ctrled = {};
                vacuum = ['☕', ' - Java / Kotlin'];
                ctrled['children'] = vacuum;
                vacuum = tangon.bind(entity)(sequen, ctrled);
                ctrled = new Array(6);
                ctrled[0] = vacuum;
                vacuum = {};
                config = ['🎨', ' - React render'];
                vacuum['children'] = config;
                vacuum = tangon.bind(entity)(sequen, vacuum);
                ctrled[1] = vacuum;
                vacuum = {};
                config = ['💾', ' - CacheStore'];
                vacuum['children'] = config;
                vacuum = tangon.bind(entity)(sequen, vacuum);
                ctrled[2] = vacuum;
                vacuum = {};
                config = ['🦥', ' - Slow Store Update / Handler'];
                vacuum['children'] = config;
                vacuum = tangon.bind(entity)(sequen, vacuum);
                ctrled[3] = vacuum;
                vacuum = {};
                config = ['🏃', ' - Startup Event'];
                vacuum['children'] = config;
                vacuum = tangon.bind(entity)(sequen, vacuum);
                ctrled[4] = vacuum;
                vacuum = {};
                config = ['🌐', ' - Socket Event'];
                vacuum['children'] = config;
                vacuum = tangon.bind(entity)(sequen, vacuum);
                ctrled[5] = vacuum;
                source['children'] = ctrled;
                source = tangon.bind(entity)(zuuluu, source);
                kiloes['label'] = source;
                kiloes = echoed.bind(entity)(output, kiloes);
                yankee['children'] = kiloes;
                yankee = backup.bind(entity)(romeon, yankee);
                option[1] = yankee;
                yankee = update[offset];
                yankee = result.bind(entity)(yankee);
                romeon = yankee.TableRowGroup;
                yankee = {};
                backup = 'Detailed Times';
                yankee['title'] = backup;
                echoed = _closure1_slot7;
                kiloes = 14;
                backup = update[kiloes];
                backup = result.bind(entity)(backup);
                output = backup.TableCheckboxRow;
                backup = {};
                source = 'Hide the Noise';
                backup['label'] = source;
                source = function() { // Original name: onPress
                    zuuluu = _closure2_slot2;
                    michal = undefined;
                    entity = function(argFoo) {
                        entity = argFoo;
                        entity = !entity;
                        return entity;
                    };
                    entity = zuuluu.bind(michal)(entity);
                    return entity;
                };
                backup['onPress'] = source;
                source = _closure2_slot1;
                backup['checked'] = source;
                output = echoed.bind(entity)(output, backup);
                backup = new Array(2);
                backup[0] = output;
                echoed = _closure1_slot7;
                kiloes = update[kiloes];
                kiloes = result.bind(entity)(kiloes);
                output = kiloes.TableCheckboxRow;
                kiloes = {};
                source = 'Hide paints';
                kiloes['label'] = source;
                source = function() { // Original name: onPress
                    zuuluu = _closure2_slot4;
                    michal = undefined;
                    entity = function(argFoo) {
                        entity = argFoo;
                        entity = !entity;
                        return entity;
                    };
                    entity = zuuluu.bind(michal)(entity);
                    return entity;
                };
                kiloes['onPress'] = source;
                source = _closure2_slot3;
                source = !source;
                kiloes['checked'] = source;
                kiloes = echoed.bind(entity)(output, kiloes);
                backup[1] = kiloes;
                yankee['children'] = backup;
                yankee = tangon.bind(entity)(romeon, yankee);
                option[2] = yankee;
                romeon = _closure1_slot7;
                offset = update[offset];
                offset = result.bind(entity)(offset);
                yankee = offset.TableRowGroup;
                offset = {'title': 'Share Timings', 'hasIcons': true};
                kiloes = _closure1_slot7;
                foxtra = update[foxtra];
                foxtra = result.bind(entity)(foxtra);
                backup = foxtra.TableRow;
                foxtra = {'icon': null, 'label': 'Copy timings to clipboard.', 'arrow': true};
                echoed = _closure1_slot7;
                output = 15;
                output = update[output];
                output = result.bind(entity)(output);
                result = output.ShareIcon;
                output = {};
                output = echoed.bind(entity)(result, output);
                foxtra['icon'] = output;
                sizing = function() { // Original name: onPress
                    zuuluu = _closure1_slot0;
                    option = _closure1_slot2;
                    michal = 16;
                    michal = option[michal];
                    oscard = undefined;
                    tangon = zuuluu.bind(oscard)(michal);
                    zuuluu = tangon.showShareActionSheet;
                    michal = {};
                    golfie = _closure1_slot1;
                    report = 8;
                    report = option[report];
                    report = golfie.bind(oscard)(report);
                    entity = _closure1_slot6;
                    entity = entity.TTIManager;
                    entity = entity.AppOpenedTimestamp;
                    entity = report.bind(oscard)(entity);
                    michal['message'] = entity;
                    entity = 'Startup Timing';
                    entity = zuuluu.bind(tangon)(michal, entity);
                    return entity;
                };
                foxtra['onPress'] = sizing;
                foxtra = kiloes.bind(entity)(backup, foxtra);
                offset['children'] = foxtra;
                offset = romeon.bind(entity)(yankee, offset);
                option[3] = offset;
                report['children'] = option;
                golfie = tangon.bind(entity)(golfie, report);
                report = new Array(2);
                report[0] = golfie;
                option = _closure1_slot7;
                golfie = _closure1_slot5;
                oscard = {};
                verify = _closure2_slot0;
                verify = verify.border;
                oscard['style'] = verify;
                oscard = option.bind(entity)(golfie, oscard);
                report[1] = oscard;
                michal['children'] = report;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            report['ListHeaderComponent'] = offset;
            report['data'] = verify;
            option = function(argFoo) { // Original name: renderItem
                entity = argFoo;
                entity = entity.item;
                tangon = _closure1_slot7;
                zuuluu = _closure1_slot11;
                michal = {};
                michal['children'] = entity;
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            report['renderItem'] = option;
            option = 20;
            report['estimatedItemSize'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();