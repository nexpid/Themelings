// app/modules/user_settings/DMSafetyConstants.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    options = argBar;
    zulu = argFred;
    verify = argPlugh;
    entity = global;
    oscar = entity.Object;
    report = oscar.defineProperty;
    tango = {};
    mike = true;
    tango['value'] = mike;
    mike = '__esModule';
    mike = report.bind(oscar)(zulu, mike, tango);
    oscar = {};
    romeo = 0;
    oscar['VIEW'] = romeo;
    mike = 'VIEW';
    oscar[romeo] = mike;
    golf = 1;
    oscar['DISMISS'] = golf;
    mike = 'DISMISS';
    oscar[golf] = mike;
    offset = 2;
    oscar['CHANGE_SETTING'] = offset;
    mike = 'CHANGE_SETTING';
    oscar[offset] = mike;
    report = {};
    report['DISABLED'] = romeo;
    foxtrot = 'DISABLED';
    report[romeo] = foxtrot;
    report['NON_FRIENDS'] = golf;
    yankee = 'NON_FRIENDS';
    report[golf] = yankee;
    report['FRIENDS_AND_NON_FRIENDS'] = offset;
    mike = 'FRIENDS_AND_NON_FRIENDS';
    report[offset] = mike;
    tango = {};
    tango['DISABLED'] = romeo;
    tango[romeo] = foxtrot;
    tango['NON_FRIENDS'] = golf;
    tango[golf] = yankee;
    tango['FRIENDS_AND_NON_FRIENDS'] = offset;
    tango[offset] = mike;
    yankee = entity.Map;
    entity = tango.DISABLED;
    offset = new Array(2);
    offset[0] = entity;
    mike = verify[romeo];
    entity = undefined;
    mike = options.bind(entity)(mike);
    mike = mike.DmSpamFilterV2;
    mike = mike.DISABLED;
    offset[1] = mike;
    mike = new Array(3);
    mike[0] = offset;
    foxtrot = tango.NON_FRIENDS;
    offset = new Array(2);
    offset[0] = foxtrot;
    foxtrot = verify[romeo];
    foxtrot = options.bind(entity)(foxtrot);
    foxtrot = foxtrot.DmSpamFilterV2;
    foxtrot = foxtrot.NON_FRIENDS;
    offset[1] = foxtrot;
    mike[1] = offset;
    foxtrot = tango.FRIENDS_AND_NON_FRIENDS;
    offset = new Array(2);
    offset[0] = foxtrot;
    romeo = verify[romeo];
    romeo = options.bind(entity)(romeo);
    romeo = romeo.DmSpamFilterV2;
    romeo = romeo.FRIENDS_AND_NON_FRIENDS;
    offset[1] = romeo;
    mike[2] = offset;
    offset = yankee.prototype;
    offset = Object.create(offset, {constructor: {value: yankee}});
    result = offset;
    output = mike;
    mike = new result[yankee](output, sizing);
    mike = mike instanceof Object ? mike : offset;
    golf = verify[golf];
    verify = options.bind(entity)(golf);
    options = verify.fileFinishedImporting;
    golf = 'modules/user_settings/DMSafetyConstants.tsx';
    golf = options.bind(verify)(golf);
    zulu['DMSafetyCoachmarkActions'] = oscar;
    zulu['DmSpamFilterTypes'] = report;
    zulu['ExplicitContentFilterTypes'] = tango;
    zulu['ExplicitContentFilterToDmSpamFilterV2'] = mike;
    return entity;
})();