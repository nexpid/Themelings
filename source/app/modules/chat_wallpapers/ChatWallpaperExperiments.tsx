// app/modules/chat_wallpapers/ChatWallpaperExperiments.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    verify = argBar;
    zuuluu = argFre;
    offset = argPlu;
    entity = global;
    oscard = entity.Object;
    report = oscard.defineProperty;
    michal = {};
    kiloes = true;
    michal['value'] = kiloes;
    entity = '__esModule';
    entity = report.bind(oscard)(zuuluu, entity, michal);
    entity = 0;
    michal = offset[entity];
    entity = undefined;
    michal = verify.bind(entity)(michal);
    foxtra = michal.CommonTriggerPoints;
    golfie = {};
    michal = 'context_menu';
    golfie['CONTEXT_MENU'] = michal;
    michal = 'toolbar';
    golfie['TOOLBAR'] = michal;
    michal = 1;
    report = offset[michal];
    yankee = verify.bind(entity)(report);
    oscard = yankee.createExperiment;
    report = {'id': '2025-03_dm_chat_wallpapers_setter', 'kind': 'user', 'label': 'DM Chat Wallpapers'};
    option = {};
    sizing = false;
    option['enabled'] = sizing;
    report['defaultConfig'] = option;
    option = foxtra.CONNECTION_OPEN;
    report['commonTriggerPoint'] = option;
    option = {'id': 1, 'label': 'Enables setting dm chat wallpapers in the context menu'};
    romeon = {};
    romeon['enabled'] = kiloes;
    backup = golfie.CONTEXT_MENU;
    romeon['entryPoint'] = backup;
    option['config'] = romeon;
    romeon = new Array(2);
    romeon[0] = option;
    backup = {'id': 2, 'label': 'Enables setting dm chat wallpapers in the toolbar'};
    option = 2;
    output = {};
    output['enabled'] = kiloes;
    result = golfie.TOOLBAR;
    output['entryPoint'] = result;
    backup['config'] = output;
    romeon[1] = backup;
    report['treatments'] = romeon;
    oscard = oscard.bind(yankee)(report);
    var _closure1_slot0 = oscard;
    report = offset[michal];
    romeon = verify.bind(entity)(report);
    yankee = romeon.createExperiment;
    report = {'id': '2025-03_dm_chat_wallpapers_viewer', 'kind': 'user', 'label': 'DM Chat Wallpapers Viewer'};
    backup = {};
    backup['enabled'] = sizing;
    report['defaultConfig'] = backup;
    backup = foxtra.CONNECTION_OPEN;
    report['commonTriggerPoint'] = backup;
    output = {'id': 1, 'label': 'Enables viewing dm chat wallpapers'};
    backup = {};
    backup['enabled'] = kiloes;
    output['config'] = backup;
    backup = new Array(1);
    backup[0] = output;
    report['treatments'] = backup;
    report = yankee.bind(romeon)(report);
    var _closure1_slot1 = report;
    michal = offset[michal];
    romeon = verify.bind(entity)(michal);
    yankee = romeon.createExperiment;
    michal = {'id': '2025-04_dm_chat_wallpapers_theming', 'kind': 'user', 'label': 'DM Chat Wallpapers Theming'};
    backup = {};
    backup['enabled'] = sizing;
    michal['defaultConfig'] = backup;
    foxtra = foxtra.CONNECTION_OPEN;
    michal['commonTriggerPoint'] = foxtra;
    backup = {'id': 1, 'label': 'Enables new theming customizations on DM chat wallpapers'};
    foxtra = {};
    foxtra['enabled'] = kiloes;
    backup['config'] = foxtra;
    foxtra = new Array(2);
    foxtra[0] = backup;
    backup = {'id': 2, 'label': 'Enables new theming customizations and light mode on DM chat wallpapers'};
    kiloes = {'enabled': true, 'lightMode': true};
    backup['config'] = kiloes;
    foxtra[1] = backup;
    michal['treatments'] = foxtra;
    michal = yankee.bind(romeon)(michal);
    option = offset[option];
    offset = verify.bind(entity)(option);
    verify = offset.fileFinishedImporting;
    option = 'modules/chat_wallpapers/ChatWallpaperExperiments.tsx';
    option = verify.bind(offset)(option);
    zuuluu['ChatWallpaperEntryPoint'] = golfie;
    zuuluu['ChatWallpapersSetterExperiment'] = oscard;
    oscard = function(argFoo) { // Original name: getChatWallpaperSetterExperimentConfig
        entity = argFoo;
        tangon = entity.location;
        zuuluu = _closure1_slot0;
        michal = zuuluu.getCurrentConfig;
        entity = {};
        entity['location'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    zuuluu['getChatWallpaperSetterExperimentConfig'] = oscard;
    oscard = function(argFoo) { // Original name: useChatWallpaperSetterExperimentConfig
        entity = argFoo;
        tangon = entity.location;
        zuuluu = _closure1_slot0;
        michal = zuuluu.useExperiment;
        entity = {};
        entity['location'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    zuuluu['useChatWallpaperSetterExperimentConfig'] = oscard;
    zuuluu['ChatWallpaperViewerExperiment'] = report;
    report = function(argFoo) { // Original name: isChatWallpaperViewerExperimentEnabled
        entity = argFoo;
        tangon = entity.location;
        zuuluu = _closure1_slot1;
        michal = zuuluu.getCurrentConfig;
        entity = {};
        entity['location'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        entity = entity.enabled;
        return entity;
    };
    zuuluu['isChatWallpaperViewerExperimentEnabled'] = report;
    tangon = function(argFoo) { // Original name: useIsChatWallpaperViewerExperimentEnabled
        entity = argFoo;
        tangon = entity.location;
        zuuluu = _closure1_slot1;
        michal = zuuluu.useExperiment;
        entity = {};
        entity['location'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        entity = entity.enabled;
        return entity;
    };
    zuuluu['useIsChatWallpaperViewerExperimentEnabled'] = tangon;
    zuuluu['ChatWallpaperThemingExperiment'] = michal;
    return entity;
})();