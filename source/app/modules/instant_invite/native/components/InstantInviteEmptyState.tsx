// app/modules/instant_invite/native/components/InstantInviteEmptyState.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    romeo = 1;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    foxtrot = 4;
    tango = oscar[foxtrot];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 16;
    verify['padding'] = offset;
    tango['container'] = verify;
    verify = {'padding': 0, 'marginBottom': 16};
    tango['emptyStateContainer'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tango['emptyStateArt'] = verify;
    verify = {};
    verify['marginBottom'] = foxtrot;
    tango['emptyStateTitle'] = verify;
    verify = {'maxWidth': '100%', 'flexDirection': 'row', 'marginBottom': 8, 'gap': 8};
    tango['linkContainer'] = verify;
    verify = {};
    verify['flexShrink'] = romeo;
    tango['inviteInput'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tango['expireCaption'] = verify;
    verify = {'width': 48, 'height': 48, 'justifyContent': 'center', 'alignItems': 'center'};
    offset = 5;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.xs;
    verify['borderRadius'] = offset;
    tango['settingsButton'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/instant_invite/native/components/InstantInviteEmptyState.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        _fun86392: for(var _fun86392_ip = 0; ; ) switch(_fun86392_ip) {
 0:
            entity = argFoo;
            foxtrot = entity.link;
            offset = entity.onCopy;
            verify = entity.onShare;
            output = entity.onPressSettings;
            entity = _closure1_slot7;
            tango = undefined;
            romeo = entity.bind(tango)();
            source = _closure1_slot0;
            result = _closure1_slot2;
            entity = 6;
            entity = result[entity];
            report = source.bind(tango)(entity);
            zulu = report.useStateFromStores;
            entity = _closure1_slot4;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure1_slot4;
                entity = mike.getInviteSettings;
                entity = entity.bind(mike)();
                return entity;
            };
            entity = zulu.bind(report)(mike, entity);
            var _closure2_slot0 = entity;
            zulu = _closure1_slot6;
            mike = _closure1_slot3;
            entity = {};
            report = romeo.container;
            entity['style'] = report;
            sizing = _closure1_slot5;
            kilo = _closure1_slot1;
            report = 7;
            report = result[report];
            oscar = kilo.bind(tango)(report);
            report = {};
            golf = romeo.emptyStateContainer;
            report['containerStyle'] = golf;
            golf = romeo.emptyStateArt;
            report['imageStyle'] = golf;
            golf = romeo.emptyStateTitle;
            report['titleStyle'] = golf;
            golf = 8;
            golf = result[golf];
            golf = kilo.bind(tango)(golf);
            report['source'] = golf;
            backup = 9;
            golf = result[backup];
            golf = source.bind(tango)(golf);
            update = golf.intl;
            echo = update.string;
            golf = result[backup];
            golf = source.bind(tango)(golf);
            golf = golf.t;
            golf = golf.tQc0l5;
            golf = echo.bind(update)(golf);
            report['title'] = golf;
            golf = result[backup];
            golf = source.bind(tango)(golf);
            update = golf.intl;
            echo = update.string;
            golf = result[backup];
            golf = source.bind(tango)(golf);
            golf = golf.t;
            golf = golf.DXgdcH;
            golf = echo.bind(update)(golf);
            report['body'] = golf;
            oscar = sizing.bind(tango)(oscar, report);
            report = new Array(4);
            report[0] = oscar;
            oscar = {};
            golf = romeo.linkContainer;
            oscar['style'] = golf;
            golf = 10;
            golf = result[golf];
            kilo = kilo.bind(tango)(golf);
            golf = {'accessibilityRole': 'button', 'onPress': null, 'editable': false, 'value': null, 'style': null, 'forceAccessibleContainer': true};
            result = 'button';
            golf['onPress'] = offset;
            offset = null;
            echo = offset != foxtrot;
            offset = '';
            if(!echo) { _fun86392_ip = 363; continue _fun86392 }
 360:
            offset = foxtrot;
 363:
            golf['value'] = offset;
            offset = romeo.inviteInput;
            golf['style'] = offset;
            foxtrot = _closure1_slot0;
            offset = _closure1_slot2;
            echo = 11;
            echo = offset[echo];
            echo = foxtrot.bind(tango)(echo);
            echo = echo.ClearButtonVisibility;
            echo = echo.NEVER;
            golf['clearButtonVisibility'] = echo;
            kilo = sizing.bind(tango)(kilo, golf);
            golf = new Array(2);
            golf[0] = kilo;
            options = _closure1_slot5;
            kilo = 12;
            kilo = offset[kilo];
            kilo = foxtrot.bind(tango)(kilo);
            sizing = kilo.PressableOpacity;
            kilo = {};
            echo = offset[backup];
            echo = foxtrot.bind(tango)(echo);
            source = echo.intl;
            update = source.string;
            echo = offset[backup];
            echo = foxtrot.bind(tango)(echo);
            echo = echo.t;
            echo = echo.3D5yo6;
            echo = update.bind(source)(echo);
            kilo['accessibilityLabel'] = echo;
            kilo['accessibilityRole'] = result;
            kilo['onPress'] = output;
            output = romeo.settingsButton;
            kilo['style'] = output;
            output = 13;
            output = offset[output];
            output = foxtrot.bind(tango)(output);
            result = output.SettingsIcon;
            output = {};
            output = options.bind(tango)(result, output);
            kilo['children'] = output;
            kilo = options.bind(tango)(sizing, kilo);
            golf[1] = kilo;
            oscar['children'] = golf;
            oscar = zulu.bind(tango)(mike, oscar);
            report[1] = oscar;
            oscar = 14;
            oscar = offset[oscar];
            oscar = foxtrot.bind(tango)(oscar);
            golf = oscar.Text;
            oscar = {'style': null, 'variant': 'text-xs/medium', 'color': 'text-muted'};
            romeo = romeo.expireCaption;
            oscar['style'] = romeo;
            yankee = function() {
                _fun86394: for(var _fun86394_ip = 0; ; ) switch(_fun86394_ip) {
 0:
                    mike = _closure2_slot0;
                    entity = null;
                    if(!(entity != mike)) { _fun86394_ip = 269; continue _fun86394 }
 18:
                    golf = _closure1_slot1;
                    tango = _closure1_slot2;
                    offset = 15;
                    oscar = tango[offset];
                    tango = undefined;
                    oscar = golf.bind(tango)(oscar);
                    options = oscar.getMaxAgeOptions;
                    golf = options.find;
                    oscar = function(argFoo) {
                        entity = argFoo;
                        mike = entity.value;
                        entity = _closure2_slot0;
                        entity = entity.maxAge;
                        entity = mike === entity;
                        return entity;
                    };
                    options = golf.bind(options)(oscar);
                    verify = entity != options;
                    oscar = '';
                    golf = oscar;
                    if(!verify) { _fun86394_ip = 86; continue _fun86394 }
 80:
                    golf = options.descriptiveLabel;
 86:
                    verify = _closure1_slot1;
                    options = _closure1_slot2;
                    options = options[offset];
                    options = verify.bind(tango)(options);
                    verify = options.getMaxUsesOptions;
                    options = verify.find;
                    report = function(argFoo) {
                        entity = argFoo;
                        mike = entity.value;
                        entity = _closure2_slot0;
                        entity = entity.maxUses;
                        entity = mike === entity;
                        return entity;
                    };
                    report = options.bind(verify)(report);
                    options = entity != report;
                    if(!options) { _fun86394_ip = 139; continue _fun86394 }
 133:
                    oscar = report.descriptiveLabel;
 139:
                    zulu = _closure2_slot0;
                    report = zulu.maxAge;
                    zulu = 0;
                    if(!(zulu !== report)) { _fun86394_ip = 188; continue _fun86394 }
 155:
                    report = _closure1_slot0;
                    options = _closure1_slot2;
                    zulu = 9;
                    zulu = options[zulu];
                    zulu = report.bind(tango)(zulu);
                    zulu = zulu.t;
                    report = zulu.dqPWMD;
                    _fun86394_ip = 219; continue _fun86394;
 188:
                    options = _closure1_slot0;
                    verify = _closure1_slot2;
                    zulu = 9;
                    zulu = verify[zulu];
                    zulu = options.bind(tango)(zulu);
                    zulu = zulu.t;
                    report = zulu.99ISmp;
 219:
                    zulu = _closure1_slot0;
                    options = _closure1_slot2;
                    mike = 9;
                    mike = options[mike];
                    mike = zulu.bind(tango)(mike);
                    tango = mike.intl;
                    zulu = tango.format;
                    mike = {};
                    mike['maxAge'] = golf;
                    mike['maxUses'] = oscar;
                    mike = zulu.bind(tango)(report, mike);
                    return mike;
 269:
                    return entity;
                }
            };
            yankee = yankee.bind(tango)();
            oscar['children'] = yankee;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            oscar = 16;
            oscar = offset[oscar];
            oscar = foxtrot.bind(tango)(oscar);
            golf = oscar.Button;
            oscar = {};
            yankee = offset[backup];
            yankee = foxtrot.bind(tango)(yankee);
            romeo = yankee.intl;
            yankee = romeo.string;
            offset = offset[backup];
            offset = foxtrot.bind(tango)(offset);
            offset = offset.t;
            offset = offset.Ej3B3d;
            offset = yankee.bind(romeo)(offset);
            oscar['text'] = offset;
            oscar['onPress'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[3] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();