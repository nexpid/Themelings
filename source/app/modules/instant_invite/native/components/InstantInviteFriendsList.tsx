// app/modules/instant_invite/native/components/InstantInviteFriendsList.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: FriendsEmptyComponent
        entity = _closure1_slot9;
        tango = undefined;
        foxtrot = entity.bind(tango)();
        zulu = _closure1_slot8;
        mike = _closure1_slot7;
        entity = {};
        golf = _closure1_slot6;
        kilo = _closure1_slot0;
        sizing = _closure1_slot2;
        report = 8;
        report = sizing[report];
        report = kilo.bind(tango)(report);
        oscar = report.ThemedEmptyState;
        report = {};
        romeo = 9;
        options = sizing[romeo];
        options = kilo.bind(tango)(options);
        yankee = options.intl;
        offset = yankee.string;
        options = sizing[romeo];
        options = kilo.bind(tango)(options);
        options = options.t;
        options = options.dz4UlJ;
        options = offset.bind(yankee)(options);
        report['title'] = options;
        options = sizing[romeo];
        options = kilo.bind(tango)(options);
        yankee = options.intl;
        offset = yankee.string;
        options = sizing[romeo];
        options = kilo.bind(tango)(options);
        options = options.t;
        options = options.MBQBIy;
        options = offset.bind(yankee)(options);
        report['body'] = options;
        options = foxtrot.emptyTitle;
        report['titleStyle'] = options;
        options = foxtrot.emptyBody;
        report['bodyStyle'] = options;
        options = {'marginTop': 40, 'marginBottom': 16};
        report['imageStyle'] = options;
        offset = _closure1_slot1;
        options = 10;
        yankee = sizing[options];
        yankee = offset.bind(tango)(yankee);
        report['darkSource'] = yankee;
        options = sizing[options];
        options = offset.bind(tango)(options);
        report['lightSource'] = options;
        oscar = golf.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        options = _closure1_slot6;
        oscar = 11;
        oscar = sizing[oscar];
        oscar = kilo.bind(tango)(oscar);
        golf = oscar.PressableOpacity;
        oscar = {};
        offset = function() { // Original name: onPress
            _fun86476: for(var _fun86476_ip = 0; ; ) switch(_fun86476_ip) {
 0:
                report = _closure1_slot1;
                tango = _closure1_slot2;
                entity = 12;
                zulu = tango[entity];
                entity = undefined;
                report = report.bind(entity)(zulu);
                zulu = report.hideActionSheet;
                zulu = zulu.bind(report)();
                zulu = _closure1_slot0;
                mike = 13;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.getRootNavigationRef;
                report = mike.bind(zulu)();
                mike = null;
                if(!(mike != report)) { _fun86476_ip = 114; continue _fun86476 }
 67:
                tango = report.navigate;
                zulu = {};
                mike = 'add-friends';
                zulu['screen'] = mike;
                mike = {};
                oscar = 'Instant Invite Empty State';
                mike['sourcePage'] = oscar;
                zulu['params'] = mike;
                mike = 'friends';
                mike = tango.bind(report)(mike, zulu);
 114:
                return entity;
            }
        };
        oscar['onPress'] = offset;
        offset = 'link';
        oscar['accessibilityRole'] = offset;
        offset = sizing[romeo];
        offset = kilo.bind(tango)(offset);
        backup = offset.intl;
        yankee = backup.string;
        offset = sizing[romeo];
        offset = kilo.bind(tango)(offset);
        offset = offset.t;
        offset = offset.a7FVbG;
        offset = yankee.bind(backup)(offset);
        oscar['accessibilityLabel'] = offset;
        offset = {'top': 8, 'left': 8, 'bottom': 8, 'right': 8};
        oscar['hitSlop'] = offset;
        yankee = _closure1_slot6;
        verify = 14;
        verify = sizing[verify];
        verify = kilo.bind(tango)(verify);
        offset = verify.Text;
        verify = {'style': null, 'variant': 'text-sm/semibold', 'color': 'text-link'};
        backup = foxtrot.goToFriendsLink;
        foxtrot = new Array(1);
        foxtrot[0] = backup;
        verify['style'] = foxtrot;
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.string;
        romeo = sizing[romeo];
        romeo = kilo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.a7FVbG;
        romeo = foxtrot.bind(backup)(romeo);
        verify['children'] = romeo;
        verify = yankee.bind(tango)(offset, verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.FlatList;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    foxtrot = tango.Fonts;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    backup = 6;
    offset = oscar[backup];
    output = romeo.bind(entity)(offset);
    sizing = foxtrot.DISPLAY_EXTRABOLD;
    offset = 7;
    yankee = oscar[offset];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    kilo = yankee.HEADER_PRIMARY;
    yankee = 18;
    echo = output.bind(entity)(sizing, kilo, yankee);
    update = verify;
    yankee = copyDataProperties(update, echo);
    kilo = 'none';
    yankee = 'textTransform';
    verify[yankee] = kilo;
    kilo = 24;
    yankee = 'lineHeight';
    verify[yankee] = kilo;
    tango['emptyTitle'] = verify;
    verify = {};
    backup = oscar[backup];
    backup = romeo.bind(entity)(backup);
    foxtrot = foxtrot.PRIMARY_MEDIUM;
    offset = oscar[offset];
    offset = romeo.bind(entity)(offset);
    offset = offset.colors;
    romeo = offset.HEADER_SECONDARY;
    offset = 16;
    echo = backup.bind(entity)(foxtrot, romeo, offset);
    update = verify;
    offset = copyDataProperties(update, echo);
    offset = 20;
    verify[yankee] = offset;
    yankee = '600';
    offset = 'fontWeight';
    verify[offset] = yankee;
    tango['emptyBody'] = verify;
    verify = {};
    offset = 'center';
    verify['textAlign'] = offset;
    tango['goToFriendsLink'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = function(argFoo) { // Original name: keyExtractor
        entity = argFoo;
        entity = entity.item;
        entity = entity.id;
        return entity;
    };
    var _closure1_slot10 = tango;
    tango = 19;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/instant_invite/native/components/InstantInviteFriendsList.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: InstantInviteFriendsList
        _fun86478: for(var _fun86478_ip = 0; ; ) switch(_fun86478_ip) {
 0:
            entity = argFoo;
            zulu = entity.code;
            var _closure2_slot0 = zulu;
            offset = entity.onPressAvatar;
            var _closure2_slot1 = offset;
            verify = entity.onInviteSent;
            var _closure2_slot2 = verify;
            oscar = entity.data;
            var _closure2_slot3 = oscar;
            entity = entity.inActionSheet;
            options = _closure1_slot3;
            golf = options.useCallback;
            tango = new Array(4);
            tango[0] = offset;
            tango[1] = verify;
            tango[2] = zulu;
            zulu = oscar.length;
            tango[3] = zulu;
            zulu = function(argFoo) {
                entity = argFoo;
                oscar = entity.item;
                options = entity.index;
                tango = _closure1_slot6;
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 15;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                report = 0;
                report = report === options;
                entity['start'] = report;
                golf = _closure2_slot3;
                verify = golf.length;
                golf = 1;
                golf = verify - golf;
                golf = options === golf;
                entity['end'] = golf;
                entity['row'] = oscar;
                oscar = _closure2_slot1;
                entity['onPressAvatar'] = oscar;
                oscar = _closure2_slot2;
                entity['onInviteSent'] = oscar;
                report = _closure2_slot0;
                entity['code'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            golf = golf.bind(options)(zulu, tango);
            options = _closure1_slot1;
            verify = _closure1_slot2;
            yankee = 16;
            zulu = verify[yankee];
            tango = undefined;
            zulu = options.bind(tango)(zulu);
            zulu = zulu.bind(tango)();
            offset = zulu.bottom;
            options = _closure1_slot0;
            zulu = 17;
            zulu = verify[zulu];
            verify = options.bind(tango)(zulu);
            options = verify.useStateFromStores;
            romeo = _closure1_slot5;
            zulu = new Array(1);
            zulu[0] = romeo;
            mike = function() {
                entity = _closure1_slot5;
                entity = entity.keyboardHeight;
                return entity;
            };
            foxtrot = options.bind(verify)(zulu, mike);
            if(entity) { _fun86478_ip = 185; continue _fun86478 }
 179:
            zulu = _closure1_slot4;
            _fun86478_ip = 211; continue _fun86478;
 185:
            mike = _closure1_slot0;
            options = _closure1_slot2;
            entity = 18;
            entity = options[entity];
            entity = mike.bind(tango)(entity);
            zulu = entity.BottomSheetFlatList;
 211:
            mike = _closure1_slot6;
            entity = {};
            options = {};
            romeo = 0;
            verify = yankee;
            if(!(romeo === foxtrot)) { _fun86478_ip = 232; continue _fun86478 }
 228:
            verify = offset + yankee;
 232:
            options['paddingBottom'] = verify;
            verify = 12;
            options['paddingHorizontal'] = verify;
            entity['contentContainerStyle'] = options;
            options = false;
            entity['bounces'] = options;
            entity['renderItem'] = golf;
            entity['data'] = oscar;
            oscar = _closure1_slot10;
            entity['keyExtractor'] = oscar;
            oscar = 'always';
            entity['keyboardShouldPersistTaps'] = oscar;
            report = _closure1_slot11;
            entity['ListEmptyComponent'] = report;
            entity = mike.bind(tango)(zulu, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();