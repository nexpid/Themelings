// app/modules/instant_invite/native/components/InstantInviteFriendsList.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: FriendsEmptyComponent
        entity = _closure1_slot8;
        tangon = undefined;
        foxtra = entity.bind(tangon)();
        zuuluu = _closure1_slot7;
        michal = _closure1_slot6;
        entity = {};
        golfie = _closure1_slot5;
        kiloes = _closure1_slot0;
        sizing = _closure1_slot2;
        report = 7;
        report = sizing[report];
        report = kiloes.bind(tangon)(report);
        oscard = report.ThemedEmptyState;
        report = {};
        romeon = 8;
        option = sizing[romeon];
        option = kiloes.bind(tangon)(option);
        yankee = option.intl;
        offset = yankee.string;
        option = sizing[romeon];
        option = kiloes.bind(tangon)(option);
        option = option.t;
        option = option.dz4UlJ;
        option = offset.bind(yankee)(option);
        report['title'] = option;
        option = sizing[romeon];
        option = kiloes.bind(tangon)(option);
        yankee = option.intl;
        offset = yankee.string;
        option = sizing[romeon];
        option = kiloes.bind(tangon)(option);
        option = option.t;
        option = option.MBQBIy;
        option = offset.bind(yankee)(option);
        report['body'] = option;
        option = foxtra.emptyTitle;
        report['titleStyle'] = option;
        option = foxtra.emptyBody;
        report['bodyStyle'] = option;
        option = {'marginTop': 40, 'marginBottom': 16};
        report['imageStyle'] = option;
        offset = _closure1_slot1;
        option = 9;
        yankee = sizing[option];
        yankee = offset.bind(tangon)(yankee);
        report['darkSource'] = yankee;
        option = sizing[option];
        option = offset.bind(tangon)(option);
        report['lightSource'] = option;
        oscard = golfie.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        option = _closure1_slot5;
        oscard = 10;
        oscard = sizing[oscard];
        oscard = kiloes.bind(tangon)(oscard);
        golfie = oscard.PressableOpacity;
        oscard = {};
        offset = function() { // Original name: onPress
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                report = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 11;
                zuuluu = tangon[entity];
                entity = undefined;
                report = report.bind(entity)(zuuluu);
                zuuluu = report.hideActionSheet;
                zuuluu = zuuluu.bind(report)();
                zuuluu = _closure1_slot0;
                michal = 12;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.getRootNavigationRef;
                report = michal.bind(zuuluu)();
                michal = null;
                if(!(michal != report)) { _fun00002_ip = 114; continue _fun00001 }
 67:
                tangon = report.navigate;
                zuuluu = {};
                michal = 'add-friends';
                zuuluu['screen'] = michal;
                michal = {};
                oscard = 'Instant Invite Empty State';
                michal['sourcePage'] = oscard;
                zuuluu['params'] = michal;
                michal = 'friends';
                michal = tangon.bind(report)(michal, zuuluu);
 114:
                return entity;
            }
        };
        oscard['onPress'] = offset;
        offset = 'link';
        oscard['accessibilityRole'] = offset;
        offset = sizing[romeon];
        offset = kiloes.bind(tangon)(offset);
        backup = offset.intl;
        yankee = backup.string;
        offset = sizing[romeon];
        offset = kiloes.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.a7FVbG;
        offset = yankee.bind(backup)(offset);
        oscard['accessibilityLabel'] = offset;
        offset = {'top': 8, 'left': 8, 'bottom': 8, 'right': 8};
        oscard['hitSlop'] = offset;
        yankee = _closure1_slot5;
        verify = 13;
        verify = sizing[verify];
        verify = kiloes.bind(tangon)(verify);
        offset = verify.Text;
        verify = {'style': null, 'variant': 'text-sm/semibold', 'color': 'text-link'};
        backup = foxtra.goToFriendsLink;
        foxtra = new Array(1);
        foxtra[0] = backup;
        verify['style'] = foxtra;
        foxtra = sizing[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = sizing[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.a7FVbG;
        romeon = foxtra.bind(backup)(romeon);
        verify['children'] = romeon;
        verify = yankee.bind(tangon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.FlatList;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    foxtra = tangon.Fonts;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    golfie = tangon.Fragment;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    backup = 5;
    offset = oscard[backup];
    output = romeon.bind(entity)(offset);
    sizing = foxtra.DISPLAY_EXTRABOLD;
    offset = 6;
    yankee = oscard[offset];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    kiloes = yankee.HEADER_PRIMARY;
    yankee = 18;
    echoed = output.bind(entity)(sizing, kiloes, yankee);
    update = verify;
    yankee = copyDataProperties(update, echoed);
    kiloes = 'none';
    yankee = 'textTransform';
    verify[yankee] = kiloes;
    kiloes = 24;
    yankee = 'lineHeight';
    verify[yankee] = kiloes;
    tangon['emptyTitle'] = verify;
    verify = {};
    backup = oscard[backup];
    backup = romeon.bind(entity)(backup);
    foxtra = foxtra.PRIMARY_MEDIUM;
    offset = oscard[offset];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    romeon = offset.HEADER_SECONDARY;
    offset = 16;
    echoed = backup.bind(entity)(foxtra, romeon, offset);
    update = verify;
    offset = copyDataProperties(update, echoed);
    offset = 20;
    verify[yankee] = offset;
    yankee = '600';
    offset = 'fontWeight';
    verify[offset] = yankee;
    tangon['emptyBody'] = verify;
    verify = {};
    offset = 'center';
    verify['textAlign'] = offset;
    tangon['goToFriendsLink'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = function(argFoo) { // Original name: keyExtractor
        entity = argFoo;
        entity = entity.item;
        entity = entity.id;
        return entity;
    };
    var _closure1_slot9 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/instant_invite/native/components/InstantInviteFriendsList.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: InstantInviteFriendsList
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            option = entity.code;
            var _closure2_slot0 = option;
            offset = entity.onPressAvatar;
            var _closure2_slot1 = offset;
            verify = entity.onInviteSent;
            var _closure2_slot2 = verify;
            oscard = entity.data;
            var _closure2_slot3 = oscard;
            entity = entity.inActionSheet;
            golfie = _closure1_slot3;
            tangon = golfie.useCallback;
            zuuluu = new Array(4);
            zuuluu[0] = offset;
            zuuluu[1] = verify;
            zuuluu[2] = option;
            option = oscard.length;
            zuuluu[3] = option;
            michal = function(argFoo) {
                entity = argFoo;
                oscard = entity.item;
                option = entity.index;
                tangon = _closure1_slot5;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 14;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                report = 0;
                report = report === option;
                entity['start'] = report;
                golfie = _closure2_slot3;
                verify = golfie.length;
                golfie = 1;
                golfie = verify - golfie;
                golfie = option === golfie;
                entity['end'] = golfie;
                entity['row'] = oscard;
                oscard = _closure2_slot1;
                entity['onPressAvatar'] = oscard;
                oscard = _closure2_slot2;
                entity['onInviteSent'] = oscard;
                report = _closure2_slot0;
                entity['code'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            golfie = tangon.bind(golfie)(michal, zuuluu);
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            michal = 15;
            michal = tangon[michal];
            tangon = undefined;
            michal = zuuluu.bind(tangon)(michal);
            michal = michal.bind(tangon)();
            romeon = michal.insets;
            if(entity) { _fun00004_ip = 140; continue _fun00003 }
 134:
            zuuluu = _closure1_slot4;
            _fun00004_ip = 166; continue _fun00003;
 140:
            michal = _closure1_slot0;
            option = _closure1_slot2;
            entity = 16;
            entity = option[entity];
            entity = michal.bind(tangon)(entity);
            zuuluu = entity.BottomSheetFlatList;
 166:
            michal = _closure1_slot5;
            entity = {};
            option = {};
            offset = _closure1_slot1;
            yankee = _closure1_slot2;
            verify = 6;
            foxtra = yankee[verify];
            foxtra = offset.bind(tangon)(foxtra);
            foxtra = foxtra.spacing;
            foxtra = foxtra.PX_16;
            romeon = romeon.bottom;
            romeon = foxtra + romeon;
            option['paddingBottom'] = romeon;
            verify = yankee[verify];
            verify = offset.bind(tangon)(verify);
            verify = verify.spacing;
            verify = verify.PX_12;
            option['paddingHorizontal'] = verify;
            entity['contentContainerStyle'] = option;
            option = false;
            entity['bounces'] = option;
            entity['renderItem'] = golfie;
            entity['data'] = oscard;
            oscard = _closure1_slot9;
            entity['keyExtractor'] = oscard;
            oscard = 'always';
            entity['keyboardShouldPersistTaps'] = oscard;
            report = _closure1_slot10;
            entity['ListEmptyComponent'] = report;
            entity = michal.bind(tangon)(zuuluu, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();