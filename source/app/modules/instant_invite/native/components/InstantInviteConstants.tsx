// app/modules/instant_invite/native/components/InstantInviteConstants.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
        golfie = argBar;
        backup = argBaz;
        zuuluu = argFre;
        option = argPlu;
        var _closure1_slot0 = golfie;
        var _closure1_slot1 = backup;
        var _closure1_slot2 = option;
        kiloes = global;
        report = kiloes.Object;
        tangon = report.defineProperty;
        michal = {};
        output = true;
        michal['value'] = output;
        entity = '__esModule';
        entity = tangon.bind(report)(zuuluu, entity, michal);
        michal = 0;
        tangon = option[michal];
        entity = undefined;
        tangon = golfie.bind(entity)(tangon);
        tangon = tangon.Linking;
        var _closure1_slot3 = tangon;
        oscard = 1;
        tangon = option[oscard];
        tangon = golfie.bind(entity)(tangon);
        yankee = tangon.SHARE_APPS_KEY;
        var _closure1_slot4 = yankee;
        tangon = tangon.SHARE_URLS;
        var _closure1_slot5 = tangon;
        verify = 2;
        tangon = option[verify];
        tangon = golfie.bind(entity)(tangon);
        report = tangon.InviteOptionsType;
        var _closure1_slot6 = report;
        tangon = tangon.SendTypes;
        var _closure1_slot7 = tangon;
        report = {};
        report['SHARE'] = michal;
        tangon = 'SHARE';
        report[michal] = tangon;
        report['COPY'] = oscard;
        tangon = 'COPY';
        report[oscard] = tangon;
        report['MESSAGES'] = verify;
        tangon = 'MESSAGES';
        report[verify] = tangon;
        echoed = 3;
        report['MAIL'] = echoed;
        tangon = 'MAIL';
        report[echoed] = tangon;
        result = 4;
        report['FB_MESSENGER'] = result;
        tangon = 'FB_MESSENGER';
        report[result] = tangon;
        tangon = 5;
        report['GMAIL'] = tangon;
        verify = 'GMAIL';
        report[tangon] = verify;
        romeon = 6;
        report['TELEGRAM'] = romeon;
        verify = 'TELEGRAM';
        report[romeon] = verify;
        romeon = 7;
        report['TWITTER'] = romeon;
        verify = 'TWITTER';
        report[romeon] = verify;
        sizing = 8;
        report['WHATSAPP'] = sizing;
        verify = 'WHATSAPP';
        report[sizing] = verify;
        foxtra = 9;
        report['LINE'] = foxtra;
        verify = 'LINE';
        report[foxtra] = verify;
        verify = {};
        update = report.SHARE;
        verify['type'] = update;
        echoed = option[echoed];
        echoed = backup.bind(entity)(echoed);
        verify['icon'] = echoed;
        update = kiloes.Promise;
        echoed = update.resolve;
        echoed = echoed.bind(update)(output);
        verify['isAvailable'] = echoed;
        result = option[result];
        result = backup.bind(entity)(result);
        verify['IconComponent'] = result;
        tangon = option[tangon];
        tangon = backup.bind(entity)(tangon);
        tangon = tangon.unsafe_rawColors;
        tangon = tangon.BRAND_500;
        verify['backgroundColor'] = tangon;
        tangon = function() { // Original name: getLabel
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 6;
            michal = oscard[entity];
            tangon = undefined;
            michal = report.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.wPadMT;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        verify['getLabel'] = tangon;
        tangon = function(argFoo) { // Original name: onPress
            entity = argFoo;
            offset = entity.channel;
            report = entity.code;
            verify = entity.message;
            option = entity.location;
            golfie = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 7;
            michal = michal[entity];
            entity = undefined;
            michal = golfie.bind(entity)(michal);
            entity = michal.handleOpenShareSheet;
            romeon = michal;
            yankee = report;
            entity = romeon[entity](yankee, offset, verify, option, golfie);
            return entity;
        };
        verify['onPress'] = tangon;
        tangon = new Array(10);
        tangon[0] = verify;
        verify = {};
        result = report.COPY;
        verify['type'] = result;
        sizing = option[sizing];
        sizing = backup.bind(entity)(sizing);
        verify['icon'] = sizing;
        sizing = kiloes.Promise;
        kiloes = sizing.resolve;
        kiloes = kiloes.bind(sizing)(output);
        verify['isAvailable'] = kiloes;
        foxtra = option[foxtra];
        foxtra = backup.bind(entity)(foxtra);
        verify['IconComponent'] = foxtra;
        foxtra = function() { // Original name: getLabel
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 6;
            michal = oscard[entity];
            tangon = undefined;
            michal = report.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.WqhZsr;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        verify['getLabel'] = foxtra;
        foxtra = function(argFoo) { // Original name: onPress
            entity = argFoo;
            report = entity.channel;
            tangon = entity.code;
            zuuluu = entity.location;
            oscard = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 7;
            michal = michal[entity];
            entity = undefined;
            michal = oscard.bind(entity)(michal);
            entity = michal.handleCopy;
            entity = entity.bind(michal)(tangon, report, zuuluu);
            return entity;
        };
        verify['onPress'] = foxtra;
        tangon[1] = verify;
        verify = {};
        foxtra = report.MESSAGES;
        verify['type'] = foxtra;
        kiloes = 10;
        foxtra = option[kiloes];
        sizing = golfie.bind(entity)(foxtra);
        foxtra = sizing.isIOS;
        sizing = foxtra.bind(sizing)();
        foxtra = undefined;
        if(!sizing) { _fun00002_ip = 555; continue _fun00001 }
 543:
        sizing = 11;
        sizing = option[sizing];
        foxtra = backup.bind(entity)(sizing);
 555:
        verify['fullIcon'] = foxtra;
        foxtra = option[kiloes];
        sizing = golfie.bind(entity)(foxtra);
        foxtra = sizing.isAndroid;
        sizing = foxtra.bind(sizing)();
        foxtra = undefined;
        if(!sizing) { _fun00002_ip = 595; continue _fun00001 }
 583:
        sizing = 12;
        sizing = option[sizing];
        foxtra = backup.bind(entity)(sizing);
 595:
        verify['icon'] = foxtra;
        foxtra = 13;
        sizing = option[foxtra];
        output = golfie.bind(entity)(sizing);
        sizing = output.canSendSMS;
        sizing = sizing.bind(output)();
        verify['isAvailable'] = sizing;
        sizing = function() { // Original name: getLabel
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 6;
            michal = oscard[entity];
            tangon = undefined;
            michal = report.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.AQKfCg;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        verify['getLabel'] = sizing;
        sizing = function(argFoo) { // Original name: onPress
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = argFoo;
                romeon = entity.channel;
                var _closure2_slot0 = romeon;
                yankee = entity.code;
                var _closure2_slot1 = yankee;
                oscard = entity.message;
                foxtra = entity.location;
                report = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 7;
                tangon = golfie[entity];
                entity = undefined;
                verify = report.bind(entity)(tangon);
                option = verify.trackOptionClicked;
                tangon = _closure1_slot6;
                backup = tangon.SMS;
                output = verify;
                sizing = yankee;
                kiloes = romeon;
                tangon = output[option](sizing, kiloes, backup, foxtra, romeon);
                tangon = 10;
                tangon = golfie[tangon];
                report = report.bind(entity)(tangon);
                tangon = report.isIOS;
                tangon = tangon.bind(report)();
                if(!tangon) { _fun00004_ip = 142; continue _fun00003 }
 112:
                report = _closure1_slot1;
                golfie = _closure1_slot2;
                tangon = 14;
                tangon = golfie[tangon];
                report = report.bind(entity)(tangon);
                tangon = report.hideActionSheet;
                tangon = tangon.bind(report)();
 142:
                tangon = _closure1_slot0;
                report = _closure1_slot2;
                zuuluu = 13;
                zuuluu = report[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                tangon = report.sendSMS;
                zuuluu = {};
                zuuluu['body'] = oscard;
                michal = function(argFoo, argBar, argBaz) {
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        entity = argFoo;
                        if(!entity) { _fun00006_ip = 133; continue _fun00005 }
 9:
                        michal = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 15;
                        entity = zuuluu[entity];
                        golfie = undefined;
                        zuuluu = michal.bind(golfie)(entity);
                        michal = zuuluu.trackInvite;
                        entity = {};
                        tangon = _closure2_slot1;
                        entity['inviteKey'] = tangon;
                        option = _closure2_slot0;
                        tangon = null;
                        option = tangon == option;
                        if(option) { _fun00006_ip = 76; continue _fun00005 }
 67:
                        oscard = _closure2_slot0;
                        golfie = oscard.id;
 76:
                        option = tangon != golfie;
                        oscard = null;
                        if(!option) { _fun00006_ip = 88; continue _fun00005 }
 85:
                        oscard = golfie;
 88:
                        entity['channelId'] = oscard;
                        entity['messageId'] = tangon;
                        tangon = 'SMS Option';
                        entity['location'] = tangon;
                        tangon = {};
                        report = _closure1_slot7;
                        report = report.SMS;
                        tangon['send_type'] = report;
                        entity['overrideProperties'] = tangon;
                        entity = michal.bind(zuuluu)(entity);
 133:
                        entity = argBaz;
                        if(!entity) { _fun00006_ip = 239; continue _fun00005 }
 139:
                        michal = _closure1_slot1;
                        verify = _closure1_slot2;
                        entity = 16;
                        entity = verify[entity];
                        option = undefined;
                        zuuluu = michal.bind(option)(entity);
                        michal = zuuluu.show;
                        entity = {};
                        golfie = _closure1_slot0;
                        tangon = 6;
                        report = verify[tangon];
                        report = golfie.bind(option)(report);
                        oscard = report.intl;
                        report = oscard.string;
                        tangon = verify[tangon];
                        tangon = golfie.bind(option)(tangon);
                        tangon = tangon.t;
                        tangon = tangon.1ieAR0;
                        tangon = report.bind(oscard)(tangon);
                        entity['body'] = tangon;
                        tangon = true;
                        entity['isDismissable'] = tangon;
                        entity = michal.bind(zuuluu)(entity);
 239:
                        entity = undefined;
                        return entity;
                    }
                };
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            }
        };
        verify['onPress'] = sizing;
        tangon[2] = verify;
        verify = {};
        sizing = report.MAIL;
        verify['type'] = sizing;
        sizing = option[kiloes];
        output = golfie.bind(entity)(sizing);
        sizing = output.isIOS;
        output = sizing.bind(output)();
        sizing = undefined;
        if(!output) { _fun00002_ip = 697; continue _fun00001 }
 685:
        output = 17;
        output = option[output];
        sizing = backup.bind(entity)(output);
 697:
        verify['fullIcon'] = sizing;
        kiloes = option[kiloes];
        sizing = golfie.bind(entity)(kiloes);
        kiloes = sizing.isAndroid;
        sizing = kiloes.bind(sizing)();
        kiloes = undefined;
        if(!sizing) { _fun00002_ip = 737; continue _fun00001 }
 725:
        sizing = 18;
        sizing = option[sizing];
        kiloes = backup.bind(entity)(sizing);
 737:
        verify['icon'] = kiloes;
        foxtra = option[foxtra];
        kiloes = golfie.bind(entity)(foxtra);
        foxtra = kiloes.canSendMail;
        foxtra = foxtra.bind(kiloes)();
        verify['isAvailable'] = foxtra;
        foxtra = function() { // Original name: getLabel
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 6;
            michal = oscard[entity];
            tangon = undefined;
            michal = report.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.QaAypK;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        verify['getLabel'] = foxtra;
        foxtra = function(argFoo) { // Original name: onPress
            _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                entity = argFoo;
                romeon = entity.channel;
                var _closure2_slot0 = romeon;
                yankee = entity.code;
                var _closure2_slot1 = yankee;
                oscard = entity.message;
                foxtra = entity.location;
                report = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 7;
                tangon = golfie[entity];
                entity = undefined;
                verify = report.bind(entity)(tangon);
                option = verify.trackOptionClicked;
                tangon = _closure1_slot6;
                backup = tangon.EMAIL;
                output = verify;
                sizing = yankee;
                kiloes = romeon;
                tangon = output[option](sizing, kiloes, backup, foxtra, romeon);
                tangon = 10;
                tangon = golfie[tangon];
                report = report.bind(entity)(tangon);
                tangon = report.isIOS;
                tangon = tangon.bind(report)();
                if(!tangon) { _fun00008_ip = 142; continue _fun00007 }
 112:
                report = _closure1_slot1;
                golfie = _closure1_slot2;
                tangon = 14;
                tangon = golfie[tangon];
                report = report.bind(entity)(tangon);
                tangon = report.hideActionSheet;
                tangon = tangon.bind(report)();
 142:
                tangon = _closure1_slot0;
                report = _closure1_slot2;
                zuuluu = 13;
                zuuluu = report[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                tangon = report.sendMail;
                zuuluu = {};
                golfie = '';
                zuuluu['subject'] = golfie;
                zuuluu['body'] = oscard;
                michal = function(argFoo, argBar, argBaz) {
                    _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                        entity = argFoo;
                        if(!entity) { _fun00010_ip = 133; continue _fun00009 }
 9:
                        michal = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 15;
                        entity = zuuluu[entity];
                        golfie = undefined;
                        zuuluu = michal.bind(golfie)(entity);
                        michal = zuuluu.trackInvite;
                        entity = {};
                        tangon = _closure2_slot1;
                        entity['inviteKey'] = tangon;
                        option = _closure2_slot0;
                        tangon = null;
                        option = tangon == option;
                        if(option) { _fun00010_ip = 76; continue _fun00009 }
 67:
                        oscard = _closure2_slot0;
                        golfie = oscard.id;
 76:
                        option = tangon != golfie;
                        oscard = null;
                        if(!option) { _fun00010_ip = 88; continue _fun00009 }
 85:
                        oscard = golfie;
 88:
                        entity['channelId'] = oscard;
                        entity['messageId'] = tangon;
                        tangon = 'Email Option';
                        entity['location'] = tangon;
                        tangon = {};
                        report = _closure1_slot7;
                        report = report.EMAIL;
                        tangon['send_type'] = report;
                        entity['overrideProperties'] = tangon;
                        entity = michal.bind(zuuluu)(entity);
 133:
                        entity = argBaz;
                        if(!entity) { _fun00010_ip = 239; continue _fun00009 }
 139:
                        michal = _closure1_slot1;
                        verify = _closure1_slot2;
                        entity = 16;
                        entity = verify[entity];
                        option = undefined;
                        zuuluu = michal.bind(option)(entity);
                        michal = zuuluu.show;
                        entity = {};
                        golfie = _closure1_slot0;
                        tangon = 6;
                        report = verify[tangon];
                        report = golfie.bind(option)(report);
                        oscard = report.intl;
                        report = oscard.string;
                        tangon = verify[tangon];
                        tangon = golfie.bind(option)(tangon);
                        tangon = tangon.t;
                        tangon = tangon.1ieAR0;
                        tangon = report.bind(oscard)(tangon);
                        entity['body'] = tangon;
                        tangon = true;
                        entity['isDismissable'] = tangon;
                        entity = michal.bind(zuuluu)(entity);
 239:
                        entity = undefined;
                        return entity;
                    }
                };
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            }
        };
        verify['onPress'] = foxtra;
        tangon[3] = verify;
        verify = {};
        foxtra = report.FB_MESSENGER;
        verify['type'] = foxtra;
        foxtra = 19;
        foxtra = option[foxtra];
        foxtra = backup.bind(entity)(foxtra);
        verify['fullIcon'] = foxtra;
        foxtra = option[romeon];
        sizing = golfie.bind(entity)(foxtra);
        kiloes = sizing.isAppInstalled;
        foxtra = yankee.MESSENGER;
        foxtra = kiloes.bind(sizing)(foxtra);
        verify['isAvailable'] = foxtra;
        foxtra = function() { // Original name: getLabel
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 6;
            michal = oscard[entity];
            tangon = undefined;
            michal = report.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.P0R3ZG;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        verify['getLabel'] = foxtra;
        foxtra = function(argFoo) { // Original name: onPress
            entity = argFoo;
            romeon = entity.channel;
            option = entity.code;
            offset = entity.location;
            tangon = _closure1_slot1;
            report = _closure1_slot2;
            entity = 20;
            zuuluu = report[entity];
            entity = undefined;
            zuuluu = tangon.bind(entity)(zuuluu);
            oscard = zuuluu.bind(entity)(option);
            tangon = _closure1_slot0;
            zuuluu = 7;
            zuuluu = report[zuuluu];
            report = tangon.bind(entity)(zuuluu);
            tangon = report.trackOptionClicked;
            zuuluu = _closure1_slot6;
            yankee = zuuluu.MESSENGER;
            backup = report;
            foxtra = option;
            zuuluu = backup[tangon](foxtra, romeon, yankee, offset, verify);
            tangon = _closure1_slot3;
            zuuluu = tangon.openURL;
            report = _closure1_slot5;
            michal = _closure1_slot4;
            michal = michal.MESSENGER;
            michal = report[michal];
            michal = michal.bind(report)(oscard);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        verify['onPress'] = foxtra;
        tangon[4] = verify;
        verify = {};
        foxtra = report.GMAIL;
        verify['type'] = foxtra;
        foxtra = 21;
        foxtra = option[foxtra];
        foxtra = backup.bind(entity)(foxtra);
        verify['fullIcon'] = foxtra;
        foxtra = option[romeon];
        sizing = golfie.bind(entity)(foxtra);
        kiloes = sizing.isAppInstalled;
        foxtra = yankee.GMAIL;
        foxtra = kiloes.bind(sizing)(foxtra);
        verify['isAvailable'] = foxtra;
        foxtra = function() { // Original name: getLabel
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 6;
            michal = oscard[entity];
            tangon = undefined;
            michal = report.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.14o9ZW;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        verify['getLabel'] = foxtra;
        foxtra = function(argFoo) { // Original name: onPress
            entity = argFoo;
            romeon = entity.channel;
            option = entity.code;
            golfie = entity.message;
            offset = entity.location;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 7;
            zuuluu = zuuluu[entity];
            entity = undefined;
            report = tangon.bind(entity)(zuuluu);
            tangon = report.trackOptionClicked;
            zuuluu = _closure1_slot6;
            yankee = zuuluu.GMAIL;
            backup = report;
            foxtra = option;
            zuuluu = backup[tangon](foxtra, romeon, yankee, offset, verify);
            tangon = _closure1_slot3;
            zuuluu = tangon.openURL;
            oscard = _closure1_slot5;
            michal = _closure1_slot4;
            michal = michal.GMAIL;
            report = oscard[michal];
            michal = '';
            michal = report.bind(oscard)(michal, golfie);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        verify['onPress'] = foxtra;
        tangon[5] = verify;
        verify = {};
        foxtra = report.TELEGRAM;
        verify['type'] = foxtra;
        foxtra = 22;
        foxtra = option[foxtra];
        foxtra = backup.bind(entity)(foxtra);
        verify['fullIcon'] = foxtra;
        foxtra = option[romeon];
        sizing = golfie.bind(entity)(foxtra);
        kiloes = sizing.isAppInstalled;
        foxtra = yankee.TELEGRAM;
        foxtra = kiloes.bind(sizing)(foxtra);
        verify['isAvailable'] = foxtra;
        foxtra = function() { // Original name: getLabel
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 6;
            michal = oscard[entity];
            tangon = undefined;
            michal = report.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.148qIS;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        verify['getLabel'] = foxtra;
        foxtra = function(argFoo) { // Original name: onPress
            entity = argFoo;
            foxtra = entity.channel;
            verify = entity.code;
            golfie = entity.message;
            yankee = entity.location;
            tangon = _closure1_slot1;
            report = _closure1_slot2;
            entity = 20;
            zuuluu = report[entity];
            entity = undefined;
            zuuluu = tangon.bind(entity)(zuuluu);
            oscard = zuuluu.bind(entity)(verify);
            tangon = _closure1_slot0;
            zuuluu = 7;
            zuuluu = report[zuuluu];
            report = tangon.bind(entity)(zuuluu);
            tangon = report.trackOptionClicked;
            zuuluu = _closure1_slot6;
            romeon = zuuluu.TELEGRAM;
            kiloes = report;
            backup = verify;
            zuuluu = kiloes[tangon](backup, foxtra, romeon, yankee, offset);
            tangon = _closure1_slot3;
            zuuluu = tangon.openURL;
            report = _closure1_slot5;
            michal = _closure1_slot4;
            michal = michal.TELEGRAM;
            michal = report[michal];
            michal = michal.bind(report)(golfie, oscard);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        verify['onPress'] = foxtra;
        tangon[6] = verify;
        verify = {};
        foxtra = report.TWITTER;
        verify['type'] = foxtra;
        foxtra = 23;
        foxtra = option[foxtra];
        foxtra = backup.bind(entity)(foxtra);
        verify['fullIcon'] = foxtra;
        foxtra = option[romeon];
        sizing = golfie.bind(entity)(foxtra);
        kiloes = sizing.isAppInstalled;
        foxtra = yankee.TWITTER;
        foxtra = kiloes.bind(sizing)(foxtra);
        verify['isAvailable'] = foxtra;
        foxtra = function() { // Original name: getLabel
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 6;
            michal = oscard[entity];
            tangon = undefined;
            michal = report.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.oAiltb;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        verify['getLabel'] = foxtra;
        foxtra = function(argFoo) { // Original name: onPress
            entity = argFoo;
            romeon = entity.channel;
            option = entity.code;
            oscard = entity.message;
            offset = entity.location;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 7;
            zuuluu = zuuluu[entity];
            entity = undefined;
            report = tangon.bind(entity)(zuuluu);
            tangon = report.trackOptionClicked;
            zuuluu = _closure1_slot6;
            yankee = zuuluu.TWITTER;
            backup = report;
            foxtra = option;
            zuuluu = backup[tangon](foxtra, romeon, yankee, offset, verify);
            tangon = _closure1_slot3;
            zuuluu = tangon.openURL;
            report = _closure1_slot5;
            michal = _closure1_slot4;
            michal = michal.TWITTER;
            michal = report[michal];
            michal = michal.bind(report)(oscard);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        verify['onPress'] = foxtra;
        tangon[7] = verify;
        verify = {};
        foxtra = report.WHATSAPP;
        verify['type'] = foxtra;
        foxtra = 24;
        foxtra = option[foxtra];
        foxtra = backup.bind(entity)(foxtra);
        verify['fullIcon'] = foxtra;
        foxtra = option[romeon];
        sizing = golfie.bind(entity)(foxtra);
        kiloes = sizing.isAppInstalled;
        foxtra = yankee.WHATSAPP;
        foxtra = kiloes.bind(sizing)(foxtra);
        verify['isAvailable'] = foxtra;
        foxtra = function() { // Original name: getLabel
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 6;
            michal = oscard[entity];
            tangon = undefined;
            michal = report.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.viazhY;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        verify['getLabel'] = foxtra;
        foxtra = function(argFoo) { // Original name: onPress
            entity = argFoo;
            romeon = entity.channel;
            option = entity.code;
            oscard = entity.message;
            offset = entity.location;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 7;
            zuuluu = zuuluu[entity];
            entity = undefined;
            report = tangon.bind(entity)(zuuluu);
            tangon = report.trackOptionClicked;
            zuuluu = _closure1_slot6;
            yankee = zuuluu.WHATSAPP;
            backup = report;
            foxtra = option;
            zuuluu = backup[tangon](foxtra, romeon, yankee, offset, verify);
            tangon = _closure1_slot3;
            zuuluu = tangon.openURL;
            report = _closure1_slot5;
            michal = _closure1_slot4;
            michal = michal.WHATSAPP;
            michal = report[michal];
            michal = michal.bind(report)(oscard);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        verify['onPress'] = foxtra;
        tangon[8] = verify;
        verify = {};
        foxtra = report.LINE;
        verify['type'] = foxtra;
        foxtra = 25;
        foxtra = option[foxtra];
        foxtra = backup.bind(entity)(foxtra);
        verify['fullIcon'] = foxtra;
        romeon = option[romeon];
        foxtra = golfie.bind(entity)(romeon);
        romeon = foxtra.isAppInstalled;
        yankee = yankee.LINE;
        yankee = romeon.bind(foxtra)(yankee);
        verify['isAvailable'] = yankee;
        yankee = function() { // Original name: getLabel
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 6;
            michal = oscard[entity];
            tangon = undefined;
            michal = report.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.kqgslJ;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        verify['getLabel'] = yankee;
        offset = function(argFoo) { // Original name: onPress
            entity = argFoo;
            romeon = entity.channel;
            option = entity.code;
            oscard = entity.message;
            offset = entity.location;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 7;
            zuuluu = zuuluu[entity];
            entity = undefined;
            report = tangon.bind(entity)(zuuluu);
            tangon = report.trackOptionClicked;
            zuuluu = _closure1_slot6;
            yankee = zuuluu.LINE;
            backup = report;
            foxtra = option;
            zuuluu = backup[tangon](foxtra, romeon, yankee, offset, verify);
            tangon = _closure1_slot3;
            zuuluu = tangon.openURL;
            report = _closure1_slot5;
            michal = _closure1_slot4;
            michal = michal.LINE;
            michal = report[michal];
            michal = michal.bind(report)(oscard);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        verify['onPress'] = offset;
        tangon[9] = verify;
        verify = tangon[michal];
        michal = new Array(2);
        michal[0] = verify;
        oscard = tangon[oscard];
        michal[1] = oscard;
        oscard = 26;
        oscard = option[oscard];
        option = golfie.bind(entity)(oscard);
        golfie = option.fileFinishedImporting;
        oscard = 'modules/instant_invite/native/components/InstantInviteConstants.tsx';
        oscard = golfie.bind(option)(oscard);
        zuuluu['ShareItemType'] = report;
        zuuluu['SHARE_ITEMS'] = tangon;
        zuuluu['SHARE_ITEMS_DEFAULT'] = michal;
        return entity;
    }
})();