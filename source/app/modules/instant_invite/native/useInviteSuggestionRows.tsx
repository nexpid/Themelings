// app/modules/instant_invite/native/useInviteSuggestionRows.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var7 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var7;
    var _closure1_slot2 = var6;
    var1 = global;
    var9 = var1.Object;
    var8 = var9.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var8.bind(var9)(var3, var1, var4);
    var1 = 0;
    var4 = var6[var1];
    var1 = undefined;
    var4 = var7.bind(var1)(var4);
    var _closure1_slot3 = var4;
    var4 = 1;
    var8 = var6[var4];
    var4 = metroImportAll;
    var4 = var4.bind(var1)(var8);
    var _closure1_slot4 = var4;
    var4 = 2;
    var4 = var6[var4];
    var4 = var7.bind(var1)(var4);
    var _closure1_slot5 = var4;
    var4 = 3;
    var4 = var6[var4];
    var4 = var7.bind(var1)(var4);
    var _closure1_slot6 = var4;
    var4 = 4;
    var4 = var6[var4];
    var4 = var7.bind(var1)(var4);
    var _closure1_slot7 = var4;
    var4 = 5;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.InviteTargetTypes;
    var _closure1_slot8 = var4;
    var4 = 6;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.AnalyticEvents;
    var _closure1_slot9 = var4;
    var4 = 7;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.NOOP_NULL;
    var _closure1_slot10 = var4;
    var4 = 11;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/instant_invite/native/useInviteSuggestionRows.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function _default(arg1, arg2, arg3, arg4) {
        var8 = arg1;
        var4 = arg2;
        var7 = arg3;
        var10 = arg4;
        var _closure2_slot0 = var8;
        var _closure2_slot1 = var4;
        var _closure2_slot2 = var7;
        var _closure2_slot3 = var10;
        var5 = _closure1_slot0;
        var6 = _closure1_slot2;
        var3 = 8;
        var3 = var6[var3];
        var11 = undefined;
        var9 = var5.bind(var11)(var3);
        var6 = var9.useStateFromStores;
        var3 = _closure1_slot7;
        var5 = new Array(1);
        var5[0] = var3;
        var3 = function() {
            var2 = _closure1_slot7;
            var1 = var2.getInviteSuggestionRows;
            var1 = var1.bind(var2)();
            return var1;
        };
        var3 = var6.bind(var9)(var5, var3);
        var _closure2_slot4 = var3;
        var6 = _closure1_slot4;
        var9 = var6.useState;
        var5 = true;
        var9 = var9.bind(var6)(var5);
        var5 = _closure1_slot3;
        var2 = 2;
        var9 = var5.bind(var11)(var9, var2);
        var2 = 0;
        var2 = var9[var2];
        var _closure2_slot5 = var2;
        var5 = 1;
        var5 = var9[var5];
        var _closure2_slot6 = var5;
        var9 = var6.useEffect;
        var5 = new Array(5);
        var5[0] = var3;
        var5[1] = var8;
        var5[2] = var2;
        var5[3] = var10;
        var5[4] = var4;
        var4 = function() {
            _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
                var1 = _closure2_slot5;
                if(var1) { _fun0001_ip = 2; continue _fun0001 }
case 3:
                var3 = _closure1_slot7;
                var2 = var3.getInitialCounts;
                var6 = var2.bind(var3)();
                var4 = _closure1_slot1;
                var3 = _closure1_slot2;
                var2 = 9;
                var3 = var3[var2];
                var2 = undefined;
                var4 = var4.bind(var2)(var3);
                var3 = var4.track;
                var1 = _closure1_slot9;
                var2 = var1.INVITE_SUGGESTION_OPENED;
                var1 = {};
                var7 = _closure2_slot1;
                var1['location'] = var7;
                var7 = _closure2_slot4;
                var7 = var7.length;
                var1['num_suggestions'] = var7;
                var7 = _closure2_slot0;
                var7 = var7.guild_id;
                var1['guild_id'] = var7;
                var7 = var6.numFriends;
                var1['num_friends'] = var7;
                var7 = var6.numDms;
                var1['num_dms'] = var7;
                var6 = var6.numGroupDms;
                var1['num_group_dms'] = var6;
                var5 = _closure2_slot3;
                var1['application_id'] = var5;
                var1 = var3.bind(var4)(var2, var1);
case 2:
                var1 = undefined;
                return var1;
            }
        };
        var4 = var9.bind(var6)(var4, var5);
        var5 = var6.useEffect;
        var4 = new Array(2);
        var4[0] = var8;
        var4[1] = var7;
        var1 = function() {
            _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
case 0:
                var3 = _closure2_slot6;
                var1 = undefined;
                var2 = true;
                var2 = var3.bind(var1)(var2);
                var4 = _closure2_slot2;
                var3 = _closure1_slot8;
                var3 = var3.EMBEDDED_APPLICATION;
                if(!(var4 !== var3)) { _fun0002_ip = 4; continue _fun0002 }
case 5:
                var5 = _closure1_slot5;
                var4 = var5.getMemberIds;
                var3 = _closure2_slot0;
                var3 = var3.guild_id;
                var9 = var4.bind(var5)(var3);
                _fun0002_ip = 6; continue _fun0002;
case 4:
                var9 = new Array(0);
case 6:
                var4 = _closure1_slot0;
                var5 = _closure1_slot2;
                var3 = 10;
                var3 = var5[var3];
                var5 = var4.bind(var1)(var3);
                var4 = var5.loadInviteSuggestions;
                var3 = {};
                var7 = global;
                var7 = var7.Set;
                var8 = var7.prototype;
                var8 = Object.create(var8, {constructor: {value: var7}});
                var12 = var8;
                var11 = var9;
                var7 = new var12[var7](var11, var10);
                var7 = var7 instanceof Object ? var7 : var8;
                var3['omitUserIds'] = var7;
                var10 = _closure1_slot6;
                var9 = var10.getGuild;
                var7 = _closure2_slot0;
                var8 = var7.guild_id;
                var8 = var9.bind(var10)(var8);
                var3['guild'] = var8;
                var3['channel'] = var7;
                var6 = _closure2_slot2;
                var3['inviteTargetType'] = var6;
                var4 = var4.bind(var5)(var3);
                var3 = var4.catch;
                var2 = _closure1_slot10;
                var4 = var3.bind(var4)(var2);
                var3 = var4.finally;
                var2 = function() {
                    var3 = _closure2_slot6;
                    var1 = undefined;
                    var2 = false;
                    var2 = var3.bind(var1)(var2);
                    return var1;
                };
                var2 = var3.bind(var4)(var2);
                return var1;
            }
        };
        var1 = var5.bind(var6)(var1, var4);
        var1 = {};
        var1['rows'] = var3;
        var1['isFetchingRows'] = var2;
        return var1;
    };
    var3['default'] = var2;
    return var1;
})();