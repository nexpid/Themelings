// app/modules/instant_invite/native/useInviteSuggestionRows.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    option = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.InviteTargetTypes;
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot9 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.NOOP_NULL;
    var _closure1_slot10 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/instant_invite/native/useInviteSuggestionRows.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo, argBar, argBaz, argCor) { // Original name: _default
        option = argFoo;
        tangon = argBar;
        golfie = argBaz;
        offset = argCor;
        var _closure2_slot0 = option;
        var _closure2_slot1 = tangon;
        var _closure2_slot2 = golfie;
        var _closure2_slot3 = offset;
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        zuuluu = 8;
        zuuluu = oscard[zuuluu];
        yankee = undefined;
        verify = report.bind(yankee)(zuuluu);
        oscard = verify.useStateFromStores;
        zuuluu = _closure1_slot7;
        report = new Array(1);
        report[0] = zuuluu;
        zuuluu = function() {
            michal = _closure1_slot7;
            entity = michal.getInviteSuggestionRows;
            entity = entity.bind(michal)();
            return entity;
        };
        zuuluu = oscard.bind(verify)(report, zuuluu);
        var _closure2_slot4 = zuuluu;
        oscard = _closure1_slot4;
        verify = oscard.useState;
        report = true;
        verify = verify.bind(oscard)(report);
        report = _closure1_slot3;
        michal = 2;
        verify = report.bind(yankee)(verify, michal);
        michal = 0;
        michal = verify[michal];
        var _closure2_slot5 = michal;
        report = 1;
        report = verify[report];
        var _closure2_slot6 = report;
        verify = oscard.useEffect;
        report = new Array(5);
        report[0] = zuuluu;
        report[1] = option;
        report[2] = michal;
        report[3] = offset;
        report[4] = tangon;
        tangon = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = _closure2_slot5;
                if(entity) { _fun00002_ip = 158; continue _fun00001 }
 13:
                zuuluu = _closure1_slot7;
                michal = zuuluu.getInitialCounts;
                oscard = michal.bind(zuuluu)();
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                michal = 9;
                zuuluu = zuuluu[michal];
                michal = undefined;
                tangon = tangon.bind(michal)(zuuluu);
                zuuluu = tangon.track;
                entity = _closure1_slot9;
                michal = entity.INVITE_SUGGESTION_OPENED;
                entity = {};
                golfie = _closure2_slot1;
                entity['location'] = golfie;
                golfie = _closure2_slot4;
                golfie = golfie.length;
                entity['num_suggestions'] = golfie;
                golfie = _closure2_slot0;
                golfie = golfie.guild_id;
                entity['guild_id'] = golfie;
                golfie = oscard.numFriends;
                entity['num_friends'] = golfie;
                golfie = oscard.numDms;
                entity['num_dms'] = golfie;
                oscard = oscard.numGroupDms;
                entity['num_group_dms'] = oscard;
                report = _closure2_slot3;
                entity['application_id'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
 158:
                entity = undefined;
                return entity;
            }
        };
        tangon = verify.bind(oscard)(tangon, report);
        report = oscard.useEffect;
        tangon = new Array(2);
        tangon[0] = option;
        tangon[1] = golfie;
        entity = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                zuuluu = _closure2_slot6;
                entity = undefined;
                michal = true;
                michal = zuuluu.bind(entity)(michal);
                tangon = _closure2_slot2;
                zuuluu = _closure1_slot8;
                zuuluu = zuuluu.EMBEDDED_APPLICATION;
                if(!(tangon !== zuuluu)) { _fun00004_ip = 63; continue _fun00003 }
 37:
                report = _closure1_slot5;
                tangon = report.getMemberIds;
                zuuluu = _closure2_slot0;
                zuuluu = zuuluu.guild_id;
                verify = tangon.bind(report)(zuuluu);
                _fun00004_ip = 67; continue _fun00003;
 63:
                verify = new Array(0);
 67:
                tangon = _closure1_slot0;
                report = _closure1_slot2;
                zuuluu = 10;
                zuuluu = report[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                tangon = report.loadInviteSuggestions;
                zuuluu = {};
                golfie = global;
                golfie = golfie.Set;
                option = golfie.prototype;
                option = Object.create(option, {constructor: {value: golfie}});
                romeon = option;
                yankee = verify;
                golfie = new romeon[golfie](yankee, offset);
                golfie = golfie instanceof Object ? golfie : option;
                zuuluu['omitUserIds'] = golfie;
                offset = _closure1_slot6;
                verify = offset.getGuild;
                golfie = _closure2_slot0;
                option = golfie.guild_id;
                option = verify.bind(offset)(option);
                zuuluu['guild'] = option;
                zuuluu['channel'] = golfie;
                oscard = _closure2_slot2;
                zuuluu['inviteTargetType'] = oscard;
                tangon = tangon.bind(report)(zuuluu);
                zuuluu = tangon.catch;
                michal = _closure1_slot10;
                tangon = zuuluu.bind(tangon)(michal);
                zuuluu = tangon.finally;
                michal = function() {
                    zuuluu = _closure2_slot6;
                    entity = undefined;
                    michal = false;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            }
        };
        entity = report.bind(oscard)(entity, tangon);
        entity = {};
        entity['rows'] = zuuluu;
        entity['isFetchingRows'] = michal;
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();