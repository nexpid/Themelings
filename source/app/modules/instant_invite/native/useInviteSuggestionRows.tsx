// app/modules/instant_invite/native/useInviteSuggestionRows.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    options = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(options);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.InviteTargetTypes;
    var _closure1_slot8 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot9 = tango;
    tango = 7;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.NOOP_NULL;
    var _closure1_slot10 = tango;
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/instant_invite/native/useInviteSuggestionRows.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo, argBar, argBaz, argCorge) { // Original name: _default
        options = argFoo;
        tango = argBar;
        golf = argBaz;
        offset = argCorge;
        var _closure2_slot0 = options;
        var _closure2_slot1 = tango;
        var _closure2_slot2 = golf;
        var _closure2_slot3 = offset;
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        zulu = 8;
        zulu = oscar[zulu];
        yankee = undefined;
        verify = report.bind(yankee)(zulu);
        oscar = verify.useStateFromStores;
        zulu = _closure1_slot7;
        report = new Array(1);
        report[0] = zulu;
        zulu = function() {
            mike = _closure1_slot7;
            entity = mike.getInviteSuggestionRows;
            entity = entity.bind(mike)();
            return entity;
        };
        zulu = oscar.bind(verify)(report, zulu);
        var _closure2_slot4 = zulu;
        oscar = _closure1_slot4;
        verify = oscar.useState;
        report = true;
        verify = verify.bind(oscar)(report);
        report = _closure1_slot3;
        mike = 2;
        verify = report.bind(yankee)(verify, mike);
        mike = 0;
        mike = verify[mike];
        var _closure2_slot5 = mike;
        report = 1;
        report = verify[report];
        var _closure2_slot6 = report;
        verify = oscar.useEffect;
        report = new Array(5);
        report[0] = zulu;
        report[1] = options;
        report[2] = mike;
        report[3] = offset;
        report[4] = tango;
        tango = function() {
            _fun86378: for(var _fun86378_ip = 0; ; ) switch(_fun86378_ip) {
 0:
                entity = _closure2_slot5;
                if(entity) { _fun86378_ip = 158; continue _fun86378 }
 13:
                zulu = _closure1_slot7;
                mike = zulu.getInitialCounts;
                oscar = mike.bind(zulu)();
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                mike = 9;
                zulu = zulu[mike];
                mike = undefined;
                tango = tango.bind(mike)(zulu);
                zulu = tango.track;
                entity = _closure1_slot9;
                mike = entity.INVITE_SUGGESTION_OPENED;
                entity = {};
                golf = _closure2_slot1;
                entity['location'] = golf;
                golf = _closure2_slot4;
                golf = golf.length;
                entity['num_suggestions'] = golf;
                golf = _closure2_slot0;
                golf = golf.guild_id;
                entity['guild_id'] = golf;
                golf = oscar.numFriends;
                entity['num_friends'] = golf;
                golf = oscar.numDms;
                entity['num_dms'] = golf;
                oscar = oscar.numGroupDms;
                entity['num_group_dms'] = oscar;
                report = _closure2_slot3;
                entity['application_id'] = report;
                entity = zulu.bind(tango)(mike, entity);
 158:
                entity = undefined;
                return entity;
            }
        };
        tango = verify.bind(oscar)(tango, report);
        report = oscar.useEffect;
        tango = new Array(2);
        tango[0] = options;
        tango[1] = golf;
        entity = function() {
            _fun86379: for(var _fun86379_ip = 0; ; ) switch(_fun86379_ip) {
 0:
                zulu = _closure2_slot6;
                entity = undefined;
                mike = true;
                mike = zulu.bind(entity)(mike);
                tango = _closure2_slot2;
                zulu = _closure1_slot8;
                zulu = zulu.EMBEDDED_APPLICATION;
                if(!(tango !== zulu)) { _fun86379_ip = 63; continue _fun86379 }
 37:
                report = _closure1_slot5;
                tango = report.getMemberIds;
                zulu = _closure2_slot0;
                zulu = zulu.guild_id;
                verify = tango.bind(report)(zulu);
                _fun86379_ip = 67; continue _fun86379;
 63:
                verify = new Array(0);
 67:
                tango = _closure1_slot0;
                report = _closure1_slot2;
                zulu = 10;
                zulu = report[zulu];
                report = tango.bind(entity)(zulu);
                tango = report.loadInviteSuggestions;
                zulu = {};
                golf = global;
                golf = golf.Set;
                options = golf.prototype;
                options = Object.create(options, {constructor: {value: golf}});
                romeo = options;
                yankee = verify;
                golf = new romeo[golf](yankee, offset);
                golf = golf instanceof Object ? golf : options;
                zulu['omitUserIds'] = golf;
                offset = _closure1_slot6;
                verify = offset.getGuild;
                golf = _closure2_slot0;
                options = golf.guild_id;
                options = verify.bind(offset)(options);
                zulu['guild'] = options;
                zulu['channel'] = golf;
                oscar = _closure2_slot2;
                zulu['inviteTargetType'] = oscar;
                tango = tango.bind(report)(zulu);
                zulu = tango.catch;
                mike = _closure1_slot10;
                tango = zulu.bind(tango)(mike);
                zulu = tango.finally;
                mike = function() {
                    zulu = _closure2_slot6;
                    entity = undefined;
                    mike = false;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                };
                mike = zulu.bind(tango)(mike);
                return entity;
            }
        };
        entity = report.bind(oscar)(entity, tango);
        entity = {};
        entity['rows'] = zulu;
        entity['isFetchingRows'] = mike;
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();