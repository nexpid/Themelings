// app/modules/instant_invite/native/action_sheet/invite_to_guilds/GuildInviteActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: GuildList
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            golfie = entity.recipientId;
            var _closure2_slot0 = golfie;
            zuuluu = entity.query;
            entity = entity.source;
            var _closure2_slot1 = entity;
            tangon = undefined;
            var _closure2_slot3 = tangon;
            entity = _closure1_slot8;
            entity = entity.bind(tangon)();
            var _closure2_slot2 = entity;
            michal = _closure1_slot0;
            option = _closure1_slot2;
            entity = 10;
            entity = option[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.useServerInviteRows;
            zuuluu = entity.bind(michal)(golfie, zuuluu);
            michal = _closure1_slot3;
            entity = 2;
            zuuluu = michal.bind(tangon)(zuuluu, entity);
            offset = 0;
            michal = zuuluu[offset];
            entity = 1;
            entity = zuuluu[entity];
            zuuluu = michal.length;
            if(!(offset === zuuluu)) { _fun00002_ip = 129; continue _fun00001 }
 117:
            zuuluu = entity.length;
            if(!(offset !== zuuluu)) { _fun00002_ip = 266; continue _fun00001 }
 129:
            zuuluu = {};
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            option = 7;
            golfie = foxtra[option];
            golfie = romeon.bind(tangon)(golfie);
            yankee = golfie.intl;
            verify = yankee.string;
            golfie = foxtra[option];
            golfie = romeon.bind(tangon)(golfie);
            golfie = golfie.t;
            golfie = golfie.u+Itho;
            golfie = verify.bind(yankee)(golfie);
            zuuluu['title'] = golfie;
            zuuluu['data'] = michal;
            golfie = new Array(2);
            golfie[0] = zuuluu;
            zuuluu = {};
            verify = foxtra[option];
            verify = romeon.bind(tangon)(verify);
            yankee = verify.intl;
            verify = yankee.string;
            option = foxtra[option];
            option = romeon.bind(tangon)(option);
            option = option.t;
            option = option.c5T+X1;
            option = verify.bind(yankee)(option);
            zuuluu['title'] = option;
            zuuluu['data'] = entity;
            golfie[1] = zuuluu;
            _fun00002_ip = 270; continue _fun00001;
 266:
            golfie = new Array(0);
 270:
            option = _closure1_slot1;
            verify = _closure1_slot2;
            zuuluu = 12;
            zuuluu = verify[zuuluu];
            zuuluu = option.bind(tangon)(zuuluu);
            zuuluu = zuuluu.bind(tangon)();
            verify = zuuluu.insets;
            michal = michal.length;
            yankee = offset === michal;
            if(yankee) { _fun00002_ip = 321; continue _fun00001 }
 312:
            entity = entity.length;
            yankee = offset === entity;
 321:
            _closure2_slot3 = yankee;
            zuuluu = _closure1_slot6;
            michal = _closure1_slot0;
            option = _closure1_slot2;
            entity = 13;
            entity = option[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.UserProfileStackedActionSheetSectionList;
            entity = {};
            option = function(argFoo) { // Original name: renderItem
                entity = argFoo;
                oscard = entity.item;
                report = entity.style;
                tangon = _closure1_slot6;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 14;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                entity['row'] = oscard;
                golfie = _closure2_slot0;
                entity['recipientId'] = golfie;
                oscard = _closure2_slot1;
                entity['source'] = oscard;
                entity['style'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            entity['renderItem'] = option;
            option = {};
            offset = 0;
            if(!yankee) { _fun00002_ip = 379; continue _fun00001 }
 376:
            offset = 24;
 379:
            option['paddingTop'] = offset;
            offset = verify.bottom;
            yankee = _closure1_slot1;
            romeon = _closure1_slot2;
            verify = 5;
            verify = romeon[verify];
            verify = yankee.bind(tangon)(verify);
            verify = verify.spacing;
            verify = verify.PX_16;
            verify = offset + verify;
            option['paddingBottom'] = verify;
            entity['contentContainerStyle'] = option;
            entity['sections'] = golfie;
            golfie = function(argFoo) { // Original name: renderSectionHeader
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = argFoo;
                    golfie = entity.section;
                    zuuluu = _closure2_slot3;
                    entity = null;
                    if(zuuluu) { _fun00004_ip = 123; continue _fun00003 }
 20:
                    zuuluu = golfie.data;
                    tangon = zuuluu.length;
                    zuuluu = 0;
                    zuuluu = tangon > zuuluu;
                    michal = null;
                    if(!zuuluu) { _fun00004_ip = 120; continue _fun00003 }
 41:
                    oscard = _closure1_slot6;
                    tangon = _closure1_slot0;
                    report = _closure1_slot2;
                    zuuluu = 11;
                    zuuluu = report[zuuluu];
                    report = undefined;
                    zuuluu = tangon.bind(report)(zuuluu);
                    tangon = zuuluu.Text;
                    zuuluu = {'style': null, 'variant': 'text-sm/semibold', 'color': 'header-secondary'};
                    option = _closure2_slot2;
                    option = option.sectionTitle;
                    zuuluu['style'] = option;
                    golfie = golfie.title;
                    zuuluu['children'] = golfie;
                    michal = oscard.bind(report)(tangon, zuuluu);
 120:
                    entity = michal;
 123:
                    return entity;
                }
            };
            entity['renderSectionHeader'] = golfie;
            golfie = true;
            entity['stickySectionHeadersEnabled'] = golfie;
            oscard = function(argFoo) { // Original name: keyExtractor
                entity = argFoo;
                entity = entity.guild;
                entity = entity.id;
                return entity;
            };
            entity['keyExtractor'] = oscard;
            report = _closure1_slot9;
            entity['ListEmptyComponent'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot10 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    yankee = 5;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingHorizontal'] = offset;
    tangon['content'] = verify;
    verify = {};
    offset = 8;
    verify['rowGap'] = offset;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = offset;
    tangon['searchbarWrapper'] = verify;
    verify = {'paddingBottom': 6, 'paddingTop': 24};
    offset = 24;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = yankee;
    tangon['sectionTitle'] = verify;
    verify = {};
    verify['margin'] = offset;
    tangon['emptyStateContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = function() { // Original name: EmptyGuildList
        entity = _closure1_slot8;
        tangon = undefined;
        oscard = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        offset = _closure1_slot0;
        golfie = _closure1_slot2;
        entity = 6;
        entity = golfie[entity];
        entity = offset.bind(tangon)(entity);
        michal = entity.ThemedEmptyState;
        entity = {};
        oscard = oscard.emptyStateContainer;
        entity['containerStyle'] = oscard;
        oscard = 7;
        option = golfie[oscard];
        option = offset.bind(tangon)(option);
        yankee = option.intl;
        verify = yankee.string;
        option = golfie[oscard];
        option = offset.bind(tangon)(option);
        option = option.t;
        option = option.2bfiLi;
        option = verify.bind(yankee)(option);
        entity['title'] = option;
        option = golfie[oscard];
        option = offset.bind(tangon)(option);
        verify = option.intl;
        option = verify.string;
        oscard = golfie[oscard];
        oscard = offset.bind(tangon)(oscard);
        oscard = oscard.t;
        oscard = oscard.V6nAfH;
        oscard = option.bind(verify)(oscard);
        entity['body'] = oscard;
        oscard = _closure1_slot1;
        report = 8;
        report = golfie[report];
        report = oscard.bind(tangon)(report);
        entity['darkSource'] = report;
        report = 9;
        report = golfie[report];
        report = oscard.bind(tangon)(report);
        entity['lightSource'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot9 = tangon;
    tangon = 19;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/instant_invite/native/action_sheet/invite_to_guilds/GuildInviteActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        entity = argFoo;
        offset = entity.recipientId;
        verify = entity.source;
        entity = _closure1_slot8;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot4;
        michal = zuuluu.useState;
        entity = '';
        zuuluu = michal.bind(zuuluu)(entity);
        michal = _closure1_slot3;
        entity = 2;
        michal = michal.bind(tangon)(zuuluu, entity);
        entity = 0;
        yankee = michal[entity];
        entity = 1;
        entity = michal[entity];
        var _closure2_slot0 = entity;
        zuuluu = _closure1_slot6;
        sizing = _closure1_slot0;
        source = _closure1_slot2;
        entity = 15;
        entity = source[entity];
        entity = sizing.bind(tangon)(entity);
        michal = entity.BottomSheetTitleHeader;
        entity = {};
        kiloes = 7;
        report = source[kiloes];
        report = sizing.bind(tangon)(report);
        romeon = report.intl;
        golfie = romeon.string;
        report = source[kiloes];
        report = sizing.bind(tangon)(report);
        report = report.t;
        report = report.HvoZQE;
        report = golfie.bind(romeon)(report);
        entity['title'] = report;
        report = zuuluu.bind(tangon)(michal, entity);
        zuuluu = _closure1_slot7;
        entity = 16;
        entity = source[entity];
        entity = sizing.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {'scrollable': true, 'startExpanded': true};
        entity['header'] = report;
        report = option.content;
        entity['contentStyles'] = report;
        golfie = _closure1_slot5;
        report = {};
        option = option.searchbarWrapper;
        report['style'] = option;
        foxtra = _closure1_slot6;
        option = 17;
        option = source[option];
        option = sizing.bind(tangon)(option);
        romeon = option.SearchField;
        option = {};
        backup = function(argFoo) { // Original name: onChange
            zuuluu = _closure2_slot0;
            entity = undefined;
            michal = argFoo;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        option['onChange'] = backup;
        backup = source[kiloes];
        backup = sizing.bind(tangon)(backup);
        result = backup.intl;
        output = result.string;
        backup = source[kiloes];
        backup = sizing.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.uohsSk;
        backup = output.bind(result)(backup);
        option['placeholder'] = backup;
        romeon = foxtra.bind(tangon)(romeon, option);
        option = new Array(2);
        option[0] = romeon;
        backup = _closure1_slot6;
        romeon = 11;
        romeon = source[romeon];
        romeon = sizing.bind(tangon)(romeon);
        foxtra = romeon.Text;
        romeon = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
        output = source[kiloes];
        output = sizing.bind(tangon)(output);
        result = output.intl;
        output = result.format;
        kiloes = source[kiloes];
        kiloes = sizing.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        sizing = kiloes.4UyUHh;
        kiloes = {};
        update = _closure1_slot1;
        echoed = 18;
        echoed = source[echoed];
        echoed = update.bind(tangon)(echoed);
        echoed = echoed.INVITE_OPTIONS_7_DAYS;
        echoed = echoed.label;
        kiloes['xDays'] = echoed;
        kiloes = output.bind(result)(sizing, kiloes);
        romeon['children'] = kiloes;
        romeon = backup.bind(tangon)(foxtra, romeon);
        option[1] = romeon;
        report['children'] = option;
        golfie = zuuluu.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        option = _closure1_slot6;
        golfie = _closure1_slot10;
        oscard = {};
        oscard['query'] = yankee;
        oscard['recipientId'] = offset;
        oscard['source'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();