// app/modules/guild_onboarding_home/native/NewMemberActionsCompletedModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'position': 'absolute', 'width': '100%', 'height': '100%', 'backgroundColor': 'rgba(0, 0, 0, 0.8)', 'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    tangon['screen'] = verify;
    verify = {};
    offset = 16;
    verify['marginBottom'] = offset;
    tangon['text'] = verify;
    verify = {};
    yankee = 4;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    offset = 8;
    verify['height'] = offset;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = foxtra;
    foxtra = '60%';
    verify['width'] = foxtra;
    tangon['progressBackground'] = verify;
    verify = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.unsafe_rawColors;
    foxtra = foxtra.GREEN_330;
    verify['backgroundColor'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.round;
    verify['borderRadius'] = yankee;
    verify['height'] = offset;
    tangon['progressForeground'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = {};
    golfie = 'function NewMemberActionsCompletedModalTsx1(){const{withDelay,withTiming,barWidth}=this.__closure;return{width:withDelay(500,withTiming(barWidth.get()*100+"%",{duration:700}))};}';
    tangon['code'] = golfie;
    var _closure1_slot8 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_onboarding_home/native/NewMemberActionsCompletedModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: NewMemberActionsCompleted
        michal = argFoo;
        report = michal.initialPercent;
        output = michal.numActions;
        michal = _closure1_slot7;
        tangon = undefined;
        offset = michal.bind(tangon)();
        backup = _closure1_slot0;
        romeon = _closure1_slot2;
        option = 5;
        michal = romeon[option];
        zuuluu = backup.bind(tangon)(michal);
        michal = zuuluu.useSharedValue;
        yankee = michal.bind(zuuluu)(report);
        var _closure2_slot0 = yankee;
        report = _closure1_slot3;
        oscard = report.useEffect;
        zuuluu = new Array(1);
        zuuluu[0] = yankee;
        michal = function() {
            zuuluu = _closure2_slot0;
            michal = zuuluu.set;
            entity = 1;
            entity = michal.bind(zuuluu)(entity);
            entity = undefined;
            return entity;
        };
        michal = oscard.bind(report)(michal, zuuluu);
        michal = romeon[option];
        oscard = backup.bind(tangon)(michal);
        zuuluu = oscard.useAnimatedStyle;
        michal = function() { // Original name: b
            entity = {};
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            michal = 5;
            michal = golfie[michal];
            zuuluu = undefined;
            report = oscard.bind(zuuluu)(michal);
            tangon = report.withDelay;
            michal = 6;
            michal = golfie[michal];
            golfie = oscard.bind(zuuluu)(michal);
            oscard = golfie.withTiming;
            zuuluu = _closure2_slot0;
            michal = zuuluu.get;
            zuuluu = michal.bind(zuuluu)();
            michal = 100;
            option = michal * zuuluu;
            zuuluu = {};
            michal = 700;
            zuuluu['duration'] = michal;
            michal = '%';
            michal = option + michal;
            zuuluu = oscard.bind(golfie)(michal, zuuluu);
            michal = 500;
            michal = tangon.bind(report)(michal, zuuluu);
            entity['width'] = michal;
            return entity;
        };
        golfie = {};
        foxtra = romeon[option];
        foxtra = backup.bind(tangon)(foxtra);
        foxtra = foxtra.withDelay;
        golfie['withDelay'] = foxtra;
        foxtra = 6;
        foxtra = romeon[foxtra];
        foxtra = backup.bind(tangon)(foxtra);
        foxtra = foxtra.withTiming;
        golfie['withTiming'] = foxtra;
        golfie['barWidth'] = yankee;
        michal['__closure'] = golfie;
        golfie = 7643178959760.0;
        michal['__workletHash'] = golfie;
        golfie = _closure1_slot8;
        michal['__initData'] = golfie;
        yankee = zuuluu.bind(oscard)(michal);
        zuuluu = report.useEffect;
        michal = function() {
            entity = global;
            tangon = entity.setTimeout;
            entity = undefined;
            zuuluu = function() {
                zuuluu = _closure1_slot1;
                oscard = _closure1_slot2;
                michal = 7;
                michal = oscard[michal];
                report = undefined;
                zuuluu = zuuluu.bind(report)(michal);
                michal = zuuluu.popWithKey;
                tangon = _closure1_slot0;
                entity = 8;
                entity = oscard[entity];
                entity = tangon.bind(report)(entity);
                entity = entity.NEW_MEMBER_ACTION_COMPLETE_MODAL_KEY;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            michal = 2500;
            michal = tangon.bind(entity)(zuuluu, michal);
            return entity;
        };
        entity = new Array(0);
        entity = zuuluu.bind(report)(michal, entity);
        zuuluu = _closure1_slot6;
        michal = _closure1_slot4;
        entity = {};
        report = offset.screen;
        entity['style'] = report;
        golfie = _closure1_slot5;
        report = 9;
        report = romeon[report];
        report = backup.bind(tangon)(report);
        oscard = report.Text;
        report = {'style': null, 'variant': 'heading-xl/semibold', 'color': 'always-white'};
        foxtra = offset.text;
        report['style'] = foxtra;
        foxtra = 10;
        kiloes = romeon[foxtra];
        kiloes = backup.bind(tangon)(kiloes);
        sizing = kiloes.intl;
        kiloes = sizing.format;
        foxtra = romeon[foxtra];
        foxtra = backup.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        backup = foxtra.pGj5u7;
        foxtra = {};
        foxtra['count'] = output;
        foxtra = kiloes.bind(sizing)(backup, foxtra);
        report['children'] = foxtra;
        oscard = golfie.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = {};
        foxtra = offset.progressBackground;
        oscard['style'] = foxtra;
        verify = _closure1_slot1;
        option = romeon[option];
        option = verify.bind(tangon)(option);
        verify = option.View;
        option = {};
        romeon = offset.progressForeground;
        offset = new Array(2);
        offset[0] = romeon;
        offset[1] = yankee;
        option['style'] = offset;
        option = golfie.bind(tangon)(verify, option);
        oscard['children'] = option;
        oscard = golfie.bind(tangon)(michal, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();