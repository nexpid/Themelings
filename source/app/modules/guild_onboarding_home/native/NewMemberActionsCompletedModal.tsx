// app/modules/guild_onboarding_home/native/NewMemberActionsCompletedModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'position': 'absolute', 'width': '100%', 'height': '100%', 'backgroundColor': 'rgba(0, 0, 0, 0.8)', 'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    tango['screen'] = verify;
    verify = {};
    offset = 16;
    verify['marginBottom'] = offset;
    tango['text'] = verify;
    verify = {};
    yankee = 4;
    offset = oscar[yankee];
    offset = romeo.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    offset = 8;
    verify['height'] = offset;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = foxtrot;
    foxtrot = '60%';
    verify['width'] = foxtrot;
    tango['progressBackground'] = verify;
    verify = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.unsafe_rawColors;
    foxtrot = foxtrot.GREEN_330;
    verify['backgroundColor'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.round;
    verify['borderRadius'] = yankee;
    verify['height'] = offset;
    tango['progressForeground'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = {};
    golf = 'function NewMemberActionsCompletedModalTsx1(){const{withDelay,withTiming,barWidth}=this.__closure;return{width:withDelay(500,withTiming(barWidth.get()*100+"%",{duration:700}))};}';
    tango['code'] = golf;
    var _closure1_slot8 = tango;
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_onboarding_home/native/NewMemberActionsCompletedModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: NewMemberActionsCompleted
        mike = argFoo;
        report = mike.initialPercent;
        output = mike.numActions;
        mike = _closure1_slot7;
        tango = undefined;
        offset = mike.bind(tango)();
        backup = _closure1_slot0;
        romeo = _closure1_slot2;
        options = 5;
        mike = romeo[options];
        zulu = backup.bind(tango)(mike);
        mike = zulu.useSharedValue;
        yankee = mike.bind(zulu)(report);
        var _closure2_slot0 = yankee;
        report = _closure1_slot3;
        oscar = report.useEffect;
        zulu = new Array(1);
        zulu[0] = yankee;
        mike = function() {
            zulu = _closure2_slot0;
            mike = zulu.set;
            entity = 1;
            entity = mike.bind(zulu)(entity);
            entity = undefined;
            return entity;
        };
        mike = oscar.bind(report)(mike, zulu);
        mike = romeo[options];
        oscar = backup.bind(tango)(mike);
        zulu = oscar.useAnimatedStyle;
        mike = function() { // Original name: b
            entity = {};
            oscar = _closure1_slot0;
            golf = _closure1_slot2;
            mike = 5;
            mike = golf[mike];
            zulu = undefined;
            report = oscar.bind(zulu)(mike);
            tango = report.withDelay;
            mike = 6;
            mike = golf[mike];
            golf = oscar.bind(zulu)(mike);
            oscar = golf.withTiming;
            zulu = _closure2_slot0;
            mike = zulu.get;
            zulu = mike.bind(zulu)();
            mike = 100;
            options = mike * zulu;
            zulu = {};
            mike = 700;
            zulu['duration'] = mike;
            mike = '%';
            mike = options + mike;
            zulu = oscar.bind(golf)(mike, zulu);
            mike = 500;
            mike = tango.bind(report)(mike, zulu);
            entity['width'] = mike;
            return entity;
        };
        golf = {};
        foxtrot = romeo[options];
        foxtrot = backup.bind(tango)(foxtrot);
        foxtrot = foxtrot.withDelay;
        golf['withDelay'] = foxtrot;
        foxtrot = 6;
        foxtrot = romeo[foxtrot];
        foxtrot = backup.bind(tango)(foxtrot);
        foxtrot = foxtrot.withTiming;
        golf['withTiming'] = foxtrot;
        golf['barWidth'] = yankee;
        mike['__closure'] = golf;
        golf = 7643178959760.0;
        mike['__workletHash'] = golf;
        golf = _closure1_slot8;
        mike['__initData'] = golf;
        yankee = zulu.bind(oscar)(mike);
        zulu = report.useEffect;
        mike = function() {
            entity = global;
            tango = entity.setTimeout;
            entity = undefined;
            zulu = function() {
                zulu = _closure1_slot1;
                oscar = _closure1_slot2;
                mike = 7;
                mike = oscar[mike];
                report = undefined;
                zulu = zulu.bind(report)(mike);
                mike = zulu.popWithKey;
                tango = _closure1_slot0;
                entity = 8;
                entity = oscar[entity];
                entity = tango.bind(report)(entity);
                entity = entity.NEW_MEMBER_ACTION_COMPLETE_MODAL_KEY;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            mike = 2500;
            mike = tango.bind(entity)(zulu, mike);
            return entity;
        };
        entity = new Array(0);
        entity = zulu.bind(report)(mike, entity);
        zulu = _closure1_slot6;
        mike = _closure1_slot4;
        entity = {};
        report = offset.screen;
        entity['style'] = report;
        golf = _closure1_slot5;
        report = 9;
        report = romeo[report];
        report = backup.bind(tango)(report);
        oscar = report.Text;
        report = {'style': null, 'variant': 'heading-xl/semibold', 'color': 'always-white'};
        foxtrot = offset.text;
        report['style'] = foxtrot;
        foxtrot = 10;
        kilo = romeo[foxtrot];
        kilo = backup.bind(tango)(kilo);
        sizing = kilo.intl;
        kilo = sizing.format;
        foxtrot = romeo[foxtrot];
        foxtrot = backup.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        backup = foxtrot.pGj5u7;
        foxtrot = {};
        foxtrot['count'] = output;
        foxtrot = kilo.bind(sizing)(backup, foxtrot);
        report['children'] = foxtrot;
        oscar = golf.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = {};
        foxtrot = offset.progressBackground;
        oscar['style'] = foxtrot;
        verify = _closure1_slot1;
        options = romeo[options];
        options = verify.bind(tango)(options);
        verify = options.View;
        options = {};
        romeo = offset.progressForeground;
        offset = new Array(2);
        offset[0] = romeo;
        offset[1] = yankee;
        options['style'] = offset;
        options = golf.bind(tango)(verify, options);
        oscar['children'] = options;
        oscar = golf.bind(tango)(mike, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();