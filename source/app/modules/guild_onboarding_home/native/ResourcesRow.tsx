// app/modules/guild_onboarding_home/native/ResourcesRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ScrollView;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ONBOARDING_HOME_RESOURCES_SHEET_KEY;
    var _closure1_slot4 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'flexDirection': 'row', 'paddingBottom': 8, 'marginBottom': 16};
    tangon['container'] = verify;
    verify = {'display': 'flex', 'justifyContent': 'center', 'backgroundColor': null, 'borderRadius': null, 'marginLeft': 8, 'paddingVertical': 8, 'paddingHorizontal': 12};
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.round;
    verify['borderRadius'] = romeon;
    tangon['channelItem'] = verify;
    verify = {'marginLeft': 8, 'paddingHorizontal': 8, 'paddingVertical': 8};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    tangon['overflowItem'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_onboarding_home/native/ResourcesRow.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ResourcesRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.guildId;
            var _closure2_slot0 = michal;
            entity = _closure1_slot7;
            tangon = undefined;
            yankee = entity.bind(tangon)();
            var _closure2_slot1 = yankee;
            zuuluu = _closure1_slot1;
            report = _closure1_slot2;
            entity = 6;
            entity = report[entity];
            entity = zuuluu.bind(tangon)(entity);
            sizing = entity.bind(tangon)(michal);
            entity = sizing.length;
            output = 2;
            option = entity > output;
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            report = true;
            entity['horizontal'] = report;
            report = yankee.container;
            entity['style'] = report;
            oscard = sizing.slice;
            report = 0;
            verify = oscard.bind(sizing)(report, output);
            oscard = verify.map;
            report = function(argFoo) {
                entity = argFoo;
                var _closure3_slot0 = entity;
                report = _closure1_slot5;
                golfie = _closure1_slot0;
                option = _closure1_slot2;
                michal = 11;
                michal = option[michal];
                tangon = undefined;
                michal = golfie.bind(tangon)(michal);
                zuuluu = michal.PressableOpacity;
                michal = {};
                verify = _closure2_slot1;
                verify = verify.channelItem;
                michal['style'] = verify;
                oscard = function() { // Original name: onPress
                    entity = _closure3_slot0;
                    tangon = entity.channelId;
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 7;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.selectHomeResourceChannel;
                    entity = _closure2_slot0;
                    entity = michal.bind(zuuluu)(entity, tangon);
                    entity = undefined;
                    return entity;
                };
                michal['onPress'] = oscard;
                oscard = 12;
                oscard = option[oscard];
                oscard = golfie.bind(tangon)(oscard);
                golfie = oscard.Text;
                oscard = {'variant': 'text-md/medium', 'color': 'header-secondary'};
                option = entity.title;
                oscard['children'] = option;
                oscard = report.bind(tangon)(golfie, oscard);
                michal['children'] = oscard;
                entity = entity.channelId;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            oscard = oscard.bind(verify)(report);
            report = new Array(2);
            report[0] = oscard;
            oscard = null;
            if(!option) { _fun00002_ip = 309; continue _fun00001 }
 140:
            verify = _closure1_slot5;
            foxtra = _closure1_slot0;
            result = _closure1_slot2;
            golfie = 11;
            golfie = result[golfie];
            golfie = foxtra.bind(tangon)(golfie);
            option = golfie.PressableOpacity;
            golfie = {};
            yankee = yankee.channelItem;
            golfie['style'] = yankee;
            offset = function() { // Original name: onPress
                report = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 8;
                tangon = zuuluu[entity];
                entity = undefined;
                oscard = report.bind(entity)(tangon);
                report = oscard.openLazy;
                golfie = _closure1_slot0;
                tangon = 10;
                tangon = zuuluu[tangon];
                golfie = golfie.bind(entity)(tangon);
                tangon = 9;
                tangon = zuuluu[tangon];
                zuuluu = zuuluu.paths;
                tangon = golfie.bind(entity)(tangon, zuuluu);
                zuuluu = _closure1_slot4;
                michal = {};
                golfie = _closure2_slot0;
                michal['guildId'] = golfie;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            golfie['onPress'] = offset;
            offset = 12;
            offset = result[offset];
            offset = foxtra.bind(tangon)(offset);
            yankee = offset.Text;
            offset = {'variant': 'text-md/medium', 'color': 'header-secondary'};
            romeon = 13;
            backup = result[romeon];
            backup = foxtra.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.format;
            romeon = result[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            romeon = romeon.t;
            foxtra = romeon.F6iMs7;
            romeon = {};
            sizing = sizing.length;
            sizing = sizing - output;
            romeon['count'] = sizing;
            romeon = backup.bind(kiloes)(foxtra, romeon);
            offset['children'] = romeon;
            offset = verify.bind(tangon)(yankee, offset);
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 309:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();