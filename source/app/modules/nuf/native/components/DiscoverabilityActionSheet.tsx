// app/modules/nuf/native/components/DiscoverabilityActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot2 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.useContactSyncModalStore;
    var _closure1_slot4 = golfie;
    golfie = tangon.setAllowSync;
    var _closure1_slot5 = golfie;
    golfie = tangon.setAllowPhone;
    var _closure1_slot6 = golfie;
    tangon = tangon.setAllowEmail;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    romeon = tangon.Fonts;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot8 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 6;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = foxtra;
    foxtra = 16;
    verify['paddingBottom'] = foxtra;
    tangon['container'] = verify;
    verify = {'marginTop': 8, 'paddingVertical': 16};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = foxtra;
    tangon['formRow'] = verify;
    verify = {};
    foxtra = 24;
    verify['marginTop'] = foxtra;
    tangon['syncRow'] = verify;
    verify = {};
    romeon = romeon.PRIMARY_SEMIBOLD;
    verify['fontFamily'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INTERACTIVE_ACTIVE;
    verify['color'] = romeon;
    tangon['formText'] = verify;
    verify = {'marginTop': 8, 'fontSize': 14, 'lineHeight': 18, 'paddingHorizontal': 16};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_SECONDARY;
    verify['color'] = offset;
    tangon['info'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/nuf/native/components/DiscoverabilityActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: DiscoverabilityActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot10;
            tangon = undefined;
            echoed = entity.bind(tangon)();
            entity = _closure1_slot4;
            entity = entity.bind(tangon)();
            update = entity.allowPhone;
            var _closure2_slot0 = update;
            backup = entity.allowEmail;
            var _closure2_slot1 = backup;
            kiloes = update;
            if(kiloes) { _fun00002_ip = 52; continue _fun00001 }
 49:
            kiloes = backup;
 52:
            var _closure2_slot2 = kiloes;
            report = _closure1_slot2;
            zuuluu = report.useCallback;
            michal = new Array(1);
            michal[0] = kiloes;
            entity = function() {
                zuuluu = _closure1_slot5;
                entity = _closure2_slot2;
                michal = !entity;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            offset = zuuluu.bind(report)(entity, michal);
            zuuluu = report.useCallback;
            michal = new Array(1);
            michal[0] = update;
            entity = function() {
                zuuluu = _closure1_slot6;
                entity = _closure2_slot0;
                michal = !entity;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            sizing = zuuluu.bind(report)(entity, michal);
            zuuluu = report.useCallback;
            michal = new Array(1);
            michal[0] = backup;
            entity = function() {
                zuuluu = _closure1_slot7;
                entity = _closure2_slot1;
                michal = !entity;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            foxtra = zuuluu.bind(report)(entity, michal);
            option = _closure1_slot9;
            report = _closure1_slot3;
            entity = {};
            michal = echoed.container;
            entity['style'] = michal;
            zuuluu = _closure1_slot8;
            michal = _closure1_slot0;
            golfie = _closure1_slot1;
            romeon = 7;
            oscard = golfie[romeon];
            oscard = michal.bind(tangon)(oscard);
            verify = oscard.FormRow;
            oscard = {};
            output = echoed.formRow;
            yankee = new Array(2);
            yankee[0] = output;
            output = echoed.syncRow;
            yankee[1] = output;
            oscard['DEPRECATED_style'] = yankee;
            yankee = golfie[romeon];
            yankee = michal.bind(tangon)(yankee);
            yankee = yankee.FormRow;
            result = yankee.Label;
            yankee = {};
            output = echoed.formText;
            yankee['style'] = output;
            output = 8;
            source = golfie[output];
            source = michal.bind(tangon)(source);
            sequen = source.intl;
            vacuum = sequen.string;
            source = golfie[output];
            source = michal.bind(tangon)(source);
            source = source.t;
            source = source.gMUgpq;
            source = vacuum.bind(sequen)(source);
            yankee['text'] = source;
            yankee = zuuluu.bind(tangon)(result, yankee);
            oscard['label'] = yankee;
            oscard['onPress'] = offset;
            offset = golfie[romeon];
            offset = michal.bind(tangon)(offset);
            offset = offset.FormRow;
            yankee = offset.Checkbox;
            offset = {};
            offset['selected'] = kiloes;
            offset = zuuluu.bind(tangon)(yankee, offset);
            oscard['trailing'] = offset;
            oscard = zuuluu.bind(tangon)(verify, oscard);
            verify = new Array(7);
            verify[0] = oscard;
            oscard = golfie[romeon];
            oscard = michal.bind(tangon)(oscard);
            offset = oscard.FormText;
            oscard = {};
            yankee = echoed.info;
            oscard['style'] = yankee;
            yankee = golfie[output];
            yankee = michal.bind(tangon)(yankee);
            result = yankee.intl;
            kiloes = result.string;
            yankee = golfie[output];
            yankee = michal.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.pfjsBw;
            yankee = kiloes.bind(result)(yankee);
            oscard['children'] = yankee;
            oscard = zuuluu.bind(tangon)(offset, oscard);
            verify[1] = oscard;
            oscard = golfie[romeon];
            oscard = michal.bind(tangon)(oscard);
            offset = oscard.FormText;
            oscard = {};
            yankee = echoed.info;
            oscard['style'] = yankee;
            yankee = golfie[output];
            yankee = michal.bind(tangon)(yankee);
            result = yankee.intl;
            kiloes = result.string;
            yankee = golfie[output];
            yankee = michal.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.cW1nr6;
            yankee = kiloes.bind(result)(yankee);
            oscard['children'] = yankee;
            oscard = zuuluu.bind(tangon)(offset, oscard);
            verify[2] = oscard;
            oscard = golfie[romeon];
            oscard = michal.bind(tangon)(oscard);
            offset = oscard.FormText;
            oscard = {};
            yankee = echoed.info;
            oscard['style'] = yankee;
            yankee = golfie[output];
            yankee = michal.bind(tangon)(yankee);
            source = yankee.intl;
            result = source.format;
            yankee = golfie[output];
            yankee = michal.bind(tangon)(yankee);
            yankee = yankee.t;
            kiloes = yankee.eswIfn;
            yankee = {};
            ctrled = function(argFoo, argBar) { // Original name: learnMoreHook
                report = _closure1_slot8;
                oscard = _closure1_slot0;
                golfie = _closure1_slot1;
                entity = 9;
                entity = golfie[entity];
                tangon = undefined;
                entity = oscard.bind(tangon)(entity);
                zuuluu = entity.Text;
                michal = {'onPress': null, 'variant': 'text-sm/medium', 'color': 'text-link'};
                entity = 10;
                entity = golfie[entity];
                entity = oscard.bind(tangon)(entity);
                entity = entity.handleOpenLearnMoreLink;
                michal['onPress'] = entity;
                entity = argFoo;
                michal['children'] = entity;
                entity = argBar;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            yankee['learnMoreHook'] = ctrled;
            yankee = result.bind(source)(kiloes, yankee);
            oscard['children'] = yankee;
            oscard = zuuluu.bind(tangon)(offset, oscard);
            verify[3] = oscard;
            oscard = golfie[romeon];
            oscard = michal.bind(tangon)(oscard);
            yankee = oscard.FormTitle;
            offset = {};
            oscard = golfie[output];
            oscard = michal.bind(tangon)(oscard);
            result = oscard.intl;
            kiloes = result.string;
            oscard = golfie[output];
            oscard = michal.bind(tangon)(oscard);
            oscard = oscard.t;
            oscard = oscard.0t2wRU;
            oscard = kiloes.bind(result)(oscard);
            offset['title'] = oscard;
            oscard = true;
            offset['thinTitle'] = oscard;
            offset = zuuluu.bind(tangon)(yankee, offset);
            verify[4] = offset;
            offset = golfie[romeon];
            offset = michal.bind(tangon)(offset);
            yankee = offset.FormRow;
            offset = {};
            kiloes = echoed.formRow;
            offset['DEPRECATED_style'] = kiloes;
            kiloes = golfie[romeon];
            kiloes = michal.bind(tangon)(kiloes);
            kiloes = kiloes.FormRow;
            result = kiloes.Label;
            kiloes = {};
            source = echoed.formText;
            kiloes['style'] = source;
            source = golfie[output];
            source = michal.bind(tangon)(source);
            vacuum = source.intl;
            ctrled = vacuum.string;
            source = golfie[output];
            source = michal.bind(tangon)(source);
            source = source.t;
            source = source.eJnn09;
            source = ctrled.bind(vacuum)(source);
            kiloes['text'] = source;
            kiloes = zuuluu.bind(tangon)(result, kiloes);
            offset['label'] = kiloes;
            kiloes = 9;
            result = golfie[kiloes];
            result = michal.bind(tangon)(result);
            source = result.Text;
            result = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
            ctrled = golfie[output];
            ctrled = michal.bind(tangon)(ctrled);
            sequen = ctrled.intl;
            vacuum = sequen.string;
            ctrled = golfie[output];
            ctrled = michal.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.X7pIKC;
            ctrled = vacuum.bind(sequen)(ctrled);
            result['children'] = ctrled;
            result = zuuluu.bind(tangon)(source, result);
            offset['subLabel'] = result;
            offset['onPress'] = sizing;
            sizing = golfie[romeon];
            sizing = michal.bind(tangon)(sizing);
            sizing = sizing.FormRow;
            result = sizing.Checkbox;
            sizing = {};
            sizing['selected'] = update;
            sizing = zuuluu.bind(tangon)(result, sizing);
            offset['trailing'] = sizing;
            offset = zuuluu.bind(tangon)(yankee, offset);
            verify[5] = offset;
            offset = golfie[romeon];
            offset = michal.bind(tangon)(offset);
            yankee = offset.FormRow;
            offset = {};
            sizing = echoed.formRow;
            offset['DEPRECATED_style'] = sizing;
            sizing = golfie[romeon];
            sizing = michal.bind(tangon)(sizing);
            sizing = sizing.FormRow;
            result = sizing.Label;
            sizing = {};
            echoed = echoed.formText;
            sizing['style'] = echoed;
            echoed = golfie[output];
            echoed = michal.bind(tangon)(echoed);
            source = echoed.intl;
            update = source.string;
            echoed = golfie[output];
            echoed = michal.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.dI4d4e;
            echoed = update.bind(source)(echoed);
            sizing['text'] = echoed;
            sizing = zuuluu.bind(tangon)(result, sizing);
            offset['label'] = sizing;
            kiloes = golfie[kiloes];
            kiloes = michal.bind(tangon)(kiloes);
            sizing = kiloes.Text;
            kiloes = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
            result = golfie[output];
            result = michal.bind(tangon)(result);
            echoed = result.intl;
            result = echoed.string;
            output = golfie[output];
            output = michal.bind(tangon)(output);
            output = output.t;
            output = output.ilGsHB;
            output = result.bind(echoed)(output);
            kiloes['children'] = output;
            kiloes = zuuluu.bind(tangon)(sizing, kiloes);
            offset['subLabel'] = kiloes;
            offset['onPress'] = foxtra;
            romeon = golfie[romeon];
            romeon = michal.bind(tangon)(romeon);
            romeon = romeon.FormRow;
            foxtra = romeon.Checkbox;
            romeon = {};
            romeon['selected'] = backup;
            romeon = zuuluu.bind(tangon)(foxtra, romeon);
            offset['trailing'] = romeon;
            offset = zuuluu.bind(tangon)(yankee, offset);
            verify[6] = offset;
            entity['children'] = verify;
            report = option.bind(tangon)(report, entity);
            entity = 11;
            entity = golfie[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.ActionSheet;
            entity = {};
            entity['startExpanded'] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();