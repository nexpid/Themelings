// app/modules/nuf/native/components/value_props/ValuePropsHeader.tsx
export default (function(_, argBar, __, argCor, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot3 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 120;
    verify['marginTop'] = offset;
    tangon['header'] = verify;
    verify = {'lineHeight': 30, 'textAlign': 'center'};
    tangon['title'] = verify;
    verify = {'lineHeight': 20, 'textAlign': 'center', 'marginTop': 8};
    tangon['subtitle'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/nuf/native/components/value_props/ValuePropsHeader.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: ValuePropsHeader
        entity = _closure1_slot5;
        tangon = undefined;
        offset = entity.bind(tangon)();
        zuuluu = _closure1_slot4;
        michal = _closure1_slot2;
        entity = {};
        oscard = offset.header;
        entity['style'] = oscard;
        option = _closure1_slot3;
        romeon = _closure1_slot0;
        foxtra = _closure1_slot1;
        oscard = 4;
        report = foxtra[oscard];
        report = romeon.bind(tangon)(report);
        golfie = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        verify = offset.title;
        report['style'] = verify;
        verify = 5;
        yankee = foxtra[verify];
        yankee = romeon.bind(tangon)(yankee);
        kiloes = yankee.intl;
        backup = kiloes.string;
        yankee = foxtra[verify];
        yankee = romeon.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.GG2T6u;
        yankee = backup.bind(kiloes)(yankee);
        report['children'] = yankee;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        oscard = foxtra[oscard];
        oscard = romeon.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
        offset = offset.subtitle;
        oscard['style'] = offset;
        offset = foxtra[verify];
        offset = romeon.bind(tangon)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtra[verify];
        verify = romeon.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.MbhY+v;
        verify = offset.bind(yankee)(verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();