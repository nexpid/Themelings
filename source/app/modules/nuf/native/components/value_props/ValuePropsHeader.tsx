// app/modules/nuf/native/components/value_props/ValuePropsHeader.tsx
export default (function(_, argBar, __, argCorge, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot2 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot3 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 120;
    verify['marginTop'] = offset;
    tango['header'] = verify;
    verify = {'lineHeight': 30, 'textAlign': 'center'};
    tango['title'] = verify;
    verify = {'lineHeight': 20, 'textAlign': 'center', 'marginTop': 8};
    tango['subtitle'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = 6;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/nuf/native/components/value_props/ValuePropsHeader.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: ValuePropsHeader
        entity = _closure1_slot5;
        tango = undefined;
        offset = entity.bind(tango)();
        zulu = _closure1_slot4;
        mike = _closure1_slot2;
        entity = {};
        oscar = offset.header;
        entity['style'] = oscar;
        options = _closure1_slot3;
        romeo = _closure1_slot0;
        foxtrot = _closure1_slot1;
        oscar = 4;
        report = foxtrot[oscar];
        report = romeo.bind(tango)(report);
        golf = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        verify = offset.title;
        report['style'] = verify;
        verify = 5;
        yankee = foxtrot[verify];
        yankee = romeo.bind(tango)(yankee);
        kilo = yankee.intl;
        backup = kilo.string;
        yankee = foxtrot[verify];
        yankee = romeo.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.GG2T6u;
        yankee = backup.bind(kilo)(yankee);
        report['children'] = yankee;
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        oscar = foxtrot[oscar];
        oscar = romeo.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
        offset = offset.subtitle;
        oscar['style'] = offset;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        verify = verify.t;
        verify = verify.MbhY+v;
        verify = offset.bind(yankee)(verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();