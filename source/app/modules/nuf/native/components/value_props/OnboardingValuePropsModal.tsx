// app/modules/nuf/native/components/value_props/OnboardingValuePropsModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golfie;
    michal = function(argFoo) { // Original name: OnboardingValuePropsScene
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.onComplete;
            var _closure2_slot0 = entity;
            entity = _closure1_slot7;
            tangon = undefined;
            kiloes = entity.bind(tangon)();
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 5;
            entity = zuuluu[entity];
            report = michal.bind(tangon)(entity);
            zuuluu = report.useExperiment;
            michal = {};
            entity = '3ffc3c_1';
            michal['location'] = entity;
            entity = {};
            oscard = false;
            entity['autoTrackExposure'] = oscard;
            entity = zuuluu.bind(report)(michal, entity);
            offset = entity.showHeader;
            verify = entity.steps;
            zuuluu = _closure1_slot6;
            michal = _closure1_slot4;
            entity = {};
            report = kiloes.container;
            entity['style'] = report;
            oscard = offset;
            if(!oscard) { _fun00002_ip = 150; continue _fun00001 }
 118:
            option = _closure1_slot5;
            golfie = _closure1_slot1;
            foxtra = _closure1_slot2;
            report = 6;
            report = foxtra[report];
            golfie = golfie.bind(tangon)(report);
            report = {};
            oscard = option.bind(tangon)(golfie, report);
 150:
            report = new Array(3);
            report[0] = oscard;
            option = _closure1_slot5;
            backup = _closure1_slot1;
            sizing = _closure1_slot2;
            oscard = 7;
            oscard = sizing[oscard];
            golfie = backup.bind(tangon)(oscard);
            oscard = {};
            offset = !offset;
            oscard['isLargeVariant'] = offset;
            oscard['steps'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            option = _closure1_slot5;
            golfie = _closure1_slot4;
            oscard = {};
            foxtra = 8;
            verify = sizing[foxtra];
            offset = backup.bind(tangon)(verify);
            verify = {};
            kiloes = kiloes.button;
            verify['style'] = kiloes;
            foxtra = sizing[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            foxtra = foxtra.Colors;
            foxtra = foxtra.BRAND;
            verify['color'] = foxtra;
            kiloes = _closure1_slot0;
            romeon = 9;
            foxtra = sizing[romeon];
            foxtra = kiloes.bind(tangon)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            romeon = sizing[romeon];
            romeon = kiloes.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.FxpjsL;
            romeon = foxtra.bind(backup)(romeon);
            verify['text'] = romeon;
            yankee = function() { // Original name: onPress
                tangon = _closure2_slot0;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 7;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = michal.getStepsViewedCount;
                michal = entity.bind(michal)();
                entity = false;
                entity = tangon.bind(zuuluu)(entity, michal);
                return entity;
            };
            verify['onPress'] = yankee;
            verify = option.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot8 = michal;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    entity = 0;
    option = golfie[entity];
    report = argCor;
    entity = undefined;
    report = report.bind(entity)(option);
    var _closure1_slot3 = report;
    report = 1;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.View;
    var _closure1_slot4 = report;
    report = 2;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.ModalAnimation;
    report = 3;
    verify = golfie[report];
    verify = oscard.bind(entity)(verify);
    verify = verify.jsx;
    var _closure1_slot5 = verify;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot6 = report;
    report = 4;
    report = golfie[report];
    offset = oscard.bind(entity)(report);
    verify = offset.createStyles;
    report = {};
    yankee = {'display': 'flex', 'flex': 1, 'paddingHorizontal': 16, 'marginTop': 0, 'justifyContent': 'center', 'alignContent': 'center'};
    report['container'] = yankee;
    yankee = {};
    romeon = 60;
    yankee['marginBottom'] = romeon;
    report['button'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot7 = report;
    tangon = function(argFoo) { // Original name: OnboardingValuePropsModal
        entity = argFoo;
        report = entity.onComplete;
        golfie = _closure1_slot1;
        oscard = _closure1_slot2;
        zuuluu = 11;
        zuuluu = oscard[zuuluu];
        tangon = undefined;
        zuuluu = golfie.bind(tangon)(zuuluu);
        option = zuuluu.bind(tangon)(report);
        var _closure2_slot0 = option;
        golfie = _closure1_slot3;
        report = golfie.useMemo;
        zuuluu = new Array(1);
        zuuluu[0] = option;
        michal = function() {
            zuuluu = _closure2_slot0;
            michal = function(argFoo) {
                entity = argFoo;
                var _closure4_slot0 = entity;
                entity = {};
                zuuluu = {'title': '', 'fullscreen': true};
                tangon = function() { // Original name: headerRight
                    tangon = _closure1_slot5;
                    option = _closure1_slot0;
                    verify = _closure1_slot2;
                    entity = 10;
                    entity = verify[entity];
                    zuuluu = undefined;
                    entity = option.bind(zuuluu)(entity);
                    michal = entity.HeaderActionButton;
                    entity = {};
                    report = function() { // Original name: onPress
                        tangon = _closure4_slot0;
                        michal = _closure1_slot0;
                        zuuluu = _closure1_slot2;
                        entity = 7;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)(entity);
                        entity = michal.getStepsViewedCount;
                        michal = entity.bind(michal)();
                        entity = true;
                        entity = tangon.bind(zuuluu)(entity, michal);
                        return entity;
                    };
                    entity['onPress'] = report;
                    report = 9;
                    oscard = verify[report];
                    oscard = option.bind(zuuluu)(oscard);
                    golfie = oscard.intl;
                    oscard = golfie.string;
                    report = verify[report];
                    report = option.bind(zuuluu)(report);
                    report = report.t;
                    report = report.5WxrcX;
                    report = oscard.bind(golfie)(report);
                    entity['text'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                zuuluu['headerRight'] = tangon;
                michal = function() { // Original name: render
                    tangon = _closure1_slot5;
                    zuuluu = _closure1_slot8;
                    michal = {};
                    entity = _closure4_slot0;
                    michal['onComplete'] = entity;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                zuuluu['render'] = michal;
                michal = 'ONBOARDING_VALUE_PROPS_SCREEN';
                entity[michal] = zuuluu;
                return entity;
            };
            entity = undefined;
            entity = michal.bind(entity)(zuuluu);
            return entity;
        };
        report = report.bind(golfie)(michal, zuuluu);
        zuuluu = _closure1_slot5;
        michal = _closure1_slot0;
        entity = 12;
        entity = oscard[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Navigator;
        entity = {};
        entity['screens'] = report;
        report = 'ONBOARDING_VALUE_PROPS_SCREEN';
        entity['initialRouteName'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    report = {};
    option = option.SLIDE_IN_OUT;
    report['animation'] = option;
    tangon['modalConfig'] = report;
    report = 13;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/nuf/native/components/value_props/OnboardingValuePropsModal.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    zuuluu['OnboardingValuePropsScene'] = michal;
    return entity;
})();