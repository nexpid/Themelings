// app/modules/nuf/native/components/RedesignDiscoverabilityLanding.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot4 = tangon;
    romeon = 2;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = offset;
    offset = 4;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = foxtra;
    tangon['container'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['paddingTop'] = foxtra;
    tangon['topContainer'] = verify;
    verify = {};
    verify['flexGrow'] = romeon;
    tangon['growContainer'] = verify;
    verify = {};
    romeon = '100%';
    verify['width'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_32;
    verify['marginBottom'] = romeon;
    tangon['image'] = verify;
    verify = {};
    romeon = 'center';
    verify['textAlign'] = romeon;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['marginBottom'] = foxtra;
    tangon['title'] = verify;
    verify = {};
    verify['textAlign'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_32;
    verify['marginBottom'] = offset;
    tangon['subtitle'] = verify;
    verify = {'paddingHorizontal': 16, 'marginTop': 8, 'marginBottom': 24, 'textAlign': 'center'};
    tangon['info'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/nuf/native/components/RedesignDiscoverabilityLanding.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: RedesignDiscoverabilityLanding
        entity = _closure1_slot7;
        tangon = undefined;
        yankee = entity.bind(tangon)();
        entity = argFoo;
        verify = entity.onNext;
        output = _closure1_slot1;
        backup = _closure1_slot2;
        entity = 5;
        entity = backup[entity];
        entity = output.bind(tangon)(entity);
        entity = entity.bind(tangon)();
        option = entity.bottom;
        zuuluu = _closure1_slot6;
        michal = _closure1_slot4;
        entity = {};
        oscard = yankee.container;
        entity['style'] = oscard;
        oscard = false;
        entity['alwaysBounceVertical'] = oscard;
        oscard = {};
        golfie = 2;
        oscard['flexGrow'] = golfie;
        foxtra = _closure1_slot0;
        golfie = 6;
        golfie = backup[golfie];
        golfie = foxtra.bind(tangon)(golfie);
        offset = golfie.NAV_BAR_HEIGHT;
        golfie = 32;
        golfie = offset + golfie;
        oscard['paddingTop'] = golfie;
        golfie = 16;
        golfie = option + golfie;
        oscard['paddingBottom'] = golfie;
        golfie = 4;
        golfie = backup[golfie];
        golfie = output.bind(tangon)(golfie);
        golfie = golfie.spacing;
        golfie = golfie.PX_16;
        oscard['paddingHorizontal'] = golfie;
        entity['contentContainerStyle'] = oscard;
        option = _closure1_slot5;
        golfie = _closure1_slot3;
        report = {};
        oscard = yankee.topContainer;
        report['style'] = oscard;
        oscard = option.bind(tangon)(golfie, report);
        report = new Array(7);
        report[0] = oscard;
        oscard = 7;
        offset = backup[oscard];
        offset = foxtra.bind(tangon)(offset);
        kiloes = offset.Text;
        romeon = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        offset = yankee.title;
        romeon['style'] = offset;
        offset = 8;
        sizing = backup[offset];
        sizing = foxtra.bind(tangon)(sizing);
        echoed = sizing.intl;
        result = echoed.string;
        sizing = backup[offset];
        sizing = foxtra.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.n8nw6u;
        sizing = result.bind(echoed)(sizing);
        romeon['children'] = sizing;
        romeon = option.bind(tangon)(kiloes, romeon);
        report[1] = romeon;
        romeon = backup[oscard];
        romeon = foxtra.bind(tangon)(romeon);
        kiloes = romeon.Text;
        romeon = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
        sizing = yankee.subtitle;
        romeon['style'] = sizing;
        sizing = backup[offset];
        sizing = foxtra.bind(tangon)(sizing);
        echoed = sizing.intl;
        result = echoed.string;
        sizing = backup[offset];
        sizing = foxtra.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.KMW0kJ;
        sizing = result.bind(echoed)(sizing);
        romeon['children'] = sizing;
        romeon = option.bind(tangon)(kiloes, romeon);
        report[2] = romeon;
        romeon = 9;
        romeon = backup[romeon];
        kiloes = output.bind(tangon)(romeon);
        romeon = {};
        sizing = 'contain';
        romeon['resizeMode'] = sizing;
        sizing = yankee.image;
        romeon['style'] = sizing;
        sizing = 10;
        sizing = backup[sizing];
        sizing = output.bind(tangon)(sizing);
        romeon['source'] = sizing;
        romeon = option.bind(tangon)(kiloes, romeon);
        report[3] = romeon;
        oscard = backup[oscard];
        oscard = foxtra.bind(tangon)(oscard);
        romeon = oscard.Text;
        oscard = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        kiloes = yankee.info;
        oscard['style'] = kiloes;
        kiloes = backup[offset];
        kiloes = foxtra.bind(tangon)(kiloes);
        output = kiloes.intl;
        sizing = output.string;
        kiloes = backup[offset];
        kiloes = foxtra.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.ci12MD;
        sizing = sizing.bind(output)(kiloes);
        kiloes = new Array(3);
        kiloes[0] = sizing;
        sizing = ' ';
        kiloes[1] = sizing;
        sizing = backup[offset];
        sizing = foxtra.bind(tangon)(sizing);
        echoed = sizing.intl;
        result = echoed.format;
        sizing = backup[offset];
        sizing = foxtra.bind(tangon)(sizing);
        sizing = sizing.t;
        output = sizing.VcSQ4u;
        sizing = {};
        update = function(argFoo, argBar) { // Original name: learnMoreHook
            report = _closure1_slot5;
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 7;
            entity = golfie[entity];
            tangon = undefined;
            entity = oscard.bind(tangon)(entity);
            zuuluu = entity.Text;
            michal = {'onPress': null, 'variant': 'text-sm/medium', 'color': 'text-link'};
            entity = 11;
            entity = golfie[entity];
            entity = oscard.bind(tangon)(entity);
            entity = entity.handleOpenLearnMoreLink;
            michal['onPress'] = entity;
            entity = argFoo;
            michal['children'] = entity;
            entity = argBar;
            entity = report.bind(tangon)(zuuluu, michal, entity);
            return entity;
        };
        sizing['learnMoreHook'] = update;
        sizing = result.bind(echoed)(output, sizing);
        kiloes[2] = sizing;
        oscard['children'] = kiloes;
        oscard = zuuluu.bind(tangon)(romeon, oscard);
        report[4] = oscard;
        oscard = {};
        yankee = yankee.growContainer;
        oscard['style'] = yankee;
        oscard = option.bind(tangon)(golfie, oscard);
        report[5] = oscard;
        oscard = 12;
        oscard = backup[oscard];
        oscard = foxtra.bind(tangon)(oscard);
        golfie = oscard.Button;
        oscard = {'variant': 'primary', 'size': 'lg'};
        yankee = backup[offset];
        yankee = foxtra.bind(tangon)(yankee);
        romeon = yankee.intl;
        yankee = romeon.string;
        offset = backup[offset];
        offset = foxtra.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.gHPk3N;
        offset = yankee.bind(romeon)(offset);
        oscard['text'] = offset;
        oscard['onPress'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[6] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();