// app/modules/nuf/native/components/RedesignDiscoverabilityLanding.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot3 = golf;
    tango = tango.ScrollView;
    var _closure1_slot4 = tango;
    romeo = 2;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot5 = tango;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flex'] = offset;
    offset = 4;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = foxtrot;
    tango['container'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['paddingTop'] = foxtrot;
    tango['topContainer'] = verify;
    verify = {};
    verify['flexGrow'] = romeo;
    tango['growContainer'] = verify;
    verify = {};
    romeo = '100%';
    verify['width'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_32;
    verify['marginBottom'] = romeo;
    tango['image'] = verify;
    verify = {};
    romeo = 'center';
    verify['textAlign'] = romeo;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['marginBottom'] = foxtrot;
    tango['title'] = verify;
    verify = {};
    verify['textAlign'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_32;
    verify['marginBottom'] = offset;
    tango['subtitle'] = verify;
    verify = {'paddingHorizontal': 16, 'marginTop': 8, 'marginBottom': 24, 'textAlign': 'center'};
    tango['info'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/nuf/native/components/RedesignDiscoverabilityLanding.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: RedesignDiscoverabilityLanding
        entity = _closure1_slot7;
        tango = undefined;
        yankee = entity.bind(tango)();
        entity = argFoo;
        verify = entity.onNext;
        output = _closure1_slot1;
        backup = _closure1_slot2;
        entity = 5;
        entity = backup[entity];
        entity = output.bind(tango)(entity);
        entity = entity.bind(tango)();
        options = entity.bottom;
        zulu = _closure1_slot6;
        mike = _closure1_slot4;
        entity = {};
        oscar = yankee.container;
        entity['style'] = oscar;
        oscar = false;
        entity['alwaysBounceVertical'] = oscar;
        oscar = {};
        golf = 2;
        oscar['flexGrow'] = golf;
        foxtrot = _closure1_slot0;
        golf = 6;
        golf = backup[golf];
        golf = foxtrot.bind(tango)(golf);
        offset = golf.NAV_BAR_HEIGHT;
        golf = 32;
        golf = offset + golf;
        oscar['paddingTop'] = golf;
        golf = 16;
        golf = options + golf;
        oscar['paddingBottom'] = golf;
        golf = 4;
        golf = backup[golf];
        golf = output.bind(tango)(golf);
        golf = golf.spacing;
        golf = golf.PX_16;
        oscar['paddingHorizontal'] = golf;
        entity['contentContainerStyle'] = oscar;
        options = _closure1_slot5;
        golf = _closure1_slot3;
        report = {};
        oscar = yankee.topContainer;
        report['style'] = oscar;
        oscar = options.bind(tango)(golf, report);
        report = new Array(7);
        report[0] = oscar;
        oscar = 7;
        offset = backup[oscar];
        offset = foxtrot.bind(tango)(offset);
        kilo = offset.Text;
        romeo = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        offset = yankee.title;
        romeo['style'] = offset;
        offset = 8;
        sizing = backup[offset];
        sizing = foxtrot.bind(tango)(sizing);
        echo = sizing.intl;
        result = echo.string;
        sizing = backup[offset];
        sizing = foxtrot.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.n8nw6u;
        sizing = result.bind(echo)(sizing);
        romeo['children'] = sizing;
        romeo = options.bind(tango)(kilo, romeo);
        report[1] = romeo;
        romeo = backup[oscar];
        romeo = foxtrot.bind(tango)(romeo);
        kilo = romeo.Text;
        romeo = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
        sizing = yankee.subtitle;
        romeo['style'] = sizing;
        sizing = backup[offset];
        sizing = foxtrot.bind(tango)(sizing);
        echo = sizing.intl;
        result = echo.string;
        sizing = backup[offset];
        sizing = foxtrot.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.KMW0kJ;
        sizing = result.bind(echo)(sizing);
        romeo['children'] = sizing;
        romeo = options.bind(tango)(kilo, romeo);
        report[2] = romeo;
        romeo = 9;
        romeo = backup[romeo];
        kilo = output.bind(tango)(romeo);
        romeo = {};
        sizing = 'contain';
        romeo['resizeMode'] = sizing;
        sizing = yankee.image;
        romeo['style'] = sizing;
        sizing = 10;
        sizing = backup[sizing];
        sizing = output.bind(tango)(sizing);
        romeo['source'] = sizing;
        romeo = options.bind(tango)(kilo, romeo);
        report[3] = romeo;
        oscar = backup[oscar];
        oscar = foxtrot.bind(tango)(oscar);
        romeo = oscar.Text;
        oscar = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        kilo = yankee.info;
        oscar['style'] = kilo;
        kilo = backup[offset];
        kilo = foxtrot.bind(tango)(kilo);
        output = kilo.intl;
        sizing = output.string;
        kilo = backup[offset];
        kilo = foxtrot.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.ci12MD;
        sizing = sizing.bind(output)(kilo);
        kilo = new Array(3);
        kilo[0] = sizing;
        sizing = ' ';
        kilo[1] = sizing;
        sizing = backup[offset];
        sizing = foxtrot.bind(tango)(sizing);
        echo = sizing.intl;
        result = echo.format;
        sizing = backup[offset];
        sizing = foxtrot.bind(tango)(sizing);
        sizing = sizing.t;
        output = sizing.VcSQ4u;
        sizing = {};
        update = function(argFoo, argBar) { // Original name: learnMoreHook
            report = _closure1_slot5;
            oscar = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 7;
            entity = golf[entity];
            tango = undefined;
            entity = oscar.bind(tango)(entity);
            zulu = entity.Text;
            mike = {'onPress': null, 'variant': 'text-sm/medium', 'color': 'text-link'};
            entity = 11;
            entity = golf[entity];
            entity = oscar.bind(tango)(entity);
            entity = entity.handleOpenLearnMoreLink;
            mike['onPress'] = entity;
            entity = argFoo;
            mike['children'] = entity;
            entity = argBar;
            entity = report.bind(tango)(zulu, mike, entity);
            return entity;
        };
        sizing['learnMoreHook'] = update;
        sizing = result.bind(echo)(output, sizing);
        kilo[2] = sizing;
        oscar['children'] = kilo;
        oscar = zulu.bind(tango)(romeo, oscar);
        report[4] = oscar;
        oscar = {};
        yankee = yankee.growContainer;
        oscar['style'] = yankee;
        oscar = options.bind(tango)(golf, oscar);
        report[5] = oscar;
        oscar = 12;
        oscar = backup[oscar];
        oscar = foxtrot.bind(tango)(oscar);
        golf = oscar.Button;
        oscar = {'variant': 'primary', 'size': 'lg'};
        yankee = backup[offset];
        yankee = foxtrot.bind(tango)(yankee);
        romeo = yankee.intl;
        yankee = romeo.string;
        offset = backup[offset];
        offset = foxtrot.bind(tango)(offset);
        offset = offset.t;
        offset = offset.gHPk3N;
        offset = yankee.bind(romeo)(offset);
        oscar['text'] = offset;
        oscar['onPress'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[6] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();