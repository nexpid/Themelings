// app/modules/nuf/native/components/notification/NotificationReactivationActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot4 = golf;
    tango = tango.Image;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.EventActionType;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot7 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 6;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['marginHorizontal'] = romeo;
    romeo = 'center';
    verify['alignItems'] = romeo;
    tango['container'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_24;
    verify['marginVertical'] = foxtrot;
    foxtrot = 120;
    verify['height'] = foxtrot;
    tango['image'] = verify;
    verify = {};
    verify['textAlign'] = romeo;
    tango['title'] = verify;
    verify = {};
    verify['textAlign'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_8;
    verify['marginTop'] = romeo;
    tango['subtitle'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['marginTop'] = offset;
    tango['buttons'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 16;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/nuf/native/components/notification/NotificationReactivationActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: NotificationReactivationActionSheet
        mike = argFoo;
        oscar = mike.location;
        var _closure2_slot0 = oscar;
        mike = _closure1_slot10;
        tango = undefined;
        yankee = mike.bind(tango)();
        report = _closure1_slot3;
        golf = report.useCallback;
        zulu = new Array(1);
        zulu[0] = oscar;
        mike = function() {
            tango = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 8;
            zulu = zulu[entity];
            entity = undefined;
            oscar = tango.bind(entity)(zulu);
            report = oscar.requestPushNotificationPermission;
            mike = _closure1_slot6;
            tango = mike.ALLOW_TO_REQUEST;
            zulu = _closure2_slot0;
            mike = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 9;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.hideActionSheet;
                mike = mike.bind(zulu)();
                return entity;
            };
            mike = report.bind(oscar)(tango, zulu, mike);
            return entity;
        };
        sizing = golf.bind(report)(mike, zulu);
        zulu = report.useCallback;
        mike = new Array(1);
        mike[0] = oscar;
        entity = function() {
            entity = _closure1_slot6;
            verify = entity.SKIP_STEP;
            options = _closure2_slot0;
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            entity = 7;
            report = tango[entity];
            entity = undefined;
            golf = zulu.bind(entity)(report);
            oscar = golf.track;
            mike = _closure1_slot7;
            report = mike.NOTIFICATION_PERMISSION_PREPROMPT_ACKED;
            mike = {};
            mike['action_type'] = verify;
            mike['action_location'] = options;
            mike['permission_granted'] = entity;
            mike = oscar.bind(golf)(report, mike);
            mike = 9;
            mike = tango[mike];
            zulu = zulu.bind(entity)(mike);
            mike = zulu.hideActionSheet;
            mike = mike.bind(zulu)();
            return entity;
        };
        backup = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot8;
        result = _closure1_slot0;
        echo = _closure1_slot2;
        entity = 10;
        entity = echo[entity];
        entity = result.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        golf = _closure1_slot9;
        oscar = _closure1_slot4;
        report = {};
        options = yankee.container;
        report['style'] = options;
        verify = _closure1_slot5;
        options = {};
        romeo = yankee.image;
        options['style'] = romeo;
        romeo = _closure1_slot1;
        offset = 11;
        offset = echo[offset];
        offset = romeo.bind(tango)(offset);
        options['source'] = offset;
        offset = 'contain';
        options['resizeMode'] = offset;
        verify = zulu.bind(tango)(verify, options);
        options = new Array(4);
        options[0] = verify;
        verify = 12;
        offset = echo[verify];
        offset = result.bind(tango)(offset);
        romeo = offset.Text;
        offset = {};
        foxtrot = yankee.title;
        offset['style'] = foxtrot;
        foxtrot = 'heading-xl/bold';
        offset['variant'] = foxtrot;
        kilo = 13;
        foxtrot = echo[kilo];
        foxtrot = result.bind(tango)(foxtrot);
        update = foxtrot.intl;
        output = update.string;
        foxtrot = echo[kilo];
        foxtrot = result.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.a4bgOz;
        foxtrot = output.bind(update)(foxtrot);
        offset['children'] = foxtrot;
        offset = zulu.bind(tango)(romeo, offset);
        options[1] = offset;
        verify = echo[verify];
        verify = result.bind(tango)(verify);
        offset = verify.Text;
        verify = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        romeo = yankee.subtitle;
        verify['style'] = romeo;
        romeo = echo[kilo];
        romeo = result.bind(tango)(romeo);
        output = romeo.intl;
        foxtrot = output.string;
        romeo = echo[kilo];
        romeo = result.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.rW5gw8;
        romeo = foxtrot.bind(output)(romeo);
        verify['children'] = romeo;
        verify = zulu.bind(tango)(offset, verify);
        options[2] = verify;
        verify = 14;
        verify = echo[verify];
        verify = result.bind(tango)(verify);
        offset = verify.ButtonGroup;
        verify = {};
        yankee = yankee.buttons;
        verify['style'] = yankee;
        romeo = 15;
        yankee = echo[romeo];
        yankee = result.bind(tango)(yankee);
        foxtrot = yankee.Button;
        yankee = {};
        output = echo[kilo];
        output = result.bind(tango)(output);
        source = output.intl;
        update = source.string;
        output = echo[kilo];
        output = result.bind(tango)(output);
        output = output.t;
        output = output.a4bgOz;
        output = update.bind(source)(output);
        yankee['text'] = output;
        yankee['onPress'] = sizing;
        foxtrot = zulu.bind(tango)(foxtrot, yankee);
        yankee = new Array(2);
        yankee[0] = foxtrot;
        romeo = echo[romeo];
        romeo = result.bind(tango)(romeo);
        foxtrot = romeo.Button;
        romeo = {};
        sizing = echo[kilo];
        sizing = result.bind(tango)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kilo = echo[kilo];
        kilo = result.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo./L3koq;
        kilo = sizing.bind(output)(kilo);
        romeo['text'] = kilo;
        romeo['onPress'] = backup;
        backup = 'secondary';
        romeo['variant'] = backup;
        romeo = zulu.bind(tango)(foxtrot, romeo);
        yankee[1] = romeo;
        verify['children'] = yankee;
        verify = golf.bind(tango)(offset, verify);
        options[3] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();