// app/modules/nuf/native/components/notification/NotificationReactivationActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    tangon = tangon.Image;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.EventActionType;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot7 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['marginHorizontal'] = romeon;
    romeon = 'center';
    verify['alignItems'] = romeon;
    tangon['container'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    verify['marginVertical'] = foxtra;
    foxtra = 120;
    verify['height'] = foxtra;
    tangon['image'] = verify;
    verify = {};
    verify['textAlign'] = romeon;
    tangon['title'] = verify;
    verify = {};
    verify['textAlign'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['marginTop'] = romeon;
    tangon['subtitle'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['marginTop'] = offset;
    tangon['buttons'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 16;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/nuf/native/components/notification/NotificationReactivationActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: NotificationReactivationActionSheet
        michal = argFoo;
        oscard = michal.location;
        var _closure2_slot0 = oscard;
        michal = _closure1_slot10;
        tangon = undefined;
        yankee = michal.bind(tangon)();
        report = _closure1_slot3;
        golfie = report.useCallback;
        zuuluu = new Array(1);
        zuuluu[0] = oscard;
        michal = function() {
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 8;
            zuuluu = zuuluu[entity];
            entity = undefined;
            oscard = tangon.bind(entity)(zuuluu);
            report = oscard.requestPushNotificationPermission;
            michal = _closure1_slot6;
            tangon = michal.ALLOW_TO_REQUEST;
            zuuluu = _closure2_slot0;
            michal = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 9;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            michal = report.bind(oscard)(tangon, zuuluu, michal);
            return entity;
        };
        sizing = golfie.bind(report)(michal, zuuluu);
        zuuluu = report.useCallback;
        michal = new Array(1);
        michal[0] = oscard;
        entity = function() {
            entity = _closure1_slot6;
            verify = entity.SKIP_STEP;
            option = _closure2_slot0;
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            entity = 7;
            report = tangon[entity];
            entity = undefined;
            golfie = zuuluu.bind(entity)(report);
            oscard = golfie.track;
            michal = _closure1_slot7;
            report = michal.NOTIFICATION_PERMISSION_PREPROMPT_ACKED;
            michal = {};
            michal['action_type'] = verify;
            michal['action_location'] = option;
            michal['permission_granted'] = entity;
            michal = oscard.bind(golfie)(report, michal);
            michal = 9;
            michal = tangon[michal];
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.hideActionSheet;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        backup = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot8;
        result = _closure1_slot0;
        echoed = _closure1_slot2;
        entity = 10;
        entity = echoed[entity];
        entity = result.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        golfie = _closure1_slot9;
        oscard = _closure1_slot4;
        report = {};
        option = yankee.container;
        report['style'] = option;
        verify = _closure1_slot5;
        option = {};
        romeon = yankee.image;
        option['style'] = romeon;
        romeon = _closure1_slot1;
        offset = 11;
        offset = echoed[offset];
        offset = romeon.bind(tangon)(offset);
        option['source'] = offset;
        offset = 'contain';
        option['resizeMode'] = offset;
        verify = zuuluu.bind(tangon)(verify, option);
        option = new Array(4);
        option[0] = verify;
        verify = 12;
        offset = echoed[verify];
        offset = result.bind(tangon)(offset);
        romeon = offset.Text;
        offset = {};
        foxtra = yankee.title;
        offset['style'] = foxtra;
        foxtra = 'heading-xl/bold';
        offset['variant'] = foxtra;
        kiloes = 13;
        foxtra = echoed[kiloes];
        foxtra = result.bind(tangon)(foxtra);
        update = foxtra.intl;
        output = update.string;
        foxtra = echoed[kiloes];
        foxtra = result.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.a4bgOz;
        foxtra = output.bind(update)(foxtra);
        offset['children'] = foxtra;
        offset = zuuluu.bind(tangon)(romeon, offset);
        option[1] = offset;
        verify = echoed[verify];
        verify = result.bind(tangon)(verify);
        offset = verify.Text;
        verify = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        romeon = yankee.subtitle;
        verify['style'] = romeon;
        romeon = echoed[kiloes];
        romeon = result.bind(tangon)(romeon);
        output = romeon.intl;
        foxtra = output.string;
        romeon = echoed[kiloes];
        romeon = result.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.rW5gw8;
        romeon = foxtra.bind(output)(romeon);
        verify['children'] = romeon;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[2] = verify;
        verify = 14;
        verify = echoed[verify];
        verify = result.bind(tangon)(verify);
        offset = verify.ButtonGroup;
        verify = {};
        yankee = yankee.buttons;
        verify['style'] = yankee;
        romeon = 15;
        yankee = echoed[romeon];
        yankee = result.bind(tangon)(yankee);
        foxtra = yankee.Button;
        yankee = {};
        output = echoed[kiloes];
        output = result.bind(tangon)(output);
        source = output.intl;
        update = source.string;
        output = echoed[kiloes];
        output = result.bind(tangon)(output);
        output = output.t;
        output = output.a4bgOz;
        output = update.bind(source)(output);
        yankee['text'] = output;
        yankee['onPress'] = sizing;
        foxtra = zuuluu.bind(tangon)(foxtra, yankee);
        yankee = new Array(2);
        yankee[0] = foxtra;
        romeon = echoed[romeon];
        romeon = result.bind(tangon)(romeon);
        foxtra = romeon.Button;
        romeon = {};
        sizing = echoed[kiloes];
        sizing = result.bind(tangon)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kiloes = echoed[kiloes];
        kiloes = result.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes./L3koq;
        kiloes = sizing.bind(output)(kiloes);
        romeon['text'] = kiloes;
        romeon['onPress'] = backup;
        backup = 'secondary';
        romeon['variant'] = backup;
        romeon = zuuluu.bind(tangon)(foxtra, romeon);
        yankee[1] = romeon;
        verify['children'] = yankee;
        verify = golfie.bind(tangon)(offset, verify);
        option[3] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();