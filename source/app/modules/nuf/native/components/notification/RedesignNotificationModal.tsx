// app/modules/nuf/native/components/notification/RedesignNotificationModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = golfie;
    tangon = function(argFoo) { // Original name: RedesignNotificationModal
        michal = argFoo;
        oscard = michal.onComplete;
        var _closure2_slot0 = oscard;
        michal = _closure1_slot11;
        tangon = undefined;
        foxtra = michal.bind(tangon)();
        golfie = _closure1_slot3;
        report = golfie.useCallback;
        zuuluu = new Array(1);
        zuuluu[0] = oscard;
        michal = function() {
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 8;
            zuuluu = zuuluu[entity];
            entity = undefined;
            oscard = tangon.bind(entity)(zuuluu);
            report = oscard.requestPushNotificationPermission;
            zuuluu = _closure1_slot8;
            tangon = zuuluu.ALLOW_TO_REQUEST;
            michal = _closure1_slot7;
            zuuluu = michal.ALERT;
            michal = function() {
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    zuuluu = _closure2_slot0;
                    michal = null;
                    if(!(michal != zuuluu)) { _fun00002_ip = 23; continue _fun00001 }
 13:
                    michal = _closure2_slot0;
                    entity = undefined;
                    entity = michal.bind(entity)();
 23:
                    entity = undefined;
                    return entity;
                }
            };
            michal = report.bind(oscard)(tangon, zuuluu, michal);
            return entity;
        };
        offset = report.bind(golfie)(michal, zuuluu);
        report = _closure1_slot3;
        zuuluu = report.useCallback;
        michal = new Array(1);
        michal[0] = oscard;
        entity = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                report = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 9;
                zuuluu = tangon[entity];
                entity = undefined;
                golfie = report.bind(entity)(zuuluu);
                oscard = golfie.track;
                zuuluu = _closure1_slot9;
                report = zuuluu.NOTIFICATION_PERMISSION_PREPROMPT_ACKED;
                zuuluu = {};
                option = _closure1_slot8;
                option = option.SKIP_STEP;
                zuuluu['action_type'] = option;
                option = _closure1_slot7;
                option = option.ALERT;
                zuuluu['action_location'] = option;
                zuuluu = oscard.bind(golfie)(report, zuuluu);
                zuuluu = _closure1_slot0;
                report = 10;
                report = tangon[report];
                oscard = zuuluu.bind(entity)(report);
                report = oscard.setPushPermissionState;
                michal = _closure1_slot6;
                michal = michal.PROMPT_SKIPPED;
                michal = report.bind(oscard)(michal);
                michal = 8;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.enableProvisionalPushNotification;
                michal = michal.bind(zuuluu)();
                tangon = _closure2_slot0;
                zuuluu = null;
                if(!(zuuluu != tangon)) { _fun00004_ip = 161; continue _fun00003 }
 150:
                zuuluu = _closure2_slot0;
                michal = true;
                michal = zuuluu.bind(entity)(michal);
 161:
                return entity;
            }
        };
        verify = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot10;
        michal = _closure1_slot5;
        entity = {};
        report = foxtra.container;
        entity['style'] = report;
        golfie = _closure1_slot10;
        backup = _closure1_slot1;
        romeon = _closure1_slot2;
        report = 11;
        report = romeon[report];
        oscard = backup.bind(tangon)(report);
        report = {};
        report['onAllow'] = offset;
        report['onDontAllow'] = verify;
        yankee = _closure1_slot10;
        offset = _closure1_slot4;
        verify = {};
        kiloes = 'contain';
        verify['resizeMode'] = kiloes;
        foxtra = foxtra.notificationHeaderImage;
        verify['style'] = foxtra;
        foxtra = 12;
        foxtra = romeon[foxtra];
        foxtra = backup.bind(tangon)(foxtra);
        verify['source'] = foxtra;
        verify = yankee.bind(tangon)(offset, verify);
        report['header'] = verify;
        yankee = _closure1_slot0;
        option = 13;
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        foxtra = verify.intl;
        offset = foxtra.string;
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.3nx0b2;
        verify = offset.bind(foxtra)(verify);
        report['title'] = verify;
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        offset = verify.intl;
        verify = offset.string;
        option = romeon[option];
        option = yankee.bind(tangon)(option);
        option = option.t;
        option = option.Gf7U1d;
        option = verify.bind(offset)(option);
        report['subtitle'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot12 = tangon;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    entity = 0;
    option = golfie[entity];
    report = argCor;
    entity = undefined;
    report = report.bind(entity)(option);
    var _closure1_slot3 = report;
    yankee = 1;
    report = golfie[yankee];
    report = oscard.bind(entity)(report);
    option = report.Image;
    var _closure1_slot4 = option;
    report = report.View;
    var _closure1_slot5 = report;
    report = 2;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.PermissionStateType;
    var _closure1_slot6 = report;
    report = 3;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.EventActionLocation;
    var _closure1_slot7 = option;
    report = report.EventActionType;
    var _closure1_slot8 = report;
    report = 4;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.AnalyticEvents;
    var _closure1_slot9 = report;
    report = 5;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot10 = report;
    report = 6;
    report = golfie[report];
    verify = oscard.bind(entity)(report);
    option = verify.createStyles;
    report = {};
    offset = {};
    offset['flex'] = yankee;
    yankee = 7;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = foxtra;
    yankee = golfie[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_48;
    yankee = -yankee;
    offset['marginTop'] = yankee;
    report['container'] = offset;
    offset = {'position': 'absolute', 'alignSelf': 'center', 'zIndex': 2, 'top': 4294967156, 'height': 156, 'width': 150};
    report['notificationHeaderImage'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot11 = report;
    report = 14;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/nuf/native/components/notification/RedesignNotificationModal.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    michal = function(argFoo) { // Original name: RedesignNotificationScreen
        entity = argFoo;
        entity = entity.route;
        entity = entity.params;
        entity = entity.onComplete;
        tangon = _closure1_slot10;
        zuuluu = _closure1_slot12;
        michal = {};
        michal['onComplete'] = entity;
        entity = undefined;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    zuuluu['RedesignNotificationScreen'] = michal;
    return entity;
})();