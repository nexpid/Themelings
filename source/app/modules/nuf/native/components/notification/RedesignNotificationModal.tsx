// app/modules/nuf/native/components/notification/RedesignNotificationModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    romeo = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = golf;
    tango = function(argFoo) { // Original name: RedesignNotificationModal
        mike = argFoo;
        oscar = mike.onComplete;
        var _closure2_slot0 = oscar;
        mike = _closure1_slot11;
        tango = undefined;
        foxtrot = mike.bind(tango)();
        golf = _closure1_slot3;
        report = golf.useCallback;
        zulu = new Array(1);
        zulu[0] = oscar;
        mike = function() {
            tango = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 8;
            zulu = zulu[entity];
            entity = undefined;
            oscar = tango.bind(entity)(zulu);
            report = oscar.requestPushNotificationPermission;
            zulu = _closure1_slot8;
            tango = zulu.ALLOW_TO_REQUEST;
            mike = _closure1_slot7;
            zulu = mike.ALERT;
            mike = function() {
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    zulu = _closure2_slot0;
                    mike = null;
                    if(!(mike != zulu)) { _fun00002_ip = 23; continue _fun00001 }
 13:
                    mike = _closure2_slot0;
                    entity = undefined;
                    entity = mike.bind(entity)();
 23:
                    entity = undefined;
                    return entity;
                }
            };
            mike = report.bind(oscar)(tango, zulu, mike);
            return entity;
        };
        offset = report.bind(golf)(mike, zulu);
        report = _closure1_slot3;
        zulu = report.useCallback;
        mike = new Array(1);
        mike[0] = oscar;
        entity = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                report = _closure1_slot1;
                tango = _closure1_slot2;
                entity = 9;
                zulu = tango[entity];
                entity = undefined;
                golf = report.bind(entity)(zulu);
                oscar = golf.track;
                zulu = _closure1_slot9;
                report = zulu.NOTIFICATION_PERMISSION_PREPROMPT_ACKED;
                zulu = {};
                options = _closure1_slot8;
                options = options.SKIP_STEP;
                zulu['action_type'] = options;
                options = _closure1_slot7;
                options = options.ALERT;
                zulu['action_location'] = options;
                zulu = oscar.bind(golf)(report, zulu);
                zulu = _closure1_slot0;
                report = 10;
                report = tango[report];
                oscar = zulu.bind(entity)(report);
                report = oscar.setPushPermissionState;
                mike = _closure1_slot6;
                mike = mike.PROMPT_SKIPPED;
                mike = report.bind(oscar)(mike);
                mike = 8;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.enableProvisionalPushNotification;
                mike = mike.bind(zulu)();
                tango = _closure2_slot0;
                zulu = null;
                if(!(zulu != tango)) { _fun00004_ip = 161; continue _fun00003 }
 150:
                zulu = _closure2_slot0;
                mike = true;
                mike = zulu.bind(entity)(mike);
 161:
                return entity;
            }
        };
        verify = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot10;
        mike = _closure1_slot5;
        entity = {};
        report = foxtrot.container;
        entity['style'] = report;
        golf = _closure1_slot10;
        backup = _closure1_slot1;
        romeo = _closure1_slot2;
        report = 11;
        report = romeo[report];
        oscar = backup.bind(tango)(report);
        report = {};
        report['onAllow'] = offset;
        report['onDontAllow'] = verify;
        yankee = _closure1_slot10;
        offset = _closure1_slot4;
        verify = {};
        kilo = 'contain';
        verify['resizeMode'] = kilo;
        foxtrot = foxtrot.notificationHeaderImage;
        verify['style'] = foxtrot;
        foxtrot = 12;
        foxtrot = romeo[foxtrot];
        foxtrot = backup.bind(tango)(foxtrot);
        verify['source'] = foxtrot;
        verify = yankee.bind(tango)(offset, verify);
        report['header'] = verify;
        yankee = _closure1_slot0;
        options = 13;
        verify = romeo[options];
        verify = yankee.bind(tango)(verify);
        foxtrot = verify.intl;
        offset = foxtrot.string;
        verify = romeo[options];
        verify = yankee.bind(tango)(verify);
        verify = verify.t;
        verify = verify.3nx0b2;
        verify = offset.bind(foxtrot)(verify);
        report['title'] = verify;
        verify = romeo[options];
        verify = yankee.bind(tango)(verify);
        offset = verify.intl;
        verify = offset.string;
        options = romeo[options];
        options = yankee.bind(tango)(options);
        options = options.t;
        options = options.Gf7U1d;
        options = verify.bind(offset)(options);
        report['subtitle'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot12 = tango;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, report);
    entity = 0;
    options = golf[entity];
    report = argCorge;
    entity = undefined;
    report = report.bind(entity)(options);
    var _closure1_slot3 = report;
    yankee = 1;
    report = golf[yankee];
    report = oscar.bind(entity)(report);
    options = report.Image;
    var _closure1_slot4 = options;
    report = report.View;
    var _closure1_slot5 = report;
    report = 2;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.PermissionStateType;
    var _closure1_slot6 = report;
    report = 3;
    report = golf[report];
    report = oscar.bind(entity)(report);
    options = report.EventActionLocation;
    var _closure1_slot7 = options;
    report = report.EventActionType;
    var _closure1_slot8 = report;
    report = 4;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.AnalyticEvents;
    var _closure1_slot9 = report;
    report = 5;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot10 = report;
    report = 6;
    report = golf[report];
    verify = oscar.bind(entity)(report);
    options = verify.createStyles;
    report = {};
    offset = {};
    offset['flex'] = yankee;
    yankee = 7;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = foxtrot;
    yankee = golf[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_48;
    yankee = -yankee;
    offset['marginTop'] = yankee;
    report['container'] = offset;
    offset = {'position': 'absolute', 'alignSelf': 'center', 'zIndex': 2, 'top': 4294967156, 'height': 156, 'width': 150};
    report['notificationHeaderImage'] = offset;
    report = options.bind(verify)(report);
    var _closure1_slot11 = report;
    report = 14;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/nuf/native/components/notification/RedesignNotificationModal.tsx';
    report = oscar.bind(golf)(report);
    zulu['default'] = tango;
    mike = function(argFoo) { // Original name: RedesignNotificationScreen
        entity = argFoo;
        entity = entity.route;
        entity = entity.params;
        entity = entity.onComplete;
        tango = _closure1_slot10;
        zulu = _closure1_slot12;
        mike = {};
        mike['onComplete'] = entity;
        entity = undefined;
        entity = tango.bind(entity)(zulu, mike);
        return entity;
    };
    zulu['RedesignNotificationScreen'] = mike;
    return entity;
})();