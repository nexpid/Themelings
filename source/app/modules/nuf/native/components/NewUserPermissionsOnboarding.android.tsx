// app/modules/nuf/native/components/NewUserPermissionsOnboarding.android.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    romeon = 0;
    golfie = oscard[romeon];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot2 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = '100%';
    verify['minHeight'] = offset;
    tangon['scrollContainer'] = verify;
    foxtra = 'center';
    verify = {'flexGrow': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    tangon['container'] = verify;
    verify = {};
    offset = 4;
    offset = oscard[offset];
    offset = report.bind(entity)(offset);
    backup = offset.NAV_BAR_HEIGHT;
    offset = 80;
    offset = offset + backup;
    verify['paddingTop'] = offset;
    tangon['alertContainer'] = verify;
    verify = {'backgroundColor': null, 'borderRadius': null, 'borderWidth': 1, 'borderColor': null, 'alignItems': 'center', 'maxWidth': 290};
    offset = 5;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xl;
    verify['borderRadius'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MODIFIER_ACTIVE;
    verify['borderColor'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.shadows;
    sizing = backup.SHADOW_HIGH;
    output = verify;
    backup = copyDataProperties(output, sizing);
    tangon['alert'] = verify;
    verify = {'paddingVertical': 24, 'paddingHorizontal': 24, 'alignItems': 'center'};
    tangon['alertContent'] = verify;
    verify = {'paddingBottom': 8, 'textAlign': 'center'};
    tangon['alertTitle'] = verify;
    verify = {};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    verify['paddingBottom'] = backup;
    verify['textAlign'] = foxtra;
    tangon['alertSubtitle'] = verify;
    verify = {};
    foxtra = 'row';
    verify['flexDirection'] = foxtra;
    tangon['buttonWrapper'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_12;
    verify['marginBottom'] = foxtra;
    tangon['primaryButtonContainer'] = verify;
    verify = {};
    verify['flexGrow'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['padding'] = offset;
    tangon['trailing'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/nuf/native/components/NewUserPermissionsOnboarding.android.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: NewUserPermissionsOnboarding
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            record = entity.title;
            update = entity.subtitle;
            backup = entity.header;
            verify = entity.trailing;
            vacuum = entity.loading;
            output = entity.showSkip;
            tangon = undefined;
            if(!(output === tangon)) { _fun00002_ip = 45; continue _fun00001 }
 43:
            output = true;
 45:
            config = entity.onAllow;
            sequen = entity.onDontAllow;
            entity = _closure1_slot6;
            offset = entity.bind(tangon)();
            zuuluu = _closure1_slot5;
            michal = _closure1_slot3;
            entity = {};
            report = offset.scrollContainer;
            entity['contentContainerStyle'] = report;
            option = _closure1_slot4;
            golfie = _closure1_slot2;
            report = {};
            yankee = offset.container;
            report['style'] = yankee;
            yankee = {};
            romeon = offset.alertContainer;
            yankee['style'] = romeon;
            romeon = {};
            foxtra = new Array(2);
            foxtra[0] = backup;
            backup = {};
            kiloes = offset.alert;
            backup['style'] = kiloes;
            kiloes = {};
            sizing = offset.alertContent;
            kiloes['style'] = sizing;
            echoed = _closure1_slot0;
            source = _closure1_slot1;
            result = 6;
            sizing = source[result];
            sizing = echoed.bind(tangon)(sizing);
            ctrled = sizing.Text;
            sizing = {'style': null, 'variant': 'heading-lg/bold', 'color': 'text-normal'};
            cntext = offset.alertTitle;
            sizing['style'] = cntext;
            sizing['children'] = record;
            ctrled = option.bind(tangon)(ctrled, sizing);
            sizing = new Array(4);
            sizing[0] = ctrled;
            result = source[result];
            result = echoed.bind(tangon)(result);
            echoed = result.Text;
            result = {'style': null, 'variant': 'text-sm/medium', 'color': 'text-normal'};
            source = offset.alertSubtitle;
            result['style'] = source;
            result['children'] = update;
            result = option.bind(tangon)(echoed, result);
            sizing[1] = result;
            result = {};
            update = offset.buttonWrapper;
            echoed = new Array(2);
            echoed[0] = update;
            update = output;
            if(!output) { _fun00002_ip = 305; continue _fun00001 }
 299:
            update = offset.primaryButtonContainer;
 305:
            echoed[1] = update;
            result['style'] = echoed;
            ctrled = _closure1_slot4;
            status = _closure1_slot0;
            record = _closure1_slot1;
            source = 7;
            echoed = record[source];
            echoed = status.bind(tangon)(echoed);
            update = echoed.Button;
            echoed = {'variant': 'primary', 'size': 'md'};
            target = 8;
            cntext = record[target];
            cntext = status.bind(tangon)(cntext);
            papara = cntext.intl;
            cntext = papara.string;
            record = record[target];
            record = status.bind(tangon)(record);
            record = record.t;
            record = record.2nYlT0;
            record = cntext.bind(papara)(record);
            echoed['text'] = record;
            echoed['onPress'] = config;
            echoed['loading'] = vacuum;
            vacuum = true;
            echoed['grow'] = vacuum;
            echoed = ctrled.bind(tangon)(update, echoed);
            result['children'] = echoed;
            result = option.bind(tangon)(golfie, result);
            sizing[2] = result;
            if(!output) { _fun00002_ip = 578; continue _fun00001 }
 452:
            update = _closure1_slot4;
            echoed = _closure1_slot2;
            result = {};
            ctrled = offset.buttonWrapper;
            result['style'] = ctrled;
            papara = _closure1_slot0;
            config = _closure1_slot1;
            source = config[source];
            source = papara.bind(tangon)(source);
            ctrled = source.Button;
            source = {};
            record = 'secondary';
            source['variant'] = record;
            record = config[target];
            record = papara.bind(tangon)(record);
            cntext = record.intl;
            record = cntext.string;
            config = config[target];
            config = papara.bind(tangon)(config);
            config = config.t;
            config = config.5WxrcX;
            config = record.bind(cntext)(config);
            source['text'] = config;
            source['onPress'] = sequen;
            source['grow'] = vacuum;
            source = update.bind(tangon)(ctrled, source);
            result['children'] = source;
            output = update.bind(tangon)(echoed, result);
 578:
            sizing[3] = output;
            kiloes['children'] = sizing;
            kiloes = zuuluu.bind(tangon)(golfie, kiloes);
            backup['children'] = kiloes;
            backup = option.bind(tangon)(golfie, backup);
            foxtra[1] = backup;
            romeon['children'] = foxtra;
            romeon = zuuluu.bind(tangon)(golfie, romeon);
            yankee['children'] = romeon;
            yankee = option.bind(tangon)(golfie, yankee);
            report['children'] = yankee;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = golfie;
            option = _closure1_slot4;
            golfie = _closure1_slot2;
            oscard = {};
            offset = offset.trailing;
            oscard['style'] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();