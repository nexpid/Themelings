// app/modules/nuf/native/components/NewUserPermissionsOnboarding.android.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    romeo = 0;
    golf = oscar[romeo];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot2 = golf;
    tango = tango.ScrollView;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = '100%';
    verify['minHeight'] = offset;
    tango['scrollContainer'] = verify;
    foxtrot = 'center';
    verify = {'flexGrow': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    tango['container'] = verify;
    verify = {};
    offset = 4;
    offset = oscar[offset];
    offset = report.bind(entity)(offset);
    backup = offset.NAV_BAR_HEIGHT;
    offset = 80;
    offset = offset + backup;
    verify['paddingTop'] = offset;
    tango['alertContainer'] = verify;
    verify = {'backgroundColor': null, 'borderRadius': null, 'borderWidth': 1, 'borderColor': null, 'alignItems': 'center', 'maxWidth': 290};
    offset = 5;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xl;
    verify['borderRadius'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MODIFIER_ACTIVE;
    verify['borderColor'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.shadows;
    sizing = backup.SHADOW_HIGH;
    output = verify;
    backup = copyDataProperties(output, sizing);
    tango['alert'] = verify;
    verify = {'paddingVertical': 24, 'paddingHorizontal': 24, 'alignItems': 'center'};
    tango['alertContent'] = verify;
    verify = {'paddingBottom': 8, 'textAlign': 'center'};
    tango['alertTitle'] = verify;
    verify = {};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    verify['paddingBottom'] = backup;
    verify['textAlign'] = foxtrot;
    tango['alertSubtitle'] = verify;
    verify = {};
    foxtrot = 'row';
    verify['flexDirection'] = foxtrot;
    tango['buttonWrapper'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_12;
    verify['marginBottom'] = foxtrot;
    tango['primaryButtonContainer'] = verify;
    verify = {};
    verify['flexGrow'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['padding'] = offset;
    tango['trailing'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/nuf/native/components/NewUserPermissionsOnboarding.android.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: NewUserPermissionsOnboarding
        _fun94916: for(var _fun94916_ip = 0; ; ) switch(_fun94916_ip) {
 0:
            entity = argFoo;
            record = entity.title;
            update = entity.subtitle;
            backup = entity.header;
            verify = entity.trailing;
            vacuum = entity.loading;
            output = entity.showSkip;
            tango = undefined;
            if(!(output === tango)) { _fun94916_ip = 45; continue _fun94916 }
 43:
            output = true;
 45:
            config = entity.onAllow;
            sequence = entity.onDontAllow;
            entity = _closure1_slot6;
            offset = entity.bind(tango)();
            zulu = _closure1_slot5;
            mike = _closure1_slot3;
            entity = {};
            report = offset.scrollContainer;
            entity['contentContainerStyle'] = report;
            options = _closure1_slot4;
            golf = _closure1_slot2;
            report = {};
            yankee = offset.container;
            report['style'] = yankee;
            yankee = {};
            romeo = offset.alertContainer;
            yankee['style'] = romeo;
            romeo = {};
            foxtrot = new Array(2);
            foxtrot[0] = backup;
            backup = {};
            kilo = offset.alert;
            backup['style'] = kilo;
            kilo = {};
            sizing = offset.alertContent;
            kilo['style'] = sizing;
            echo = _closure1_slot0;
            source = _closure1_slot1;
            result = 6;
            sizing = source[result];
            sizing = echo.bind(tango)(sizing);
            control = sizing.Text;
            sizing = {'style': null, 'variant': 'heading-lg/bold', 'color': 'text-normal'};
            context = offset.alertTitle;
            sizing['style'] = context;
            sizing['children'] = record;
            control = options.bind(tango)(control, sizing);
            sizing = new Array(4);
            sizing[0] = control;
            result = source[result];
            result = echo.bind(tango)(result);
            echo = result.Text;
            result = {'style': null, 'variant': 'text-sm/medium', 'color': 'text-normal'};
            source = offset.alertSubtitle;
            result['style'] = source;
            result['children'] = update;
            result = options.bind(tango)(echo, result);
            sizing[1] = result;
            result = {};
            update = offset.buttonWrapper;
            echo = new Array(2);
            echo[0] = update;
            update = output;
            if(!output) { _fun94916_ip = 305; continue _fun94916 }
 299:
            update = offset.primaryButtonContainer;
 305:
            echo[1] = update;
            result['style'] = echo;
            control = _closure1_slot4;
            status = _closure1_slot0;
            record = _closure1_slot1;
            source = 7;
            echo = record[source];
            echo = status.bind(tango)(echo);
            update = echo.Button;
            echo = {'variant': 'primary', 'size': 'md'};
            target = 8;
            context = record[target];
            context = status.bind(tango)(context);
            papa = context.intl;
            context = papa.string;
            record = record[target];
            record = status.bind(tango)(record);
            record = record.t;
            record = record.2nYlT0;
            record = context.bind(papa)(record);
            echo['text'] = record;
            echo['onPress'] = config;
            echo['loading'] = vacuum;
            vacuum = true;
            echo['grow'] = vacuum;
            echo = control.bind(tango)(update, echo);
            result['children'] = echo;
            result = options.bind(tango)(golf, result);
            sizing[2] = result;
            if(!output) { _fun94916_ip = 576; continue _fun94916 }
 450:
            update = _closure1_slot4;
            echo = _closure1_slot2;
            result = {};
            control = offset.buttonWrapper;
            result['style'] = control;
            papa = _closure1_slot0;
            config = _closure1_slot1;
            source = config[source];
            source = papa.bind(tango)(source);
            control = source.Button;
            source = {};
            record = 'secondary';
            source['variant'] = record;
            record = config[target];
            record = papa.bind(tango)(record);
            context = record.intl;
            record = context.string;
            config = config[target];
            config = papa.bind(tango)(config);
            config = config.t;
            config = config.5WxrcX;
            config = record.bind(context)(config);
            source['text'] = config;
            source['onPress'] = sequence;
            source['grow'] = vacuum;
            source = update.bind(tango)(control, source);
            result['children'] = source;
            output = update.bind(tango)(echo, result);
 576:
            sizing[3] = output;
            kilo['children'] = sizing;
            kilo = zulu.bind(tango)(golf, kilo);
            backup['children'] = kilo;
            backup = options.bind(tango)(golf, backup);
            foxtrot[1] = backup;
            romeo['children'] = foxtrot;
            romeo = zulu.bind(tango)(golf, romeo);
            yankee['children'] = romeo;
            yankee = options.bind(tango)(golf, yankee);
            report['children'] = yankee;
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            options = _closure1_slot4;
            golf = _closure1_slot2;
            oscar = {};
            offset = offset.trailing;
            oscar['style'] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();