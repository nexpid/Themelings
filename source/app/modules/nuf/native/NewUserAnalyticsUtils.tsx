// app/modules/nuf/native/NewUserAnalyticsUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    tangon = 0;
    golfie = oscard[tangon];
    entity = undefined;
    golfie = report.bind(entity)(golfie);
    golfie = golfie.AnalyticEvents;
    var _closure1_slot2 = golfie;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/nuf/native/NewUserAnalyticsUtils.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo, argBar, argBaz) { // Original name: trackNUFStep
        entity = global;
        michal = entity.Date;
        entity = michal.now;
        zuuluu = entity.bind(michal)();
        entity = _closure1_slot3;
        tangon = zuuluu - entity;
        entity = 1000;
        verify = tangon / entity;
        report = _closure1_slot0;
        tangon = _closure1_slot1;
        entity = 1;
        tangon = tangon[entity];
        entity = undefined;
        golfie = report.bind(entity)(tangon);
        oscard = golfie.track;
        tangon = _closure1_slot2;
        report = tangon.NUO_TRANSITION;
        tangon = {};
        yankee = argBaz;
        romeon = tangon;
        option = copyDataProperties(romeon, yankee);
        offset = 'Mobile NUX Post Reg';
        option = 'flow_type';
        tangon[option] = offset;
        offset = argFoo;
        option = 'from_step';
        tangon[option] = offset;
        offset = argBar;
        option = 'to_step';
        tangon[option] = offset;
        option = 'seconds_on_from_step';
        tangon[option] = verify;
        tangon = oscard.bind(golfie)(report, tangon);
        _closure1_slot3 = zuuluu;
        return entity;
    };
    zuuluu['trackNUFStep'] = michal;
    return entity;
})();