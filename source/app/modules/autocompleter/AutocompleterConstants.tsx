// app/modules/autocompleter/AutocompleterConstants.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    oscard = argBaz;
    zuuluu = argFre;
    option = argPlu;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    entity = 0;
    michal = option[entity];
    entity = undefined;
    tangon = oscard.bind(entity)(michal);
    michal = 1;
    michal = option[michal];
    michal = oscard.bind(entity)(michal);
    var _closure1_slot0 = michal;
    michal = function(argFoo) { // Original name: HeaderRecord
        zuuluu = argFoo;
        michal = this;
        report = _closure1_slot0;
        tangon = _closure1_slot1;
        entity = undefined;
        tangon = report.bind(entity)(michal, tangon);
        michal['id'] = zuuluu;
        michal['text'] = zuuluu;
        return entity;
    };
    var _closure1_slot1 = michal;
    oscard = tangon.bind(entity)(michal);
    report = {};
    michal = 'UP';
    report['UP'] = michal;
    michal = 'DOWN';
    report['DOWN'] = michal;
    tangon = {};
    michal = 'GUILD';
    tangon['GUILD'] = michal;
    michal = 'TEXT_CHANNEL';
    tangon['TEXT_CHANNEL'] = michal;
    michal = 'GROUP_DM';
    tangon['GROUP_DM'] = michal;
    michal = 'VOICE_CHANNEL';
    tangon['VOICE_CHANNEL'] = michal;
    michal = 'USER';
    tangon['USER'] = michal;
    michal = 'HEADER';
    tangon['HEADER'] = michal;
    michal = 'APPLICATION';
    tangon['APPLICATION'] = michal;
    michal = 'SKU';
    tangon['SKU'] = michal;
    michal = 'LINK';
    tangon['LINK'] = michal;
    michal = 'IN_APP_NAVIGATION';
    tangon['IN_APP_NAVIGATION'] = michal;
    michal = {};
    golfie = '@';
    michal['USER'] = golfie;
    golfie = '#';
    michal['TEXT_CHANNEL'] = golfie;
    golfie = '!';
    michal['VOICE_CHANNEL'] = golfie;
    golfie = '*';
    michal['GUILD'] = golfie;
    golfie = '$';
    michal['APPLICATION'] = golfie;
    golfie = 2;
    option = option[golfie];
    golfie = argBar;
    verify = golfie.bind(entity)(option);
    option = verify.fileFinishedImporting;
    golfie = 'modules/autocompleter/AutocompleterConstants.tsx';
    golfie = option.bind(verify)(golfie);
    zuuluu['HeaderRecord'] = oscard;
    zuuluu['FindResultDirections'] = report;
    zuuluu['AutocompleterResultTypes'] = tangon;
    zuuluu['AutocompleterQuerySymbols'] = michal;
    return entity;
})();