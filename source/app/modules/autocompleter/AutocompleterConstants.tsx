// app/modules/autocompleter/AutocompleterConstants.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    oscar = argBaz;
    zulu = argFred;
    options = argPlugh;
    entity = global;
    golf = entity.Object;
    tango = golf.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(golf)(zulu, entity, mike);
    entity = 0;
    mike = options[entity];
    entity = undefined;
    tango = oscar.bind(entity)(mike);
    mike = 1;
    mike = options[mike];
    mike = oscar.bind(entity)(mike);
    var _closure1_slot0 = mike;
    mike = function(argFoo) { // Original name: HeaderRecord
        zulu = argFoo;
        mike = this;
        report = _closure1_slot0;
        tango = _closure1_slot1;
        entity = undefined;
        tango = report.bind(entity)(mike, tango);
        mike['id'] = zulu;
        mike['text'] = zulu;
        return entity;
    };
    var _closure1_slot1 = mike;
    oscar = tango.bind(entity)(mike);
    report = {};
    mike = 'UP';
    report['UP'] = mike;
    mike = 'DOWN';
    report['DOWN'] = mike;
    tango = {};
    mike = 'GUILD';
    tango['GUILD'] = mike;
    mike = 'TEXT_CHANNEL';
    tango['TEXT_CHANNEL'] = mike;
    mike = 'GROUP_DM';
    tango['GROUP_DM'] = mike;
    mike = 'VOICE_CHANNEL';
    tango['VOICE_CHANNEL'] = mike;
    mike = 'USER';
    tango['USER'] = mike;
    mike = 'HEADER';
    tango['HEADER'] = mike;
    mike = 'APPLICATION';
    tango['APPLICATION'] = mike;
    mike = 'SKU';
    tango['SKU'] = mike;
    mike = 'LINK';
    tango['LINK'] = mike;
    mike = 'IN_APP_NAVIGATION';
    tango['IN_APP_NAVIGATION'] = mike;
    mike = {};
    golf = '@';
    mike['USER'] = golf;
    golf = '#';
    mike['TEXT_CHANNEL'] = golf;
    golf = '!';
    mike['VOICE_CHANNEL'] = golf;
    golf = '*';
    mike['GUILD'] = golf;
    golf = '$';
    mike['APPLICATION'] = golf;
    golf = 2;
    options = options[golf];
    golf = argBar;
    verify = golf.bind(entity)(options);
    options = verify.fileFinishedImporting;
    golf = 'modules/autocompleter/AutocompleterConstants.tsx';
    golf = options.bind(verify)(golf);
    zulu['HeaderRecord'] = oscar;
    zulu['FindResultDirections'] = report;
    zulu['AutocompleterResultTypes'] = tango;
    zulu['AutocompleterQuerySymbols'] = mike;
    return entity;
})();