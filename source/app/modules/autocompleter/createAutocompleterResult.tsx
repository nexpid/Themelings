// app/modules/autocompleter/createAutocompleterResult.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    golfie = tangon.HeaderRecord;
    var _closure1_slot0 = golfie;
    tangon = tangon.AutocompleterResultTypes;
    var _closure1_slot1 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/autocompleter/createAutocompleterResult.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: createHeaderResult
        entity = {};
        zuuluu = _closure1_slot1;
        zuuluu = zuuluu.HEADER;
        entity['type'] = zuuluu;
        tangon = _closure1_slot0;
        michal = tangon.prototype;
        zuuluu = Object.create(michal, {constructor: {value: tangon}});
        report = argFoo;
        oscard = zuuluu;
        michal = new oscard[tangon](report, tangon);
        michal = michal instanceof Object ? michal : zuuluu;
        entity['record'] = michal;
        michal = 0;
        entity['score'] = michal;
        return entity;
    };
    zuuluu['createHeaderResult'] = michal;
    return entity;
})();