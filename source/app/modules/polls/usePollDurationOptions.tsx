// app/modules/polls/usePollDurationOptions.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    tangon = tangon.PollDurations;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/polls/usePollDurationOptions.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: usePollDurationOptions
        entity = global;
        zuuluu = entity.Object;
        michal = zuuluu.freeze;
        entity = {};
        report = _closure1_slot2;
        golfie = report.ONE_HOUR;
        verify = _closure1_slot0;
        offset = _closure1_slot1;
        tangon = 1;
        oscard = offset[tangon];
        option = undefined;
        oscard = verify.bind(option)(oscard);
        foxtra = oscard.intl;
        romeon = foxtra.formatToPlainString;
        oscard = offset[tangon];
        oscard = verify.bind(option)(oscard);
        oscard = oscard.t;
        yankee = oscard.b/mgt7;
        oscard = {};
        oscard['num'] = tangon;
        oscard = romeon.bind(foxtra)(yankee, oscard);
        entity[golfie] = oscard;
        golfie = report.FOUR_HOURS;
        oscard = offset[tangon];
        oscard = verify.bind(option)(oscard);
        foxtra = oscard.intl;
        romeon = foxtra.formatToPlainString;
        oscard = offset[tangon];
        oscard = verify.bind(option)(oscard);
        oscard = oscard.t;
        yankee = oscard.b/mgt7;
        oscard = {};
        backup = 4;
        oscard['num'] = backup;
        oscard = romeon.bind(foxtra)(yankee, oscard);
        entity[golfie] = oscard;
        golfie = report.EIGHT_HOURS;
        oscard = offset[tangon];
        oscard = verify.bind(option)(oscard);
        foxtra = oscard.intl;
        romeon = foxtra.formatToPlainString;
        oscard = offset[tangon];
        oscard = verify.bind(option)(oscard);
        oscard = oscard.t;
        yankee = oscard.b/mgt7;
        oscard = {};
        backup = 8;
        oscard['num'] = backup;
        oscard = romeon.bind(foxtra)(yankee, oscard);
        entity[golfie] = oscard;
        golfie = report.ONE_DAY;
        oscard = offset[tangon];
        oscard = verify.bind(option)(oscard);
        foxtra = oscard.intl;
        romeon = foxtra.formatToPlainString;
        oscard = offset[tangon];
        oscard = verify.bind(option)(oscard);
        oscard = oscard.t;
        yankee = oscard.b/mgt7;
        oscard = {};
        backup = 24;
        oscard['num'] = backup;
        oscard = romeon.bind(foxtra)(yankee, oscard);
        entity[golfie] = oscard;
        golfie = report.THREE_DAYS;
        oscard = offset[tangon];
        oscard = verify.bind(option)(oscard);
        romeon = oscard.intl;
        yankee = romeon.string;
        oscard = offset[tangon];
        oscard = verify.bind(option)(oscard);
        oscard = oscard.t;
        oscard = oscard.Xn5rX1;
        oscard = yankee.bind(romeon)(oscard);
        entity[golfie] = oscard;
        golfie = report.SEVEN_DAYS;
        oscard = offset[tangon];
        oscard = verify.bind(option)(oscard);
        romeon = oscard.intl;
        yankee = romeon.string;
        oscard = offset[tangon];
        oscard = verify.bind(option)(oscard);
        oscard = oscard.t;
        oscard = oscard.Lmq+rq;
        oscard = yankee.bind(romeon)(oscard);
        entity[golfie] = oscard;
        report = report.FOURTEEN_DAYS;
        oscard = offset[tangon];
        oscard = verify.bind(option)(oscard);
        golfie = oscard.intl;
        oscard = golfie.string;
        tangon = offset[tangon];
        tangon = verify.bind(option)(tangon);
        tangon = tangon.t;
        tangon = tangon.mb8A/P;
        tangon = oscard.bind(golfie)(tangon);
        entity[report] = tangon;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();