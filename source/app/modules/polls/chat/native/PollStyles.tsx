// app/modules/polls/chat/native/PollStyles.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    tangon = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = tangon;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, michal);
    verify = function(argFoo, argBar) { // Original name: normal
        michal = argFoo;
        var _closure2_slot0 = michal;
        entity = {};
        zuuluu = michal.colors;
        zuuluu = zuuluu.BORDER_SUBTLE;
        entity['border'] = zuuluu;
        zuuluu = 1;
        entity['borderWidth'] = zuuluu;
        tangon = michal.colors;
        tangon = tangon.CARD_SECONDARY_BG;
        entity['fill'] = tangon;
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        tangon = 0;
        option = oscard[tangon];
        tangon = undefined;
        offset = report.bind(tangon)(option);
        verify = offset.match;
        option = argBar;
        yankee = verify.bind(offset)(option);
        offset = yankee.with;
        option = oscard[zuuluu];
        option = report.bind(tangon)(option);
        option = option.PollLayoutTypes;
        verify = option.IMAGE_ONLY_ANSWERS;
        option = function() {
            entity = _closure2_slot0;
            entity = entity.colors;
            entity = entity.WHITE;
            return entity;
        };
        verify = offset.bind(yankee)(verify, option);
        option = verify.otherwise;
        golfie = function() {
            entity = _closure2_slot0;
            entity = entity.colors;
            entity = entity.TEXT_NORMAL;
            return entity;
        };
        golfie = option.bind(verify)(golfie);
        entity['label'] = golfie;
        entity['opacity'] = zuuluu;
        zuuluu = michal.colors;
        zuuluu = zuuluu.BG_MOD_FAINT;
        entity['answerBackground'] = zuuluu;
        zuuluu = michal.colors;
        zuuluu = zuuluu.BG_MOD_SUBTLE;
        entity['answerFill'] = zuuluu;
        zuuluu = 2;
        zuuluu = oscard[zuuluu];
        zuuluu = report.bind(tangon)(zuuluu);
        zuuluu = zuuluu.PollRadioStyle;
        zuuluu = zuuluu.HOLLOW;
        entity['radioStyle'] = zuuluu;
        zuuluu = michal.colors;
        zuuluu = zuuluu.INTERACTIVE_ACTIVE;
        entity['radioBackground'] = zuuluu;
        michal = michal.colors;
        michal = michal.WHITE;
        entity['radioForeground'] = michal;
        return entity;
    };
    var _closure1_slot2 = verify;
    entity = function(argFoo, argBar) { // Original name: normalVote
        entity = {};
        report = _closure1_slot2;
        tangon = undefined;
        zuuluu = argFoo;
        michal = argBar;
        oscard = report.bind(tangon)(zuuluu, michal);
        golfie = entity;
        michal = copyDataProperties(golfie, oscard);
        zuuluu = 0;
        michal = 'borderWidth';
        entity[michal] = zuuluu;
        return entity;
    };
    var _closure1_slot3 = entity;
    option = function(argFoo, argBar) { // Original name: notVoted
        zuuluu = argFoo;
        entity = {};
        oscard = _closure1_slot3;
        tangon = undefined;
        report = argBar;
        golfie = oscard.bind(tangon)(zuuluu, report);
        option = entity;
        report = copyDataProperties(option, golfie);
        zuuluu = zuuluu.colors;
        report = zuuluu.BACKGROUND_MODIFIER_ACTIVE;
        zuuluu = 'answerFill';
        entity[zuuluu] = report;
        zuuluu = _closure1_slot0;
        report = _closure1_slot1;
        michal = 2;
        michal = report[michal];
        michal = zuuluu.bind(tangon)(michal);
        michal = michal.PollRadioStyle;
        zuuluu = michal.NONE;
        michal = 'radioStyle';
        entity[michal] = zuuluu;
        return entity;
    };
    var _closure1_slot4 = option;
    golfie = function(argFoo, argBar) { // Original name: victorNotSelected
        zuuluu = argFoo;
        entity = {};
        oscard = _closure1_slot3;
        tangon = undefined;
        report = argBar;
        golfie = oscard.bind(tangon)(zuuluu, report);
        option = entity;
        report = copyDataProperties(option, golfie);
        report = zuuluu.colors;
        oscard = report.STATUS_POSITIVE;
        report = 'border';
        entity[report] = oscard;
        oscard = 1;
        report = 'borderWidth';
        entity[report] = oscard;
        zuuluu = zuuluu.colors;
        report = zuuluu.POLLS_VICTOR_FILL;
        zuuluu = 'answerFill';
        entity[zuuluu] = report;
        zuuluu = _closure1_slot0;
        report = _closure1_slot1;
        michal = 2;
        michal = report[michal];
        michal = zuuluu.bind(tangon)(michal);
        michal = michal.PollRadioStyle;
        zuuluu = michal.NONE;
        michal = 'radioStyle';
        entity[michal] = zuuluu;
        return entity;
    };
    var _closure1_slot5 = golfie;
    michal = {};
    offset = function(argFoo, argBar) { // Original name: loserSelected
        michal = argFoo;
        entity = {};
        oscard = _closure1_slot4;
        report = undefined;
        tangon = argBar;
        golfie = oscard.bind(report)(michal, tangon);
        option = entity;
        tangon = copyDataProperties(option, golfie);
        tangon = _closure1_slot0;
        oscard = _closure1_slot1;
        zuuluu = 2;
        zuuluu = oscard[zuuluu];
        zuuluu = tangon.bind(report)(zuuluu);
        zuuluu = zuuluu.PollRadioStyle;
        tangon = zuuluu.CHECKMARK;
        zuuluu = 'radioStyle';
        entity[zuuluu] = tangon;
        zuuluu = michal.colors;
        tangon = zuuluu.INTERACTIVE_ACTIVE;
        zuuluu = 'radioBackground';
        entity[zuuluu] = tangon;
        michal = michal.colors;
        zuuluu = michal.BACKGROUND_PRIMARY;
        michal = 'radioForeground';
        entity[michal] = zuuluu;
        return entity;
    };
    michal['loserSelected'] = offset;
    michal['normal'] = verify;
    michal['notVoted'] = option;
    option = function(argFoo, argBar) { // Original name: selected
        michal = argFoo;
        entity = {};
        oscard = _closure1_slot3;
        report = undefined;
        tangon = argBar;
        golfie = oscard.bind(report)(michal, tangon);
        option = entity;
        tangon = copyDataProperties(option, golfie);
        tangon = michal.colors;
        oscard = tangon.BG_BRAND;
        tangon = 'border';
        entity[tangon] = oscard;
        oscard = 1;
        tangon = 'borderWidth';
        entity[tangon] = oscard;
        tangon = _closure1_slot0;
        oscard = _closure1_slot1;
        zuuluu = 2;
        zuuluu = oscard[zuuluu];
        zuuluu = tangon.bind(report)(zuuluu);
        zuuluu = zuuluu.PollRadioStyle;
        tangon = zuuluu.FILLED;
        zuuluu = 'radioStyle';
        entity[zuuluu] = tangon;
        zuuluu = michal.colors;
        tangon = zuuluu.REDESIGN_INPUT_CONTROL_SELECTED;
        zuuluu = 'radioBackground';
        entity[zuuluu] = tangon;
        michal = michal.colors;
        zuuluu = michal.STATUS_POSITIVE_TEXT;
        michal = 'radioForeground';
        entity[michal] = zuuluu;
        return entity;
    };
    michal['selected'] = option;
    michal['victorNotSelected'] = golfie;
    golfie = function(argFoo, argBar) { // Original name: victorSelected
        michal = argFoo;
        entity = {};
        oscard = _closure1_slot5;
        report = undefined;
        tangon = argBar;
        golfie = oscard.bind(report)(michal, tangon);
        option = entity;
        tangon = copyDataProperties(option, golfie);
        tangon = _closure1_slot0;
        oscard = _closure1_slot1;
        zuuluu = 2;
        zuuluu = oscard[zuuluu];
        zuuluu = tangon.bind(report)(zuuluu);
        zuuluu = zuuluu.PollRadioStyle;
        tangon = zuuluu.CHECKMARK;
        zuuluu = 'radioStyle';
        entity[zuuluu] = tangon;
        zuuluu = michal.colors;
        tangon = zuuluu.STATUS_POSITIVE;
        zuuluu = 'radioBackground';
        entity[zuuluu] = tangon;
        michal = michal.colors;
        zuuluu = michal.STATUS_POSITIVE_TEXT;
        michal = 'radioForeground';
        entity[michal] = zuuluu;
        return entity;
    };
    michal['victorSelected'] = golfie;
    oscard = function(argFoo, argBar) { // Original name: voted
        michal = argFoo;
        entity = {};
        oscard = _closure1_slot3;
        report = undefined;
        tangon = argBar;
        golfie = oscard.bind(report)(michal, tangon);
        option = entity;
        tangon = copyDataProperties(option, golfie);
        tangon = michal.colors;
        oscard = tangon.BG_BRAND;
        tangon = 'border';
        entity[tangon] = oscard;
        oscard = 1;
        tangon = 'borderWidth';
        entity[tangon] = oscard;
        tangon = michal.colors;
        oscard = tangon.POLLS_VOTED_FILL;
        tangon = 'answerFill';
        entity[tangon] = oscard;
        tangon = _closure1_slot0;
        oscard = _closure1_slot1;
        zuuluu = 2;
        zuuluu = oscard[zuuluu];
        zuuluu = tangon.bind(report)(zuuluu);
        zuuluu = zuuluu.PollRadioStyle;
        tangon = zuuluu.CHECKMARK;
        zuuluu = 'radioStyle';
        entity[zuuluu] = tangon;
        zuuluu = michal.colors;
        tangon = zuuluu.REDESIGN_INPUT_CONTROL_SELECTED;
        zuuluu = 'radioBackground';
        entity[zuuluu] = tangon;
        michal = michal.colors;
        zuuluu = michal.STATUS_POSITIVE_TEXT;
        michal = 'radioForeground';
        entity[michal] = zuuluu;
        return entity;
    };
    michal['voted'] = oscard;
    michal['normalVote'] = entity;
    entity = 3;
    tangon = tangon[entity];
    entity = undefined;
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/polls/chat/native/PollStyles.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['pollStyleSets'] = michal;
    return entity;
})();