// app/modules/polls/chat/native/PollStyles.tsx
export default (function(argFoo, argBar, _, __, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    tango = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = tango;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, mike);
    verify = function(argFoo, argBar) { // Original name: normal
        mike = argFoo;
        var _closure2_slot0 = mike;
        entity = {};
        zulu = mike.colors;
        zulu = zulu.BORDER_SUBTLE;
        entity['border'] = zulu;
        zulu = 1;
        entity['borderWidth'] = zulu;
        tango = mike.colors;
        tango = tango.CARD_SECONDARY_BG;
        entity['fill'] = tango;
        report = _closure1_slot0;
        oscar = _closure1_slot1;
        tango = 0;
        options = oscar[tango];
        tango = undefined;
        offset = report.bind(tango)(options);
        verify = offset.match;
        options = argBar;
        yankee = verify.bind(offset)(options);
        offset = yankee.with;
        options = oscar[zulu];
        options = report.bind(tango)(options);
        options = options.PollLayoutTypes;
        verify = options.IMAGE_ONLY_ANSWERS;
        options = function() {
            entity = _closure2_slot0;
            entity = entity.colors;
            entity = entity.WHITE;
            return entity;
        };
        verify = offset.bind(yankee)(verify, options);
        options = verify.otherwise;
        golf = function() {
            entity = _closure2_slot0;
            entity = entity.colors;
            entity = entity.TEXT_NORMAL;
            return entity;
        };
        golf = options.bind(verify)(golf);
        entity['label'] = golf;
        entity['opacity'] = zulu;
        zulu = mike.colors;
        zulu = zulu.BG_MOD_FAINT;
        entity['answerBackground'] = zulu;
        zulu = mike.colors;
        zulu = zulu.BG_MOD_SUBTLE;
        entity['answerFill'] = zulu;
        zulu = 2;
        zulu = oscar[zulu];
        zulu = report.bind(tango)(zulu);
        zulu = zulu.PollRadioStyle;
        zulu = zulu.HOLLOW;
        entity['radioStyle'] = zulu;
        zulu = mike.colors;
        zulu = zulu.INTERACTIVE_ACTIVE;
        entity['radioBackground'] = zulu;
        mike = mike.colors;
        mike = mike.WHITE;
        entity['radioForeground'] = mike;
        return entity;
    };
    var _closure1_slot2 = verify;
    entity = function(argFoo, argBar) { // Original name: normalVote
        entity = {};
        report = _closure1_slot2;
        tango = undefined;
        zulu = argFoo;
        mike = argBar;
        oscar = report.bind(tango)(zulu, mike);
        golf = entity;
        mike = copyDataProperties(golf, oscar);
        zulu = 0;
        mike = 'borderWidth';
        entity[mike] = zulu;
        return entity;
    };
    var _closure1_slot3 = entity;
    options = function(argFoo, argBar) { // Original name: notVoted
        zulu = argFoo;
        entity = {};
        oscar = _closure1_slot3;
        tango = undefined;
        report = argBar;
        golf = oscar.bind(tango)(zulu, report);
        options = entity;
        report = copyDataProperties(options, golf);
        zulu = zulu.colors;
        report = zulu.BACKGROUND_MODIFIER_ACTIVE;
        zulu = 'answerFill';
        entity[zulu] = report;
        zulu = _closure1_slot0;
        report = _closure1_slot1;
        mike = 2;
        mike = report[mike];
        mike = zulu.bind(tango)(mike);
        mike = mike.PollRadioStyle;
        zulu = mike.NONE;
        mike = 'radioStyle';
        entity[mike] = zulu;
        return entity;
    };
    var _closure1_slot4 = options;
    golf = function(argFoo, argBar) { // Original name: victorNotSelected
        zulu = argFoo;
        entity = {};
        oscar = _closure1_slot3;
        tango = undefined;
        report = argBar;
        golf = oscar.bind(tango)(zulu, report);
        options = entity;
        report = copyDataProperties(options, golf);
        report = zulu.colors;
        oscar = report.STATUS_POSITIVE;
        report = 'border';
        entity[report] = oscar;
        oscar = 1;
        report = 'borderWidth';
        entity[report] = oscar;
        zulu = zulu.colors;
        report = zulu.POLLS_VICTOR_FILL;
        zulu = 'answerFill';
        entity[zulu] = report;
        zulu = _closure1_slot0;
        report = _closure1_slot1;
        mike = 2;
        mike = report[mike];
        mike = zulu.bind(tango)(mike);
        mike = mike.PollRadioStyle;
        zulu = mike.NONE;
        mike = 'radioStyle';
        entity[mike] = zulu;
        return entity;
    };
    var _closure1_slot5 = golf;
    mike = {};
    offset = function(argFoo, argBar) { // Original name: loserSelected
        mike = argFoo;
        entity = {};
        oscar = _closure1_slot4;
        report = undefined;
        tango = argBar;
        golf = oscar.bind(report)(mike, tango);
        options = entity;
        tango = copyDataProperties(options, golf);
        tango = _closure1_slot0;
        oscar = _closure1_slot1;
        zulu = 2;
        zulu = oscar[zulu];
        zulu = tango.bind(report)(zulu);
        zulu = zulu.PollRadioStyle;
        tango = zulu.CHECKMARK;
        zulu = 'radioStyle';
        entity[zulu] = tango;
        zulu = mike.colors;
        tango = zulu.INTERACTIVE_ACTIVE;
        zulu = 'radioBackground';
        entity[zulu] = tango;
        mike = mike.colors;
        zulu = mike.BACKGROUND_PRIMARY;
        mike = 'radioForeground';
        entity[mike] = zulu;
        return entity;
    };
    mike['loserSelected'] = offset;
    mike['normal'] = verify;
    mike['notVoted'] = options;
    options = function(argFoo, argBar) { // Original name: selected
        mike = argFoo;
        entity = {};
        oscar = _closure1_slot3;
        report = undefined;
        tango = argBar;
        golf = oscar.bind(report)(mike, tango);
        options = entity;
        tango = copyDataProperties(options, golf);
        tango = mike.colors;
        oscar = tango.BG_BRAND;
        tango = 'border';
        entity[tango] = oscar;
        oscar = 1;
        tango = 'borderWidth';
        entity[tango] = oscar;
        tango = _closure1_slot0;
        oscar = _closure1_slot1;
        zulu = 2;
        zulu = oscar[zulu];
        zulu = tango.bind(report)(zulu);
        zulu = zulu.PollRadioStyle;
        tango = zulu.FILLED;
        zulu = 'radioStyle';
        entity[zulu] = tango;
        zulu = mike.colors;
        tango = zulu.REDESIGN_INPUT_CONTROL_SELECTED;
        zulu = 'radioBackground';
        entity[zulu] = tango;
        mike = mike.colors;
        zulu = mike.STATUS_POSITIVE_TEXT;
        mike = 'radioForeground';
        entity[mike] = zulu;
        return entity;
    };
    mike['selected'] = options;
    mike['victorNotSelected'] = golf;
    golf = function(argFoo, argBar) { // Original name: victorSelected
        mike = argFoo;
        entity = {};
        oscar = _closure1_slot5;
        report = undefined;
        tango = argBar;
        golf = oscar.bind(report)(mike, tango);
        options = entity;
        tango = copyDataProperties(options, golf);
        tango = _closure1_slot0;
        oscar = _closure1_slot1;
        zulu = 2;
        zulu = oscar[zulu];
        zulu = tango.bind(report)(zulu);
        zulu = zulu.PollRadioStyle;
        tango = zulu.CHECKMARK;
        zulu = 'radioStyle';
        entity[zulu] = tango;
        zulu = mike.colors;
        tango = zulu.STATUS_POSITIVE;
        zulu = 'radioBackground';
        entity[zulu] = tango;
        mike = mike.colors;
        zulu = mike.STATUS_POSITIVE_TEXT;
        mike = 'radioForeground';
        entity[mike] = zulu;
        return entity;
    };
    mike['victorSelected'] = golf;
    oscar = function(argFoo, argBar) { // Original name: voted
        mike = argFoo;
        entity = {};
        oscar = _closure1_slot3;
        report = undefined;
        tango = argBar;
        golf = oscar.bind(report)(mike, tango);
        options = entity;
        tango = copyDataProperties(options, golf);
        tango = mike.colors;
        oscar = tango.BG_BRAND;
        tango = 'border';
        entity[tango] = oscar;
        oscar = 1;
        tango = 'borderWidth';
        entity[tango] = oscar;
        tango = mike.colors;
        oscar = tango.POLLS_VOTED_FILL;
        tango = 'answerFill';
        entity[tango] = oscar;
        tango = _closure1_slot0;
        oscar = _closure1_slot1;
        zulu = 2;
        zulu = oscar[zulu];
        zulu = tango.bind(report)(zulu);
        zulu = zulu.PollRadioStyle;
        tango = zulu.CHECKMARK;
        zulu = 'radioStyle';
        entity[zulu] = tango;
        zulu = mike.colors;
        tango = zulu.REDESIGN_INPUT_CONTROL_SELECTED;
        zulu = 'radioBackground';
        entity[zulu] = tango;
        mike = mike.colors;
        zulu = mike.STATUS_POSITIVE_TEXT;
        mike = 'radioForeground';
        entity[mike] = zulu;
        return entity;
    };
    mike['voted'] = oscar;
    mike['normalVote'] = entity;
    entity = 3;
    tango = tango[entity];
    entity = undefined;
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/polls/chat/native/PollStyles.tsx';
    tango = report.bind(oscar)(tango);
    zulu['pollStyleSets'] = mike;
    return entity;
})();