// app/modules/polls/native/PollLayoutOptions.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.TouchableOpacity;
    var _closure1_slot4 = golf;
    tango = tango.View;
    var _closure1_slot5 = tango;
    offset = 2;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    yankee = 'row';
    verify['flexDirection'] = yankee;
    tango['container'] = verify;
    verify = {};
    yankee = 4;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.INTERACTIVE_NORMAL;
    verify['color'] = foxtrot;
    tango['layoutIconColor'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'paddingHorizontal': 24, 'paddingVertical': 14, 'borderRadius': 25, 'backgroundColor': null, 'marginRight': 8};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_MESSAGE_HOVER;
    verify['backgroundColor'] = foxtrot;
    tango['option'] = verify;
    verify = {};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BUTTON_OUTLINE_BRAND_BACKGROUND_ACTIVE;
    verify['borderColor'] = yankee;
    verify['borderWidth'] = offset;
    tango['optionSelected'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/polls/native/PollLayoutOptions.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: PollLayoutOptions
        entity = argFoo;
        mike = entity.selectedLayoutType;
        var _closure2_slot0 = mike;
        entity = entity.setSelectedLayoutType;
        var _closure2_slot1 = entity;
        entity = _closure1_slot7;
        tango = undefined;
        options = entity.bind(tango)();
        var _closure2_slot2 = options;
        golf = _closure1_slot3;
        zulu = golf.useMemo;
        mike = function() {
            mike = {};
            verify = _closure1_slot0;
            oscar = _closure1_slot2;
            golf = 5;
            zulu = oscar[golf];
            report = undefined;
            zulu = verify.bind(report)(zulu);
            zulu = zulu.PollLayoutTypes;
            zulu = zulu.DEFAULT;
            mike['name'] = zulu;
            zulu = 6;
            tango = oscar[zulu];
            tango = verify.bind(report)(tango);
            offset = tango.intl;
            options = offset.string;
            tango = oscar[zulu];
            tango = verify.bind(report)(tango);
            tango = tango.t;
            tango = tango.GhK6X1;
            tango = options.bind(offset)(tango);
            mike['label'] = tango;
            tango = _closure1_slot1;
            entity = 7;
            entity = oscar[entity];
            entity = tango.bind(report)(entity);
            mike['icon'] = entity;
            entity = new Array(2);
            entity[0] = mike;
            mike = {};
            golf = oscar[golf];
            golf = verify.bind(report)(golf);
            golf = golf.PollLayoutTypes;
            golf = golf.IMAGE_ONLY_ANSWERS;
            mike['name'] = golf;
            golf = oscar[zulu];
            golf = verify.bind(report)(golf);
            options = golf.intl;
            golf = options.string;
            zulu = oscar[zulu];
            zulu = verify.bind(report)(zulu);
            zulu = zulu.t;
            zulu = zulu.an4GKS;
            zulu = golf.bind(options)(zulu);
            mike['label'] = zulu;
            zulu = 8;
            zulu = oscar[zulu];
            zulu = tango.bind(report)(zulu);
            mike['icon'] = zulu;
            entity[1] = mike;
            return entity;
        };
        entity = new Array(0);
        golf = zulu.bind(golf)(mike, entity);
        zulu = _closure1_slot6;
        mike = _closure1_slot5;
        entity = {};
        options = options.container;
        entity['style'] = options;
        options = 'radiogroup';
        entity['accessibilityRole'] = options;
        offset = _closure1_slot0;
        yankee = _closure1_slot2;
        oscar = 6;
        options = yankee[oscar];
        options = offset.bind(tango)(options);
        verify = options.intl;
        options = verify.string;
        oscar = yankee[oscar];
        oscar = offset.bind(tango)(oscar);
        oscar = oscar.t;
        oscar = oscar.e9hWx8;
        oscar = options.bind(verify)(oscar);
        entity['accessibilityLabel'] = oscar;
        oscar = golf.map;
        report = function(argFoo, argBar) {
            _fun119430: for(var _fun119430_ip = 0; ; ) switch(_fun119430_ip) {
 0:
                options = argFoo;
                var _closure3_slot0 = options;
                zulu = options.name;
                entity = _closure2_slot0;
                oscar = zulu === entity;
                report = _closure1_slot6;
                tango = _closure1_slot4;
                zulu = {};
                mike = function() { // Original name: onPress
                    entity = _closure3_slot0;
                    zulu = entity.name;
                    mike = _closure2_slot1;
                    entity = undefined;
                    entity = mike.bind(entity)(zulu);
                    entity = undefined;
                    return entity;
                };
                zulu['onPress'] = mike;
                mike = _closure2_slot2;
                golf = mike.option;
                mike = new Array(2);
                mike[0] = golf;
                golf = oscar;
                if(!golf) { _fun119430_ip = 83; continue _fun119430 }
 73:
                verify = _closure2_slot2;
                golf = verify.optionSelected;
 83:
                mike[1] = golf;
                zulu['style'] = mike;
                mike = 'radio';
                zulu['accessibilityRole'] = mike;
                mike = {};
                mike['selected'] = oscar;
                zulu['accessibilityState'] = mike;
                mike = options.label;
                zulu['accessibilityLabel'] = mike;
                golf = _closure1_slot6;
                offset = _closure1_slot1;
                yankee = _closure1_slot2;
                verify = 9;
                entity = yankee[verify];
                mike = undefined;
                oscar = offset.bind(mike)(entity);
                entity = {};
                romeo = _closure2_slot2;
                romeo = romeo.layoutIconColor;
                romeo = romeo.color;
                entity['color'] = romeo;
                verify = yankee[verify];
                verify = offset.bind(mike)(verify);
                verify = verify.Sizes;
                verify = verify.REFRESH_SMALL_16;
                entity['size'] = verify;
                options = options.icon;
                entity['source'] = options;
                entity = golf.bind(mike)(oscar, entity);
                zulu['children'] = entity;
                entity = argBar;
                entity = report.bind(mike)(tango, zulu, entity);
                return entity;
            }
        };
        report = oscar.bind(golf)(report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();