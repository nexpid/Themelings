// app/modules/polls/native/PollLayoutOptions.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.TouchableOpacity;
    var _closure1_slot4 = golfie;
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    offset = 2;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    yankee = 'row';
    verify['flexDirection'] = yankee;
    tangon['container'] = verify;
    verify = {};
    yankee = 4;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.INTERACTIVE_NORMAL;
    verify['color'] = foxtra;
    tangon['layoutIconColor'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'paddingHorizontal': 24, 'paddingVertical': 14, 'borderRadius': 25, 'backgroundColor': null, 'marginRight': 8};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_MESSAGE_HOVER;
    verify['backgroundColor'] = foxtra;
    tangon['option'] = verify;
    verify = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BUTTON_OUTLINE_BRAND_BACKGROUND_ACTIVE;
    verify['borderColor'] = yankee;
    verify['borderWidth'] = offset;
    tangon['optionSelected'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/polls/native/PollLayoutOptions.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: PollLayoutOptions
        entity = argFoo;
        michal = entity.selectedLayoutType;
        var _closure2_slot0 = michal;
        entity = entity.setSelectedLayoutType;
        var _closure2_slot1 = entity;
        entity = _closure1_slot7;
        tangon = undefined;
        option = entity.bind(tangon)();
        var _closure2_slot2 = option;
        golfie = _closure1_slot3;
        zuuluu = golfie.useMemo;
        michal = function() {
            michal = {};
            verify = _closure1_slot0;
            oscard = _closure1_slot2;
            golfie = 5;
            zuuluu = oscard[golfie];
            report = undefined;
            zuuluu = verify.bind(report)(zuuluu);
            zuuluu = zuuluu.PollLayoutTypes;
            zuuluu = zuuluu.DEFAULT;
            michal['name'] = zuuluu;
            zuuluu = 6;
            tangon = oscard[zuuluu];
            tangon = verify.bind(report)(tangon);
            offset = tangon.intl;
            option = offset.string;
            tangon = oscard[zuuluu];
            tangon = verify.bind(report)(tangon);
            tangon = tangon.t;
            tangon = tangon.GhK6X1;
            tangon = option.bind(offset)(tangon);
            michal['label'] = tangon;
            tangon = _closure1_slot1;
            entity = 7;
            entity = oscard[entity];
            entity = tangon.bind(report)(entity);
            michal['icon'] = entity;
            entity = new Array(2);
            entity[0] = michal;
            michal = {};
            golfie = oscard[golfie];
            golfie = verify.bind(report)(golfie);
            golfie = golfie.PollLayoutTypes;
            golfie = golfie.IMAGE_ONLY_ANSWERS;
            michal['name'] = golfie;
            golfie = oscard[zuuluu];
            golfie = verify.bind(report)(golfie);
            option = golfie.intl;
            golfie = option.string;
            zuuluu = oscard[zuuluu];
            zuuluu = verify.bind(report)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu.an4GKS;
            zuuluu = golfie.bind(option)(zuuluu);
            michal['label'] = zuuluu;
            zuuluu = 8;
            zuuluu = oscard[zuuluu];
            zuuluu = tangon.bind(report)(zuuluu);
            michal['icon'] = zuuluu;
            entity[1] = michal;
            return entity;
        };
        entity = new Array(0);
        golfie = zuuluu.bind(golfie)(michal, entity);
        zuuluu = _closure1_slot6;
        michal = _closure1_slot5;
        entity = {};
        option = option.container;
        entity['style'] = option;
        option = 'radiogroup';
        entity['accessibilityRole'] = option;
        offset = _closure1_slot0;
        yankee = _closure1_slot2;
        oscard = 6;
        option = yankee[oscard];
        option = offset.bind(tangon)(option);
        verify = option.intl;
        option = verify.string;
        oscard = yankee[oscard];
        oscard = offset.bind(tangon)(oscard);
        oscard = oscard.t;
        oscard = oscard.e9hWx8;
        oscard = option.bind(verify)(oscard);
        entity['accessibilityLabel'] = oscard;
        oscard = golfie.map;
        report = function(argFoo, argBar) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                option = argFoo;
                var _closure3_slot0 = option;
                zuuluu = option.name;
                entity = _closure2_slot0;
                oscard = zuuluu === entity;
                report = _closure1_slot6;
                tangon = _closure1_slot4;
                zuuluu = {};
                michal = function() { // Original name: onPress
                    entity = _closure3_slot0;
                    zuuluu = entity.name;
                    michal = _closure2_slot1;
                    entity = undefined;
                    entity = michal.bind(entity)(zuuluu);
                    entity = undefined;
                    return entity;
                };
                zuuluu['onPress'] = michal;
                michal = _closure2_slot2;
                golfie = michal.option;
                michal = new Array(2);
                michal[0] = golfie;
                golfie = oscard;
                if(!golfie) { _fun00002_ip = 83; continue _fun00001 }
 73:
                verify = _closure2_slot2;
                golfie = verify.optionSelected;
 83:
                michal[1] = golfie;
                zuuluu['style'] = michal;
                michal = 'radio';
                zuuluu['accessibilityRole'] = michal;
                michal = {};
                michal['selected'] = oscard;
                zuuluu['accessibilityState'] = michal;
                michal = option.label;
                zuuluu['accessibilityLabel'] = michal;
                golfie = _closure1_slot6;
                offset = _closure1_slot1;
                yankee = _closure1_slot2;
                verify = 9;
                entity = yankee[verify];
                michal = undefined;
                oscard = offset.bind(michal)(entity);
                entity = {};
                romeon = _closure2_slot2;
                romeon = romeon.layoutIconColor;
                romeon = romeon.color;
                entity['color'] = romeon;
                verify = yankee[verify];
                verify = offset.bind(michal)(verify);
                verify = verify.Sizes;
                verify = verify.REFRESH_SMALL_16;
                entity['size'] = verify;
                option = option.icon;
                entity['source'] = option;
                entity = golfie.bind(michal)(oscard, entity);
                zuuluu['children'] = entity;
                entity = argBar;
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            }
        };
        report = oscard.bind(golfie)(report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();