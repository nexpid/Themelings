// app/modules/polls/native/PollCreation.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    _fun119340: for(var _fun119340_ip = 0; ; ) switch(_fun119340_ip) {
 0:
        report = argBar;
        romeo = argBaz;
        zulu = argFred;
        oscar = argPlugh;
        var _closure1_slot0 = report;
        var _closure1_slot1 = romeo;
        var _closure1_slot2 = oscar;
        entity = function(argFoo) { // Original name: UnsavedChangesAlertModal
            entity = argFoo;
            options = entity.onConfirm;
            tango = _closure1_slot10;
            kilo = _closure1_slot0;
            sizing = _closure1_slot2;
            offset = 8;
            entity = sizing[offset];
            zulu = undefined;
            entity = kilo.bind(zulu)(entity);
            mike = entity.AlertModal;
            entity = {};
            verify = 9;
            report = sizing[verify];
            report = kilo.bind(zulu)(report);
            golf = report.intl;
            oscar = golf.string;
            report = sizing[verify];
            report = kilo.bind(zulu)(report);
            report = report.t;
            report = report.HMrgcn;
            report = oscar.bind(golf)(report);
            entity['title'] = report;
            report = sizing[verify];
            report = kilo.bind(zulu)(report);
            golf = report.intl;
            oscar = golf.string;
            report = sizing[verify];
            report = kilo.bind(zulu)(report);
            report = report.t;
            report = report.Wxa/j4;
            report = oscar.bind(golf)(report);
            entity['content'] = report;
            golf = _closure1_slot12;
            oscar = _closure1_slot11;
            report = {};
            backup = _closure1_slot10;
            romeo = sizing[offset];
            romeo = kilo.bind(zulu)(romeo);
            foxtrot = romeo.AlertActionButton;
            romeo = {};
            output = sizing[verify];
            output = kilo.bind(zulu)(output);
            echo = output.intl;
            result = echo.string;
            output = sizing[verify];
            output = kilo.bind(zulu)(output);
            output = output.t;
            output = output.TzJA4u;
            output = result.bind(echo)(output);
            romeo['text'] = output;
            romeo['onPress'] = options;
            options = 'confirm';
            romeo = backup.bind(zulu)(foxtrot, romeo, options);
            options = new Array(2);
            options[0] = romeo;
            romeo = _closure1_slot10;
            offset = sizing[offset];
            offset = kilo.bind(zulu)(offset);
            yankee = offset.AlertActionButton;
            offset = {};
            foxtrot = 'secondary';
            offset['variant'] = foxtrot;
            foxtrot = sizing[verify];
            foxtrot = kilo.bind(zulu)(foxtrot);
            backup = foxtrot.intl;
            foxtrot = backup.string;
            verify = sizing[verify];
            verify = kilo.bind(zulu)(verify);
            verify = verify.t;
            verify = verify.2BR5R0;
            verify = foxtrot.bind(backup)(verify);
            offset['text'] = verify;
            verify = 'back';
            verify = romeo.bind(zulu)(yankee, offset, verify);
            options[1] = verify;
            report['children'] = options;
            report = golf.bind(zulu)(oscar, report);
            entity['actions'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        var _closure1_slot15 = entity;
        entity = function(argFoo) { // Original name: AddAnswerButton
            _fun119342: for(var _fun119342_ip = 0; ; ) switch(_fun119342_ip) {
 0:
                entity = argFoo;
                verify = entity.onPress;
                report = entity.isDefaultLayout;
                entity = _closure1_slot13;
                tango = undefined;
                options = entity.bind(tango)();
                if(report) { _fun119342_ip = 38; continue _fun119342 }
 30:
                golf = options.addAnswerButtonImageOnly;
                _fun119342_ip = 44; continue _fun119342;
 38:
                golf = options.addAnswerButtonDefault;
 44:
                zulu = _closure1_slot10;
                romeo = _closure1_slot1;
                oscar = _closure1_slot2;
                yankee = 11;
                entity = oscar[yankee];
                mike = romeo.bind(tango)(entity);
                entity = {};
                foxtrot = 12;
                foxtrot = oscar[foxtrot];
                foxtrot = romeo.bind(tango)(foxtrot);
                entity['source'] = foxtrot;
                yankee = oscar[yankee];
                yankee = romeo.bind(tango)(yankee);
                yankee = yankee.Sizes;
                yankee = yankee.LARGE;
                entity['size'] = yankee;
                yankee = options.addAnswerIcon;
                yankee = yankee.color;
                entity['color'] = yankee;
                yankee = zulu.bind(tango)(mike, entity);
                zulu = _closure1_slot10;
                mike = _closure1_slot4;
                entity = {};
                entity['onPress'] = verify;
                entity['style'] = golf;
                golf = 'button';
                entity['accessibilityRole'] = golf;
                romeo = _closure1_slot0;
                output = 9;
                golf = oscar[output];
                golf = romeo.bind(tango)(golf);
                verify = golf.intl;
                golf = verify.string;
                oscar = oscar[output];
                oscar = romeo.bind(tango)(oscar);
                oscar = oscar.t;
                oscar = oscar.B2UvmZ;
                oscar = golf.bind(verify)(oscar);
                entity['accessibilityLabel'] = oscar;
                if(report) { _fun119342_ip = 251; continue _fun119342 }
 216:
                golf = _closure1_slot10;
                oscar = _closure1_slot5;
                report = {};
                options = options.innerAnswerButton;
                report['style'] = options;
                report['children'] = yankee;
                report = golf.bind(tango)(oscar, report);
                _fun119342_ip = 376; continue _fun119342;
 251:
                options = _closure1_slot12;
                golf = _closure1_slot11;
                oscar = {};
                verify = new Array(2);
                verify[0] = yankee;
                romeo = _closure1_slot10;
                sizing = _closure1_slot0;
                foxtrot = _closure1_slot2;
                offset = 13;
                offset = foxtrot[offset];
                offset = sizing.bind(tango)(offset);
                yankee = offset.Text;
                offset = {'variant': 'text-md/medium', 'color': 'text-muted'};
                backup = foxtrot[output];
                backup = sizing.bind(tango)(backup);
                kilo = backup.intl;
                backup = kilo.string;
                foxtrot = foxtrot[output];
                foxtrot = sizing.bind(tango)(foxtrot);
                foxtrot = foxtrot.t;
                foxtrot = foxtrot.B2UvmZ;
                foxtrot = backup.bind(kilo)(foxtrot);
                offset['children'] = foxtrot;
                offset = romeo.bind(tango)(yankee, offset);
                verify[1] = offset;
                oscar['children'] = verify;
                report = options.bind(tango)(golf, oscar);
 376:
                entity['children'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            }
        };
        var _closure1_slot16 = entity;
        entity = function(argFoo) { // Original name: PollDurationSelectionRow
            entity = argFoo;
            mike = entity.selectedDuration;
            var _closure2_slot0 = mike;
            entity = entity.onChange;
            var _closure2_slot1 = entity;
            zulu = _closure1_slot1;
            verify = _closure1_slot2;
            entity = 14;
            entity = verify[entity];
            tango = undefined;
            entity = zulu.bind(tango)(entity);
            entity = entity.bind(tango)();
            options = entity[mike];
            zulu = _closure1_slot10;
            oscar = _closure1_slot0;
            entity = 18;
            entity = verify[entity];
            entity = oscar.bind(tango)(entity);
            mike = entity.TableRow;
            entity = {};
            offset = 9;
            yankee = verify[offset];
            yankee = oscar.bind(tango)(yankee);
            foxtrot = yankee.intl;
            romeo = foxtrot.string;
            yankee = verify[offset];
            yankee = oscar.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.bGHzxc;
            yankee = romeo.bind(foxtrot)(yankee);
            entity['label'] = yankee;
            yankee = verify[offset];
            yankee = oscar.bind(tango)(yankee);
            foxtrot = yankee.intl;
            romeo = foxtrot.string;
            yankee = verify[offset];
            yankee = oscar.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.bGHzxc;
            backup = romeo.bind(foxtrot)(yankee);
            yankee = global;
            yankee = yankee.HermesInternal;
            foxtrot = yankee.concat;
            romeo = '';
            yankee = ' ';
            yankee = foxtrot.bind(romeo)(backup, yankee, options);
            entity['accessibilityLabel'] = yankee;
            yankee = verify[offset];
            yankee = oscar.bind(tango)(yankee);
            romeo = yankee.intl;
            yankee = romeo.string;
            offset = verify[offset];
            offset = oscar.bind(tango)(offset);
            offset = offset.t;
            offset = offset.A4PJ1t;
            offset = yankee.bind(romeo)(offset);
            entity['accessibilityHint'] = offset;
            golf = function() { // Original name: onPress
                golf = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 19;
                tango = zulu[entity];
                entity = undefined;
                report = golf.bind(entity)(tango);
                tango = report.dismissKeyboard;
                tango = tango.bind(report)();
                report = _closure1_slot1;
                tango = 15;
                tango = zulu[tango];
                oscar = report.bind(entity)(tango);
                report = oscar.openLazy;
                tango = 17;
                tango = zulu[tango];
                golf = golf.bind(entity)(tango);
                tango = 16;
                tango = zulu[tango];
                zulu = zulu.paths;
                tango = golf.bind(entity)(tango, zulu);
                zulu = _closure1_slot9;
                mike = {};
                options = _closure2_slot0;
                mike['selectedDuration'] = options;
                golf = _closure2_slot1;
                mike['onChange'] = golf;
                mike = report.bind(oscar)(tango, zulu, mike);
                return entity;
            };
            entity['onPress'] = golf;
            golf = _closure1_slot10;
            report = 13;
            report = verify[report];
            report = oscar.bind(tango)(report);
            oscar = report.Text;
            report = {'variant': 'text-md/normal', 'color': 'text-muted'};
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['trailing'] = report;
            report = true;
            entity['arrow'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        };
        var _closure1_slot17 = entity;
        entity = global;
        options = entity.Object;
        golf = options.defineProperty;
        tango = {};
        entity = true;
        tango['value'] = entity;
        entity = '__esModule';
        entity = golf.bind(options)(zulu, entity, tango);
        entity = 0;
        golf = oscar[entity];
        tango = argCorge;
        entity = undefined;
        options = tango.bind(entity)(golf);
        var _closure1_slot3 = options;
        foxtrot = 1;
        tango = oscar[foxtrot];
        tango = report.bind(entity)(tango);
        golf = tango.TouchableOpacity;
        var _closure1_slot4 = golf;
        golf = tango.View;
        var _closure1_slot5 = golf;
        tango = tango.ScrollView;
        var _closure1_slot6 = tango;
        tango = 2;
        tango = oscar[tango];
        tango = romeo.bind(entity)(tango);
        var _closure1_slot7 = tango;
        tango = 3;
        tango = oscar[tango];
        tango = report.bind(entity)(tango);
        golf = tango.MAX_POLL_QUESTION_LENGTH;
        var _closure1_slot8 = golf;
        tango = tango.POLL_CREATION_DURATION_ACTION_SHEET_KEY;
        var _closure1_slot9 = tango;
        tango = 4;
        golf = oscar[tango];
        golf = report.bind(entity)(golf);
        golf = golf.jsx;
        var _closure1_slot10 = golf;
        golf = oscar[tango];
        golf = report.bind(entity)(golf);
        golf = golf.Fragment;
        var _closure1_slot11 = golf;
        tango = oscar[tango];
        tango = report.bind(entity)(tango);
        tango = tango.jsxs;
        var _closure1_slot12 = tango;
        tango = 5;
        tango = oscar[tango];
        verify = report.bind(entity)(tango);
        golf = verify.createStyles;
        tango = {};
        offset = {};
        yankee = 18;
        offset['paddingHorizontal'] = yankee;
        tango['viewPadding'] = offset;
        offset = {'paddingVertical': 20, 'gap': 16};
        tango['scrollContainer'] = offset;
        offset = {};
        offset['flex'] = foxtrot;
        tango['container'] = offset;
        offset = {};
        yankee = 6;
        backup = oscar[yankee];
        backup = romeo.bind(entity)(backup);
        backup = backup.colors;
        backup = backup.BACKGROUND_PRIMARY;
        offset['backgroundColor'] = backup;
        offset['flex'] = foxtrot;
        tango['safeAreaContainer'] = offset;
        kilo = 10;
        offset = {'flexDirection': 'row', 'paddingHorizontal': 18, 'paddingVertical': 10};
        tango['header'] = offset;
        offset = {'flex': 0, 'justifyContent': 'flex-start', 'minWidth': 48, 'paddingHorizontal': 0, 'marginHorizontal': 0};
        tango['actionButton'] = offset;
        offset = {};
        backup = 'flex-end';
        offset['justifyContent'] = backup;
        tango['postButton'] = offset;
        offset = {'textAlign': 'center', 'flexGrow': 1};
        tango['title'] = offset;
        offset = {};
        backup = 14;
        offset['fontSize'] = backup;
        tango['label'] = offset;
        offset = {'marginVertical': 20, 'rowGap': 16};
        tango['answerInputsContainer'] = offset;
        offset = {'paddingVertical': null, 'paddingLeft': 14, 'marginRight': 30, 'display': 'flex', 'flexDirection': 'row', 'gap': 16, 'alignItems': 'center', 'justifyContent': 'flex-start'};
        backup = 7;
        backup = oscar[backup];
        sizing = report.bind(entity)(backup);
        backup = sizing.isAndroid;
        sizing = backup.bind(sizing)();
        backup = 8;
        if(!sizing) { _fun119340_ip = 509; continue _fun119340 }
 506:
        backup = kilo;
 509:
        offset['paddingVertical'] = backup;
        backup = oscar[yankee];
        backup = romeo.bind(entity)(backup);
        backup = backup.colors;
        backup = backup.BACKGROUND_MESSAGE_HOVER;
        offset['backgroundColor'] = backup;
        backup = oscar[yankee];
        backup = romeo.bind(entity)(backup);
        backup = backup.radii;
        backup = backup.lg;
        offset['borderRadius'] = backup;
        tango['addAnswerButtonDefault'] = offset;
        offset = {'width': '48%', 'aspectRatio': 1};
        backup = oscar[yankee];
        backup = romeo.bind(entity)(backup);
        backup = backup.colors;
        backup = backup.BACKGROUND_MESSAGE_HOVER;
        offset['backgroundColor'] = backup;
        backup = oscar[yankee];
        backup = romeo.bind(entity)(backup);
        backup = backup.radii;
        backup = backup.lg;
        offset['borderRadius'] = backup;
        tango['addAnswerButtonImageOnly'] = offset;
        offset = {'width': '100%', 'aspectRatio': 1, 'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
        tango['innerAnswerButton'] = offset;
        offset = {};
        backup = oscar[yankee];
        backup = romeo.bind(entity)(backup);
        backup = backup.colors;
        backup = backup.TEXT_MUTED;
        offset['color'] = backup;
        tango['addAnswerIcon'] = offset;
        offset = {'flexDirection': 'row', 'flexWrap': 'wrap', 'justifyContent': 'space-between', 'gap': 8};
        tango['imageOnlyContainer'] = offset;
        offset = {};
        offset['borderTopWidth'] = foxtrot;
        yankee = oscar[yankee];
        yankee = romeo.bind(entity)(yankee);
        yankee = yankee.colors;
        yankee = yankee.BACKGROUND_MODIFIER_HOVER;
        offset['borderColor'] = yankee;
        tango['pollConfigSection'] = offset;
        tango = golf.bind(verify)(tango);
        var _closure1_slot13 = tango;
        golf = options.forwardRef;
        tango = function(argFoo, argBar) {
            _fun119345: for(var _fun119345_ip = 0; ; ) switch(_fun119345_ip) {
 0:
                entity = argFoo;
                report = entity.onChange;
                oscar = entity.onSubmitEditing;
                options = entity.error;
                tango = _closure1_slot10;
                romeo = _closure1_slot0;
                foxtrot = _closure1_slot2;
                entity = 10;
                entity = foxtrot[entity];
                zulu = undefined;
                entity = romeo.bind(zulu)(entity);
                mike = entity.TextInput;
                entity = {};
                verify = argBar;
                entity['ref'] = verify;
                verify = 'center';
                entity['textAlignVertical'] = verify;
                verify = 9;
                offset = foxtrot[verify];
                offset = romeo.bind(zulu)(offset);
                backup = offset.intl;
                yankee = backup.string;
                offset = foxtrot[verify];
                offset = romeo.bind(zulu)(offset);
                offset = offset.t;
                offset = offset.WBiKnJ;
                offset = yankee.bind(backup)(offset);
                entity['label'] = offset;
                offset = foxtrot[verify];
                offset = romeo.bind(zulu)(offset);
                backup = offset.intl;
                yankee = backup.string;
                offset = foxtrot[verify];
                offset = romeo.bind(zulu)(offset);
                offset = offset.t;
                offset = offset.WBiKnJ;
                offset = yankee.bind(backup)(offset);
                entity['accessibilityLabel'] = offset;
                offset = foxtrot[verify];
                offset = romeo.bind(zulu)(offset);
                yankee = offset.intl;
                offset = yankee.string;
                verify = foxtrot[verify];
                verify = romeo.bind(zulu)(verify);
                verify = verify.t;
                verify = verify./uQqJS;
                verify = offset.bind(yankee)(verify);
                entity['placeholder'] = verify;
                entity['onChange'] = report;
                report = true;
                entity['isClearable'] = report;
                verify = null;
                offset = verify != options;
                verify = 'default';
                if(!offset) { _fun119345_ip = 250; continue _fun119345 }
 246:
                verify = 'error';
 250:
                entity['status'] = verify;
                entity['errorMessage'] = options;
                golf = _closure1_slot8;
                entity['maxLength'] = golf;
                golf = 'next';
                entity['returnKeyType'] = golf;
                golf = false;
                entity['blurOnSubmit'] = golf;
                entity['onSubmitEditing'] = oscar;
                oscar = 'none';
                entity['textContentType'] = oscar;
                entity['autoFocus'] = report;
                entity['autoCorrect'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            }
        };
        tango = golf.bind(options)(tango);
        var _closure1_slot14 = tango;
        tango = 40;
        tango = oscar[tango];
        oscar = report.bind(entity)(tango);
        report = oscar.fileFinishedImporting;
        tango = 'modules/polls/native/PollCreation.tsx';
        tango = report.bind(oscar)(tango);
        mike = function(argFoo) { // Original name: PollCreation
            _fun119346: for(var _fun119346_ip = 0; ; ) switch(_fun119346_ip) {
 0:
                entity = argFoo;
                zulu = entity.channel;
                var _closure2_slot0 = zulu;
                variable37 = _closure1_slot0;
                whiskey = _closure1_slot2;
                entity = 20;
                entity = whiskey[entity];
                tango = undefined;
                mike = variable37.bind(tango)(entity);
                entity = mike.useCanPostImagePolls;
                kilo = entity.bind(mike)();
                variable36 = _closure1_slot1;
                entity = 21;
                entity = whiskey[entity];
                mike = variable36.bind(tango)(entity);
                entity = {};
                report = 22;
                oscar = whiskey[report];
                oscar = variable37.bind(tango)(oscar);
                oscar = oscar.ImpressionTypes;
                oscar = oscar.VIEW;
                entity['type'] = oscar;
                report = whiskey[report];
                report = variable37.bind(tango)(report);
                report = report.ImpressionNames;
                report = report.POLL_EDITOR_VIEWED;
                entity['name'] = report;
                entity = mike.bind(tango)(entity);
                entity = _closure1_slot13;
                romeo = entity.bind(tango)();
                entity = 23;
                entity = whiskey[entity];
                oscar = variable37.bind(tango)(entity);
                report = oscar.useStateFromStores;
                entity = _closure1_slot7;
                mike = new Array(1);
                mike[0] = entity;
                entity = function() {
                    entity = _closure1_slot7;
                    entity = entity.keyboardOpen;
                    return entity;
                };
                report = report.bind(oscar)(mike, entity);
                entity = 24;
                entity = whiskey[entity];
                mike = variable36.bind(tango)(entity);
                entity = 25;
                entity = whiskey[entity];
                entity = variable37.bind(tango)(entity);
                entity = entity.closeCreatePollModal;
                entity = mike.bind(tango)(zulu, entity);
                context = entity.answers;
                var _closure2_slot1 = context;
                mike = entity.question;
                var _closure2_slot2 = mike;
                status = entity.selectedLayoutType;
                var _closure2_slot3 = status;
                config = entity.setSelectedLayoutType;
                output = entity.allowMultiSelect;
                var _closure2_slot4 = output;
                mike = entity.setAllowMultiSelect;
                var _closure2_slot5 = mike;
                sequence = entity.canAddMoreAnswers;
                mike = entity.canRemoveMoreAnswers;
                var _closure2_slot6 = mike;
                lima = entity.handleQuestionChange;
                mike = entity.handleAnswerTextChange;
                var _closure2_slot7 = mike;
                mike = entity.handleEmojiSelect;
                var _closure2_slot8 = mike;
                papa = entity.handleAddAnswer;
                var _closure2_slot9 = papa;
                mike = entity.handleRemoveAnswer;
                var _closure2_slot10 = mike;
                mike = entity.handleRemoveAnswerImage;
                var _closure2_slot11 = mike;
                vacuum = entity.handleSubmitPoll;
                target = entity.fieldErrors;
                var _closure2_slot12 = target;
                echo = entity.duration;
                result = entity.setDuration;
                quebec = entity.createPollError;
                record = entity.submitting;
                entity = 26;
                entity = whiskey[entity];
                mike = variable37.bind(tango)(entity);
                entity = mike.useTrackPollCreationEvents;
                entity = entity.bind(mike)(context, output, status);
                entity = entity.trackPollCreationCancelled;
                var _closure2_slot13 = entity;
                entity = function() { // Original name: handleClose
                    mike = _closure2_slot13;
                    entity = undefined;
                    mike = mike.bind(entity)();
                    zulu = _closure1_slot0;
                    tango = _closure1_slot2;
                    mike = 25;
                    mike = tango[mike];
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.closeCreatePollModal;
                    mike = mike.bind(zulu)();
                    return entity;
                };
                var _closure2_slot14 = entity;
                entity = 27;
                entity = whiskey[entity];
                zulu = variable37.bind(tango)(entity);
                mike = zulu.useNavigatorBackPressHandler;
                entity = function() {
                    _fun119349: for(var _fun119349_ip = 0; ; ) switch(_fun119349_ip) {
 0:
                        tango = _closure1_slot0;
                        zulu = _closure1_slot2;
                        mike = 20;
                        mike = zulu[mike];
                        zulu = undefined;
                        options = tango.bind(zulu)(mike);
                        golf = options.isPollCreationEmpty;
                        oscar = _closure2_slot2;
                        report = _closure2_slot1;
                        tango = _closure2_slot3;
                        tango = golf.bind(options)(oscar, report, tango);
                        if(tango) { _fun119349_ip = 123; continue _fun119349 }
 56:
                        report = _closure1_slot0;
                        oscar = _closure1_slot2;
                        tango = 28;
                        tango = oscar[tango];
                        oscar = report.bind(zulu)(tango);
                        report = oscar.openAlert;
                        golf = _closure1_slot10;
                        tango = _closure1_slot15;
                        entity = {};
                        options = _closure2_slot14;
                        entity['onConfirm'] = options;
                        tango = golf.bind(zulu)(tango, entity);
                        entity = 'poll-creation-unsaved-changes';
                        entity = report.bind(oscar)(entity, tango);
                        entity = true;
                        _fun119349_ip = 133; continue _fun119349;
 123:
                        mike = _closure2_slot13;
                        mike = mike.bind(zulu)();
                        entity = false;
 133:
                        return entity;
                    }
                };
                entity = mike.bind(zulu)(entity);
                entity = 29;
                entity = whiskey[entity];
                mike = variable36.bind(tango)(entity);
                entity = {};
                zulu = function() { // Original name: onAddAnswer
                    mike = _closure2_slot9;
                    entity = undefined;
                    mike = mike.bind(entity)();
                    return entity;
                };
                entity['onAddAnswer'] = zulu;
                sierra = mike.bind(tango)(entity);
                var _closure2_slot15 = sierra;
                oscar = _closure1_slot3;
                zulu = oscar.useEffect;
                mike = new Array(2);
                mike[0] = target;
                mike[1] = sierra;
                entity = function() {
                    _fun119351: for(var _fun119351_ip = 0; ; ) switch(_fun119351_ip) {
 0:
                        zulu = _closure2_slot12;
                        mike = null;
                        if(!(mike != zulu)) { _fun119351_ip = 56; continue _fun119351 }
 13:
                        mike = global;
                        tango = mike.Object;
                        zulu = tango.keys;
                        mike = _closure2_slot12;
                        zulu = zulu.bind(tango)(mike);
                        mike = 0;
                        zulu = zulu[mike];
                        mike = _closure2_slot15;
                        entity = mike.focus;
                        entity = entity.bind(mike)(zulu);
 56:
                        entity = undefined;
                        return entity;
                    }
                };
                entity = zulu.bind(oscar)(entity, mike);
                zulu = _closure1_slot10;
                entity = 30;
                entity = whiskey[entity];
                entity = variable37.bind(tango)(entity);
                mike = entity.SafeAreaPaddingView;
                entity = {};
                oscar = true;
                entity['top'] = oscar;
                report = !report;
                entity['bottom'] = report;
                report = romeo.safeAreaContainer;
                entity['style'] = report;
                golf = _closure1_slot12;
                report = 31;
                report = whiskey[report];
                oscar = variable36.bind(tango)(report);
                report = {};
                options = romeo.container;
                report['style'] = options;
                offset = _closure1_slot12;
                verify = _closure1_slot5;
                options = {};
                yankee = romeo.header;
                options['style'] = yankee;
                source = _closure1_slot10;
                backup = 32;
                yankee = whiskey[backup];
                yankee = variable37.bind(tango)(yankee);
                update = yankee.HeaderActionButton;
                yankee = {};
                control = 9;
                equality = whiskey[control];
                equality = variable37.bind(tango)(equality);
                variable39 = equality.intl;
                variable38 = variable39.string;
                equality = whiskey[control];
                equality = variable37.bind(tango)(equality);
                equality = equality.t;
                equality = equality.ETE/oK;
                equality = variable38.bind(variable39)(equality);
                yankee['accessibilityLabel'] = equality;
                equality = function() { // Original name: onPress
                    _fun119352: for(var _fun119352_ip = 0; ; ) switch(_fun119352_ip) {
 0:
                        tango = _closure1_slot0;
                        mike = _closure1_slot2;
                        entity = 20;
                        mike = mike[entity];
                        entity = undefined;
                        options = tango.bind(entity)(mike);
                        golf = options.isPollCreationEmpty;
                        oscar = _closure2_slot2;
                        report = _closure2_slot1;
                        tango = _closure2_slot3;
                        tango = golf.bind(options)(oscar, report, tango);
                        if(tango) { _fun119352_ip = 121; continue _fun119352 }
 56:
                        report = _closure1_slot0;
                        oscar = _closure1_slot2;
                        tango = 28;
                        tango = oscar[tango];
                        oscar = report.bind(entity)(tango);
                        report = oscar.openAlert;
                        golf = _closure1_slot10;
                        tango = _closure1_slot15;
                        zulu = {};
                        options = _closure2_slot14;
                        zulu['onConfirm'] = options;
                        tango = golf.bind(entity)(tango, zulu);
                        zulu = 'poll-creation-unsaved-changes';
                        zulu = report.bind(oscar)(zulu, tango);
                        _fun119352_ip = 129; continue _fun119352;
 121:
                        mike = _closure2_slot14;
                        mike = mike.bind(entity)();
 129:
                        return entity;
                    }
                };
                yankee['onPress'] = equality;
                equality = 33;
                equality = whiskey[equality];
                equality = variable36.bind(tango)(equality);
                yankee['source'] = equality;
                equality = romeo.actionButton;
                yankee['style'] = equality;
                update = source.bind(tango)(update, yankee);
                yankee = new Array(3);
                yankee[0] = update;
                equality = _closure1_slot10;
                update = 13;
                update = whiskey[update];
                update = variable37.bind(tango)(update);
                source = update.Text;
                update = {'accessibilityRole': 'header', 'variant': 'redesign/heading-18/bold', 'color': 'header-primary'};
                variable36 = romeo.title;
                update['style'] = variable36;
                variable36 = whiskey[control];
                variable36 = variable37.bind(tango)(variable36);
                variable39 = variable36.intl;
                variable38 = variable39.string;
                variable36 = whiskey[control];
                variable36 = variable37.bind(tango)(variable36);
                variable36 = variable36.t;
                variable36 = variable36.Flr51t;
                variable36 = variable38.bind(variable39)(variable36);
                update['children'] = variable36;
                update = equality.bind(tango)(source, update);
                yankee[1] = update;
                source = _closure1_slot10;
                backup = whiskey[backup];
                backup = variable37.bind(tango)(backup);
                update = backup.HeaderActionButton;
                backup = {};
                equality = whiskey[control];
                equality = variable37.bind(tango)(equality);
                variable36 = equality.intl;
                equality = variable36.string;
                whiskey = whiskey[control];
                whiskey = variable37.bind(tango)(whiskey);
                whiskey = whiskey.t;
                whiskey = whiskey.JOj8Zm;
                whiskey = equality.bind(variable36)(whiskey);
                backup['text'] = whiskey;
                equality = romeo.actionButton;
                whiskey = new Array(2);
                whiskey[0] = equality;
                equality = romeo.postButton;
                whiskey[1] = equality;
                backup['style'] = whiskey;
                backup['disabled'] = record;
                backup['onPress'] = vacuum;
                backup = source.bind(tango)(update, backup);
                yankee[2] = backup;
                options['children'] = yankee;
                verify = offset.bind(tango)(verify, options);
                options = new Array(3);
                options[0] = verify;
                yankee = _closure1_slot12;
                offset = _closure1_slot6;
                verify = {};
                backup = romeo.viewPadding;
                verify['style'] = backup;
                backup = romeo.scrollContainer;
                verify['contentContainerStyle'] = backup;
                record = null;
                update = record != quebec;
                if(!update) { _fun119346_ip = 1072; continue _fun119346 }
 1017:
                vacuum = _closure1_slot10;
                source = _closure1_slot1;
                whiskey = _closure1_slot2;
                backup = 34;
                backup = whiskey[backup];
                source = source.bind(tango)(backup);
                backup = {};
                equality = record == quebec;
                whiskey = undefined;
                if(equality) { _fun119346_ip = 1062; continue _fun119346 }
 1052:
                equality = quebec.getAnyErrorMessage;
                whiskey = equality.bind(quebec)();
 1062:
                backup['children'] = whiskey;
                update = vacuum.bind(tango)(source, backup);
 1072:
                backup = new Array(4);
                backup[0] = update;
                vacuum = _closure1_slot10;
                source = _closure1_slot14;
                update = {};
                equality = sierra.refWithKey;
                whiskey = 'question';
                whiskey = equality.bind(sierra)(whiskey);
                update['ref'] = whiskey;
                update['onChange'] = lima;
                sierra = sierra.focusNext;
                update['onSubmitEditing'] = sierra;
                sierra = record == target;
                record = undefined;
                if(sierra) { _fun119346_ip = 1140; continue _fun119346 }
 1134:
                record = target.question;
 1140:
                update['error'] = record;
                update = vacuum.bind(tango)(source, update);
                backup[1] = update;
                if(!kilo) { _fun119346_ip = 1199; continue _fun119346 }
 1157:
                vacuum = _closure1_slot10;
                source = _closure1_slot1;
                record = _closure1_slot2;
                update = 35;
                update = record[update];
                source = source.bind(tango)(update);
                update = {};
                update['selectedLayoutType'] = status;
                update['setSelectedLayoutType'] = config;
                kilo = vacuum.bind(tango)(source, update);
 1199:
                backup[2] = kilo;
                source = _closure1_slot12;
                update = _closure1_slot5;
                kilo = {};
                config = romeo.answerInputsContainer;
                vacuum = new Array(2);
                vacuum[0] = config;
                record = _closure1_slot0;
                config = _closure1_slot2;
                lima = 36;
                config = config[lima];
                config = record.bind(tango)(config);
                config = config.PollLayoutTypes;
                config = config.IMAGE_ONLY_ANSWERS;
                config = status === config;
                if(!config) { _fun119346_ip = 1272; continue _fun119346 }
 1266:
                config = romeo.imageOnlyContainer;
 1272:
                vacuum[1] = config;
                kilo['style'] = vacuum;
                record = _closure1_slot10;
                equality = _closure1_slot0;
                target = _closure1_slot2;
                vacuum = 37;
                vacuum = target[vacuum];
                vacuum = equality.bind(tango)(vacuum);
                config = vacuum.FormLabel;
                vacuum = {};
                sierra = target[control];
                sierra = equality.bind(tango)(sierra);
                whiskey = sierra.intl;
                sierra = whiskey.string;
                target = target[control];
                target = equality.bind(tango)(target);
                target = target.t;
                target = target.oMBfeX;
                target = sierra.bind(whiskey)(target);
                vacuum['text'] = target;
                target = 'text-secondary';
                vacuum['color'] = target;
                target = romeo.label;
                vacuum['style'] = target;
                config = record.bind(tango)(config, vacuum);
                vacuum = new Array(3);
                vacuum[0] = config;
                record = context.map;
                config = function(argFoo, argBar) {
                    _fun119353: for(var _fun119353_ip = 0; ; ) switch(_fun119353_ip) {
 0:
                        entity = argFoo;
                        report = _closure1_slot10;
                        zulu = _closure1_slot1;
                        tango = _closure1_slot2;
                        mike = 38;
                        mike = tango[mike];
                        tango = undefined;
                        zulu = zulu.bind(tango)(mike);
                        mike = {};
                        oscar = _closure2_slot15;
                        yankee = oscar.refWithKey;
                        romeo = entity.localCreationAnswerId;
                        golf = global;
                        verify = golf.HermesInternal;
                        verify = verify.concat;
                        offset = 'answer-';
                        verify = verify.bind(offset)(romeo);
                        verify = yankee.bind(oscar)(verify);
                        mike['inputRef'] = verify;
                        mike['answer'] = entity;
                        verify = argBar;
                        mike['index'] = verify;
                        verify = _closure2_slot0;
                        verify = verify.id;
                        mike['channelId'] = verify;
                        verify = _closure2_slot3;
                        mike['layout'] = verify;
                        oscar = oscar.focusNext;
                        mike['onSubmitEditing'] = oscar;
                        oscar = _closure2_slot7;
                        mike['onAnswerTextChange'] = oscar;
                        oscar = _closure2_slot8;
                        mike['onAnswerEmojiSelect'] = oscar;
                        oscar = _closure2_slot10;
                        mike['onRemoveAnswer'] = oscar;
                        oscar = _closure2_slot11;
                        mike['onRemoveAnswerImage'] = oscar;
                        oscar = _closure2_slot6;
                        mike['canRemoveAnswer'] = oscar;
                        verify = _closure2_slot12;
                        oscar = null;
                        verify = oscar == verify;
                        oscar = undefined;
                        if(verify) { _fun119353_ip = 222; continue _fun119353 }
 192:
                        options = _closure2_slot12;
                        verify = entity.localCreationAnswerId;
                        golf = golf.HermesInternal;
                        golf = golf.concat;
                        golf = golf.bind(offset)(verify);
                        oscar = options[golf];
 222:
                        mike['error'] = oscar;
                        entity = entity.localCreationAnswerId;
                        entity = report.bind(tango)(zulu, mike, entity);
                        return entity;
                    }
                };
                config = record.bind(context)(config);
                vacuum[1] = config;
                if(!sequence) { _fun119346_ip = 1475; continue _fun119346 }
 1417:
                context = _closure1_slot10;
                record = _closure1_slot16;
                config = {};
                sierra = _closure1_slot0;
                target = _closure1_slot2;
                target = target[lima];
                target = sierra.bind(tango)(target);
                target = target.PollLayoutTypes;
                target = target.DEFAULT;
                target = status === target;
                config['isDefaultLayout'] = target;
                config['onPress'] = papa;
                sequence = context.bind(tango)(record, config);
 1475:
                vacuum[2] = sequence;
                kilo['children'] = vacuum;
                kilo = source.bind(tango)(update, kilo);
                backup[3] = kilo;
                verify['children'] = backup;
                verify = yankee.bind(tango)(offset, verify);
                options[1] = verify;
                yankee = _closure1_slot12;
                offset = _closure1_slot5;
                verify = {};
                romeo = romeo.pollConfigSection;
                verify['style'] = romeo;
                kilo = _closure1_slot10;
                backup = _closure1_slot17;
                romeo = {};
                romeo['selectedDuration'] = echo;
                romeo['onChange'] = result;
                backup = kilo.bind(tango)(backup, romeo);
                romeo = new Array(2);
                romeo[0] = backup;
                kilo = _closure1_slot10;
                source = _closure1_slot0;
                result = _closure1_slot2;
                foxtrot = 39;
                foxtrot = result[foxtrot];
                foxtrot = source.bind(tango)(foxtrot);
                backup = foxtrot.TableCheckboxRow;
                foxtrot = {};
                echo = result[control];
                echo = source.bind(tango)(echo);
                update = echo.intl;
                echo = update.string;
                result = result[control];
                result = source.bind(tango)(result);
                result = result.t;
                result = result.Ux+iQU;
                result = echo.bind(update)(result);
                foxtrot['label'] = result;
                foxtrot['checked'] = output;
                sizing = function() { // Original name: onPress
                    zulu = _closure2_slot5;
                    entity = _closure2_slot4;
                    mike = !entity;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
                    return entity;
                };
                foxtrot['onPress'] = sizing;
                foxtrot = kilo.bind(tango)(backup, foxtrot);
                romeo[1] = foxtrot;
                verify['children'] = romeo;
                verify = yankee.bind(tango)(offset, verify);
                options[2] = verify;
                report['children'] = options;
                report = golf.bind(tango)(oscar, report);
                entity['children'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            }
        };
        zulu['default'] = mike;
        return entity;
    }
})();