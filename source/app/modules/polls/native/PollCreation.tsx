// app/modules/polls/native/PollCreation.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
        report = argBar;
        romeon = argBaz;
        zuuluu = argFre;
        oscard = argPlu;
        var _closure1_slot0 = report;
        var _closure1_slot1 = romeon;
        var _closure1_slot2 = oscard;
        entity = function(argFoo) { // Original name: UnsavedChangesAlertModal
            entity = argFoo;
            option = entity.onConfirm;
            tangon = _closure1_slot10;
            kiloes = _closure1_slot0;
            sizing = _closure1_slot2;
            offset = 8;
            entity = sizing[offset];
            zuuluu = undefined;
            entity = kiloes.bind(zuuluu)(entity);
            michal = entity.AlertModal;
            entity = {};
            verify = 9;
            report = sizing[verify];
            report = kiloes.bind(zuuluu)(report);
            golfie = report.intl;
            oscard = golfie.string;
            report = sizing[verify];
            report = kiloes.bind(zuuluu)(report);
            report = report.t;
            report = report.HMrgcn;
            report = oscard.bind(golfie)(report);
            entity['title'] = report;
            report = sizing[verify];
            report = kiloes.bind(zuuluu)(report);
            golfie = report.intl;
            oscard = golfie.string;
            report = sizing[verify];
            report = kiloes.bind(zuuluu)(report);
            report = report.t;
            report = report.Wxa/j4;
            report = oscard.bind(golfie)(report);
            entity['content'] = report;
            golfie = _closure1_slot12;
            oscard = _closure1_slot11;
            report = {};
            backup = _closure1_slot10;
            romeon = sizing[offset];
            romeon = kiloes.bind(zuuluu)(romeon);
            foxtra = romeon.AlertActionButton;
            romeon = {};
            output = sizing[verify];
            output = kiloes.bind(zuuluu)(output);
            echoed = output.intl;
            result = echoed.string;
            output = sizing[verify];
            output = kiloes.bind(zuuluu)(output);
            output = output.t;
            output = output.TzJA4u;
            output = result.bind(echoed)(output);
            romeon['text'] = output;
            romeon['onPress'] = option;
            option = 'confirm';
            romeon = backup.bind(zuuluu)(foxtra, romeon, option);
            option = new Array(2);
            option[0] = romeon;
            romeon = _closure1_slot10;
            offset = sizing[offset];
            offset = kiloes.bind(zuuluu)(offset);
            yankee = offset.AlertActionButton;
            offset = {};
            foxtra = 'secondary';
            offset['variant'] = foxtra;
            foxtra = sizing[verify];
            foxtra = kiloes.bind(zuuluu)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            verify = sizing[verify];
            verify = kiloes.bind(zuuluu)(verify);
            verify = verify.t;
            verify = verify.2BR5R0;
            verify = foxtra.bind(backup)(verify);
            offset['text'] = verify;
            verify = 'back';
            verify = romeon.bind(zuuluu)(yankee, offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(zuuluu)(oscard, report);
            entity['actions'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        var _closure1_slot15 = entity;
        entity = function(argFoo) { // Original name: AddAnswerButton
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = argFoo;
                verify = entity.onPress;
                report = entity.isDefaultLayout;
                entity = _closure1_slot13;
                tangon = undefined;
                option = entity.bind(tangon)();
                if(report) { _fun00004_ip = 38; continue _fun00003 }
 30:
                golfie = option.addAnswerButtonImageOnly;
                _fun00004_ip = 44; continue _fun00003;
 38:
                golfie = option.addAnswerButtonDefault;
 44:
                zuuluu = _closure1_slot10;
                romeon = _closure1_slot1;
                oscard = _closure1_slot2;
                yankee = 11;
                entity = oscard[yankee];
                michal = romeon.bind(tangon)(entity);
                entity = {};
                foxtra = 12;
                foxtra = oscard[foxtra];
                foxtra = romeon.bind(tangon)(foxtra);
                entity['source'] = foxtra;
                yankee = oscard[yankee];
                yankee = romeon.bind(tangon)(yankee);
                yankee = yankee.Sizes;
                yankee = yankee.LARGE;
                entity['size'] = yankee;
                yankee = option.addAnswerIcon;
                yankee = yankee.color;
                entity['color'] = yankee;
                yankee = zuuluu.bind(tangon)(michal, entity);
                zuuluu = _closure1_slot10;
                michal = _closure1_slot4;
                entity = {};
                entity['onPress'] = verify;
                entity['style'] = golfie;
                golfie = 'button';
                entity['accessibilityRole'] = golfie;
                romeon = _closure1_slot0;
                output = 9;
                golfie = oscard[output];
                golfie = romeon.bind(tangon)(golfie);
                verify = golfie.intl;
                golfie = verify.string;
                oscard = oscard[output];
                oscard = romeon.bind(tangon)(oscard);
                oscard = oscard.t;
                oscard = oscard.B2UvmZ;
                oscard = golfie.bind(verify)(oscard);
                entity['accessibilityLabel'] = oscard;
                if(report) { _fun00004_ip = 251; continue _fun00003 }
 216:
                golfie = _closure1_slot10;
                oscard = _closure1_slot5;
                report = {};
                option = option.innerAnswerButton;
                report['style'] = option;
                report['children'] = yankee;
                report = golfie.bind(tangon)(oscard, report);
                _fun00004_ip = 380; continue _fun00003;
 251:
                option = _closure1_slot12;
                golfie = _closure1_slot11;
                oscard = {};
                verify = new Array(2);
                verify[0] = yankee;
                romeon = _closure1_slot10;
                sizing = _closure1_slot0;
                foxtra = _closure1_slot2;
                offset = 13;
                offset = foxtra[offset];
                offset = sizing.bind(tangon)(offset);
                yankee = offset.Text;
                offset = {'variant': 'text-md/medium', 'color': 'text-muted'};
                backup = foxtra[output];
                backup = sizing.bind(tangon)(backup);
                kiloes = backup.intl;
                backup = kiloes.string;
                foxtra = foxtra[output];
                foxtra = sizing.bind(tangon)(foxtra);
                foxtra = foxtra.t;
                foxtra = foxtra.B2UvmZ;
                foxtra = backup.bind(kiloes)(foxtra);
                offset['children'] = foxtra;
                offset = romeon.bind(tangon)(yankee, offset);
                verify[1] = offset;
                oscard['children'] = verify;
                report = option.bind(tangon)(golfie, oscard);
 380:
                entity['children'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            }
        };
        var _closure1_slot16 = entity;
        entity = function(argFoo) { // Original name: PollDurationSelectionRow
            entity = argFoo;
            michal = entity.selectedDuration;
            var _closure2_slot0 = michal;
            entity = entity.onChange;
            var _closure2_slot1 = entity;
            zuuluu = _closure1_slot1;
            verify = _closure1_slot2;
            entity = 14;
            entity = verify[entity];
            tangon = undefined;
            entity = zuuluu.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            option = entity[michal];
            zuuluu = _closure1_slot10;
            oscard = _closure1_slot0;
            entity = 18;
            entity = verify[entity];
            entity = oscard.bind(tangon)(entity);
            michal = entity.TableRow;
            entity = {};
            offset = 9;
            yankee = verify[offset];
            yankee = oscard.bind(tangon)(yankee);
            foxtra = yankee.intl;
            romeon = foxtra.string;
            yankee = verify[offset];
            yankee = oscard.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.bGHzxc;
            yankee = romeon.bind(foxtra)(yankee);
            entity['label'] = yankee;
            yankee = verify[offset];
            yankee = oscard.bind(tangon)(yankee);
            foxtra = yankee.intl;
            romeon = foxtra.string;
            yankee = verify[offset];
            yankee = oscard.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.bGHzxc;
            backup = romeon.bind(foxtra)(yankee);
            yankee = global;
            yankee = yankee.HermesInternal;
            foxtra = yankee.concat;
            romeon = '';
            yankee = ' ';
            yankee = foxtra.bind(romeon)(backup, yankee, option);
            entity['accessibilityLabel'] = yankee;
            yankee = verify[offset];
            yankee = oscard.bind(tangon)(yankee);
            romeon = yankee.intl;
            yankee = romeon.string;
            offset = verify[offset];
            offset = oscard.bind(tangon)(offset);
            offset = offset.t;
            offset = offset.A4PJ1t;
            offset = yankee.bind(romeon)(offset);
            entity['accessibilityHint'] = offset;
            golfie = function() { // Original name: onPress
                golfie = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 19;
                tangon = zuuluu[entity];
                entity = undefined;
                report = golfie.bind(entity)(tangon);
                tangon = report.dismissKeyboard;
                tangon = tangon.bind(report)();
                report = _closure1_slot1;
                tangon = 15;
                tangon = zuuluu[tangon];
                oscard = report.bind(entity)(tangon);
                report = oscard.openLazy;
                tangon = 17;
                tangon = zuuluu[tangon];
                golfie = golfie.bind(entity)(tangon);
                tangon = 16;
                tangon = zuuluu[tangon];
                zuuluu = zuuluu.paths;
                tangon = golfie.bind(entity)(tangon, zuuluu);
                zuuluu = _closure1_slot9;
                michal = {};
                option = _closure2_slot0;
                michal['selectedDuration'] = option;
                golfie = _closure2_slot1;
                michal['onChange'] = golfie;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            entity['onPress'] = golfie;
            golfie = _closure1_slot10;
            report = 13;
            report = verify[report];
            report = oscard.bind(tangon)(report);
            oscard = report.Text;
            report = {'variant': 'text-md/normal', 'color': 'text-muted'};
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['trailing'] = report;
            report = true;
            entity['arrow'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        var _closure1_slot17 = entity;
        entity = global;
        option = entity.Object;
        golfie = option.defineProperty;
        tangon = {};
        entity = true;
        tangon['value'] = entity;
        entity = '__esModule';
        entity = golfie.bind(option)(zuuluu, entity, tangon);
        entity = 0;
        golfie = oscard[entity];
        tangon = argCor;
        entity = undefined;
        option = tangon.bind(entity)(golfie);
        var _closure1_slot3 = option;
        foxtra = 1;
        tangon = oscard[foxtra];
        tangon = report.bind(entity)(tangon);
        golfie = tangon.TouchableOpacity;
        var _closure1_slot4 = golfie;
        golfie = tangon.View;
        var _closure1_slot5 = golfie;
        tangon = tangon.ScrollView;
        var _closure1_slot6 = tangon;
        tangon = 2;
        tangon = oscard[tangon];
        tangon = romeon.bind(entity)(tangon);
        var _closure1_slot7 = tangon;
        tangon = 3;
        tangon = oscard[tangon];
        tangon = report.bind(entity)(tangon);
        golfie = tangon.MAX_POLL_QUESTION_LENGTH;
        var _closure1_slot8 = golfie;
        tangon = tangon.POLL_CREATION_DURATION_ACTION_SHEET_KEY;
        var _closure1_slot9 = tangon;
        tangon = 4;
        tangon = oscard[tangon];
        tangon = report.bind(entity)(tangon);
        golfie = tangon.jsx;
        var _closure1_slot10 = golfie;
        golfie = tangon.Fragment;
        var _closure1_slot11 = golfie;
        tangon = tangon.jsxs;
        var _closure1_slot12 = tangon;
        tangon = 5;
        tangon = oscard[tangon];
        verify = report.bind(entity)(tangon);
        golfie = verify.createStyles;
        tangon = {};
        offset = {};
        yankee = 18;
        offset['paddingHorizontal'] = yankee;
        tangon['viewPadding'] = offset;
        offset = {'paddingVertical': 20, 'gap': 16};
        tangon['scrollContainer'] = offset;
        offset = {};
        offset['flex'] = foxtra;
        tangon['container'] = offset;
        offset = {};
        yankee = 6;
        backup = oscard[yankee];
        backup = romeon.bind(entity)(backup);
        backup = backup.colors;
        backup = backup.BACKGROUND_PRIMARY;
        offset['backgroundColor'] = backup;
        offset['flex'] = foxtra;
        tangon['safeAreaContainer'] = offset;
        kiloes = 10;
        offset = {'flexDirection': 'row', 'paddingHorizontal': 18, 'paddingVertical': 10};
        tangon['header'] = offset;
        offset = {'flex': 0, 'justifyContent': 'flex-start', 'minWidth': 48, 'paddingHorizontal': 0, 'marginHorizontal': 0};
        tangon['actionButton'] = offset;
        offset = {};
        backup = 'flex-end';
        offset['justifyContent'] = backup;
        tangon['postButton'] = offset;
        offset = {'textAlign': 'center', 'flexGrow': 1};
        tangon['title'] = offset;
        offset = {};
        backup = 14;
        offset['fontSize'] = backup;
        tangon['label'] = offset;
        offset = {'marginVertical': 20, 'rowGap': 16};
        tangon['answerInputsContainer'] = offset;
        offset = {'paddingVertical': null, 'paddingLeft': 14, 'marginRight': 30, 'display': 'flex', 'flexDirection': 'row', 'gap': 16, 'alignItems': 'center', 'justifyContent': 'flex-start'};
        backup = 7;
        backup = oscard[backup];
        sizing = report.bind(entity)(backup);
        backup = sizing.isAndroid;
        sizing = backup.bind(sizing)();
        backup = 8;
        if(!sizing) { _fun00002_ip = 491; continue _fun00001 }
 488:
        backup = kiloes;
 491:
        offset['paddingVertical'] = backup;
        backup = oscard[yankee];
        backup = romeon.bind(entity)(backup);
        backup = backup.colors;
        backup = backup.BACKGROUND_MESSAGE_HOVER;
        offset['backgroundColor'] = backup;
        backup = oscard[yankee];
        backup = romeon.bind(entity)(backup);
        backup = backup.radii;
        backup = backup.lg;
        offset['borderRadius'] = backup;
        tangon['addAnswerButtonDefault'] = offset;
        offset = {'width': '48%', 'aspectRatio': 1};
        backup = oscard[yankee];
        backup = romeon.bind(entity)(backup);
        backup = backup.colors;
        backup = backup.BACKGROUND_MESSAGE_HOVER;
        offset['backgroundColor'] = backup;
        backup = oscard[yankee];
        backup = romeon.bind(entity)(backup);
        backup = backup.radii;
        backup = backup.lg;
        offset['borderRadius'] = backup;
        tangon['addAnswerButtonImageOnly'] = offset;
        offset = {'width': '100%', 'aspectRatio': 1, 'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
        tangon['innerAnswerButton'] = offset;
        offset = {};
        backup = oscard[yankee];
        backup = romeon.bind(entity)(backup);
        backup = backup.colors;
        backup = backup.TEXT_MUTED;
        offset['color'] = backup;
        tangon['addAnswerIcon'] = offset;
        offset = {'flexDirection': 'row', 'flexWrap': 'wrap', 'justifyContent': 'space-between', 'gap': 8};
        tangon['imageOnlyContainer'] = offset;
        offset = {};
        offset['borderTopWidth'] = foxtra;
        yankee = oscard[yankee];
        yankee = romeon.bind(entity)(yankee);
        yankee = yankee.colors;
        yankee = yankee.BACKGROUND_MODIFIER_HOVER;
        offset['borderColor'] = yankee;
        tangon['pollConfigSection'] = offset;
        tangon = golfie.bind(verify)(tangon);
        var _closure1_slot13 = tangon;
        golfie = option.forwardRef;
        tangon = function(argFoo, argBar) {
            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                entity = argFoo;
                report = entity.onChange;
                oscard = entity.onSubmitEditing;
                option = entity.error;
                tangon = _closure1_slot10;
                romeon = _closure1_slot0;
                foxtra = _closure1_slot2;
                entity = 10;
                entity = foxtra[entity];
                zuuluu = undefined;
                entity = romeon.bind(zuuluu)(entity);
                michal = entity.TextInput;
                entity = {};
                verify = argBar;
                entity['ref'] = verify;
                verify = 'center';
                entity['textAlignVertical'] = verify;
                verify = 9;
                offset = foxtra[verify];
                offset = romeon.bind(zuuluu)(offset);
                backup = offset.intl;
                yankee = backup.string;
                offset = foxtra[verify];
                offset = romeon.bind(zuuluu)(offset);
                offset = offset.t;
                offset = offset.WBiKnJ;
                offset = yankee.bind(backup)(offset);
                entity['label'] = offset;
                offset = foxtra[verify];
                offset = romeon.bind(zuuluu)(offset);
                backup = offset.intl;
                yankee = backup.string;
                offset = foxtra[verify];
                offset = romeon.bind(zuuluu)(offset);
                offset = offset.t;
                offset = offset.WBiKnJ;
                offset = yankee.bind(backup)(offset);
                entity['accessibilityLabel'] = offset;
                offset = foxtra[verify];
                offset = romeon.bind(zuuluu)(offset);
                yankee = offset.intl;
                offset = yankee.string;
                verify = foxtra[verify];
                verify = romeon.bind(zuuluu)(verify);
                verify = verify.t;
                verify = verify./uQqJS;
                verify = offset.bind(yankee)(verify);
                entity['placeholder'] = verify;
                entity['onChange'] = report;
                report = true;
                entity['isClearable'] = report;
                verify = null;
                offset = verify != option;
                verify = 'default';
                if(!offset) { _fun00006_ip = 252; continue _fun00005 }
 248:
                verify = 'error';
 252:
                entity['status'] = verify;
                entity['errorMessage'] = option;
                golfie = _closure1_slot8;
                entity['maxLength'] = golfie;
                golfie = 'next';
                entity['returnKeyType'] = golfie;
                golfie = false;
                entity['blurOnSubmit'] = golfie;
                entity['onSubmitEditing'] = oscard;
                oscard = 'none';
                entity['textContentType'] = oscard;
                entity['autoFocus'] = report;
                entity['autoCorrect'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            }
        };
        tangon = golfie.bind(option)(tangon);
        var _closure1_slot14 = tangon;
        tangon = 41;
        tangon = oscard[tangon];
        oscard = report.bind(entity)(tangon);
        report = oscard.fileFinishedImporting;
        tangon = 'modules/polls/native/PollCreation.tsx';
        tangon = report.bind(oscard)(tangon);
        michal = function(argFoo) { // Original name: PollCreation
            _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                entity = argFoo;
                zuuluu = entity.channel;
                var _closure2_slot0 = zuuluu;
                variable37 = _closure1_slot0;
                whisks = _closure1_slot2;
                entity = 20;
                entity = whisks[entity];
                tangon = undefined;
                michal = variable37.bind(tangon)(entity);
                entity = michal.useCanPostImagePolls;
                kiloes = entity.bind(michal)();
                variable36 = _closure1_slot1;
                entity = 21;
                entity = whisks[entity];
                michal = variable36.bind(tangon)(entity);
                entity = {};
                report = 22;
                oscard = whisks[report];
                oscard = variable37.bind(tangon)(oscard);
                oscard = oscard.ImpressionTypes;
                oscard = oscard.VIEW;
                entity['type'] = oscard;
                report = whisks[report];
                report = variable37.bind(tangon)(report);
                report = report.ImpressionNames;
                report = report.POLL_EDITOR_VIEWED;
                entity['name'] = report;
                entity = michal.bind(tangon)(entity);
                entity = _closure1_slot13;
                romeon = entity.bind(tangon)();
                entity = 23;
                entity = whisks[entity];
                oscard = variable37.bind(tangon)(entity);
                report = oscard.useStateFromStores;
                entity = _closure1_slot7;
                michal = new Array(1);
                michal[0] = entity;
                entity = function() {
                    entity = _closure1_slot7;
                    entity = entity.keyboardOpen;
                    return entity;
                };
                report = report.bind(oscard)(michal, entity);
                entity = 24;
                entity = whisks[entity];
                michal = variable36.bind(tangon)(entity);
                entity = 25;
                entity = whisks[entity];
                entity = variable37.bind(tangon)(entity);
                entity = entity.closeCreatePollModal;
                michal = michal.bind(tangon)(zuuluu, entity);
                cntext = michal.answers;
                var _closure2_slot1 = cntext;
                entity = michal.question;
                var _closure2_slot2 = entity;
                status = michal.selectedLayoutType;
                var _closure2_slot3 = status;
                config = michal.setSelectedLayoutType;
                output = michal.allowMultiSelect;
                var _closure2_slot4 = output;
                entity = michal.setAllowMultiSelect;
                var _closure2_slot5 = entity;
                sequen = michal.canAddMoreAnswers;
                entity = michal.canRemoveMoreAnswers;
                var _closure2_slot6 = entity;
                limora = michal.handleQuestionChange;
                entity = michal.handleAnswerTextChange;
                var _closure2_slot7 = entity;
                entity = michal.handleEmojiSelect;
                var _closure2_slot8 = entity;
                papara = michal.handleAddAnswer;
                var _closure2_slot9 = papara;
                entity = michal.handleRemoveAnswer;
                var _closure2_slot10 = entity;
                entity = michal.handleRemoveAnswerImage;
                var _closure2_slot11 = entity;
                vacuum = michal.handleSubmitPoll;
                target = michal.fieldErrors;
                var _closure2_slot12 = target;
                echoed = michal.duration;
                result = michal.setDuration;
                quebec = michal.createPollError;
                record = michal.submitting;
                entity = michal.shouldFocusOnInvalidField;
                var _closure2_slot13 = entity;
                golfie = michal.setShouldFocusOnInvalidField;
                var _closure2_slot14 = golfie;
                michal = 26;
                michal = whisks[michal];
                zuuluu = variable37.bind(tangon)(michal);
                michal = zuuluu.useTrackPollCreationEvents;
                michal = michal.bind(zuuluu)(cntext, output, status);
                michal = michal.trackPollCreationCancelled;
                var _closure2_slot15 = michal;
                michal = function() { // Original name: handleClose
                    michal = _closure2_slot15;
                    entity = undefined;
                    michal = michal.bind(entity)();
                    zuuluu = _closure1_slot0;
                    tangon = _closure1_slot2;
                    michal = 25;
                    michal = tangon[michal];
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.closeCreatePollModal;
                    michal = michal.bind(zuuluu)();
                    return entity;
                };
                var _closure2_slot16 = michal;
                michal = 27;
                michal = whisks[michal];
                oscard = variable37.bind(tangon)(michal);
                zuuluu = oscard.useNavigatorBackPressHandler;
                michal = function() {
                    _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                        tangon = _closure1_slot0;
                        zuuluu = _closure1_slot2;
                        michal = 20;
                        michal = zuuluu[michal];
                        zuuluu = undefined;
                        option = tangon.bind(zuuluu)(michal);
                        golfie = option.isPollCreationEmpty;
                        oscard = _closure2_slot2;
                        report = _closure2_slot1;
                        tangon = _closure2_slot3;
                        tangon = golfie.bind(option)(oscard, report, tangon);
                        if(tangon) { _fun00010_ip = 123; continue _fun00009 }
 56:
                        report = _closure1_slot0;
                        oscard = _closure1_slot2;
                        tangon = 28;
                        tangon = oscard[tangon];
                        oscard = report.bind(zuuluu)(tangon);
                        report = oscard.openAlert;
                        golfie = _closure1_slot10;
                        tangon = _closure1_slot15;
                        entity = {};
                        option = _closure2_slot16;
                        entity['onConfirm'] = option;
                        tangon = golfie.bind(zuuluu)(tangon, entity);
                        entity = 'poll-creation-unsaved-changes';
                        entity = report.bind(oscard)(entity, tangon);
                        entity = true;
                        _fun00010_ip = 133; continue _fun00009;
 123:
                        michal = _closure2_slot15;
                        michal = michal.bind(zuuluu)();
                        entity = false;
 133:
                        return entity;
                    }
                };
                michal = zuuluu.bind(oscard)(michal);
                michal = 29;
                michal = whisks[michal];
                zuuluu = variable36.bind(tangon)(michal);
                michal = {};
                oscard = function() { // Original name: onAddAnswer
                    michal = _closure2_slot9;
                    entity = undefined;
                    michal = michal.bind(entity)();
                    return entity;
                };
                michal['onAddAnswer'] = oscard;
                sierra = zuuluu.bind(tangon)(michal);
                var _closure2_slot17 = sierra;
                oscard = _closure1_slot3;
                zuuluu = oscard.useEffect;
                michal = new Array(4);
                michal[0] = target;
                michal[1] = sierra;
                michal[2] = golfie;
                michal[3] = entity;
                entity = function() {
                    _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                        entity = global;
                        tangon = entity.Object;
                        zuuluu = tangon.keys;
                        michal = _closure2_slot12;
                        tangon = zuuluu.bind(tangon)(michal);
                        zuuluu = tangon.length;
                        michal = 0;
                        if(!(zuuluu > michal)) { _fun00012_ip = 182; continue _fun00011 }
 39:
                        oscard = _closure1_slot0;
                        option = _closure1_slot2;
                        report = 9;
                        golfie = option[report];
                        zuuluu = undefined;
                        golfie = oscard.bind(zuuluu)(golfie);
                        offset = golfie.intl;
                        verify = offset.formatToPlainString;
                        report = option[report];
                        report = oscard.bind(zuuluu)(report);
                        report = report.t;
                        golfie = report.w8e4qK;
                        report = {};
                        yankee = tangon.length;
                        report['numOfErrors'] = yankee;
                        golfie = verify.bind(offset)(golfie, report);
                        report = 30;
                        report = option[report];
                        report = oscard.bind(zuuluu)(report);
                        oscard = report.AccessibilityAnnouncer;
                        report = oscard.announce;
                        report = report.bind(oscard)(golfie);
                        report = _closure2_slot13;
                        if(!report) { _fun00012_ip = 182; continue _fun00011 }
 152:
                        report = tangon[michal];
                        tangon = _closure2_slot17;
                        michal = tangon.focus;
                        michal = michal.bind(tangon)(report);
                        michal = _closure2_slot14;
                        entity = false;
                        entity = michal.bind(zuuluu)(entity);
 182:
                        entity = undefined;
                        return entity;
                    }
                };
                entity = zuuluu.bind(oscard)(entity, michal);
                zuuluu = _closure1_slot10;
                entity = 31;
                entity = whisks[entity];
                entity = variable37.bind(tangon)(entity);
                michal = entity.SafeAreaPaddingView;
                entity = {};
                oscard = true;
                entity['top'] = oscard;
                report = !report;
                entity['bottom'] = report;
                report = romeon.safeAreaContainer;
                entity['style'] = report;
                golfie = _closure1_slot12;
                report = 32;
                report = whisks[report];
                oscard = variable36.bind(tangon)(report);
                report = {};
                option = romeon.container;
                report['style'] = option;
                offset = _closure1_slot12;
                verify = _closure1_slot5;
                option = {};
                yankee = romeon.header;
                option['style'] = yankee;
                source = _closure1_slot10;
                backup = 33;
                yankee = whisks[backup];
                yankee = variable37.bind(tangon)(yankee);
                update = yankee.HeaderActionButton;
                yankee = {};
                ctrled = 9;
                equals = whisks[ctrled];
                equals = variable37.bind(tangon)(equals);
                variable39 = equals.intl;
                variable38 = variable39.string;
                equals = whisks[ctrled];
                equals = variable37.bind(tangon)(equals);
                equals = equals.t;
                equals = equals.ETE/oK;
                equals = variable38.bind(variable39)(equals);
                yankee['accessibilityLabel'] = equals;
                equals = function() { // Original name: onPress
                    _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                        tangon = _closure1_slot0;
                        michal = _closure1_slot2;
                        entity = 20;
                        michal = michal[entity];
                        entity = undefined;
                        option = tangon.bind(entity)(michal);
                        golfie = option.isPollCreationEmpty;
                        oscard = _closure2_slot2;
                        report = _closure2_slot1;
                        tangon = _closure2_slot3;
                        tangon = golfie.bind(option)(oscard, report, tangon);
                        if(tangon) { _fun00014_ip = 121; continue _fun00013 }
 56:
                        report = _closure1_slot0;
                        oscard = _closure1_slot2;
                        tangon = 28;
                        tangon = oscard[tangon];
                        oscard = report.bind(entity)(tangon);
                        report = oscard.openAlert;
                        golfie = _closure1_slot10;
                        tangon = _closure1_slot15;
                        zuuluu = {};
                        option = _closure2_slot16;
                        zuuluu['onConfirm'] = option;
                        tangon = golfie.bind(entity)(tangon, zuuluu);
                        zuuluu = 'poll-creation-unsaved-changes';
                        zuuluu = report.bind(oscard)(zuuluu, tangon);
                        _fun00014_ip = 129; continue _fun00013;
 121:
                        michal = _closure2_slot16;
                        michal = michal.bind(entity)();
 129:
                        return entity;
                    }
                };
                yankee['onPress'] = equals;
                equals = 34;
                equals = whisks[equals];
                equals = variable36.bind(tangon)(equals);
                yankee['source'] = equals;
                equals = romeon.actionButton;
                yankee['style'] = equals;
                update = source.bind(tangon)(update, yankee);
                yankee = new Array(3);
                yankee[0] = update;
                equals = _closure1_slot10;
                update = 13;
                update = whisks[update];
                update = variable37.bind(tangon)(update);
                source = update.Text;
                update = {'accessibilityRole': 'header', 'variant': 'redesign/heading-18/bold', 'color': 'header-primary'};
                variable36 = romeon.title;
                update['style'] = variable36;
                variable36 = whisks[ctrled];
                variable36 = variable37.bind(tangon)(variable36);
                variable39 = variable36.intl;
                variable38 = variable39.string;
                variable36 = whisks[ctrled];
                variable36 = variable37.bind(tangon)(variable36);
                variable36 = variable36.t;
                variable36 = variable36.Flr51t;
                variable36 = variable38.bind(variable39)(variable36);
                update['children'] = variable36;
                update = equals.bind(tangon)(source, update);
                yankee[1] = update;
                source = _closure1_slot10;
                backup = whisks[backup];
                backup = variable37.bind(tangon)(backup);
                update = backup.HeaderActionButton;
                backup = {};
                equals = whisks[ctrled];
                equals = variable37.bind(tangon)(equals);
                variable36 = equals.intl;
                equals = variable36.string;
                whisks = whisks[ctrled];
                whisks = variable37.bind(tangon)(whisks);
                whisks = whisks.t;
                whisks = whisks.JOj8Zm;
                whisks = equals.bind(variable36)(whisks);
                backup['text'] = whisks;
                equals = romeon.actionButton;
                whisks = new Array(2);
                whisks[0] = equals;
                equals = romeon.postButton;
                whisks[1] = equals;
                backup['style'] = whisks;
                backup['disabled'] = record;
                backup['onPress'] = vacuum;
                backup = source.bind(tangon)(update, backup);
                yankee[2] = backup;
                option['children'] = yankee;
                verify = offset.bind(tangon)(verify, option);
                option = new Array(3);
                option[0] = verify;
                yankee = _closure1_slot12;
                offset = _closure1_slot6;
                verify = {};
                backup = romeon.viewPadding;
                verify['style'] = backup;
                backup = romeon.scrollContainer;
                verify['contentContainerStyle'] = backup;
                record = null;
                update = record != quebec;
                if(!update) { _fun00008_ip = 1104; continue _fun00007 }
 1049:
                vacuum = _closure1_slot10;
                source = _closure1_slot1;
                whisks = _closure1_slot2;
                backup = 35;
                backup = whisks[backup];
                source = source.bind(tangon)(backup);
                backup = {};
                equals = record == quebec;
                whisks = undefined;
                if(equals) { _fun00008_ip = 1094; continue _fun00007 }
 1084:
                equals = quebec.getAnyErrorMessage;
                whisks = equals.bind(quebec)();
 1094:
                backup['children'] = whisks;
                update = vacuum.bind(tangon)(source, backup);
 1104:
                backup = new Array(4);
                backup[0] = update;
                vacuum = _closure1_slot10;
                source = _closure1_slot14;
                update = {};
                equals = sierra.refWithKey;
                whisks = 'question';
                whisks = equals.bind(sierra)(whisks);
                update['ref'] = whisks;
                update['onChange'] = limora;
                sierra = sierra.focusNext;
                update['onSubmitEditing'] = sierra;
                sierra = record == target;
                record = undefined;
                if(sierra) { _fun00008_ip = 1172; continue _fun00007 }
 1166:
                record = target.question;
 1172:
                update['error'] = record;
                update = vacuum.bind(tangon)(source, update);
                backup[1] = update;
                if(!kiloes) { _fun00008_ip = 1231; continue _fun00007 }
 1189:
                vacuum = _closure1_slot10;
                source = _closure1_slot1;
                record = _closure1_slot2;
                update = 36;
                update = record[update];
                source = source.bind(tangon)(update);
                update = {};
                update['selectedLayoutType'] = status;
                update['setSelectedLayoutType'] = config;
                kiloes = vacuum.bind(tangon)(source, update);
 1231:
                backup[2] = kiloes;
                source = _closure1_slot12;
                update = _closure1_slot5;
                kiloes = {};
                config = romeon.answerInputsContainer;
                vacuum = new Array(2);
                vacuum[0] = config;
                record = _closure1_slot0;
                config = _closure1_slot2;
                limora = 37;
                config = config[limora];
                config = record.bind(tangon)(config);
                config = config.PollLayoutTypes;
                config = config.IMAGE_ONLY_ANSWERS;
                config = status === config;
                if(!config) { _fun00008_ip = 1304; continue _fun00007 }
 1298:
                config = romeon.imageOnlyContainer;
 1304:
                vacuum[1] = config;
                kiloes['style'] = vacuum;
                record = _closure1_slot10;
                equals = _closure1_slot0;
                target = _closure1_slot2;
                vacuum = 38;
                vacuum = target[vacuum];
                vacuum = equals.bind(tangon)(vacuum);
                config = vacuum.FormLabel;
                vacuum = {};
                sierra = target[ctrled];
                sierra = equals.bind(tangon)(sierra);
                whisks = sierra.intl;
                sierra = whisks.string;
                target = target[ctrled];
                target = equals.bind(tangon)(target);
                target = target.t;
                target = target.oMBfeX;
                target = sierra.bind(whisks)(target);
                vacuum['text'] = target;
                target = 'text-secondary';
                vacuum['color'] = target;
                target = romeon.label;
                vacuum['style'] = target;
                config = record.bind(tangon)(config, vacuum);
                vacuum = new Array(3);
                vacuum[0] = config;
                record = cntext.map;
                config = function(argFoo, argBar) {
                    _fun00015: for(var _fun00016_ip = 0; ; ) switch(_fun00016_ip) {
 0:
                        entity = argFoo;
                        report = _closure1_slot10;
                        zuuluu = _closure1_slot1;
                        tangon = _closure1_slot2;
                        michal = 39;
                        michal = tangon[michal];
                        tangon = undefined;
                        zuuluu = zuuluu.bind(tangon)(michal);
                        michal = {};
                        oscard = _closure2_slot17;
                        yankee = oscard.refWithKey;
                        romeon = entity.localCreationAnswerId;
                        golfie = global;
                        verify = golfie.HermesInternal;
                        verify = verify.concat;
                        offset = 'answer-';
                        verify = verify.bind(offset)(romeon);
                        verify = yankee.bind(oscard)(verify);
                        michal['inputRef'] = verify;
                        michal['answer'] = entity;
                        verify = argBar;
                        michal['index'] = verify;
                        verify = _closure2_slot0;
                        verify = verify.id;
                        michal['channelId'] = verify;
                        verify = _closure2_slot3;
                        michal['layout'] = verify;
                        oscard = oscard.focusNext;
                        michal['onSubmitEditing'] = oscard;
                        oscard = _closure2_slot7;
                        michal['onAnswerTextChange'] = oscard;
                        oscard = _closure2_slot8;
                        michal['onAnswerEmojiSelect'] = oscard;
                        oscard = _closure2_slot10;
                        michal['onRemoveAnswer'] = oscard;
                        oscard = _closure2_slot11;
                        michal['onRemoveAnswerImage'] = oscard;
                        oscard = _closure2_slot6;
                        michal['canRemoveAnswer'] = oscard;
                        verify = _closure2_slot12;
                        oscard = null;
                        verify = oscard == verify;
                        oscard = undefined;
                        if(verify) { _fun00016_ip = 222; continue _fun00015 }
 192:
                        option = _closure2_slot12;
                        verify = entity.localCreationAnswerId;
                        golfie = golfie.HermesInternal;
                        golfie = golfie.concat;
                        golfie = golfie.bind(offset)(verify);
                        oscard = option[golfie];
 222:
                        michal['error'] = oscard;
                        entity = entity.localCreationAnswerId;
                        entity = report.bind(tangon)(zuuluu, michal, entity);
                        return entity;
                    }
                };
                config = record.bind(cntext)(config);
                vacuum[1] = config;
                if(!sequen) { _fun00008_ip = 1509; continue _fun00007 }
 1451:
                cntext = _closure1_slot10;
                record = _closure1_slot16;
                config = {};
                sierra = _closure1_slot0;
                target = _closure1_slot2;
                target = target[limora];
                target = sierra.bind(tangon)(target);
                target = target.PollLayoutTypes;
                target = target.DEFAULT;
                target = status === target;
                config['isDefaultLayout'] = target;
                config['onPress'] = papara;
                sequen = cntext.bind(tangon)(record, config);
 1509:
                vacuum[2] = sequen;
                kiloes['children'] = vacuum;
                kiloes = source.bind(tangon)(update, kiloes);
                backup[3] = kiloes;
                verify['children'] = backup;
                verify = yankee.bind(tangon)(offset, verify);
                option[1] = verify;
                yankee = _closure1_slot12;
                offset = _closure1_slot5;
                verify = {};
                romeon = romeon.pollConfigSection;
                verify['style'] = romeon;
                kiloes = _closure1_slot10;
                backup = _closure1_slot17;
                romeon = {};
                romeon['selectedDuration'] = echoed;
                romeon['onChange'] = result;
                backup = kiloes.bind(tangon)(backup, romeon);
                romeon = new Array(2);
                romeon[0] = backup;
                kiloes = _closure1_slot10;
                source = _closure1_slot0;
                result = _closure1_slot2;
                foxtra = 40;
                foxtra = result[foxtra];
                foxtra = source.bind(tangon)(foxtra);
                backup = foxtra.TableCheckboxRow;
                foxtra = {};
                echoed = result[ctrled];
                echoed = source.bind(tangon)(echoed);
                update = echoed.intl;
                echoed = update.string;
                result = result[ctrled];
                result = source.bind(tangon)(result);
                result = result.t;
                result = result.Ux+iQU;
                result = echoed.bind(update)(result);
                foxtra['label'] = result;
                foxtra['checked'] = output;
                sizing = function() { // Original name: onPress
                    zuuluu = _closure2_slot5;
                    entity = _closure2_slot4;
                    michal = !entity;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                foxtra['onPress'] = sizing;
                foxtra = kiloes.bind(tangon)(backup, foxtra);
                romeon[1] = foxtra;
                verify['children'] = romeon;
                verify = yankee.bind(tangon)(offset, verify);
                option[2] = verify;
                report['children'] = option;
                report = golfie.bind(tangon)(oscard, report);
                entity['children'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            }
        };
        zuuluu['default'] = michal;
        return entity;
    }
})();