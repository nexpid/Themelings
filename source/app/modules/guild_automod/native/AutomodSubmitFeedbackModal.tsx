// app/modules/guild_automod/native/AutomodSubmitFeedbackModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: Navbar
        entity = argFoo;
        romeo = entity.onClose;
        entity = _closure1_slot9;
        tango = undefined;
        options = entity.bind(tango)();
        zulu = _closure1_slot7;
        output = _closure1_slot0;
        foxtrot = _closure1_slot2;
        entity = 7;
        entity = foxtrot[entity];
        entity = output.bind(tango)(entity);
        mike = entity.SafeAreaPaddingView;
        entity = {};
        report = true;
        entity['top'] = report;
        report = options.header;
        entity['style'] = report;
        golf = _closure1_slot7;
        oscar = _closure1_slot5;
        report = {};
        options = options.closeButtonContainer;
        report['style'] = options;
        offset = _closure1_slot7;
        options = 8;
        options = foxtrot[options];
        options = output.bind(tango)(options);
        verify = options.HeaderActionButton;
        options = {};
        backup = 9;
        kilo = foxtrot[backup];
        kilo = output.bind(tango)(kilo);
        sizing = kilo.intl;
        kilo = sizing.string;
        backup = foxtrot[backup];
        backup = output.bind(tango)(backup);
        backup = backup.t;
        backup = backup.cpT0Cg;
        backup = kilo.bind(sizing)(backup);
        options['accessibilityLabel'] = backup;
        options['onPress'] = romeo;
        romeo = _closure1_slot1;
        yankee = 10;
        yankee = foxtrot[yankee];
        yankee = romeo.bind(tango)(yankee);
        options['source'] = yankee;
        options = offset.bind(tango)(verify, options);
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = function(argFoo) { // Original name: SubmitFeedbackScreen
        entity = argFoo;
        mike = entity.feedback;
        var _closure2_slot0 = mike;
        mike = entity.onChange;
        var _closure2_slot1 = mike;
        romeo = entity.onSubmit;
        entity = _closure1_slot9;
        tango = undefined;
        offset = entity.bind(tango)();
        var _closure2_slot2 = offset;
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        entity = 11;
        entity = output[entity];
        mike = sizing.bind(tango)(entity);
        entity = mike.generateFeedbackOptions;
        echo = entity.bind(mike)();
        var _closure2_slot3 = echo;
        kilo = _closure1_slot1;
        entity = 12;
        entity = output[entity];
        entity = kilo.bind(tango)(entity);
        entity = entity.bind(tango)();
        result = entity.bottom;
        entity = function(argFoo) { // Original name: label
            tango = _closure1_slot7;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 13;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.Text;
            entity = {'style': null, 'variant': 'text-md/semibold', 'color': 'interactive-active'};
            report = _closure2_slot2;
            report = report.formRow;
            entity['style'] = report;
            report = argFoo;
            entity['children'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        var _closure2_slot4 = entity;
        zulu = _closure1_slot8;
        mike = _closure1_slot5;
        entity = {};
        report = offset.container;
        entity['style'] = report;
        golf = _closure1_slot7;
        report = 14;
        report = output[report];
        report = sizing.bind(tango)(report);
        oscar = report.LegacyText;
        report = {};
        options = offset.headerTitle;
        report['style'] = options;
        foxtrot = 9;
        options = output[foxtrot];
        options = sizing.bind(tango)(options);
        update = options.intl;
        backup = update.string;
        options = output[foxtrot];
        options = sizing.bind(tango)(options);
        options = options.t;
        options = options.7bdzNj;
        options = backup.bind(update)(options);
        report['children'] = options;
        oscar = golf.bind(tango)(oscar, report);
        report = new Array(4);
        report[0] = oscar;
        options = _closure1_slot7;
        oscar = 13;
        oscar = output[oscar];
        oscar = sizing.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        backup = offset.headerSubtitle;
        oscar['style'] = backup;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        source = backup.intl;
        update = source.string;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        backup = backup.t;
        backup = backup.Lbpk6u;
        backup = update.bind(source)(backup);
        oscar['children'] = backup;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        options = _closure1_slot7;
        golf = _closure1_slot5;
        oscar = {};
        backup = offset.formBody;
        oscar['style'] = backup;
        backup = echo.map;
        yankee = function(argFoo, argBar) {
            _fun92016: for(var _fun92016_ip = 0; ; ) switch(_fun92016_ip) {
 0:
                entity = argFoo;
                foxtrot = entity.name;
                report = entity.value;
                var _closure3_slot0 = report;
                tango = _closure1_slot8;
                entity = _closure1_slot4;
                zulu = entity.Fragment;
                mike = {};
                offset = _closure1_slot7;
                romeo = _closure1_slot0;
                backup = _closure1_slot2;
                yankee = 15;
                oscar = backup[yankee];
                entity = undefined;
                oscar = romeo.bind(entity)(oscar);
                verify = oscar.FormRow;
                oscar = {};
                golf = function() { // Original name: onPress
                    zulu = _closure2_slot1;
                    mike = _closure3_slot0;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
                    return entity;
                };
                oscar['onPress'] = golf;
                kilo = _closure1_slot7;
                golf = 16;
                golf = backup[golf];
                golf = romeo.bind(entity)(golf);
                backup = golf.RadioIndicator;
                romeo = {};
                sizing = _closure2_slot0;
                sizing = sizing === report;
                romeo['active'] = sizing;
                sizing = _closure2_slot2;
                sizing = sizing.radioIndicator;
                romeo['style'] = sizing;
                romeo = kilo.bind(entity)(backup, romeo);
                oscar['trailing'] = romeo;
                romeo = _closure2_slot4;
                romeo = romeo.bind(entity)(foxtrot);
                oscar['label'] = romeo;
                verify = offset.bind(entity)(verify, oscar);
                oscar = new Array(2);
                oscar[0] = verify;
                golf = _closure2_slot3;
                verify = golf.length;
                golf = 1;
                verify = verify - golf;
                golf = argBar;
                golf = golf < verify;
                if(!golf) { _fun92016_ip = 235; continue _fun92016 }
 200:
                offset = _closure1_slot7;
                verify = _closure1_slot0;
                options = _closure1_slot2;
                options = options[yankee];
                options = verify.bind(entity)(options);
                verify = options.FormDivider;
                options = {};
                golf = offset.bind(entity)(verify, options);
 235:
                oscar[1] = golf;
                mike['children'] = oscar;
                entity = tango.bind(entity)(zulu, mike, report);
                return entity;
            }
        };
        yankee = backup.bind(echo)(yankee);
        oscar['children'] = yankee;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        options = _closure1_slot7;
        golf = _closure1_slot5;
        oscar = {};
        yankee = offset.submitButtonContainer;
        offset = new Array(2);
        offset[0] = yankee;
        yankee = {};
        backup = 16;
        backup = result + backup;
        yankee['paddingBottom'] = backup;
        offset[1] = yankee;
        oscar['style'] = offset;
        yankee = _closure1_slot7;
        backup = 17;
        verify = output[backup];
        offset = kilo.bind(tango)(verify);
        verify = {};
        backup = output[backup];
        backup = kilo.bind(tango)(backup);
        backup = backup.Sizes;
        backup = backup.MEDIUM;
        verify['size'] = backup;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = output[foxtrot];
        foxtrot = sizing.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.Z6DZZ2;
        foxtrot = backup.bind(kilo)(foxtrot);
        verify['text'] = foxtrot;
        verify['onPress'] = romeo;
        verify = yankee.bind(tango)(offset, verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[3] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    romeo = 0;
    tango = oscar[romeo];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    foxtrot = 2;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticEvents;
    var _closure1_slot6 = golf;
    kilo = tango.Fonts;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'paddingHorizontal': 16, 'paddingVertical': 0, 'backgroundColor': null, 'flexDirection': 'column', 'height': '100%', 'paddingTop': 8};
    offset = 6;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = backup;
    tango['container'] = verify;
    verify = {'flexDirection': 'row', 'justifyContent': 'flex-end', 'paddingVertical': 8};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = backup;
    tango['header'] = verify;
    verify = {'fontSize': 24, 'fontFamily': null, 'textAlign': 'center', 'color': null, 'lineHeight': 30};
    backup = 24;
    kilo = kilo.PRIMARY_BOLD;
    verify['fontFamily'] = kilo;
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.HEADER_PRIMARY;
    verify['color'] = kilo;
    tango['headerTitle'] = verify;
    verify = {'textAlign': 'center', 'marginTop': 8};
    tango['headerSubtitle'] = verify;
    verify = {};
    kilo = 14;
    verify['marginVertical'] = kilo;
    tango['closeButtonContainer'] = verify;
    verify = {};
    verify['marginTop'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = backup;
    tango['formBody'] = verify;
    verify = {};
    verify['paddingVertical'] = foxtrot;
    tango['formRow'] = verify;
    verify = {};
    verify['marginRight'] = romeo;
    tango['radioIndicator'] = verify;
    verify = {'position': 'absolute', 'bottom': 0, 'left': 0, 'right': 0, 'paddingHorizontal': 16, 'paddingVertical': 16};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = offset;
    tango['submitButtonContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 20;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_automod/native/AutomodSubmitFeedbackModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: AutomodSubmitFeedbackModal
        entity = argFoo;
        yankee = entity.onCloseModal;
        var _closure2_slot0 = yankee;
        offset = entity.automodDecision;
        var _closure2_slot1 = offset;
        report = _closure1_slot1;
        golf = _closure1_slot2;
        mike = 12;
        mike = golf[mike];
        tango = undefined;
        mike = report.bind(tango)(mike);
        mike = mike.bind(tango)();
        report = mike.top;
        verify = _closure1_slot4;
        options = verify.useState;
        mike = _closure1_slot0;
        oscar = 11;
        oscar = golf[oscar];
        oscar = mike.bind(tango)(oscar);
        oscar = oscar.Feedback;
        oscar = oscar.BUG;
        verify = options.bind(verify)(oscar);
        options = _closure1_slot3;
        oscar = 2;
        options = options.bind(tango)(verify, oscar);
        oscar = 0;
        romeo = options[oscar];
        var _closure2_slot2 = romeo;
        oscar = 1;
        oscar = options[oscar];
        var _closure2_slot3 = oscar;
        verify = _closure1_slot4;
        options = verify.useMemo;
        oscar = new Array(3);
        oscar[0] = romeo;
        oscar[1] = yankee;
        oscar[2] = offset;
        zulu = function() {
            zulu = {};
            tango = _closure2_slot0;
            zulu['onCloseModal'] = tango;
            mike = _closure2_slot2;
            zulu['feedback'] = mike;
            mike = function(argFoo) { // Original name: onChange
                zulu = _closure2_slot3;
                entity = undefined;
                mike = argFoo;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            zulu['onChange'] = mike;
            mike = function() { // Original name: onSubmit
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 18;
                zulu = zulu[entity];
                entity = undefined;
                oscar = tango.bind(entity)(zulu);
                report = oscar.trackWithMetadata;
                mike = _closure1_slot6;
                tango = mike.GUILD_AUTOMOD_FEEDBACK;
                zulu = {};
                golf = _closure2_slot2;
                zulu['feedback_type'] = golf;
                golf = _closure2_slot1;
                options = golf.messageId;
                zulu['message_id'] = options;
                options = golf.messageContent;
                zulu['content'] = options;
                golf = golf.decisionId;
                zulu['decision_id'] = golf;
                zulu = report.bind(oscar)(tango, zulu);
                mike = _closure2_slot0;
                mike = mike.bind(entity)();
                return entity;
            };
            zulu['onSubmit'] = mike;
            mike = function(argFoo) { // Original name: getScreens
                entity = argFoo;
                zulu = entity.onCloseModal;
                var _closure4_slot0 = zulu;
                zulu = entity.feedback;
                var _closure4_slot1 = zulu;
                zulu = entity.onChange;
                var _closure4_slot2 = zulu;
                entity = entity.onSubmit;
                var _closure4_slot3 = entity;
                entity = {};
                zulu = {'ignoreKeyboard': true, 'title': ''};
                tango = function() { // Original name: customNavbar
                    tango = _closure1_slot7;
                    zulu = _closure1_slot10;
                    mike = {};
                    entity = _closure4_slot0;
                    mike['onClose'] = entity;
                    entity = undefined;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                zulu['customNavbar'] = tango;
                tango = function() { // Original name: headerLeft
                    entity = null;
                    return entity;
                };
                zulu['headerLeft'] = tango;
                mike = function() { // Original name: render
                    tango = _closure1_slot7;
                    zulu = _closure1_slot11;
                    mike = {};
                    report = _closure4_slot1;
                    mike['feedback'] = report;
                    report = _closure4_slot2;
                    mike['onChange'] = report;
                    entity = _closure4_slot3;
                    mike['onSubmit'] = entity;
                    entity = undefined;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                zulu['render'] = mike;
                mike = 'SUBMIT_FEEDBACK';
                entity[mike] = zulu;
                return entity;
            };
            entity = undefined;
            entity = mike.bind(entity)(zulu);
            return entity;
        };
        oscar = options.bind(verify)(zulu, oscar);
        zulu = _closure1_slot7;
        entity = 19;
        entity = golf[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.Navigator;
        entity = {};
        entity['screens'] = oscar;
        oscar = 'SUBMIT_FEEDBACK';
        entity['initialRouteName'] = oscar;
        entity['headerStatusBarHeight'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();