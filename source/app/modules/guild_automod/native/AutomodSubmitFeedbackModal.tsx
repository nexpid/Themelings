// app/modules/guild_automod/native/AutomodSubmitFeedbackModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: Navbar
        entity = argFoo;
        romeon = entity.onClose;
        entity = _closure1_slot9;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot7;
        output = _closure1_slot0;
        foxtra = _closure1_slot2;
        entity = 7;
        entity = foxtra[entity];
        entity = output.bind(tangon)(entity);
        michal = entity.SafeAreaPaddingView;
        entity = {};
        report = true;
        entity['top'] = report;
        report = option.header;
        entity['style'] = report;
        golfie = _closure1_slot7;
        oscard = _closure1_slot5;
        report = {};
        option = option.closeButtonContainer;
        report['style'] = option;
        offset = _closure1_slot7;
        option = 8;
        option = foxtra[option];
        option = output.bind(tangon)(option);
        verify = option.HeaderActionButton;
        option = {};
        backup = 9;
        kiloes = foxtra[backup];
        kiloes = output.bind(tangon)(kiloes);
        sizing = kiloes.intl;
        kiloes = sizing.string;
        backup = foxtra[backup];
        backup = output.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.cpT0Cg;
        backup = kiloes.bind(sizing)(backup);
        option['accessibilityLabel'] = backup;
        option['onPress'] = romeon;
        romeon = _closure1_slot1;
        yankee = 10;
        yankee = foxtra[yankee];
        yankee = romeon.bind(tangon)(yankee);
        option['source'] = yankee;
        option = offset.bind(tangon)(verify, option);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = function(argFoo) { // Original name: SubmitFeedbackScreen
        entity = argFoo;
        michal = entity.feedback;
        var _closure2_slot0 = michal;
        michal = entity.onChange;
        var _closure2_slot1 = michal;
        romeon = entity.onSubmit;
        entity = _closure1_slot9;
        tangon = undefined;
        offset = entity.bind(tangon)();
        var _closure2_slot2 = offset;
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        entity = 11;
        entity = output[entity];
        michal = sizing.bind(tangon)(entity);
        entity = michal.generateFeedbackOptions;
        echoed = entity.bind(michal)();
        var _closure2_slot3 = echoed;
        kiloes = _closure1_slot1;
        entity = 12;
        entity = output[entity];
        entity = kiloes.bind(tangon)(entity);
        entity = entity.bind(tangon)();
        result = entity.bottom;
        entity = function(argFoo) { // Original name: label
            tangon = _closure1_slot7;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 13;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.Text;
            entity = {'style': null, 'variant': 'text-md/semibold', 'color': 'interactive-active'};
            report = _closure2_slot2;
            report = report.formRow;
            entity['style'] = report;
            report = argFoo;
            entity['children'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        var _closure2_slot4 = entity;
        zuuluu = _closure1_slot8;
        michal = _closure1_slot5;
        entity = {};
        report = offset.container;
        entity['style'] = report;
        golfie = _closure1_slot7;
        report = 14;
        report = output[report];
        report = sizing.bind(tangon)(report);
        oscard = report.LegacyText;
        report = {};
        option = offset.headerTitle;
        report['style'] = option;
        foxtra = 9;
        option = output[foxtra];
        option = sizing.bind(tangon)(option);
        update = option.intl;
        backup = update.string;
        option = output[foxtra];
        option = sizing.bind(tangon)(option);
        option = option.t;
        option = option.7bdzNj;
        option = backup.bind(update)(option);
        report['children'] = option;
        oscard = golfie.bind(tangon)(oscard, report);
        report = new Array(4);
        report[0] = oscard;
        option = _closure1_slot7;
        oscard = 13;
        oscard = output[oscard];
        oscard = sizing.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        backup = offset.headerSubtitle;
        oscard['style'] = backup;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        source = backup.intl;
        update = source.string;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.Lbpk6u;
        backup = update.bind(source)(backup);
        oscard['children'] = backup;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        option = _closure1_slot7;
        golfie = _closure1_slot5;
        oscard = {};
        backup = offset.formBody;
        oscard['style'] = backup;
        backup = echoed.map;
        yankee = function(argFoo, argBar) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = argFoo;
                foxtra = entity.name;
                report = entity.value;
                var _closure3_slot0 = report;
                tangon = _closure1_slot8;
                entity = _closure1_slot4;
                zuuluu = entity.Fragment;
                michal = {};
                offset = _closure1_slot7;
                romeon = _closure1_slot0;
                backup = _closure1_slot2;
                yankee = 15;
                oscard = backup[yankee];
                entity = undefined;
                oscard = romeon.bind(entity)(oscard);
                verify = oscard.FormRow;
                oscard = {};
                golfie = function() { // Original name: onPress
                    zuuluu = _closure2_slot1;
                    michal = _closure3_slot0;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                oscard['onPress'] = golfie;
                kiloes = _closure1_slot7;
                golfie = 16;
                golfie = backup[golfie];
                golfie = romeon.bind(entity)(golfie);
                backup = golfie.RadioIndicator;
                romeon = {};
                sizing = _closure2_slot0;
                sizing = sizing === report;
                romeon['active'] = sizing;
                sizing = _closure2_slot2;
                sizing = sizing.radioIndicator;
                romeon['style'] = sizing;
                romeon = kiloes.bind(entity)(backup, romeon);
                oscard['trailing'] = romeon;
                romeon = _closure2_slot4;
                romeon = romeon.bind(entity)(foxtra);
                oscard['label'] = romeon;
                verify = offset.bind(entity)(verify, oscard);
                oscard = new Array(2);
                oscard[0] = verify;
                golfie = _closure2_slot3;
                verify = golfie.length;
                golfie = 1;
                verify = verify - golfie;
                golfie = argBar;
                golfie = golfie < verify;
                if(!golfie) { _fun00002_ip = 235; continue _fun00001 }
 200:
                offset = _closure1_slot7;
                verify = _closure1_slot0;
                option = _closure1_slot2;
                option = option[yankee];
                option = verify.bind(entity)(option);
                verify = option.FormDivider;
                option = {};
                golfie = offset.bind(entity)(verify, option);
 235:
                oscard[1] = golfie;
                michal['children'] = oscard;
                entity = tangon.bind(entity)(zuuluu, michal, report);
                return entity;
            }
        };
        yankee = backup.bind(echoed)(yankee);
        oscard['children'] = yankee;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        option = _closure1_slot7;
        golfie = _closure1_slot5;
        oscard = {};
        yankee = offset.submitButtonContainer;
        offset = new Array(2);
        offset[0] = yankee;
        yankee = {};
        backup = 16;
        backup = result + backup;
        yankee['paddingBottom'] = backup;
        offset[1] = yankee;
        oscard['style'] = offset;
        yankee = _closure1_slot7;
        backup = 17;
        verify = output[backup];
        offset = kiloes.bind(tangon)(verify);
        verify = {};
        backup = output[backup];
        backup = kiloes.bind(tangon)(backup);
        backup = backup.Sizes;
        backup = backup.MEDIUM;
        verify['size'] = backup;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = output[foxtra];
        foxtra = sizing.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.Z6DZZ2;
        foxtra = backup.bind(kiloes)(foxtra);
        verify['text'] = foxtra;
        verify['onPress'] = romeon;
        verify = yankee.bind(tangon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[3] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    romeon = 0;
    tangon = oscard[romeon];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    foxtra = 2;
    tangon = oscard[foxtra];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticEvents;
    var _closure1_slot6 = golfie;
    kiloes = tangon.Fonts;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'paddingHorizontal': 16, 'paddingVertical': 0, 'backgroundColor': null, 'flexDirection': 'column', 'height': '100%', 'paddingTop': 8};
    offset = 6;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = backup;
    tangon['container'] = verify;
    verify = {'flexDirection': 'row', 'justifyContent': 'flex-end', 'paddingVertical': 8};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = backup;
    tangon['header'] = verify;
    verify = {'fontSize': 24, 'fontFamily': null, 'textAlign': 'center', 'color': null, 'lineHeight': 30};
    backup = 24;
    kiloes = kiloes.PRIMARY_BOLD;
    verify['fontFamily'] = kiloes;
    kiloes = oscard[offset];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.HEADER_PRIMARY;
    verify['color'] = kiloes;
    tangon['headerTitle'] = verify;
    verify = {'textAlign': 'center', 'marginTop': 8};
    tangon['headerSubtitle'] = verify;
    verify = {};
    kiloes = 14;
    verify['marginVertical'] = kiloes;
    tangon['closeButtonContainer'] = verify;
    verify = {};
    verify['marginTop'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = backup;
    tangon['formBody'] = verify;
    verify = {};
    verify['paddingVertical'] = foxtra;
    tangon['formRow'] = verify;
    verify = {};
    verify['marginRight'] = romeon;
    tangon['radioIndicator'] = verify;
    verify = {'position': 'absolute', 'bottom': 0, 'left': 0, 'right': 0, 'paddingHorizontal': 16, 'paddingVertical': 16};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = offset;
    tangon['submitButtonContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_automod/native/AutomodSubmitFeedbackModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AutomodSubmitFeedbackModal
        entity = argFoo;
        yankee = entity.onCloseModal;
        var _closure2_slot0 = yankee;
        offset = entity.automodDecision;
        var _closure2_slot1 = offset;
        report = _closure1_slot1;
        golfie = _closure1_slot2;
        michal = 12;
        michal = golfie[michal];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        michal = michal.bind(tangon)();
        report = michal.top;
        verify = _closure1_slot4;
        option = verify.useState;
        michal = _closure1_slot0;
        oscard = 11;
        oscard = golfie[oscard];
        oscard = michal.bind(tangon)(oscard);
        oscard = oscard.Feedback;
        oscard = oscard.BUG;
        verify = option.bind(verify)(oscard);
        option = _closure1_slot3;
        oscard = 2;
        option = option.bind(tangon)(verify, oscard);
        oscard = 0;
        romeon = option[oscard];
        var _closure2_slot2 = romeon;
        oscard = 1;
        oscard = option[oscard];
        var _closure2_slot3 = oscard;
        verify = _closure1_slot4;
        option = verify.useMemo;
        oscard = new Array(3);
        oscard[0] = romeon;
        oscard[1] = yankee;
        oscard[2] = offset;
        zuuluu = function() {
            zuuluu = {};
            tangon = _closure2_slot0;
            zuuluu['onCloseModal'] = tangon;
            michal = _closure2_slot2;
            zuuluu['feedback'] = michal;
            michal = function(argFoo) { // Original name: onChange
                zuuluu = _closure2_slot3;
                entity = undefined;
                michal = argFoo;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            zuuluu['onChange'] = michal;
            michal = function() { // Original name: onSubmit
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 18;
                zuuluu = zuuluu[entity];
                entity = undefined;
                oscard = tangon.bind(entity)(zuuluu);
                report = oscard.trackWithMetadata;
                michal = _closure1_slot6;
                tangon = michal.GUILD_AUTOMOD_FEEDBACK;
                zuuluu = {};
                golfie = _closure2_slot2;
                zuuluu['feedback_type'] = golfie;
                golfie = _closure2_slot1;
                option = golfie.messageId;
                zuuluu['message_id'] = option;
                option = golfie.messageContent;
                zuuluu['content'] = option;
                golfie = golfie.decisionId;
                zuuluu['decision_id'] = golfie;
                zuuluu = report.bind(oscard)(tangon, zuuluu);
                michal = _closure2_slot0;
                michal = michal.bind(entity)();
                return entity;
            };
            zuuluu['onSubmit'] = michal;
            michal = function(argFoo) { // Original name: getScreens
                entity = argFoo;
                zuuluu = entity.onCloseModal;
                var _closure4_slot0 = zuuluu;
                zuuluu = entity.feedback;
                var _closure4_slot1 = zuuluu;
                zuuluu = entity.onChange;
                var _closure4_slot2 = zuuluu;
                entity = entity.onSubmit;
                var _closure4_slot3 = entity;
                entity = {};
                zuuluu = {'ignoreKeyboard': true, 'title': ''};
                tangon = function() { // Original name: customNavbar
                    tangon = _closure1_slot7;
                    zuuluu = _closure1_slot10;
                    michal = {};
                    entity = _closure4_slot0;
                    michal['onClose'] = entity;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                zuuluu['customNavbar'] = tangon;
                tangon = function() { // Original name: headerLeft
                    entity = null;
                    return entity;
                };
                zuuluu['headerLeft'] = tangon;
                michal = function() { // Original name: render
                    tangon = _closure1_slot7;
                    zuuluu = _closure1_slot11;
                    michal = {};
                    report = _closure4_slot1;
                    michal['feedback'] = report;
                    report = _closure4_slot2;
                    michal['onChange'] = report;
                    entity = _closure4_slot3;
                    michal['onSubmit'] = entity;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                zuuluu['render'] = michal;
                michal = 'SUBMIT_FEEDBACK';
                entity[michal] = zuuluu;
                return entity;
            };
            entity = undefined;
            entity = michal.bind(entity)(zuuluu);
            return entity;
        };
        oscard = option.bind(verify)(zuuluu, oscard);
        zuuluu = _closure1_slot7;
        entity = 19;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Navigator;
        entity = {};
        entity['screens'] = oscard;
        oscard = 'SUBMIT_FEEDBACK';
        entity['initialRouteName'] = oscard;
        entity['headerStatusBarHeight'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();