// app/modules/guild_automod/native/AutomodUserProfileQuarantineAlert.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: ChatBlockedAlert
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            result = zuuluu.title;
            romeon = zuuluu.description;
            golfie = zuuluu.buttonCta;
            oscard = zuuluu.onConfirm;
            michal = _closure1_slot7;
            entity = _closure1_slot3;
            tangon = undefined;
            report = michal.bind(tangon)(zuuluu, entity);
            entity = _closure1_slot18;
            foxtra = entity.bind(tangon)();
            zuuluu = _closure1_slot16;
            michal = _closure1_slot1;
            kiloes = _closure1_slot2;
            entity = 13;
            entity = kiloes[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            source = entity;
            update = report;
            option = copyDataProperties(source, update);
            verify = foxtra.wrapper;
            option = 'style';
            entity[option] = verify;
            backup = _closure1_slot0;
            option = 14;
            verify = kiloes[option];
            verify = backup.bind(tangon)(verify);
            offset = verify.intl;
            verify = offset.string;
            option = kiloes[option];
            option = backup.bind(tangon)(option);
            option = option.t;
            option = option.ETE/oK;
            verify = verify.bind(offset)(option);
            option = 'cancelText';
            entity[option] = verify;
            option = null;
            verify = option == report;
            option = undefined;
            if(verify) { _fun00002_ip = 182; continue _fun00001 }
 176:
            option = report.onClose;
 182:
            report = 'onCancel';
            entity[report] = option;
            report = 'confirmText';
            entity[report] = golfie;
            report = 'onConfirm';
            entity[report] = oscard;
            golfie = _closure1_slot17;
            oscard = _closure1_slot8;
            report = {};
            option = foxtra.body;
            report['style'] = option;
            offset = _closure1_slot16;
            sizing = _closure1_slot1;
            backup = _closure1_slot2;
            kiloes = 15;
            option = backup[kiloes];
            verify = sizing.bind(tangon)(option);
            option = {};
            output = 16;
            output = backup[output];
            output = sizing.bind(tangon)(output);
            option['source'] = output;
            kiloes = backup[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            kiloes = kiloes.Sizes;
            kiloes = kiloes.CUSTOM;
            option['size'] = kiloes;
            kiloes = foxtra.mainIcon;
            option['style'] = kiloes;
            verify = offset.bind(tangon)(verify, option);
            option = new Array(3);
            option[0] = verify;
            output = _closure1_slot16;
            offset = _closure1_slot0;
            verify = 17;
            kiloes = backup[verify];
            kiloes = offset.bind(tangon)(kiloes);
            sizing = kiloes.Text;
            kiloes = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-md/medium', 'color': 'header-primary'};
            echoed = foxtra.title;
            kiloes['style'] = echoed;
            kiloes['children'] = result;
            kiloes = output.bind(tangon)(sizing, kiloes);
            option[1] = kiloes;
            yankee = _closure1_slot16;
            verify = backup[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.Text;
            verify = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            foxtra = foxtra.description;
            verify['style'] = foxtra;
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[2] = verify;
            report['children'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = 'children';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot19 = entity;
    entity = function(argFoo) { // Original name: PerServerProfileAlert
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            option = argFoo;
            golfie = option.guildId;
            romeon = option.guildName;
            michal = option.automodReason;
            zuuluu = _closure1_slot7;
            entity = _closure1_slot4;
            tangon = undefined;
            verify = zuuluu.bind(tangon)(option, entity);
            entity = _closure1_slot15;
            entity = entity.AUTOMOD_QUARANTINED_USERNAME_OR_GUILD_NICKNAME;
            if(!(michal !== entity)) { _fun00004_ip = 114; continue _fun00003 }
 55:
            option = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 14;
            michal = offset[entity];
            michal = option.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = offset[entity];
            entity = option.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.QRN+Sk;
            option = michal.bind(zuuluu)(entity);
            _fun00004_ip = 171; continue _fun00003;
 114:
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 14;
            michal = yankee[entity];
            michal = offset.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = yankee[entity];
            entity = offset.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.SpDXIy;
            option = michal.bind(zuuluu)(entity);
 171:
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 18;
            entity = zuuluu[entity];
            zuuluu = michal.bind(tangon)(entity);
            michal = zuuluu.useOpenFixQuarantinedProfileModal;
            entity = {};
            entity['guildId'] = golfie;
            golfie = true;
            entity['openWithoutBackstack'] = golfie;
            zuuluu = michal.bind(zuuluu)(entity);
            michal = _closure1_slot6;
            entity = 2;
            michal = michal.bind(tangon)(zuuluu, entity);
            entity = 0;
            entity = michal[entity];
            var _closure2_slot0 = entity;
            entity = 1;
            golfie = michal[entity];
            if(golfie) { _fun00004_ip = 305; continue _fun00003 }
 248:
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 14;
            michal = yankee[entity];
            michal = offset.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = yankee[entity];
            entity = offset.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.FFj5Dg;
            option = michal.bind(zuuluu)(entity);
 305:
            offset = _closure1_slot0;
            entity = _closure1_slot2;
            foxtra = 14;
            michal = entity[foxtra];
            michal = offset.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = entity[foxtra];
            entity = offset.bind(tangon)(entity);
            entity = entity.t;
            if(golfie) { _fun00004_ip = 367; continue _fun00003 }
 352:
            golfie = entity.WikgZ2;
            golfie = michal.bind(zuuluu)(golfie);
            _fun00004_ip = 378; continue _fun00003;
 367:
            entity = entity./PGQf3;
            golfie = michal.bind(zuuluu)(entity);
 378:
            zuuluu = _closure1_slot16;
            michal = _closure1_slot19;
            entity = {};
            kiloes = entity;
            backup = verify;
            verify = copyDataProperties(kiloes, backup);
            verify = _closure1_slot0;
            oscard = _closure1_slot2;
            offset = oscard[foxtra];
            offset = verify.bind(tangon)(offset);
            yankee = offset.intl;
            offset = yankee.format;
            oscard = oscard[foxtra];
            oscard = verify.bind(tangon)(oscard);
            oscard = oscard.t;
            verify = oscard.kcYdTk;
            oscard = {};
            oscard['guildName'] = romeon;
            verify = offset.bind(yankee)(verify, oscard);
            oscard = 'title';
            entity[oscard] = verify;
            oscard = 'description';
            entity[oscard] = option;
            oscard = 'buttonCta';
            entity[oscard] = golfie;
            oscard = function() { // Original name: onConfirm
                michal = _closure2_slot0;
                entity = undefined;
                michal = michal.bind(entity)();
                return entity;
            };
            report = 'onConfirm';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot20 = entity;
    entity = function(argFoo) { // Original name: ServerTagAlert
        zuuluu = argFoo;
        romeon = zuuluu.guildName;
        michal = _closure1_slot7;
        entity = _closure1_slot5;
        tangon = undefined;
        foxtra = michal.bind(tangon)(zuuluu, entity);
        zuuluu = _closure1_slot16;
        michal = _closure1_slot19;
        entity = {};
        backup = entity;
        oscard = copyDataProperties(backup, foxtra);
        option = _closure1_slot0;
        verify = _closure1_slot2;
        report = 14;
        oscard = verify[report];
        oscard = option.bind(tangon)(oscard);
        yankee = oscard.intl;
        offset = yankee.format;
        oscard = verify[report];
        oscard = option.bind(tangon)(oscard);
        oscard = oscard.t;
        golfie = oscard.c8TwbG;
        oscard = {};
        oscard['guildName'] = romeon;
        golfie = offset.bind(yankee)(golfie, oscard);
        oscard = 'title';
        entity[oscard] = golfie;
        oscard = verify[report];
        oscard = option.bind(tangon)(oscard);
        offset = oscard.intl;
        golfie = offset.string;
        oscard = verify[report];
        oscard = option.bind(tangon)(oscard);
        oscard = oscard.t;
        oscard = oscard.EJJLHh;
        golfie = golfie.bind(offset)(oscard);
        oscard = 'description';
        entity[oscard] = golfie;
        oscard = verify[report];
        oscard = option.bind(tangon)(oscard);
        golfie = oscard.intl;
        oscard = golfie.string;
        report = verify[report];
        report = option.bind(tangon)(report);
        report = report.t;
        report = report.Viksoq;
        oscard = oscard.bind(golfie)(report);
        report = 'buttonCta';
        entity[report] = oscard;
        oscard = function() { // Original name: onConfirm
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 19;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.openUserSettings;
            michal = {};
            report = _closure1_slot14;
            report = report.PROFILE_CUSTOMIZATION;
            michal['screen'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        report = 'onConfirm';
        entity[report] = oscard;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot21 = entity;
    entity = ['title', 'description', 'buttonCta', 'onConfirm'];
    var _closure1_slot3 = entity;
    entity = ['guildId', 'guildName', 'automodReason'];
    var _closure1_slot4 = entity;
    entity = ['guildName'];
    var _closure1_slot5 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.QUARANTINE_USER_ALERT_KEY;
    var _closure1_slot12 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticEvents;
    var _closure1_slot13 = golfie;
    tangon = tangon.UserSettingsSections;
    var _closure1_slot14 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.GuildMemberFlags;
    var _closure1_slot15 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot16 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot17 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 16;
    verify['padding'] = offset;
    tangon['wrapper'] = verify;
    offset = 'center';
    verify = {'flexDirection': 'column', 'alignItems': 'center'};
    tangon['body'] = verify;
    verify = {'width': 48, 'height': 48, 'tintColor': null, 'marginBottom': 16};
    yankee = 12;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.TEXT_DANGER;
    verify['tintColor'] = yankee;
    tangon['mainIcon'] = verify;
    verify = {'marginBottom': 16, 'textAlign': 'center'};
    tangon['title'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tangon['description'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot18 = tangon;
    tangon = 24;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_automod/native/AutomodUserProfileQuarantineAlert.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AutomodUserProfileQuarantineAlert
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            oscard = argFoo;
            romeon = oscard.guildId;
            var _closure2_slot0 = romeon;
            option = _closure1_slot0;
            golfie = _closure1_slot2;
            tangon = 20;
            zuuluu = golfie[tangon];
            report = undefined;
            yankee = option.bind(report)(zuuluu);
            offset = yankee.useStateFromStores;
            zuuluu = _closure1_slot9;
            verify = new Array(1);
            verify[0] = zuuluu;
            zuuluu = function() {
                michal = _closure1_slot9;
                entity = michal.getId;
                entity = entity.bind(michal)();
                return entity;
            };
            zuuluu = offset.bind(yankee)(verify, zuuluu);
            var _closure2_slot1 = zuuluu;
            golfie = golfie[tangon];
            yankee = option.bind(report)(golfie);
            offset = yankee.useStateFromStores;
            golfie = _closure1_slot11;
            verify = new Array(1);
            verify[0] = golfie;
            option = new Array(1);
            option[0] = romeon;
            golfie = function() {
                zuuluu = _closure1_slot11;
                michal = zuuluu.getGuild;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            verify = offset.bind(yankee)(verify, golfie, option);
            golfie = null;
            offset = golfie == verify;
            option = undefined;
            if(offset) { _fun00006_ip = 137; continue _fun00005 }
 132:
            option = verify.name;
 137:
            verify = golfie != option;
            golfie = '';
            if(!verify) { _fun00006_ip = 151; continue _fun00005 }
 148:
            golfie = option;
 151:
            option = _closure1_slot0;
            verify = _closure1_slot2;
            tangon = verify[tangon];
            yankee = option.bind(report)(tangon);
            offset = yankee.useStateFromStores;
            tangon = _closure1_slot10;
            option = new Array(1);
            option[0] = tangon;
            tangon = new Array(2);
            tangon[0] = romeon;
            tangon[1] = zuuluu;
            zuuluu = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    michal = _closure2_slot0;
                    entity = null;
                    if(!(entity != michal)) { _fun00008_ip = 95; continue _fun00007 }
 13:
                    report = _closure1_slot0;
                    oscard = _closure1_slot2;
                    michal = 21;
                    golfie = oscard[michal];
                    zuuluu = undefined;
                    option = report.bind(zuuluu)(golfie);
                    golfie = option.getAutomodQuarantinedGuildMemberFlags;
                    yankee = _closure1_slot10;
                    offset = yankee.getMember;
                    verify = _closure2_slot0;
                    tangon = _closure2_slot1;
                    tangon = offset.bind(yankee)(verify, tangon);
                    tangon = golfie.bind(option)(tangon);
                    michal = oscard[michal];
                    zuuluu = report.bind(zuuluu)(michal);
                    michal = zuuluu.getAutomodReason;
                    michal = michal.bind(zuuluu)(tangon);
                    return michal;
 95:
                    return entity;
                }
            };
            option = offset.bind(yankee)(option, zuuluu, tangon);
            tangon = _closure1_slot1;
            zuuluu = 22;
            zuuluu = verify[zuuluu];
            zuuluu = tangon.bind(report)(zuuluu);
            entity = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 23;
                michal = michal[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                tangon = report.track;
                michal = _closure1_slot13;
                zuuluu = michal.OPEN_MODAL;
                michal = {};
                oscard = _closure1_slot12;
                michal['type'] = oscard;
                golfie = _closure2_slot0;
                michal['guild_id'] = golfie;
                oscard = _closure2_slot1;
                michal['other_user_id'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            entity = zuuluu.bind(report)(entity);
            entity = _closure1_slot15;
            entity = entity.AUTOMOD_QUARANTINED_BIO;
            if(!(option !== entity)) { _fun00006_ip = 352; continue _fun00005 }
 253:
            entity = _closure1_slot15;
            entity = entity.AUTOMOD_QUARANTINED_USERNAME_OR_GUILD_NICKNAME;
            if(!(option !== entity)) { _fun00006_ip = 352; continue _fun00005 }
 267:
            entity = _closure1_slot15;
            entity = entity.AUTOMOD_QUARANTINED_SERVER_TAG;
            if(!(option !== entity)) { _fun00006_ip = 319; continue _fun00005 }
 281:
            tangon = _closure1_slot16;
            zuuluu = _closure1_slot20;
            entity = {};
            entity['automodReason'] = option;
            entity['guildName'] = golfie;
            kiloes = entity;
            backup = oscard;
            verify = copyDataProperties(kiloes, backup);
            entity = tangon.bind(report)(zuuluu, entity);
            _fun00006_ip = 350; continue _fun00005;
 319:
            verify = _closure1_slot16;
            tangon = _closure1_slot21;
            zuuluu = {};
            zuuluu['guildName'] = golfie;
            kiloes = zuuluu;
            backup = oscard;
            offset = copyDataProperties(kiloes, backup);
            entity = verify.bind(report)(tangon, zuuluu);
 350:
            _fun00006_ip = 388; continue _fun00005;
 352:
            tangon = _closure1_slot16;
            zuuluu = _closure1_slot20;
            michal = {};
            michal['automodReason'] = option;
            michal['guildName'] = golfie;
            kiloes = michal;
            backup = oscard;
            oscard = copyDataProperties(kiloes, backup);
            entity = tangon.bind(report)(zuuluu, michal);
 388:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();