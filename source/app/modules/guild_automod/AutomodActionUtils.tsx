// app/modules/guild_automod/AutomodActionUtils.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    michal = function() { // Original name: getDefaultActions
        entity = {};
        michal = _closure1_slot0;
        zuuluu = michal.BLOCK_MESSAGE;
        michal = {};
        report = _closure1_slot0;
        report = report.BLOCK_MESSAGE;
        michal['type'] = report;
        report = {};
        oscard = undefined;
        report['customMessage'] = oscard;
        michal['metadata'] = report;
        entity[zuuluu] = michal;
        michal = _closure1_slot0;
        zuuluu = michal.FLAG_TO_CHANNEL;
        michal = {};
        report = _closure1_slot0;
        report = report.FLAG_TO_CHANNEL;
        michal['type'] = report;
        report = {};
        report['channelId'] = oscard;
        michal['metadata'] = report;
        entity[zuuluu] = michal;
        michal = _closure1_slot0;
        zuuluu = michal.USER_COMMUNICATION_DISABLED;
        michal = {};
        report = _closure1_slot0;
        report = report.USER_COMMUNICATION_DISABLED;
        michal['type'] = report;
        report = {};
        oscard = 60;
        report['durationSeconds'] = oscard;
        michal['metadata'] = report;
        entity[zuuluu] = michal;
        michal = _closure1_slot0;
        zuuluu = michal.QUARANTINE_USER;
        michal = {};
        tangon = _closure1_slot0;
        tangon = tangon.QUARANTINE_USER;
        michal['type'] = tangon;
        tangon = {};
        michal['metadata'] = tangon;
        entity[zuuluu] = michal;
        return entity;
    };
    var _closure1_slot1 = michal;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    entity = 0;
    report = golfie[entity];
    entity = undefined;
    report = oscard.bind(entity)(report);
    report = report.AutomodActionType;
    var _closure1_slot0 = report;
    report = 1;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/guild_automod/AutomodActionUtils.tsx';
    report = oscard.bind(golfie)(report);
    report = function(argFoo) { // Original name: getRuleDefaultActionsFromConfig
        zuuluu = _closure1_slot1;
        michal = undefined;
        michal = zuuluu.bind(michal)();
        var _closure2_slot0 = michal;
        michal = global;
        tangon = michal.Array;
        zuuluu = tangon.from;
        michal = argFoo;
        michal = michal.defaultActionTypes;
        zuuluu = zuuluu.bind(tangon)(michal);
        michal = zuuluu.map;
        entity = function(argFoo) {
            michal = _closure2_slot0;
            entity = argFoo;
            entity = michal[entity];
            return entity;
        };
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    zuuluu['getRuleDefaultActionsFromConfig'] = report;
    report = function(argFoo) { // Original name: isActionFlagToChannel
        entity = argFoo;
        michal = entity.type;
        entity = _closure1_slot0;
        entity = entity.FLAG_TO_CHANNEL;
        entity = michal === entity;
        return entity;
    };
    zuuluu['isActionFlagToChannel'] = report;
    report = function(argFoo) { // Original name: isActionUserCommunicationDisabled
        entity = argFoo;
        michal = entity.type;
        entity = _closure1_slot0;
        entity = entity.USER_COMMUNICATION_DISABLED;
        entity = michal === entity;
        return entity;
    };
    zuuluu['isActionUserCommunicationDisabled'] = report;
    report = function(argFoo) { // Original name: isActionBlockMessage
        entity = argFoo;
        michal = entity.type;
        entity = _closure1_slot0;
        entity = entity.BLOCK_MESSAGE;
        entity = michal === entity;
        return entity;
    };
    zuuluu['isActionBlockMessage'] = report;
    tangon = function(argFoo) { // Original name: isActionQuarantineUser
        entity = argFoo;
        michal = entity.type;
        entity = _closure1_slot0;
        entity = entity.QUARANTINE_USER;
        entity = michal === entity;
        return entity;
    };
    zuuluu['isActionQuarantineUser'] = tangon;
    zuuluu['getDefaultActions'] = michal;
    return entity;
})();