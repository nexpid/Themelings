// app/modules/guild_automod/Constants.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var7 = require;
    var3 = exports;
    var8 = dependencyMap;
    var1 = global;
    var5 = var1.Object;
    var4 = var5.defineProperty;
    var2 = {};
    var1 = true;
    var2['value'] = var1;
    var1 = '__esModule';
    var1 = var4.bind(var5)(var3, var1, var2);
    var5 = {};
    var2 = 1;
    var5['PROFANITY'] = var2;
    var1 = 'PROFANITY';
    var5[var2] = var1;
    var10 = 2;
    var5['SEXUAL_CONTENT'] = var10;
    var1 = 'SEXUAL_CONTENT';
    var5[var10] = var1;
    var6 = 3;
    var5['SLURS'] = var6;
    var1 = 'SLURS';
    var5[var6] = var1;
    var9 = 0;
    var4 = var8[var9];
    var1 = undefined;
    var4 = var7.bind(var1)(var4);
    var4 = var4.AutomodTriggerType;
    var11 = var4.USER_PROFILE;
    var4 = new Array(6);
    var4[0] = var11;
    var11 = var8[var9];
    var11 = var7.bind(var1)(var11);
    var11 = var11.AutomodTriggerType;
    var11 = var11.SERVER_POLICY;
    var4[1] = var11;
    var11 = var8[var9];
    var11 = var7.bind(var1)(var11);
    var11 = var11.AutomodTriggerType;
    var11 = var11.MENTION_SPAM;
    var4[2] = var11;
    var11 = var8[var9];
    var11 = var7.bind(var1)(var11);
    var11 = var11.AutomodTriggerType;
    var11 = var11.ML_SPAM;
    var4[3] = var11;
    var11 = var8[var9];
    var11 = var7.bind(var1)(var11);
    var11 = var11.AutomodTriggerType;
    var11 = var11.DEFAULT_KEYWORD_LIST;
    var4[4] = var11;
    var11 = var8[var9];
    var11 = var7.bind(var1)(var11);
    var11 = var11.AutomodTriggerType;
    var11 = var11.KEYWORD;
    var4[5] = var11;
    var11 = var8[var2];
    var13 = var7.bind(var1)(var11);
    var12 = var13.fileFinishedImporting;
    var11 = 'modules/guild_automod/Constants.tsx';
    var11 = var12.bind(var13)(var11);
    var10 = var8[var10];
    var10 = var7.bind(var1)(var10);
    var10 = var10.AutomodEventType;
    var3['AutomodEventType'] = var10;
    var9 = var8[var9];
    var9 = var7.bind(var1)(var9);
    var9 = var9.AutomodTriggerType;
    var3['AutomodTriggerType'] = var9;
    var6 = var8[var6];
    var6 = var7.bind(var1)(var6);
    var6 = var6.AutomodActionType;
    var3['AutomodActionType'] = var6;
    var3['KeywordPreset'] = var5;
    var3['AUTOMOD_TRIGGER_TYPES'] = var4;
    var5 = 1000;
    var3['MAX_KEYWORDS_PER_KEYWORD_FILTER'] = var5;
    var4 = 100;
    var3['MAX_KEYWORDS_PER_ALLOWLIST_KEYWORD_FILTER_RULE'] = var4;
    var3['MAX_KEYWORDS_PER_ALLOWLIST_DEFAULT_KEYWORD_RULE'] = var5;
    var5 = 10;
    var3['MAX_REGEX_PATTERNS_PER_KEYWORD_FILTER'] = var5;
    var5 = 60;
    var3['MAX_CHARACTERS_PER_KEYWORD'] = var5;
    var3['MIN_CHARACTERS_PER_KEYWORD'] = var2;
    var3['MIN_REGEX_PATTERN_LENGTH'] = var2;
    var5 = 260;
    var3['MAX_REGEX_PATTERN_LENGTH'] = var5;
    var3['MAX_RULE_NAME_LENGTH'] = var4;
    var3['MIN_MENTION_SPAM_LIMIT'] = var2;
    var2 = 50;
    var3['MAX_MENTION_SPAM_LIMIT'] = var2;
    var2 = 20;
    var3['MENTION_SPAM_LIMIT_DEFAULT'] = var2;
    var2 = 150;
    var3['MAX_BLOCK_ACTION_CUSTOM_MESSAGE_LENGTH'] = var2;
    var2 = 'automod-submit-feedback';
    var3['SUBMIT_FEEDBACK_MODAL_KEY'] = var2;
    var2 = 'automod-profile-quarantine-alert';
    var3['QUARANTINE_USER_ALERT_KEY'] = var2;
    return var1;
})();