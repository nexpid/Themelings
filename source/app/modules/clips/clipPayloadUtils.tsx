// app/modules/clips/clipPayloadUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    tangon = tangon.CLIPS_MAX_PARTICIPANTS;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/clips/clipPayloadUtils.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: getClipCreatedAt
        entity = global;
        zuuluu = entity.Date;
        tangon = _closure1_slot0;
        michal = _closure1_slot1;
        entity = 1;
        michal = michal[entity];
        entity = undefined;
        tangon = tangon.bind(entity)(michal);
        michal = tangon.extractTimestamp;
        entity = argFoo;
        report = michal.bind(tangon)(entity);
        michal = zuuluu.prototype;
        michal = Object.create(michal, {constructor: {value: zuuluu}});
        oscard = michal;
        entity = new oscard[zuuluu](report, tangon);
        michal = entity instanceof Object ? entity : michal;
        entity = michal.toISOString;
        entity = entity.bind(michal)();
        return entity;
    };
    zuuluu['getClipCreatedAt'] = tangon;
    michal = function(argFoo) { // Original name: getClipParticipantIds
        tangon = argFoo;
        zuuluu = tangon.slice;
        michal = _closure1_slot2;
        entity = 0;
        entity = zuuluu.bind(tangon)(entity, michal);
        return entity;
    };
    zuuluu['getClipParticipantIds'] = michal;
    return entity;
})();