// app/modules/safety_education/native/UserSafetyEducationBlockActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ContentDismissActionType;
    var _closure1_slot7 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = {};
    golfie = 'https://cdn.discordapp.com/attachments/1067194967979733053/1067195117439557712/Safety_BLOCK_Coachmark.mp4';
    tangon['videoURI'] = golfie;
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 7;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    offset = 'hidden';
    verify['overflow'] = offset;
    tangon['videoContainer'] = verify;
    verify = {'flex': 1, 'alignItems': 'center'};
    tangon['contentContainer'] = verify;
    verify = {'marginTop': 16, 'textAlign': 'center'};
    tangon['title'] = verify;
    verify = {'marginTop': 8, 'marginBottom': 24, 'textAlign': 'center'};
    tangon['body'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/safety_education/native/UserSafetyEducationBlockActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: UserSafetyEducationBlockActionSheet
        entity = argFoo;
        entity = entity.markAsDismissed;
        var _closure2_slot0 = entity;
        entity = _closure1_slot11;
        tangon = undefined;
        sizing = entity.bind(tangon)();
        zuuluu = _closure1_slot4;
        entity = zuuluu.useState;
        michal = 0;
        report = entity.bind(zuuluu)(michal);
        zuuluu = _closure1_slot3;
        entity = 2;
        entity = zuuluu.bind(tangon)(report, entity);
        update = entity[michal];
        echoed = 1;
        entity = entity[echoed];
        var _closure2_slot1 = entity;
        backup = _closure1_slot0;
        kiloes = _closure1_slot2;
        entity = 8;
        entity = kiloes[entity];
        michal = backup.bind(tangon)(entity);
        entity = michal.useIsScreenLandscape;
        entity = entity.bind(michal)();
        var _closure2_slot2 = entity;
        entity = 9;
        entity = kiloes[entity];
        report = backup.bind(tangon)(entity);
        zuuluu = report.useStateFromStores;
        entity = _closure1_slot6;
        michal = new Array(1);
        michal[0] = entity;
        entity = function() {
            entity = _closure1_slot6;
            entity = entity.useReducedMotion;
            return entity;
        };
        result = zuuluu.bind(report)(michal, entity);
        zuuluu = _closure1_slot8;
        entity = 10;
        entity = kiloes[entity];
        entity = backup.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        output = true;
        entity['startExpanded'] = output;
        report = function() { // Original name: onDismiss
            zuuluu = _closure2_slot0;
            entity = _closure1_slot7;
            michal = entity.UNKNOWN;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        entity['onDismiss'] = report;
        golfie = _closure1_slot9;
        oscard = _closure1_slot5;
        report = {};
        option = sizing.contentContainer;
        report['style'] = option;
        option = function(argFoo) { // Original name: onLayout
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                tangon = entity.width;
                zuuluu = _closure2_slot1;
                entity = _closure2_slot2;
                michal = tangon;
                if(!entity) { _fun00002_ip = 43; continue _fun00001 }
 36:
                entity = 2;
                michal = tangon / entity;
 43:
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                entity = undefined;
                return entity;
            }
        };
        report['onLayout'] = option;
        option = {};
        verify = 'image';
        option['accessibilityRole'] = verify;
        yankee = 11;
        verify = kiloes[yankee];
        verify = backup.bind(tangon)(verify);
        foxtra = verify.intl;
        offset = foxtra.string;
        verify = kiloes[yankee];
        verify = backup.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.61GrDA;
        verify = offset.bind(foxtra)(verify);
        option['accessibilityLabel'] = verify;
        offset = _closure1_slot1;
        verify = 12;
        verify = kiloes[verify];
        foxtra = offset.bind(tangon)(verify);
        verify = {};
        ctrled = sizing.videoContainer;
        verify['style'] = ctrled;
        source = _closure1_slot10;
        verify['src'] = source;
        verify['width'] = update;
        echoed = update / echoed;
        verify['height'] = echoed;
        verify['muted'] = output;
        verify['paused'] = result;
        verify['ariaHidden'] = output;
        verify = zuuluu.bind(tangon)(foxtra, verify);
        option['children'] = verify;
        verify = zuuluu.bind(tangon)(oscard, option);
        option = new Array(4);
        option[0] = verify;
        verify = 13;
        foxtra = kiloes[verify];
        foxtra = backup.bind(tangon)(foxtra);
        output = foxtra.Text;
        foxtra = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        result = sizing.title;
        foxtra['style'] = result;
        result = kiloes[yankee];
        result = backup.bind(tangon)(result);
        update = result.intl;
        echoed = update.string;
        result = kiloes[yankee];
        result = backup.bind(tangon)(result);
        result = result.t;
        result = result.61GrDA;
        result = echoed.bind(update)(result);
        foxtra['children'] = result;
        foxtra = zuuluu.bind(tangon)(output, foxtra);
        option[1] = foxtra;
        verify = kiloes[verify];
        verify = backup.bind(tangon)(verify);
        foxtra = verify.Text;
        verify = {};
        sizing = sizing.body;
        verify['style'] = sizing;
        sizing = 'text-sm/normal';
        verify['variant'] = sizing;
        sizing = kiloes[yankee];
        sizing = backup.bind(tangon)(sizing);
        result = sizing.intl;
        output = result.string;
        sizing = kiloes[yankee];
        sizing = backup.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.1zzTSk;
        sizing = output.bind(result)(sizing);
        verify['children'] = sizing;
        verify = zuuluu.bind(tangon)(foxtra, verify);
        option[2] = verify;
        verify = 14;
        verify = kiloes[verify];
        offset = offset.bind(tangon)(verify);
        verify = {};
        romeon = function() { // Original name: onPress
            zuuluu = _closure2_slot0;
            entity = _closure1_slot7;
            michal = entity.UNKNOWN;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        verify['onPress'] = romeon;
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        yankee = kiloes[yankee];
        yankee = backup.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.NX+WJC;
        yankee = romeon.bind(foxtra)(yankee);
        verify['text'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[3] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();