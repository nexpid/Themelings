// app/modules/mfa/native/MfaScreenUtils.tsx
export default (function(_, argBar, argBaz, __, ___, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    michal = {};
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'marginTop': null, 'marginLeft': null, 'marginRight': null, 'flex': 1, 'flexDirection': 'column', 'justifyContent': 'space-between', 'alignItems': 'stretch'};
    offset = 1;
    romeon = oscard[offset];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.NAV_BAR_HEIGHT;
    offset = oscard[offset];
    offset = report.bind(entity)(offset);
    offset = offset.STATUS_BAR_HEIGHT;
    offset = romeon - offset;
    verify['marginTop'] = offset;
    offset = 2;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginLeft'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginRight'] = romeon;
    tangon['contentContainer'] = verify;
    romeon = 'center';
    verify = {'flexDirection': 'column', 'alignItems': 'center'};
    tangon['mfaContainerHeader'] = verify;
    verify = {'flexDirection': 'column', 'alignItems': 'center'};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    verify['marginTop'] = foxtra;
    tangon['mfaContainerHeaderContent'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_32;
    verify['marginHorizontal'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    verify['marginBottom'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['marginTop'] = foxtra;
    verify['textAlign'] = romeon;
    tangon['mfaContainerFooter'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginTop'] = romeon;
    tangon['mfaContainerFooterMargin'] = verify;
    verify = {'flexDirection': 'column', 'alignSelf': 'stretch'};
    tangon['inputContainer'] = verify;
    verify = {'flexDirection': 'column', 'alignSelf': 'stretch'};
    tangon['smsContainer'] = verify;
    verify = {'flexDirection': 'row', 'alignSelf': 'stretch'};
    tangon['smsInput'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.md;
    verify['borderRadius'] = offset;
    tangon['radioItem'] = verify;
    tangon = golfie.bind(option)(tangon);
    michal['useScreenStyles'] = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/mfa/native/MfaScreenUtils.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();