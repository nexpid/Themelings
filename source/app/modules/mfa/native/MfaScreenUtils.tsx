// app/modules/mfa/native/MfaScreenUtils.tsx
export default (function(_, argBar, argBaz, __, ___, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    entity = global;
    golf = entity.Object;
    tango = golf.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(golf)(zulu, entity, mike);
    mike = {};
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'marginTop': null, 'marginLeft': null, 'marginRight': null, 'flex': 1, 'flexDirection': 'column', 'justifyContent': 'space-between', 'alignItems': 'stretch'};
    offset = 1;
    romeo = oscar[offset];
    romeo = report.bind(entity)(romeo);
    romeo = romeo.NAV_BAR_HEIGHT;
    offset = oscar[offset];
    offset = report.bind(entity)(offset);
    offset = offset.STATUS_BAR_HEIGHT;
    offset = romeo - offset;
    verify['marginTop'] = offset;
    offset = 2;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['marginLeft'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['marginRight'] = romeo;
    tango['contentContainer'] = verify;
    romeo = 'center';
    verify = {'flexDirection': 'column', 'alignItems': 'center'};
    tango['mfaContainerHeader'] = verify;
    verify = {'flexDirection': 'column', 'alignItems': 'center'};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_24;
    verify['marginTop'] = foxtrot;
    tango['mfaContainerHeaderContent'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_32;
    verify['marginHorizontal'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_24;
    verify['marginBottom'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['marginTop'] = foxtrot;
    verify['textAlign'] = romeo;
    tango['mfaContainerFooter'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['marginTop'] = romeo;
    tango['mfaContainerFooterMargin'] = verify;
    verify = {'flexDirection': 'column', 'alignSelf': 'stretch'};
    tango['inputContainer'] = verify;
    verify = {'flexDirection': 'column', 'alignSelf': 'stretch'};
    tango['smsContainer'] = verify;
    verify = {'flexDirection': 'row', 'alignSelf': 'stretch'};
    tango['smsInput'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.md;
    verify['borderRadius'] = offset;
    tango['radioItem'] = verify;
    tango = golf.bind(options)(tango);
    mike['useScreenStyles'] = tango;
    tango = 3;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/mfa/native/MfaScreenUtils.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();