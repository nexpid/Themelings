// app/modules/mfa/native/screens/SelectScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.SELECT_NAMES;
    var _closure1_slot3 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    offset = tangon.Fonts;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'marginLeft': 16, 'marginRight': 16};
    tangon['container'] = verify;
    verify = {'height': 48, 'width': 48};
    tangon['icon'] = verify;
    verify = {'marginTop': null, 'marginLeft': 16, 'marginRight': 16, 'display': 'flex', 'alignItems': 'center'};
    yankee = 6;
    romeon = oscard[yankee];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.NAV_BAR_HEIGHT;
    yankee = oscard[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.STATUS_BAR_HEIGHT;
    yankee = romeon - yankee;
    verify['marginTop'] = yankee;
    tangon['selectContainer'] = verify;
    verify = {};
    offset = offset.PRIMARY_BOLD;
    verify['fontFamily'] = offset;
    tangon['title'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/mfa/native/screens/SelectScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SelectScreen
        offset = argFoo;
        var _closure2_slot0 = offset;
        entity = _closure1_slot6;
        tangon = undefined;
        golfie = entity.bind(tangon)();
        sizing = _closure1_slot0;
        output = _closure1_slot1;
        entity = 8;
        entity = output[entity];
        michal = sizing.bind(tangon)(entity);
        entity = michal.useNavigation;
        entity = entity.bind(michal)();
        var _closure2_slot1 = entity;
        zuuluu = _closure1_slot5;
        entity = 9;
        entity = output[entity];
        entity = sizing.bind(tangon)(entity);
        michal = entity.SafeAreaPaddingView;
        entity = {};
        report = true;
        entity['top'] = report;
        report = golfie.container;
        entity['style'] = report;
        option = _closure1_slot2;
        report = {};
        golfie = golfie.selectContainer;
        report['style'] = golfie;
        golfie = _closure1_slot4;
        yankee = 10;
        oscard = output[yankee];
        oscard = sizing.bind(tangon)(oscard);
        romeon = oscard.Text;
        oscard = {};
        foxtra = 'heading-xl/extrabold';
        oscard['variant'] = foxtra;
        foxtra = 11;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        result = backup.intl;
        kiloes = result.string;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.S9b9bW;
        backup = kiloes.bind(result)(backup);
        oscard['children'] = backup;
        romeon = golfie.bind(tangon)(romeon, oscard);
        oscard = new Array(2);
        oscard[0] = romeon;
        yankee = output[yankee];
        yankee = sizing.bind(tangon)(yankee);
        romeon = yankee.Text;
        yankee = {};
        backup = 'text-sm/medium';
        yankee['variant'] = backup;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = output[foxtra];
        foxtra = sizing.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.Jz1lXF;
        foxtra = backup.bind(kiloes)(foxtra);
        yankee['children'] = foxtra;
        yankee = golfie.bind(tangon)(romeon, yankee);
        oscard[1] = yankee;
        report['children'] = oscard;
        oscard = zuuluu.bind(tangon)(option, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = {};
        yankee = {'marginTop': 16, 'gap': 8};
        oscard['style'] = yankee;
        offset = offset.mfaChallenge;
        yankee = offset.methods;
        offset = yankee.map;
        verify = function(argFoo) {
            report = _closure2_slot0;
            tangon = _closure2_slot1;
            zuuluu = function(argFoo, argBar, argBaz) { // Original name: getOptionButton
                entity = argBar;
                michal = argFoo;
                var _closure4_slot0 = michal;
                var _closure4_slot1 = entity;
                michal = argBaz;
                var _closure4_slot2 = michal;
                report = _closure1_slot4;
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot1;
                michal = 7;
                michal = tangon[michal];
                tangon = undefined;
                michal = zuuluu.bind(tangon)(michal);
                zuuluu = michal.RowButton;
                michal = {};
                option = _closure1_slot3;
                golfie = entity.type;
                golfie = option[golfie];
                michal['label'] = golfie;
                oscard = function() { // Original name: onPress
                    tangon = _closure4_slot2;
                    zuuluu = tangon.push;
                    michal = _closure4_slot1;
                    michal = michal.type;
                    entity = _closure4_slot0;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    entity = undefined;
                    return entity;
                };
                michal['onPress'] = oscard;
                entity = entity.type;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            michal = undefined;
            entity = argFoo;
            entity = zuuluu.bind(michal)(report, entity, tangon);
            return entity;
        };
        verify = offset.bind(yankee)(verify);
        oscard['children'] = verify;
        oscard = golfie.bind(tangon)(option, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();