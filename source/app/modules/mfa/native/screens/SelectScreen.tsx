// app/modules/mfa/native/screens/SelectScreen.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot2 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.SELECT_NAMES;
    var _closure1_slot3 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    offset = tango.Fonts;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'marginLeft': 16, 'marginRight': 16};
    tango['container'] = verify;
    verify = {'height': 48, 'width': 48};
    tango['icon'] = verify;
    verify = {'marginTop': null, 'marginLeft': 16, 'marginRight': 16, 'display': 'flex', 'alignItems': 'center'};
    yankee = 6;
    romeo = oscar[yankee];
    romeo = report.bind(entity)(romeo);
    romeo = romeo.NAV_BAR_HEIGHT;
    yankee = oscar[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.STATUS_BAR_HEIGHT;
    yankee = romeo - yankee;
    verify['marginTop'] = yankee;
    tango['selectContainer'] = verify;
    verify = {};
    offset = offset.PRIMARY_BOLD;
    verify['fontFamily'] = offset;
    tango['title'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/mfa/native/screens/SelectScreen.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SelectScreen
        offset = argFoo;
        var _closure2_slot0 = offset;
        entity = _closure1_slot6;
        tango = undefined;
        golf = entity.bind(tango)();
        sizing = _closure1_slot0;
        output = _closure1_slot1;
        entity = 8;
        entity = output[entity];
        mike = sizing.bind(tango)(entity);
        entity = mike.useNavigation;
        entity = entity.bind(mike)();
        var _closure2_slot1 = entity;
        zulu = _closure1_slot5;
        entity = 9;
        entity = output[entity];
        entity = sizing.bind(tango)(entity);
        mike = entity.SafeAreaPaddingView;
        entity = {};
        report = true;
        entity['top'] = report;
        report = golf.container;
        entity['style'] = report;
        options = _closure1_slot2;
        report = {};
        golf = golf.selectContainer;
        report['style'] = golf;
        golf = _closure1_slot4;
        yankee = 10;
        oscar = output[yankee];
        oscar = sizing.bind(tango)(oscar);
        romeo = oscar.Text;
        oscar = {};
        foxtrot = 'heading-xl/extrabold';
        oscar['variant'] = foxtrot;
        foxtrot = 11;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        result = backup.intl;
        kilo = result.string;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        backup = backup.t;
        backup = backup.S9b9bW;
        backup = kilo.bind(result)(backup);
        oscar['children'] = backup;
        romeo = golf.bind(tango)(romeo, oscar);
        oscar = new Array(2);
        oscar[0] = romeo;
        yankee = output[yankee];
        yankee = sizing.bind(tango)(yankee);
        romeo = yankee.Text;
        yankee = {};
        backup = 'text-sm/medium';
        yankee['variant'] = backup;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = output[foxtrot];
        foxtrot = sizing.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.Jz1lXF;
        foxtrot = backup.bind(kilo)(foxtrot);
        yankee['children'] = foxtrot;
        yankee = golf.bind(tango)(romeo, yankee);
        oscar[1] = yankee;
        report['children'] = oscar;
        oscar = zulu.bind(tango)(options, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = {};
        yankee = {'marginTop': 16, 'gap': 8};
        oscar['style'] = yankee;
        offset = offset.mfaChallenge;
        yankee = offset.methods;
        offset = yankee.map;
        verify = function(argFoo) {
            report = _closure2_slot0;
            tango = _closure2_slot1;
            zulu = function(argFoo, argBar, argBaz) { // Original name: getOptionButton
                entity = argBar;
                mike = argFoo;
                var _closure4_slot0 = mike;
                var _closure4_slot1 = entity;
                mike = argBaz;
                var _closure4_slot2 = mike;
                report = _closure1_slot4;
                zulu = _closure1_slot0;
                tango = _closure1_slot1;
                mike = 7;
                mike = tango[mike];
                tango = undefined;
                mike = zulu.bind(tango)(mike);
                zulu = mike.RowButton;
                mike = {};
                options = _closure1_slot3;
                golf = entity.type;
                golf = options[golf];
                mike['label'] = golf;
                oscar = function() { // Original name: onPress
                    tango = _closure4_slot2;
                    zulu = tango.push;
                    mike = _closure4_slot1;
                    mike = mike.type;
                    entity = _closure4_slot0;
                    entity = zulu.bind(tango)(mike, entity);
                    entity = undefined;
                    return entity;
                };
                mike['onPress'] = oscar;
                entity = entity.type;
                entity = report.bind(tango)(zulu, mike, entity);
                return entity;
            };
            mike = undefined;
            entity = argFoo;
            entity = zulu.bind(mike)(report, entity, tango);
            return entity;
        };
        verify = offset.bind(yankee)(verify);
        oscar['children'] = verify;
        oscar = golf.bind(tango)(options, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();