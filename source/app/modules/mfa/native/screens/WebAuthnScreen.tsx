// app/modules/mfa/native/screens/WebAuthnScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    backup = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = golfie;
    entity = function(argFoo) { // Original name: AndroidAuthRadioGroup
        entity = argFoo;
        oscard = entity.authenticatorSelection;
        michal = entity.setAuthenticator;
        var _closure2_slot0 = michal;
        report = entity.inProgress;
        michal = _closure1_slot6;
        tangon = undefined;
        verify = michal.bind(tangon)();
        michal = {};
        zuuluu = _closure1_slot7;
        zuuluu = zuuluu.ANDROID_PASSKEY;
        michal['value'] = zuuluu;
        foxtra = _closure1_slot0;
        offset = _closure1_slot2;
        zuuluu = 6;
        option = offset[zuuluu];
        option = foxtra.bind(tangon)(option);
        romeon = option.intl;
        yankee = romeon.string;
        option = offset[zuuluu];
        option = foxtra.bind(tangon)(option);
        option = option.t;
        option = option.PVVXRE;
        option = yankee.bind(romeon)(option);
        michal['name'] = option;
        option = new Array(2);
        option[0] = michal;
        michal = {};
        yankee = _closure1_slot7;
        yankee = yankee.AUTHENTICATE;
        michal['value'] = yankee;
        yankee = offset[zuuluu];
        yankee = foxtra.bind(tangon)(yankee);
        romeon = yankee.intl;
        yankee = romeon.string;
        zuuluu = offset[zuuluu];
        zuuluu = foxtra.bind(tangon)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.TKop3d;
        zuuluu = yankee.bind(romeon)(zuuluu);
        michal['name'] = zuuluu;
        option[1] = michal;
        zuuluu = _closure1_slot5;
        michal = _closure1_slot1;
        entity = 7;
        entity = offset[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        verify = verify.radioItem;
        entity['style'] = verify;
        entity['options'] = option;
        golfie = function(argFoo) { // Original name: onChange
            entity = argFoo;
            zuuluu = entity.value;
            michal = _closure2_slot0;
            entity = undefined;
            entity = michal.bind(entity)(zuuluu);
            return entity;
        };
        entity['onChange'] = golfie;
        entity['value'] = oscard;
        entity['disabled'] = report;
        report = true;
        entity['withSpacing'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    offset = 0;
    michal = golfie[offset];
    entity = undefined;
    michal = backup.bind(entity)(michal);
    var _closure1_slot3 = michal;
    verify = 1;
    report = golfie[verify];
    michal = argCor;
    michal = michal.bind(entity)(report);
    var _closure1_slot4 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    option = michal.NativeModules;
    michal = 3;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.jsx;
    var _closure1_slot5 = michal;
    michal = 4;
    michal = golfie[michal];
    yankee = oscard.bind(entity)(michal);
    report = yankee.createStyles;
    michal = {};
    romeon = {};
    foxtra = 5;
    kiloes = golfie[foxtra];
    kiloes = backup.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_SECONDARY;
    romeon['backgroundColor'] = kiloes;
    foxtra = golfie[foxtra];
    foxtra = backup.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.md;
    romeon['borderRadius'] = foxtra;
    michal['radioItem'] = romeon;
    michal = report.bind(yankee)(michal);
    var _closure1_slot6 = michal;
    michal = {};
    michal['AUTHENTICATE'] = offset;
    report = 'AUTHENTICATE';
    michal[offset] = report;
    michal['ANDROID_PASSKEY'] = verify;
    report = 'ANDROID_PASSKEY';
    michal[verify] = report;
    var _closure1_slot7 = michal;
    report = {};
    offset = michal.AUTHENTICATE;
    verify = option.DCDSecurityKeyManager;
    verify = verify.authenticate;
    report[offset] = verify;
    verify = michal.ANDROID_PASSKEY;
    option = option.DCDSecurityKeyManager;
    option = option.authenticatePasskey;
    report[verify] = option;
    var _closure1_slot8 = report;
    report = 13;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/mfa/native/screens/WebAuthnScreen.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: WebAuthnScreen
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            option = michal.mfaChallenge;
            golfie = michal.finish;
            var _closure2_slot0 = golfie;
            tangon = undefined;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            var _closure2_slot5 = tangon;
            var _closure2_slot6 = tangon;
            yankee = _closure1_slot4;
            michal = yankee.useState;
            backup = false;
            michal = michal.bind(yankee)(backup);
            report = _closure1_slot3;
            foxtra = 2;
            michal = report.bind(tangon)(michal, foxtra);
            verify = 0;
            romeon = michal[verify];
            zuuluu = 1;
            michal = michal[zuuluu];
            var _closure2_slot1 = michal;
            michal = yankee.useState;
            michal = michal.bind(yankee)(tangon);
            michal = report.bind(tangon)(michal, foxtra);
            report = michal[verify];
            michal = michal[zuuluu];
            var _closure2_slot2 = michal;
            oscard = yankee.useState;
            sizing = _closure1_slot0;
            michal = _closure1_slot2;
            offset = 8;
            michal = michal[offset];
            sizing = sizing.bind(tangon)(michal);
            michal = sizing.isAndroid;
            michal = michal.bind(sizing)();
            sizing = _closure1_slot7;
            if(michal) { _fun00002_ip = 165; continue _fun00001 }
 157:
            michal = sizing.AUTHENTICATE;
            _fun00002_ip = 171; continue _fun00001;
 165:
            michal = sizing.ANDROID_PASSKEY;
 171:
            michal = oscard.bind(yankee)(michal);
            yankee = _closure1_slot3;
            michal = yankee.bind(tangon)(michal, foxtra);
            output = michal[verify];
            _closure2_slot3 = output;
            sizing = michal[zuuluu];
            oscard = _closure1_slot4;
            michal = oscard.useState;
            michal = michal.bind(oscard)(backup);
            michal = yankee.bind(tangon)(michal, foxtra);
            foxtra = michal[verify];
            michal = michal[zuuluu];
            _closure2_slot4 = michal;
            verify = option.methods;
            zuuluu = verify.find;
            michal = function(argFoo) {
                entity = argFoo;
                michal = entity.type;
                entity = 'webauthn';
                entity = entity === michal;
                return entity;
            };
            michal = zuuluu.bind(verify)(michal);
            verify = michal.challenge;
            _closure2_slot5 = verify;
            yankee = oscard.useMemo;
            zuuluu = new Array(1);
            zuuluu[0] = output;
            michal = function() {
                michal = _closure1_slot8;
                entity = _closure2_slot3;
                entity = michal[entity];
                return entity;
            };
            yankee = yankee.bind(oscard)(michal, zuuluu);
            _closure2_slot6 = yankee;
            zuuluu = oscard.useCallback;
            michal = new Array(3);
            michal[0] = yankee;
            michal[1] = verify;
            michal[2] = golfie;
            entity = function() {
                tangon = _closure2_slot2;
                entity = undefined;
                tangon = tangon.bind(entity)(entity);
                report = _closure2_slot1;
                tangon = true;
                tangon = report.bind(entity)(tangon);
                tangon = _closure2_slot6;
                zuuluu = _closure2_slot5;
                report = tangon.bind(entity)(zuuluu);
                tangon = report.then;
                zuuluu = function(argFoo) {
                    zuuluu = _closure2_slot0;
                    michal = {};
                    entity = 'webauthn';
                    michal['mfaType'] = entity;
                    entity = argFoo;
                    michal['data'] = entity;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                report = tangon.bind(report)(zuuluu);
                tangon = report.then;
                zuuluu = function() {
                    zuuluu = _closure2_slot4;
                    michal = undefined;
                    entity = true;
                    entity = zuuluu.bind(michal)(entity);
                    return entity;
                };
                report = tangon.bind(report)(zuuluu);
                tangon = report.catch;
                zuuluu = function(argFoo) {
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        tangon = argFoo;
                        report = _closure1_slot0;
                        zuuluu = _closure1_slot2;
                        entity = 9;
                        zuuluu = zuuluu[entity];
                        entity = undefined;
                        zuuluu = report.bind(entity)(zuuluu);
                        zuuluu = zuuluu.HTTPResponseError;
                        report = tangon instanceof zuuluu;
                        zuuluu = _closure2_slot2;
                        if(report) { _fun00004_ip = 60; continue _fun00003 }
 48:
                        tangon = tangon.message;
                        tangon = zuuluu.bind(entity)(tangon);
                        _fun00004_ip = 120; continue _fun00003;
 60:
                        oscard = _closure1_slot0;
                        golfie = _closure1_slot2;
                        michal = 6;
                        tangon = golfie[michal];
                        tangon = oscard.bind(entity)(tangon);
                        report = tangon.intl;
                        tangon = report.string;
                        michal = golfie[michal];
                        michal = oscard.bind(entity)(michal);
                        michal = michal.t;
                        michal = michal.xSCvBQ;
                        michal = tangon.bind(report)(michal);
                        michal = zuuluu.bind(entity)(michal);
 120:
                        return entity;
                    }
                };
                tangon = tangon.bind(report)(zuuluu);
                zuuluu = tangon.finally;
                michal = function() {
                    zuuluu = _closure2_slot1;
                    michal = undefined;
                    entity = false;
                    entity = zuuluu.bind(michal)(entity);
                    return entity;
                };
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            yankee = zuuluu.bind(oscard)(entity, michal);
            zuuluu = _closure1_slot5;
            michal = _closure1_slot1;
            oscard = _closure1_slot2;
            entity = 10;
            entity = oscard[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            verify = _closure1_slot0;
            result = 6;
            backup = oscard[result];
            backup = verify.bind(tangon)(backup);
            update = backup.intl;
            echoed = update.string;
            backup = oscard[result];
            backup = verify.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.saHocH;
            backup = echoed.bind(update)(backup);
            entity['headerText'] = backup;
            backup = oscard[result];
            backup = verify.bind(tangon)(backup);
            update = backup.intl;
            echoed = update.string;
            backup = oscard[result];
            backup = verify.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.YpMrqK;
            backup = echoed.bind(update)(backup);
            entity['subtitle'] = backup;
            update = _closure1_slot5;
            backup = 11;
            backup = oscard[backup];
            backup = verify.bind(tangon)(backup);
            echoed = backup.KeyImage;
            backup = {};
            backup = update.bind(tangon)(echoed, backup);
            entity['headerImage'] = backup;
            oscard = oscard[offset];
            verify = verify.bind(tangon)(oscard);
            oscard = verify.isAndroid;
            oscard = oscard.bind(verify)();
            if(!oscard) { _fun00002_ip = 558; continue _fun00001 }
 518:
            backup = _closure1_slot5;
            offset = _closure1_slot9;
            verify = {};
            verify['authenticatorSelection'] = output;
            verify['setAuthenticator'] = sizing;
            sizing = romeon;
            if(romeon) { _fun00002_ip = 547; continue _fun00001 }
 544:
            sizing = foxtra;
 547:
            verify['inProgress'] = sizing;
            oscard = backup.bind(tangon)(offset, verify);
 558:
            entity['content'] = oscard;
            offset = _closure1_slot5;
            verify = _closure1_slot1;
            backup = _closure1_slot2;
            oscard = 12;
            oscard = backup[oscard];
            verify = verify.bind(tangon)(oscard);
            oscard = {};
            sizing = 'primary';
            oscard['variant'] = sizing;
            output = _closure1_slot0;
            kiloes = backup[result];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = backup[result];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.Xr3Ekp;
            backup = kiloes.bind(sizing)(backup);
            oscard['text'] = backup;
            backup = romeon;
            if(romeon) { _fun00002_ip = 659; continue _fun00001 }
 656:
            backup = foxtra;
 659:
            oscard['loading'] = backup;
            if(romeon) { _fun00002_ip = 670; continue _fun00001 }
 667:
            romeon = foxtra;
 670:
            oscard['disabled'] = romeon;
            oscard['onPress'] = yankee;
            oscard = offset.bind(tangon)(verify, oscard);
            entity['submit'] = oscard;
            oscard = {};
            oscard['mfaChallenge'] = option;
            oscard['finish'] = golfie;
            entity['screenProps'] = oscard;
            oscard = 'webauthn';
            entity['mfaMethod'] = oscard;
            entity['error'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['AuthenticatorOption'] = michal;
    return entity;
})();