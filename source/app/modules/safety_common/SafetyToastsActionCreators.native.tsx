// app/modules/safety_common/SafetyToastsActionCreators.native.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var2 = {};
    var1 = true;
    var2['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var2);
    var1 = 0;
    var2 = var6[var1];
    var1 = undefined;
    var2 = var5.bind(var1)(var2);
    var2 = var2.SafetyToastType;
    var _closure1_slot2 = var2;
    var2 = {};
    var7 = function showIgnoreSuccessToast(arg1, arg2) {
        var7 = _closure1_slot0;
        var8 = _closure1_slot1;
        var1 = 1;
        var3 = var8[var1];
        var1 = undefined;
        var5 = var7.bind(var1)(var3);
        var4 = var5.showSafetySuccess;
        var2 = _closure1_slot2;
        var3 = var2.IGNORE_SUCCESS;
        var6 = 2;
        var6 = var8[var6];
        var9 = var7.bind(var1)(var6);
        var8 = var9.getSafetyToastTypeContent;
        var7 = var2.IGNORE_SUCCESS;
        var6 = arg1;
        var2 = arg2;
        var2 = var8.bind(var9)(var7, var6, var2);
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var2['showIgnoreSuccessToast'] = var7;
    var7 = function showUnignoreSuccessToast(arg1, arg2) {
        var7 = _closure1_slot0;
        var8 = _closure1_slot1;
        var1 = 1;
        var3 = var8[var1];
        var1 = undefined;
        var5 = var7.bind(var1)(var3);
        var4 = var5.showSafetySuccess;
        var2 = _closure1_slot2;
        var3 = var2.UNIGNORE_SUCCESS;
        var6 = 2;
        var6 = var8[var6];
        var9 = var7.bind(var1)(var6);
        var8 = var9.getSafetyToastTypeContent;
        var7 = var2.UNIGNORE_SUCCESS;
        var6 = arg1;
        var2 = arg2;
        var2 = var8.bind(var9)(var7, var6, var2);
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var2['showUnignoreSuccessToast'] = var7;
    var7 = function showBlockSuccessToast(arg1, arg2) {
        var7 = _closure1_slot0;
        var8 = _closure1_slot1;
        var1 = 1;
        var3 = var8[var1];
        var1 = undefined;
        var5 = var7.bind(var1)(var3);
        var4 = var5.showSafetySuccess;
        var2 = _closure1_slot2;
        var3 = var2.BLOCK_SUCCESS;
        var6 = 2;
        var6 = var8[var6];
        var9 = var7.bind(var1)(var6);
        var8 = var9.getSafetyToastTypeContent;
        var7 = var2.BLOCK_SUCCESS;
        var6 = arg1;
        var2 = arg2;
        var2 = var8.bind(var9)(var7, var6, var2);
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var2['showBlockSuccessToast'] = var7;
    var7 = function showUnblockSuccessToast(arg1, arg2) {
        var7 = _closure1_slot0;
        var8 = _closure1_slot1;
        var1 = 1;
        var3 = var8[var1];
        var1 = undefined;
        var5 = var7.bind(var1)(var3);
        var4 = var5.showSafetySuccess;
        var2 = _closure1_slot2;
        var3 = var2.UNBLOCK_SUCCESS;
        var6 = 2;
        var6 = var8[var6];
        var9 = var7.bind(var1)(var6);
        var8 = var9.getSafetyToastTypeContent;
        var7 = var2.UNBLOCK_SUCCESS;
        var6 = arg1;
        var2 = arg2;
        var2 = var8.bind(var9)(var7, var6, var2);
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var2['showUnblockSuccessToast'] = var7;
    var7 = function showMuteSuccessToast(arg1, arg2) {
        var7 = _closure1_slot0;
        var8 = _closure1_slot1;
        var1 = 1;
        var3 = var8[var1];
        var1 = undefined;
        var5 = var7.bind(var1)(var3);
        var4 = var5.showSafetySuccess;
        var2 = _closure1_slot2;
        var3 = var2.MUTE_SUCCESS;
        var6 = 2;
        var6 = var8[var6];
        var9 = var7.bind(var1)(var6);
        var8 = var9.getSafetyToastTypeContent;
        var7 = var2.MUTE_SUCCESS;
        var6 = arg1;
        var2 = arg2;
        var2 = var8.bind(var9)(var7, var6, var2);
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var2['showMuteSuccessToast'] = var7;
    var7 = function showUnmuteSuccessToast(arg1, arg2) {
        var7 = _closure1_slot0;
        var8 = _closure1_slot1;
        var1 = 1;
        var3 = var8[var1];
        var1 = undefined;
        var5 = var7.bind(var1)(var3);
        var4 = var5.showSafetySuccess;
        var2 = _closure1_slot2;
        var3 = var2.UNMUTE_SUCCESS;
        var6 = 2;
        var6 = var8[var6];
        var9 = var7.bind(var1)(var6);
        var8 = var9.getSafetyToastTypeContent;
        var7 = var2.UNMUTE_SUCCESS;
        var6 = arg1;
        var2 = arg2;
        var2 = var8.bind(var9)(var7, var6, var2);
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var2['showUnmuteSuccessToast'] = var7;
    var7 = function showReportSuccessToast(arg1, arg2) {
        var7 = _closure1_slot0;
        var8 = _closure1_slot1;
        var1 = 1;
        var3 = var8[var1];
        var1 = undefined;
        var5 = var7.bind(var1)(var3);
        var4 = var5.showSafetySuccess;
        var2 = _closure1_slot2;
        var3 = var2.REPORT_SUCCESS;
        var6 = 2;
        var6 = var8[var6];
        var9 = var7.bind(var1)(var6);
        var8 = var9.getSafetyToastTypeContent;
        var7 = var2.REPORT_SUCCESS;
        var6 = arg1;
        var2 = arg2;
        var2 = var8.bind(var9)(var7, var6, var2);
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var2['showReportSuccessToast'] = var7;
    var7 = function showSuccessToast(arg1) {
        var5 = arg1;
        var6 = _closure1_slot0;
        var7 = _closure1_slot1;
        var1 = 1;
        var2 = var7[var1];
        var1 = undefined;
        var4 = var6.bind(var1)(var2);
        var3 = var4.showSafetySuccess;
        var2 = 2;
        var2 = var7[var2];
        var6 = var6.bind(var1)(var2);
        var2 = var6.getSafetyToastTypeContent;
        var2 = var2.bind(var6)(var5);
        var2 = var3.bind(var4)(var5, var2);
        return var1;
    };
    var2['showSuccessToast'] = var7;
    var4 = function showFailedToast(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
            var6 = arg1;
            var5 = _closure1_slot0;
            var8 = _closure1_slot1;
            var1 = 1;
            var2 = var8[var1];
            var1 = undefined;
            var4 = var5.bind(var1)(var2);
            var3 = var4.presentFailedToast;
            var2 = 2;
            var2 = var8[var2];
            var5 = var5.bind(var1)(var2);
            var2 = var5.getSafetyToastTypeContent;
            var8 = null;
            if(!(var8 == var6)) { _fun0001_ip = 2; continue _fun0001 }
case 3:
            var7 = _closure1_slot2;
            var6 = var7.GENERIC_ERROR;
case 2:
            var2 = var2.bind(var5)(var6);
            var2 = var3.bind(var4)(var2);
            return var1;
        }
    };
    var2['showFailedToast'] = var4;
    var4 = 3;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/safety_common/SafetyToastsActionCreators.native.tsx';
    var4 = var5.bind(var6)(var4);
    var3['default'] = var2;
    return var1;
})();