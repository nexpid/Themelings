// app/modules/safety_common/native/SafetySettingsNotice.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot2 = tangon;
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.SafetySettingsNoticeAction;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 5;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    verify['paddingTop'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    verify['gap'] = foxtra;
    tangon['header'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['gap'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['padding'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.xs;
    verify['borderRadius'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.TEXT_LINK;
    verify['borderColor'] = foxtra;
    verify['borderWidth'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INFO_BOX_BACKGROUND;
    verify['backgroundColor'] = offset;
    tangon['blockedIgnoredRedirect'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/safety_common/native/SafetySettingsNotice.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SafetySettingsNotice
        michal = argFoo;
        romeon = michal.label;
        entity = michal.labelHook;
        var _closure2_slot0 = entity;
        option = michal.noticeType;
        var _closure2_slot1 = option;
        michal = _closure1_slot7;
        tangon = undefined;
        oscard = michal.bind(tangon)();
        golfie = _closure1_slot2;
        verify = golfie.useEffect;
        zuuluu = new Array(1);
        zuuluu[0] = option;
        michal = function() {
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot1;
            entity = 6;
            zuuluu = zuuluu[entity];
            entity = undefined;
            report = tangon.bind(entity)(zuuluu);
            tangon = report.trackSafetySettingsNoticeAnalytics;
            zuuluu = _closure2_slot1;
            michal = _closure1_slot4;
            michal = michal.VIEWED;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        michal = verify.bind(golfie)(michal, zuuluu);
        zuuluu = golfie.useCallback;
        michal = new Array(2);
        michal[0] = option;
        michal[1] = entity;
        entity = function() {
            michal = _closure2_slot0;
            entity = undefined;
            michal = michal.bind(entity)();
            report = _closure1_slot0;
            oscard = _closure1_slot1;
            tangon = 6;
            tangon = oscard[tangon];
            report = report.bind(entity)(tangon);
            tangon = report.trackSafetySettingsNoticeAnalytics;
            zuuluu = _closure2_slot1;
            michal = _closure1_slot4;
            michal = michal.LEARN_MORE;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        entity = zuuluu.bind(golfie)(entity, michal);
        var _closure2_slot2 = entity;
        zuuluu = _closure1_slot6;
        michal = _closure1_slot3;
        entity = {};
        oscard = oscard.blockedIgnoredRedirect;
        entity['style'] = oscard;
        option = _closure1_slot5;
        offset = _closure1_slot0;
        yankee = _closure1_slot1;
        report = 7;
        report = yankee[report];
        report = offset.bind(tangon)(report);
        oscard = report.CircleInformationIcon;
        report = {};
        golfie = 'text-link';
        report['color'] = golfie;
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = 8;
        oscard = yankee[oscard];
        oscard = offset.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {};
        verify = {};
        backup = 1;
        verify['flexShrink'] = backup;
        oscard['style'] = verify;
        verify = 'heading-sm/medium';
        oscard['variant'] = verify;
        verify = 9;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        yankee = verify.intl;
        offset = yankee.format;
        verify = {};
        foxtra = function(argFoo) { // Original name: hook
            tangon = _closure1_slot5;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot1;
            entity = 8;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.Text;
            entity = {'role': 'link', 'variant': 'heading-sm/medium', 'color': 'text-link'};
            report = _closure2_slot2;
            entity['onPress'] = report;
            report = argFoo;
            entity['children'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        verify['hook'] = foxtra;
        verify = offset.bind(yankee)(romeon, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();