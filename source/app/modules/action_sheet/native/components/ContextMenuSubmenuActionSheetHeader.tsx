// app/modules/action_sheet/native/components/ContextMenuSubmenuActionSheetHeader.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    romeo = tango.Fonts;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    foxtrot = 16;
    verify = {'paddingVertical': 12, 'paddingHorizontal': 16};
    tango['headerContainer'] = verify;
    verify = {};
    offset = 'flex-start';
    verify['alignSelf'] = offset;
    tango['backButton'] = verify;
    verify = {};
    offset = 5;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INTERACTIVE_ACTIVE;
    verify['tintColor'] = backup;
    backup = 8;
    verify['marginRight'] = backup;
    tango['backIcon'] = verify;
    verify = {};
    verify['fontSize'] = foxtrot;
    romeo = romeo.PRIMARY_MEDIUM;
    verify['fontFamily'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INTERACTIVE_ACTIVE;
    verify['color'] = offset;
    tango['backTitle'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/action_sheet/native/components/ContextMenuSubmenuActionSheetHeader.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ContextMenuSubmenuActionSheetHeader
        entity = argFoo;
        golf = entity.onBack;
        entity = _closure1_slot5;
        tango = undefined;
        options = entity.bind(tango)();
        var _closure2_slot0 = options;
        zulu = _closure1_slot4;
        mike = _closure1_slot3;
        entity = {};
        report = options.headerContainer;
        entity['style'] = report;
        romeo = _closure1_slot1;
        foxtrot = _closure1_slot2;
        yankee = 6;
        report = foxtrot[yankee];
        oscar = romeo.bind(tango)(report);
        report = {};
        backup = foxtrot[yankee];
        backup = romeo.bind(tango)(backup);
        backup = backup.Sizes;
        backup = backup.XSMALL;
        report['size'] = backup;
        yankee = foxtrot[yankee];
        yankee = romeo.bind(tango)(yankee);
        yankee = yankee.Colors;
        yankee = yankee.TRANSPARENT;
        report['color'] = yankee;
        yankee = options.backButton;
        report['style'] = yankee;
        offset = function() { // Original name: renderIcon
            tango = _closure1_slot4;
            oscar = _closure1_slot1;
            golf = _closure1_slot2;
            options = 7;
            entity = golf[options];
            zulu = undefined;
            mike = oscar.bind(zulu)(entity);
            entity = {};
            report = 'contain';
            entity['resizeMode'] = report;
            report = _closure2_slot0;
            offset = report.backIcon;
            entity['style'] = offset;
            verify = _closure1_slot0;
            options = golf[options];
            options = verify.bind(zulu)(options);
            options = options.IconSizes;
            options = options.EXTRA_SMALL;
            entity['size'] = options;
            report = report.backIcon;
            report = report.tintColor;
            entity['color'] = report;
            report = 8;
            report = golf[report];
            report = oscar.bind(zulu)(report);
            entity['source'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        report['renderIcon'] = offset;
        romeo = _closure1_slot0;
        verify = 9;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        verify = verify.t;
        verify = verify.13/7kZ;
        verify = offset.bind(yankee)(verify);
        report['text'] = verify;
        options = options.backTitle;
        report['textStyle'] = options;
        report['onPress'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();