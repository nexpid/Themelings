// app/modules/action_sheet/native/components/ContextMenuSubmenuActionSheetHeader.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    romeon = tangon.Fonts;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    foxtra = 16;
    verify = {'paddingVertical': 12, 'paddingHorizontal': 16};
    tangon['headerContainer'] = verify;
    verify = {};
    offset = 'flex-start';
    verify['alignSelf'] = offset;
    tangon['backButton'] = verify;
    verify = {};
    offset = 5;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INTERACTIVE_ACTIVE;
    verify['tintColor'] = backup;
    backup = 8;
    verify['marginRight'] = backup;
    tangon['backIcon'] = verify;
    verify = {};
    verify['fontSize'] = foxtra;
    romeon = romeon.PRIMARY_MEDIUM;
    verify['fontFamily'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INTERACTIVE_ACTIVE;
    verify['color'] = offset;
    tangon['backTitle'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/action_sheet/native/components/ContextMenuSubmenuActionSheetHeader.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ContextMenuSubmenuActionSheetHeader
        entity = argFoo;
        golfie = entity.onBack;
        entity = _closure1_slot5;
        tangon = undefined;
        option = entity.bind(tangon)();
        var _closure2_slot0 = option;
        zuuluu = _closure1_slot4;
        michal = _closure1_slot3;
        entity = {};
        report = option.headerContainer;
        entity['style'] = report;
        romeon = _closure1_slot1;
        foxtra = _closure1_slot2;
        yankee = 6;
        report = foxtra[yankee];
        oscard = romeon.bind(tangon)(report);
        report = {};
        backup = foxtra[yankee];
        backup = romeon.bind(tangon)(backup);
        backup = backup.Sizes;
        backup = backup.XSMALL;
        report['size'] = backup;
        yankee = foxtra[yankee];
        yankee = romeon.bind(tangon)(yankee);
        yankee = yankee.Colors;
        yankee = yankee.TRANSPARENT;
        report['color'] = yankee;
        yankee = option.backButton;
        report['style'] = yankee;
        offset = function() { // Original name: renderIcon
            tangon = _closure1_slot4;
            oscard = _closure1_slot1;
            golfie = _closure1_slot2;
            option = 7;
            entity = golfie[option];
            zuuluu = undefined;
            michal = oscard.bind(zuuluu)(entity);
            entity = {};
            report = 'contain';
            entity['resizeMode'] = report;
            report = _closure2_slot0;
            offset = report.backIcon;
            entity['style'] = offset;
            verify = _closure1_slot0;
            option = golfie[option];
            option = verify.bind(zuuluu)(option);
            option = option.IconSizes;
            option = option.EXTRA_SMALL;
            entity['size'] = option;
            report = report.backIcon;
            report = report.tintColor;
            entity['color'] = report;
            report = 8;
            report = golfie[report];
            report = oscard.bind(zuuluu)(report);
            entity['source'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        report['renderIcon'] = offset;
        romeon = _closure1_slot0;
        verify = 9;
        offset = foxtra[verify];
        offset = romeon.bind(tangon)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtra[verify];
        verify = romeon.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.13/7kZ;
        verify = offset.bind(yankee)(verify);
        report['text'] = verify;
        option = option.backTitle;
        report['textStyle'] = option;
        report['onPress'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();