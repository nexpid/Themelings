// app/modules/action_sheet/native/showShareActionSheet.android.tsx
export default (function(argFoo, argBar, _, __, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    options = tango.NativeEventEmitter;
    tango = tango.NativeModules;
    var _closure1_slot2 = tango;
    romeo = tango.ShareManager;
    golf = options.prototype;
    golf = Object.create(golf, {constructor: {value: options}});
    foxtrot = golf;
    tango = new foxtrot[options](romeo, yankee);
    verify = tango instanceof Object ? tango : golf;
    options = verify.addListener;
    golf = 'share-broadcast-receiver-app-clicked';
    tango = function(argFoo) {
        entity = argFoo;
        report = entity.app;
        tango = entity.location;
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 1;
        mike = mike[entity];
        entity = undefined;
        zulu = zulu.bind(entity)(mike);
        mike = zulu.trackAppClickInNativeShareSheet;
        mike = mike.bind(zulu)(report, tango);
        return entity;
    };
    tango = options.bind(verify)(golf, tango);
    tango = 2;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/action_sheet/native/showShareActionSheet.android.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo, argBar) { // Original name: showShareActionSheet
        entity = argFoo;
        mike = _closure1_slot2;
        oscar = mike.ShareManager;
        report = oscar.share;
        offset = entity.message;
        verify = entity.url;
        options = entity.subject;
        golf = argBar;
        yankee = oscar;
        entity = yankee[report](offset, verify, options, golf, oscar);
        entity = undefined;
        return entity;
    };
    zulu['showShareActionSheet'] = mike;
    return entity;
})();