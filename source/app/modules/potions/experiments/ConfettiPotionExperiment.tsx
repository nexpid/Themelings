// app/modules/potions/experiments/ConfettiPotionExperiment.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = golfie[entity];
    entity = undefined;
    tangon = oscard.bind(entity)(tangon);
    report = tangon.CommonTriggerPoints;
    tangon = 1;
    tangon = golfie[tangon];
    verify = oscard.bind(entity)(tangon);
    option = verify.createExperiment;
    tangon = {'kind': 'user', 'id': '2024-12_confetti_potion', 'label': 'Confetti Potion Experiment'};
    report = report.CONNECTION_OPEN;
    tangon['commonTriggerPoint'] = report;
    report = {'canPurchase': false, 'canSeeConfetti': false, 'canSeeEducation': false, 'canSeeUpsells': false};
    tangon['defaultConfig'] = report;
    report = {'id': 1, 'label': 'Viewer Treatment'};
    offset = {'canPurchase': false, 'canSeeConfetti': true, 'canSeeEducation': true, 'canSeeUpsells': false};
    report['config'] = offset;
    offset = new Array(2);
    offset[0] = report;
    yankee = {'id': 2, 'label': 'Purchaser Treatment'};
    report = 2;
    romeon = {'canPurchase': true, 'canSeeConfetti': true, 'canSeeEducation': true, 'canSeeUpsells': true};
    yankee['config'] = romeon;
    offset[1] = yankee;
    tangon['treatments'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot0 = tangon;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/potions/experiments/ConfettiPotionExperiment.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['ConfettiPotionExperiment'] = tangon;
    tangon = function(argFoo) {
        tangon = _closure1_slot0;
        zuuluu = tangon.useExperiment;
        michal = {};
        entity = argFoo;
        michal['location'] = entity;
        entity = {};
        report = false;
        entity['autoTrackExposure'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        entity = entity.canSeeConfetti;
        return entity;
    };
    zuuluu['useShouldMountConfettiCanvas'] = tangon;
    tangon = function(argFoo) {
        tangon = _closure1_slot0;
        zuuluu = tangon.useExperiment;
        michal = {};
        entity = argFoo;
        michal['location'] = entity;
        entity = {};
        report = true;
        entity['autoTrackExposure'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        entity = entity.canSeeConfetti;
        return entity;
    };
    zuuluu['useUserCanSeeMessageConfetti'] = tangon;
    tangon = function(argFoo) {
        tangon = _closure1_slot0;
        zuuluu = tangon.useExperiment;
        michal = {};
        entity = argFoo;
        michal['location'] = entity;
        entity = {};
        report = false;
        entity['autoTrackExposure'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        entity = entity.canPurchase;
        return entity;
    };
    zuuluu['useUserCanPurchaseMessageConfetti'] = tangon;
    michal = function(argFoo) {
        zuuluu = _closure1_slot0;
        michal = zuuluu.getCurrentConfig;
        entity = {};
        tangon = argFoo;
        entity['location'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        entity = entity.canSeeConfetti;
        return entity;
    };
    zuuluu['userCanSeeConfettiMessage'] = michal;
    return entity;
})();