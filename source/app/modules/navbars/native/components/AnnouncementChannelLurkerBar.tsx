// app/modules/navbars/native/components/AnnouncementChannelLurkerBar.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'backgroundColor': null, 'padding': 16, 'paddingTop': 8};
    offset = 4;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = offset;
    tangon['wrapper'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 8};
    tangon['text'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    michal = function(argFoo) { // Original name: AnnouncementChannelLurkerBar
        entity = argFoo;
        entity = entity.channel;
        var _closure2_slot0 = entity;
        entity = _closure1_slot6;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        michal = _closure1_slot3;
        entity = {};
        report = verify.wrapper;
        entity['style'] = report;
        option = _closure1_slot4;
        kiloes = _closure1_slot0;
        yankee = _closure1_slot2;
        report = 5;
        report = yankee[report];
        report = kiloes.bind(tangon)(report);
        golfie = report.Text;
        report = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-primary'};
        verify = verify.text;
        report['style'] = verify;
        romeon = 6;
        verify = yankee[romeon];
        verify = kiloes.bind(tangon)(verify);
        backup = verify.intl;
        offset = backup.string;
        verify = yankee[romeon];
        verify = kiloes.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.Hl0Mqq;
        verify = offset.bind(backup)(verify);
        report['children'] = verify;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        offset = _closure1_slot1;
        verify = 7;
        oscard = yankee[verify];
        golfie = offset.bind(tangon)(oscard);
        oscard = {};
        foxtra = function() { // Original name: onPress
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = _closure2_slot0;
                tangon = michal.id;
                entity = michal.getGuildId;
                zuuluu = entity.bind(michal)();
                entity = null;
                if(!(entity != zuuluu)) { _fun00002_ip = 65; continue _fun00001 }
 28:
                report = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 8;
                michal = michal[entity];
                entity = undefined;
                michal = report.bind(entity)(michal);
                entity = michal.showChannelFollowingActionSheet;
                entity = entity.bind(michal)(tangon, zuuluu);
 65:
                entity = undefined;
                return entity;
            }
        };
        oscard['onPress'] = foxtra;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = yankee[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.4z5PU1;
        romeon = foxtra.bind(backup)(romeon);
        oscard['text'] = romeon;
        romeon = yankee[verify];
        romeon = offset.bind(tangon)(romeon);
        romeon = romeon.Sizes;
        romeon = romeon.SMALL;
        oscard['size'] = romeon;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        verify = verify.Colors;
        verify = verify.GREY;
        oscard['color'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/navbars/native/components/AnnouncementChannelLurkerBar.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    zuuluu['AnnouncementChannelLurkerBar'] = michal;
    return entity;
})();