// app/modules/activate_device/native/ActivateDeviceError.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Image;
    var _closure1_slot3 = golf;
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'width': 254, 'height': 127, 'alignSelf': 'center'};
    tango['image'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/activate_device/native/ActivateDeviceError.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) {
        entity = argFoo;
        verify = entity.onRetry;
        entity = _closure1_slot8;
        tango = undefined;
        golf = entity.bind(tango)();
        zulu = _closure1_slot6;
        mike = _closure1_slot7;
        entity = {};
        options = _closure1_slot5;
        oscar = _closure1_slot3;
        report = {};
        output = _closure1_slot1;
        backup = _closure1_slot2;
        yankee = 4;
        yankee = backup[yankee];
        yankee = output.bind(tango)(yankee);
        report['source'] = yankee;
        golf = golf.image;
        report['style'] = golf;
        oscar = options.bind(tango)(oscar, report);
        report = new Array(3);
        report[0] = oscar;
        golf = _closure1_slot4;
        oscar = {};
        sizing = 5;
        yankee = backup[sizing];
        yankee = output.bind(tango)(yankee);
        yankee = yankee.innerContent;
        oscar['style'] = yankee;
        foxtrot = _closure1_slot0;
        romeo = 6;
        offset = backup[romeo];
        offset = foxtrot.bind(tango)(offset);
        kilo = offset.Text;
        yankee = {'variant': 'heading-lg/bold', 'color': 'header-primary'};
        offset = backup[sizing];
        offset = output.bind(tango)(offset);
        offset = offset.centerText;
        yankee['style'] = offset;
        offset = 7;
        result = backup[offset];
        result = foxtrot.bind(tango)(result);
        update = result.intl;
        echo = update.string;
        result = backup[offset];
        result = foxtrot.bind(tango)(result);
        result = result.t;
        result = result.3dgwPD;
        result = echo.bind(update)(result);
        yankee['children'] = result;
        kilo = options.bind(tango)(kilo, yankee);
        yankee = new Array(2);
        yankee[0] = kilo;
        romeo = backup[romeo];
        romeo = foxtrot.bind(tango)(romeo);
        kilo = romeo.Text;
        romeo = {'variant': 'text-md/medium', 'color': 'header-secondary'};
        sizing = backup[sizing];
        sizing = output.bind(tango)(sizing);
        sizing = sizing.centerText;
        romeo['style'] = sizing;
        sizing = backup[offset];
        sizing = foxtrot.bind(tango)(sizing);
        result = sizing.intl;
        output = result.string;
        sizing = backup[offset];
        sizing = foxtrot.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing./GAO1N;
        sizing = output.bind(result)(sizing);
        romeo['children'] = sizing;
        romeo = options.bind(tango)(kilo, romeo);
        yankee[1] = romeo;
        oscar['children'] = yankee;
        oscar = zulu.bind(tango)(golf, oscar);
        report[1] = oscar;
        oscar = 8;
        oscar = backup[oscar];
        oscar = foxtrot.bind(tango)(oscar);
        golf = oscar.Button;
        oscar = {};
        yankee = 'lg';
        oscar['size'] = yankee;
        yankee = backup[offset];
        yankee = foxtrot.bind(tango)(yankee);
        romeo = yankee.intl;
        yankee = romeo.string;
        offset = backup[offset];
        offset = foxtrot.bind(tango)(offset);
        offset = offset.t;
        offset = offset.5911LS;
        offset = yankee.bind(romeo)(offset);
        oscar['text'] = offset;
        oscar['onPress'] = verify;
        verify = true;
        oscar['grow'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['ActivateDeviceError'] = mike;
    return entity;
})();