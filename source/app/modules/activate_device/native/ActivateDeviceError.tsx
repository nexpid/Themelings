// app/modules/activate_device/native/ActivateDeviceError.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot3 = golfie;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'width': 254, 'height': 127, 'alignSelf': 'center'};
    tangon['image'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/activate_device/native/ActivateDeviceError.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) {
        entity = argFoo;
        verify = entity.onRetry;
        entity = _closure1_slot8;
        tangon = undefined;
        golfie = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        michal = _closure1_slot7;
        entity = {};
        option = _closure1_slot5;
        oscard = _closure1_slot3;
        report = {};
        output = _closure1_slot1;
        backup = _closure1_slot2;
        yankee = 4;
        yankee = backup[yankee];
        yankee = output.bind(tangon)(yankee);
        report['source'] = yankee;
        golfie = golfie.image;
        report['style'] = golfie;
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(3);
        report[0] = oscard;
        golfie = _closure1_slot4;
        oscard = {};
        sizing = 5;
        yankee = backup[sizing];
        yankee = output.bind(tangon)(yankee);
        yankee = yankee.innerContent;
        oscard['style'] = yankee;
        foxtra = _closure1_slot0;
        romeon = 6;
        offset = backup[romeon];
        offset = foxtra.bind(tangon)(offset);
        kiloes = offset.Text;
        yankee = {'variant': 'heading-lg/bold', 'color': 'header-primary'};
        offset = backup[sizing];
        offset = output.bind(tangon)(offset);
        offset = offset.centerText;
        yankee['style'] = offset;
        offset = 7;
        result = backup[offset];
        result = foxtra.bind(tangon)(result);
        update = result.intl;
        echoed = update.string;
        result = backup[offset];
        result = foxtra.bind(tangon)(result);
        result = result.t;
        result = result.3dgwPD;
        result = echoed.bind(update)(result);
        yankee['children'] = result;
        kiloes = option.bind(tangon)(kiloes, yankee);
        yankee = new Array(2);
        yankee[0] = kiloes;
        romeon = backup[romeon];
        romeon = foxtra.bind(tangon)(romeon);
        kiloes = romeon.Text;
        romeon = {'variant': 'text-md/medium', 'color': 'header-secondary'};
        sizing = backup[sizing];
        sizing = output.bind(tangon)(sizing);
        sizing = sizing.centerText;
        romeon['style'] = sizing;
        sizing = backup[offset];
        sizing = foxtra.bind(tangon)(sizing);
        result = sizing.intl;
        output = result.string;
        sizing = backup[offset];
        sizing = foxtra.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing./GAO1N;
        sizing = output.bind(result)(sizing);
        romeon['children'] = sizing;
        romeon = option.bind(tangon)(kiloes, romeon);
        yankee[1] = romeon;
        oscard['children'] = yankee;
        oscard = zuuluu.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        oscard = 8;
        oscard = backup[oscard];
        oscard = foxtra.bind(tangon)(oscard);
        golfie = oscard.Button;
        oscard = {};
        yankee = 'lg';
        oscard['size'] = yankee;
        yankee = backup[offset];
        yankee = foxtra.bind(tangon)(yankee);
        romeon = yankee.intl;
        yankee = romeon.string;
        offset = backup[offset];
        offset = foxtra.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.5911LS;
        offset = yankee.bind(romeon)(offset);
        oscard['text'] = offset;
        oscard['onPress'] = verify;
        verify = true;
        oscard['grow'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['ActivateDeviceError'] = michal;
    return entity;
})();