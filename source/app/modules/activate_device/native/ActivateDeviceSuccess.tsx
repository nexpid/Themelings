// app/modules/activate_device/native/ActivateDeviceSuccess.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'width': 300, 'height': 200, 'alignSelf': 'center'};
    tango['image'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/activate_device/native/ActivateDeviceSuccess.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) {
        _fun107521: for(var _fun107521_ip = 0; ; ) switch(_fun107521_ip) {
 0:
            mike = argFoo;
            entity = mike.data;
            verify = mike.onComplete;
            kilo = mike.successImage;
            mike = _closure1_slot7;
            tango = undefined;
            yankee = mike.bind(tango)();
            mike = entity.twoWayLinkCode;
            romeo = null;
            if(!(romeo == mike)) { _fun107521_ip = 155; continue _fun107521 }
 45:
            zulu = entity.scopes;
            mike = zulu.includes;
            report = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 5;
            entity = golf[entity];
            entity = report.bind(tango)(entity);
            entity = entity.OAuth2Scopes;
            entity = entity.SDK_SOCIAL_LAYER;
            entity = mike.bind(zulu)(entity);
            output = null;
            if(!entity) { _fun107521_ip = 210; continue _fun107521 }
 98:
            report = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 4;
            mike = golf[entity];
            mike = report.bind(tango)(mike);
            zulu = mike.intl;
            mike = zulu.string;
            entity = golf[entity];
            entity = report.bind(tango)(entity);
            entity = entity.t;
            entity = entity.vBPvKy;
            output = mike.bind(zulu)(entity);
            _fun107521_ip = 210; continue _fun107521;
 155:
            report = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 4;
            mike = golf[entity];
            mike = report.bind(tango)(mike);
            zulu = mike.intl;
            mike = zulu.string;
            entity = golf[entity];
            entity = report.bind(tango)(entity);
            entity = entity.t;
            entity = entity.QhATl5;
            output = mike.bind(zulu)(entity);
 210:
            zulu = _closure1_slot5;
            mike = _closure1_slot6;
            entity = {};
            report = romeo != kilo;
            golf = null;
            if(!report) { _fun107521_ip = 311; continue _fun107521 }
 229:
            offset = _closure1_slot4;
            options = _closure1_slot1;
            sizing = _closure1_slot2;
            report = 6;
            report = sizing[report];
            options = options.bind(tango)(report);
            report = {};
            backup = _closure1_slot0;
            foxtrot = 7;
            foxtrot = sizing[foxtrot];
            backup = backup.bind(tango)(foxtrot);
            foxtrot = backup.makeSource;
            foxtrot = foxtrot.bind(backup)(kilo);
            report['source'] = foxtrot;
            yankee = yankee.image;
            report['style'] = yankee;
            yankee = 'contain';
            report['resizeMode'] = yankee;
            golf = offset.bind(tango)(options, report);
 311:
            report = new Array(3);
            report[0] = golf;
            offset = _closure1_slot5;
            options = _closure1_slot3;
            golf = {};
            echo = _closure1_slot1;
            result = _closure1_slot2;
            update = 8;
            yankee = result[update];
            yankee = echo.bind(tango)(yankee);
            yankee = yankee.innerContent;
            golf['style'] = yankee;
            sizing = _closure1_slot4;
            control = _closure1_slot0;
            foxtrot = 9;
            yankee = result[foxtrot];
            yankee = control.bind(tango)(yankee);
            kilo = yankee.Text;
            yankee = {'variant': 'heading-lg/bold', 'color': 'header-primary'};
            backup = result[update];
            backup = echo.bind(tango)(backup);
            backup = backup.centerText;
            yankee['style'] = backup;
            backup = 4;
            echo = result[backup];
            echo = control.bind(tango)(echo);
            source = echo.intl;
            echo = source.string;
            result = result[backup];
            result = control.bind(tango)(result);
            result = result.t;
            result = result.qDtJmJ;
            result = echo.bind(source)(result);
            yankee['children'] = result;
            kilo = sizing.bind(tango)(kilo, yankee);
            yankee = new Array(2);
            yankee[0] = kilo;
            kilo = romeo != output;
            romeo = null;
            if(!kilo) { _fun107521_ip = 560; continue _fun107521 }
 487:
            sizing = _closure1_slot4;
            kilo = _closure1_slot0;
            result = _closure1_slot2;
            foxtrot = result[foxtrot];
            foxtrot = kilo.bind(tango)(foxtrot);
            kilo = foxtrot.Text;
            foxtrot = {'variant': 'text-md/medium', 'color': 'header-secondary'};
            echo = _closure1_slot1;
            result = result[update];
            result = echo.bind(tango)(result);
            result = result.centerText;
            foxtrot['style'] = result;
            foxtrot['children'] = output;
            romeo = sizing.bind(tango)(kilo, foxtrot);
 560:
            yankee[1] = romeo;
            golf['children'] = yankee;
            golf = offset.bind(tango)(options, golf);
            report[1] = golf;
            options = _closure1_slot4;
            foxtrot = _closure1_slot0;
            offset = _closure1_slot2;
            oscar = 10;
            oscar = offset[oscar];
            oscar = foxtrot.bind(tango)(oscar);
            golf = oscar.Button;
            oscar = {};
            yankee = 'lg';
            oscar['size'] = yankee;
            yankee = offset[backup];
            yankee = foxtrot.bind(tango)(yankee);
            romeo = yankee.intl;
            yankee = romeo.string;
            offset = offset[backup];
            offset = foxtrot.bind(tango)(offset);
            offset = offset.t;
            offset = offset.cpT0Cg;
            offset = yankee.bind(romeo)(offset);
            oscar['text'] = offset;
            oscar['onPress'] = verify;
            verify = true;
            oscar['grow'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['ActivateDeviceSuccess'] = mike;
    return entity;
})();