// app/modules/premium/roadblocks/native/hooks/useShowNitroUpsellCallback.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot2 = tango;
    tango = 2;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/premium/roadblocks/native/hooks/useShowNitroUpsellCallback.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: useShowNitroUpsellCallback
        report = _closure1_slot0;
        tango = _closure1_slot1;
        zulu = 1;
        tango = tango[zulu];
        zulu = undefined;
        report = report.bind(zulu)(tango);
        tango = report.useSharedValue;
        zulu = false;
        zulu = tango.bind(report)(zulu);
        var _closure2_slot0 = zulu;
        report = _closure1_slot2;
        tango = report.useCallback;
        mike = new Array(1);
        mike[0] = zulu;
        entity = function(argFoo) {
            zulu = _closure2_slot0;
            mike = zulu.set;
            entity = argFoo;
            entity = mike.bind(zulu)(entity);
            entity = undefined;
            return entity;
        };
        mike = tango.bind(report)(entity, mike);
        entity = {};
        entity['shouldShowUpsell'] = zulu;
        entity['onShowNitroUpsell'] = mike;
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();