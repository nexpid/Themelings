// app/modules/premium/roadblocks/native/experiments/PremiumFeatureUpsellExperiments.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    report = global;
    option = report.Object;
    tangon = option.defineProperty;
    michal = {};
    romeon = true;
    michal['value'] = romeon;
    entity = '__esModule';
    entity = tangon.bind(option)(zuuluu, entity, michal);
    michal = 0;
    tangon = golfie[michal];
    entity = undefined;
    verify = oscard.bind(entity)(tangon);
    option = verify.createExperiment;
    tangon = {'id': '2024-07_premium_app_icons_mobile', 'label': null, 'kind': 'user'};
    report = report.HermesInternal;
    foxtra = report.concat;
    yankee = 'Premium ';
    offset = 'App Icons';
    report = ' Mobile Upsell';
    report = foxtra.bind(yankee)(offset, report);
    tangon['label'] = report;
    report = {};
    offset = false;
    report['enabled'] = offset;
    tangon['defaultConfig'] = report;
    yankee = {'id': 1, 'label': 'Enabled'};
    report = 1;
    offset = {};
    offset['enabled'] = romeon;
    yankee['config'] = offset;
    offset = new Array(1);
    offset[0] = yankee;
    tangon['treatments'] = offset;
    tangon = option.bind(verify)(tangon);
    michal = golfie[michal];
    verify = oscard.bind(entity)(michal);
    option = verify.createExperiment;
    michal = {'id': '2024-05_premium_file_upload_upsell_mobile', 'label': 'Premium File Upload Upsell iOS', 'kind': 'user'};
    offset = {'enabled': false, 'showInlineUpsell': false};
    michal['defaultConfig'] = offset;
    yankee = {'id': 1, 'label': 'Roadblock with inline upsell'};
    offset = {'enabled': true, 'showInlineUpsell': true};
    yankee['config'] = offset;
    offset = new Array(2);
    offset[0] = yankee;
    yankee = {'id': 2, 'label': 'Roadblock without inline upsell'};
    romeon = {'enabled': true, 'showInlineUpsell': true};
    yankee['config'] = romeon;
    offset[1] = yankee;
    michal['treatments'] = offset;
    michal = option.bind(verify)(michal);
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/premium/roadblocks/native/experiments/PremiumFeatureUpsellExperiments.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['PremiumAppIconsUpsellExperiment'] = tangon;
    zuuluu['PremiumFileUploadUpsellExperiment'] = michal;
    return entity;
})();