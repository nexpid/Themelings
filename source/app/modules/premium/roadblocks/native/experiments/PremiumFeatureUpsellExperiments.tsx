// app/modules/premium/roadblocks/native/experiments/PremiumFeatureUpsellExperiments.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    golfie = argBar;
    zuuluu = argFre;
    option = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = option;
    oscard = function(argFoo, argBar) { // Original name: createFeatureExperiment
        zuuluu = _closure1_slot0;
        michal = _closure1_slot1;
        entity = 0;
        michal = michal[entity];
        entity = undefined;
        zuuluu = zuuluu.bind(entity)(michal);
        michal = zuuluu.createExperiment;
        entity = {};
        tangon = argFoo;
        entity['id'] = tangon;
        tangon = global;
        tangon = tangon.HermesInternal;
        golfie = tangon.concat;
        oscard = 'Premium ';
        report = argBar;
        tangon = ' Mobile Upsell';
        tangon = golfie.bind(oscard)(report, tangon);
        entity['label'] = tangon;
        tangon = 'user';
        entity['kind'] = tangon;
        tangon = {};
        report = false;
        tangon['enabled'] = report;
        entity['defaultConfig'] = tangon;
        report = {'id': 1, 'label': 'Enabled'};
        tangon = {};
        oscard = true;
        tangon['enabled'] = oscard;
        report['config'] = tangon;
        tangon = new Array(1);
        tangon[0] = report;
        entity['treatments'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    entity = undefined;
    tangon = '2024-07_premium_client_themes_mobile';
    michal = 'Client Themes';
    report = oscard.bind(entity)(tangon, michal);
    tangon = '2024-07_premium_app_icons_mobile';
    michal = 'App Icons';
    tangon = oscard.bind(entity)(tangon, michal);
    michal = 0;
    michal = option[michal];
    offset = golfie.bind(entity)(michal);
    verify = offset.createExperiment;
    michal = {'id': '2024-05_premium_file_upload_upsell_mobile', 'label': 'Premium File Upload Upsell iOS', 'kind': 'user'};
    oscard = {'enabled': false, 'showInlineUpsell': false};
    michal['defaultConfig'] = oscard;
    romeon = {'id': 1, 'label': 'Roadblock with inline upsell'};
    oscard = 1;
    yankee = {'enabled': true, 'showInlineUpsell': true};
    romeon['config'] = yankee;
    yankee = new Array(2);
    yankee[0] = romeon;
    romeon = {'id': 2, 'label': 'Roadblock without inline upsell'};
    foxtra = {'enabled': true, 'showInlineUpsell': true};
    romeon['config'] = foxtra;
    yankee[1] = romeon;
    michal['treatments'] = yankee;
    michal = verify.bind(offset)(michal);
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/premium/roadblocks/native/experiments/PremiumFeatureUpsellExperiments.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['PremiumClientThemesUpsellExperiment'] = report;
    zuuluu['PremiumAppIconsUpsellExperiment'] = tangon;
    zuuluu['PremiumFileUploadUpsellExperiment'] = michal;
    return entity;
})();