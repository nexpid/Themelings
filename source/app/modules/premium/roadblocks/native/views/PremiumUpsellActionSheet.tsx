// app/modules/premium/roadblocks/native/views/PremiumUpsellActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: getPageContent
        _fun78195: for(var _fun78195_ip = 0; ; ) switch(_fun78195_ip) {
 0:
            zulu = _closure1_slot0;
            tango = _closure1_slot2;
            entity = 13;
            entity = tango[entity];
            report = undefined;
            entity = zulu.bind(report)(entity);
            entity = entity.EntitlementFeatureNames;
            tango = entity.INCREASED_FILE_UPLOAD_SIZE;
            zulu = argFoo;
            entity = null;
            if(!(zulu === tango)) { _fun78195_ip = 62; continue _fun78195 }
 46:
            tango = _closure1_slot18;
            zulu = _closure1_slot23;
            mike = {};
            entity = tango.bind(report)(zulu, mike);
 62:
            return entity;
        }
    };
    var _closure1_slot22 = entity;
    entity = function() { // Original name: AlwaysCompressImagesSwitch
        _fun78196: for(var _fun78196_ip = 0; ; ) switch(_fun78196_ip) {
 0:
            mike = _closure1_slot20;
            report = undefined;
            foxtrot = mike.bind(report)();
            zulu = _closure1_slot0;
            tango = _closure1_slot2;
            mike = 20;
            mike = tango[mike];
            oscar = zulu.bind(report)(mike);
            tango = oscar.useStateFromStores;
            mike = _closure1_slot8;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                entity = _closure1_slot8;
                entity = entity.dataSavingMode;
                return entity;
            };
            yankee = tango.bind(oscar)(zulu, mike);
            tango = _closure1_slot4;
            zulu = tango.useCallback;
            mike = function(argFoo) {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 21;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.updatedUnsyncedSettings;
                mike = {};
                report = argFoo;
                mike['dataSavingMode'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity = new Array(0);
            offset = zulu.bind(tango)(mike, entity);
            zulu = _closure1_slot4;
            mike = zulu.useState;
            entity = !yankee;
            zulu = mike.bind(zulu)(entity);
            mike = _closure1_slot3;
            entity = 1;
            mike = mike.bind(report)(zulu, entity);
            entity = 0;
            mike = mike[entity];
            entity = null;
            if(!mike) { _fun78196_ip = 373; continue _fun78196 }
 135:
            tango = _closure1_slot18;
            zulu = _closure1_slot5;
            mike = {};
            oscar = foxtrot.compressionContainer;
            mike['style'] = oscar;
            options = _closure1_slot18;
            kilo = _closure1_slot0;
            sizing = _closure1_slot2;
            oscar = 22;
            oscar = sizing[oscar];
            oscar = kilo.bind(report)(oscar);
            golf = oscar.TableSwitchRow;
            oscar = {'start': true, 'end': true};
            romeo = 14;
            backup = sizing[romeo];
            backup = kilo.bind(report)(backup);
            result = backup.intl;
            output = result.string;
            backup = sizing[romeo];
            backup = kilo.bind(report)(backup);
            backup = backup.t;
            backup = backup.ix8XIi;
            backup = output.bind(result)(backup);
            oscar['label'] = backup;
            oscar['value'] = yankee;
            oscar['onValueChange'] = offset;
            yankee = _closure1_slot18;
            verify = 23;
            verify = sizing[verify];
            verify = kilo.bind(report)(verify);
            offset = verify.Text;
            verify = {};
            foxtrot = foxtrot.compressionHint;
            verify['style'] = foxtrot;
            foxtrot = 'text-xs/normal';
            verify['variant'] = foxtrot;
            foxtrot = sizing[romeo];
            foxtrot = kilo.bind(report)(foxtrot);
            backup = foxtrot.intl;
            foxtrot = backup.string;
            romeo = sizing[romeo];
            romeo = kilo.bind(report)(romeo);
            romeo = romeo.t;
            romeo = romeo.wC0+Pj;
            romeo = foxtrot.bind(backup)(romeo);
            verify['children'] = romeo;
            verify = yankee.bind(report)(offset, verify);
            oscar['subLabel'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 373:
            return entity;
        }
    };
    var _closure1_slot23 = entity;
    entity = function(argFoo) { // Original name: PremiumUpsellImage
        _fun78199: for(var _fun78199_ip = 0; ; ) switch(_fun78199_ip) {
 0:
            entity = argFoo;
            golf = entity.image;
            entity = _closure1_slot21;
            report = undefined;
            oscar = entity.bind(report)();
            zulu = 'string';
            entity = typeof golf;
            if(!(zulu !== entity)) { _fun78199_ip = 90; continue _fun78199 }
 33:
            tango = _closure1_slot18;
            zulu = _closure1_slot1;
            options = _closure1_slot2;
            entity = 25;
            entity = options[entity];
            zulu = zulu.bind(report)(entity);
            entity = {};
            entity['source'] = golf;
            options = 'contain';
            entity['resizeMode'] = options;
            options = oscar.image;
            entity['style'] = options;
            entity = tango.bind(report)(zulu, entity);
            _fun78199_ip = 136; continue _fun78199;
 90:
            tango = _closure1_slot18;
            zulu = _closure1_slot1;
            options = _closure1_slot2;
            mike = 24;
            mike = options[mike];
            zulu = zulu.bind(report)(mike);
            mike = {};
            mike['url'] = golf;
            oscar = oscar.image;
            mike['style'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 136:
            return entity;
        }
    };
    var _closure1_slot24 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    foxtrot = 2;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    tango = tango.Linking;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot10 = tango;
    tango = 7;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.PremiumSubscriptionSKUs;
    var _closure1_slot11 = golf;
    golf = tango.PremiumTypes;
    var _closure1_slot12 = golf;
    tango = tango.PremiumUpsellTypes;
    var _closure1_slot13 = tango;
    tango = 8;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticEvents;
    var _closure1_slot14 = golf;
    golf = tango.AnalyticsPages;
    var _closure1_slot15 = golf;
    golf = tango.HelpdeskArticles;
    var _closure1_slot16 = golf;
    tango = tango.ThemeTypes;
    var _closure1_slot17 = tango;
    tango = 9;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot18 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot19 = tango;
    tango = 10;
    golf = oscar[tango];
    verify = report.bind(entity)(golf);
    options = verify.createStyles;
    golf = {};
    romeo = {'alignSelf': 'center', 'marginTop': null, 'width': 240, 'height': 144};
    backup = 'center';
    offset = 11;
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_16;
    romeo['marginTop'] = kilo;
    golf['image'] = romeo;
    romeo = {'alignSelf': 'center', 'textAlign': 'center'};
    golf['text'] = romeo;
    romeo = {};
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_16;
    romeo['marginHorizontal'] = kilo;
    golf['description'] = romeo;
    romeo = {};
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_24;
    romeo['marginTop'] = kilo;
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_8;
    romeo['marginHorizontal'] = kilo;
    romeo['alignItems'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    romeo['gap'] = backup;
    golf['textContainer'] = romeo;
    romeo = {};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_32;
    romeo['marginTop'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    romeo['gap'] = backup;
    golf['buttonContainer'] = romeo;
    romeo = {};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.round;
    romeo['borderRadius'] = backup;
    golf['button'] = romeo;
    romeo = {'width': '100%', 'height': '100%', 'position': 'absolute', 'overflow': 'hidden'};
    golf['gradient'] = romeo;
    romeo = {'width': 20, 'height': 20, 'marginEnd': 2};
    golf['nitroWheel'] = romeo;
    romeo = {};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_24;
    romeo['marginTop'] = backup;
    golf['compressionContainer'] = romeo;
    romeo = {};
    romeo['marginTop'] = foxtrot;
    golf['compressionHint'] = romeo;
    golf = options.bind(verify)(golf);
    var _closure1_slot20 = golf;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'alignSelf': 'center', 'marginTop': null, 'width': 240, 'height': 144};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['marginTop'] = offset;
    tango['image'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot21 = tango;
    tango = 41;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/premium/roadblocks/native/views/PremiumUpsellActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: PremiumUpsellActionSheet
        _fun78200: for(var _fun78200_ip = 0; ; ) switch(_fun78200_ip) {
 0:
            entity = argFoo;
            yankee = entity.featureName;
            mike = entity.legacyProps;
            var _closure2_slot0 = mike;
            report = undefined;
            var _closure2_slot2 = report;
            var _closure2_slot3 = report;
            var _closure2_slot4 = report;
            var _closure2_slot5 = report;
            var _closure2_slot6 = report;
            entity = _closure1_slot20;
            source = entity.bind(report)();
            var _closure2_slot1 = source;
            zulu = _closure1_slot0;
            tango = _closure1_slot2;
            oscar = 20;
            entity = tango[oscar];
            verify = zulu.bind(report)(entity);
            options = verify.useStateFromStores;
            entity = _closure1_slot10;
            golf = new Array(1);
            golf[0] = entity;
            entity = function() {
                mike = _closure1_slot10;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            entity = options.bind(verify)(golf, entity);
            entity = 26;
            entity = tango[entity];
            tango = zulu.bind(report)(entity);
            zulu = tango.usePremiumUpsellConfig;
            offset = null;
            golf = offset == mike;
            entity = undefined;
            if(golf) { _fun78200_ip = 145; continue _fun78200 }
 139:
            entity = mike.initialUpsellKey;
 145:
            if(!(offset == entity)) { _fun78200_ip = 180; continue _fun78200 }
 149:
            options = _closure1_slot0;
            verify = _closure1_slot2;
            golf = 27;
            golf = verify[golf];
            options = options.bind(report)(golf);
            golf = options.getUpsellType;
            entity = golf.bind(options)(yankee);
 180:
            entity = zulu.bind(tango)(entity);
            result = entity.useTier0UpsellContent;
            _closure2_slot2 = result;
            entity = entity.onViewAllPerks;
            _closure2_slot3 = entity;
            tango = _closure1_slot0;
            zulu = _closure1_slot2;
            golf = zulu[oscar];
            romeo = tango.bind(report)(golf);
            verify = romeo.useStateFromStores;
            golf = _closure1_slot7;
            options = new Array(1);
            options[0] = golf;
            golf = function() {
                entity = _closure1_slot7;
                entity = entity.theme;
                return entity;
            };
            golf = verify.bind(romeo)(options, golf);
            zulu = zulu[oscar];
            options = tango.bind(report)(zulu);
            oscar = options.useStateFromStores;
            zulu = _closure1_slot9;
            tango = new Array(1);
            tango[0] = zulu;
            zulu = function() {
                mike = _closure1_slot9;
                entity = mike.getGuildId;
                entity = entity.bind(mike)();
                return entity;
            };
            oscar = oscar.bind(options)(tango, zulu);
            zulu = _closure1_slot12;
            if(result) { _fun78200_ip = 306; continue _fun78200 }
 298:
            tango = zulu.TIER_2;
            _fun78200_ip = 312; continue _fun78200;
 306:
            tango = zulu.TIER_0;
 312:
            zulu = function(argFoo, argBar, argBaz, argCorge) { // Original name: getPageConfig
                _fun78204: for(var _fun78204_ip = 0; ; ) switch(_fun78204_ip) {
 0:
                    entity = _closure1_slot17;
                    mike = entity.LIGHT;
                    kilo = 'dark';
                    entity = argBaz;
                    if(!(entity === mike)) { _fun78204_ip = 28; continue _fun78204 }
 24:
                    kilo = 'light';
 28:
                    romeo = _closure1_slot0;
                    golf = _closure1_slot2;
                    entity = 12;
                    entity = golf[entity];
                    oscar = undefined;
                    zulu = romeo.bind(oscar)(entity);
                    mike = zulu.getPremiumTypeDisplayName;
                    entity = argBar;
                    update = mike.bind(zulu)(entity);
                    entity = {};
                    mike = 13;
                    zulu = golf[mike];
                    zulu = romeo.bind(oscar)(zulu);
                    zulu = zulu.EntitlementFeatureNames;
                    offset = zulu.SOUNDBOARD_EVERYWHERE;
                    zulu = {};
                    verify = 14;
                    tango = golf[verify];
                    tango = romeo.bind(oscar)(tango);
                    yankee = tango.intl;
                    options = yankee.string;
                    tango = golf[verify];
                    tango = romeo.bind(oscar)(tango);
                    tango = tango.t;
                    tango = tango.jGDYFx;
                    tango = options.bind(yankee)(tango);
                    zulu['title'] = tango;
                    tango = golf[verify];
                    tango = romeo.bind(oscar)(tango);
                    foxtrot = tango.intl;
                    yankee = foxtrot.formatToPlainString;
                    tango = golf[verify];
                    tango = romeo.bind(oscar)(tango);
                    tango = tango.t;
                    options = tango.fc+8u7;
                    tango = {};
                    tango['nitroTierName'] = update;
                    tango = yankee.bind(foxtrot)(options, tango);
                    zulu['description'] = tango;
                    options = _closure1_slot15;
                    tango = options.PREMIUM_UPSELL_SOUNDBOARD_EVERYWHERE;
                    zulu['analyticsPage'] = tango;
                    tango = _closure1_slot13;
                    yankee = tango.SOUNDBOARD_EVERYWHERE_UPSELL;
                    zulu['upsellType'] = yankee;
                    yankee = global;
                    foxtrot = yankee.HermesInternal;
                    sizing = foxtrot.concat;
                    foxtrot = 'https://cdn.discordapp.com/assets/premium/roadblocks/soundboard_';
                    backup = '.png';
                    foxtrot = sizing.bind(foxtrot)(kilo, backup);
                    zulu['image'] = foxtrot;
                    entity[offset] = zulu;
                    zulu = golf[mike];
                    zulu = romeo.bind(oscar)(zulu);
                    zulu = zulu.EntitlementFeatureNames;
                    offset = zulu.EMOJIS_EVERYWHERE;
                    zulu = {};
                    foxtrot = golf[verify];
                    foxtrot = romeo.bind(oscar)(foxtrot);
                    output = foxtrot.intl;
                    sizing = output.string;
                    foxtrot = golf[verify];
                    foxtrot = romeo.bind(oscar)(foxtrot);
                    foxtrot = foxtrot.t;
                    foxtrot = foxtrot.zY5PPT;
                    foxtrot = sizing.bind(output)(foxtrot);
                    zulu['title'] = foxtrot;
                    foxtrot = golf[verify];
                    foxtrot = romeo.bind(oscar)(foxtrot);
                    result = foxtrot.intl;
                    output = result.formatToPlainString;
                    foxtrot = golf[verify];
                    foxtrot = romeo.bind(oscar)(foxtrot);
                    foxtrot = foxtrot.t;
                    sizing = foxtrot.uukIFx;
                    foxtrot = {};
                    foxtrot['nitroTierName'] = update;
                    foxtrot = output.bind(result)(sizing, foxtrot);
                    zulu['description'] = foxtrot;
                    foxtrot = options.PREMIUM_UPSELL_EMOJI_EVERYWHERE;
                    zulu['analyticsPage'] = foxtrot;
                    foxtrot = tango.EMOJI_EVERYWHERE_UPSELL;
                    zulu['upsellType'] = foxtrot;
                    foxtrot = yankee.HermesInternal;
                    sizing = foxtrot.concat;
                    foxtrot = 'https://cdn.discordapp.com/assets/premium/roadblocks/emoji_';
                    sizing = sizing.bind(foxtrot)(kilo, backup);
                    zulu['image'] = sizing;
                    entity[offset] = zulu;
                    zulu = golf[mike];
                    zulu = romeo.bind(oscar)(zulu);
                    zulu = zulu.EntitlementFeatureNames;
                    offset = zulu.INCREASED_FILE_UPLOAD_SIZE;
                    zulu = {};
                    sizing = golf[verify];
                    sizing = romeo.bind(oscar)(sizing);
                    result = sizing.intl;
                    output = result.string;
                    sizing = golf[verify];
                    sizing = romeo.bind(oscar)(sizing);
                    sizing = sizing.t;
                    sizing = sizing.G+pngo;
                    sizing = output.bind(result)(sizing);
                    zulu['title'] = sizing;
                    sizing = 15;
                    sizing = golf[sizing];
                    result = romeo.bind(oscar)(sizing);
                    output = result.fileUploadLimitRoadblockDescription;
                    sizing = {};
                    echo = argCorge;
                    sizing['guildId'] = echo;
                    echo = function() { // Original name: onClick
                        tango = _closure1_slot6;
                        zulu = tango.openURL;
                        oscar = _closure1_slot1;
                        report = _closure1_slot2;
                        entity = 16;
                        report = report[entity];
                        entity = undefined;
                        oscar = oscar.bind(entity)(report);
                        report = oscar.getArticleURL;
                        mike = _closure1_slot16;
                        mike = mike.NITRO_FAQ;
                        mike = report.bind(oscar)(mike);
                        mike = zulu.bind(tango)(mike);
                        return entity;
                    };
                    sizing['onClick'] = echo;
                    sizing = output.bind(result)(sizing);
                    zulu['description'] = sizing;
                    sizing = options.PREMIUM_UPSELL_FILE_UPLOAD;
                    zulu['analyticsPage'] = sizing;
                    sizing = tango.LARGER_FILE_UPLOAD_UPSELL;
                    zulu['upsellType'] = sizing;
                    sizing = yankee.HermesInternal;
                    result = sizing.concat;
                    output = 'https://cdn.discordapp.com/assets/premium/roadblocks/file_upload_';
                    sizing = '_v2.png';
                    sizing = result.bind(output)(kilo, sizing);
                    zulu['image'] = sizing;
                    entity[offset] = zulu;
                    zulu = golf[mike];
                    zulu = romeo.bind(oscar)(zulu);
                    zulu = zulu.EntitlementFeatureNames;
                    offset = zulu.ANIMATED_EMOJIS;
                    zulu = {};
                    sizing = golf[verify];
                    sizing = romeo.bind(oscar)(sizing);
                    result = sizing.intl;
                    output = result.string;
                    sizing = golf[verify];
                    sizing = romeo.bind(oscar)(sizing);
                    sizing = sizing.t;
                    sizing = sizing.SI7R9P;
                    sizing = output.bind(result)(sizing);
                    zulu['title'] = sizing;
                    sizing = golf[verify];
                    sizing = romeo.bind(oscar)(sizing);
                    echo = sizing.intl;
                    result = echo.formatToPlainString;
                    sizing = golf[verify];
                    sizing = romeo.bind(oscar)(sizing);
                    sizing = sizing.t;
                    output = sizing.uGkSY2;
                    sizing = {};
                    sizing['nitroTierName'] = update;
                    sizing = result.bind(echo)(output, sizing);
                    zulu['description'] = sizing;
                    sizing = options.PREMIUM_UPSELL_ANIMATED_EMOJI;
                    zulu['analyticsPage'] = sizing;
                    sizing = tango.ANIMATED_EMOJI_UPSELL;
                    zulu['upsellType'] = sizing;
                    yankee = yankee.HermesInternal;
                    yankee = yankee.concat;
                    yankee = yankee.bind(foxtrot)(kilo, backup);
                    zulu['image'] = yankee;
                    entity[offset] = zulu;
                    zulu = golf[mike];
                    zulu = romeo.bind(oscar)(zulu);
                    zulu = zulu.EntitlementFeatureNames;
                    offset = zulu.CLIENT_THEMES;
                    zulu = {};
                    yankee = golf[verify];
                    yankee = romeo.bind(oscar)(yankee);
                    backup = yankee.intl;
                    foxtrot = backup.string;
                    yankee = golf[verify];
                    yankee = romeo.bind(oscar)(yankee);
                    yankee = yankee.t;
                    yankee = yankee.p0I2Bg;
                    yankee = foxtrot.bind(backup)(yankee);
                    zulu['title'] = yankee;
                    yankee = golf[verify];
                    yankee = romeo.bind(oscar)(yankee);
                    backup = yankee.intl;
                    foxtrot = backup.string;
                    yankee = golf[verify];
                    yankee = romeo.bind(oscar)(yankee);
                    yankee = yankee.t;
                    yankee = yankee.jBqF2t;
                    yankee = foxtrot.bind(backup)(yankee);
                    zulu['description'] = yankee;
                    yankee = options.PREMIUM_UPSELL_CLIENT_THEMES;
                    zulu['analyticsPage'] = yankee;
                    yankee = tango.CLIENT_THEMES_UPSELL;
                    zulu['upsellType'] = yankee;
                    report = _closure1_slot1;
                    yankee = 17;
                    yankee = golf[yankee];
                    yankee = report.bind(oscar)(yankee);
                    zulu['image'] = yankee;
                    entity[offset] = zulu;
                    zulu = golf[mike];
                    zulu = romeo.bind(oscar)(zulu);
                    zulu = zulu.EntitlementFeatureNames;
                    offset = zulu.APP_ICONS;
                    zulu = {};
                    yankee = golf[verify];
                    yankee = romeo.bind(oscar)(yankee);
                    backup = yankee.intl;
                    foxtrot = backup.string;
                    yankee = golf[verify];
                    yankee = romeo.bind(oscar)(yankee);
                    yankee = yankee.t;
                    yankee = yankee.TYFwc3;
                    yankee = foxtrot.bind(backup)(yankee);
                    zulu['title'] = yankee;
                    yankee = golf[verify];
                    yankee = romeo.bind(oscar)(yankee);
                    backup = yankee.intl;
                    foxtrot = backup.string;
                    yankee = golf[verify];
                    yankee = romeo.bind(oscar)(yankee);
                    yankee = yankee.t;
                    yankee = yankee.HDt8io;
                    yankee = foxtrot.bind(backup)(yankee);
                    zulu['description'] = yankee;
                    yankee = options.PREMIUM_UPSELL_APP_ICONS;
                    zulu['analyticsPage'] = yankee;
                    yankee = tango.APP_ICON_UPSELL;
                    zulu['upsellType'] = yankee;
                    yankee = 18;
                    yankee = golf[yankee];
                    yankee = report.bind(oscar)(yankee);
                    zulu['image'] = yankee;
                    entity[offset] = zulu;
                    mike = golf[mike];
                    mike = romeo.bind(oscar)(mike);
                    mike = mike.EntitlementFeatureNames;
                    zulu = mike.SAVED_MESSAGES;
                    mike = {};
                    offset = golf[verify];
                    offset = romeo.bind(oscar)(offset);
                    foxtrot = offset.intl;
                    yankee = foxtrot.string;
                    offset = golf[verify];
                    offset = romeo.bind(oscar)(offset);
                    offset = offset.t;
                    offset = offset.YXk6Nz;
                    offset = yankee.bind(foxtrot)(offset);
                    mike['title'] = offset;
                    offset = golf[verify];
                    offset = romeo.bind(oscar)(offset);
                    yankee = offset.intl;
                    offset = yankee.string;
                    verify = golf[verify];
                    verify = romeo.bind(oscar)(verify);
                    verify = verify.t;
                    verify = verify.m/HzW1;
                    verify = offset.bind(yankee)(verify);
                    mike['description'] = verify;
                    options = options.PREMIUM_UPSELL_FOR_LATER;
                    mike['analyticsPage'] = options;
                    tango = tango.FOR_LATER_MODAL_UPSELL;
                    mike['upsellType'] = tango;
                    tango = 19;
                    tango = golf[tango];
                    tango = report.bind(oscar)(tango);
                    mike['image'] = tango;
                    entity[zulu] = mike;
                    return entity;
                }
            };
            whiskey = undefined;
            lima = undefined;
            sierra = tango;
            status = golf;
            target = oscar;
            zulu = whiskey[zulu](lima, sierra, status, target, papa);
            record = zulu[yankee];
            _closure2_slot4 = record;
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            oscar = 28;
            oscar = tango[oscar];
            oscar = zulu.bind(report)(oscar);
            oscar = oscar.bind(report)();
            verify = oscar.analyticsLocations;
            _closure2_slot5 = verify;
            options = _closure1_slot4;
            golf = options.useEffect;
            oscar = new Array(4);
            oscar[0] = record;
            oscar[1] = verify;
            oscar[2] = result;
            oscar[3] = mike;
            mike = function() {
                _fun78206: for(var _fun78206_ip = 0; ; ) switch(_fun78206_ip) {
 0:
                    zulu = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 29;
                    mike = mike[entity];
                    entity = undefined;
                    report = zulu.bind(entity)(mike);
                    tango = report.track;
                    mike = _closure1_slot14;
                    zulu = mike.PREMIUM_UPSELL_VIEWED;
                    mike = {};
                    golf = _closure2_slot0;
                    options = null;
                    offset = options == golf;
                    golf = undefined;
                    if(offset) { _fun78206_ip = 70; continue _fun78206 }
 60:
                    offset = _closure2_slot0;
                    golf = offset.analyticsProperties;
 70:
                    romeo = mike;
                    yankee = golf;
                    golf = copyDataProperties(romeo, yankee);
                    golf = _closure2_slot4;
                    golf = options == golf;
                    options = undefined;
                    if(golf) { _fun78206_ip = 103; continue _fun78206 }
 93:
                    golf = _closure2_slot4;
                    options = golf.upsellType;
 103:
                    golf = 'type';
                    mike[golf] = options;
                    golf = global;
                    options = golf.location;
                    golf = 'location';
                    mike[golf] = options;
                    options = _closure2_slot5;
                    golf = 'location_stack';
                    mike[golf] = options;
                    options = _closure1_slot0;
                    offset = _closure1_slot2;
                    golf = 12;
                    golf = offset[golf];
                    options = options.bind(entity)(golf);
                    golf = options.castPremiumSubscriptionAsSkuId;
                    oscar = _closure2_slot2;
                    verify = _closure1_slot11;
                    if(oscar) { _fun78206_ip = 187; continue _fun78206 }
 179:
                    oscar = verify.TIER_2;
                    _fun78206_ip = 193; continue _fun78206;
 187:
                    oscar = verify.TIER_0;
 193:
                    golf = golf.bind(options)(oscar);
                    oscar = 'sku_id';
                    mike[oscar] = golf;
                    mike = tango.bind(report)(zulu, mike);
                    return entity;
                }
            };
            mike = golf.bind(options)(mike, oscar);
            mike = 30;
            mike = tango[mike];
            zulu = zulu.bind(report)(mike);
            mike = record.analyticsPage;
            mike = zulu.bind(report)(result, entity, mike);
            control = mike.loading;
            _closure2_slot6 = control;
            update = mike.onPress;
            tango = _closure1_slot4;
            zulu = tango.useCallback;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 31;
                zulu = oscar[entity];
                entity = undefined;
                tango = report.bind(entity)(zulu);
                zulu = tango.dismissKeyboard;
                zulu = zulu.bind(tango)();
                zulu = _closure1_slot1;
                mike = 32;
                mike = oscar[mike];
                tango = zulu.bind(entity)(mike);
                zulu = tango.hideActionSheet;
                mike = 33;
                mike = oscar[mike];
                mike = report.bind(entity)(mike);
                mike = mike.PREMIUM_UPSELL_ACTION_SHEET_KEY;
                mike = zulu.bind(tango)(mike);
                mike = _closure2_slot3;
                mike = mike.bind(entity)();
                return entity;
            };
            output = zulu.bind(tango)(entity, mike);
            mike = offset == record;
            entity = null;
            if(mike) { _fun78200_ip = 1128; continue _fun78200 }
 502:
            tango = _closure1_slot18;
            zulu = _closure1_slot0;
            oscar = _closure1_slot2;
            mike = 34;
            mike = oscar[mike];
            mike = zulu.bind(report)(mike);
            zulu = mike.ActionSheet;
            mike = {};
            oscar = true;
            mike['startExpanded'] = oscar;
            options = _closure1_slot19;
            golf = _closure1_slot5;
            oscar = {};
            verify = record.image;
            offset = offset != verify;
            if(!offset) { _fun78200_ip = 591; continue _fun78200 }
 564:
            foxtrot = _closure1_slot18;
            romeo = _closure1_slot24;
            verify = {};
            kilo = record.image;
            verify['image'] = kilo;
            offset = foxtrot.bind(report)(romeo, verify);
 591:
            verify = new Array(4);
            verify[0] = offset;
            romeo = _closure1_slot19;
            foxtrot = _closure1_slot5;
            offset = {};
            kilo = source.textContainer;
            offset['style'] = kilo;
            context = _closure1_slot18;
            sequence = _closure1_slot0;
            vacuum = _closure1_slot2;
            sizing = 23;
            kilo = vacuum[sizing];
            kilo = sequence.bind(report)(kilo);
            config = kilo.Text;
            kilo = {};
            papa = source.text;
            kilo['style'] = papa;
            papa = 'heading-lg/extrabold';
            kilo['variant'] = papa;
            papa = record.title;
            kilo['children'] = papa;
            config = context.bind(report)(config, kilo);
            kilo = new Array(2);
            kilo[0] = config;
            config = _closure1_slot18;
            sizing = vacuum[sizing];
            sizing = sequence.bind(report)(sizing);
            sequence = sizing.Text;
            sizing = {};
            papa = source.text;
            context = new Array(2);
            context[0] = papa;
            papa = source.description;
            context[1] = papa;
            sizing['style'] = context;
            context = 'text-sm/normal';
            sizing['variant'] = context;
            record = record.description;
            sizing['children'] = record;
            sizing = config.bind(report)(sequence, sizing);
            kilo[1] = sizing;
            offset['children'] = kilo;
            offset = romeo.bind(report)(foxtrot, offset);
            verify[1] = offset;
            offset = _closure1_slot22;
            offset = offset.bind(report)(yankee);
            verify[2] = offset;
            yankee = _closure1_slot5;
            offset = {};
            foxtrot = source.buttonContainer;
            offset['style'] = foxtrot;
            sizing = _closure1_slot18;
            kilo = _closure1_slot1;
            foxtrot = 35;
            foxtrot = vacuum[foxtrot];
            kilo = kilo.bind(report)(foxtrot);
            foxtrot = {};
            foxtrot['loading'] = control;
            source = source.button;
            foxtrot['style'] = source;
            foxtrot['onPress'] = update;
            sequence = _closure1_slot0;
            update = _closure1_slot2;
            control = 14;
            source = update[control];
            source = sequence.bind(report)(source);
            vacuum = source.intl;
            source = vacuum.string;
            update = update[control];
            update = sequence.bind(report)(update);
            update = update.t;
            if(result) { _fun78200_ip = 911; continue _fun78200 }
 898:
            result = update.8x0jKS;
            result = source.bind(vacuum)(result);
            _fun78200_ip = 922; continue _fun78200;
 911:
            update = update.cM8bb2;
            result = source.bind(vacuum)(update);
 922:
            foxtrot['text'] = result;
            source = _closure1_slot0;
            result = _closure1_slot2;
            update = 36;
            update = result[update];
            update = source.bind(report)(update);
            update = update.ButtonColors;
            update = update.GREEN;
            foxtrot['color'] = update;
            update = function() { // Original name: renderIcon
                _fun78208: for(var _fun78208_ip = 0; ; ) switch(_fun78208_ip) {
 0:
                    entity = _closure2_slot6;
                    entity = !entity;
                    if(!entity) { _fun78208_ip = 64; continue _fun78208 }
 13:
                    report = _closure1_slot18;
                    zulu = _closure1_slot1;
                    tango = _closure1_slot2;
                    mike = 37;
                    mike = tango[mike];
                    tango = undefined;
                    zulu = zulu.bind(tango)(mike);
                    mike = {};
                    oscar = _closure2_slot1;
                    oscar = oscar.nitroWheel;
                    mike['style'] = oscar;
                    entity = report.bind(tango)(zulu, mike);
 64:
                    return entity;
                }
            };
            foxtrot['renderIcon'] = update;
            echo = function() { // Original name: renderLinearGradient
                _fun78209: for(var _fun78209_ip = 0; ; ) switch(_fun78209_ip) {
 0:
                    tango = _closure1_slot18;
                    mike = _closure1_slot1;
                    golf = _closure1_slot2;
                    entity = 38;
                    entity = golf[entity];
                    zulu = undefined;
                    mike = mike.bind(zulu)(entity);
                    entity = {};
                    options = _closure2_slot1;
                    options = options.gradient;
                    entity['style'] = options;
                    verify = _closure1_slot0;
                    options = 39;
                    offset = golf[options];
                    offset = verify.bind(zulu)(offset);
                    offset = offset.HorizontalGradient;
                    offset = offset.START;
                    entity['start'] = offset;
                    golf = golf[options];
                    golf = verify.bind(zulu)(golf);
                    golf = golf.HorizontalGradient;
                    golf = golf.END;
                    entity['end'] = golf;
                    report = _closure2_slot2;
                    golf = _closure1_slot0;
                    oscar = _closure1_slot2;
                    oscar = oscar[options];
                    oscar = golf.bind(zulu)(oscar);
                    oscar = oscar.Gradients;
                    if(report) { _fun78209_ip = 143; continue _fun78209 }
 135:
                    report = oscar.PREMIUM_TIER_2_TRI_COLOR;
                    _fun78209_ip = 149; continue _fun78209;
 143:
                    report = oscar.PREMIUM_TIER_0;
 149:
                    entity['colors'] = report;
                    entity = tango.bind(zulu)(mike, entity);
                    return entity;
                }
            };
            foxtrot['renderLinearGradient'] = echo;
            kilo = sizing.bind(report)(kilo, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = kilo;
            sizing = _closure1_slot18;
            backup = 40;
            backup = result[backup];
            backup = source.bind(report)(backup);
            kilo = backup.Button;
            backup = {};
            echo = 'secondary';
            backup['variant'] = echo;
            echo = result[control];
            echo = source.bind(report)(echo);
            update = echo.intl;
            echo = update.string;
            result = result[control];
            result = source.bind(report)(result);
            result = result.t;
            result = result.PcTCBw;
            result = echo.bind(update)(result);
            backup['text'] = result;
            backup['onPress'] = output;
            backup = sizing.bind(report)(kilo, backup);
            foxtrot[1] = backup;
            offset['children'] = foxtrot;
            offset = romeo.bind(report)(yankee, offset);
            verify[3] = offset;
            oscar['children'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 1128:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();