// app/modules/premium/experiments/EmojiKeyboardNitroBasicUpsellExperiment.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    entity = global;
    golf = entity.Object;
    tango = golf.defineProperty;
    mike = {};
    offset = true;
    mike['value'] = offset;
    entity = '__esModule';
    entity = tango.bind(golf)(zulu, entity, mike);
    entity = 0;
    mike = oscar[entity];
    entity = undefined;
    mike = report.bind(entity)(mike);
    options = mike.CommonTriggerPoints;
    mike = 1;
    mike = oscar[mike];
    golf = report.bind(entity)(mike);
    tango = golf.createExperiment;
    mike = {'kind': 'user', 'id': '2024-11_emoji_keyboard_nitro_basic_upsell', 'label': 'Emoji Keyboard Nitro Basic Upsell'};
    verify = {};
    yankee = false;
    verify['enabled'] = yankee;
    mike['defaultConfig'] = verify;
    options = options.CONNECTION_OPEN_MOBILE;
    mike['commonTriggerPoint'] = options;
    verify = {'id': 1, 'label': 'Coachmark shown'};
    options = {};
    options['enabled'] = offset;
    verify['config'] = options;
    options = new Array(1);
    options[0] = verify;
    mike['treatments'] = options;
    mike = tango.bind(golf)(mike);
    tango = 2;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/premium/experiments/EmojiKeyboardNitroBasicUpsellExperiment.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();