// app/modules/premium/experiments/NitroTabTitleExperiments.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    verify = argBar;
    zuuluu = argFre;
    offset = argPlu;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    kiloes = true;
    michal['value'] = kiloes;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    tangon = 0;
    michal = offset[tangon];
    entity = undefined;
    michal = verify.bind(entity)(michal);
    foxtra = michal.CommonTriggerPoints;
    golfie = {};
    golfie['UNSPECIFIED'] = tangon;
    michal = 'UNSPECIFIED';
    golfie[tangon] = michal;
    tangon = 1;
    golfie['GET_NITRO'] = tangon;
    michal = 'GET_NITRO';
    golfie[tangon] = michal;
    michal = 2;
    golfie['JOIN_NITRO'] = michal;
    report = 'JOIN_NITRO';
    golfie[michal] = report;
    option = 3;
    golfie['TRY_NITRO'] = option;
    report = 'TRY_NITRO';
    golfie[option] = report;
    report = offset[tangon];
    yankee = verify.bind(entity)(report);
    oscard = yankee.createExperiment;
    report = {'kind': 'user', 'id': '2025-07_nitro_tab_title_non_sub', 'commonTriggerPoint': null, 'label': 'Nitro Tab Title (non-sub)'};
    romeon = foxtra.CONNECTION_OPEN;
    report['commonTriggerPoint'] = romeon;
    romeon = {};
    backup = false;
    romeon['enabled'] = backup;
    sizing = golfie.UNSPECIFIED;
    romeon['variant'] = sizing;
    report['defaultConfig'] = romeon;
    sizing = {'id': 1, 'label': 'Get Nitro'};
    romeon = {};
    romeon['enabled'] = kiloes;
    output = golfie.GET_NITRO;
    romeon['variant'] = output;
    sizing['config'] = romeon;
    romeon = new Array(3);
    romeon[0] = sizing;
    sizing = {'id': 2, 'label': 'Join Nitro'};
    output = {};
    output['enabled'] = kiloes;
    result = golfie.JOIN_NITRO;
    output['variant'] = result;
    sizing['config'] = output;
    romeon[1] = sizing;
    sizing = {'id': 3, 'label': 'Try Nitro'};
    output = {};
    output['enabled'] = kiloes;
    result = golfie.TRY_NITRO;
    output['variant'] = result;
    sizing['config'] = output;
    romeon[2] = sizing;
    report['treatments'] = romeon;
    oscard = oscard.bind(yankee)(report);
    report = offset[michal];
    romeon = verify.bind(entity)(report);
    yankee = romeon.createApexExperiment;
    report = {'name': '2025-07-nitro-tab-title-non-sub', 'kind': 'user'};
    sizing = {};
    sizing['enabled'] = backup;
    output = golfie.UNSPECIFIED;
    sizing['variant'] = output;
    report['defaultConfig'] = sizing;
    sizing = {};
    output = {};
    output['enabled'] = kiloes;
    result = golfie.GET_NITRO;
    output['variant'] = result;
    sizing[1] = output;
    output = {};
    output['enabled'] = kiloes;
    result = golfie.JOIN_NITRO;
    output['variant'] = result;
    sizing[2] = output;
    output = {};
    output['enabled'] = kiloes;
    result = golfie.TRY_NITRO;
    output['variant'] = result;
    sizing[3] = output;
    report['variations'] = sizing;
    report = yankee.bind(romeon)(report);
    tangon = offset[tangon];
    romeon = verify.bind(entity)(tangon);
    yankee = romeon.createExperiment;
    tangon = {'kind': 'user', 'id': '2025-07_nitro_tab_title_sub', 'commonTriggerPoint': null, 'label': 'Nitro Tab Title (sub)'};
    foxtra = foxtra.CONNECTION_OPEN;
    tangon['commonTriggerPoint'] = foxtra;
    foxtra = {};
    foxtra['enabled'] = backup;
    tangon['defaultConfig'] = foxtra;
    sizing = {'id': 1, 'label': 'Nitro Home'};
    foxtra = {};
    foxtra['enabled'] = kiloes;
    sizing['config'] = foxtra;
    foxtra = new Array(1);
    foxtra[0] = sizing;
    tangon['treatments'] = foxtra;
    tangon = yankee.bind(romeon)(tangon);
    michal = offset[michal];
    romeon = verify.bind(entity)(michal);
    yankee = romeon.createApexExperiment;
    michal = {'name': '2025-07-nitro-tab-title-sub', 'kind': 'user'};
    foxtra = {};
    foxtra['enabled'] = backup;
    michal['defaultConfig'] = foxtra;
    foxtra = {};
    backup = {};
    backup['enabled'] = kiloes;
    foxtra[1] = backup;
    michal['variations'] = foxtra;
    michal = yankee.bind(romeon)(michal);
    option = offset[option];
    offset = verify.bind(entity)(option);
    verify = offset.fileFinishedImporting;
    option = 'modules/premium/experiments/NitroTabTitleExperiments.tsx';
    option = verify.bind(offset)(option);
    zuuluu['NitroTabTitleVariant'] = golfie;
    zuuluu['NitroTabTitleExperimentNonSub'] = oscard;
    zuuluu['NitroTabTitleApexExperimentNonSub'] = report;
    zuuluu['NitroTabTitleExperimentSub'] = tangon;
    zuuluu['NitroTabTitleApexExperimentSub'] = michal;
    return entity;
})();