// app/modules/premium/experiments/MemberHubGiftingExperiment.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    golfie = argBar;
    zuuluu = argFre;
    option = argPlu;
    entity = global;
    oscard = entity.Object;
    report = oscard.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscard)(zuuluu, entity, tangon);
    oscard = 0;
    tangon = option[oscard];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    yankee = tangon.CommonTriggerPoints;
    report = {};
    report['Control'] = oscard;
    tangon = 'Control';
    report[oscard] = tangon;
    tangon = 1;
    report['Variant1'] = tangon;
    oscard = 'Variant1';
    report[tangon] = oscard;
    oscard = 2;
    report['Variant2'] = oscard;
    verify = 'Variant2';
    report[oscard] = verify;
    tangon = option[tangon];
    offset = golfie.bind(entity)(tangon);
    verify = offset.createExperiment;
    tangon = {'kind': 'user', 'id': '2025-04_member_hub_gifting', 'label': 'Member Hub Gifting'};
    romeon = {};
    foxtra = report.Control;
    romeon['cohort'] = foxtra;
    tangon['defaultConfig'] = romeon;
    yankee = yankee.CONNECTION_OPEN;
    tangon['commonTriggerPoint'] = yankee;
    romeon = {'id': 0, 'label': 'Users see existing member hub gifting screen'};
    yankee = {};
    foxtra = report.Control;
    yankee['cohort'] = foxtra;
    romeon['config'] = yankee;
    yankee = new Array(3);
    yankee[0] = romeon;
    romeon = {'id': 1, 'label': 'Users see variant 1 of member hub gifting screen and coachmark'};
    foxtra = {};
    backup = report.Variant1;
    foxtra['cohort'] = backup;
    romeon['config'] = foxtra;
    yankee[1] = romeon;
    romeon = {'id': 2, 'label': 'Users see variant 2 of member hub gifting screen'};
    foxtra = {};
    backup = report.Variant2;
    foxtra['cohort'] = backup;
    romeon['config'] = foxtra;
    yankee[2] = romeon;
    tangon['treatments'] = yankee;
    tangon = verify.bind(offset)(tangon);
    var _closure1_slot0 = tangon;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/premium/experiments/MemberHubGiftingExperiment.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['MemberHubGiftingExperimentCohort'] = report;
    zuuluu['MemberHubGiftingExperiment'] = tangon;
    michal = function(argFoo) { // Original name: useMemberHubGiftingExperiment
        tangon = _closure1_slot0;
        zuuluu = tangon.useExperiment;
        michal = {};
        entity = argFoo;
        michal['location'] = entity;
        entity = {};
        report = false;
        entity['autoTrackExposure'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        entity = entity.cohort;
        return entity;
    };
    zuuluu['useMemberHubGiftingExperiment'] = michal;
    return entity;
})();