// app/modules/premium/experiments/PremiumBrandRefreshGA.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var6 = require;
    var3 = exports;
    var7 = dependencyMap;
    var1 = global;
    var8 = var1.Object;
    var5 = var8.defineProperty;
    var4 = {};
    var12 = true;
    var4['value'] = var12;
    var1 = '__esModule';
    var1 = var5.bind(var8)(var3, var1, var4);
    var1 = 0;
    var4 = var7[var1];
    var1 = undefined;
    var4 = var6.bind(var1)(var4);
    var9 = var4.CommonTriggerPoints;
    var4 = 1;
    var4 = var7[var4];
    var8 = var6.bind(var1)(var4);
    var5 = var8.createExperiment;
    var4 = {'kind': 'user', 'id': '2025-09_premium_brand_refresh_ga', 'label': 'Premium Brand Refresh GA'};
    var10 = {};
    var11 = false;
    var10['enabled'] = var11;
    var4['defaultConfig'] = var10;
    var9 = var9.CONNECTION_OPEN;
    var4['commonTriggerPoint'] = var9;
    var10 = {'id': 0, 'label': 'User sees control'};
    var9 = {};
    var9['enabled'] = var11;
    var10['config'] = var9;
    var9 = new Array(2);
    var9[0] = var10;
    var10 = {'id': 1, 'label': 'User sees premium brand refresh'};
    var11 = {};
    var11['enabled'] = var12;
    var10['config'] = var11;
    var9[1] = var10;
    var4['treatments'] = var9;
    var4 = var5.bind(var8)(var4);
    var _closure1_slot0 = var4;
    var5 = 2;
    var5 = var7[var5];
    var7 = var6.bind(var1)(var5);
    var6 = var7.fileFinishedImporting;
    var5 = 'modules/premium/experiments/PremiumBrandRefreshGA.tsx';
    var5 = var6.bind(var7)(var5);
    var5 = function useEnablePremiumBrandRefresh(arg1) {
        var1 = arg1;
        var1 = var1.location;
        var4 = _closure1_slot0;
        var3 = var4.useExperiment;
        var2 = {};
        var2['location'] = var1;
        var1 = {};
        var5 = true;
        var1['autoTrackExposure'] = var5;
        var1 = var3.bind(var4)(var2, var1);
        var1 = var1.enabled;
        return var1;
    };
    var3['default'] = var5;
    var3['PremiumBrandRefreshGA'] = var4;
    var2 = function isPremiumBrandRefreshEnabled(arg1) {
        var1 = arg1;
        var4 = var1.location;
        var3 = _closure1_slot0;
        var2 = var3.getCurrentConfig;
        var1 = {};
        var1['location'] = var4;
        var1 = var2.bind(var3)(var1);
        var1 = var1.enabled;
        return var1;
    };
    var3['isPremiumBrandRefreshEnabled'] = var2;
    return var1;
})();