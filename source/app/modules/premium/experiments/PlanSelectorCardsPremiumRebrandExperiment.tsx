// app/modules/premium/experiments/PlanSelectorCardsPremiumRebrandExperiment.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    romeon = true;
    michal['value'] = romeon;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = golfie[entity];
    entity = undefined;
    michal = oscard.bind(entity)(michal);
    verify = michal.CommonTriggerPoints;
    michal = 1;
    michal = golfie[michal];
    option = oscard.bind(entity)(michal);
    report = option.createExperiment;
    michal = {'kind': 'user', 'id': '2025-06_plan_selector_cards_nitro_rebrand_experiment', 'label': 'Plan Selector Cards Nitro Rebrand Experiment'};
    offset = {};
    yankee = false;
    offset['enabled'] = yankee;
    michal['defaultConfig'] = offset;
    verify = verify.CONNECTION_OPEN;
    michal['commonTriggerPoint'] = verify;
    offset = {'id': 0, 'label': 'User sees control plan selector cards'};
    verify = {};
    verify['enabled'] = yankee;
    offset['config'] = verify;
    verify = new Array(2);
    verify[0] = offset;
    offset = {'id': 1, 'label': 'User sees nitro rebrand plan selector cards'};
    yankee = {};
    yankee['enabled'] = romeon;
    offset['config'] = yankee;
    verify[1] = offset;
    michal['treatments'] = verify;
    michal = report.bind(option)(michal);
    var _closure1_slot0 = michal;
    report = 2;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/premium/experiments/PlanSelectorCardsPremiumRebrandExperiment.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: useEnablePlanSelectorCardsPremiumRebrandDesign
        entity = argFoo;
        entity = entity.location;
        tangon = _closure1_slot0;
        zuuluu = tangon.useExperiment;
        michal = {};
        michal['location'] = entity;
        entity = {};
        report = true;
        entity['autoTrackExposure'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        entity = entity.enabled;
        return entity;
    };
    zuuluu['default'] = tangon;
    zuuluu['PlanSelectorCardsPremiumRebrandExperiment'] = michal;
    return entity;
})();