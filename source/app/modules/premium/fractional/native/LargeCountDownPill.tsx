// app/modules/premium/fractional/native/LargeCountDownPill.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    golfie = tangon.TouchableOpacity;
    var _closure1_slot3 = golfie;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    tangon = {'flexDirection': 'row', 'justifyContent': 'center', 'alignItems': 'center', 'borderRadius': null, 'backgroundColor': 'rgba(255, 255, 255, 0.1)', 'alignSelf': 'center', 'paddingHorizontal': 16, 'marginBottom': 10};
    yankee = 3;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    tangon['borderRadius'] = offset;
    golfie['largeCountdownPill'] = tangon;
    offset = {'paddingVertical': 8, 'color': null, 'fontSize': 14, 'lineHeight': 16, 'marginRight': 8};
    tangon = 8;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.STATUS_IDLE;
    offset['color'] = yankee;
    golfie['largeCountdownPillText'] = offset;
    offset = {'width': 16, 'height': 16};
    golfie['iconStyle'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/fractional/native/LargeCountDownPill.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: LargeCountDownPill
        entity = argFoo;
        kiloes = entity.countdownText;
        entity = _closure1_slot7;
        tangon = undefined;
        romeon = entity.bind(tangon)();
        var _closure2_slot0 = romeon;
        zuuluu = _closure1_slot5;
        michal = _closure1_slot3;
        entity = {};
        report = function() { // Original name: onPress
            oscard = _closure1_slot1;
            golfie = _closure1_slot2;
            entity = 4;
            michal = golfie[entity];
            entity = undefined;
            tangon = oscard.bind(entity)(michal);
            zuuluu = tangon.open;
            michal = {};
            option = 'LARGE_COUNTDOWN_PILL_TOAST';
            michal['key'] = option;
            offset = _closure1_slot0;
            report = 5;
            option = golfie[report];
            option = offset.bind(entity)(option);
            verify = option.intl;
            option = verify.string;
            report = golfie[report];
            report = offset.bind(entity)(report);
            report = report.t;
            report = report.Mv4E/P;
            report = option.bind(verify)(report);
            michal['content'] = report;
            report = function() { // Original name: icon
                tangon = _closure1_slot5;
                michal = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 6;
                entity = golfie[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.CircleInformationIcon;
                entity = {};
                oscard = _closure2_slot0;
                oscard = oscard.iconStyle;
                entity['style'] = oscard;
                oscard = _closure1_slot1;
                report = 3;
                report = golfie[report];
                report = oscard.bind(zuuluu)(report);
                report = report.colors;
                report = report.STATUS_WARNING;
                entity['color'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            michal['icon'] = report;
            report = 3;
            report = golfie[report];
            report = oscard.bind(entity)(report);
            report = report.colors;
            report = report.STATUS_WARNING;
            michal['iconColor'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity['onPress'] = report;
        golfie = _closure1_slot6;
        oscard = _closure1_slot4;
        report = {};
        option = romeon.largeCountdownPill;
        report['style'] = option;
        offset = _closure1_slot0;
        foxtra = _closure1_slot2;
        option = 7;
        option = foxtra[option];
        option = offset.bind(tangon)(option);
        verify = option.Text;
        option = {};
        backup = 'text-xs/bold';
        option['variant'] = backup;
        backup = romeon.largeCountdownPillText;
        option['style'] = backup;
        backup = kiloes.toUpperCase;
        backup = backup.bind(kiloes)();
        option['children'] = backup;
        verify = zuuluu.bind(tangon)(verify, option);
        option = new Array(2);
        option[0] = verify;
        verify = 6;
        verify = foxtra[verify];
        verify = offset.bind(tangon)(verify);
        offset = verify.CircleInformationIcon;
        verify = {};
        romeon = romeon.iconStyle;
        verify['style'] = romeon;
        romeon = _closure1_slot1;
        yankee = 3;
        yankee = foxtra[yankee];
        yankee = romeon.bind(tangon)(yankee);
        yankee = yankee.colors;
        yankee = yankee.STATUS_IDLE;
        verify['color'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[1] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();