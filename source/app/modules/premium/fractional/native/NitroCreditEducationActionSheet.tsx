// app/modules/premium/fractional/native/NitroCreditEducationActionSheet.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.HelpdeskArticles;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'marginTop': 32, 'marginHorizontal': 30};
    tango['container'] = verify;
    verify = {'flexDirection': 'row', 'backgroundColor': null, 'justifyContent': 'center', 'borderRadius': null, 'marginBottom': 12};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_ACCENT;
    verify['backgroundColor'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.lg;
    verify['borderRadius'] = offset;
    tango['aboutContainer'] = verify;
    verify = {};
    offset = 16;
    verify['margin'] = offset;
    tango['warningIcon'] = verify;
    verify = {'justifyContent': 'center', 'flex': 1, 'marginRight': 30};
    tango['aboutTextContainer'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 24};
    tango['helpdeskText'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/premium/fractional/native/NitroCreditEducationActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: NitroCreditEducationActionSheet
        entity = argFoo;
        sizing = entity.aboutText;
        entity = _closure1_slot7;
        tango = undefined;
        yankee = entity.bind(tango)();
        zulu = _closure1_slot5;
        romeo = _closure1_slot0;
        result = _closure1_slot2;
        entity = 5;
        entity = result[entity];
        entity = romeo.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        golf = _closure1_slot6;
        oscar = _closure1_slot3;
        report = {};
        options = yankee.container;
        report['style'] = options;
        options = {};
        verify = yankee.aboutContainer;
        options['style'] = verify;
        verify = 6;
        verify = result[verify];
        verify = romeo.bind(tango)(verify);
        offset = verify.CircleWarningIcon;
        verify = {};
        foxtrot = 'lg';
        verify['size'] = foxtrot;
        foxtrot = yankee.warningIcon;
        verify['style'] = foxtrot;
        offset = zulu.bind(tango)(offset, verify);
        verify = new Array(2);
        verify[0] = offset;
        offset = {};
        foxtrot = yankee.aboutTextContainer;
        offset['style'] = foxtrot;
        foxtrot = 7;
        foxtrot = result[foxtrot];
        foxtrot = romeo.bind(tango)(foxtrot);
        backup = foxtrot.Text;
        foxtrot = {'variant': 'text-sm/medium', 'color': 'always-white'};
        foxtrot['children'] = sizing;
        foxtrot = zulu.bind(tango)(backup, foxtrot);
        offset['children'] = foxtrot;
        offset = zulu.bind(tango)(oscar, offset);
        verify[1] = offset;
        options['children'] = verify;
        verify = golf.bind(tango)(oscar, options);
        options = new Array(2);
        options[0] = verify;
        verify = 8;
        verify = result[verify];
        verify = romeo.bind(tango)(verify);
        offset = verify.TextWithIOSLinkWorkaround;
        verify = {'variant': 'text-sm/medium', 'color': 'always-white'};
        yankee = yankee.helpdeskText;
        verify['style'] = yankee;
        yankee = 9;
        foxtrot = result[yankee];
        foxtrot = romeo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.format;
        yankee = result[yankee];
        yankee = romeo.bind(tango)(yankee);
        yankee = yankee.t;
        romeo = yankee.bg3jBg;
        yankee = {};
        output = _closure1_slot1;
        sizing = 10;
        sizing = result[sizing];
        output = output.bind(tango)(sizing);
        sizing = output.getArticleURL;
        kilo = _closure1_slot4;
        kilo = kilo.FRACTIONAL_PREMIUM_ABOUT;
        kilo = sizing.bind(output)(kilo);
        yankee['helpCenterLink'] = kilo;
        yankee = foxtrot.bind(backup)(romeo, yankee);
        verify['children'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[1] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();