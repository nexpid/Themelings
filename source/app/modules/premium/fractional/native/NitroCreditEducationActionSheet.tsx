// app/modules/premium/fractional/native/NitroCreditEducationActionSheet.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'marginTop': 32, 'marginHorizontal': 30};
    tangon['container'] = verify;
    verify = {'flexDirection': 'row', 'backgroundColor': null, 'justifyContent': 'center', 'borderRadius': null, 'marginBottom': 12};
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_ACCENT;
    verify['backgroundColor'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.lg;
    verify['borderRadius'] = offset;
    tangon['aboutContainer'] = verify;
    verify = {};
    offset = 16;
    verify['margin'] = offset;
    tangon['warningIcon'] = verify;
    verify = {'justifyContent': 'center', 'flex': 1, 'marginRight': 30};
    tangon['aboutTextContainer'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 24};
    tangon['helpdeskText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/fractional/native/NitroCreditEducationActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: NitroCreditEducationActionSheet
        entity = argFoo;
        sizing = entity.aboutText;
        entity = _closure1_slot7;
        tangon = undefined;
        yankee = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        romeon = _closure1_slot0;
        result = _closure1_slot2;
        entity = 5;
        entity = result[entity];
        entity = romeon.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        golfie = _closure1_slot6;
        oscard = _closure1_slot3;
        report = {};
        option = yankee.container;
        report['style'] = option;
        option = {};
        verify = yankee.aboutContainer;
        option['style'] = verify;
        verify = 6;
        verify = result[verify];
        verify = romeon.bind(tangon)(verify);
        offset = verify.CircleWarningIcon;
        verify = {};
        foxtra = 'lg';
        verify['size'] = foxtra;
        foxtra = yankee.warningIcon;
        verify['style'] = foxtra;
        offset = zuuluu.bind(tangon)(offset, verify);
        verify = new Array(2);
        verify[0] = offset;
        offset = {};
        foxtra = yankee.aboutTextContainer;
        offset['style'] = foxtra;
        foxtra = 7;
        foxtra = result[foxtra];
        foxtra = romeon.bind(tangon)(foxtra);
        backup = foxtra.Text;
        foxtra = {'variant': 'text-sm/medium', 'color': 'always-white'};
        foxtra['children'] = sizing;
        foxtra = zuuluu.bind(tangon)(backup, foxtra);
        offset['children'] = foxtra;
        offset = zuuluu.bind(tangon)(oscard, offset);
        verify[1] = offset;
        option['children'] = verify;
        verify = golfie.bind(tangon)(oscard, option);
        option = new Array(2);
        option[0] = verify;
        verify = 8;
        verify = result[verify];
        verify = romeon.bind(tangon)(verify);
        offset = verify.TextWithIOSLinkWorkaround;
        verify = {'variant': 'text-sm/medium', 'color': 'always-white'};
        yankee = yankee.helpdeskText;
        verify['style'] = yankee;
        yankee = 9;
        foxtra = result[yankee];
        foxtra = romeon.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.format;
        yankee = result[yankee];
        yankee = romeon.bind(tangon)(yankee);
        yankee = yankee.t;
        romeon = yankee.bg3jBg;
        yankee = {};
        output = _closure1_slot1;
        sizing = 10;
        sizing = result[sizing];
        output = output.bind(tangon)(sizing);
        sizing = output.getArticleURL;
        kiloes = _closure1_slot4;
        kiloes = kiloes.FRACTIONAL_PREMIUM_ABOUT;
        kiloes = sizing.bind(output)(kiloes);
        yankee['helpCenterLink'] = kiloes;
        yankee = foxtra.bind(backup)(romeon, yankee);
        verify['children'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[1] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();