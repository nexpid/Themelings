// app/modules/premium/referral_program/native/ReferralProgramShareConfirmationActionSheet.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: SharedUser
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            option = entity.user;
            zuuluu = entity.trialCreationResult;
            oscard = entity.style;
            entity = _closure1_slot8;
            tangon = undefined;
            romeon = entity.bind(tangon)();
            michal = _closure1_slot1;
            report = _closure1_slot2;
            entity = 6;
            entity = report[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.getName;
            foxtra = entity.bind(michal)(option);
            entity = option.username;
            entity = entity !== foxtra;
            if(!entity) { _fun00002_ip = 111; continue _fun00001 }
 75:
            report = _closure1_slot0;
            golfie = _closure1_slot2;
            michal = 7;
            michal = golfie[michal];
            michal = report.bind(tangon)(michal);
            michal = michal.CreateReferralStatus;
            michal = michal.SUCCESS;
            entity = zuuluu === michal;
 111:
            report = _closure1_slot0;
            golfie = _closure1_slot2;
            michal = 7;
            michal = golfie[michal];
            michal = report.bind(tangon)(michal);
            michal = michal.CreateReferralStatus;
            michal = michal.FAIL;
            kiloes = zuuluu === michal;
            if(entity) { _fun00002_ip = 270; continue _fun00001 }
 150:
            offset = null;
            if(!kiloes) { _fun00002_ip = 328; continue _fun00001 }
 158:
            zuuluu = _closure1_slot6;
            golfie = _closure1_slot0;
            sizing = _closure1_slot2;
            entity = 8;
            entity = sizing[entity];
            entity = golfie.bind(tangon)(entity);
            michal = entity.Text;
            entity = {'variant': 'text-md/medium', 'color': 'text-muted'};
            report = 9;
            yankee = sizing[report];
            yankee = golfie.bind(tangon)(yankee);
            backup = yankee.intl;
            yankee = backup.format;
            report = sizing[report];
            report = golfie.bind(tangon)(report);
            report = report.t;
            golfie = report.RO3T4O;
            report = {};
            report['userName'] = foxtra;
            report = yankee.bind(backup)(golfie, report);
            entity['children'] = report;
            offset = zuuluu.bind(tangon)(michal, entity);
            _fun00002_ip = 328; continue _fun00001;
 270:
            zuuluu = _closure1_slot6;
            michal = _closure1_slot0;
            report = _closure1_slot2;
            entity = 8;
            entity = report[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.Text;
            entity = {'variant': 'text-md/medium', 'color': 'text-secondary'};
            report = option.username;
            entity['children'] = report;
            offset = zuuluu.bind(tangon)(michal, entity);
 328:
            zuuluu = _closure1_slot7;
            michal = _closure1_slot3;
            entity = {};
            golfie = romeon.sharedUserInner;
            report = new Array(2);
            report[0] = golfie;
            report[1] = oscard;
            entity['style'] = report;
            golfie = _closure1_slot6;
            oscard = _closure1_slot1;
            backup = _closure1_slot2;
            report = 10;
            report = backup[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            yankee = romeon.avatarContainer;
            report['style'] = yankee;
            yankee = _closure1_slot0;
            sizing = 11;
            sizing = backup[sizing];
            sizing = yankee.bind(tangon)(sizing);
            sizing = sizing.AvatarSizes;
            sizing = sizing.LARGE;
            report['size'] = sizing;
            report['user'] = option;
            report['guildId'] = tangon;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot7;
            golfie = _closure1_slot3;
            oscard = {};
            romeon = romeon.usernameContainer;
            oscard['style'] = romeon;
            romeon = _closure1_slot6;
            verify = 8;
            verify = backup[verify];
            verify = yankee.bind(tangon)(verify);
            yankee = verify.Text;
            verify = {};
            backup = 'text-md/medium';
            verify['variant'] = backup;
            backup = 'text-link';
            if(!kiloes) { _fun00002_ip = 516; continue _fun00001 }
 510:
            backup = 'text-muted';
 516:
            verify['color'] = backup;
            verify['children'] = foxtra;
            yankee = romeon.bind(tangon)(yankee, verify);
            verify = new Array(2);
            verify[0] = yankee;
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot9 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.REFERRAL_TRIAL_OFFER_EXPIRATION_DAYS;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot5 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = offset;
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingHorizontal'] = romeon;
    tangon['content'] = verify;
    verify = {};
    romeon = 148;
    verify['height'] = romeon;
    tangon['headerAsset'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginTop'] = romeon;
    romeon = 'center';
    verify['alignSelf'] = romeon;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['paddingHorizontal'] = foxtra;
    tangon['header'] = verify;
    verify = {};
    verify['textAlign'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['paddingHorizontal'] = romeon;
    tangon['subheader'] = verify;
    verify = {};
    romeon = 'row';
    verify['flexDirection'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['padding'] = romeon;
    tangon['sharedUserInner'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_32;
    verify['marginHorizontal'] = romeon;
    tangon['sharedUsersContainer'] = verify;
    verify = {'alignSelf': 'center', 'justifyContent': 'center'};
    tangon['avatarContainer'] = verify;
    verify = {'flex': 1, 'alignSelf': 'center', 'justifyContent': 'center'};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['marginStart'] = offset;
    tangon['usernameContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 26;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/referral_program/native/ReferralProgramShareConfirmationActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ReferralProgramShareConfirmationActionSheet
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            kiloes = entity.selectedUsers;
            report = entity.trialCreationResult;
            var _closure2_slot0 = report;
            entity = _closure1_slot8;
            tangon = undefined;
            backup = entity.bind(tangon)();
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 12;
            entity = zuuluu[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            yankee = entity.bottom;
            foxtra = global;
            zuuluu = foxtra.Array;
            michal = zuuluu.from;
            entity = report.values;
            entity = entity.bind(report)();
            zuuluu = michal.bind(zuuluu)(entity);
            michal = zuuluu.filter;
            entity = function(argFoo) {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 7;
                michal = michal[entity];
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                entity = entity.CreateReferralStatus;
                michal = entity.SUCCESS;
                entity = argFoo;
                entity = entity === michal;
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            oscard = entity.length;
            entity = 0;
            if(!(entity !== oscard)) { _fun00004_ip = 185; continue _fun00003 }
 118:
            michal = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 9;
            zuuluu = golfie[entity];
            zuuluu = michal.bind(tangon)(zuuluu);
            report = zuuluu.intl;
            zuuluu = report.format;
            entity = golfie[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.t;
            michal = entity.iWtOfH;
            entity = {};
            entity['numReferrals'] = oscard;
            output = zuuluu.bind(report)(michal, entity);
            _fun00004_ip = 242; continue _fun00003;
 185:
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 9;
            michal = oscard[entity];
            michal = report.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.7VBEub;
            output = michal.bind(zuuluu)(entity);
 242:
            echoed = _closure1_slot1;
            offset = _closure1_slot2;
            entity = 13;
            entity = offset[entity];
            entity = echoed.bind(tangon)(entity);
            zuuluu = entity.bind(tangon)();
            oscard = _closure1_slot0;
            entity = 14;
            entity = offset[entity];
            michal = oscard.bind(tangon)(entity);
            entity = michal.isThemeDark;
            result = entity.bind(michal)(zuuluu);
            zuuluu = _closure1_slot6;
            entity = 15;
            entity = offset[entity];
            entity = oscard.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {'scrollable': true, 'startExpanded': true};
            report = backup.content;
            entity['contentStyles'] = report;
            option = _closure1_slot6;
            report = 16;
            report = offset[report];
            report = oscard.bind(tangon)(report);
            golfie = report.BottomSheetTitleHeader;
            report = {};
            sizing = null;
            report['title'] = sizing;
            source = _closure1_slot6;
            sizing = 17;
            sizing = offset[sizing];
            sizing = oscard.bind(tangon)(sizing);
            update = sizing.ActionSheetCloseButton;
            sizing = {};
            ctrled = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 18;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            sizing['onPress'] = ctrled;
            sizing = source.bind(tangon)(update, sizing);
            report['leading'] = sizing;
            report = option.bind(tangon)(golfie, report);
            entity['header'] = report;
            golfie = _closure1_slot7;
            report = 19;
            report = offset[report];
            report = oscard.bind(tangon)(report);
            oscard = report.Stack;
            report = {};
            option = {};
            option['paddingBottom'] = yankee;
            report['style'] = option;
            yankee = _closure1_slot6;
            option = 20;
            option = offset[option];
            offset = echoed.bind(tangon)(option);
            option = {};
            sizing = backup.headerAsset;
            option['style'] = sizing;
            sizing = 'contain';
            option['resizeMode'] = sizing;
            sizing = {};
            source = _closure1_slot2;
            if(result) { _fun00004_ip = 515; continue _fun00003 }
 506:
            result = 22;
            result = source[result];
            _fun00004_ip = 522; continue _fun00003;
 515:
            update = 21;
            result = source[update];
 522:
            result = echoed.bind(tangon)(result);
            sizing['uri'] = result;
            option['source'] = sizing;
            offset = yankee.bind(tangon)(offset, option);
            option = new Array(5);
            option[0] = offset;
            sizing = _closure1_slot6;
            result = _closure1_slot0;
            echoed = _closure1_slot2;
            offset = 8;
            offset = echoed[offset];
            offset = result.bind(tangon)(offset);
            yankee = offset.Text;
            offset = {'variant': 'heading-lg/bold', 'color': 'header-primary'};
            update = backup.header;
            offset['style'] = update;
            offset['children'] = output;
            offset = sizing.bind(tangon)(yankee, offset);
            option[1] = offset;
            sizing = _closure1_slot6;
            offset = 23;
            offset = echoed[offset];
            offset = result.bind(tangon)(offset);
            yankee = offset.TextWithIOSLinkWorkaround;
            offset = {'variant': 'text-md/medium', 'color': 'header-secondary'};
            output = backup.subheader;
            offset['style'] = output;
            output = 9;
            update = echoed[output];
            update = result.bind(tangon)(update);
            ctrled = update.intl;
            source = ctrled.format;
            output = echoed[output];
            output = result.bind(tangon)(output);
            output = output.t;
            update = output.CZaMHh;
            output = {};
            result = _closure1_slot4;
            output['days'] = result;
            result = _closure1_slot1;
            vacuum = 24;
            vacuum = echoed[vacuum];
            config = result.bind(tangon)(vacuum);
            sequen = config.getArticleURL;
            vacuum = _closure1_slot5;
            vacuum = vacuum.REFERRAL_PROGRAM;
            vacuum = sequen.bind(config)(vacuum);
            output['helpdeskArticle'] = vacuum;
            output = source.bind(ctrled)(update, output);
            offset['children'] = output;
            offset = sizing.bind(tangon)(yankee, offset);
            option[2] = offset;
            sizing = _closure1_slot6;
            offset = 25;
            offset = echoed[offset];
            yankee = result.bind(tangon)(offset);
            offset = {};
            output = 5;
            output = echoed[output];
            output = result.bind(tangon)(output);
            output = output.spacing;
            output = output.PX_32;
            offset['size'] = output;
            offset = sizing.bind(tangon)(yankee, offset);
            option[3] = offset;
            yankee = _closure1_slot6;
            offset = _closure1_slot3;
            verify = {};
            backup = backup.sharedUsersContainer;
            verify['style'] = backup;
            backup = foxtra.Array;
            foxtra = backup.from;
            backup = foxtra.bind(backup)(kiloes);
            foxtra = backup.map;
            romeon = function(argFoo) {
                entity = argFoo;
                report = _closure1_slot6;
                tangon = _closure1_slot9;
                zuuluu = {};
                zuuluu['user'] = entity;
                golfie = _closure2_slot0;
                oscard = golfie.get;
                michal = entity.id;
                michal = oscard.bind(golfie)(michal);
                zuuluu['trialCreationResult'] = michal;
                michal = entity.id;
                entity = undefined;
                entity = report.bind(entity)(tangon, zuuluu, michal);
                return entity;
            };
            romeon = foxtra.bind(backup)(romeon);
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[4] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();