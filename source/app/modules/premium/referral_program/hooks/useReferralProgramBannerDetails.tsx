// app/modules/premium/referral_program/hooks/useReferralProgramBannerDetails.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot2 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/referral_program/hooks/useReferralProgramBannerDetails.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = 3;
    zuuluu['MAX_REFERRALS_SENT'] = tangon;
    michal = function() { // Original name: useReferralProgramBannerDetails
        report = _closure1_slot0;
        golfie = _closure1_slot1;
        zuuluu = 3;
        oscard = golfie[zuuluu];
        tangon = undefined;
        yankee = report.bind(tangon)(oscard);
        offset = yankee.useStateFromStoresArray;
        oscard = _closure1_slot4;
        verify = new Array(1);
        verify[0] = oscard;
        option = function() {
            michal = _closure1_slot4;
            entity = michal.getSentUserIds;
            entity = entity.bind(michal)();
            return entity;
        };
        option = offset.bind(yankee)(verify, option);
        var _closure2_slot0 = option;
        verify = golfie[zuuluu];
        romeon = report.bind(tangon)(verify);
        yankee = romeon.useStateFromStoresArray;
        verify = _closure1_slot3;
        offset = new Array(1);
        offset[0] = verify;
        verify = function() {
            tangon = _closure2_slot0;
            zuuluu = tangon.map;
            michal = function(argFoo) {
                zuuluu = _closure1_slot3;
                michal = zuuluu.getUser;
                entity = argFoo;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.filter;
            entity = function(argFoo) {
                michal = null;
                entity = argFoo;
                entity = michal != entity;
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        verify = yankee.bind(romeon)(offset, verify);
        romeon = _closure1_slot2;
        yankee = romeon.useEffect;
        offset = new Array(1);
        offset[0] = option;
        entity = function() {
            zuuluu = _closure2_slot0;
            michal = zuuluu.forEach;
            entity = function(argFoo) {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot1;
                entity = 4;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.getUser;
                michal = argFoo;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            entity = undefined;
            return entity;
        };
        entity = yankee.bind(romeon)(entity, offset);
        entity = {};
        entity['referralSentUsers'] = verify;
        option = option.length;
        option = zuuluu === option;
        entity['hasSentAllReferrals'] = option;
        zuuluu = golfie[zuuluu];
        report = report.bind(tangon)(zuuluu);
        tangon = report.useStateFromStores;
        zuuluu = new Array(1);
        zuuluu[0] = oscard;
        michal = function() {
            michal = _closure1_slot4;
            entity = michal.getRefreshAt;
            entity = entity.bind(michal)();
            return entity;
        };
        michal = tangon.bind(report)(zuuluu, michal);
        entity['refreshAt'] = michal;
        return entity;
    };
    zuuluu['useReferralProgramBannerDetails'] = michal;
    return entity;
})();