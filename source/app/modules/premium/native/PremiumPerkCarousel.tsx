// app/modules/premium/native/PremiumPerkCarousel.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'flex';
    verify['display'] = offset;
    tangon['container'] = verify;
    verify = {};
    offset = 24;
    verify['marginLeft'] = offset;
    tangon['title'] = verify;
    verify = {};
    offset = -36;
    verify['marginBottom'] = offset;
    tangon['indicators'] = verify;
    verify = {};
    offset = 16;
    verify['marginTop'] = offset;
    offset = 5;
    yankee = oscard[offset];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.PERK_CARD_SIZES;
    offset = oscard[offset];
    offset = report.bind(entity)(offset);
    offset = offset.PerkCardVariant;
    offset = offset.NARROW;
    offset = yankee[offset];
    yankee = offset.height;
    offset = 8;
    yankee = yankee + offset;
    verify['height'] = yankee;
    tangon['carousel'] = verify;
    verify = {};
    verify['marginLeft'] = offset;
    tangon['carouselCard'] = verify;
    verify = {};
    verify['marginRight'] = offset;
    tangon['lastCarouselCard'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/native/PremiumPerkCarousel.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: PremiumPerkCarousel
        entity = argFoo;
        backup = entity.title;
        offset = entity.perks;
        report = entity.style;
        entity = entity.onItemChange;
        var _closure2_slot0 = entity;
        michal = _closure1_slot8;
        tangon = undefined;
        yankee = michal.bind(tangon)();
        var _closure2_slot1 = yankee;
        oscard = _closure1_slot4;
        zuuluu = oscard.useState;
        michal = 0;
        verify = zuuluu.bind(oscard)(michal);
        option = _closure1_slot3;
        zuuluu = 2;
        zuuluu = option.bind(tangon)(verify, zuuluu);
        verify = zuuluu[michal];
        var _closure2_slot2 = verify;
        michal = 1;
        michal = zuuluu[michal];
        var _closure2_slot3 = michal;
        zuuluu = oscard.useCallback;
        michal = new Array(2);
        michal[0] = verify;
        michal[1] = entity;
        entity = function(argFoo) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zuuluu = argFoo;
                michal = _closure2_slot2;
                if(!(zuuluu !== michal)) { _fun00002_ip = 44; continue _fun00001 }
 14:
                tangon = _closure2_slot3;
                michal = undefined;
                tangon = tangon.bind(michal)(zuuluu);
                report = _closure2_slot0;
                tangon = null;
                if(!(tangon != report)) { _fun00002_ip = 44; continue _fun00001 }
 35:
                entity = _closure2_slot0;
                entity = entity.bind(michal)(zuuluu);
 44:
                entity = undefined;
                return entity;
            }
        };
        oscard = zuuluu.bind(oscard)(entity, michal);
        foxtra = _closure1_slot0;
        romeon = _closure1_slot2;
        entity = 5;
        michal = romeon[entity];
        michal = foxtra.bind(tangon)(michal);
        michal = michal.PERK_CARD_SIZES;
        entity = romeon[entity];
        entity = foxtra.bind(tangon)(entity);
        entity = entity.PerkCardVariant;
        entity = entity.NARROW;
        entity = michal[entity];
        output = entity.width;
        entity = offset.length;
        var _closure2_slot4 = entity;
        zuuluu = _closure1_slot7;
        michal = _closure1_slot5;
        entity = {};
        entity['style'] = report;
        option = _closure1_slot6;
        report = 6;
        report = romeon[report];
        report = foxtra.bind(tangon)(report);
        foxtra = report.Text;
        report = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        sizing = yankee.title;
        report['style'] = sizing;
        report['children'] = backup;
        foxtra = option.bind(tangon)(foxtra, report);
        report = new Array(3);
        report[0] = foxtra;
        golfie = _closure1_slot1;
        foxtra = 7;
        foxtra = romeon[foxtra];
        backup = golfie.bind(tangon)(foxtra);
        foxtra = {};
        sizing = yankee.carousel;
        foxtra['style'] = sizing;
        foxtra['width'] = output;
        foxtra['onPageChange'] = oscard;
        oscard = false;
        foxtra['pageIndictor'] = oscard;
        sizing = {'overScrollMode': 'always', 'snapToInterval': null, 'snapToStart': true, 'snapToAlignment': 'start', 'decelerationRate': 'normal'};
        oscard = 8;
        result = output + oscard;
        output = 0.2;
        output = result + output;
        sizing['snapToInterval'] = output;
        foxtra['scrollViewProps'] = sizing;
        sizing = offset.map;
        kiloes = function(argFoo, argBar) {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                report = argBar;
                entity = _closure2_slot1;
                entity = entity.carouselCard;
                golfie = new Array(2);
                golfie[0] = entity;
                zuuluu = _closure2_slot4;
                entity = 1;
                zuuluu = zuuluu - entity;
                entity = null;
                if(!(zuuluu === report)) { _fun00004_ip = 51; continue _fun00003 }
 41:
                michal = _closure2_slot1;
                entity = michal.lastCarouselCard;
 51:
                golfie[1] = entity;
                tangon = _closure1_slot6;
                michal = _closure1_slot1;
                verify = _closure1_slot2;
                oscard = 5;
                entity = verify[oscard];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                romeon = argFoo;
                foxtra = entity;
                offset = copyDataProperties(foxtra, romeon);
                option = _closure1_slot0;
                oscard = verify[oscard];
                oscard = option.bind(zuuluu)(oscard);
                oscard = oscard.PerkCardVariant;
                option = oscard.NARROW;
                oscard = 'variant';
                entity[oscard] = option;
                oscard = 'style';
                entity[oscard] = golfie;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            }
        };
        kiloes = sizing.bind(offset)(kiloes);
        foxtra['children'] = kiloes;
        foxtra = option.bind(tangon)(backup, foxtra);
        report[1] = foxtra;
        oscard = romeon[oscard];
        golfie = golfie.bind(tangon)(oscard);
        oscard = {};
        yankee = yankee.indicators;
        oscard['containerStyle'] = yankee;
        offset = offset.length;
        oscard['numberOfItems'] = offset;
        oscard['currentIndex'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();