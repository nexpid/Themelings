// app/modules/premium/native/PremiumPerkCarousel.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 'flex';
    verify['display'] = offset;
    tango['container'] = verify;
    verify = {};
    offset = 24;
    verify['marginLeft'] = offset;
    tango['title'] = verify;
    verify = {};
    offset = -36;
    verify['marginBottom'] = offset;
    tango['indicators'] = verify;
    verify = {};
    offset = 16;
    verify['marginTop'] = offset;
    offset = 5;
    yankee = oscar[offset];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.PERK_CARD_SIZES;
    offset = oscar[offset];
    offset = report.bind(entity)(offset);
    offset = offset.PerkCardVariant;
    offset = offset.NARROW;
    offset = yankee[offset];
    yankee = offset.height;
    offset = 8;
    yankee = yankee + offset;
    verify['height'] = yankee;
    tango['carousel'] = verify;
    verify = {};
    verify['marginLeft'] = offset;
    tango['carouselCard'] = verify;
    verify = {};
    verify['marginRight'] = offset;
    tango['lastCarouselCard'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/premium/native/PremiumPerkCarousel.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: PremiumPerkCarousel
        entity = argFoo;
        backup = entity.title;
        offset = entity.perks;
        report = entity.style;
        entity = entity.onItemChange;
        var _closure2_slot0 = entity;
        mike = _closure1_slot8;
        tango = undefined;
        yankee = mike.bind(tango)();
        var _closure2_slot1 = yankee;
        oscar = _closure1_slot4;
        zulu = oscar.useState;
        mike = 0;
        verify = zulu.bind(oscar)(mike);
        options = _closure1_slot3;
        zulu = 2;
        zulu = options.bind(tango)(verify, zulu);
        verify = zulu[mike];
        var _closure2_slot2 = verify;
        mike = 1;
        mike = zulu[mike];
        var _closure2_slot3 = mike;
        zulu = oscar.useCallback;
        mike = new Array(2);
        mike[0] = verify;
        mike[1] = entity;
        entity = function(argFoo) {
            _fun105058: for(var _fun105058_ip = 0; ; ) switch(_fun105058_ip) {
 0:
                zulu = argFoo;
                mike = _closure2_slot2;
                if(!(zulu !== mike)) { _fun105058_ip = 44; continue _fun105058 }
 14:
                tango = _closure2_slot3;
                mike = undefined;
                tango = tango.bind(mike)(zulu);
                report = _closure2_slot0;
                tango = null;
                if(!(tango != report)) { _fun105058_ip = 44; continue _fun105058 }
 35:
                entity = _closure2_slot0;
                entity = entity.bind(mike)(zulu);
 44:
                entity = undefined;
                return entity;
            }
        };
        oscar = zulu.bind(oscar)(entity, mike);
        foxtrot = _closure1_slot0;
        romeo = _closure1_slot2;
        entity = 5;
        mike = romeo[entity];
        mike = foxtrot.bind(tango)(mike);
        mike = mike.PERK_CARD_SIZES;
        entity = romeo[entity];
        entity = foxtrot.bind(tango)(entity);
        entity = entity.PerkCardVariant;
        entity = entity.NARROW;
        entity = mike[entity];
        output = entity.width;
        entity = offset.length;
        var _closure2_slot4 = entity;
        zulu = _closure1_slot7;
        mike = _closure1_slot5;
        entity = {};
        entity['style'] = report;
        options = _closure1_slot6;
        report = 6;
        report = romeo[report];
        report = foxtrot.bind(tango)(report);
        foxtrot = report.Text;
        report = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        sizing = yankee.title;
        report['style'] = sizing;
        report['children'] = backup;
        foxtrot = options.bind(tango)(foxtrot, report);
        report = new Array(3);
        report[0] = foxtrot;
        golf = _closure1_slot1;
        foxtrot = 7;
        foxtrot = romeo[foxtrot];
        backup = golf.bind(tango)(foxtrot);
        foxtrot = {};
        sizing = yankee.carousel;
        foxtrot['style'] = sizing;
        foxtrot['width'] = output;
        foxtrot['onPageChange'] = oscar;
        oscar = false;
        foxtrot['pageIndictor'] = oscar;
        sizing = {'overScrollMode': 'always', 'snapToInterval': null, 'snapToStart': true, 'snapToAlignment': 'start', 'decelerationRate': 'normal'};
        oscar = 8;
        result = output + oscar;
        output = 0.2;
        output = result + output;
        sizing['snapToInterval'] = output;
        foxtrot['scrollViewProps'] = sizing;
        sizing = offset.map;
        kilo = function(argFoo, argBar) {
            _fun105059: for(var _fun105059_ip = 0; ; ) switch(_fun105059_ip) {
 0:
                report = argBar;
                entity = _closure2_slot1;
                entity = entity.carouselCard;
                golf = new Array(2);
                golf[0] = entity;
                zulu = _closure2_slot4;
                entity = 1;
                zulu = zulu - entity;
                entity = null;
                if(!(zulu === report)) { _fun105059_ip = 51; continue _fun105059 }
 41:
                mike = _closure2_slot1;
                entity = mike.lastCarouselCard;
 51:
                golf[1] = entity;
                tango = _closure1_slot6;
                mike = _closure1_slot1;
                verify = _closure1_slot2;
                oscar = 5;
                entity = verify[oscar];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                romeo = argFoo;
                foxtrot = entity;
                offset = copyDataProperties(foxtrot, romeo);
                options = _closure1_slot0;
                oscar = verify[oscar];
                oscar = options.bind(zulu)(oscar);
                oscar = oscar.PerkCardVariant;
                options = oscar.NARROW;
                oscar = 'variant';
                entity[oscar] = options;
                oscar = 'style';
                entity[oscar] = golf;
                entity = tango.bind(zulu)(mike, entity, report);
                return entity;
            }
        };
        kilo = sizing.bind(offset)(kilo);
        foxtrot['children'] = kilo;
        foxtrot = options.bind(tango)(backup, foxtrot);
        report[1] = foxtrot;
        oscar = romeo[oscar];
        golf = golf.bind(tango)(oscar);
        oscar = {};
        yankee = yankee.indicators;
        oscar['containerStyle'] = yankee;
        offset = offset.length;
        oscar['numberOfItems'] = offset;
        oscar['currentIndex'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();