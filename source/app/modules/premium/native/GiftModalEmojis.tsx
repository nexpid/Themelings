// app/modules/premium/native/GiftModalEmojis.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot2 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    option = tangon.StyleSheet;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    golfie = [100, 0];
    tangon = -40;
    golfie[2] = tangon;
    tangon = new Array(10);
    tangon[0] = golfie;
    golfie = [120, 40];
    verify = -10;
    golfie[2] = verify;
    tangon[1] = golfie;
    golfie = [100, 80, 10];
    tangon[2] = golfie;
    golfie = [180, 20, 20];
    tangon[3] = golfie;
    golfie = [140, 95, 15];
    tangon[4] = golfie;
    golfie = [250, 0, 0];
    tangon[5] = golfie;
    golfie = [250, 80];
    verify = -20;
    golfie[2] = verify;
    tangon[6] = golfie;
    golfie = [400, 90, 10];
    tangon[7] = golfie;
    golfie = [400, 20];
    golfie[2] = verify;
    tangon[8] = golfie;
    golfie = [410, 0, 40];
    tangon[9] = golfie;
    var _closure1_slot5 = tangon;
    golfie = option.create;
    tangon = {};
    verify = {'alignItems': 'center', 'justifyContent': 'center', 'height': 250, 'width': '100%', 'position': 'absolute', 'zIndex': 1, 'paddingBottom': 210};
    tangon['emojisContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/native/GiftModalEmojis.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            report = michal.emojiName;
            var _closure2_slot0 = report;
            michal = michal.randomizeSizing;
            tangon = undefined;
            if(!(michal === tangon)) { _fun00002_ip = 29; continue _fun00001 }
 27:
            michal = false;
 29:
            var _closure2_slot1 = michal;
            var _closure2_slot2 = tangon;
            zuuluu = _closure1_slot0;
            golfie = _closure1_slot1;
            michal = 4;
            michal = golfie[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.getURL;
            michal = michal.bind(zuuluu)(report);
            _closure2_slot2 = michal;
            zuuluu = _closure1_slot5;
            michal = zuuluu.map;
            entity = function(argFoo, argBar) {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = _closure1_slot2;
                    report = undefined;
                    zuuluu = argFoo;
                    michal = 3;
                    zuuluu = tangon.bind(report)(zuuluu, michal);
                    michal = 0;
                    backup = zuuluu[michal];
                    yankee = 1;
                    romeon = zuuluu[yankee];
                    michal = 2;
                    foxtra = zuuluu[michal];
                    tangon = _closure1_slot4;
                    michal = _closure1_slot0;
                    zuuluu = _closure1_slot1;
                    entity = 5;
                    entity = zuuluu[entity];
                    zuuluu = michal.bind(report)(entity);
                    michal = {};
                    entity = _closure2_slot2;
                    michal['src'] = entity;
                    entity = _closure2_slot0;
                    michal['name'] = entity;
                    golfie = {};
                    entity = 'absolute';
                    golfie['position'] = entity;
                    entity = global;
                    option = entity.HermesInternal;
                    option = option.concat;
                    verify = '';
                    offset = '%';
                    option = option.bind(verify)(backup, offset);
                    golfie['top'] = option;
                    option = entity.HermesInternal;
                    option = option.concat;
                    option = option.bind(verify)(romeon, offset);
                    golfie['left'] = option;
                    offset = {};
                    option = entity.HermesInternal;
                    romeon = option.concat;
                    option = 'deg';
                    option = romeon.bind(verify)(foxtra, option);
                    offset['rotate'] = option;
                    option = new Array(2);
                    option[0] = offset;
                    offset = {};
                    romeon = _closure2_slot1;
                    if(!romeon) { _fun00004_ip = 240; continue _fun00003 }
 196:
                    foxtra = entity.Math;
                    romeon = foxtra.random;
                    foxtra = romeon.bind(foxtra)();
                    romeon = 1.5;
                    foxtra = romeon * foxtra;
                    romeon = 0.5;
                    yankee = foxtra + romeon;
 240:
                    offset['scale'] = yankee;
                    option[1] = offset;
                    golfie['transform'] = option;
                    michal['style'] = golfie;
                    golfie = true;
                    michal['forceTextEmoji'] = golfie;
                    option = _closure2_slot0;
                    entity = entity.HermesInternal;
                    golfie = entity.concat;
                    oscard = argBar;
                    entity = '-';
                    entity = golfie.bind(verify)(oscard, entity, option);
                    entity = tangon.bind(report)(zuuluu, michal, entity);
                    return entity;
                }
            };
            report = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot4;
            michal = _closure1_slot3;
            entity = {};
            oscard = _closure1_slot6;
            oscard = oscard.emojisContainer;
            entity['style'] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();