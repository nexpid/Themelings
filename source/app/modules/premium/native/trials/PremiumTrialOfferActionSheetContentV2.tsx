// app/modules/premium/native/trials/PremiumTrialOfferActionSheetContentV2.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: PremiumTrialOfferBody
        mike = argFoo;
        zulu = mike.premiumType;
        var _closure2_slot0 = zulu;
        mike = _closure1_slot14;
        tango = undefined;
        verify = mike.bind(tango)();
        golf = _closure1_slot3;
        report = golf.useMemo;
        mike = new Array(1);
        mike[0] = zulu;
        entity = function() {
            _fun98776: for(var _fun98776_ip = 0; ; ) switch(_fun98776_ip) {
 0:
                zulu = _closure2_slot0;
                mike = null;
                if(!(mike == zulu)) { _fun98776_ip = 22; continue _fun98776 }
 13:
                zulu = new Array(0);
                _fun98776_ip = 247; continue _fun98776;
 22:
                mike = {};
                oscar = _closure1_slot1;
                golf = _closure1_slot2;
                report = 8;
                report = golf[report];
                options = undefined;
                report = oscar.bind(options)(report);
                mike['icon'] = report;
                oscar = _closure1_slot0;
                report = 9;
                report = golf[report];
                report = oscar.bind(options)(report);
                report = report.NitroWheelIcon;
                mike['IconComponent'] = report;
                oscar = _closure2_slot0;
                report = _closure1_slot7;
                report = report.TIER_0;
                if(!(oscar !== report)) { _fun98776_ip = 177; continue _fun98776 }
 98:
                oscar = _closure2_slot0;
                entity = _closure1_slot7;
                report = entity.TIER_2;
                entity = '';
                if(!(oscar === report)) { _fun98776_ip = 175; continue _fun98776 }
 120:
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                report = 10;
                oscar = offset[report];
                oscar = verify.bind(options)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = offset[report];
                report = verify.bind(options)(report);
                report = report.t;
                report = report.rZprQE;
                entity = oscar.bind(golf)(report);
 175:
                _fun98776_ip = 232; continue _fun98776;
 177:
                golf = _closure1_slot0;
                verify = _closure1_slot2;
                tango = 10;
                report = verify[tango];
                report = golf.bind(options)(report);
                oscar = report.intl;
                report = oscar.string;
                tango = verify[tango];
                tango = golf.bind(options)(tango);
                tango = tango.t;
                tango = tango.4LH+oa;
                entity = report.bind(oscar)(tango);
 232:
                mike['label'] = entity;
                entity = new Array(1);
                entity[0] = mike;
                zulu = entity;
 247:
                mike = {};
                oscar = _closure1_slot1;
                verify = _closure1_slot2;
                tango = 11;
                tango = verify[tango];
                options = undefined;
                tango = oscar.bind(options)(tango);
                mike['icon'] = tango;
                golf = _closure1_slot0;
                entity = 12;
                entity = verify[entity];
                entity = golf.bind(options)(entity);
                entity = entity.FileUpIcon;
                mike['IconComponent'] = entity;
                tango = 10;
                entity = verify[tango];
                entity = golf.bind(options)(entity);
                offset = entity.intl;
                report = offset.string;
                entity = verify[tango];
                entity = golf.bind(options)(entity);
                entity = entity.t;
                entity = entity.thJN9v;
                entity = report.bind(offset)(entity);
                mike['label'] = entity;
                entity = new Array(2);
                entity[0] = mike;
                mike = {};
                report = 13;
                report = verify[report];
                report = oscar.bind(options)(report);
                mike['icon'] = report;
                report = 14;
                report = verify[report];
                report = golf.bind(options)(report);
                report = report.ReactionIcon;
                mike['IconComponent'] = report;
                report = verify[tango];
                report = golf.bind(options)(report);
                oscar = report.intl;
                report = oscar.string;
                tango = verify[tango];
                tango = golf.bind(options)(tango);
                tango = tango.t;
                tango = tango.E1NP29;
                tango = report.bind(oscar)(tango);
                mike['label'] = tango;
                entity[1] = mike;
                yankee = 2;
                foxtrot = entity;
                romeo = zulu;
                mike = arraySpread(foxtrot, romeo, yankee);
                return entity;
            }
        };
        offset = report.bind(golf)(entity, mike);
        kilo = _closure1_slot0;
        yankee = _closure1_slot2;
        entity = 15;
        entity = yankee[entity];
        mike = kilo.bind(tango)(entity);
        entity = mike.getPremiumTypeDisplayName;
        echo = entity.bind(mike)(zulu);
        golf = _closure1_slot1;
        entity = 16;
        entity = yankee[entity];
        mike = golf.bind(tango)(entity);
        entity = _closure1_slot9;
        entity = entity.MONTH;
        result = mike.bind(tango)(zulu, entity);
        zulu = _closure1_slot13;
        mike = _closure1_slot12;
        entity = {};
        foxtrot = _closure1_slot11;
        options = 17;
        report = yankee[options];
        report = kilo.bind(tango)(report);
        romeo = report.Text;
        report = {};
        backup = 'heading-xl/extrabold';
        report['variant'] = backup;
        backup = 10;
        sizing = yankee[backup];
        sizing = kilo.bind(tango)(sizing);
        source = sizing.intl;
        update = source.format;
        sizing = yankee[backup];
        sizing = kilo.bind(tango)(sizing);
        sizing = sizing.t;
        output = sizing.+2mmb2;
        sizing = {};
        sizing['nitroTierName'] = echo;
        sizing = update.bind(source)(output, sizing);
        report['children'] = sizing;
        romeo = foxtrot.bind(tango)(romeo, report);
        report = new Array(3);
        report[0] = romeo;
        foxtrot = _closure1_slot11;
        options = yankee[options];
        options = kilo.bind(tango)(options);
        romeo = options.Text;
        options = {};
        sizing = 'text-sm/normal';
        options['variant'] = sizing;
        sizing = yankee[backup];
        sizing = kilo.bind(tango)(sizing);
        output = sizing.intl;
        sizing = output.format;
        backup = yankee[backup];
        backup = kilo.bind(tango)(backup);
        backup = backup.t;
        kilo = backup.DeqMaG;
        backup = {};
        backup['nitroTierName'] = echo;
        backup['price'] = result;
        backup = sizing.bind(output)(kilo, backup);
        options['children'] = backup;
        options = foxtrot.bind(tango)(romeo, options);
        report[1] = options;
        options = _closure1_slot11;
        oscar = 18;
        oscar = yankee[oscar];
        golf = golf.bind(tango)(oscar);
        oscar = {};
        yankee = verify.features;
        oscar['style'] = yankee;
        oscar['features'] = offset;
        offset = verify.featureRow;
        oscar['rowStyle'] = offset;
        verify = verify.featureIcon;
        oscar['iconStyle'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot15 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    romeo = 0;
    golf = oscar[romeo];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot4 = golf;
    tango = tango.ScrollView;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.PremiumTypes;
    var _closure1_slot7 = golf;
    golf = tango.PremiumSubscriptionSKUToPremiumType;
    var _closure1_slot8 = golf;
    tango = tango.SubscriptionIntervalTypes;
    var _closure1_slot9 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ACTION_SHEET_MAX_WIDTH;
    var _closure1_slot10 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot11 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot12 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot13 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 7;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_12;
    verify['marginHorizontal'] = foxtrot;
    tango['scrollView'] = verify;
    verify = {'minHeight': 28, 'minWidth': 118};
    tango['headerLogo'] = verify;
    verify = {};
    foxtrot = 'absolute';
    verify['position'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_24;
    verify['left'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_24;
    verify['bottom'] = foxtrot;
    tango['headerContainer'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['marginTop'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_12;
    verify['paddingHorizontal'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_4;
    verify['paddingVertical'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.round;
    verify['borderRadius'] = foxtrot;
    tango['headerPill'] = verify;
    verify = {'position': 'absolute', 'right': null, 'top': null, 'width': 170, 'height': 140};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_32;
    verify['right'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_32;
    verify['top'] = foxtrot;
    tango['headerWumpus'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['marginTop'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['marginHorizontal'] = foxtrot;
    tango['bodyContainer'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['marginTop'] = foxtrot;
    tango['features'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['marginEnd'] = foxtrot;
    verify['paddingHorizontal'] = romeo;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.CHANNELS_DEFAULT;
    verify['tintColor'] = foxtrot;
    tango['featureIcon'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['marginTop'] = foxtrot;
    verify['paddingVertical'] = romeo;
    tango['featureRow'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['marginTop'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['marginHorizontal'] = romeo;
    romeo = 'space-between';
    verify['justifyContent'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['gap'] = offset;
    tango['buttonContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot14 = tango;
    tango = 29;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/premium/native/trials/PremiumTrialOfferActionSheetContentV2.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: PremiumTrialOfferActionSheetContentV2
        _fun98777: for(var _fun98777_ip = 0; ; ) switch(_fun98777_ip) {
 0:
            mike = argFoo;
            source = mike.fallbackPremiumType;
            report = mike.trialOffer;
            config = mike.intervalDuration;
            result = mike.onConfirm;
            kilo = mike.onDismiss;
            tango = undefined;
            var _closure2_slot0 = tango;
            var _closure2_slot1 = tango;
            mike = _closure1_slot14;
            yankee = mike.bind(tango)();
            mike = null;
            oscar = mike == report;
            zulu = undefined;
            if(oscar) { _fun98777_ip = 88; continue _fun98777 }
 67:
            report = report.subscription_trial;
            oscar = mike == report;
            zulu = undefined;
            if(oscar) { _fun98777_ip = 88; continue _fun98777 }
 82:
            zulu = report.sku_id;
 88:
            if(!(mike != zulu)) { _fun98777_ip = 100; continue _fun98777 }
 92:
            mike = _closure1_slot8;
            source = mike[zulu];
 100:
            mike = _closure1_slot7;
            mike = mike.TIER_0;
            if(!(source !== mike)) { _fun98777_ip = 136; continue _fun98777 }
 114:
            zulu = _closure1_slot1;
            report = _closure1_slot2;
            mike = 20;
            mike = report[mike];
            output = zulu.bind(tango)(mike);
            _fun98777_ip = 156; continue _fun98777;
 136:
            zulu = _closure1_slot1;
            report = _closure1_slot2;
            mike = 19;
            mike = report[mike];
            output = zulu.bind(tango)(mike);
 156:
            verify = _closure1_slot1;
            update = _closure1_slot2;
            mike = 21;
            mike = update[mike];
            mike = verify.bind(tango)(mike);
            mike = mike.bind(tango)();
            zulu = mike.left;
            _closure2_slot0 = zulu;
            mike = mike.right;
            _closure2_slot1 = mike;
            echo = _closure1_slot0;
            mike = 22;
            mike = update[mike];
            report = echo.bind(tango)(mike);
            zulu = report.useStateFromStores;
            oscar = _closure1_slot6;
            mike = new Array(1);
            mike[0] = oscar;
            entity = function() {
                entity = global;
                tango = entity.Math;
                zulu = tango.min;
                report = _closure1_slot6;
                mike = report.getWidth;
                mike = mike.bind(report)();
                oscar = _closure1_slot10;
                report = _closure2_slot0;
                report = oscar + report;
                entity = _closure2_slot1;
                entity = report + entity;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            offset = zulu.bind(report)(mike, entity);
            options = 23;
            entity = update[options];
            mike = echo.bind(tango)(entity);
            entity = mike.usePremiumFeatureCardData;
            backup = entity.bind(mike)(offset, source);
            report = _closure1_slot13;
            entity = update[options];
            entity = echo.bind(tango)(entity);
            zulu = entity.PremiumFeaturesCardBackground;
            mike = {};
            entity = {};
            oscar = update[options];
            oscar = echo.bind(tango)(oscar);
            oscar = oscar.PREMIUM_FEATURES_PROPORTIONAL_CARD_WIDTH;
            oscar = offset * oscar;
            entity['width'] = oscar;
            mike['style'] = entity;
            oscar = _closure1_slot13;
            golf = _closure1_slot4;
            entity = {};
            romeo = yankee.headerContainer;
            entity['style'] = romeo;
            control = _closure1_slot11;
            romeo = 24;
            romeo = update[romeo];
            sizing = verify.bind(tango)(romeo);
            romeo = {};
            vacuum = yankee.headerLogo;
            romeo['style'] = vacuum;
            romeo['premiumType'] = source;
            sizing = control.bind(tango)(sizing, romeo);
            romeo = new Array(2);
            romeo[0] = sizing;
            sequence = _closure1_slot11;
            sizing = 25;
            sizing = update[sizing];
            vacuum = verify.bind(tango)(sizing);
            control = {};
            sizing = yankee.headerPill;
            control['style'] = sizing;
            sizing = 26;
            record = update[sizing];
            record = echo.bind(tango)(record);
            record = record.Gradients;
            record = record.PREMIUM_TIER_2;
            control['colors'] = record;
            record = update[sizing];
            record = echo.bind(tango)(record);
            record = record.HorizontalGradient;
            record = record.START;
            control['start'] = record;
            sizing = update[sizing];
            sizing = echo.bind(tango)(sizing);
            sizing = sizing.HorizontalGradient;
            sizing = sizing.END;
            control['end'] = sizing;
            papa = _closure1_slot11;
            sizing = 17;
            sizing = update[sizing];
            sizing = echo.bind(tango)(sizing);
            context = sizing.Text;
            record = {'variant': 'heading-sm/extrabold', 'allowFontScaling': false, 'color': 'always-white'};
            sizing = 10;
            target = update[sizing];
            target = echo.bind(tango)(target);
            lima = target.intl;
            sierra = lima.formatToPlainString;
            target = update[sizing];
            target = echo.bind(tango)(target);
            target = target.t;
            status = target.I1eIdX;
            target = {};
            target['duration'] = config;
            status = sierra.bind(lima)(status, target);
            target = status.toUpperCase;
            target = target.bind(status)();
            record['children'] = target;
            record = papa.bind(tango)(context, record);
            control['children'] = record;
            control = sequence.bind(tango)(vacuum, control);
            romeo[1] = control;
            entity['children'] = romeo;
            oscar = oscar.bind(tango)(golf, entity);
            entity = new Array(2);
            entity[0] = oscar;
            romeo = _closure1_slot11;
            oscar = 27;
            oscar = update[oscar];
            verify = verify.bind(tango)(oscar);
            oscar = {};
            control = yankee.headerWumpus;
            oscar['style'] = control;
            control = 'contain';
            oscar['resizeMode'] = control;
            oscar['source'] = output;
            oscar = romeo.bind(tango)(verify, oscar);
            entity[1] = oscar;
            mike['children'] = entity;
            entity = 'first_card';
            romeo = report.bind(tango)(zulu, mike, entity);
            zulu = _closure1_slot11;
            mike = _closure1_slot5;
            entity = {};
            oscar = _closure1_slot13;
            report = {};
            options = update[options];
            options = echo.bind(tango)(options);
            verify = options.PremiumFeaturesCarousel;
            options = {};
            options['width'] = offset;
            offset = new Array(1);
            offset[0] = romeo;
            equality = 1;
            variable36 = offset;
            quebec = backup;
            romeo = arraySpread(variable36, quebec, equality);
            options['children'] = offset;
            verify = zulu.bind(tango)(verify, options);
            options = new Array(3);
            options[0] = verify;
            offset = _closure1_slot11;
            verify = {};
            romeo = yankee.bodyContainer;
            verify['style'] = romeo;
            output = _closure1_slot11;
            backup = _closure1_slot15;
            romeo = {};
            romeo['premiumType'] = source;
            romeo = output.bind(tango)(backup, romeo);
            verify['children'] = romeo;
            verify = offset.bind(tango)(golf, verify);
            options[1] = verify;
            offset = _closure1_slot13;
            verify = {};
            yankee = yankee.buttonContainer;
            verify['style'] = yankee;
            output = _closure1_slot11;
            romeo = 28;
            yankee = update[romeo];
            yankee = echo.bind(tango)(yankee);
            backup = yankee.Button;
            yankee = {};
            source = 'primary';
            yankee['variant'] = source;
            source = update[sizing];
            source = echo.bind(tango)(source);
            sequence = source.intl;
            vacuum = sequence.formatToPlainString;
            source = update[sizing];
            source = echo.bind(tango)(source);
            source = source.t;
            control = source.xASjq6;
            source = {};
            source['duration'] = config;
            source = vacuum.bind(sequence)(control, source);
            yankee['text'] = source;
            yankee['onPress'] = result;
            backup = output.bind(tango)(backup, yankee);
            yankee = new Array(2);
            yankee[0] = backup;
            backup = _closure1_slot11;
            romeo = update[romeo];
            romeo = echo.bind(tango)(romeo);
            foxtrot = romeo.Button;
            romeo = {};
            output = 'secondary';
            romeo['variant'] = output;
            output = update[sizing];
            output = echo.bind(tango)(output);
            result = output.intl;
            output = result.string;
            sizing = update[sizing];
            sizing = echo.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.TulDPj;
            sizing = output.bind(result)(sizing);
            romeo['text'] = sizing;
            romeo['onPress'] = kilo;
            romeo = backup.bind(tango)(foxtrot, romeo);
            yankee[1] = romeo;
            verify['children'] = yankee;
            verify = offset.bind(tango)(golf, verify);
            options[2] = verify;
            report['children'] = options;
            report = oscar.bind(tango)(golf, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();