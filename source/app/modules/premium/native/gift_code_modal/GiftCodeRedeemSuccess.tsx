// app/modules/premium/native/gift_code_modal/GiftCodeRedeemSuccess.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot3 = golf;
    tango = tango.ScrollView;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    tango = {'flex': 1, 'justifyContent': 'space-between'};
    yankee = 5;
    offset = oscar[yankee];
    offset = romeo.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_PRIMARY;
    tango['backgroundColor'] = offset;
    golf['container'] = tango;
    tango = 28;
    offset = {'flex': 1, 'alignItems': 'center', 'justifyContent': 'center', 'paddingTop': 28, 'paddingBottom': 12, 'paddingHorizontal': 32};
    golf['body'] = offset;
    offset = {'height': 360, 'width': 216, 'borderRadius': null, 'overflow': 'hidden'};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.xs;
    offset['borderRadius'] = yankee;
    golf['profileEffect'] = offset;
    offset = {'height': '100%', 'width': '100%', 'resizeMode': 'contain'};
    golf['sampleProfile'] = offset;
    offset = {'marginTop': 32, 'textAlign': 'center'};
    golf['header'] = offset;
    offset = {'marginTop': 8, 'textAlign': 'center'};
    golf['message'] = offset;
    offset = {};
    yankee = 24;
    offset['paddingHorizontal'] = yankee;
    golf['footer'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/premium/native/gift_code_modal/GiftCodeRedeemSuccess.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GiftCodeRedeemSuccess
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            options = entity.giftCode;
            var _closure2_slot0 = options;
            entity = entity.user;
            var _closure2_slot1 = entity;
            tango = undefined;
            var _closure2_slot4 = tango;
            entity = _closure1_slot8;
            offset = entity.bind(tango)();
            var _closure2_slot2 = offset;
            report = _closure1_slot0;
            oscar = _closure1_slot2;
            entity = 6;
            entity = oscar[entity];
            mike = report.bind(tango)(entity);
            entity = mike.useNavigation;
            entity = entity.bind(mike)();
            var _closure2_slot3 = entity;
            entity = 7;
            entity = oscar[entity];
            golf = report.bind(tango)(entity);
            zulu = golf.useStateFromStores;
            entity = _closure1_slot5;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                zulu = _closure1_slot5;
                mike = zulu.get;
                entity = _closure2_slot0;
                entity = entity.skuId;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            vacuum = zulu.bind(golf)(mike, entity);
            entity = 8;
            entity = oscar[entity];
            zulu = report.bind(tango)(entity);
            mike = zulu.useGetOrFetchSubscriptionPlan;
            entity = options.subscriptionPlanId;
            echo = mike.bind(zulu)(entity);
            entity = 9;
            entity = oscar[entity];
            zulu = report.bind(tango)(entity);
            mike = zulu.useGetOrFetchApplication;
            entity = options.applicationId;
            result = mike.bind(zulu)(entity);
            entity = 10;
            entity = oscar[entity];
            zulu = report.bind(tango)(entity);
            mike = zulu.useFetchCollectiblesProduct;
            entity = 11;
            entity = oscar[entity];
            report = report.bind(tango)(entity);
            entity = report.isCollectiblesGiftCode;
            report = entity.bind(report)(options);
            backup = null;
            entity = null;
            if(!report) { _fun00002_ip = 232; continue _fun00001 }
 226:
            entity = options.skuId;
 232:
            entity = mike.bind(zulu)(entity);
            entity = entity.product;
            mike = backup == entity;
            verify = undefined;
            if(mike) { _fun00002_ip = 264; continue _fun00001 }
 252:
            mike = entity.items;
            entity = 0;
            verify = mike[entity];
 264:
            _closure2_slot4 = verify;
            zulu = _closure1_slot7;
            mike = _closure1_slot0;
            report = _closure1_slot2;
            entity = 12;
            entity = report[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.SafeAreaPaddingView;
            entity = {};
            report = true;
            entity['bottom'] = report;
            report = offset.container;
            entity['style'] = report;
            oscar = _closure1_slot4;
            report = {};
            golf = offset.body;
            report['contentContainerStyle'] = golf;
            golf = false;
            report['alwaysBounceVertical'] = golf;
            if(!(backup == verify)) { _fun00002_ip = 349; continue _fun00001 }
 342:
            if(!(backup == result)) { _fun00002_ip = 495; continue _fun00001 }
 349:
            output = _closure1_slot0;
            update = _closure1_slot2;
            golf = 14;
            golf = update[golf];
            romeo = output.bind(tango)(golf);
            golf = romeo.match;
            source = golf.bind(romeo)(verify);
            sizing = source.with;
            kilo = {};
            golf = 15;
            romeo = update[golf];
            romeo = output.bind(tango)(romeo);
            romeo = romeo.CollectiblesItemType;
            romeo = romeo.AVATAR_DECORATION;
            kilo['type'] = romeo;
            romeo = function(argFoo) {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tango = _closure1_slot6;
                    mike = _closure1_slot1;
                    entity = _closure1_slot2;
                    golf = 16;
                    entity = entity[golf];
                    zulu = undefined;
                    mike = mike.bind(zulu)(entity);
                    entity = {};
                    oscar = _closure2_slot1;
                    romeo = null;
                    verify = romeo == oscar;
                    oscar = undefined;
                    if(verify) { _fun00004_ip = 119; continue _fun00003 }
 49:
                    yankee = _closure2_slot1;
                    offset = yankee.getAvatarSource;
                    foxtrot = _closure1_slot0;
                    options = _closure1_slot2;
                    verify = 17;
                    verify = options[verify];
                    verify = foxtrot.bind(zulu)(verify);
                    verify = verify.AVATAR_SIZE_MAP;
                    options = options[golf];
                    options = foxtrot.bind(zulu)(options);
                    options = options.AvatarSizes;
                    options = options.GIFT_SUCCESS;
                    verify = verify[options];
                    options = true;
                    oscar = offset.bind(yankee)(romeo, options, verify);
 119:
                    entity['source'] = oscar;
                    oscar = argFoo;
                    entity['avatarDecoration'] = oscar;
                    oscar = _closure1_slot0;
                    report = _closure1_slot2;
                    report = report[golf];
                    report = oscar.bind(zulu)(report);
                    report = report.AvatarSizes;
                    report = report.GIFT_SUCCESS;
                    entity['size'] = report;
                    report = true;
                    entity['animate'] = report;
                    entity = tango.bind(zulu)(mike, entity);
                    return entity;
                }
            };
            sizing = sizing.bind(source)(kilo, romeo);
            kilo = sizing.with;
            romeo = {};
            golf = update[golf];
            golf = output.bind(tango)(golf);
            golf = golf.CollectiblesItemType;
            golf = golf.PROFILE_EFFECT;
            romeo['type'] = golf;
            golf = function(argFoo) {
                tango = _closure1_slot7;
                zulu = _closure1_slot3;
                mike = {};
                offset = _closure2_slot2;
                report = offset.profileEffect;
                mike['style'] = report;
                options = _closure1_slot6;
                golf = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 18;
                report = verify[entity];
                entity = undefined;
                oscar = golf.bind(entity)(report);
                report = {};
                yankee = 19;
                yankee = verify[yankee];
                yankee = golf.bind(entity)(yankee);
                report['source'] = yankee;
                offset = offset.sampleProfile;
                report['style'] = offset;
                offset = true;
                report['disableColor'] = offset;
                oscar = options.bind(entity)(oscar, report);
                report = new Array(2);
                report[0] = oscar;
                oscar = 20;
                oscar = verify[oscar];
                golf = golf.bind(entity)(oscar);
                oscar = {};
                verify = argFoo;
                verify = verify.id;
                oscar['profileEffectId'] = verify;
                verify = 0;
                oscar['bannerAdjustment'] = verify;
                oscar = options.bind(entity)(golf, oscar);
                report[1] = oscar;
                mike['children'] = report;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            kilo = kilo.bind(sizing)(romeo, golf);
            romeo = kilo.otherwise;
            golf = function() {
                tango = _closure1_slot6;
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 21;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                report = _closure2_slot0;
                report = report.giftStyle;
                entity['giftStyle'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            romeo = romeo.bind(kilo)(golf);
            _fun00002_ip = 572; continue _fun00001;
 495:
            sizing = _closure1_slot6;
            kilo = _closure1_slot1;
            update = _closure1_slot2;
            output = 13;
            golf = update[output];
            kilo = kilo.bind(tango)(golf);
            golf = {};
            golf['game'] = result;
            result = _closure1_slot0;
            output = update[output];
            output = result.bind(tango)(output);
            output = output.GameIconSizes;
            output = output.LARGE;
            golf['size'] = output;
            output = options.skuId;
            golf['skuId'] = output;
            romeo = sizing.bind(tango)(kilo, golf);
 572:
            golf = new Array(3);
            golf[0] = romeo;
            if(!(backup != vacuum)) { _fun00002_ip = 861; continue _fun00001 }
 587:
            romeo = options.isSubscription;
            if(!romeo) { _fun00002_ip = 603; continue _fun00001 }
 596:
            if(!(backup == echo)) { _fun00002_ip = 739; continue _fun00001 }
 603:
            kilo = backup != verify;
            romeo = undefined;
            if(!kilo) { _fun00002_ip = 737; continue _fun00001 }
 615:
            output = _closure1_slot6;
            update = _closure1_slot0;
            sequence = _closure1_slot2;
            kilo = 22;
            kilo = sequence[kilo];
            kilo = update.bind(tango)(kilo);
            sizing = kilo.Text;
            kilo = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
            result = offset.header;
            kilo['style'] = result;
            result = 23;
            source = sequence[result];
            source = update.bind(tango)(source);
            control = source.intl;
            source = control.format;
            result = sequence[result];
            result = update.bind(tango)(result);
            result = result.t;
            update = result.YNaxMj;
            result = {};
            sequence = vacuum.name;
            result['itemName'] = sequence;
            result = source.bind(control)(update, result);
            kilo['children'] = result;
            romeo = output.bind(tango)(sizing, kilo);
 737:
            _fun00002_ip = 859; continue _fun00001;
 739:
            output = _closure1_slot6;
            update = _closure1_slot0;
            sequence = _closure1_slot2;
            kilo = 22;
            kilo = sequence[kilo];
            kilo = update.bind(tango)(kilo);
            sizing = kilo.Text;
            kilo = {};
            result = 'heading-xl/bold';
            kilo['variant'] = result;
            result = offset.header;
            kilo['style'] = result;
            result = 23;
            source = sequence[result];
            source = update.bind(tango)(source);
            control = source.intl;
            source = control.format;
            result = sequence[result];
            result = update.bind(tango)(result);
            result = result.t;
            update = result.1C2BGx;
            result = {};
            vacuum = vacuum.name;
            result['skuName'] = vacuum;
            result = source.bind(control)(update, result);
            kilo['children'] = result;
            romeo = output.bind(tango)(sizing, kilo);
 859:
            _fun00002_ip = 968; continue _fun00001;
 861:
            output = _closure1_slot6;
            control = _closure1_slot0;
            vacuum = _closure1_slot2;
            kilo = 22;
            kilo = vacuum[kilo];
            kilo = control.bind(tango)(kilo);
            sizing = kilo.Text;
            kilo = {};
            result = 'heading-xl/bold';
            kilo['variant'] = result;
            result = offset.header;
            kilo['style'] = result;
            result = 23;
            update = vacuum[result];
            update = control.bind(tango)(update);
            source = update.intl;
            update = source.string;
            result = vacuum[result];
            result = control.bind(tango)(result);
            result = result.t;
            result = result.+BNMcH;
            result = update.bind(source)(result);
            kilo['children'] = result;
            romeo = output.bind(tango)(sizing, kilo);
 968:
            golf[1] = romeo;
            options = options.isSubscription;
            if(!options) { _fun00002_ip = 988; continue _fun00001 }
 981:
            if(!(backup == echo)) { _fun00002_ip = 1184; continue _fun00001 }
 988:
            kilo = _closure1_slot6;
            source = _closure1_slot0;
            control = _closure1_slot2;
            options = 22;
            options = control[options];
            options = source.bind(tango)(options);
            romeo = options.Text;
            options = {};
            sizing = 'text-md/medium';
            options['variant'] = sizing;
            sizing = offset.message;
            options['style'] = sizing;
            sizing = 14;
            sizing = control[sizing];
            output = source.bind(tango)(sizing);
            sizing = output.match;
            vacuum = sizing.bind(output)(verify);
            update = vacuum.with;
            result = {};
            sizing = 15;
            output = control[sizing];
            output = source.bind(tango)(output);
            output = output.CollectiblesItemType;
            output = output.AVATAR_DECORATION;
            result['type'] = output;
            output = function() {
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 23;
                mike = oscar[entity];
                tango = undefined;
                mike = report.bind(tango)(mike);
                zulu = mike.intl;
                mike = zulu.string;
                entity = oscar[entity];
                entity = report.bind(tango)(entity);
                entity = entity.t;
                entity = entity.44b50t;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            update = update.bind(vacuum)(result, output);
            result = update.with;
            output = {};
            sizing = control[sizing];
            sizing = source.bind(tango)(sizing);
            sizing = sizing.CollectiblesItemType;
            sizing = sizing.PROFILE_EFFECT;
            output['type'] = sizing;
            sizing = function() {
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 23;
                mike = oscar[entity];
                tango = undefined;
                mike = report.bind(tango)(mike);
                zulu = mike.intl;
                mike = zulu.string;
                entity = oscar[entity];
                entity = report.bind(tango)(entity);
                entity = entity.t;
                entity = entity.f9M1YG;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            result = result.bind(update)(output, sizing);
            output = result.otherwise;
            sizing = function() {
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 23;
                mike = oscar[entity];
                tango = undefined;
                mike = report.bind(tango)(mike);
                zulu = mike.intl;
                mike = zulu.string;
                entity = oscar[entity];
                entity = report.bind(tango)(entity);
                entity = entity.t;
                entity = entity.5ayf7+;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            sizing = output.bind(result)(sizing);
            options['children'] = sizing;
            options = kilo.bind(tango)(romeo, options);
            _fun00002_ip = 1265; continue _fun00001;
 1184:
            sizing = _closure1_slot6;
            result = _closure1_slot0;
            update = _closure1_slot2;
            romeo = 22;
            romeo = update[romeo];
            romeo = result.bind(tango)(romeo);
            kilo = romeo.Text;
            romeo = {};
            output = 'text-md/medium';
            romeo['variant'] = output;
            output = offset.message;
            romeo['style'] = output;
            output = 24;
            output = update[output];
            result = result.bind(tango)(output);
            output = result.getSubscriptionGiftSuccessText;
            output = output.bind(result)(echo);
            romeo['children'] = output;
            options = sizing.bind(tango)(kilo, romeo);
 1265:
            golf[2] = options;
            report['children'] = golf;
            oscar = zulu.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot6;
            golf = _closure1_slot3;
            oscar = {};
            offset = offset.footer;
            oscar['style'] = offset;
            kilo = _closure1_slot1;
            offset = _closure1_slot2;
            romeo = 25;
            offset = offset[romeo];
            offset = kilo.bind(tango)(offset);
            if(!(backup != verify)) { _fun00002_ip = 1465; continue _fun00001 }
 1334:
            verify = {};
            result = _closure1_slot0;
            backup = _closure1_slot2;
            kilo = 23;
            sizing = backup[kilo];
            sizing = result.bind(tango)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kilo = backup[kilo];
            kilo = result.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.MAS7uL;
            kilo = sizing.bind(output)(kilo);
            verify['text'] = kilo;
            kilo = _closure1_slot1;
            sizing = backup[romeo];
            sizing = kilo.bind(tango)(sizing);
            sizing = sizing.Sizes;
            sizing = sizing.MEDIUM;
            verify['size'] = sizing;
            backup = backup[romeo];
            backup = kilo.bind(tango)(backup);
            backup = backup.Colors;
            backup = backup.BRAND;
            verify['color'] = backup;
            yankee = function() { // Original name: onPress
                verify = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 14;
                tango = oscar[entity];
                entity = undefined;
                golf = verify.bind(entity)(tango);
                report = golf.match;
                tango = _closure2_slot4;
                offset = report.bind(golf)(tango);
                golf = offset.with;
                report = {};
                options = 15;
                tango = oscar[options];
                tango = verify.bind(entity)(tango);
                tango = tango.CollectiblesItemType;
                tango = tango.AVATAR_DECORATION;
                report['type'] = tango;
                tango = function(argFoo) {
                    report = _closure2_slot3;
                    tango = report.push;
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 27;
                    mike = mike[entity];
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    mike = mike.GiftCodeModalScreens;
                    zulu = mike.USE_AVATAR_DECORATION;
                    mike = {};
                    oscar = argFoo;
                    mike['avatarDecoration'] = oscar;
                    mike = tango.bind(report)(zulu, mike);
                    return entity;
                };
                golf = golf.bind(offset)(report, tango);
                report = golf.with;
                tango = {};
                options = oscar[options];
                options = verify.bind(entity)(options);
                options = options.CollectiblesItemType;
                options = options.PROFILE_EFFECT;
                tango['type'] = options;
                zulu = function(argFoo) {
                    report = _closure2_slot3;
                    tango = report.push;
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 27;
                    mike = mike[entity];
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    mike = mike.GiftCodeModalScreens;
                    zulu = mike.USE_PROFILE_EFFECT;
                    mike = {};
                    oscar = argFoo;
                    mike['profileEffect'] = oscar;
                    mike = tango.bind(report)(zulu, mike);
                    return entity;
                };
                tango = report.bind(golf)(tango, zulu);
                zulu = tango.otherwise;
                report = _closure1_slot1;
                mike = 26;
                mike = oscar[mike];
                mike = report.bind(entity)(mike);
                mike = mike.pop;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            verify['onPress'] = yankee;
            _fun00002_ip = 1605; continue _fun00001;
 1465:
            yankee = {};
            result = _closure1_slot0;
            backup = _closure1_slot2;
            kilo = 23;
            sizing = backup[kilo];
            sizing = result.bind(tango)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kilo = backup[kilo];
            kilo = result.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.NX+WJC;
            kilo = sizing.bind(output)(kilo);
            yankee['text'] = kilo;
            foxtrot = _closure1_slot1;
            kilo = backup[romeo];
            kilo = foxtrot.bind(tango)(kilo);
            kilo = kilo.Sizes;
            kilo = kilo.MEDIUM;
            yankee['size'] = kilo;
            romeo = backup[romeo];
            romeo = foxtrot.bind(tango)(romeo);
            romeo = romeo.Colors;
            romeo = romeo.BRAND;
            yankee['color'] = romeo;
            romeo = 26;
            romeo = backup[romeo];
            romeo = foxtrot.bind(tango)(romeo);
            romeo = romeo.pop;
            yankee['onPress'] = romeo;
            verify = yankee;
 1605:
            verify = options.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();