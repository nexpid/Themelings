// app/modules/premium/native/SubscriptionAccountHoldNotice.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Linking;
    var _closure1_slot3 = golfie;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.SubscriptionStatusTypes;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    offset = 4;
    tangon = oscard[offset];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'padding': 8, 'margin': 8};
    yankee = 5;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = yankee;
    tangon['container'] = verify;
    verify = {};
    yankee = 'row';
    verify['flexDirection'] = yankee;
    tangon['textContainer'] = verify;
    verify = {};
    verify['marginRight'] = offset;
    tangon['icon'] = verify;
    verify = {'marginBottom': 8, 'flex': 1};
    tangon['text'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/native/SubscriptionAccountHoldNotice.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            update = entity.subscription;
            var _closure2_slot0 = update;
            entity = _closure1_slot8;
            report = undefined;
            yankee = entity.bind(report)();
            zuuluu = update.status;
            entity = _closure1_slot5;
            michal = entity.ACCOUNT_HOLD;
            entity = null;
            if(!(zuuluu === michal)) { _fun00002_ip = 464; continue _fun00001 }
 52:
            tangon = _closure1_slot7;
            zuuluu = _closure1_slot4;
            michal = {};
            oscard = yankee.container;
            michal['style'] = oscard;
            oscard = {};
            golfie = yankee.textContainer;
            oscard['style'] = golfie;
            verify = _closure1_slot6;
            option = _closure1_slot1;
            kiloes = _closure1_slot2;
            foxtra = 6;
            golfie = kiloes[foxtra];
            romeon = option.bind(report)(golfie);
            golfie = {};
            backup = _closure1_slot0;
            foxtra = kiloes[foxtra];
            foxtra = backup.bind(report)(foxtra);
            foxtra = foxtra.IconSizes;
            foxtra = foxtra.MEDIUM;
            golfie['size'] = foxtra;
            foxtra = yankee.icon;
            golfie['style'] = foxtra;
            foxtra = 7;
            foxtra = kiloes[foxtra];
            foxtra = option.bind(report)(foxtra);
            golfie['source'] = foxtra;
            romeon = verify.bind(report)(romeon, golfie);
            golfie = new Array(2);
            golfie[0] = romeon;
            romeon = 8;
            romeon = kiloes[romeon];
            romeon = backup.bind(report)(romeon);
            foxtra = romeon.Text;
            romeon = {};
            yankee = yankee.text;
            romeon['style'] = yankee;
            yankee = 'text-sm/medium';
            romeon['variant'] = yankee;
            yankee = 9;
            sizing = kiloes[yankee];
            sizing = backup.bind(report)(sizing);
            echoed = sizing.intl;
            result = echoed.format;
            sizing = kiloes[yankee];
            sizing = backup.bind(report)(sizing);
            sizing = sizing.t;
            output = sizing.7I21Iy;
            sizing = {};
            source = update.currentPeriodEnd;
            sizing['endDate'] = source;
            source = 10;
            source = kiloes[source];
            ctrled = backup.bind(report)(source);
            source = ctrled.getDisplayName;
            update = update.planId;
            update = source.bind(ctrled)(update);
            sizing['planDescription'] = update;
            sizing = result.bind(echoed)(output, sizing);
            romeon['children'] = sizing;
            romeon = verify.bind(report)(foxtra, romeon);
            golfie[1] = romeon;
            oscard['children'] = golfie;
            golfie = tangon.bind(report)(zuuluu, oscard);
            oscard = new Array(2);
            oscard[0] = golfie;
            romeon = 11;
            golfie = kiloes[romeon];
            option = option.bind(report)(golfie);
            golfie = {};
            romeon = kiloes[romeon];
            romeon = backup.bind(report)(romeon);
            romeon = romeon.ButtonSizes;
            romeon = romeon.SMALL;
            golfie['size'] = romeon;
            romeon = kiloes[yankee];
            romeon = backup.bind(report)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            yankee = kiloes[yankee];
            yankee = backup.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee.VJmUNz;
            yankee = romeon.bind(foxtra)(yankee);
            golfie['text'] = yankee;
            offset = function() { // Original name: onPress
                zuuluu = _closure1_slot3;
                michal = zuuluu.openURL;
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 10;
                tangon = tangon[entity];
                entity = undefined;
                oscard = report.bind(entity)(tangon);
                report = oscard.getExternalSubscriptionMethodUrl;
                entity = _closure2_slot0;
                tangon = entity.paymentGateway;
                entity = 'PAYMENT_SOURCE_MANAGEMENT';
                entity = report.bind(oscard)(tangon, entity);
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            golfie['onPress'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 464:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();