// app/modules/premium/native/SubscriptionAccountHoldNotice.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Linking;
    var _closure1_slot3 = golf;
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.SubscriptionStatusTypes;
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    offset = 4;
    tango = oscar[offset];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'padding': 8, 'margin': 8};
    yankee = 5;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = yankee;
    tango['container'] = verify;
    verify = {};
    yankee = 'row';
    verify['flexDirection'] = yankee;
    tango['textContainer'] = verify;
    verify = {};
    verify['marginRight'] = offset;
    tango['icon'] = verify;
    verify = {'marginBottom': 8, 'flex': 1};
    tango['text'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/premium/native/SubscriptionAccountHoldNotice.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            update = entity.subscription;
            var _closure2_slot0 = update;
            entity = _closure1_slot8;
            report = undefined;
            yankee = entity.bind(report)();
            zulu = update.status;
            entity = _closure1_slot5;
            mike = entity.ACCOUNT_HOLD;
            entity = null;
            if(!(zulu === mike)) { _fun00002_ip = 460; continue _fun00001 }
 52:
            tango = _closure1_slot7;
            zulu = _closure1_slot4;
            mike = {};
            oscar = yankee.container;
            mike['style'] = oscar;
            oscar = {};
            golf = yankee.textContainer;
            oscar['style'] = golf;
            verify = _closure1_slot6;
            options = _closure1_slot1;
            kilo = _closure1_slot2;
            foxtrot = 6;
            golf = kilo[foxtrot];
            romeo = options.bind(report)(golf);
            golf = {};
            backup = _closure1_slot0;
            foxtrot = kilo[foxtrot];
            foxtrot = backup.bind(report)(foxtrot);
            foxtrot = foxtrot.IconSizes;
            foxtrot = foxtrot.MEDIUM;
            golf['size'] = foxtrot;
            foxtrot = yankee.icon;
            golf['style'] = foxtrot;
            foxtrot = 7;
            foxtrot = kilo[foxtrot];
            foxtrot = options.bind(report)(foxtrot);
            golf['source'] = foxtrot;
            romeo = verify.bind(report)(romeo, golf);
            golf = new Array(2);
            golf[0] = romeo;
            romeo = 8;
            romeo = kilo[romeo];
            romeo = backup.bind(report)(romeo);
            foxtrot = romeo.Text;
            romeo = {};
            yankee = yankee.text;
            romeo['style'] = yankee;
            yankee = 'text-sm/medium';
            romeo['variant'] = yankee;
            yankee = 9;
            sizing = kilo[yankee];
            sizing = backup.bind(report)(sizing);
            echo = sizing.intl;
            result = echo.format;
            sizing = kilo[yankee];
            sizing = backup.bind(report)(sizing);
            sizing = sizing.t;
            output = sizing.7I21Iy;
            sizing = {};
            source = update.currentPeriodEnd;
            sizing['endDate'] = source;
            source = 10;
            source = kilo[source];
            control = backup.bind(report)(source);
            source = control.getDisplayName;
            update = update.planId;
            update = source.bind(control)(update);
            sizing['planDescription'] = update;
            sizing = result.bind(echo)(output, sizing);
            romeo['children'] = sizing;
            romeo = verify.bind(report)(foxtrot, romeo);
            golf[1] = romeo;
            oscar['children'] = golf;
            golf = tango.bind(report)(zulu, oscar);
            oscar = new Array(2);
            oscar[0] = golf;
            romeo = 11;
            golf = kilo[romeo];
            options = options.bind(report)(golf);
            golf = {};
            romeo = kilo[romeo];
            romeo = backup.bind(report)(romeo);
            romeo = romeo.ButtonSizes;
            romeo = romeo.SMALL;
            golf['size'] = romeo;
            romeo = kilo[yankee];
            romeo = backup.bind(report)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            yankee = kilo[yankee];
            yankee = backup.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee.VJmUNz;
            yankee = romeo.bind(foxtrot)(yankee);
            golf['text'] = yankee;
            offset = function() { // Original name: onPress
                zulu = _closure1_slot3;
                mike = zulu.openURL;
                report = _closure1_slot0;
                tango = _closure1_slot2;
                entity = 10;
                tango = tango[entity];
                entity = undefined;
                oscar = report.bind(entity)(tango);
                report = oscar.getExternalSubscriptionMethodUrl;
                entity = _closure2_slot0;
                tango = entity.paymentGateway;
                entity = 'PAYMENT_SOURCE_MANAGEMENT';
                entity = report.bind(oscar)(tango, entity);
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            golf['onPress'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 460:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();