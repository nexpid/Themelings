// app/modules/premium/native/PremiumPlanSelectYearlyUpsellModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    kiloes = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = kiloes;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = kiloes.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot5 = golfie;
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = kiloes.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    offset = 4;
    tangon = oscard[offset];
    tangon = kiloes.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.usePremiumPlanSelectStore;
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.PREMIUM_YEARLY_DISCOUNT_PERCENT;
    var _closure1_slot10 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    yankee = tangon.Fonts;
    romeon = 8;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot11 = tangon;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot12 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    foxtra = 26;
    verify['marginHorizontal'] = foxtra;
    tangon['container'] = verify;
    foxtra = 'center';
    verify = {'alignSelf': 'center', 'marginVertical': 32};
    tangon['image'] = verify;
    verify = {};
    backup = 10;
    backup = oscard[backup];
    kiloes = kiloes.bind(entity)(backup);
    backup = yankee.DISPLAY_EXTRABOLD;
    yankee = 24;
    output = kiloes.bind(entity)(backup, entity, yankee);
    result = verify;
    yankee = copyDataProperties(result, output);
    yankee = 'alignSelf';
    verify[yankee] = foxtra;
    yankee = 'textAlign';
    verify[yankee] = foxtra;
    yankee = 'paddingBottom';
    verify[yankee] = romeon;
    yankee = 11;
    romeon = oscard[yankee];
    romeon = report.bind(entity)(romeon);
    foxtra = romeon.DARK_WHITE_500_LIGHT_BLACK_500;
    romeon = 'color';
    verify[romeon] = foxtra;
    tangon['header'] = verify;
    verify = {'alignSelf': 'center', 'textAlign': 'center', 'paddingBottom': 32};
    yankee = oscard[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.DARK_WHITE_500_LIGHT_BLACK_500;
    verify['color'] = yankee;
    tangon['description'] = verify;
    verify = {};
    yankee = 16;
    verify['marginBottom'] = yankee;
    tangon['upsellButton'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tangon['continueButton'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot13 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/native/PremiumPlanSelectYearlyUpsellModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: PremiumPlanSelectYearlyUpsellModal
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.onClose;
            golfie = entity.productId;
            var _closure2_slot0 = golfie;
            romeon = entity.continueWithUpsell;
            backup = entity.continueWithDefault;
            var _closure2_slot1 = backup;
            report = undefined;
            var _closure2_slot2 = report;
            entity = _closure1_slot13;
            sizing = entity.bind(report)();
            michal = _closure1_slot9;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.isPurchasing;
                return entity;
            };
            tangon = michal.bind(report)(entity);
            option = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 12;
            entity = verify[entity];
            michal = option.bind(report)(entity);
            entity = michal.getPremiumBundledItemsFromProductId;
            entity = entity.bind(michal)(golfie);
            michal = 13;
            golfie = verify[michal];
            foxtra = option.bind(report)(golfie);
            yankee = foxtra.useStateFromStores;
            golfie = _closure1_slot7;
            offset = new Array(1);
            offset[0] = golfie;
            golfie = function() {
                entity = _closure1_slot7;
                entity = entity.locale;
                return entity;
            };
            golfie = yankee.bind(foxtra)(offset, golfie);
            michal = verify[michal];
            offset = option.bind(report)(michal);
            verify = offset.useStateFromStoresArray;
            michal = _closure1_slot8;
            option = new Array(1);
            option[0] = michal;
            michal = function() {
                zuuluu = _closure1_slot8;
                michal = zuuluu.getProduct;
                entity = _closure2_slot0;
                michal = michal.bind(zuuluu)(entity);
                entity = new Array(2);
                entity[0] = michal;
                michal = zuuluu.isBusy;
                michal = michal.bind(zuuluu)();
                entity[1] = michal;
                return entity;
            };
            verify = verify.bind(offset)(option, michal);
            option = _closure1_slot3;
            michal = 2;
            option = option.bind(report)(verify, michal);
            michal = 0;
            sequen = option[michal];
            michal = 1;
            michal = option[michal];
            foxtra = tangon;
            if(foxtra) { _fun00002_ip = 222; continue _fun00001 }
 219:
            foxtra = michal;
 222:
            status = entity.premiumTier;
            entity = null;
            michal = entity == status;
            if(michal) { _fun00002_ip = 241; continue _fun00001 }
 237:
            michal = entity == sequen;
 241:
            _closure2_slot2 = michal;
            option = _closure1_slot4;
            tangon = option.useEffect;
            zuuluu = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = _closure2_slot2;
                    if(!michal) { _fun00004_ip = 20; continue _fun00003 }
 10:
                    michal = _closure2_slot1;
                    entity = undefined;
                    entity = michal.bind(entity)();
 20:
                    entity = undefined;
                    return entity;
                }
            };
            zuuluu = tangon.bind(option)(zuuluu);
            if(michal) { _fun00002_ip = 928; continue _fun00001 }
 272:
            update = _closure1_slot0;
            kiloes = _closure1_slot2;
            michal = 14;
            michal = kiloes[michal];
            tangon = update.bind(report)(michal);
            zuuluu = tangon.formatPercent;
            option = _closure1_slot10;
            michal = 100;
            michal = option / michal;
            record = zuuluu.bind(tangon)(golfie, michal);
            tangon = _closure1_slot11;
            yankee = _closure1_slot1;
            michal = 15;
            michal = kiloes[michal];
            zuuluu = yankee.bind(report)(michal);
            michal = {};
            michal['onClose'] = oscard;
            oscard = true;
            michal['noDefaultButtons'] = oscard;
            option = _closure1_slot12;
            golfie = _closure1_slot6;
            oscard = {};
            verify = sizing.container;
            oscard['style'] = verify;
            offset = _closure1_slot5;
            verify = {};
            output = sizing.image;
            verify['style'] = output;
            output = 16;
            output = kiloes[output];
            output = yankee.bind(report)(output);
            verify['source'] = output;
            offset = tangon.bind(report)(offset, verify);
            verify = new Array(5);
            verify[0] = offset;
            offset = 17;
            output = kiloes[offset];
            output = update.bind(report)(output);
            source = output.LegacyText;
            output = {};
            echoed = sizing.header;
            output['style'] = echoed;
            echoed = 18;
            ctrled = kiloes[echoed];
            ctrled = update.bind(report)(ctrled);
            cntext = ctrled.intl;
            config = cntext.format;
            ctrled = kiloes[echoed];
            ctrled = update.bind(report)(ctrled);
            ctrled = ctrled.t;
            vacuum = ctrled.LQCVfH;
            ctrled = {};
            ctrled['discountPercentage'] = record;
            papara = 19;
            papara = kiloes[papara];
            target = update.bind(report)(papara);
            papara = target.getPremiumTypeDisplayName;
            papara = papara.bind(target)(status);
            ctrled['planName'] = papara;
            ctrled = config.bind(cntext)(vacuum, ctrled);
            output['children'] = ctrled;
            output = tangon.bind(report)(source, output);
            verify[1] = output;
            offset = kiloes[offset];
            offset = update.bind(report)(offset);
            output = offset.LegacyText;
            offset = {};
            source = sizing.description;
            offset['style'] = source;
            source = kiloes[echoed];
            source = update.bind(report)(source);
            config = source.intl;
            vacuum = config.format;
            source = kiloes[echoed];
            source = update.bind(report)(source);
            source = source.t;
            ctrled = source.7chOVF;
            source = {};
            source['discountPercentage'] = record;
            source = vacuum.bind(config)(ctrled, source);
            offset['children'] = source;
            offset = tangon.bind(report)(output, offset);
            verify[2] = offset;
            output = 20;
            offset = kiloes[output];
            yankee = yankee.bind(report)(offset);
            offset = {};
            source = kiloes[output];
            source = update.bind(report)(source);
            source = source.ButtonColors;
            source = source.GREEN;
            offset['color'] = source;
            source = sizing.upsellButton;
            offset['style'] = source;
            source = kiloes[echoed];
            source = update.bind(report)(source);
            ctrled = source.intl;
            source = ctrled.formatToPlainString;
            kiloes = kiloes[echoed];
            kiloes = update.bind(report)(kiloes);
            kiloes = kiloes.t;
            update = kiloes.Qvq6GB;
            kiloes = {};
            config = entity == sequen;
            vacuum = undefined;
            if(config) { _fun00002_ip = 743; continue _fun00001 }
 737:
            vacuum = sequen.priceString;
 743:
            kiloes['price'] = vacuum;
            kiloes = source.bind(ctrled)(update, kiloes);
            offset['text'] = kiloes;
            offset['onPress'] = romeon;
            offset['disabled'] = foxtra;
            offset = tangon.bind(report)(yankee, offset);
            verify[3] = offset;
            romeon = _closure1_slot11;
            yankee = _closure1_slot1;
            kiloes = _closure1_slot2;
            offset = kiloes[output];
            yankee = yankee.bind(report)(offset);
            offset = {};
            result = _closure1_slot0;
            output = kiloes[output];
            output = result.bind(report)(output);
            output = output.ButtonColors;
            output = output.LIGHTGREY;
            offset['color'] = output;
            sizing = sizing.continueButton;
            offset['style'] = sizing;
            sizing = kiloes[echoed];
            sizing = result.bind(report)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = kiloes[echoed];
            kiloes = result.bind(report)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.YwEyQE;
            kiloes = sizing.bind(output)(kiloes);
            offset['text'] = kiloes;
            offset['onPress'] = backup;
            offset['disabled'] = foxtra;
            offset = romeon.bind(report)(yankee, offset);
            verify[4] = offset;
            oscard['children'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return michal;
 928:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();