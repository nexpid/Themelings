// app/modules/premium/native/PremiumPlanDowngradeToTier0Modal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: PremiumPlanDowngradeToTier0
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            mike = entity.analyticsLocations;
            var _closure2_slot0 = mike;
            mike = entity.currentPremiumType;
            control = entity.continueToCancel;
            tango = undefined;
            var _closure2_slot1 = tango;
            var _closure2_slot2 = tango;
            entity = _closure1_slot16;
            result = entity.bind(tango)();
            zulu = _closure1_slot1;
            oscar = _closure1_slot2;
            entity = 13;
            entity = oscar[entity];
            entity = zulu.bind(tango)(entity);
            report = entity.bind(tango)();
            zulu = _closure1_slot0;
            entity = 14;
            entity = oscar[entity];
            zulu = zulu.bind(tango)(entity);
            entity = zulu.isThemeDark;
            zulu = entity.bind(zulu)(report);
            report = _closure1_slot1;
            oscar = _closure1_slot2;
            entity = 10;
            entity = oscar[entity];
            entity = report.bind(tango)(entity);
            entity = entity.unsafe_rawColors;
            if(zulu) { _fun00002_ip = 135; continue _fun00001 }
 127:
            offset = entity.PRIMARY_100;
            _fun00002_ip = 141; continue _fun00001;
 135:
            offset = entity.PRIMARY_600;
 141:
            zulu = _closure1_slot15;
            entity = _closure1_slot9;
            entity = entity.TIER_0;
            entity = zulu[entity];
            _closure2_slot1 = entity;
            entity = _closure1_slot15;
            entity = entity[mike];
            _closure2_slot2 = entity;
            mike = _closure1_slot8;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.isPurchasing;
                return entity;
            };
            mike = mike.bind(tango)(entity);
            options = _closure1_slot0;
            oscar = _closure1_slot2;
            entity = 15;
            entity = oscar[entity];
            golf = options.bind(tango)(entity);
            report = golf.useStateFromStoresArray;
            entity = _closure1_slot7;
            zulu = new Array(1);
            zulu[0] = entity;
            entity = function() {
                report = _closure1_slot7;
                tango = report.getProduct;
                entity = _closure2_slot1;
                tango = tango.bind(report)(entity);
                entity = new Array(3);
                entity[0] = tango;
                report = _closure1_slot7;
                tango = report.getProduct;
                zulu = _closure2_slot2;
                zulu = tango.bind(report)(zulu);
                entity[1] = zulu;
                zulu = _closure1_slot7;
                mike = zulu.isBusy;
                mike = mike.bind(zulu)();
                entity[2] = mike;
                return entity;
            };
            report = report.bind(golf)(zulu, entity);
            zulu = _closure1_slot3;
            entity = 3;
            report = zulu.bind(tango)(report, entity);
            source = 0;
            variable36 = report[source];
            golf = 1;
            zulu = report[golf];
            entity = 2;
            entity = report[entity];
            yankee = _closure1_slot1;
            verify = 16;
            report = oscar[verify];
            sizing = yankee.bind(tango)(report);
            report = null;
            kilo = report != variable36;
            foxtrot = 'target product does not exist';
            foxtrot = sizing.bind(tango)(kilo, foxtrot);
            verify = oscar[verify];
            foxtrot = yankee.bind(tango)(verify);
            verify = report != zulu;
            report = 'current product does not exist';
            report = foxtrot.bind(tango)(verify, report);
            report = 17;
            report = oscar[report];
            foxtrot = options.bind(tango)(report);
            verify = foxtrot.getMaxFileSizeForPremiumType;
            report = _closure1_slot9;
            report = report.TIER_0;
            output = verify.bind(foxtrot)(report);
            report = {};
            verify = 18;
            verify = oscar[verify];
            verify = yankee.bind(tango)(verify);
            report['imageSource'] = verify;
            update = 19;
            verify = oscar[update];
            verify = options.bind(tango)(verify);
            sizing = verify.intl;
            kilo = sizing.format;
            verify = oscar[update];
            verify = options.bind(tango)(verify);
            verify = verify.t;
            foxtrot = verify.nfwgzM;
            verify = {};
            verify = kilo.bind(sizing)(foxtrot, verify);
            report['text'] = verify;
            verify = {};
            verify['right'] = source;
            report['position'] = verify;
            context = new Array(3);
            context[0] = report;
            report = {};
            verify = 20;
            verify = oscar[verify];
            verify = yankee.bind(tango)(verify);
            report['imageSource'] = verify;
            verify = oscar[update];
            verify = options.bind(tango)(verify);
            sizing = verify.intl;
            kilo = sizing.format;
            verify = oscar[update];
            verify = options.bind(tango)(verify);
            verify = verify.t;
            foxtrot = verify.U5fRtr;
            verify = {};
            verify['tier0MaxFileSize'] = output;
            verify = kilo.bind(sizing)(foxtrot, verify);
            report['text'] = verify;
            context[1] = report;
            report = {};
            verify = 21;
            verify = oscar[verify];
            verify = yankee.bind(tango)(verify);
            report['imageSource'] = verify;
            verify = oscar[update];
            verify = options.bind(tango)(verify);
            yankee = verify.intl;
            verify = yankee.format;
            oscar = oscar[update];
            oscar = options.bind(tango)(oscar);
            oscar = oscar.t;
            options = oscar.wjSaJS;
            oscar = {};
            oscar = verify.bind(yankee)(options, oscar);
            report['text'] = oscar;
            context[2] = report;
            report = global;
            oscar = report.Math;
            report = oscar.round;
            options = variable36.price;
            zulu = zulu.price;
            zulu = options / zulu;
            golf = golf - zulu;
            zulu = 100;
            zulu = zulu * golf;
            echo = report.bind(oscar)(zulu);
            foxtrot = mike;
            if(foxtrot) { _fun00002_ip = 667; continue _fun00001 }
 664:
            foxtrot = entity;
 667:
            zulu = _closure1_slot14;
            mike = _closure1_slot5;
            entity = {};
            oscar = result.container;
            report = new Array(2);
            report[0] = oscar;
            oscar = {};
            oscar['backgroundColor'] = offset;
            report[1] = oscar;
            entity['style'] = report;
            golf = _closure1_slot14;
            oscar = _closure1_slot6;
            report = {};
            options = result.wrapper;
            report['style'] = options;
            sizing = _closure1_slot13;
            yankee = _closure1_slot1;
            kilo = _closure1_slot2;
            options = 22;
            options = kilo[options];
            verify = yankee.bind(tango)(options);
            options = {};
            output = _closure1_slot9;
            output = output.TIER_0;
            options['premiumType'] = output;
            verify = sizing.bind(tango)(verify, options);
            options = new Array(2);
            options[0] = verify;
            vacuum = _closure1_slot14;
            output = _closure1_slot5;
            verify = {};
            sizing = result.contentContainer;
            verify['style'] = sizing;
            record = _closure1_slot14;
            config = _closure1_slot5;
            sequence = {};
            sizing = result.header;
            sequence['style'] = sizing;
            status = _closure1_slot13;
            sizing = _closure1_slot0;
            papa = 11;
            papa = kilo[papa];
            papa = sizing.bind(tango)(papa);
            target = papa.Text;
            papa = {};
            sierra = 'heading-lg/semibold';
            papa['variant'] = sierra;
            sierra = result.title;
            papa['style'] = sierra;
            sierra = kilo[update];
            sierra = sizing.bind(tango)(sierra);
            whiskey = sierra.intl;
            lima = whiskey.string;
            sierra = kilo[update];
            sierra = sizing.bind(tango)(sierra);
            sierra = sierra.t;
            sierra = sierra.GyVyzM;
            sierra = lima.bind(whiskey)(sierra);
            papa['children'] = sierra;
            target = status.bind(tango)(target, papa);
            papa = new Array(2);
            papa[0] = target;
            sierra = _closure1_slot13;
            target = 23;
            target = kilo[target];
            target = sizing.bind(tango)(target);
            status = target.TextWithIOSLinkWorkaround;
            target = {};
            lima = 'text-sm/medium';
            target['variant'] = lima;
            lima = result.subtitle;
            target['style'] = lima;
            lima = kilo[update];
            lima = sizing.bind(tango)(lima);
            quebec = lima.intl;
            equality = quebec.format;
            lima = kilo[update];
            lima = sizing.bind(tango)(lima);
            lima = lima.t;
            whiskey = lima./6ZMws;
            lima = {};
            variable37 = 24;
            variable37 = kilo[variable37];
            variable39 = yankee.bind(tango)(variable37);
            variable38 = variable39.getArticleURL;
            variable37 = _closure1_slot12;
            variable37 = variable37.PREMIUM_DETAILS;
            variable37 = variable38.bind(variable39)(variable37);
            lima['helpCenterLink'] = variable37;
            variable36 = variable36.priceString;
            lima['monthlyPrice'] = variable36;
            lima = equality.bind(quebec)(whiskey, lima);
            target['children'] = lima;
            target = sierra.bind(tango)(status, target);
            papa[1] = target;
            sequence['children'] = papa;
            config = record.bind(tango)(config, sequence);
            sequence = new Array(3);
            sequence[0] = config;
            record = context.map;
            config = function(argFoo, argBar) {
                report = _closure1_slot13;
                tango = _closure1_slot17;
                zulu = {};
                golf = argFoo;
                options = zulu;
                entity = copyDataProperties(options, golf);
                mike = undefined;
                entity = argBar;
                entity = report.bind(mike)(tango, zulu, entity);
                return entity;
            };
            config = record.bind(context)(config);
            sequence[1] = config;
            context = _closure1_slot13;
            config = 25;
            config = kilo[config];
            record = yankee.bind(tango)(config);
            config = {};
            papa = result.planTable;
            config['style'] = papa;
            papa = true;
            config['highlightNitroBasic'] = papa;
            config = context.bind(tango)(record, config);
            sequence[2] = config;
            verify['children'] = sequence;
            verify = vacuum.bind(tango)(output, verify);
            options[1] = verify;
            report['children'] = options;
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot14;
            oscar = 26;
            oscar = kilo[oscar];
            golf = yankee.bind(tango)(oscar);
            oscar = {};
            verify = result.footer;
            oscar['style'] = verify;
            verify = 27;
            verify = kilo[verify];
            output = sizing.bind(tango)(verify);
            verify = output.hexWithOpacity;
            output = verify.bind(output)(offset, source);
            verify = new Array(2);
            verify[0] = output;
            verify[1] = offset;
            oscar['colors'] = verify;
            verify = [0, 0.25];
            oscar['locations'] = verify;
            source = _closure1_slot13;
            offset = 28;
            verify = kilo[offset];
            output = yankee.bind(tango)(verify);
            verify = {};
            vacuum = kilo[offset];
            vacuum = sizing.bind(tango)(vacuum);
            vacuum = vacuum.ButtonColors;
            vacuum = vacuum.RED;
            verify['color'] = vacuum;
            vacuum = result.button;
            verify['style'] = vacuum;
            vacuum = kilo[update];
            vacuum = sizing.bind(tango)(vacuum);
            config = vacuum.intl;
            sequence = config.string;
            vacuum = kilo[update];
            vacuum = sizing.bind(tango)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.iz+o7u;
            vacuum = sequence.bind(config)(vacuum);
            verify['text'] = vacuum;
            verify['onPress'] = control;
            verify['disabled'] = foxtrot;
            output = source.bind(tango)(output, verify);
            verify = new Array(2);
            verify[0] = output;
            romeo = _closure1_slot13;
            offset = kilo[offset];
            yankee = yankee.bind(tango)(offset);
            offset = {};
            source = result.button;
            output = new Array(2);
            output[0] = source;
            result = result.buttonContinue;
            output[1] = result;
            offset['style'] = output;
            output = kilo[update];
            output = sizing.bind(tango)(output);
            result = output.intl;
            output = result.formatToPlainString;
            kilo = kilo[update];
            kilo = sizing.bind(tango)(kilo);
            kilo = kilo.t;
            sizing = kilo.nHxo8f;
            kilo = {};
            kilo['percentSavings'] = echo;
            kilo = output.bind(result)(sizing, kilo);
            offset['text'] = kilo;
            backup = function() { // Original name: onPress
                zulu = _closure1_slot1;
                oscar = _closure1_slot2;
                entity = 29;
                mike = oscar[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                mike = report.pop;
                mike = mike.bind(report)();
                report = {};
                mike = _closure1_slot11;
                mike = mike.PREMIUM_DOWNGRADE_TO_TIER_0_MODAL;
                report['page'] = mike;
                mike = _closure1_slot10;
                mike = mike.BUY;
                report['objectType'] = mike;
                mike = 30;
                mike = oscar[mike];
                zulu = zulu.bind(entity)(mike);
                mike = {};
                mike['analyticsLocation'] = report;
                report = _closure2_slot0;
                mike['analyticsLocations'] = report;
                tango = _closure1_slot9;
                tango = tango.TIER_0;
                mike['premiumType'] = tango;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            offset['onPress'] = backup;
            offset['disabled'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot18 = entity;
    entity = function(argFoo, argBar) { // Original name: getScreens
        entity = argFoo;
        var _closure2_slot0 = entity;
        entity = {};
        mike = {};
        tango = '';
        mike['title'] = tango;
        oscar = _closure1_slot0;
        report = _closure1_slot2;
        tango = 31;
        report = report[tango];
        tango = undefined;
        oscar = oscar.bind(tango)(report);
        report = oscar.getHeaderCloseButton;
        tango = argBar;
        tango = report.bind(oscar)(tango);
        mike['headerLeft'] = tango;
        zulu = function() { // Original name: render
            tango = _closure1_slot13;
            zulu = _closure1_slot18;
            mike = {};
            report = _closure2_slot0;
            oscar = mike;
            entity = copyDataProperties(oscar, report);
            entity = undefined;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        mike['render'] = zulu;
        entity['PremiumPlanDowngradeToTier0Modal'] = mike;
        return entity;
    };
    var _closure1_slot19 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    tango = tango.ScrollView;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.usePremiumPlanSelectStore;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.PremiumTypes;
    var _closure1_slot9 = golf;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.AnalyticsObjectTypes;
    var _closure1_slot10 = options;
    options = tango.AnalyticsPages;
    var _closure1_slot11 = options;
    tango = tango.HelpdeskArticles;
    var _closure1_slot12 = tango;
    tango = 7;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot13 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot14 = tango;
    tango = {};
    verify = golf.TIER_0;
    romeo = 8;
    options = oscar[romeo];
    options = report.bind(entity)(options);
    options = options.ProductIds;
    options = options.PREMIUM_TIER_0_MONTHLY;
    tango[verify] = options;
    verify = golf.TIER_1;
    options = oscar[romeo];
    options = report.bind(entity)(options);
    options = options.ProductIds;
    options = options.PREMIUM_TIER_1_MONTHLY;
    tango[verify] = options;
    options = golf.TIER_2;
    golf = oscar[romeo];
    golf = report.bind(entity)(golf);
    golf = golf.ProductIds;
    golf = golf.PREMIUM_TIER_2_MONTHLY;
    tango[options] = golf;
    var _closure1_slot15 = tango;
    tango = 9;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'height': '100%', 'width': '100%'};
    tango['container'] = verify;
    verify = {'flex': 1, 'marginBottom': 4294967226};
    tango['wrapper'] = verify;
    foxtrot = 'center';
    verify = {'display': 'flex', 'alignItems': 'center', 'paddingHorizontal': 16, 'paddingBottom': 70};
    tango['contentContainer'] = verify;
    verify = {'marginTop': 14, 'marginBottom': 24};
    tango['header'] = verify;
    verify = {};
    offset = 10;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_PRIMARY;
    verify['color'] = backup;
    verify['textAlign'] = foxtrot;
    tango['title'] = verify;
    verify = {'marginTop': 4, 'color': null, 'textAlign': 'center'};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.HEADER_PRIMARY;
    verify['color'] = foxtrot;
    tango['subtitle'] = verify;
    verify = {'marginBottom': 8, 'borderRadius': null, 'display': 'flex', 'flexDirection': 'column', 'justifyContent': 'center', 'alignItems': 'center', 'backgroundColor': null, 'paddingTop': 16, 'paddingHorizontal': 64, 'height': 200, 'width': '100%', 'maxWidth': 344, 'overflow': 'hidden', 'position': 'relative'};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    verify['borderRadius'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = foxtrot;
    tango['perkCard'] = verify;
    verify = {'position': 'absolute', 'bottom': 0};
    tango['perkCardImage'] = verify;
    verify = {'position': 'absolute', 'top': 24, 'textAlign': 'center'};
    tango['perkCardText'] = verify;
    verify = {'marginTop': 32, 'maxWidth': 600};
    tango['planTable'] = verify;
    verify = {'paddingTop': 24, 'paddingBottom': 24, 'paddingHorizontal': 16};
    tango['footer'] = verify;
    verify = {};
    verify['marginBottom'] = romeo;
    tango['button'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_ACCENT;
    verify['backgroundColor'] = offset;
    tango['buttonContinue'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot16 = tango;
    tango = function(argFoo) { // Original name: PerkCard
        entity = argFoo;
        yankee = entity.imageSource;
        foxtrot = entity.text;
        offset = entity.position;
        entity = _closure1_slot16;
        tango = undefined;
        verify = entity.bind(tango)();
        zulu = _closure1_slot14;
        mike = _closure1_slot5;
        entity = {};
        report = verify.perkCard;
        entity['style'] = report;
        options = _closure1_slot13;
        golf = _closure1_slot0;
        romeo = _closure1_slot2;
        report = 11;
        report = romeo[report];
        report = golf.bind(tango)(report);
        golf = report.Text;
        report = {};
        backup = 'heading-md/medium';
        report['variant'] = backup;
        backup = verify.perkCardText;
        report['style'] = backup;
        report['children'] = foxtrot;
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        options = _closure1_slot13;
        golf = _closure1_slot1;
        oscar = 12;
        oscar = romeo[oscar];
        golf = golf.bind(tango)(oscar);
        oscar = {};
        oscar['source'] = yankee;
        yankee = verify.perkCardImage;
        verify = new Array(2);
        verify[0] = yankee;
        verify[1] = offset;
        oscar['style'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot17 = tango;
    tango = 34;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/premium/native/PremiumPlanDowngradeToTier0Modal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: PremiumPlanDowngradeToTier0Modal
        golf = argFoo;
        options = golf.subscription;
        var _closure2_slot0 = options;
        oscar = golf.analyticsLocations;
        var _closure2_slot1 = oscar;
        tango = _closure1_slot4;
        zulu = tango.useCallback;
        mike = new Array(2);
        mike[0] = options;
        mike[1] = oscar;
        entity = function() {
            verify = _closure1_slot0;
            tango = _closure1_slot2;
            golf = 32;
            zulu = tango[golf];
            entity = undefined;
            oscar = verify.bind(entity)(zulu);
            report = oscar.trackPremiumSubscriptionCancellationFlowStep;
            zulu = {};
            offset = _closure2_slot0;
            zulu['subscription'] = offset;
            options = _closure2_slot1;
            zulu['analyticsLocations'] = options;
            options = tango[golf];
            options = verify.bind(entity)(options);
            options = options.STEP_ANALYTICS_NAMES;
            golf = tango[golf];
            golf = verify.bind(entity)(golf);
            golf = golf.CancellationFlowSteps;
            golf = golf.DOWNGRADE_TO_TIER_0;
            golf = options[golf];
            zulu['fromStep'] = golf;
            golf = null;
            zulu['toStep'] = golf;
            zulu = report.bind(oscar)(zulu);
            zulu = _closure1_slot1;
            mike = 29;
            mike = tango[mike];
            zulu = zulu.bind(entity)(mike);
            mike = zulu.pop;
            mike = mike.bind(zulu)();
            return entity;
        };
        oscar = zulu.bind(tango)(entity, mike);
        tango = _closure1_slot13;
        mike = _closure1_slot0;
        zulu = _closure1_slot2;
        entity = 33;
        entity = zulu[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.Navigator;
        entity = {};
        options = 'PremiumPlanDowngradeToTier0Modal';
        entity['initialRouteName'] = options;
        report = _closure1_slot19;
        report = report.bind(zulu)(golf, oscar);
        entity['screens'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();