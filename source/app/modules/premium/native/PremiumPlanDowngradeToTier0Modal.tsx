// app/modules/premium/native/PremiumPlanDowngradeToTier0Modal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: PremiumPlanDowngradeToTier0
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.analyticsLocations;
            var _closure2_slot0 = michal;
            michal = entity.currentPremiumType;
            ctrled = entity.continueToCancel;
            tangon = undefined;
            var _closure2_slot1 = tangon;
            var _closure2_slot2 = tangon;
            entity = _closure1_slot16;
            result = entity.bind(tangon)();
            zuuluu = _closure1_slot1;
            oscard = _closure1_slot2;
            entity = 13;
            entity = oscard[entity];
            entity = zuuluu.bind(tangon)(entity);
            report = entity.bind(tangon)();
            zuuluu = _closure1_slot0;
            entity = 14;
            entity = oscard[entity];
            zuuluu = zuuluu.bind(tangon)(entity);
            entity = zuuluu.isThemeDark;
            zuuluu = entity.bind(zuuluu)(report);
            report = _closure1_slot1;
            oscard = _closure1_slot2;
            entity = 10;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.unsafe_rawColors;
            if(zuuluu) { _fun00002_ip = 135; continue _fun00001 }
 127:
            offset = entity.PRIMARY_100;
            _fun00002_ip = 141; continue _fun00001;
 135:
            offset = entity.PRIMARY_600;
 141:
            zuuluu = _closure1_slot15;
            entity = _closure1_slot9;
            entity = entity.TIER_0;
            entity = zuuluu[entity];
            _closure2_slot1 = entity;
            entity = _closure1_slot15;
            entity = entity[michal];
            _closure2_slot2 = entity;
            michal = _closure1_slot8;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.isPurchasing;
                return entity;
            };
            michal = michal.bind(tangon)(entity);
            option = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 15;
            entity = oscard[entity];
            golfie = option.bind(tangon)(entity);
            report = golfie.useStateFromStoresArray;
            entity = _closure1_slot7;
            zuuluu = new Array(1);
            zuuluu[0] = entity;
            entity = function() {
                report = _closure1_slot7;
                tangon = report.getProduct;
                entity = _closure2_slot1;
                tangon = tangon.bind(report)(entity);
                entity = new Array(3);
                entity[0] = tangon;
                report = _closure1_slot7;
                tangon = report.getProduct;
                zuuluu = _closure2_slot2;
                zuuluu = tangon.bind(report)(zuuluu);
                entity[1] = zuuluu;
                zuuluu = _closure1_slot7;
                michal = zuuluu.isBusy;
                michal = michal.bind(zuuluu)();
                entity[2] = michal;
                return entity;
            };
            report = report.bind(golfie)(zuuluu, entity);
            zuuluu = _closure1_slot3;
            entity = 3;
            report = zuuluu.bind(tangon)(report, entity);
            source = 0;
            variable36 = report[source];
            golfie = 1;
            zuuluu = report[golfie];
            entity = 2;
            entity = report[entity];
            yankee = _closure1_slot1;
            verify = 16;
            report = oscard[verify];
            sizing = yankee.bind(tangon)(report);
            report = null;
            kiloes = report != variable36;
            foxtra = 'target product does not exist';
            foxtra = sizing.bind(tangon)(kiloes, foxtra);
            verify = oscard[verify];
            foxtra = yankee.bind(tangon)(verify);
            verify = report != zuuluu;
            report = 'current product does not exist';
            report = foxtra.bind(tangon)(verify, report);
            report = 17;
            report = oscard[report];
            foxtra = option.bind(tangon)(report);
            verify = foxtra.getMaxFileSizeForPremiumType;
            report = _closure1_slot9;
            report = report.TIER_0;
            output = verify.bind(foxtra)(report);
            report = {};
            verify = 18;
            verify = oscard[verify];
            verify = yankee.bind(tangon)(verify);
            report['imageSource'] = verify;
            update = 19;
            verify = oscard[update];
            verify = option.bind(tangon)(verify);
            sizing = verify.intl;
            kiloes = sizing.format;
            verify = oscard[update];
            verify = option.bind(tangon)(verify);
            verify = verify.t;
            foxtra = verify.nfwgzM;
            verify = {};
            verify = kiloes.bind(sizing)(foxtra, verify);
            report['text'] = verify;
            verify = {};
            verify['right'] = source;
            report['position'] = verify;
            cntext = new Array(3);
            cntext[0] = report;
            report = {};
            verify = 20;
            verify = oscard[verify];
            verify = yankee.bind(tangon)(verify);
            report['imageSource'] = verify;
            verify = oscard[update];
            verify = option.bind(tangon)(verify);
            sizing = verify.intl;
            kiloes = sizing.format;
            verify = oscard[update];
            verify = option.bind(tangon)(verify);
            verify = verify.t;
            foxtra = verify.U5fRtr;
            verify = {};
            verify['tier0MaxFileSize'] = output;
            verify = kiloes.bind(sizing)(foxtra, verify);
            report['text'] = verify;
            cntext[1] = report;
            report = {};
            verify = 21;
            verify = oscard[verify];
            verify = yankee.bind(tangon)(verify);
            report['imageSource'] = verify;
            verify = oscard[update];
            verify = option.bind(tangon)(verify);
            yankee = verify.intl;
            verify = yankee.format;
            oscard = oscard[update];
            oscard = option.bind(tangon)(oscard);
            oscard = oscard.t;
            option = oscard.wjSaJS;
            oscard = {};
            oscard = verify.bind(yankee)(option, oscard);
            report['text'] = oscard;
            cntext[2] = report;
            report = global;
            oscard = report.Math;
            report = oscard.round;
            option = variable36.price;
            zuuluu = zuuluu.price;
            zuuluu = option / zuuluu;
            golfie = golfie - zuuluu;
            zuuluu = 100;
            zuuluu = zuuluu * golfie;
            echoed = report.bind(oscard)(zuuluu);
            foxtra = michal;
            if(foxtra) { _fun00002_ip = 669; continue _fun00001 }
 666:
            foxtra = entity;
 669:
            zuuluu = _closure1_slot14;
            michal = _closure1_slot5;
            entity = {};
            oscard = result.container;
            report = new Array(2);
            report[0] = oscard;
            oscard = {};
            oscard['backgroundColor'] = offset;
            report[1] = oscard;
            entity['style'] = report;
            golfie = _closure1_slot14;
            oscard = _closure1_slot6;
            report = {};
            option = result.wrapper;
            report['style'] = option;
            sizing = _closure1_slot13;
            yankee = _closure1_slot1;
            kiloes = _closure1_slot2;
            option = 22;
            option = kiloes[option];
            verify = yankee.bind(tangon)(option);
            option = {};
            output = _closure1_slot9;
            output = output.TIER_0;
            option['premiumType'] = output;
            verify = sizing.bind(tangon)(verify, option);
            option = new Array(2);
            option[0] = verify;
            vacuum = _closure1_slot14;
            output = _closure1_slot5;
            verify = {};
            sizing = result.contentContainer;
            verify['style'] = sizing;
            record = _closure1_slot14;
            config = _closure1_slot5;
            sequen = {};
            sizing = result.header;
            sequen['style'] = sizing;
            status = _closure1_slot13;
            sizing = _closure1_slot0;
            papara = 11;
            papara = kiloes[papara];
            papara = sizing.bind(tangon)(papara);
            target = papara.Text;
            papara = {};
            sierra = 'heading-lg/semibold';
            papara['variant'] = sierra;
            sierra = result.title;
            papara['style'] = sierra;
            sierra = kiloes[update];
            sierra = sizing.bind(tangon)(sierra);
            whisks = sierra.intl;
            limora = whisks.string;
            sierra = kiloes[update];
            sierra = sizing.bind(tangon)(sierra);
            sierra = sierra.t;
            sierra = sierra.GyVyzM;
            sierra = limora.bind(whisks)(sierra);
            papara['children'] = sierra;
            target = status.bind(tangon)(target, papara);
            papara = new Array(2);
            papara[0] = target;
            sierra = _closure1_slot13;
            target = 23;
            target = kiloes[target];
            target = sizing.bind(tangon)(target);
            status = target.TextWithIOSLinkWorkaround;
            target = {};
            limora = 'text-sm/medium';
            target['variant'] = limora;
            limora = result.subtitle;
            target['style'] = limora;
            limora = kiloes[update];
            limora = sizing.bind(tangon)(limora);
            quebec = limora.intl;
            equals = quebec.format;
            limora = kiloes[update];
            limora = sizing.bind(tangon)(limora);
            limora = limora.t;
            whisks = limora./6ZMws;
            limora = {};
            variable37 = 24;
            variable37 = kiloes[variable37];
            variable39 = yankee.bind(tangon)(variable37);
            variable38 = variable39.getArticleURL;
            variable37 = _closure1_slot12;
            variable37 = variable37.PREMIUM_DETAILS;
            variable37 = variable38.bind(variable39)(variable37);
            limora['helpCenterLink'] = variable37;
            variable36 = variable36.priceString;
            limora['monthlyPrice'] = variable36;
            limora = equals.bind(quebec)(whisks, limora);
            target['children'] = limora;
            target = sierra.bind(tangon)(status, target);
            papara[1] = target;
            sequen['children'] = papara;
            config = record.bind(tangon)(config, sequen);
            sequen = new Array(3);
            sequen[0] = config;
            record = cntext.map;
            config = function(argFoo, argBar) {
                report = _closure1_slot13;
                tangon = _closure1_slot17;
                zuuluu = {};
                golfie = argFoo;
                option = zuuluu;
                entity = copyDataProperties(option, golfie);
                michal = undefined;
                entity = argBar;
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            };
            config = record.bind(cntext)(config);
            sequen[1] = config;
            cntext = _closure1_slot13;
            config = 25;
            config = kiloes[config];
            record = yankee.bind(tangon)(config);
            config = {};
            papara = result.planTable;
            config['style'] = papara;
            papara = true;
            config['highlightNitroBasic'] = papara;
            config = cntext.bind(tangon)(record, config);
            sequen[2] = config;
            verify['children'] = sequen;
            verify = vacuum.bind(tangon)(output, verify);
            option[1] = verify;
            report['children'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot14;
            oscard = 26;
            oscard = kiloes[oscard];
            golfie = yankee.bind(tangon)(oscard);
            oscard = {};
            verify = result.footer;
            oscard['style'] = verify;
            verify = 27;
            verify = kiloes[verify];
            output = sizing.bind(tangon)(verify);
            verify = output.hexWithOpacity;
            output = verify.bind(output)(offset, source);
            verify = new Array(2);
            verify[0] = output;
            verify[1] = offset;
            oscard['colors'] = verify;
            verify = [0, 0.25];
            oscard['locations'] = verify;
            source = _closure1_slot13;
            offset = 28;
            verify = kiloes[offset];
            output = yankee.bind(tangon)(verify);
            verify = {};
            vacuum = kiloes[offset];
            vacuum = sizing.bind(tangon)(vacuum);
            vacuum = vacuum.ButtonColors;
            vacuum = vacuum.RED;
            verify['color'] = vacuum;
            vacuum = result.button;
            verify['style'] = vacuum;
            vacuum = kiloes[update];
            vacuum = sizing.bind(tangon)(vacuum);
            config = vacuum.intl;
            sequen = config.string;
            vacuum = kiloes[update];
            vacuum = sizing.bind(tangon)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.iz+o7u;
            vacuum = sequen.bind(config)(vacuum);
            verify['text'] = vacuum;
            verify['onPress'] = ctrled;
            verify['disabled'] = foxtra;
            output = source.bind(tangon)(output, verify);
            verify = new Array(2);
            verify[0] = output;
            romeon = _closure1_slot13;
            offset = kiloes[offset];
            yankee = yankee.bind(tangon)(offset);
            offset = {};
            source = result.button;
            output = new Array(2);
            output[0] = source;
            result = result.buttonContinue;
            output[1] = result;
            offset['style'] = output;
            output = kiloes[update];
            output = sizing.bind(tangon)(output);
            result = output.intl;
            output = result.formatToPlainString;
            kiloes = kiloes[update];
            kiloes = sizing.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            sizing = kiloes.nHxo8f;
            kiloes = {};
            kiloes['percentSavings'] = echoed;
            kiloes = output.bind(result)(sizing, kiloes);
            offset['text'] = kiloes;
            backup = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                oscard = _closure1_slot2;
                entity = 29;
                michal = oscard[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                michal = report.pop;
                michal = michal.bind(report)();
                report = {};
                michal = _closure1_slot11;
                michal = michal.PREMIUM_DOWNGRADE_TO_TIER_0_MODAL;
                report['page'] = michal;
                michal = _closure1_slot10;
                michal = michal.BUY;
                report['objectType'] = michal;
                michal = 30;
                michal = oscard[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = {};
                michal['analyticsLocation'] = report;
                report = _closure2_slot0;
                michal['analyticsLocations'] = report;
                tangon = _closure1_slot9;
                tangon = tangon.TIER_0;
                michal['premiumType'] = tangon;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            offset['onPress'] = backup;
            offset['disabled'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot18 = entity;
    entity = function(argFoo, argBar) { // Original name: getScreens
        entity = argFoo;
        var _closure2_slot0 = entity;
        entity = {};
        michal = {};
        tangon = '';
        michal['title'] = tangon;
        oscard = _closure1_slot0;
        report = _closure1_slot2;
        tangon = 31;
        report = report[tangon];
        tangon = undefined;
        oscard = oscard.bind(tangon)(report);
        report = oscard.getHeaderCloseButton;
        tangon = argBar;
        tangon = report.bind(oscard)(tangon);
        michal['headerLeft'] = tangon;
        zuuluu = function() { // Original name: render
            tangon = _closure1_slot13;
            zuuluu = _closure1_slot18;
            michal = {};
            report = _closure2_slot0;
            oscard = michal;
            entity = copyDataProperties(oscard, report);
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        };
        michal['render'] = zuuluu;
        entity['PremiumPlanDowngradeToTier0Modal'] = michal;
        return entity;
    };
    var _closure1_slot19 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.usePremiumPlanSelectStore;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.PremiumTypes;
    var _closure1_slot9 = golfie;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.AnalyticsObjectTypes;
    var _closure1_slot10 = option;
    option = tangon.AnalyticsPages;
    var _closure1_slot11 = option;
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot12 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot13 = option;
    tangon = tangon.jsxs;
    var _closure1_slot14 = tangon;
    tangon = {};
    verify = golfie.TIER_0;
    romeon = 8;
    option = oscard[romeon];
    option = report.bind(entity)(option);
    option = option.ProductIds;
    option = option.PREMIUM_TIER_0_MONTHLY;
    tangon[verify] = option;
    verify = golfie.TIER_1;
    option = oscard[romeon];
    option = report.bind(entity)(option);
    option = option.ProductIds;
    option = option.PREMIUM_TIER_1_MONTHLY;
    tangon[verify] = option;
    option = golfie.TIER_2;
    golfie = oscard[romeon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.ProductIds;
    golfie = golfie.PREMIUM_TIER_2_MONTHLY;
    tangon[option] = golfie;
    var _closure1_slot15 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'height': '100%', 'width': '100%'};
    tangon['container'] = verify;
    verify = {'flex': 1, 'marginBottom': 4294967226};
    tangon['wrapper'] = verify;
    foxtra = 'center';
    verify = {'display': 'flex', 'alignItems': 'center', 'paddingHorizontal': 16, 'paddingBottom': 70};
    tangon['contentContainer'] = verify;
    verify = {'marginTop': 14, 'marginBottom': 24};
    tangon['header'] = verify;
    verify = {};
    offset = 10;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_PRIMARY;
    verify['color'] = backup;
    verify['textAlign'] = foxtra;
    tangon['title'] = verify;
    verify = {'marginTop': 4, 'color': null, 'textAlign': 'center'};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.HEADER_PRIMARY;
    verify['color'] = foxtra;
    tangon['subtitle'] = verify;
    verify = {'marginBottom': 8, 'borderRadius': null, 'display': 'flex', 'flexDirection': 'column', 'justifyContent': 'center', 'alignItems': 'center', 'backgroundColor': null, 'paddingTop': 16, 'paddingHorizontal': 64, 'height': 200, 'width': '100%', 'maxWidth': 344, 'overflow': 'hidden', 'position': 'relative'};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    verify['borderRadius'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = foxtra;
    tangon['perkCard'] = verify;
    verify = {'position': 'absolute', 'bottom': 0};
    tangon['perkCardImage'] = verify;
    verify = {'position': 'absolute', 'top': 24, 'textAlign': 'center'};
    tangon['perkCardText'] = verify;
    verify = {'marginTop': 32, 'maxWidth': 600};
    tangon['planTable'] = verify;
    verify = {'paddingTop': 24, 'paddingBottom': 24, 'paddingHorizontal': 16};
    tangon['footer'] = verify;
    verify = {};
    verify['marginBottom'] = romeon;
    tangon['button'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_ACCENT;
    verify['backgroundColor'] = offset;
    tangon['buttonContinue'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot16 = tangon;
    tangon = function(argFoo) { // Original name: PerkCard
        entity = argFoo;
        yankee = entity.imageSource;
        foxtra = entity.text;
        offset = entity.position;
        entity = _closure1_slot16;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot14;
        michal = _closure1_slot5;
        entity = {};
        report = verify.perkCard;
        entity['style'] = report;
        option = _closure1_slot13;
        golfie = _closure1_slot0;
        romeon = _closure1_slot2;
        report = 11;
        report = romeon[report];
        report = golfie.bind(tangon)(report);
        golfie = report.Text;
        report = {};
        backup = 'heading-md/medium';
        report['variant'] = backup;
        backup = verify.perkCardText;
        report['style'] = backup;
        report['children'] = foxtra;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        option = _closure1_slot13;
        golfie = _closure1_slot1;
        oscard = 12;
        oscard = romeon[oscard];
        golfie = golfie.bind(tangon)(oscard);
        oscard = {};
        oscard['source'] = yankee;
        yankee = verify.perkCardImage;
        verify = new Array(2);
        verify[0] = yankee;
        verify[1] = offset;
        oscard['style'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot17 = tangon;
    tangon = 34;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/native/PremiumPlanDowngradeToTier0Modal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: PremiumPlanDowngradeToTier0Modal
        golfie = argFoo;
        option = golfie.subscription;
        var _closure2_slot0 = option;
        oscard = golfie.analyticsLocations;
        var _closure2_slot1 = oscard;
        tangon = _closure1_slot4;
        zuuluu = tangon.useCallback;
        michal = new Array(2);
        michal[0] = option;
        michal[1] = oscard;
        entity = function() {
            verify = _closure1_slot0;
            tangon = _closure1_slot2;
            golfie = 32;
            zuuluu = tangon[golfie];
            entity = undefined;
            oscard = verify.bind(entity)(zuuluu);
            report = oscard.trackPremiumSubscriptionCancellationFlowStep;
            zuuluu = {};
            offset = _closure2_slot0;
            zuuluu['subscription'] = offset;
            option = _closure2_slot1;
            zuuluu['analyticsLocations'] = option;
            option = tangon[golfie];
            option = verify.bind(entity)(option);
            option = option.STEP_ANALYTICS_NAMES;
            golfie = tangon[golfie];
            golfie = verify.bind(entity)(golfie);
            golfie = golfie.CancellationFlowSteps;
            golfie = golfie.DOWNGRADE_TO_TIER_0;
            golfie = option[golfie];
            zuuluu['fromStep'] = golfie;
            golfie = null;
            zuuluu['toStep'] = golfie;
            zuuluu = report.bind(oscard)(zuuluu);
            zuuluu = _closure1_slot1;
            michal = 29;
            michal = tangon[michal];
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.pop;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        oscard = zuuluu.bind(tangon)(entity, michal);
        tangon = _closure1_slot13;
        michal = _closure1_slot0;
        zuuluu = _closure1_slot2;
        entity = 33;
        entity = zuuluu[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.Navigator;
        entity = {};
        option = 'PremiumPlanDowngradeToTier0Modal';
        entity['initialRouteName'] = option;
        report = _closure1_slot19;
        report = report.bind(zuuluu)(golfie, oscard);
        entity['screens'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();