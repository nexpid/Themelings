// app/modules/premium/native/gifting/PremiumGiftingPromotionSuccessActions.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'row';
    verify['flexDirection'] = offset;
    offset = 4;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['gap'] = offset;
    tangon['container'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/native/gifting/PremiumGiftingPromotionSuccessActions.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: PremiumGiftingPromotionSuccessActions
        michal = argFoo;
        option = michal.purchase;
        var _closure2_slot0 = option;
        golfie = michal.asset;
        michal = _closure1_slot7;
        tangon = undefined;
        report = michal.bind(tangon)();
        oscard = _closure1_slot3;
        zuuluu = oscard.useCallback;
        michal = new Array(1);
        michal[0] = option;
        entity = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 5;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.open;
            michal = {};
            report = _closure2_slot0;
            michal['product'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        verify = zuuluu.bind(oscard)(entity, michal);
        zuuluu = _closure1_slot6;
        michal = _closure1_slot4;
        entity = {};
        report = report.container;
        entity['style'] = report;
        option = _closure1_slot5;
        oscard = _closure1_slot1;
        foxtra = _closure1_slot2;
        report = 6;
        report = foxtra[report];
        oscard = oscard.bind(tangon)(report);
        report = {};
        romeon = _closure1_slot0;
        offset = 7;
        offset = foxtra[offset];
        offset = romeon.bind(tangon)(offset);
        offset = offset.AvatarSizes;
        offset = offset.NORMAL;
        report['size'] = offset;
        report['asset'] = golfie;
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = 8;
        oscard = foxtra[oscard];
        oscard = romeon.bind(tangon)(oscard);
        golfie = oscard.Button;
        oscard = {};
        offset = true;
        oscard['grow'] = offset;
        oscard['onPress'] = verify;
        verify = 9;
        offset = foxtra[verify];
        offset = romeon.bind(tangon)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtra[verify];
        verify = romeon.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.kMYVws;
        verify = offset.bind(yankee)(verify);
        oscard['text'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();