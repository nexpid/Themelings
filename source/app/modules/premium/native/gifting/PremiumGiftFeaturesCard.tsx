// app/modules/premium/native/gifting/PremiumGiftFeaturesCard.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.PremiumTypes;
    var _closure1_slot4 = option;
    tangon = tangon.SubscriptionIntervalTypes;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fonts;
    var _closure1_slot6 = tangon;
    tangon = 4;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot7 = option;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.Fragment;
    var _closure1_slot8 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tangon = argFoo;
            entity = {};
            michal = {};
            zuuluu = 'hidden';
            michal['overflow'] = zuuluu;
            entity['promotional'] = michal;
            michal = {};
            zuuluu = 'flex-start';
            michal['justifyContent'] = zuuluu;
            entity['card'] = michal;
            michal = {};
            oscard = _closure1_slot1;
            zuuluu = _closure1_slot2;
            option = 6;
            verify = zuuluu[option];
            golfie = undefined;
            verify = oscard.bind(golfie)(verify);
            verify = verify.spacing;
            verify = verify.PX_40;
            michal['marginTop'] = verify;
            verify = zuuluu[option];
            verify = oscard.bind(golfie)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['marginStart'] = verify;
            entity['logo'] = michal;
            michal = {};
            verify = zuuluu[option];
            verify = oscard.bind(golfie)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['marginTop'] = verify;
            entity['promotionalLogo'] = michal;
            michal = {};
            verify = zuuluu[option];
            verify = oscard.bind(golfie)(verify);
            verify = verify.spacing;
            verify = verify.PX_32;
            michal['marginTop'] = verify;
            entity['promotionalLogoSingleLine'] = michal;
            michal = {};
            verify = 140;
            michal['maxWidth'] = verify;
            verify = zuuluu[option];
            verify = oscard.bind(golfie)(verify);
            verify = verify.spacing;
            verify = verify.PX_8;
            michal['marginTop'] = verify;
            verify = zuuluu[option];
            verify = oscard.bind(golfie)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['marginStart'] = verify;
            entity['pricing'] = michal;
            michal = {};
            verify = zuuluu[option];
            verify = oscard.bind(golfie)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['marginTop'] = verify;
            verify = zuuluu[option];
            verify = oscard.bind(golfie)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['marginStart'] = verify;
            entity['featureTitle'] = michal;
            michal = {};
            verify = zuuluu[option];
            verify = oscard.bind(golfie)(verify);
            verify = verify.spacing;
            verify = verify.PX_8;
            michal['marginTop'] = verify;
            verify = zuuluu[option];
            verify = oscard.bind(golfie)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['marginHorizontal'] = verify;
            entity['features'] = michal;
            michal = {};
            verify = zuuluu[option];
            verify = oscard.bind(golfie)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['marginTop'] = verify;
            verify = zuuluu[option];
            verify = oscard.bind(golfie)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['marginHorizontal'] = verify;
            verify = zuuluu[option];
            verify = oscard.bind(golfie)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['marginBottom'] = verify;
            entity['button'] = michal;
            michal = {};
            verify = zuuluu[option];
            verify = oscard.bind(golfie)(verify);
            verify = verify.spacing;
            verify = verify.PX_12;
            michal['marginTop'] = verify;
            entity['promotionalButton'] = michal;
            michal = {'width': 24, 'height': 24};
            entity['featureIcon'] = michal;
            michal = {};
            verify = 7;
            verify = zuuluu[verify];
            offset = oscard.bind(golfie)(verify);
            verify = _closure1_slot6;
            verify = verify.PRIMARY_NORMAL;
            zuuluu = zuuluu[option];
            zuuluu = oscard.bind(golfie)(zuuluu);
            zuuluu = zuuluu.colors;
            oscard = zuuluu.WHITE;
            zuuluu = 16;
            romeon = offset.bind(golfie)(verify, oscard, zuuluu);
            foxtra = michal;
            zuuluu = copyDataProperties(foxtra, romeon);
            oscard = -8;
            zuuluu = 'marginStart';
            michal[zuuluu] = oscard;
            entity['featureText'] = michal;
            michal = {'position': 'absolute', 'top': 22, 'right': null, 'height': null, 'zIndex': 2};
            zuuluu = 10;
            if(!tangon) { _fun00002_ip = 578; continue _fun00001 }
 575:
            zuuluu = 20;
 578:
            michal['right'] = zuuluu;
            zuuluu = 64;
            if(!tangon) { _fun00002_ip = 593; continue _fun00001 }
 590:
            zuuluu = 80;
 593:
            michal['height'] = zuuluu;
            oscard = _closure1_slot1;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu[option];
            zuuluu = oscard.bind(golfie)(zuuluu);
            zuuluu = zuuluu.colors;
            zuuluu = zuuluu.BG_BRAND;
            michal['backgroundColor'] = zuuluu;
            zuuluu = 33;
            oscard = zuuluu;
            if(!tangon) { _fun00002_ip = 643; continue _fun00001 }
 640:
            oscard = 41;
 643:
            michal['borderRadius'] = oscard;
            entity['promotionalAvatar'] = michal;
            michal = {'position': 'absolute', 'top': 22, 'right': 55, 'height': 64, 'zIndex': 2};
            oscard = _closure1_slot1;
            report = _closure1_slot2;
            report = report[option];
            report = oscard.bind(golfie)(report);
            report = report.colors;
            report = report.BUTTON_OUTLINE_POSITIVE_BORDER;
            michal['backgroundColor'] = report;
            if(!tangon) { _fun00002_ip = 704; continue _fun00001 }
 701:
            zuuluu = 41;
 704:
            michal['borderRadius'] = zuuluu;
            entity['promotionalAvatarSecondary'] = michal;
            michal = {'position': 'absolute', 'top': 0, 'right': 10, 'height': 120, 'width': 150, 'zIndex': 2};
            entity['rotatingAvatars'] = michal;
            michal = {'position': 'absolute', 'height': 257, 'width': 180, 'top': 100, 'right': 4294967271};
            entity['promotionalBackground'] = michal;
            return entity;
        }
    };
    tangon = option.bind(verify)(tangon);
    var _closure1_slot10 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: PremiumGiftFeaturesCard
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            tangon = argFoo;
            kiloes = tangon.premiumType;
            romeon = tangon.onPress;
            golfie = tangon.style;
            output = tangon.claimableRewards;
            zuuluu = {'premiumType': 0, 'onPress': 0, 'style': 0, 'claimableRewards': 0};
            result = null;
            papara = zuuluu;
            cntext = null;
            entity = silentSetPrototypeOf(papara, cntext);
            michal = 0;
            papara = {};
            cntext = tangon;
            record = zuuluu;
            report = copyDataProperties(papara, cntext, record);
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            entity = 8;
            entity = tangon[entity];
            tangon = undefined;
            entity = zuuluu.bind(tangon)(entity);
            ctrled = entity.bind(tangon)();
            zuuluu = result != output;
            if(!zuuluu) { _fun00004_ip = 112; continue _fun00003 }
 100:
            oscard = output.length;
            entity = 1;
            zuuluu = entity === oscard;
 112:
            entity = _closure1_slot10;
            yankee = entity.bind(tangon)(zuuluu);
            zuuluu = _closure1_slot1;
            oscard = _closure1_slot2;
            entity = 9;
            entity = oscard[entity];
            entity = zuuluu.bind(tangon)(entity);
            verify = entity.bind(tangon)(kiloes);
            option = 10;
            entity = oscard[option];
            foxtra = zuuluu.bind(tangon)(entity);
            entity = _closure1_slot5;
            offset = entity.MONTH;
            sequen = foxtra.bind(tangon)(kiloes, offset);
            option = oscard[option];
            option = zuuluu.bind(tangon)(option);
            entity = entity.YEAR;
            vacuum = option.bind(tangon)(kiloes, entity);
            entity = 11;
            entity = oscard[entity];
            entity = zuuluu.bind(tangon)(entity);
            offset = entity.bind(tangon)(kiloes);
            if(!offset) { _fun00004_ip = 219; continue _fun00003 }
 215:
            offset = result != output;
 219:
            if(!offset) { _fun00004_ip = 231; continue _fun00003 }
 222:
            entity = output.length;
            offset = entity > michal;
 231:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot1;
            oscard = _closure1_slot2;
            entity = 12;
            entity = oscard[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['premiumType'] = kiloes;
            option = yankee.card;
            oscard = new Array(3);
            oscard[0] = option;
            oscard[1] = golfie;
            golfie = offset;
            if(!offset) { _fun00004_ip = 292; continue _fun00003 }
 286:
            golfie = yankee.promotional;
 292:
            oscard[2] = golfie;
            entity['style'] = oscard;
            papara = entity;
            cntext = report;
            report = copyDataProperties(papara, cntext);
            if(offset) { _fun00004_ip = 355; continue _fun00003 }
 313:
            golfie = _closure1_slot7;
            oscard = _closure1_slot1;
            option = _closure1_slot2;
            report = 17;
            report = option[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            report['premiumType'] = kiloes;
            report = golfie.bind(tangon)(oscard, report);
            _fun00004_ip = 703; continue _fun00003;
 355:
            option = _closure1_slot9;
            golfie = _closure1_slot8;
            oscard = {};
            echoed = _closure1_slot7;
            sizing = _closure1_slot1;
            update = _closure1_slot2;
            foxtra = 13;
            foxtra = update[foxtra];
            sizing = sizing.bind(tangon)(foxtra);
            foxtra = {};
            foxtra['claimableRewards'] = output;
            sizing = echoed.bind(tangon)(sizing, foxtra);
            foxtra = new Array(3);
            foxtra[0] = sizing;
            echoed = result == ctrled;
            sizing = undefined;
            if(echoed) { _fun00004_ip = 440; continue _fun00003 }
 419:
            echoed = ctrled.planSelection;
            update = result == echoed;
            sizing = undefined;
            if(update) { _fun00004_ip = 440; continue _fun00003 }
 434:
            sizing = echoed.getBackgroundImageUrl;
 440:
            sizing = result != sizing;
            if(!sizing) { _fun00004_ip = 525; continue _fun00003 }
 447:
            update = _closure1_slot7;
            echoed = _closure1_slot1;
            source = _closure1_slot2;
            result = 14;
            result = source[result];
            echoed = echoed.bind(tangon)(result);
            result = {};
            source = yankee.promotionalBackground;
            result['style'] = source;
            source = 'contain';
            result['resizeMode'] = source;
            source = {};
            config = ctrled.planSelection;
            ctrled = config.getBackgroundImageUrl;
            ctrled = ctrled.bind(config)();
            source['uri'] = ctrled;
            result['source'] = source;
            sizing = update.bind(tangon)(echoed, result);
 525:
            foxtra[1] = sizing;
            echoed = _closure1_slot7;
            result = _closure1_slot1;
            update = _closure1_slot2;
            sizing = 15;
            sizing = update[sizing];
            result = result.bind(tangon)(sizing);
            sizing = {};
            sizing['claimableRewards'] = output;
            source = output.length;
            update = 1;
            if(!(update !== source)) { _fun00004_ip = 606; continue _fun00003 }
 572:
            source = _closure1_slot0;
            ctrled = _closure1_slot2;
            update = 16;
            update = ctrled[update];
            update = source.bind(tangon)(update);
            update = update.AvatarSizes;
            update = update.XLARGE;
            _fun00004_ip = 638; continue _fun00003;
 606:
            ctrled = _closure1_slot0;
            config = _closure1_slot2;
            source = 16;
            source = config[source];
            source = ctrled.bind(tangon)(source);
            source = source.AvatarSizes;
            update = source.XXLARGE;
 638:
            sizing['avatarSize'] = update;
            update = true;
            sizing['darkOverride'] = update;
            update = yankee.promotionalAvatar;
            sizing['promoAvatarStyle'] = update;
            update = yankee.promotionalAvatarSecondary;
            sizing['promoSecondaryAvatarStyle'] = update;
            update = yankee.rotatingAvatars;
            sizing['promoRotatingStyle'] = update;
            sizing = echoed.bind(tangon)(result, sizing);
            foxtra[2] = sizing;
            oscard['children'] = foxtra;
            report = option.bind(tangon)(golfie, oscard);
 703:
            oscard = new Array(7);
            oscard[0] = report;
            option = _closure1_slot7;
            golfie = _closure1_slot1;
            foxtra = _closure1_slot2;
            report = 18;
            report = foxtra[report];
            golfie = golfie.bind(tangon)(report);
            report = {};
            sizing = yankee.logo;
            foxtra = new Array(2);
            foxtra[0] = sizing;
            sizing = offset;
            if(!offset) { _fun00004_ip = 786; continue _fun00003 }
 757:
            result = output.length;
            output = 1;
            if(!(output !== result)) { _fun00004_ip = 777; continue _fun00003 }
 769:
            output = yankee.promotionalLogo;
            _fun00004_ip = 783; continue _fun00003;
 777:
            output = yankee.promotionalLogoSingleLine;
 783:
            sizing = output;
 786:
            foxtra[1] = sizing;
            report['style'] = foxtra;
            report['premiumType'] = kiloes;
            report = option.bind(tangon)(golfie, report);
            oscard[1] = report;
            option = _closure1_slot7;
            update = _closure1_slot0;
            foxtra = _closure1_slot2;
            report = 19;
            golfie = foxtra[report];
            golfie = update.bind(tangon)(golfie);
            sizing = golfie.Text;
            golfie = {'style': null, 'variant': 'text-sm/medium', 'color': 'always-white'};
            output = yankee.pricing;
            golfie['style'] = output;
            result = 20;
            output = foxtra[result];
            output = update.bind(tangon)(output);
            ctrled = output.intl;
            source = ctrled.format;
            output = foxtra[result];
            output = update.bind(tangon)(output);
            output = output.t;
            echoed = output.Ob6fws;
            output = {};
            output['monthlyPrice'] = sequen;
            output['yearlyPrice'] = vacuum;
            output = source.bind(ctrled)(echoed, output);
            golfie['children'] = output;
            golfie = option.bind(tangon)(sizing, golfie);
            oscard[2] = golfie;
            report = foxtra[report];
            report = update.bind(tangon)(report);
            golfie = report.Text;
            report = {'style': null, 'variant': 'heading-sm/bold', 'color': 'always-white'};
            sizing = yankee.featureTitle;
            report['style'] = sizing;
            sizing = foxtra[result];
            sizing = update.bind(tangon)(sizing);
            echoed = sizing.intl;
            output = echoed.string;
            sizing = foxtra[result];
            sizing = update.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.JgsVho;
            sizing = output.bind(echoed)(sizing);
            report['children'] = sizing;
            report = option.bind(tangon)(golfie, report);
            oscard[3] = report;
            golfie = _closure1_slot1;
            report = 21;
            report = foxtra[report];
            golfie = golfie.bind(tangon)(report);
            report = {};
            foxtra = yankee.features;
            report['style'] = foxtra;
            report['features'] = verify;
            verify = yankee.featureIcon;
            report['iconStyle'] = verify;
            verify = yankee.featureText;
            report['labelStyle'] = verify;
            report = option.bind(tangon)(golfie, report);
            oscard[4] = report;
            golfie = _closure1_slot3;
            report = {};
            verify = {};
            foxtra = 1;
            verify['flexGrow'] = foxtra;
            report['style'] = verify;
            report = option.bind(tangon)(golfie, report);
            oscard[5] = report;
            report = {};
            foxtra = yankee.button;
            verify = new Array(2);
            verify[0] = foxtra;
            if(!offset) { _fun00004_ip = 1162; continue _fun00003 }
 1156:
            offset = yankee.promotionalButton;
 1162:
            verify[1] = offset;
            report['style'] = verify;
            yankee = _closure1_slot7;
            offset = _closure1_slot0;
            foxtra = _closure1_slot2;
            verify = 22;
            verify = foxtra[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.Button;
            verify = {};
            foxtra = 'experimental_premium-secondary';
            verify['variant'] = foxtra;
            foxtra = _closure1_slot4;
            foxtra = foxtra.TIER_0;
            if(!(kiloes !== foxtra)) { _fun00004_ip = 1282; continue _fun00003 }
 1226:
            output = _closure1_slot0;
            foxtra = _closure1_slot2;
            kiloes = foxtra[result];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            foxtra = foxtra[result];
            foxtra = output.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.Ve9Ge3;
            foxtra = kiloes.bind(sizing)(foxtra);
            _fun00004_ip = 1336; continue _fun00003;
 1282:
            output = _closure1_slot0;
            backup = _closure1_slot2;
            kiloes = backup[result];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = backup[result];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.rk4Uu7;
            foxtra = kiloes.bind(sizing)(backup);
 1336:
            verify['text'] = foxtra;
            verify['onPress'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            report['children'] = verify;
            report = option.bind(tangon)(golfie, report);
            oscard[6] = report;
            report = 'children';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 23;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/native/gifting/PremiumGiftFeaturesCard.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();