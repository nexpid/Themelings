// app/modules/premium/native/gifting/PremiumGiftFeaturesCard.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.PremiumTypes;
    var _closure1_slot4 = options;
    tango = tango.SubscriptionIntervalTypes;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fonts;
    var _closure1_slot6 = tango;
    tango = 4;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot7 = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.Fragment;
    var _closure1_slot8 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tango = argFoo;
            entity = {};
            mike = {};
            zulu = 'hidden';
            mike['overflow'] = zulu;
            entity['promotional'] = mike;
            mike = {};
            zulu = 'flex-start';
            mike['justifyContent'] = zulu;
            entity['card'] = mike;
            mike = {};
            oscar = _closure1_slot1;
            zulu = _closure1_slot2;
            options = 6;
            verify = zulu[options];
            golf = undefined;
            verify = oscar.bind(golf)(verify);
            verify = verify.spacing;
            verify = verify.PX_40;
            mike['marginTop'] = verify;
            verify = zulu[options];
            verify = oscar.bind(golf)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            mike['marginStart'] = verify;
            entity['logo'] = mike;
            mike = {};
            verify = zulu[options];
            verify = oscar.bind(golf)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            mike['marginTop'] = verify;
            entity['promotionalLogo'] = mike;
            mike = {};
            verify = zulu[options];
            verify = oscar.bind(golf)(verify);
            verify = verify.spacing;
            verify = verify.PX_32;
            mike['marginTop'] = verify;
            entity['promotionalLogoSingleLine'] = mike;
            mike = {};
            verify = 140;
            mike['maxWidth'] = verify;
            verify = zulu[options];
            verify = oscar.bind(golf)(verify);
            verify = verify.spacing;
            verify = verify.PX_8;
            mike['marginTop'] = verify;
            verify = zulu[options];
            verify = oscar.bind(golf)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            mike['marginStart'] = verify;
            entity['pricing'] = mike;
            mike = {};
            verify = zulu[options];
            verify = oscar.bind(golf)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            mike['marginTop'] = verify;
            verify = zulu[options];
            verify = oscar.bind(golf)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            mike['marginStart'] = verify;
            entity['featureTitle'] = mike;
            mike = {};
            verify = zulu[options];
            verify = oscar.bind(golf)(verify);
            verify = verify.spacing;
            verify = verify.PX_8;
            mike['marginTop'] = verify;
            verify = zulu[options];
            verify = oscar.bind(golf)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            mike['marginHorizontal'] = verify;
            entity['features'] = mike;
            mike = {};
            verify = zulu[options];
            verify = oscar.bind(golf)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            mike['marginTop'] = verify;
            verify = zulu[options];
            verify = oscar.bind(golf)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            mike['marginHorizontal'] = verify;
            verify = zulu[options];
            verify = oscar.bind(golf)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            mike['marginBottom'] = verify;
            entity['button'] = mike;
            mike = {};
            verify = zulu[options];
            verify = oscar.bind(golf)(verify);
            verify = verify.spacing;
            verify = verify.PX_12;
            mike['marginTop'] = verify;
            entity['promotionalButton'] = mike;
            mike = {'width': 24, 'height': 24};
            entity['featureIcon'] = mike;
            mike = {};
            verify = 7;
            verify = zulu[verify];
            offset = oscar.bind(golf)(verify);
            verify = _closure1_slot6;
            verify = verify.PRIMARY_NORMAL;
            zulu = zulu[options];
            zulu = oscar.bind(golf)(zulu);
            zulu = zulu.colors;
            oscar = zulu.WHITE;
            zulu = 16;
            romeo = offset.bind(golf)(verify, oscar, zulu);
            foxtrot = mike;
            zulu = copyDataProperties(foxtrot, romeo);
            oscar = -8;
            zulu = 'marginStart';
            mike[zulu] = oscar;
            entity['featureText'] = mike;
            mike = {'position': 'absolute', 'top': 22, 'right': null, 'height': null, 'zIndex': 2};
            zulu = 10;
            if(!tango) { _fun00002_ip = 578; continue _fun00001 }
 575:
            zulu = 20;
 578:
            mike['right'] = zulu;
            zulu = 64;
            if(!tango) { _fun00002_ip = 593; continue _fun00001 }
 590:
            zulu = 80;
 593:
            mike['height'] = zulu;
            oscar = _closure1_slot1;
            zulu = _closure1_slot2;
            zulu = zulu[options];
            zulu = oscar.bind(golf)(zulu);
            zulu = zulu.colors;
            zulu = zulu.BG_BRAND;
            mike['backgroundColor'] = zulu;
            zulu = 33;
            oscar = zulu;
            if(!tango) { _fun00002_ip = 643; continue _fun00001 }
 640:
            oscar = 41;
 643:
            mike['borderRadius'] = oscar;
            entity['promotionalAvatar'] = mike;
            mike = {'position': 'absolute', 'top': 22, 'right': 55, 'height': 64, 'zIndex': 2};
            oscar = _closure1_slot1;
            report = _closure1_slot2;
            report = report[options];
            report = oscar.bind(golf)(report);
            report = report.colors;
            report = report.BUTTON_OUTLINE_POSITIVE_BORDER;
            mike['backgroundColor'] = report;
            if(!tango) { _fun00002_ip = 704; continue _fun00001 }
 701:
            zulu = 41;
 704:
            mike['borderRadius'] = zulu;
            entity['promotionalAvatarSecondary'] = mike;
            mike = {'position': 'absolute', 'top': 0, 'right': 10, 'height': 120, 'width': 150, 'zIndex': 2};
            entity['rotatingAvatars'] = mike;
            mike = {'position': 'absolute', 'height': 257, 'width': 180, 'top': 100, 'right': 4294967271};
            entity['promotionalBackground'] = mike;
            return entity;
        }
    };
    tango = options.bind(verify)(tango);
    var _closure1_slot10 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: PremiumGiftFeaturesCard
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            tango = argFoo;
            kilo = tango.premiumType;
            romeo = tango.onPress;
            golf = tango.style;
            output = tango.claimableRewards;
            zulu = {'premiumType': 0, 'onPress': 0, 'style': 0, 'claimableRewards': 0};
            result = null;
            papa = zulu;
            context = null;
            entity = silentSetPrototypeOf(papa, context);
            mike = 0;
            papa = {};
            context = tango;
            record = zulu;
            report = copyDataProperties(papa, context, record);
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            entity = 8;
            entity = tango[entity];
            tango = undefined;
            entity = zulu.bind(tango)(entity);
            control = entity.bind(tango)();
            zulu = result != output;
            if(!zulu) { _fun00004_ip = 108; continue _fun00003 }
 96:
            oscar = output.length;
            entity = 1;
            zulu = entity === oscar;
 108:
            entity = _closure1_slot10;
            yankee = entity.bind(tango)(zulu);
            zulu = _closure1_slot1;
            oscar = _closure1_slot2;
            entity = 9;
            entity = oscar[entity];
            entity = zulu.bind(tango)(entity);
            verify = entity.bind(tango)(kilo);
            options = 10;
            entity = oscar[options];
            foxtrot = zulu.bind(tango)(entity);
            entity = _closure1_slot5;
            offset = entity.MONTH;
            sequence = foxtrot.bind(tango)(kilo, offset);
            options = oscar[options];
            options = zulu.bind(tango)(options);
            entity = entity.YEAR;
            vacuum = options.bind(tango)(kilo, entity);
            entity = 11;
            entity = oscar[entity];
            entity = zulu.bind(tango)(entity);
            offset = entity.bind(tango)(kilo);
            if(!offset) { _fun00004_ip = 215; continue _fun00003 }
 211:
            offset = result != output;
 215:
            if(!offset) { _fun00004_ip = 227; continue _fun00003 }
 218:
            entity = output.length;
            offset = entity > mike;
 227:
            zulu = _closure1_slot9;
            mike = _closure1_slot1;
            oscar = _closure1_slot2;
            entity = 12;
            entity = oscar[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            entity['premiumType'] = kilo;
            options = yankee.card;
            oscar = new Array(3);
            oscar[0] = options;
            oscar[1] = golf;
            golf = offset;
            if(!offset) { _fun00004_ip = 288; continue _fun00003 }
 282:
            golf = yankee.promotional;
 288:
            oscar[2] = golf;
            entity['style'] = oscar;
            papa = entity;
            context = report;
            report = copyDataProperties(papa, context);
            if(offset) { _fun00004_ip = 351; continue _fun00003 }
 309:
            golf = _closure1_slot7;
            oscar = _closure1_slot1;
            options = _closure1_slot2;
            report = 17;
            report = options[report];
            oscar = oscar.bind(tango)(report);
            report = {};
            report['premiumType'] = kilo;
            report = golf.bind(tango)(oscar, report);
            _fun00004_ip = 699; continue _fun00003;
 351:
            options = _closure1_slot9;
            golf = _closure1_slot8;
            oscar = {};
            echo = _closure1_slot7;
            sizing = _closure1_slot1;
            update = _closure1_slot2;
            foxtrot = 13;
            foxtrot = update[foxtrot];
            sizing = sizing.bind(tango)(foxtrot);
            foxtrot = {};
            foxtrot['claimableRewards'] = output;
            sizing = echo.bind(tango)(sizing, foxtrot);
            foxtrot = new Array(3);
            foxtrot[0] = sizing;
            echo = result == control;
            sizing = undefined;
            if(echo) { _fun00004_ip = 436; continue _fun00003 }
 415:
            echo = control.planSelection;
            update = result == echo;
            sizing = undefined;
            if(update) { _fun00004_ip = 436; continue _fun00003 }
 430:
            sizing = echo.getBackgroundImageUrl;
 436:
            sizing = result != sizing;
            if(!sizing) { _fun00004_ip = 521; continue _fun00003 }
 443:
            update = _closure1_slot7;
            echo = _closure1_slot1;
            source = _closure1_slot2;
            result = 14;
            result = source[result];
            echo = echo.bind(tango)(result);
            result = {};
            source = yankee.promotionalBackground;
            result['style'] = source;
            source = 'contain';
            result['resizeMode'] = source;
            source = {};
            config = control.planSelection;
            control = config.getBackgroundImageUrl;
            control = control.bind(config)();
            source['uri'] = control;
            result['source'] = source;
            sizing = update.bind(tango)(echo, result);
 521:
            foxtrot[1] = sizing;
            echo = _closure1_slot7;
            result = _closure1_slot1;
            update = _closure1_slot2;
            sizing = 15;
            sizing = update[sizing];
            result = result.bind(tango)(sizing);
            sizing = {};
            sizing['claimableRewards'] = output;
            source = output.length;
            update = 1;
            if(!(update !== source)) { _fun00004_ip = 602; continue _fun00003 }
 568:
            source = _closure1_slot0;
            control = _closure1_slot2;
            update = 16;
            update = control[update];
            update = source.bind(tango)(update);
            update = update.AvatarSizes;
            update = update.XLARGE;
            _fun00004_ip = 634; continue _fun00003;
 602:
            control = _closure1_slot0;
            config = _closure1_slot2;
            source = 16;
            source = config[source];
            source = control.bind(tango)(source);
            source = source.AvatarSizes;
            update = source.XXLARGE;
 634:
            sizing['avatarSize'] = update;
            update = true;
            sizing['darkOverride'] = update;
            update = yankee.promotionalAvatar;
            sizing['promoAvatarStyle'] = update;
            update = yankee.promotionalAvatarSecondary;
            sizing['promoSecondaryAvatarStyle'] = update;
            update = yankee.rotatingAvatars;
            sizing['promoRotatingStyle'] = update;
            sizing = echo.bind(tango)(result, sizing);
            foxtrot[2] = sizing;
            oscar['children'] = foxtrot;
            report = options.bind(tango)(golf, oscar);
 699:
            oscar = new Array(7);
            oscar[0] = report;
            options = _closure1_slot7;
            golf = _closure1_slot1;
            foxtrot = _closure1_slot2;
            report = 18;
            report = foxtrot[report];
            golf = golf.bind(tango)(report);
            report = {};
            sizing = yankee.logo;
            foxtrot = new Array(2);
            foxtrot[0] = sizing;
            sizing = offset;
            if(!offset) { _fun00004_ip = 782; continue _fun00003 }
 753:
            result = output.length;
            output = 1;
            if(!(output !== result)) { _fun00004_ip = 773; continue _fun00003 }
 765:
            output = yankee.promotionalLogo;
            _fun00004_ip = 779; continue _fun00003;
 773:
            output = yankee.promotionalLogoSingleLine;
 779:
            sizing = output;
 782:
            foxtrot[1] = sizing;
            report['style'] = foxtrot;
            report['premiumType'] = kilo;
            report = options.bind(tango)(golf, report);
            oscar[1] = report;
            options = _closure1_slot7;
            update = _closure1_slot0;
            foxtrot = _closure1_slot2;
            report = 19;
            golf = foxtrot[report];
            golf = update.bind(tango)(golf);
            sizing = golf.Text;
            golf = {'style': null, 'variant': 'text-sm/medium', 'color': 'always-white'};
            output = yankee.pricing;
            golf['style'] = output;
            result = 20;
            output = foxtrot[result];
            output = update.bind(tango)(output);
            control = output.intl;
            source = control.format;
            output = foxtrot[result];
            output = update.bind(tango)(output);
            output = output.t;
            echo = output.Ob6fws;
            output = {};
            output['monthlyPrice'] = sequence;
            output['yearlyPrice'] = vacuum;
            output = source.bind(control)(echo, output);
            golf['children'] = output;
            golf = options.bind(tango)(sizing, golf);
            oscar[2] = golf;
            report = foxtrot[report];
            report = update.bind(tango)(report);
            golf = report.Text;
            report = {'style': null, 'variant': 'heading-sm/bold', 'color': 'always-white'};
            sizing = yankee.featureTitle;
            report['style'] = sizing;
            sizing = foxtrot[result];
            sizing = update.bind(tango)(sizing);
            echo = sizing.intl;
            output = echo.string;
            sizing = foxtrot[result];
            sizing = update.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.JgsVho;
            sizing = output.bind(echo)(sizing);
            report['children'] = sizing;
            report = options.bind(tango)(golf, report);
            oscar[3] = report;
            golf = _closure1_slot1;
            report = 21;
            report = foxtrot[report];
            golf = golf.bind(tango)(report);
            report = {};
            foxtrot = yankee.features;
            report['style'] = foxtrot;
            report['features'] = verify;
            verify = yankee.featureIcon;
            report['iconStyle'] = verify;
            verify = yankee.featureText;
            report['labelStyle'] = verify;
            report = options.bind(tango)(golf, report);
            oscar[4] = report;
            golf = _closure1_slot3;
            report = {};
            verify = {};
            foxtrot = 1;
            verify['flexGrow'] = foxtrot;
            report['style'] = verify;
            report = options.bind(tango)(golf, report);
            oscar[5] = report;
            report = {};
            foxtrot = yankee.button;
            verify = new Array(2);
            verify[0] = foxtrot;
            if(!offset) { _fun00004_ip = 1154; continue _fun00003 }
 1148:
            offset = yankee.promotionalButton;
 1154:
            verify[1] = offset;
            report['style'] = verify;
            yankee = _closure1_slot7;
            offset = _closure1_slot0;
            foxtrot = _closure1_slot2;
            verify = 22;
            verify = foxtrot[verify];
            verify = offset.bind(tango)(verify);
            offset = verify.Button;
            verify = {};
            foxtrot = 'experimental_premium-secondary';
            verify['variant'] = foxtrot;
            foxtrot = _closure1_slot4;
            foxtrot = foxtrot.TIER_0;
            if(!(kilo !== foxtrot)) { _fun00004_ip = 1272; continue _fun00003 }
 1218:
            output = _closure1_slot0;
            foxtrot = _closure1_slot2;
            kilo = foxtrot[result];
            kilo = output.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            foxtrot = foxtrot[result];
            foxtrot = output.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.Ve9Ge3;
            foxtrot = kilo.bind(sizing)(foxtrot);
            _fun00004_ip = 1324; continue _fun00003;
 1272:
            output = _closure1_slot0;
            backup = _closure1_slot2;
            kilo = backup[result];
            kilo = output.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = backup[result];
            backup = output.bind(tango)(backup);
            backup = backup.t;
            backup = backup.rk4Uu7;
            foxtrot = kilo.bind(sizing)(backup);
 1324:
            verify['text'] = foxtrot;
            verify['onPress'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            report['children'] = verify;
            report = options.bind(tango)(golf, report);
            oscar[6] = report;
            report = 'children';
            entity[report] = oscar;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 23;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/premium/native/gifting/PremiumGiftFeaturesCard.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();