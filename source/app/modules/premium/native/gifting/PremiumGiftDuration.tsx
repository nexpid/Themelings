// app/modules/premium/native/gifting/PremiumGiftDuration.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: PremiumGiftDurationButton
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.selected;
            ctrled = entity.planInterval;
            var _closure2_slot0 = ctrled;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 6;
            entity = zuuluu[entity];
            tangon = undefined;
            michal = michal.bind(tangon)(entity);
            entity = michal.useNativeGiftContext;
            entity = entity.bind(michal)();
            michal = entity.premiumType;
            entity = entity.setPlanInterval;
            var _closure2_slot1 = entity;
            entity = _closure1_slot9;
            source = entity.bind(tangon)();
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            if(oscard) { _fun00002_ip = 111; continue _fun00001 }
 91:
            entity = 8;
            entity = report[entity];
            entity = zuuluu.bind(tangon)(entity);
            golfie = entity.RowButton;
            _fun00002_ip = 129; continue _fun00001;
 111:
            entity = 7;
            entity = report[entity];
            entity = zuuluu.bind(tangon)(entity);
            golfie = entity.TableRow;
 129:
            entity = _closure1_slot5;
            entity = entity.YEAR;
            output = null;
            papara = null;
            if(!(ctrled === entity)) { _fun00002_ip = 178; continue _fun00001 }
 147:
            offset = _closure1_slot4;
            entity = global;
            entity = entity.HermesInternal;
            report = entity.concat;
            zuuluu = '';
            entity = '%';
            papara = report.bind(zuuluu)(offset, entity);
 178:
            zuuluu = _closure1_slot1;
            report = _closure1_slot2;
            entity = 9;
            entity = report[entity];
            entity = zuuluu.bind(tangon)(entity);
            romeon = entity.bind(tangon)(michal, ctrled);
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            offset = source.container;
            report = new Array(2);
            report[0] = offset;
            if(!oscard) { _fun00002_ip = 236; continue _fun00001 }
 230:
            oscard = source.containerSelected;
 236:
            report[1] = oscard;
            entity['style'] = report;
            oscard = _closure1_slot6;
            report = {'label': null, 'trailing': null, 'onPress': null, 'arrow': false, 'start': true, 'end': true};
            kiloes = _closure1_slot7;
            yankee = _closure1_slot3;
            offset = {};
            foxtra = source.labelContainer;
            offset['style'] = foxtra;
            echoed = _closure1_slot6;
            sizing = _closure1_slot0;
            foxtra = _closure1_slot2;
            backup = 10;
            foxtra = foxtra[backup];
            foxtra = sizing.bind(tangon)(foxtra);
            result = foxtra.Text;
            sizing = {};
            foxtra = 'text-md/semibold';
            sizing['variant'] = foxtra;
            update = _closure1_slot5;
            update = update.MONTH;
            if(!(ctrled !== update)) { _fun00002_ip = 388; continue _fun00001 }
 331:
            sequen = _closure1_slot0;
            config = _closure1_slot2;
            update = 11;
            ctrled = config[update];
            ctrled = sequen.bind(tangon)(ctrled);
            vacuum = ctrled.intl;
            ctrled = vacuum.string;
            update = config[update];
            update = sequen.bind(tangon)(update);
            update = update.t;
            update = update.DRgqMj;
            update = ctrled.bind(vacuum)(update);
            _fun00002_ip = 443; continue _fun00001;
 388:
            config = _closure1_slot0;
            record = _closure1_slot2;
            ctrled = 11;
            vacuum = record[ctrled];
            vacuum = config.bind(tangon)(vacuum);
            sequen = vacuum.intl;
            vacuum = sequen.string;
            ctrled = record[ctrled];
            ctrled = config.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.Mh9bTk;
            update = vacuum.bind(sequen)(ctrled);
 443:
            sizing['children'] = update;
            result = echoed.bind(tangon)(result, sizing);
            sizing = new Array(2);
            sizing[0] = result;
            output = output != papara;
            if(!output) { _fun00002_ip = 616; continue _fun00001 }
 471:
            update = _closure1_slot6;
            echoed = _closure1_slot3;
            result = {};
            source = source.labelPromo;
            result['style'] = source;
            vacuum = _closure1_slot6;
            config = _closure1_slot0;
            target = _closure1_slot2;
            source = target[backup];
            source = config.bind(tangon)(source);
            ctrled = source.Text;
            source = {'variant': 'text-md/bold', 'color': 'always-white'};
            sequen = 11;
            record = target[sequen];
            record = config.bind(tangon)(record);
            cntext = record.intl;
            record = cntext.formatToPlainString;
            sequen = target[sequen];
            sequen = config.bind(tangon)(sequen);
            sequen = sequen.t;
            config = sequen.IAybsL;
            sequen = {};
            sequen['discount'] = papara;
            config = record.bind(cntext)(config, sequen);
            sequen = config.toUpperCase;
            sequen = sequen.bind(config)();
            source['children'] = sequen;
            source = vacuum.bind(tangon)(ctrled, source);
            result['children'] = source;
            output = update.bind(tangon)(echoed, result);
 616:
            sizing[1] = output;
            offset['children'] = sizing;
            offset = kiloes.bind(tangon)(yankee, offset);
            report['label'] = offset;
            yankee = _closure1_slot6;
            offset = _closure1_slot0;
            verify = _closure1_slot2;
            verify = verify[backup];
            verify = offset.bind(tangon)(verify);
            offset = verify.Text;
            verify = {};
            verify['variant'] = foxtra;
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            report['trailing'] = verify;
            option = function() { // Original name: onPress
                zuuluu = _closure2_slot1;
                michal = _closure2_slot0;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            report['onPress'] = option;
            report = oscard.bind(tangon)(golfie, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot11 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    backup = 2;
    tangon = oscard[backup];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.PREMIUM_YEARLY_DISCOUNT_PERCENT;
    var _closure1_slot4 = golfie;
    golfie = tangon.SubscriptionIntervalTypes;
    var _closure1_slot5 = golfie;
    tangon = 3;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot6 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    option = golfie.YEAR;
    tangon = new Array(2);
    tangon[0] = option;
    golfie = golfie.MONTH;
    tangon[1] = golfie;
    var _closure1_slot8 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = {};
    foxtra = {};
    offset = 5;
    kiloes = oscard[offset];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_8;
    foxtra['marginTop'] = kiloes;
    golfie['container'] = foxtra;
    foxtra = {};
    kiloes = oscard[offset];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BG_BRAND;
    foxtra['borderColor'] = kiloes;
    kiloes = oscard[offset];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.lg;
    foxtra['borderRadius'] = kiloes;
    foxtra['borderWidth'] = backup;
    golfie['containerSelected'] = foxtra;
    foxtra = {};
    backup = 'row';
    foxtra['flexDirection'] = backup;
    golfie['labelContainer'] = foxtra;
    foxtra = {};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    foxtra['marginStart'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.STATUS_POSITIVE_BACKGROUND;
    foxtra['backgroundColor'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    foxtra['paddingHorizontal'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.round;
    foxtra['borderRadius'] = backup;
    golfie['labelPromo'] = foxtra;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot9 = golfie;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['marginHorizontal'] = foxtra;
    tangon['durationContainer'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    verify['marginTop'] = foxtra;
    tangon['durationTitle'] = verify;
    verify = {'marginTop': null, 'flexDirection': 'row', 'alignItems': 'center'};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_12;
    verify['marginTop'] = foxtra;
    tangon['durationHeaderContainer'] = verify;
    verify = {};
    verify['flexGrow'] = romeon;
    tangon['durationHeaderTitle'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['marginEnd'] = offset;
    tangon['avatar'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/native/gifting/PremiumGiftDuration.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: PremiumGiftDuration
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = _closure1_slot10;
            tangon = undefined;
            result = entity.bind(tangon)();
            backup = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 6;
            entity = offset[entity];
            michal = backup.bind(tangon)(entity);
            entity = michal.useNativeGiftContext;
            entity = entity.bind(michal)();
            michal = entity.planInterval;
            var _closure2_slot0 = michal;
            source = entity.recipientUser;
            zuuluu = _closure1_slot7;
            michal = _closure1_slot3;
            entity = {};
            report = result.durationContainer;
            entity['style'] = report;
            verify = _closure1_slot6;
            foxtra = 10;
            report = offset[foxtra];
            report = backup.bind(tangon)(report);
            option = report.Text;
            report = {};
            yankee = result.durationTitle;
            report['style'] = yankee;
            yankee = 'text-sm/semibold';
            report['variant'] = yankee;
            update = 11;
            yankee = offset[update];
            yankee = backup.bind(tangon)(yankee);
            romeon = yankee.intl;
            yankee = romeon.string;
            offset = offset[update];
            offset = backup.bind(tangon)(offset);
            offset = offset.t;
            offset = offset.8XT6NT;
            offset = yankee.bind(romeon)(offset);
            report['children'] = offset;
            option = verify.bind(tangon)(option, report);
            report = new Array(3);
            report[0] = option;
            ctrled = null;
            option = ctrled != source;
            if(!option) { _fun00004_ip = 438; continue _fun00003 }
 201:
            yankee = _closure1_slot7;
            offset = _closure1_slot3;
            verify = {};
            romeon = result.durationHeaderContainer;
            verify['style'] = romeon;
            kiloes = _closure1_slot6;
            backup = _closure1_slot1;
            sizing = _closure1_slot2;
            echoed = 12;
            romeon = sizing[echoed];
            backup = backup.bind(tangon)(romeon);
            romeon = {};
            output = result.avatar;
            romeon['style'] = output;
            romeon['guildId'] = tangon;
            romeon['user'] = source;
            output = _closure1_slot0;
            echoed = sizing[echoed];
            echoed = output.bind(tangon)(echoed);
            echoed = echoed.AvatarSizes;
            echoed = echoed.NORMAL;
            romeon['size'] = echoed;
            backup = kiloes.bind(tangon)(backup, romeon);
            romeon = new Array(2);
            romeon[0] = backup;
            kiloes = _closure1_slot6;
            foxtra = sizing[foxtra];
            foxtra = output.bind(tangon)(foxtra);
            backup = foxtra.Text;
            foxtra = {};
            result = result.durationHeaderTitle;
            foxtra['style'] = result;
            result = 'text-md/semibold';
            foxtra['variant'] = result;
            result = sizing[update];
            result = output.bind(tangon)(result);
            echoed = result.intl;
            result = echoed.format;
            sizing = sizing[update];
            sizing = output.bind(tangon)(sizing);
            sizing = sizing.t;
            output = sizing.qGQDio;
            sizing = {};
            update = source.globalName;
            if(!(ctrled == update)) { _fun00004_ip = 404; continue _fun00003 }
 399:
            update = source.username;
 404:
            sizing['username'] = update;
            sizing = result.bind(echoed)(output, sizing);
            foxtra['children'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            romeon[1] = foxtra;
            verify['children'] = romeon;
            option = yankee.bind(tangon)(offset, verify);
 438:
            report[1] = option;
            option = _closure1_slot8;
            golfie = option.map;
            oscard = function(argFoo, argBar) {
                entity = argFoo;
                report = _closure1_slot6;
                tangon = _closure1_slot11;
                zuuluu = {};
                michal = _closure2_slot0;
                michal = michal === entity;
                zuuluu['selected'] = michal;
                zuuluu['planInterval'] = entity;
                michal = undefined;
                entity = argBar;
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            };
            oscard = golfie.bind(option)(oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();