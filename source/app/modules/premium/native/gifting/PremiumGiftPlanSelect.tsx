// app/modules/premium/native/gifting/PremiumGiftPlanSelect.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.PremiumTypes;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.VerticalGradient;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot8 = option;
    option = tangon.Fragment;
    var _closure1_slot9 = option;
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    option = golfie.TIER_2;
    tangon = new Array(2);
    tangon[0] = option;
    golfie = golfie.TIER_0;
    tangon[1] = golfie;
    var _closure1_slot11 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = function(argFoo, argBar) {
        golfie = argFoo;
        verify = argBar;
        entity = {};
        michal = {};
        offset = 'absolute';
        michal['position'] = offset;
        michal['width'] = golfie;
        zuuluu = 0.1;
        tangon = zuuluu * verify;
        michal['height'] = tangon;
        option = 1.75;
        tangon = verify / option;
        zuuluu = zuuluu * verify;
        zuuluu = tangon - zuuluu;
        michal['top'] = zuuluu;
        entity['headerBackground'] = michal;
        michal = {};
        report = _closure1_slot1;
        oscard = _closure1_slot2;
        zuuluu = 7;
        yankee = oscard[zuuluu];
        tangon = undefined;
        yankee = report.bind(tangon)(yankee);
        yankee = yankee.colors;
        yankee = yankee.BACKGROUND_PRIMARY;
        michal['color'] = yankee;
        entity['headerBackgroundColor'] = michal;
        michal = {};
        michal['position'] = offset;
        michal['width'] = golfie;
        option = verify / option;
        michal['height'] = option;
        entity['headerImageContainer'] = michal;
        michal = {};
        michal['width'] = golfie;
        entity['headerImage'] = michal;
        michal = {};
        michal['width'] = golfie;
        golfie = 8;
        golfie = oscard[golfie];
        option = report.bind(tangon)(golfie);
        golfie = '#000000';
        verify = option.bind(tangon)(golfie);
        option = verify.alpha;
        golfie = 0.8;
        option = option.bind(verify)(golfie);
        golfie = option.hex;
        golfie = golfie.bind(option)();
        michal['backgroundColor'] = golfie;
        entity['headerOverlay'] = michal;
        michal = {};
        golfie = 'center';
        michal['alignSelf'] = golfie;
        entity['avatar'] = michal;
        michal = {};
        michal['textAlign'] = golfie;
        option = oscard[zuuluu];
        option = report.bind(tangon)(option);
        option = option.spacing;
        option = option.PX_12;
        michal['marginTop'] = option;
        option = oscard[zuuluu];
        option = report.bind(tangon)(option);
        option = option.spacing;
        option = option.PX_24;
        michal['marginHorizontal'] = option;
        entity['title'] = michal;
        michal = {};
        michal['textAlign'] = golfie;
        golfie = oscard[zuuluu];
        golfie = report.bind(tangon)(golfie);
        golfie = golfie.spacing;
        golfie = golfie.PX_12;
        michal['marginTop'] = golfie;
        golfie = oscard[zuuluu];
        golfie = report.bind(tangon)(golfie);
        golfie = golfie.spacing;
        golfie = golfie.PX_24;
        michal['marginHorizontal'] = golfie;
        entity['description'] = michal;
        michal = {};
        zuuluu = oscard[zuuluu];
        zuuluu = report.bind(tangon)(zuuluu);
        zuuluu = zuuluu.spacing;
        zuuluu = zuuluu.PX_32;
        michal['marginTop'] = zuuluu;
        entity['carousel'] = michal;
        michal = {};
        zuuluu = 0;
        michal['marginBottom'] = zuuluu;
        entity['pagination'] = michal;
        return entity;
    };
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = {};
    golfie = 'function PremiumGiftPlanSelectTsx1(){const{STANDARD_EASING,withTiming,carouselVisibility}=this.__closure;const animationSettings={easing:STANDARD_EASING,duration:500};return{opacity:withTiming(carouselVisibility.get()?1:0,animationSettings),transform:[{translateY:withTiming(carouselVisibility.get()?0:100,animationSettings)}]};}';
    tangon['code'] = golfie;
    var _closure1_slot13 = tangon;
    tangon = 28;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/native/gifting/PremiumGiftPlanSelect.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: PremiumGiftPlanSelect
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            yankee = _closure1_slot0;
            romeon = _closure1_slot2;
            michal = 9;
            michal = romeon[michal];
            tangon = undefined;
            zuuluu = yankee.bind(tangon)(michal);
            michal = zuuluu.useNavigation;
            offset = michal.bind(zuuluu)();
            var _closure2_slot0 = offset;
            cntext = 10;
            michal = romeon[cntext];
            zuuluu = yankee.bind(tangon)(michal);
            michal = zuuluu.useHeaderHeight;
            sizing = michal.bind(zuuluu)();
            report = _closure1_slot1;
            michal = 11;
            michal = romeon[michal];
            michal = report.bind(tangon)(michal);
            michal = michal.bind(tangon)();
            papara = michal.width;
            var _closure2_slot1 = papara;
            zuuluu = michal.height;
            michal = 12;
            michal = romeon[michal];
            oscard = yankee.bind(tangon)(michal);
            michal = oscard.useNativeGiftContext;
            michal = michal.bind(oscard)();
            variable36 = michal.recipientUser;
            verify = michal.setPremiumType;
            var _closure2_slot2 = verify;
            backup = michal.claimableRewards;
            var _closure2_slot3 = backup;
            michal = 13;
            michal = romeon[michal];
            michal = report.bind(tangon)(michal);
            foxtra = michal.bind(tangon)();
            michal = _closure1_slot12;
            source = michal.bind(tangon)(papara, zuuluu);
            var _closure2_slot4 = source;
            report = _closure1_slot4;
            michal = report.useState;
            golfie = 0;
            michal = michal.bind(report)(golfie);
            kiloes = _closure1_slot3;
            option = 2;
            michal = kiloes.bind(tangon)(michal, option);
            ctrled = michal[golfie];
            var _closure2_slot5 = ctrled;
            zuuluu = 1;
            update = michal[zuuluu];
            michal = report.useState;
            sequen = false;
            michal = michal.bind(report)(sequen);
            michal = kiloes.bind(tangon)(michal, option);
            oscard = michal[golfie];
            michal = michal[zuuluu];
            var _closure2_slot6 = michal;
            result = report.useEffect;
            output = new Array(1);
            output[0] = offset;
            michal = function() {
                report = _closure2_slot0;
                tangon = report.addListener;
                zuuluu = 'state';
                michal = function() {
                    zuuluu = _closure2_slot0;
                    entity = zuuluu.getState;
                    entity = entity.bind(zuuluu)();
                    zuuluu = entity.routes;
                    entity = entity.index;
                    entity = zuuluu[entity];
                    zuuluu = _closure2_slot6;
                    tangon = entity.name;
                    report = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 14;
                    michal = michal[entity];
                    entity = undefined;
                    michal = report.bind(entity)(michal);
                    michal = michal.PremiumGiftScreens;
                    michal = michal.PLAN_SELECT;
                    michal = tangon === michal;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal = tangon.bind(report)(zuuluu, michal);
                var _closure3_slot0 = michal;
                entity = function() {
                    tangon = _closure2_slot0;
                    zuuluu = tangon.removeListener;
                    michal = _closure3_slot0;
                    entity = 'state';
                    entity = zuuluu.bind(tangon)(entity, michal);
                    entity = undefined;
                    return entity;
                };
                return entity;
            };
            michal = result.bind(report)(michal, output);
            michal = report.useState;
            config = null;
            michal = michal.bind(report)(config);
            michal = kiloes.bind(tangon)(michal, option);
            record = michal[golfie];
            var _closure2_slot7 = record;
            michal = michal[zuuluu];
            var _closure2_slot8 = michal;
            golfie = report.useRef;
            zuuluu = new Array(0);
            option = golfie.bind(report)(zuuluu);
            var _closure2_slot9 = option;
            golfie = report.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = _closure2_slot9;
                    michal = michal.current;
                    zuuluu = michal.length;
                    michal = _closure1_slot11;
                    michal = michal.length;
                    if(!(zuuluu >= michal)) { _fun00004_ip = 112; continue _fun00003 }
 33:
                    michal = global;
                    report = michal.Math;
                    tangon = report.max;
                    zuuluu = _closure2_slot9;
                    verify = zuuluu.current;
                    zuuluu = new Array(0);
                    option = 0;
                    offset = zuuluu;
                    oscard = arraySpread(offset, verify, option);
                    offset = tangon;
                    verify = zuuluu;
                    option = report;
                    zuuluu = apply(offset, verify, option);
                    tangon = michal.Number;
                    michal = tangon.isNaN;
                    michal = michal.bind(tangon)(zuuluu);
                    if(michal) { _fun00004_ip = 112; continue _fun00003 }
 101:
                    michal = _closure2_slot8;
                    entity = undefined;
                    entity = michal.bind(entity)(zuuluu);
 112:
                    entity = undefined;
                    return entity;
                }
            };
            michal = golfie.bind(report)(michal, zuuluu);
            var _closure2_slot10 = michal;
            golfie = report.useCallback;
            zuuluu = new Array(8);
            zuuluu[0] = offset;
            zuuluu[1] = papara;
            zuuluu[2] = verify;
            zuuluu[3] = option;
            zuuluu[4] = michal;
            zuuluu[5] = record;
            zuuluu[6] = ctrled;
            zuuluu[7] = backup;
            michal = function(argFoo) {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = argFoo;
                    offset = entity.item;
                    var _closure3_slot0 = offset;
                    golfie = entity.index;
                    var _closure3_slot1 = golfie;
                    tangon = _closure1_slot8;
                    zuuluu = _closure1_slot5;
                    michal = {};
                    report = _closure2_slot5;
                    report = report !== golfie;
                    michal['aria-hidden'] = report;
                    oscard = _closure1_slot1;
                    report = _closure1_slot2;
                    entity = 15;
                    report = report[entity];
                    entity = undefined;
                    oscard = oscard.bind(entity)(report);
                    report = {};
                    report['premiumType'] = offset;
                    offset = function() { // Original name: onPress
                        tangon = _closure2_slot2;
                        zuuluu = _closure3_slot0;
                        entity = undefined;
                        zuuluu = tangon.bind(entity)(zuuluu);
                        tangon = _closure2_slot0;
                        zuuluu = tangon.navigate;
                        report = _closure1_slot0;
                        oscard = _closure1_slot2;
                        michal = 14;
                        michal = oscard[michal];
                        michal = report.bind(entity)(michal);
                        michal = michal.PremiumGiftScreens;
                        michal = michal.CUSTOMIZATION;
                        michal = zuuluu.bind(tangon)(michal);
                        return entity;
                    };
                    report['onPress'] = offset;
                    offset = {};
                    romeon = _closure2_slot7;
                    yankee = null;
                    romeon = yankee != romeon;
                    yankee = undefined;
                    if(!romeon) { _fun00006_ip = 111; continue _fun00005 }
 107:
                    yankee = _closure2_slot7;
 111:
                    offset['height'] = yankee;
                    yankee = 'center';
                    offset['alignSelf'] = yankee;
                    romeon = _closure2_slot1;
                    yankee = 0.86;
                    yankee = yankee * romeon;
                    offset['width'] = yankee;
                    report['style'] = offset;
                    verify = function(argFoo) { // Original name: onLayout
                        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                            entity = argFoo;
                            entity = entity.nativeEvent;
                            entity = entity.layout;
                            golfie = entity.height;
                            oscard = 0;
                            if(!(golfie > oscard)) { _fun00008_ip = 100; continue _fun00007 }
 25:
                            option = _closure2_slot9;
                            tangon = option.current;
                            zuuluu = _closure3_slot1;
                            michal = global;
                            report = michal.Math;
                            michal = report.max;
                            option = option.current;
                            option = option[zuuluu];
                            verify = null;
                            verify = verify != option;
                            oscard = 0;
                            if(!verify) { _fun00008_ip = 80; continue _fun00007 }
 77:
                            oscard = option;
 80:
                            michal = michal.bind(report)(golfie, oscard);
                            tangon[zuuluu] = michal;
                            michal = _closure2_slot10;
                            entity = undefined;
                            entity = michal.bind(entity)();
 100:
                            entity = undefined;
                            return entity;
                        }
                    };
                    report['onLayout'] = verify;
                    option = _closure2_slot3;
                    report['claimableRewards'] = option;
                    report = tangon.bind(entity)(oscard, report, golfie);
                    michal['children'] = report;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                }
            };
            target = golfie.bind(report)(michal, zuuluu);
            michal = 16;
            zuuluu = romeon[michal];
            golfie = yankee.bind(tangon)(zuuluu);
            zuuluu = golfie.useSharedValue;
            verify = zuuluu.bind(golfie)(sequen);
            var _closure2_slot11 = verify;
            option = report.useEffect;
            golfie = new Array(2);
            golfie[0] = verify;
            golfie[1] = record;
            zuuluu = function() {
                zuuluu = _closure2_slot11;
                michal = zuuluu.set;
                tangon = _closure2_slot7;
                entity = null;
                entity = entity != tangon;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            zuuluu = option.bind(report)(zuuluu, golfie);
            michal = romeon[michal];
            golfie = yankee.bind(tangon)(michal);
            zuuluu = golfie.useAnimatedStyle;
            michal = function() { // Original name: Y
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    oscard = {};
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 17;
                    entity = michal[entity];
                    option = undefined;
                    entity = zuuluu.bind(option)(entity);
                    entity = entity.STANDARD_EASING;
                    oscard['easing'] = entity;
                    entity = 500;
                    oscard['duration'] = entity;
                    entity = {};
                    verify = 18;
                    michal = michal[verify];
                    offset = zuuluu.bind(option)(michal);
                    report = offset.withTiming;
                    golfie = _closure2_slot11;
                    zuuluu = golfie.get;
                    yankee = zuuluu.bind(golfie)();
                    zuuluu = 0;
                    if(!yankee) { _fun00010_ip = 91; continue _fun00009 }
 88:
                    zuuluu = 1;
 91:
                    zuuluu = report.bind(offset)(zuuluu, oscard);
                    entity['opacity'] = zuuluu;
                    zuuluu = {};
                    report = _closure1_slot0;
                    tangon = _closure1_slot2;
                    tangon = tangon[verify];
                    report = report.bind(option)(tangon);
                    tangon = report.withTiming;
                    option = _closure2_slot11;
                    michal = option.get;
                    option = michal.bind(option)();
                    michal = 100;
                    if(!option) { _fun00010_ip = 146; continue _fun00009 }
 144:
                    michal = 0;
 146:
                    michal = tangon.bind(report)(michal, oscard);
                    zuuluu['translateY'] = michal;
                    michal = new Array(1);
                    michal[0] = zuuluu;
                    entity['transform'] = michal;
                    return entity;
                }
            };
            option = {};
            offset = 17;
            offset = romeon[offset];
            offset = yankee.bind(tangon)(offset);
            offset = offset.STANDARD_EASING;
            option['STANDARD_EASING'] = offset;
            offset = 18;
            offset = romeon[offset];
            offset = yankee.bind(tangon)(offset);
            offset = offset.withTiming;
            option['withTiming'] = offset;
            option['carouselVisibility'] = verify;
            michal['__closure'] = option;
            option = 2946262965957.0;
            michal['__workletHash'] = option;
            option = _closure1_slot13;
            michal['__initData'] = option;
            sierra = zuuluu.bind(golfie)(michal);
            zuuluu = report.useMemo;
            michal = new Array(1);
            michal[0] = source;
            entity = function() {
                report = _closure1_slot1;
                oscard = _closure1_slot2;
                zuuluu = 8;
                entity = oscard[zuuluu];
                tangon = undefined;
                golfie = report.bind(tangon)(entity);
                michal = _closure2_slot4;
                entity = michal.headerBackgroundColor;
                entity = entity.color;
                option = golfie.bind(tangon)(entity);
                golfie = option.alpha;
                entity = 0;
                golfie = golfie.bind(option)(entity);
                entity = golfie.hex;
                golfie = entity.bind(golfie)();
                entity = new Array(2);
                entity[0] = golfie;
                zuuluu = oscard[zuuluu];
                zuuluu = report.bind(tangon)(zuuluu);
                michal = michal.headerBackgroundColor;
                michal = michal.color;
                tangon = zuuluu.bind(tangon)(michal);
                zuuluu = tangon.alpha;
                michal = 1;
                zuuluu = zuuluu.bind(tangon)(michal);
                michal = zuuluu.hex;
                michal = michal.bind(zuuluu)();
                entity[1] = michal;
                return entity;
            };
            verify = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot10;
            michal = _closure1_slot9;
            entity = {};
            if(!oscard) { _fun00002_ip = 650; continue _fun00001 }
 606:
            option = _closure1_slot8;
            golfie = _closure1_slot1;
            offset = _closure1_slot2;
            report = 19;
            report = offset[report];
            golfie = golfie.bind(tangon)(report);
            report = {'animated': true, 'barStyle': 'light-content'};
            oscard = option.bind(tangon)(golfie, report);
 650:
            report = new Array(5);
            report[0] = oscard;
            option = _closure1_slot8;
            output = _closure1_slot1;
            result = _closure1_slot2;
            oscard = 20;
            oscard = result[oscard];
            golfie = output.bind(tangon)(oscard);
            oscard = {};
            offset = 'cover';
            oscard['resizeMode'] = offset;
            yankee = source.headerImageContainer;
            offset = new Array(2);
            offset[0] = yankee;
            yankee = source.headerImage;
            offset[1] = yankee;
            oscard['style'] = offset;
            offset = 21;
            offset = result[offset];
            offset = output.bind(tangon)(offset);
            oscard['source'] = offset;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            yankee = _closure1_slot5;
            oscard = {};
            offset = source.headerImageContainer;
            golfie = new Array(2);
            golfie[0] = offset;
            offset = source.headerOverlay;
            golfie[1] = offset;
            oscard['style'] = golfie;
            oscard = option.bind(tangon)(yankee, oscard);
            report[2] = oscard;
            oscard = 22;
            oscard = result[oscard];
            golfie = output.bind(tangon)(oscard);
            oscard = {};
            offset = source.headerBackground;
            oscard['style'] = offset;
            offset = _closure1_slot7;
            romeon = offset.START;
            oscard['start'] = romeon;
            offset = offset.END;
            oscard['end'] = offset;
            oscard['colors'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[3] = oscard;
            golfie = _closure1_slot6;
            oscard = {};
            offset = _closure1_slot10;
            verify = {};
            kiloes = {};
            romeon = 7;
            romeon = result[romeon];
            romeon = output.bind(tangon)(romeon);
            romeon = romeon.spacing;
            romeon = romeon.PX_12;
            romeon = sizing + romeon;
            kiloes['paddingTop'] = romeon;
            romeon = new Array(1);
            romeon[0] = kiloes;
            verify['style'] = romeon;
            kiloes = config != variable36;
            if(!kiloes) { _fun00002_ip = 997; continue _fun00001 }
 918:
            output = _closure1_slot8;
            sizing = _closure1_slot1;
            status = _closure1_slot2;
            result = 23;
            romeon = status[result];
            sizing = sizing.bind(tangon)(romeon);
            romeon = {};
            echoed = source.avatar;
            romeon['style'] = echoed;
            romeon['guildId'] = tangon;
            echoed = _closure1_slot0;
            result = status[result];
            result = echoed.bind(tangon)(result);
            result = result.AvatarSizes;
            result = result.XLARGE;
            romeon['size'] = result;
            romeon['user'] = variable36;
            kiloes = output.bind(tangon)(sizing, romeon);
 997:
            romeon = new Array(4);
            romeon[0] = kiloes;
            result = _closure1_slot8;
            output = _closure1_slot0;
            sizing = _closure1_slot2;
            kiloes = 24;
            sizing = sizing[kiloes];
            sizing = output.bind(tangon)(sizing);
            output = sizing.Text;
            sizing = {'style': null, 'variant': 'heading-xxl/extrabold', 'color': 'always-white'};
            echoed = source.title;
            sizing['style'] = echoed;
            if(!(config == variable36)) { _fun00002_ip = 1122; continue _fun00001 }
 1063:
            whisks = _closure1_slot0;
            equals = _closure1_slot2;
            echoed = 25;
            status = equals[echoed];
            status = whisks.bind(tangon)(status);
            limora = status.intl;
            status = limora.string;
            echoed = equals[echoed];
            echoed = whisks.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.dqQgZm;
            echoed = status.bind(limora)(echoed);
            _fun00002_ip = 1201; continue _fun00001;
 1122:
            limora = _closure1_slot0;
            quebec = _closure1_slot2;
            status = 25;
            whisks = quebec[status];
            whisks = limora.bind(tangon)(whisks);
            equals = whisks.intl;
            whisks = equals.formatToPlainString;
            status = quebec[status];
            status = limora.bind(tangon)(status);
            status = status.t;
            limora = status.m5ggvL;
            status = {};
            quebec = variable36.globalName;
            if(!(config == quebec)) { _fun00002_ip = 1191; continue _fun00001 }
 1186:
            quebec = variable36.username;
 1191:
            status['username'] = quebec;
            echoed = whisks.bind(equals)(limora, status);
 1201:
            sizing['children'] = echoed;
            sizing = result.bind(tangon)(output, sizing);
            romeon[1] = sizing;
            output = _closure1_slot8;
            limora = _closure1_slot0;
            whisks = _closure1_slot2;
            kiloes = whisks[kiloes];
            kiloes = limora.bind(tangon)(kiloes);
            sizing = kiloes.Text;
            kiloes = {'style': null, 'variant': 'heading-sm/medium', 'color': 'always-white'};
            result = source.description;
            kiloes['style'] = result;
            result = 25;
            echoed = whisks[result];
            echoed = limora.bind(tangon)(echoed);
            status = echoed.intl;
            echoed = status.string;
            result = whisks[result];
            result = limora.bind(tangon)(result);
            result = result.t;
            result = result.30qzra;
            result = echoed.bind(status)(result);
            kiloes['children'] = result;
            kiloes = output.bind(tangon)(sizing, kiloes);
            romeon[2] = kiloes;
            if(!(config != foxtra)) { _fun00002_ip = 1342; continue _fun00001 }
 1333:
            foxtra = null;
            if(!(tangon !== backup)) { _fun00002_ip = 1598; continue _fun00001 }
 1342:
            sizing = _closure1_slot10;
            kiloes = _closure1_slot9;
            backup = {};
            echoed = _closure1_slot8;
            result = _closure1_slot1;
            status = _closure1_slot2;
            output = 26;
            output = status[output];
            result = result.bind(tangon)(output);
            output = {};
            limora = source.carousel;
            status = new Array(2);
            status[0] = limora;
            status[1] = sierra;
            output['style'] = status;
            status = _closure1_slot11;
            output['data'] = status;
            output['renderItem'] = target;
            output['width'] = papara;
            papara = config != record;
            config = undefined;
            if(!papara) { _fun00002_ip = 1429; continue _fun00001 }
 1426:
            config = record;
 1429:
            output['height'] = config;
            config = {};
            record = new Array(2);
            papara = -10;
            record[0] = papara;
            record[1] = cntext;
            config['activeOffsetX'] = record;
            output['panGestureHandlerProps'] = config;
            output['loop'] = sequen;
            sequen = 200;
            output['scrollAnimationDuration'] = sequen;
            sequen = 'parallax';
            output['mode'] = sequen;
            sequen = {'parallaxScrollingScale': 1, 'parallaxScrollingOffset': 40};
            output['modeConfig'] = sequen;
            output['onSnapToItem'] = update;
            result = echoed.bind(tangon)(result, output);
            output = new Array(2);
            output[0] = result;
            update = _closure1_slot8;
            echoed = _closure1_slot1;
            sequen = _closure1_slot2;
            result = 27;
            result = sequen[result];
            echoed = echoed.bind(tangon)(result);
            result = {};
            vacuum = _closure1_slot11;
            vacuum = vacuum.length;
            result['numberOfItems'] = vacuum;
            result['currentIndex'] = ctrled;
            source = source.pagination;
            result['containerStyle'] = source;
            result = update.bind(tangon)(echoed, result);
            output[1] = result;
            backup['children'] = output;
            foxtra = sizing.bind(tangon)(kiloes, backup);
 1598:
            romeon[3] = foxtra;
            verify['children'] = romeon;
            verify = offset.bind(tangon)(yankee, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[4] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();