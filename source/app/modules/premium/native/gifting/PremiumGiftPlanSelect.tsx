// app/modules/premium/native/gifting/PremiumGiftPlanSelect.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    options = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(options);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.View;
    var _closure1_slot5 = options;
    tango = tango.ScrollView;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.PremiumTypes;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.VerticalGradient;
    var _closure1_slot8 = tango;
    tango = 6;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot9 = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.Fragment;
    var _closure1_slot10 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot11 = tango;
    options = golf.TIER_2;
    tango = new Array(2);
    tango[0] = options;
    golf = golf.TIER_0;
    tango[1] = golf;
    var _closure1_slot12 = tango;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = function(argFoo, argBar) {
        golf = argFoo;
        verify = argBar;
        entity = {};
        mike = {};
        offset = 'absolute';
        mike['position'] = offset;
        mike['width'] = golf;
        zulu = 0.1;
        tango = zulu * verify;
        mike['height'] = tango;
        options = 1.75;
        tango = verify / options;
        zulu = zulu * verify;
        zulu = tango - zulu;
        mike['top'] = zulu;
        entity['headerBackground'] = mike;
        mike = {};
        report = _closure1_slot1;
        oscar = _closure1_slot2;
        zulu = 8;
        yankee = oscar[zulu];
        tango = undefined;
        yankee = report.bind(tango)(yankee);
        yankee = yankee.colors;
        yankee = yankee.BACKGROUND_PRIMARY;
        mike['color'] = yankee;
        entity['headerBackgroundColor'] = mike;
        mike = {};
        mike['position'] = offset;
        mike['width'] = golf;
        options = verify / options;
        mike['height'] = options;
        entity['headerImageContainer'] = mike;
        mike = {};
        mike['width'] = golf;
        entity['headerImage'] = mike;
        mike = {};
        mike['width'] = golf;
        golf = 9;
        golf = oscar[golf];
        options = report.bind(tango)(golf);
        golf = '#000000';
        verify = options.bind(tango)(golf);
        options = verify.alpha;
        golf = 0.8;
        options = options.bind(verify)(golf);
        golf = options.hex;
        golf = golf.bind(options)();
        mike['backgroundColor'] = golf;
        entity['headerOverlay'] = mike;
        mike = {};
        golf = 'center';
        mike['alignSelf'] = golf;
        entity['avatar'] = mike;
        mike = {};
        mike['textAlign'] = golf;
        options = oscar[zulu];
        options = report.bind(tango)(options);
        options = options.spacing;
        options = options.PX_12;
        mike['marginTop'] = options;
        options = oscar[zulu];
        options = report.bind(tango)(options);
        options = options.spacing;
        options = options.PX_24;
        mike['marginHorizontal'] = options;
        entity['title'] = mike;
        mike = {};
        mike['textAlign'] = golf;
        golf = oscar[zulu];
        golf = report.bind(tango)(golf);
        golf = golf.spacing;
        golf = golf.PX_12;
        mike['marginTop'] = golf;
        golf = oscar[zulu];
        golf = report.bind(tango)(golf);
        golf = golf.spacing;
        golf = golf.PX_24;
        mike['marginHorizontal'] = golf;
        entity['description'] = mike;
        mike = {};
        zulu = oscar[zulu];
        zulu = report.bind(tango)(zulu);
        zulu = zulu.spacing;
        zulu = zulu.PX_32;
        mike['marginTop'] = zulu;
        entity['carousel'] = mike;
        mike = {};
        zulu = 0;
        mike['marginBottom'] = zulu;
        entity['pagination'] = mike;
        return entity;
    };
    tango = golf.bind(options)(tango);
    var _closure1_slot13 = tango;
    tango = {};
    golf = 'function PremiumGiftPlanSelectTsx1(){const{STANDARD_EASING,withTiming,carouselVisibility}=this.__closure;const animationSettings={easing:STANDARD_EASING,duration:500};return{opacity:withTiming(carouselVisibility.get()?1:0,animationSettings),transform:[{translateY:withTiming(carouselVisibility.get()?0:100,animationSettings)}]};}';
    tango['code'] = golf;
    var _closure1_slot14 = tango;
    tango = 29;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/premium/native/gifting/PremiumGiftPlanSelect.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: PremiumGiftPlanSelect
        _fun87758: for(var _fun87758_ip = 0; ; ) switch(_fun87758_ip) {
 0:
            yankee = _closure1_slot0;
            romeo = _closure1_slot2;
            context = 10;
            mike = romeo[context];
            tango = undefined;
            zulu = yankee.bind(tango)(mike);
            mike = zulu.useNavigation;
            offset = mike.bind(zulu)();
            var _closure2_slot0 = offset;
            mike = 11;
            mike = romeo[mike];
            zulu = yankee.bind(tango)(mike);
            mike = zulu.useHeaderHeight;
            sizing = mike.bind(zulu)();
            mike = 12;
            mike = romeo[mike];
            oscar = yankee.bind(tango)(mike);
            report = oscar.useStateFromStoresObject;
            mike = _closure1_slot7;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                zulu = _closure1_slot7;
                entity = zulu.getWidth;
                mike = entity.bind(zulu)();
                entity = new Array(2);
                entity[0] = mike;
                mike = zulu.getHeight;
                mike = mike.bind(zulu)();
                entity[1] = mike;
                return entity;
            };
            mike = report.bind(oscar)(zulu, mike);
            kilo = _closure1_slot3;
            options = 2;
            mike = kilo.bind(tango)(mike, options);
            golf = 0;
            papa = mike[golf];
            var _closure2_slot1 = papa;
            zulu = 1;
            report = mike[zulu];
            mike = 13;
            mike = romeo[mike];
            oscar = yankee.bind(tango)(mike);
            mike = oscar.useNativeGiftContext;
            mike = mike.bind(oscar)();
            variable36 = mike.recipientUser;
            verify = mike.setPremiumType;
            var _closure2_slot2 = verify;
            backup = mike.claimableRewards;
            var _closure2_slot3 = backup;
            oscar = _closure1_slot1;
            mike = 14;
            mike = romeo[mike];
            mike = oscar.bind(tango)(mike);
            foxtrot = mike.bind(tango)();
            mike = _closure1_slot13;
            source = mike.bind(tango)(papa, report);
            var _closure2_slot4 = source;
            report = _closure1_slot4;
            mike = report.useState;
            mike = mike.bind(report)(golf);
            mike = kilo.bind(tango)(mike, options);
            control = mike[golf];
            var _closure2_slot5 = control;
            update = mike[zulu];
            mike = report.useState;
            sequence = false;
            mike = mike.bind(report)(sequence);
            mike = kilo.bind(tango)(mike, options);
            oscar = mike[golf];
            mike = mike[zulu];
            var _closure2_slot6 = mike;
            result = report.useEffect;
            output = new Array(1);
            output[0] = offset;
            mike = function() {
                report = _closure2_slot0;
                tango = report.addListener;
                zulu = 'state';
                mike = function() {
                    zulu = _closure2_slot0;
                    entity = zulu.getState;
                    entity = entity.bind(zulu)();
                    zulu = entity.routes;
                    entity = entity.index;
                    entity = zulu[entity];
                    zulu = _closure2_slot6;
                    tango = entity.name;
                    report = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 15;
                    mike = mike[entity];
                    entity = undefined;
                    mike = report.bind(entity)(mike);
                    mike = mike.PremiumGiftScreens;
                    mike = mike.PLAN_SELECT;
                    mike = tango === mike;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                };
                mike = tango.bind(report)(zulu, mike);
                var _closure3_slot0 = mike;
                entity = function() {
                    tango = _closure2_slot0;
                    zulu = tango.removeListener;
                    mike = _closure3_slot0;
                    entity = 'state';
                    entity = zulu.bind(tango)(entity, mike);
                    entity = undefined;
                    return entity;
                };
                return entity;
            };
            mike = result.bind(report)(mike, output);
            mike = report.useState;
            config = null;
            mike = mike.bind(report)(config);
            mike = kilo.bind(tango)(mike, options);
            record = mike[golf];
            var _closure2_slot7 = record;
            mike = mike[zulu];
            var _closure2_slot8 = mike;
            golf = report.useRef;
            zulu = new Array(0);
            options = golf.bind(report)(zulu);
            var _closure2_slot9 = options;
            golf = report.useCallback;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                _fun87763: for(var _fun87763_ip = 0; ; ) switch(_fun87763_ip) {
 0:
                    mike = _closure2_slot9;
                    mike = mike.current;
                    zulu = mike.length;
                    mike = _closure1_slot12;
                    mike = mike.length;
                    if(!(zulu >= mike)) { _fun87763_ip = 112; continue _fun87763 }
 33:
                    mike = global;
                    report = mike.Math;
                    tango = report.max;
                    zulu = _closure2_slot9;
                    verify = zulu.current;
                    zulu = new Array(0);
                    options = 0;
                    offset = zulu;
                    oscar = arraySpread(offset, verify, options);
                    offset = tango;
                    verify = zulu;
                    options = report;
                    zulu = apply(offset, verify, options);
                    tango = mike.Number;
                    mike = tango.isNaN;
                    mike = mike.bind(tango)(zulu);
                    if(mike) { _fun87763_ip = 112; continue _fun87763 }
 101:
                    mike = _closure2_slot8;
                    entity = undefined;
                    entity = mike.bind(entity)(zulu);
 112:
                    entity = undefined;
                    return entity;
                }
            };
            mike = golf.bind(report)(mike, zulu);
            var _closure2_slot10 = mike;
            golf = report.useCallback;
            zulu = new Array(8);
            zulu[0] = offset;
            zulu[1] = papa;
            zulu[2] = verify;
            zulu[3] = options;
            zulu[4] = mike;
            zulu[5] = record;
            zulu[6] = control;
            zulu[7] = backup;
            mike = function(argFoo) {
                _fun87764: for(var _fun87764_ip = 0; ; ) switch(_fun87764_ip) {
 0:
                    entity = argFoo;
                    offset = entity.item;
                    var _closure3_slot0 = offset;
                    golf = entity.index;
                    var _closure3_slot1 = golf;
                    tango = _closure1_slot9;
                    zulu = _closure1_slot5;
                    mike = {};
                    report = _closure2_slot5;
                    report = report !== golf;
                    mike['aria-hidden'] = report;
                    oscar = _closure1_slot1;
                    report = _closure1_slot2;
                    entity = 16;
                    report = report[entity];
                    entity = undefined;
                    oscar = oscar.bind(entity)(report);
                    report = {};
                    report['premiumType'] = offset;
                    offset = function() { // Original name: onPress
                        tango = _closure2_slot2;
                        zulu = _closure3_slot0;
                        entity = undefined;
                        zulu = tango.bind(entity)(zulu);
                        tango = _closure2_slot0;
                        zulu = tango.navigate;
                        report = _closure1_slot0;
                        oscar = _closure1_slot2;
                        mike = 15;
                        mike = oscar[mike];
                        mike = report.bind(entity)(mike);
                        mike = mike.PremiumGiftScreens;
                        mike = mike.CUSTOMIZATION;
                        mike = zulu.bind(tango)(mike);
                        return entity;
                    };
                    report['onPress'] = offset;
                    offset = {};
                    romeo = _closure2_slot7;
                    yankee = null;
                    romeo = yankee != romeo;
                    yankee = undefined;
                    if(!romeo) { _fun87764_ip = 113; continue _fun87764 }
 109:
                    yankee = _closure2_slot7;
 113:
                    offset['height'] = yankee;
                    yankee = 'center';
                    offset['alignSelf'] = yankee;
                    romeo = _closure2_slot1;
                    yankee = 0.86;
                    yankee = yankee * romeo;
                    offset['width'] = yankee;
                    report['style'] = offset;
                    verify = function(argFoo) { // Original name: onLayout
                        _fun87766: for(var _fun87766_ip = 0; ; ) switch(_fun87766_ip) {
 0:
                            entity = argFoo;
                            entity = entity.nativeEvent;
                            entity = entity.layout;
                            golf = entity.height;
                            oscar = 0;
                            if(!(golf > oscar)) { _fun87766_ip = 100; continue _fun87766 }
 25:
                            options = _closure2_slot9;
                            tango = options.current;
                            zulu = _closure3_slot1;
                            mike = global;
                            report = mike.Math;
                            mike = report.max;
                            options = options.current;
                            options = options[zulu];
                            verify = null;
                            verify = verify != options;
                            oscar = 0;
                            if(!verify) { _fun87766_ip = 80; continue _fun87766 }
 77:
                            oscar = options;
 80:
                            mike = mike.bind(report)(golf, oscar);
                            tango[zulu] = mike;
                            mike = _closure2_slot10;
                            entity = undefined;
                            entity = mike.bind(entity)();
 100:
                            entity = undefined;
                            return entity;
                        }
                    };
                    report['onLayout'] = verify;
                    options = _closure2_slot3;
                    report['claimableRewards'] = options;
                    report = tango.bind(entity)(oscar, report, golf);
                    mike['children'] = report;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                }
            };
            target = golf.bind(report)(mike, zulu);
            mike = 17;
            zulu = romeo[mike];
            golf = yankee.bind(tango)(zulu);
            zulu = golf.useSharedValue;
            verify = zulu.bind(golf)(sequence);
            var _closure2_slot11 = verify;
            options = report.useEffect;
            golf = new Array(2);
            golf[0] = verify;
            golf[1] = record;
            zulu = function() {
                zulu = _closure2_slot11;
                mike = zulu.set;
                tango = _closure2_slot7;
                entity = null;
                entity = entity != tango;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            zulu = options.bind(report)(zulu, golf);
            mike = romeo[mike];
            golf = yankee.bind(tango)(mike);
            zulu = golf.useAnimatedStyle;
            mike = function() { // Original name: q
                _fun87768: for(var _fun87768_ip = 0; ; ) switch(_fun87768_ip) {
 0:
                    oscar = {};
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 18;
                    entity = mike[entity];
                    options = undefined;
                    entity = zulu.bind(options)(entity);
                    entity = entity.STANDARD_EASING;
                    oscar['easing'] = entity;
                    entity = 500;
                    oscar['duration'] = entity;
                    entity = {};
                    verify = 19;
                    mike = mike[verify];
                    offset = zulu.bind(options)(mike);
                    report = offset.withTiming;
                    golf = _closure2_slot11;
                    zulu = golf.get;
                    yankee = zulu.bind(golf)();
                    zulu = 0;
                    if(!yankee) { _fun87768_ip = 91; continue _fun87768 }
 88:
                    zulu = 1;
 91:
                    zulu = report.bind(offset)(zulu, oscar);
                    entity['opacity'] = zulu;
                    zulu = {};
                    report = _closure1_slot0;
                    tango = _closure1_slot2;
                    tango = tango[verify];
                    report = report.bind(options)(tango);
                    tango = report.withTiming;
                    options = _closure2_slot11;
                    mike = options.get;
                    options = mike.bind(options)();
                    mike = 100;
                    if(!options) { _fun87768_ip = 146; continue _fun87768 }
 144:
                    mike = 0;
 146:
                    mike = tango.bind(report)(mike, oscar);
                    zulu['translateY'] = mike;
                    mike = new Array(1);
                    mike[0] = zulu;
                    entity['transform'] = mike;
                    return entity;
                }
            };
            options = {};
            offset = 18;
            offset = romeo[offset];
            offset = yankee.bind(tango)(offset);
            offset = offset.STANDARD_EASING;
            options['STANDARD_EASING'] = offset;
            offset = 19;
            offset = romeo[offset];
            offset = yankee.bind(tango)(offset);
            offset = offset.withTiming;
            options['withTiming'] = offset;
            options['carouselVisibility'] = verify;
            mike['__closure'] = options;
            options = 2946262965957.0;
            mike['__workletHash'] = options;
            options = _closure1_slot14;
            mike['__initData'] = options;
            sierra = zulu.bind(golf)(mike);
            zulu = report.useMemo;
            mike = new Array(1);
            mike[0] = source;
            entity = function() {
                report = _closure1_slot1;
                oscar = _closure1_slot2;
                zulu = 9;
                entity = oscar[zulu];
                tango = undefined;
                golf = report.bind(tango)(entity);
                mike = _closure2_slot4;
                entity = mike.headerBackgroundColor;
                entity = entity.color;
                options = golf.bind(tango)(entity);
                golf = options.alpha;
                entity = 0;
                golf = golf.bind(options)(entity);
                entity = golf.hex;
                golf = entity.bind(golf)();
                entity = new Array(2);
                entity[0] = golf;
                zulu = oscar[zulu];
                zulu = report.bind(tango)(zulu);
                mike = mike.headerBackgroundColor;
                mike = mike.color;
                tango = zulu.bind(tango)(mike);
                zulu = tango.alpha;
                mike = 1;
                zulu = zulu.bind(tango)(mike);
                mike = zulu.hex;
                mike = mike.bind(zulu)();
                entity[1] = mike;
                return entity;
            };
            verify = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot11;
            mike = _closure1_slot10;
            entity = {};
            if(!oscar) { _fun87758_ip = 693; continue _fun87758 }
 649:
            options = _closure1_slot9;
            golf = _closure1_slot1;
            offset = _closure1_slot2;
            report = 20;
            report = offset[report];
            golf = golf.bind(tango)(report);
            report = {'animated': true, 'barStyle': 'light-content'};
            oscar = options.bind(tango)(golf, report);
 693:
            report = new Array(5);
            report[0] = oscar;
            options = _closure1_slot9;
            output = _closure1_slot1;
            result = _closure1_slot2;
            oscar = 21;
            oscar = result[oscar];
            golf = output.bind(tango)(oscar);
            oscar = {};
            offset = 'cover';
            oscar['resizeMode'] = offset;
            yankee = source.headerImageContainer;
            offset = new Array(2);
            offset[0] = yankee;
            yankee = source.headerImage;
            offset[1] = yankee;
            oscar['style'] = offset;
            offset = 22;
            offset = result[offset];
            offset = output.bind(tango)(offset);
            oscar['source'] = offset;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            yankee = _closure1_slot5;
            oscar = {};
            offset = source.headerImageContainer;
            golf = new Array(2);
            golf[0] = offset;
            offset = source.headerOverlay;
            golf[1] = offset;
            oscar['style'] = golf;
            oscar = options.bind(tango)(yankee, oscar);
            report[2] = oscar;
            oscar = 23;
            oscar = result[oscar];
            golf = output.bind(tango)(oscar);
            oscar = {};
            offset = source.headerBackground;
            oscar['style'] = offset;
            offset = _closure1_slot8;
            romeo = offset.START;
            oscar['start'] = romeo;
            offset = offset.END;
            oscar['end'] = offset;
            oscar['colors'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[3] = oscar;
            golf = _closure1_slot6;
            oscar = {};
            offset = _closure1_slot11;
            verify = {};
            kilo = {};
            romeo = 8;
            romeo = result[romeo];
            romeo = output.bind(tango)(romeo);
            romeo = romeo.spacing;
            romeo = romeo.PX_12;
            romeo = sizing + romeo;
            kilo['paddingTop'] = romeo;
            romeo = new Array(1);
            romeo[0] = kilo;
            verify['style'] = romeo;
            kilo = config != variable36;
            if(!kilo) { _fun87758_ip = 1040; continue _fun87758 }
 961:
            output = _closure1_slot9;
            sizing = _closure1_slot1;
            status = _closure1_slot2;
            result = 24;
            romeo = status[result];
            sizing = sizing.bind(tango)(romeo);
            romeo = {};
            echo = source.avatar;
            romeo['style'] = echo;
            romeo['guildId'] = tango;
            echo = _closure1_slot0;
            result = status[result];
            result = echo.bind(tango)(result);
            result = result.AvatarSizes;
            result = result.XLARGE;
            romeo['size'] = result;
            romeo['user'] = variable36;
            kilo = output.bind(tango)(sizing, romeo);
 1040:
            romeo = new Array(4);
            romeo[0] = kilo;
            result = _closure1_slot9;
            output = _closure1_slot0;
            sizing = _closure1_slot2;
            kilo = 25;
            sizing = sizing[kilo];
            sizing = output.bind(tango)(sizing);
            output = sizing.Text;
            sizing = {'style': null, 'variant': 'heading-xxl/extrabold', 'color': 'always-white'};
            echo = source.title;
            sizing['style'] = echo;
            if(!(config == variable36)) { _fun87758_ip = 1163; continue _fun87758 }
 1106:
            whiskey = _closure1_slot0;
            equality = _closure1_slot2;
            echo = 26;
            status = equality[echo];
            status = whiskey.bind(tango)(status);
            lima = status.intl;
            status = lima.string;
            echo = equality[echo];
            echo = whiskey.bind(tango)(echo);
            echo = echo.t;
            echo = echo.dqQgZm;
            echo = status.bind(lima)(echo);
            _fun87758_ip = 1240; continue _fun87758;
 1163:
            lima = _closure1_slot0;
            quebec = _closure1_slot2;
            status = 26;
            whiskey = quebec[status];
            whiskey = lima.bind(tango)(whiskey);
            equality = whiskey.intl;
            whiskey = equality.formatToPlainString;
            status = quebec[status];
            status = lima.bind(tango)(status);
            status = status.t;
            lima = status.m5ggvL;
            status = {};
            quebec = variable36.globalName;
            if(!(config == quebec)) { _fun87758_ip = 1230; continue _fun87758 }
 1225:
            quebec = variable36.username;
 1230:
            status['username'] = quebec;
            echo = whiskey.bind(equality)(lima, status);
 1240:
            sizing['children'] = echo;
            sizing = result.bind(tango)(output, sizing);
            romeo[1] = sizing;
            output = _closure1_slot9;
            lima = _closure1_slot0;
            whiskey = _closure1_slot2;
            kilo = whiskey[kilo];
            kilo = lima.bind(tango)(kilo);
            sizing = kilo.Text;
            kilo = {'style': null, 'variant': 'heading-sm/medium', 'color': 'always-white'};
            result = source.description;
            kilo['style'] = result;
            result = 26;
            echo = whiskey[result];
            echo = lima.bind(tango)(echo);
            status = echo.intl;
            echo = status.string;
            result = whiskey[result];
            result = lima.bind(tango)(result);
            result = result.t;
            result = result.30qzra;
            result = echo.bind(status)(result);
            kilo['children'] = result;
            kilo = output.bind(tango)(sizing, kilo);
            romeo[2] = kilo;
            if(!(config != foxtrot)) { _fun87758_ip = 1379; continue _fun87758 }
 1370:
            foxtrot = null;
            if(!(tango !== backup)) { _fun87758_ip = 1635; continue _fun87758 }
 1379:
            sizing = _closure1_slot11;
            kilo = _closure1_slot10;
            backup = {};
            echo = _closure1_slot9;
            result = _closure1_slot1;
            status = _closure1_slot2;
            output = 27;
            output = status[output];
            result = result.bind(tango)(output);
            output = {};
            lima = source.carousel;
            status = new Array(2);
            status[0] = lima;
            status[1] = sierra;
            output['style'] = status;
            status = _closure1_slot12;
            output['data'] = status;
            output['renderItem'] = target;
            output['width'] = papa;
            papa = config != record;
            config = undefined;
            if(!papa) { _fun87758_ip = 1466; continue _fun87758 }
 1463:
            config = record;
 1466:
            output['height'] = config;
            config = {};
            record = new Array(2);
            papa = -10;
            record[0] = papa;
            record[1] = context;
            config['activeOffsetX'] = record;
            output['panGestureHandlerProps'] = config;
            output['loop'] = sequence;
            sequence = 200;
            output['scrollAnimationDuration'] = sequence;
            sequence = 'parallax';
            output['mode'] = sequence;
            sequence = {'parallaxScrollingScale': 1, 'parallaxScrollingOffset': 40};
            output['modeConfig'] = sequence;
            output['onSnapToItem'] = update;
            result = echo.bind(tango)(result, output);
            output = new Array(2);
            output[0] = result;
            update = _closure1_slot9;
            echo = _closure1_slot1;
            sequence = _closure1_slot2;
            result = 28;
            result = sequence[result];
            echo = echo.bind(tango)(result);
            result = {};
            vacuum = _closure1_slot12;
            vacuum = vacuum.length;
            result['numberOfItems'] = vacuum;
            result['currentIndex'] = control;
            source = source.pagination;
            result['containerStyle'] = source;
            result = update.bind(tango)(echo, result);
            output[1] = result;
            backup['children'] = output;
            foxtrot = sizing.bind(tango)(kilo, backup);
 1635:
            romeo[3] = foxtrot;
            verify['children'] = romeo;
            verify = offset.bind(tango)(yankee, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[4] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();