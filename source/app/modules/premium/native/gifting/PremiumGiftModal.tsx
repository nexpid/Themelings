// app/modules/premium/native/gifting/PremiumGiftModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = golfie[entity];
    entity = undefined;
    michal = romeon.bind(entity)(michal);
    var _closure1_slot3 = michal;
    michal = 1;
    report = golfie[michal];
    michal = argCor;
    michal = michal.bind(entity)(report);
    var _closure1_slot4 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.jsx;
    var _closure1_slot5 = michal;
    michal = {};
    report = 'PremiumGiftPlanSelect';
    michal['PLAN_SELECT'] = report;
    report = 'PremiumGiftCustomization';
    michal['CUSTOMIZATION'] = report;
    report = 'PremiumGiftSuccess';
    michal['SUCCESS'] = report;
    var _closure1_slot6 = michal;
    report = {};
    offset = michal.PLAN_SELECT;
    option = 3;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.PaymentFlowStep;
    verify = verify.SKU_SELECT;
    report[offset] = verify;
    offset = michal.CUSTOMIZATION;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.PaymentFlowStep;
    verify = verify.PLAN_SELECT;
    report[offset] = verify;
    verify = michal.SUCCESS;
    option = golfie[option];
    option = oscard.bind(entity)(option);
    option = option.PaymentFlowStep;
    option = option.CONFIRM;
    report[verify] = option;
    var _closure1_slot7 = report;
    report = 4;
    report = golfie[report];
    verify = oscard.bind(entity)(report);
    option = verify.createStyles;
    report = {};
    offset = {};
    yankee = 5;
    yankee = golfie[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = yankee;
    yankee = 'transparent';
    offset['shadowColor'] = yankee;
    report['header'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot8 = report;
    report = 17;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/premium/native/gifting/PremiumGiftModal.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: PremiumGiftModal
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            result = entity.recipientUserId;
            kiloes = entity.premiumType;
            option = entity.planInterval;
            offset = entity.analyticsLocation;
            var _closure2_slot0 = offset;
            michal = entity.analyticsLocations;
            var _closure2_slot1 = michal;
            foxtra = entity.initialRoute;
            tangon = undefined;
            var _closure2_slot3 = tangon;
            oscard = _closure1_slot1;
            verify = _closure1_slot2;
            entity = 10;
            zuuluu = verify[entity];
            zuuluu = oscard.bind(tangon)(zuuluu);
            zuuluu = zuuluu.bind(tangon)(michal);
            report = zuuluu.analyticsLocations;
            zuuluu = 11;
            zuuluu = verify[zuuluu];
            oscard = oscard.bind(tangon)(zuuluu);
            zuuluu = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 12;
                michal = michal[entity];
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                entity = michal.v4;
                entity = entity.bind(michal)();
                return entity;
            };
            romeon = oscard.bind(tangon)(zuuluu);
            var _closure2_slot2 = romeon;
            verify = _closure1_slot4;
            oscard = verify.useMemo;
            zuuluu = new Array(3);
            zuuluu[0] = romeon;
            zuuluu[1] = offset;
            zuuluu[2] = michal;
            michal = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 3;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.getBasePurchaseFlowAnalyticsFields;
                entity = {};
                tangon = true;
                entity['isGift'] = tangon;
                report = _closure2_slot2;
                entity['analyticsLoadId'] = report;
                report = _closure2_slot0;
                entity['analyticsLocation'] = report;
                tangon = _closure2_slot1;
                entity['analyticsLocations'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            echoed = oscard.bind(verify)(michal, zuuluu);
            michal = null;
            if(!(michal == foxtra)) { _fun00002_ip = 190; continue _fun00001 }
 161:
            if(!(michal == kiloes)) { _fun00002_ip = 177; continue _fun00001 }
 165:
            michal = _closure1_slot6;
            michal = michal.PLAN_SELECT;
            _fun00002_ip = 187; continue _fun00001;
 177:
            zuuluu = _closure1_slot6;
            michal = zuuluu.CUSTOMIZATION;
 187:
            foxtra = michal;
 190:
            oscard = _closure1_slot4;
            verify = oscard.useCallback;
            zuuluu = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 13;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.pop;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            michal = new Array(0);
            output = verify.bind(oscard)(zuuluu, michal);
            michal = function(argFoo, argBar) { // Original name: useGetScreens
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    yankee = argFoo;
                    option = argBar;
                    var _closure3_slot0 = option;
                    entity = _closure1_slot8;
                    verify = undefined;
                    report = entity.bind(verify)();
                    entity = {};
                    offset = _closure1_slot6;
                    zuuluu = offset.PLAN_SELECT;
                    michal = {'title': '', 'headerLeft': null, 'headerTransparent': true};
                    golfie = '';
                    romeon = offset.PLAN_SELECT;
                    offset = undefined;
                    if(!(yankee === romeon)) { _fun00004_ip = 74; continue _fun00003 }
 67:
                    offset = function(argFoo) {
                        tangon = argFoo;
                        michal = _closure1_slot0;
                        zuuluu = _closure1_slot2;
                        entity = 6;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        report = michal.bind(zuuluu)(entity);
                        michal = report.getHeaderCloseButton;
                        entity = _closure3_slot0;
                        michal = michal.bind(report)(entity);
                        entity = {};
                        verify = entity;
                        option = tangon;
                        report = copyDataProperties(verify, option);
                        tangon = tangon.labelStyle;
                        oscard = new Array(2);
                        oscard[0] = tangon;
                        tangon = {};
                        report = 'white';
                        tangon['color'] = report;
                        oscard[1] = tangon;
                        tangon = 'labelStyle';
                        entity[tangon] = oscard;
                        tangon = 'tintColor';
                        entity[tangon] = report;
                        entity = michal.bind(zuuluu)(entity);
                        return entity;
                    };
 74:
                    michal['headerLeft'] = offset;
                    offset = function() { // Original name: render
                        tangon = _closure1_slot5;
                        michal = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 7;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)(entity);
                        entity = {};
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    michal['render'] = offset;
                    entity[zuuluu] = michal;
                    offset = _closure1_slot6;
                    zuuluu = offset.CUSTOMIZATION;
                    michal = {};
                    michal['title'] = golfie;
                    offset = offset.CUSTOMIZATION;
                    if(!(yankee !== offset)) { _fun00004_ip = 155; continue _fun00003 }
 123:
                    yankee = _closure1_slot0;
                    romeon = _closure1_slot2;
                    offset = 6;
                    offset = romeon[offset];
                    yankee = yankee.bind(verify)(offset);
                    offset = yankee.getHeaderBackButton;
                    offset = offset.bind(yankee)();
                    _fun00004_ip = 186; continue _fun00003;
 155:
                    romeon = _closure1_slot0;
                    foxtra = _closure1_slot2;
                    yankee = 6;
                    yankee = foxtra[yankee];
                    romeon = romeon.bind(verify)(yankee);
                    yankee = romeon.getHeaderCloseButton;
                    offset = yankee.bind(romeon)(option);
 186:
                    michal['headerLeft'] = offset;
                    offset = report.header;
                    michal['headerStyle'] = offset;
                    offset = function() { // Original name: render
                        tangon = _closure1_slot5;
                        michal = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 8;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)(entity);
                        entity = {};
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    michal['render'] = offset;
                    entity[zuuluu] = michal;
                    michal = _closure1_slot6;
                    zuuluu = michal.SUCCESS;
                    michal = {};
                    michal['title'] = golfie;
                    golfie = _closure1_slot0;
                    offset = _closure1_slot2;
                    oscard = 6;
                    oscard = offset[oscard];
                    golfie = golfie.bind(verify)(oscard);
                    oscard = golfie.getHeaderCloseButton;
                    oscard = oscard.bind(golfie)(option);
                    michal['headerLeft'] = oscard;
                    report = report.header;
                    michal['headerStyle'] = report;
                    tangon = function() { // Original name: render
                        tangon = _closure1_slot5;
                        michal = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 9;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)(entity);
                        entity = {};
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    michal['render'] = tangon;
                    entity[zuuluu] = michal;
                    return entity;
                }
            };
            romeon = michal.bind(tangon)(foxtra, output);
            zuuluu = oscard.useState;
            michal = _closure1_slot7;
            michal = michal[foxtra];
            oscard = zuuluu.bind(oscard)(michal);
            zuuluu = _closure1_slot3;
            michal = 2;
            zuuluu = zuuluu.bind(tangon)(oscard, michal);
            michal = 0;
            verify = zuuluu[michal];
            michal = 1;
            sizing = zuuluu[michal];
            _closure2_slot3 = sizing;
            zuuluu = _closure1_slot5;
            offset = _closure1_slot0;
            backup = _closure1_slot2;
            entity = backup[entity];
            entity = offset.bind(tangon)(entity);
            michal = entity.AnalyticsLocationProvider;
            entity = {};
            entity['value'] = report;
            report = 14;
            report = backup[report];
            report = offset.bind(tangon)(report);
            oscard = report.NativeGiftContextProvider;
            report = {};
            report['basePurchaseAnalytics'] = echoed;
            report['recipientUserId'] = result;
            report['onClose'] = output;
            report['setCurrentAnalyticsStep'] = sizing;
            report['premiumType'] = kiloes;
            report['planInterval'] = option;
            option = _closure1_slot1;
            golfie = 15;
            golfie = backup[golfie];
            option = option.bind(tangon)(golfie);
            golfie = {};
            golfie['currentStep'] = verify;
            verify = 16;
            verify = backup[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.Navigator;
            verify = {};
            verify['initialRouteName'] = foxtra;
            verify['screens'] = romeon;
            yankee = function(argFoo) { // Original name: onStateChange
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = argFoo;
                    michal = null;
                    if(!(michal != entity)) { _fun00006_ip = 54; continue _fun00005 }
 9:
                    michal = entity.routes;
                    entity = entity.index;
                    entity = michal[entity];
                    michal = entity.name;
                    zuuluu = _closure2_slot3;
                    entity = _closure1_slot7;
                    michal = entity[michal];
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
 54:
                    entity = undefined;
                    return entity;
                }
            };
            verify['onStateChange'] = yankee;
            verify = zuuluu.bind(tangon)(offset, verify);
            golfie['children'] = verify;
            golfie = zuuluu.bind(tangon)(option, golfie);
            report['children'] = golfie;
            report = zuuluu.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['PremiumGiftScreens'] = michal;
    return entity;
})();