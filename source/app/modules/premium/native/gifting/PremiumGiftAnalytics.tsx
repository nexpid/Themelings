// app/modules/premium/native/gifting/PremiumGiftAnalytics.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/native/gifting/PremiumGiftAnalytics.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: PremiumGiftAnalytics
        entity = argFoo;
        romeon = entity.currentStep;
        var _closure2_slot0 = romeon;
        report = entity.children;
        oscard = _closure1_slot0;
        tangon = _closure1_slot2;
        zuuluu = 3;
        zuuluu = tangon[zuuluu];
        tangon = undefined;
        oscard = oscard.bind(tangon)(zuuluu);
        zuuluu = oscard.useNativeGiftContext;
        oscard = zuuluu.bind(oscard)();
        yankee = oscard.customGiftMessage;
        var _closure2_slot1 = yankee;
        zuuluu = oscard.productId;
        var _closure2_slot2 = zuuluu;
        verify = oscard.basePurchaseAnalytics;
        var _closure2_slot3 = verify;
        golfie = _closure1_slot3;
        option = golfie.useRef;
        oscard = null;
        option = option.bind(golfie)(oscard);
        var _closure2_slot4 = option;
        oscard = global;
        offset = oscard.Date;
        oscard = offset.now;
        offset = oscard.bind(offset)();
        oscard = golfie.useRef;
        oscard = oscard.bind(golfie)(offset);
        var _closure2_slot5 = oscard;
        oscard = golfie.useRef;
        oscard = oscard.bind(golfie)(offset);
        var _closure2_slot6 = oscard;
        offset = golfie.useEffect;
        oscard = new Array(5);
        oscard[0] = verify;
        oscard[1] = romeon;
        oscard[2] = option;
        oscard[3] = yankee;
        oscard[4] = zuuluu;
        zuuluu = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zuuluu = _closure2_slot0;
                michal = _closure2_slot4;
                michal = michal.current;
                if(!(zuuluu !== michal)) { _fun00002_ip = 580; continue _fun00001 }
 23:
                michal = global;
                zuuluu = michal.Date;
                michal = zuuluu.now;
                michal = michal.bind(zuuluu)();
                zuuluu = _closure2_slot4;
                tangon = zuuluu.current;
                zuuluu = null;
                if(!(zuuluu == tangon)) { _fun00002_ip = 186; continue _fun00001 }
 58:
                verify = _closure1_slot0;
                yankee = _closure1_slot2;
                tangon = 7;
                tangon = yankee[tangon];
                option = undefined;
                report = verify.bind(option)(tangon);
                tangon = report.trackPaymentFlowStartedAnalyticsAndCTP;
                offset = _closure2_slot3;
                tangon = tangon.bind(report)(offset);
                report = _closure1_slot1;
                tangon = 5;
                tangon = yankee[tangon];
                oscard = report.bind(option)(tangon);
                report = oscard.track;
                zuuluu = _closure1_slot4;
                tangon = zuuluu.PAYMENT_FLOW_LOADED;
                zuuluu = {};
                golfie = 4;
                golfie = yankee[golfie];
                verify = verify.bind(option)(golfie);
                option = verify.getPaymentFlowStepAnalyticsFields;
                golfie = {};
                yankee = _closure2_slot0;
                golfie['initial_step'] = yankee;
                output = option.bind(verify)(offset, golfie);
                result = zuuluu;
                golfie = copyDataProperties(result, output);
                zuuluu = report.bind(oscard)(tangon, zuuluu);
                _fun00002_ip = 556; continue _fun00001;
 186:
                tangon = _closure2_slot0;
                report = _closure1_slot0;
                zuuluu = _closure1_slot2;
                offset = 4;
                zuuluu = zuuluu[offset];
                verify = undefined;
                zuuluu = report.bind(verify)(zuuluu);
                zuuluu = zuuluu.PaymentFlowStep;
                zuuluu = zuuluu.CONFIRM;
                if(!(tangon === zuuluu)) { _fun00002_ip = 403; continue _fun00001 }
 234:
                tangon = _closure1_slot1;
                kiloes = _closure1_slot2;
                zuuluu = 5;
                zuuluu = kiloes[zuuluu];
                oscard = tangon.bind(verify)(zuuluu);
                report = oscard.track;
                zuuluu = _closure1_slot4;
                tangon = zuuluu.PAYMENT_FLOW_SUCCEEDED;
                zuuluu = {};
                backup = _closure1_slot0;
                golfie = kiloes[offset];
                foxtra = backup.bind(verify)(golfie);
                romeon = foxtra.getPaymentFlowStepAnalyticsFields;
                yankee = _closure2_slot3;
                golfie = {};
                sizing = _closure2_slot2;
                golfie['subscription_plan_gateway_plan_id'] = sizing;
                output = romeon.bind(foxtra)(yankee, golfie);
                result = zuuluu;
                golfie = copyDataProperties(result, output);
                yankee = _closure2_slot1;
                golfie = 6;
                romeon = kiloes[golfie];
                romeon = backup.bind(verify)(romeon);
                foxtra = romeon.intl;
                romeon = foxtra.string;
                golfie = kiloes[golfie];
                golfie = backup.bind(verify)(golfie);
                golfie = golfie.t;
                golfie = golfie.ZkOo1d;
                golfie = romeon.bind(foxtra)(golfie);
                yankee = yankee !== golfie;
                golfie = 'is_custom_message_edited';
                zuuluu[golfie] = yankee;
                yankee = false;
                golfie = 'is_custom_emoji_sound_available';
                zuuluu[golfie] = yankee;
                zuuluu = report.bind(oscard)(tangon, zuuluu);
 403:
                tangon = _closure1_slot1;
                golfie = _closure1_slot2;
                zuuluu = 5;
                zuuluu = golfie[zuuluu];
                oscard = tangon.bind(verify)(zuuluu);
                report = oscard.track;
                zuuluu = _closure1_slot4;
                tangon = zuuluu.PAYMENT_FLOW_STEP;
                zuuluu = {};
                option = _closure1_slot0;
                golfie = golfie[offset];
                offset = option.bind(verify)(golfie);
                verify = offset.getPaymentFlowStepAnalyticsFields;
                option = _closure2_slot3;
                golfie = {};
                yankee = _closure2_slot4;
                yankee = yankee.current;
                golfie['from_step'] = yankee;
                yankee = _closure2_slot0;
                golfie['to_step'] = yankee;
                yankee = _closure2_slot6;
                yankee = yankee.current;
                yankee = michal - yankee;
                golfie['step_duration_ms'] = yankee;
                yankee = _closure2_slot5;
                yankee = yankee.current;
                yankee = michal - yankee;
                golfie['flow_duration_ms'] = yankee;
                yankee = _closure2_slot2;
                golfie['subscription_plan_gateway_plan_id'] = yankee;
                output = verify.bind(offset)(option, golfie);
                result = zuuluu;
                golfie = copyDataProperties(result, output);
                zuuluu = report.bind(oscard)(tangon, zuuluu);
 556:
                tangon = _closure2_slot4;
                zuuluu = _closure2_slot0;
                tangon['current'] = zuuluu;
                entity = _closure2_slot6;
                entity['current'] = michal;
 580:
                entity = undefined;
                return entity;
            }
        };
        zuuluu = offset.bind(golfie)(zuuluu, oscard);
        oscard = golfie.useEffect;
        zuuluu = new Array(2);
        zuuluu[0] = verify;
        zuuluu[1] = option;
        michal = function() {
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure2_slot4;
                    report = entity.current;
                    oscard = _closure1_slot0;
                    tangon = _closure1_slot2;
                    entity = 4;
                    tangon = tangon[entity];
                    entity = undefined;
                    tangon = oscard.bind(entity)(tangon);
                    tangon = tangon.PaymentFlowStep;
                    tangon = tangon.CONFIRM;
                    if(!(report !== tangon)) { _fun00004_ip = 98; continue _fun00003 }
 53:
                    report = _closure1_slot1;
                    oscard = _closure1_slot2;
                    tangon = 5;
                    tangon = oscard[tangon];
                    report = report.bind(entity)(tangon);
                    tangon = report.track;
                    zuuluu = _closure1_slot4;
                    zuuluu = zuuluu.PAYMENT_FLOW_CANCELED;
                    michal = _closure2_slot3;
                    michal = tangon.bind(report)(zuuluu, michal);
 98:
                    return entity;
                }
            };
            return entity;
        };
        michal = oscard.bind(golfie)(michal, zuuluu);
        zuuluu = _closure1_slot6;
        michal = _closure1_slot5;
        entity = {};
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();