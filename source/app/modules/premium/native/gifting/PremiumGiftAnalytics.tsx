// app/modules/premium/native/gifting/PremiumGiftAnalytics.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot6 = tango;
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/premium/native/gifting/PremiumGiftAnalytics.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: PremiumGiftAnalytics
        entity = argFoo;
        romeo = entity.currentStep;
        var _closure2_slot0 = romeo;
        report = entity.children;
        oscar = _closure1_slot0;
        tango = _closure1_slot2;
        zulu = 3;
        zulu = tango[zulu];
        tango = undefined;
        oscar = oscar.bind(tango)(zulu);
        zulu = oscar.useNativeGiftContext;
        oscar = zulu.bind(oscar)();
        yankee = oscar.customGiftMessage;
        var _closure2_slot1 = yankee;
        zulu = oscar.productId;
        var _closure2_slot2 = zulu;
        verify = oscar.basePurchaseAnalytics;
        var _closure2_slot3 = verify;
        golf = _closure1_slot3;
        options = golf.useRef;
        oscar = null;
        options = options.bind(golf)(oscar);
        var _closure2_slot4 = options;
        oscar = global;
        offset = oscar.Date;
        oscar = offset.now;
        offset = oscar.bind(offset)();
        oscar = golf.useRef;
        oscar = oscar.bind(golf)(offset);
        var _closure2_slot5 = oscar;
        oscar = golf.useRef;
        oscar = oscar.bind(golf)(offset);
        var _closure2_slot6 = oscar;
        offset = golf.useEffect;
        oscar = new Array(5);
        oscar[0] = verify;
        oscar[1] = romeo;
        oscar[2] = options;
        oscar[3] = yankee;
        oscar[4] = zulu;
        zulu = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zulu = _closure2_slot0;
                mike = _closure2_slot4;
                mike = mike.current;
                if(!(zulu !== mike)) { _fun00002_ip = 580; continue _fun00001 }
 23:
                mike = global;
                zulu = mike.Date;
                mike = zulu.now;
                mike = mike.bind(zulu)();
                zulu = _closure2_slot4;
                tango = zulu.current;
                zulu = null;
                if(!(zulu == tango)) { _fun00002_ip = 186; continue _fun00001 }
 58:
                verify = _closure1_slot0;
                yankee = _closure1_slot2;
                tango = 7;
                tango = yankee[tango];
                options = undefined;
                report = verify.bind(options)(tango);
                tango = report.trackPaymentFlowStartedAnalyticsAndCTP;
                offset = _closure2_slot3;
                tango = tango.bind(report)(offset);
                report = _closure1_slot1;
                tango = 5;
                tango = yankee[tango];
                oscar = report.bind(options)(tango);
                report = oscar.track;
                zulu = _closure1_slot4;
                tango = zulu.PAYMENT_FLOW_LOADED;
                zulu = {};
                golf = 4;
                golf = yankee[golf];
                verify = verify.bind(options)(golf);
                options = verify.getPaymentFlowStepAnalyticsFields;
                golf = {};
                yankee = _closure2_slot0;
                golf['initial_step'] = yankee;
                output = options.bind(verify)(offset, golf);
                result = zulu;
                golf = copyDataProperties(result, output);
                zulu = report.bind(oscar)(tango, zulu);
                _fun00002_ip = 556; continue _fun00001;
 186:
                tango = _closure2_slot0;
                report = _closure1_slot0;
                zulu = _closure1_slot2;
                offset = 4;
                zulu = zulu[offset];
                verify = undefined;
                zulu = report.bind(verify)(zulu);
                zulu = zulu.PaymentFlowStep;
                zulu = zulu.CONFIRM;
                if(!(tango === zulu)) { _fun00002_ip = 403; continue _fun00001 }
 234:
                tango = _closure1_slot1;
                kilo = _closure1_slot2;
                zulu = 5;
                zulu = kilo[zulu];
                oscar = tango.bind(verify)(zulu);
                report = oscar.track;
                zulu = _closure1_slot4;
                tango = zulu.PAYMENT_FLOW_SUCCEEDED;
                zulu = {};
                backup = _closure1_slot0;
                golf = kilo[offset];
                foxtrot = backup.bind(verify)(golf);
                romeo = foxtrot.getPaymentFlowStepAnalyticsFields;
                yankee = _closure2_slot3;
                golf = {};
                sizing = _closure2_slot2;
                golf['subscription_plan_gateway_plan_id'] = sizing;
                output = romeo.bind(foxtrot)(yankee, golf);
                result = zulu;
                golf = copyDataProperties(result, output);
                yankee = _closure2_slot1;
                golf = 6;
                romeo = kilo[golf];
                romeo = backup.bind(verify)(romeo);
                foxtrot = romeo.intl;
                romeo = foxtrot.string;
                golf = kilo[golf];
                golf = backup.bind(verify)(golf);
                golf = golf.t;
                golf = golf.ZkOo1d;
                golf = romeo.bind(foxtrot)(golf);
                yankee = yankee !== golf;
                golf = 'is_custom_message_edited';
                zulu[golf] = yankee;
                yankee = false;
                golf = 'is_custom_emoji_sound_available';
                zulu[golf] = yankee;
                zulu = report.bind(oscar)(tango, zulu);
 403:
                tango = _closure1_slot1;
                golf = _closure1_slot2;
                zulu = 5;
                zulu = golf[zulu];
                oscar = tango.bind(verify)(zulu);
                report = oscar.track;
                zulu = _closure1_slot4;
                tango = zulu.PAYMENT_FLOW_STEP;
                zulu = {};
                options = _closure1_slot0;
                golf = golf[offset];
                offset = options.bind(verify)(golf);
                verify = offset.getPaymentFlowStepAnalyticsFields;
                options = _closure2_slot3;
                golf = {};
                yankee = _closure2_slot4;
                yankee = yankee.current;
                golf['from_step'] = yankee;
                yankee = _closure2_slot0;
                golf['to_step'] = yankee;
                yankee = _closure2_slot6;
                yankee = yankee.current;
                yankee = mike - yankee;
                golf['step_duration_ms'] = yankee;
                yankee = _closure2_slot5;
                yankee = yankee.current;
                yankee = mike - yankee;
                golf['flow_duration_ms'] = yankee;
                yankee = _closure2_slot2;
                golf['subscription_plan_gateway_plan_id'] = yankee;
                output = verify.bind(offset)(options, golf);
                result = zulu;
                golf = copyDataProperties(result, output);
                zulu = report.bind(oscar)(tango, zulu);
 556:
                tango = _closure2_slot4;
                zulu = _closure2_slot0;
                tango['current'] = zulu;
                entity = _closure2_slot6;
                entity['current'] = mike;
 580:
                entity = undefined;
                return entity;
            }
        };
        zulu = offset.bind(golf)(zulu, oscar);
        oscar = golf.useEffect;
        zulu = new Array(2);
        zulu[0] = verify;
        zulu[1] = options;
        mike = function() {
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure2_slot4;
                    report = entity.current;
                    oscar = _closure1_slot0;
                    tango = _closure1_slot2;
                    entity = 4;
                    tango = tango[entity];
                    entity = undefined;
                    tango = oscar.bind(entity)(tango);
                    tango = tango.PaymentFlowStep;
                    tango = tango.CONFIRM;
                    if(!(report !== tango)) { _fun00004_ip = 98; continue _fun00003 }
 53:
                    report = _closure1_slot1;
                    oscar = _closure1_slot2;
                    tango = 5;
                    tango = oscar[tango];
                    report = report.bind(entity)(tango);
                    tango = report.track;
                    zulu = _closure1_slot4;
                    zulu = zulu.PAYMENT_FLOW_CANCELED;
                    mike = _closure2_slot3;
                    mike = tango.bind(report)(zulu, mike);
 98:
                    return entity;
                }
            };
            return entity;
        };
        mike = oscar.bind(golf)(mike, zulu);
        zulu = _closure1_slot6;
        mike = _closure1_slot5;
        entity = {};
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();