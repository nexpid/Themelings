// app/modules/premium/native/gifting/PremiumGiftAnalytics.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var1 = metroImportDefault;
    var _closure1_slot1 = var1;
    var _closure1_slot2 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var4 = var4.bind(var1)(var7);
    var _closure1_slot3 = var4;
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.AnalyticEvents;
    var _closure1_slot4 = var4;
    var4 = 7;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/premium/native/gifting/PremiumGiftAnalytics.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function PremiumGiftAnalytics(arg1) {
        var1 = arg1;
        var10 = var1.currentStep;
        var _closure2_slot0 = var10;
        var1 = var1.children;
        var6 = _closure1_slot0;
        var5 = _closure1_slot2;
        var3 = 2;
        var5 = var5[var3];
        var3 = undefined;
        var5 = var6.bind(var3)(var5);
        var3 = var5.useNativeGiftContext;
        var5 = var3.bind(var5)();
        var9 = var5.customGiftMessage;
        var _closure2_slot1 = var9;
        var3 = var5.productId;
        var _closure2_slot2 = var3;
        var7 = var5.basePurchaseAnalytics;
        var _closure2_slot3 = var7;
        var5 = _closure1_slot3;
        var6 = var5.useRef;
        var4 = null;
        var6 = var6.bind(var5)(var4);
        var _closure2_slot4 = var6;
        var4 = global;
        var8 = var4.Date;
        var4 = var8.now;
        var8 = var4.bind(var8)();
        var4 = var5.useRef;
        var4 = var4.bind(var5)(var8);
        var _closure2_slot5 = var4;
        var4 = var5.useRef;
        var4 = var4.bind(var5)(var8);
        var _closure2_slot6 = var4;
        var8 = var5.useEffect;
        var4 = new Array(5);
        var4[0] = var7;
        var4[1] = var10;
        var4[2] = var6;
        var4[3] = var9;
        var4[4] = var3;
        var3 = function() {
            _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
                var3 = _closure2_slot0;
                var2 = _closure2_slot4;
                var2 = var2.current;
                if(!(var3 !== var2)) { _fun0001_ip = 2; continue _fun0001 }
case 3:
                var2 = global;
                var3 = var2.Date;
                var2 = var3.now;
                var2 = var2.bind(var3)();
                var3 = _closure2_slot4;
                var4 = var3.current;
                var3 = null;
                if(!(var3 == var4)) { _fun0001_ip = 4; continue _fun0001 }
case 5:
                var9 = _closure1_slot0;
                var11 = _closure1_slot2;
                var4 = 6;
                var4 = var11[var4];
                var8 = undefined;
                var5 = var9.bind(var8)(var4);
                var4 = var5.trackPaymentFlowStartedAnalyticsAndCTP;
                var10 = _closure2_slot3;
                var4 = var4.bind(var5)(var10);
                var5 = _closure1_slot1;
                var4 = 4;
                var4 = var11[var4];
                var6 = var5.bind(var8)(var4);
                var5 = var6.track;
                var3 = _closure1_slot4;
                var4 = var3.PAYMENT_FLOW_LOADED;
                var3 = {};
                var7 = 3;
                var7 = var11[var7];
                var9 = var9.bind(var8)(var7);
                var8 = var9.getPaymentFlowStepAnalyticsFields;
                var7 = {};
                var11 = _closure2_slot0;
                var7['initial_step'] = var11;
                var17 = var8.bind(var9)(var10, var7);
                var18 = var3;
                var7 = copyDataProperties(var18, var17);
                var3 = var5.bind(var6)(var4, var3);
                _fun0001_ip = 6; continue _fun0001;
case 4:
                var4 = _closure2_slot0;
                var5 = _closure1_slot0;
                var3 = _closure1_slot2;
                var10 = 3;
                var3 = var3[var10];
                var9 = undefined;
                var3 = var5.bind(var9)(var3);
                var3 = var3.PaymentFlowStep;
                var3 = var3.CONFIRM;
                if(!(var4 === var3)) { _fun0001_ip = 7; continue _fun0001 }
case 8:
                var4 = _closure1_slot1;
                var15 = _closure1_slot2;
                var3 = 4;
                var3 = var15[var3];
                var6 = var4.bind(var9)(var3);
                var5 = var6.track;
                var3 = _closure1_slot4;
                var4 = var3.PAYMENT_FLOW_SUCCEEDED;
                var3 = {};
                var14 = _closure1_slot0;
                var7 = var15[var10];
                var13 = var14.bind(var9)(var7);
                var12 = var13.getPaymentFlowStepAnalyticsFields;
                var11 = _closure2_slot3;
                var7 = {};
                var16 = _closure2_slot2;
                var7['subscription_plan_gateway_plan_id'] = var16;
                var17 = var12.bind(var13)(var11, var7);
                var18 = var3;
                var7 = copyDataProperties(var18, var17);
                var11 = _closure2_slot1;
                var7 = 5;
                var12 = var15[var7];
                var12 = var14.bind(var9)(var12);
                var13 = var12.intl;
                var12 = var13.string;
                var7 = var15[var7];
                var7 = var14.bind(var9)(var7);
                var7 = var7.t;
                var7 = var7.ZkOo1d;
                var7 = var12.bind(var13)(var7);
                var11 = var11 !== var7;
                var7 = 'is_custom_message_edited';
                var3[var7] = var11;
                var11 = false;
                var7 = 'is_custom_emoji_sound_available';
                var3[var7] = var11;
                var3 = var5.bind(var6)(var4, var3);
case 7:
                var4 = _closure1_slot1;
                var7 = _closure1_slot2;
                var3 = 4;
                var3 = var7[var3];
                var6 = var4.bind(var9)(var3);
                var5 = var6.track;
                var3 = _closure1_slot4;
                var4 = var3.PAYMENT_FLOW_STEP;
                var3 = {};
                var8 = _closure1_slot0;
                var7 = var7[var10];
                var10 = var8.bind(var9)(var7);
                var9 = var10.getPaymentFlowStepAnalyticsFields;
                var8 = _closure2_slot3;
                var7 = {};
                var11 = _closure2_slot4;
                var11 = var11.current;
                var7['from_step'] = var11;
                var11 = _closure2_slot0;
                var7['to_step'] = var11;
                var11 = _closure2_slot6;
                var11 = var11.current;
                var11 = var2 - var11;
                var7['step_duration_ms'] = var11;
                var11 = _closure2_slot5;
                var11 = var11.current;
                var11 = var2 - var11;
                var7['flow_duration_ms'] = var11;
                var11 = _closure2_slot2;
                var7['subscription_plan_gateway_plan_id'] = var11;
                var17 = var9.bind(var10)(var8, var7);
                var18 = var3;
                var7 = copyDataProperties(var18, var17);
                var3 = var5.bind(var6)(var4, var3);
case 6:
                var4 = _closure2_slot4;
                var3 = _closure2_slot0;
                var4['current'] = var3;
                var1 = _closure2_slot6;
                var1['current'] = var2;
case 2:
                var1 = undefined;
                return var1;
            }
        };
        var3 = var8.bind(var5)(var3, var4);
        var4 = var5.useEffect;
        var3 = new Array(2);
        var3[0] = var7;
        var3[1] = var6;
        var2 = function() {
            var1 = function() {
                _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
case 0:
                    var1 = _closure2_slot4;
                    var5 = var1.current;
                    var6 = _closure1_slot0;
                    var4 = _closure1_slot2;
                    var1 = 3;
                    var4 = var4[var1];
                    var1 = undefined;
                    var4 = var6.bind(var1)(var4);
                    var4 = var4.PaymentFlowStep;
                    var4 = var4.CONFIRM;
                    if(!(var5 !== var4)) { _fun0002_ip = 9; continue _fun0002 }
case 10:
                    var5 = _closure1_slot1;
                    var6 = _closure1_slot2;
                    var4 = 4;
                    var4 = var6[var4];
                    var5 = var5.bind(var1)(var4);
                    var4 = var5.track;
                    var3 = _closure1_slot4;
                    var3 = var3.PAYMENT_FLOW_CANCELED;
                    var2 = _closure2_slot3;
                    var2 = var4.bind(var5)(var3, var2);
case 9:
                    return var1;
                }
            };
            return var1;
        };
        var2 = var4.bind(var5)(var2, var3);
        return var1;
    };
    var3['default'] = var2;
    return var1;
})();