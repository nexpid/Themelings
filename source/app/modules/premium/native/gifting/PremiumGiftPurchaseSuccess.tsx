// app/modules/premium/native/gifting/PremiumGiftPurchaseSuccess.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.SubscriptionIntervalTypes;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticsSections;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot8 = golfie;
    golfie = tangon.Fragment;
    var _closure1_slot9 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 7;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['marginTop'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginBottom'] = romeon;
    tangon['disclaimer'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['marginTop'] = romeon;
    romeon = 'center';
    verify['textAlign'] = romeon;
    tangon['title'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['marginTop'] = foxtra;
    verify['textAlign'] = romeon;
    tangon['description'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['marginTop'] = romeon;
    tangon['input'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_4;
    verify['marginBottom'] = offset;
    tangon['inputLabel'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/native/gifting/PremiumGiftPurchaseSuccess.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: PremiumGiftSuccessBody
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            oscard = michal.giftCodeRecord;
            var _closure2_slot0 = oscard;
            michal = _closure1_slot11;
            tangon = undefined;
            offset = michal.bind(tangon)();
            zuuluu = _closure1_slot0;
            option = _closure1_slot2;
            michal = 8;
            michal = option[michal];
            report = zuuluu.bind(tangon)(michal);
            michal = report.useNativeGiftContext;
            michal = michal.bind(report)();
            golfie = michal.premiumType;
            report = michal.planInterval;
            foxtra = michal.giftStyle;
            michal = 9;
            michal = option[michal];
            option = zuuluu.bind(tangon)(michal);
            zuuluu = option.getGiftCodeURL;
            michal = oscard.code;
            update = zuuluu.bind(option)(michal);
            var _closure2_slot1 = update;
            michal = oscard.giftStyle;
            zuuluu = null;
            if(!(zuuluu != michal)) { _fun00002_ip = 126; continue _fun00001 }
 120:
            foxtra = oscard.giftStyle;
 126:
            michal = oscard.subscriptionPlanId;
            if(!(zuuluu == michal)) { _fun00002_ip = 170; continue _fun00001 }
 136:
            zuuluu = _closure1_slot0;
            option = _closure1_slot2;
            michal = 13;
            michal = option[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.getPlanIdForPremiumType;
            report = michal.bind(zuuluu)(golfie, report);
            _fun00002_ip = 176; continue _fun00001;
 170:
            report = oscard.subscriptionPlanId;
 176:
            option = _closure1_slot1;
            backup = _closure1_slot2;
            michal = 13;
            zuuluu = backup[michal];
            golfie = option.bind(tangon)(zuuluu);
            zuuluu = golfie.getDisplayPremiumType;
            sizing = zuuluu.bind(golfie)(report);
            michal = backup[michal];
            zuuluu = option.bind(tangon)(michal);
            michal = zuuluu.getInterval;
            michal = michal.bind(zuuluu)(report);
            romeon = michal.intervalType;
            michal = _closure1_slot6;
            yankee = michal.YEAR;
            report = _closure1_slot3;
            zuuluu = report.useCallback;
            michal = new Array(2);
            michal[0] = oscard;
            michal[1] = update;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    report = _closure1_slot5;
                    tangon = report.get;
                    zuuluu = _closure2_slot0;
                    zuuluu = zuuluu.skuId;
                    oscard = tangon.bind(report)(zuuluu);
                    zuuluu = null;
                    if(!(zuuluu != oscard)) { _fun00004_ip = 74; continue _fun00003 }
 36:
                    report = _closure1_slot0;
                    tangon = _closure1_slot2;
                    zuuluu = 9;
                    tangon = tangon[zuuluu];
                    zuuluu = undefined;
                    report = report.bind(zuuluu)(tangon);
                    tangon = report.trackGiftCodeCopy;
                    zuuluu = _closure2_slot0;
                    zuuluu = tangon.bind(report)(zuuluu, oscard);
 74:
                    zuuluu = _closure1_slot0;
                    tangon = _closure1_slot2;
                    entity = 14;
                    report = tangon[entity];
                    entity = undefined;
                    oscard = zuuluu.bind(entity)(report);
                    report = oscard.copy;
                    michal = _closure2_slot1;
                    michal = report.bind(oscard)(michal);
                    michal = 15;
                    michal = tangon[michal];
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.presentCopiedToClipboard;
                    michal = michal.bind(zuuluu)();
                    return entity;
                }
            };
            result = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot10;
            michal = _closure1_slot9;
            entity = {};
            verify = _closure1_slot8;
            oscard = _closure1_slot4;
            report = {};
            golfie = 16;
            golfie = backup[golfie];
            option = option.bind(tangon)(golfie);
            golfie = {};
            golfie['giftStyle'] = foxtra;
            golfie = verify.bind(tangon)(option, golfie);
            report['children'] = golfie;
            oscard = verify.bind(tangon)(oscard, report);
            report = new Array(5);
            report[0] = oscard;
            kiloes = _closure1_slot0;
            oscard = 17;
            golfie = backup[oscard];
            golfie = kiloes.bind(tangon)(golfie);
            option = golfie.Text;
            golfie = {};
            foxtra = offset.title;
            golfie['style'] = foxtra;
            foxtra = 'heading-lg/bold';
            golfie['variant'] = foxtra;
            foxtra = 12;
            output = backup[foxtra];
            output = kiloes.bind(tangon)(output);
            ctrled = output.intl;
            source = ctrled.string;
            output = backup[foxtra];
            output = kiloes.bind(tangon)(output);
            output = output.t;
            output = output./s1xR0;
            output = source.bind(ctrled)(output);
            golfie['children'] = output;
            golfie = verify.bind(tangon)(option, golfie);
            report[1] = golfie;
            golfie = backup[oscard];
            golfie = kiloes.bind(tangon)(golfie);
            option = golfie.Text;
            golfie = {};
            output = offset.description;
            golfie['style'] = output;
            output = 'text-md/medium';
            golfie['variant'] = output;
            backup = backup[foxtra];
            backup = kiloes.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.format;
            if(!(romeon !== yankee)) { _fun00002_ip = 533; continue _fun00001 }
 501:
            romeon = _closure1_slot0;
            yankee = _closure1_slot2;
            yankee = yankee[foxtra];
            yankee = romeon.bind(tangon)(yankee);
            yankee = yankee.t;
            romeon = yankee.bUdTqK;
            _fun00002_ip = 563; continue _fun00001;
 533:
            output = _closure1_slot0;
            yankee = _closure1_slot2;
            yankee = yankee[foxtra];
            yankee = output.bind(tangon)(yankee);
            yankee = yankee.t;
            romeon = yankee.rli5e3;
 563:
            yankee = {};
            output = 1;
            yankee['intervalCount'] = output;
            yankee['name'] = sizing;
            yankee = backup.bind(kiloes)(romeon, yankee);
            golfie['children'] = yankee;
            golfie = verify.bind(tangon)(option, golfie);
            report[2] = golfie;
            backup = _closure1_slot10;
            yankee = _closure1_slot4;
            golfie = {};
            option = offset.input;
            golfie['style'] = option;
            option = _closure1_slot8;
            romeon = _closure1_slot0;
            verify = _closure1_slot2;
            kiloes = verify[oscard];
            kiloes = romeon.bind(tangon)(kiloes);
            sizing = kiloes.Text;
            kiloes = {};
            output = offset.inputLabel;
            kiloes['style'] = output;
            output = 'heading-md/bold';
            kiloes['variant'] = output;
            output = verify[foxtra];
            output = romeon.bind(tangon)(output);
            ctrled = output.intl;
            source = ctrled.string;
            output = verify[foxtra];
            output = romeon.bind(tangon)(output);
            output = output.t;
            output = output.qS+yMj;
            output = source.bind(ctrled)(output);
            kiloes['children'] = output;
            sizing = option.bind(tangon)(sizing, kiloes);
            kiloes = new Array(2);
            kiloes[0] = sizing;
            sizing = 18;
            sizing = verify[sizing];
            sizing = romeon.bind(tangon)(sizing);
            output = sizing.InputButton;
            sizing = {};
            sizing['text'] = update;
            update = _closure1_slot1;
            echoed = 19;
            echoed = verify[echoed];
            echoed = update.bind(tangon)(echoed);
            sizing['icon'] = echoed;
            echoed = 'end';
            sizing['iconPosition'] = echoed;
            sizing['onPress'] = result;
            sizing = option.bind(tangon)(output, sizing);
            kiloes[1] = sizing;
            golfie['children'] = kiloes;
            golfie = backup.bind(tangon)(yankee, golfie);
            report[3] = golfie;
            oscard = verify[oscard];
            oscard = romeon.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {};
            offset = offset.disclaimer;
            oscard['style'] = offset;
            offset = 'text-xs/normal';
            oscard['variant'] = offset;
            offset = verify[foxtra];
            offset = romeon.bind(tangon)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = verify[foxtra];
            verify = romeon.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.As9eLi;
            verify = offset.bind(yankee)(verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[4] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    michal = function(argFoo) { // Original name: PremiumGiftSuccessActions
        michal = argFoo;
        michal = michal.giftCodeRecord;
        foxtra = _closure1_slot0;
        backup = _closure1_slot2;
        zuuluu = 8;
        zuuluu = backup[zuuluu];
        tangon = undefined;
        oscard = foxtra.bind(tangon)(zuuluu);
        zuuluu = oscard.useNativeGiftContext;
        zuuluu = zuuluu.bind(oscard)();
        verify = zuuluu.onClose;
        zuuluu = 9;
        zuuluu = backup[zuuluu];
        oscard = foxtra.bind(tangon)(zuuluu);
        zuuluu = oscard.getGiftCodeURL;
        michal = michal.code;
        golfie = zuuluu.bind(oscard)(michal);
        var _closure2_slot0 = golfie;
        oscard = _closure1_slot3;
        zuuluu = oscard.useCallback;
        michal = new Array(1);
        michal[0] = golfie;
        entity = function() {
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 10;
            zuuluu = zuuluu[entity];
            entity = undefined;
            report = tangon.bind(entity)(zuuluu);
            tangon = report.showShareActionSheet;
            zuuluu = {};
            oscard = _closure2_slot0;
            zuuluu['url'] = oscard;
            michal = _closure1_slot7;
            michal = michal.PREMIUM_GIFT_SUCCESS_MODAL;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        yankee = zuuluu.bind(oscard)(entity, michal);
        zuuluu = _closure1_slot10;
        michal = _closure1_slot9;
        entity = {};
        option = _closure1_slot8;
        oscard = 11;
        report = backup[oscard];
        report = foxtra.bind(tangon)(report);
        golfie = report.Button;
        report = {};
        offset = 'primary';
        report['variant'] = offset;
        offset = 12;
        romeon = backup[offset];
        romeon = foxtra.bind(tangon)(romeon);
        sizing = romeon.intl;
        kiloes = sizing.string;
        romeon = backup[offset];
        romeon = foxtra.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.RDE0SU;
        romeon = kiloes.bind(sizing)(romeon);
        report['text'] = romeon;
        report['onPress'] = yankee;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        oscard = backup[oscard];
        oscard = foxtra.bind(tangon)(oscard);
        golfie = oscard.Button;
        oscard = {};
        yankee = 'secondary';
        oscard['variant'] = yankee;
        yankee = backup[offset];
        yankee = foxtra.bind(tangon)(yankee);
        romeon = yankee.intl;
        yankee = romeon.string;
        offset = backup[offset];
        offset = foxtra.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.cpT0Cg;
        offset = yankee.bind(romeon)(offset);
        oscard['text'] = offset;
        oscard['onPress'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['PremiumGiftSuccessActions'] = michal;
    return entity;
})();