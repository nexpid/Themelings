// app/modules/premium/native/gifting/PremiumGiftPurchaseSuccess.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.SubscriptionIntervalTypes;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticsSections;
    var _closure1_slot7 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot10 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 7;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_4;
    verify['marginTop'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['marginBottom'] = romeo;
    tango['disclaimer'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['marginTop'] = romeo;
    romeo = 'center';
    verify['textAlign'] = romeo;
    tango['title'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['marginTop'] = foxtrot;
    verify['textAlign'] = romeo;
    tango['description'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['marginTop'] = romeo;
    tango['input'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_4;
    verify['marginBottom'] = offset;
    tango['inputLabel'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = 20;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/premium/native/gifting/PremiumGiftPurchaseSuccess.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: PremiumGiftSuccessBody
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = argFoo;
            oscar = mike.giftCodeRecord;
            var _closure2_slot0 = oscar;
            mike = _closure1_slot11;
            tango = undefined;
            offset = mike.bind(tango)();
            zulu = _closure1_slot0;
            options = _closure1_slot2;
            mike = 8;
            mike = options[mike];
            report = zulu.bind(tango)(mike);
            mike = report.useNativeGiftContext;
            mike = mike.bind(report)();
            golf = mike.premiumType;
            report = mike.planInterval;
            foxtrot = mike.giftStyle;
            mike = 9;
            mike = options[mike];
            options = zulu.bind(tango)(mike);
            zulu = options.getGiftCodeURL;
            mike = oscar.code;
            update = zulu.bind(options)(mike);
            var _closure2_slot1 = update;
            mike = oscar.giftStyle;
            zulu = null;
            if(!(zulu != mike)) { _fun00002_ip = 126; continue _fun00001 }
 120:
            foxtrot = oscar.giftStyle;
 126:
            mike = oscar.subscriptionPlanId;
            if(!(zulu == mike)) { _fun00002_ip = 170; continue _fun00001 }
 136:
            zulu = _closure1_slot0;
            options = _closure1_slot2;
            mike = 13;
            mike = options[mike];
            zulu = zulu.bind(tango)(mike);
            mike = zulu.getPlanIdForPremiumType;
            report = mike.bind(zulu)(golf, report);
            _fun00002_ip = 176; continue _fun00001;
 170:
            report = oscar.subscriptionPlanId;
 176:
            options = _closure1_slot1;
            backup = _closure1_slot2;
            mike = 13;
            zulu = backup[mike];
            golf = options.bind(tango)(zulu);
            zulu = golf.getDisplayPremiumType;
            sizing = zulu.bind(golf)(report);
            mike = backup[mike];
            zulu = options.bind(tango)(mike);
            mike = zulu.getInterval;
            mike = mike.bind(zulu)(report);
            romeo = mike.intervalType;
            mike = _closure1_slot6;
            yankee = mike.YEAR;
            report = _closure1_slot3;
            zulu = report.useCallback;
            mike = new Array(2);
            mike[0] = oscar;
            mike[1] = update;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    report = _closure1_slot5;
                    tango = report.get;
                    zulu = _closure2_slot0;
                    zulu = zulu.skuId;
                    oscar = tango.bind(report)(zulu);
                    zulu = null;
                    if(!(zulu != oscar)) { _fun00004_ip = 74; continue _fun00003 }
 36:
                    report = _closure1_slot0;
                    tango = _closure1_slot2;
                    zulu = 9;
                    tango = tango[zulu];
                    zulu = undefined;
                    report = report.bind(zulu)(tango);
                    tango = report.trackGiftCodeCopy;
                    zulu = _closure2_slot0;
                    zulu = tango.bind(report)(zulu, oscar);
 74:
                    zulu = _closure1_slot0;
                    tango = _closure1_slot2;
                    entity = 14;
                    report = tango[entity];
                    entity = undefined;
                    oscar = zulu.bind(entity)(report);
                    report = oscar.copy;
                    mike = _closure2_slot1;
                    mike = report.bind(oscar)(mike);
                    mike = 15;
                    mike = tango[mike];
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.presentCopiedToClipboard;
                    mike = mike.bind(zulu)();
                    return entity;
                }
            };
            result = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot10;
            mike = _closure1_slot9;
            entity = {};
            verify = _closure1_slot8;
            oscar = _closure1_slot4;
            report = {};
            golf = 16;
            golf = backup[golf];
            options = options.bind(tango)(golf);
            golf = {};
            golf['giftStyle'] = foxtrot;
            golf = verify.bind(tango)(options, golf);
            report['children'] = golf;
            oscar = verify.bind(tango)(oscar, report);
            report = new Array(5);
            report[0] = oscar;
            kilo = _closure1_slot0;
            oscar = 17;
            golf = backup[oscar];
            golf = kilo.bind(tango)(golf);
            options = golf.Text;
            golf = {};
            foxtrot = offset.title;
            golf['style'] = foxtrot;
            foxtrot = 'heading-lg/bold';
            golf['variant'] = foxtrot;
            foxtrot = 12;
            output = backup[foxtrot];
            output = kilo.bind(tango)(output);
            control = output.intl;
            source = control.string;
            output = backup[foxtrot];
            output = kilo.bind(tango)(output);
            output = output.t;
            output = output./s1xR0;
            output = source.bind(control)(output);
            golf['children'] = output;
            golf = verify.bind(tango)(options, golf);
            report[1] = golf;
            golf = backup[oscar];
            golf = kilo.bind(tango)(golf);
            options = golf.Text;
            golf = {};
            output = offset.description;
            golf['style'] = output;
            output = 'text-md/medium';
            golf['variant'] = output;
            backup = backup[foxtrot];
            backup = kilo.bind(tango)(backup);
            kilo = backup.intl;
            backup = kilo.format;
            if(!(romeo !== yankee)) { _fun00002_ip = 529; continue _fun00001 }
 499:
            romeo = _closure1_slot0;
            yankee = _closure1_slot2;
            yankee = yankee[foxtrot];
            yankee = romeo.bind(tango)(yankee);
            yankee = yankee.t;
            romeo = yankee.bUdTqK;
            _fun00002_ip = 557; continue _fun00001;
 529:
            output = _closure1_slot0;
            yankee = _closure1_slot2;
            yankee = yankee[foxtrot];
            yankee = output.bind(tango)(yankee);
            yankee = yankee.t;
            romeo = yankee.rli5e3;
 557:
            yankee = {};
            output = 1;
            yankee['intervalCount'] = output;
            yankee['name'] = sizing;
            yankee = backup.bind(kilo)(romeo, yankee);
            golf['children'] = yankee;
            golf = verify.bind(tango)(options, golf);
            report[2] = golf;
            backup = _closure1_slot10;
            yankee = _closure1_slot4;
            golf = {};
            options = offset.input;
            golf['style'] = options;
            options = _closure1_slot8;
            romeo = _closure1_slot0;
            verify = _closure1_slot2;
            kilo = verify[oscar];
            kilo = romeo.bind(tango)(kilo);
            sizing = kilo.Text;
            kilo = {};
            output = offset.inputLabel;
            kilo['style'] = output;
            output = 'heading-md/bold';
            kilo['variant'] = output;
            output = verify[foxtrot];
            output = romeo.bind(tango)(output);
            control = output.intl;
            source = control.string;
            output = verify[foxtrot];
            output = romeo.bind(tango)(output);
            output = output.t;
            output = output.qS+yMj;
            output = source.bind(control)(output);
            kilo['children'] = output;
            sizing = options.bind(tango)(sizing, kilo);
            kilo = new Array(2);
            kilo[0] = sizing;
            sizing = 18;
            sizing = verify[sizing];
            sizing = romeo.bind(tango)(sizing);
            output = sizing.InputButton;
            sizing = {};
            sizing['text'] = update;
            update = _closure1_slot1;
            echo = 19;
            echo = verify[echo];
            echo = update.bind(tango)(echo);
            sizing['icon'] = echo;
            echo = 'end';
            sizing['iconPosition'] = echo;
            sizing['onPress'] = result;
            sizing = options.bind(tango)(output, sizing);
            kilo[1] = sizing;
            golf['children'] = kilo;
            golf = backup.bind(tango)(yankee, golf);
            report[3] = golf;
            oscar = verify[oscar];
            oscar = romeo.bind(tango)(oscar);
            golf = oscar.Text;
            oscar = {};
            offset = offset.disclaimer;
            oscar['style'] = offset;
            offset = 'text-xs/normal';
            oscar['variant'] = offset;
            offset = verify[foxtrot];
            offset = romeo.bind(tango)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = verify[foxtrot];
            verify = romeo.bind(tango)(verify);
            verify = verify.t;
            verify = verify.As9eLi;
            verify = offset.bind(yankee)(verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[4] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = tango;
    mike = function(argFoo) { // Original name: PremiumGiftSuccessActions
        mike = argFoo;
        mike = mike.giftCodeRecord;
        foxtrot = _closure1_slot0;
        backup = _closure1_slot2;
        zulu = 8;
        zulu = backup[zulu];
        tango = undefined;
        oscar = foxtrot.bind(tango)(zulu);
        zulu = oscar.useNativeGiftContext;
        zulu = zulu.bind(oscar)();
        verify = zulu.onClose;
        zulu = 9;
        zulu = backup[zulu];
        oscar = foxtrot.bind(tango)(zulu);
        zulu = oscar.getGiftCodeURL;
        mike = mike.code;
        golf = zulu.bind(oscar)(mike);
        var _closure2_slot0 = golf;
        oscar = _closure1_slot3;
        zulu = oscar.useCallback;
        mike = new Array(1);
        mike[0] = golf;
        entity = function() {
            tango = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 10;
            zulu = zulu[entity];
            entity = undefined;
            report = tango.bind(entity)(zulu);
            tango = report.showShareActionSheet;
            zulu = {};
            oscar = _closure2_slot0;
            zulu['url'] = oscar;
            mike = _closure1_slot7;
            mike = mike.PREMIUM_GIFT_SUCCESS_MODAL;
            mike = tango.bind(report)(zulu, mike);
            return entity;
        };
        yankee = zulu.bind(oscar)(entity, mike);
        zulu = _closure1_slot10;
        mike = _closure1_slot9;
        entity = {};
        options = _closure1_slot8;
        oscar = 11;
        report = backup[oscar];
        report = foxtrot.bind(tango)(report);
        golf = report.Button;
        report = {};
        offset = 'primary';
        report['variant'] = offset;
        offset = 12;
        romeo = backup[offset];
        romeo = foxtrot.bind(tango)(romeo);
        sizing = romeo.intl;
        kilo = sizing.string;
        romeo = backup[offset];
        romeo = foxtrot.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.RDE0SU;
        romeo = kilo.bind(sizing)(romeo);
        report['text'] = romeo;
        report['onPress'] = yankee;
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        oscar = backup[oscar];
        oscar = foxtrot.bind(tango)(oscar);
        golf = oscar.Button;
        oscar = {};
        yankee = 'secondary';
        oscar['variant'] = yankee;
        yankee = backup[offset];
        yankee = foxtrot.bind(tango)(yankee);
        romeo = yankee.intl;
        yankee = romeo.string;
        offset = backup[offset];
        offset = foxtrot.bind(tango)(offset);
        offset = offset.t;
        offset = offset.cpT0Cg;
        offset = yankee.bind(romeo)(offset);
        oscar['text'] = offset;
        oscar['onPress'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['PremiumGiftSuccessActions'] = mike;
    return entity;
})();