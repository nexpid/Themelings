// app/modules/premium/native/google_play_price_changes/GooglePlayPriceChangeActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot6 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ContentDismissActionType;
    var _closure1_slot7 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot8 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 8;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_32;
    verify['padding'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['paddingTop'] = romeon;
    tangon['container'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['marginBottom'] = romeon;
    tangon['textContainer'] = verify;
    verify = {'marginBottom': null, 'alignItems': 'center', 'textAlign': 'center'};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['marginBottom'] = offset;
    offset = 'center';
    tangon['header'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tangon['body'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/native/google_play_price_changes/GooglePlayPriceChangeActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GooglePlayPriceChangeActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.markAsDismissed;
            var _closure2_slot0 = entity;
            entity = _closure1_slot10;
            tangon = undefined;
            backup = entity.bind(tangon)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 9;
            report = zuuluu[entity];
            option = michal.bind(tangon)(report);
            golfie = option.useStateFromStores;
            report = _closure1_slot5;
            oscard = new Array(1);
            oscard[0] = report;
            report = function() {
                entity = _closure1_slot5;
                entity = entity.priceChangeRecord;
                return entity;
            };
            sequen = golfie.bind(option)(oscard, report);
            entity = zuuluu[entity];
            report = michal.bind(tangon)(entity);
            zuuluu = report.useStateFromStores;
            entity = _closure1_slot4;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot4;
                michal = zuuluu.getPremiumSubscription;
                entity = true;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            zuuluu = zuuluu.bind(report)(michal, entity);
            michal = null;
            report = michal == zuuluu;
            entity = undefined;
            if(report) { _fun00002_ip = 136; continue _fun00001 }
 128:
            entity = zuuluu.premiumPlanIdFromItems;
 136:
            michal = michal != entity;
            report = '';
            if(!michal) { _fun00002_ip = 150; continue _fun00001 }
 147:
            report = entity;
 150:
            kiloes = _closure1_slot0;
            sizing = _closure1_slot2;
            entity = 10;
            michal = sizing[entity];
            zuuluu = kiloes.bind(tangon)(michal);
            michal = zuuluu.getDisplayPremiumType;
            config = michal.bind(zuuluu)(report);
            michal = sizing[entity];
            zuuluu = kiloes.bind(tangon)(michal);
            michal = zuuluu.getInterval;
            michal = michal.bind(zuuluu)(report);
            zuuluu = michal.intervalType;
            entity = sizing[entity];
            michal = kiloes.bind(tangon)(entity);
            entity = michal.getIntervalStringAsNoun;
            vacuum = entity.bind(michal)(zuuluu);
            entity = 11;
            michal = sizing[entity];
            oscard = kiloes.bind(tangon)(michal);
            report = oscard.formatPrice;
            zuuluu = sequen.oldPrice;
            michal = sequen.oldCurrency;
            source = report.bind(oscard)(zuuluu, michal);
            entity = sizing[entity];
            report = kiloes.bind(tangon)(entity);
            zuuluu = report.formatPrice;
            michal = sequen.newPrice;
            entity = sequen.newCurrency;
            ctrled = zuuluu.bind(report)(michal, entity);
            zuuluu = _closure1_slot8;
            entity = 12;
            entity = sizing[entity];
            entity = kiloes.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {};
            golfie = _closure1_slot9;
            oscard = _closure1_slot3;
            report = {};
            option = backup.container;
            report['style'] = option;
            option = {};
            verify = backup.textContainer;
            option['style'] = verify;
            offset = 13;
            verify = sizing[offset];
            verify = kiloes.bind(tangon)(verify);
            foxtra = verify.Text;
            verify = {};
            romeon = 'heading-xl/bold';
            verify['variant'] = romeon;
            romeon = backup.header;
            verify['style'] = romeon;
            romeon = 14;
            output = sizing[romeon];
            output = kiloes.bind(tangon)(output);
            record = output.intl;
            echoed = record.format;
            output = sizing[romeon];
            output = kiloes.bind(tangon)(output);
            output = output.t;
            result = output.x0bFvr;
            output = {};
            output['subscriptionName'] = config;
            output = echoed.bind(record)(result, output);
            verify['children'] = output;
            foxtra = zuuluu.bind(tangon)(foxtra, verify);
            verify = new Array(2);
            verify[0] = foxtra;
            offset = sizing[offset];
            offset = kiloes.bind(tangon)(offset);
            foxtra = offset.Text;
            offset = {};
            output = 'text-md/medium';
            offset['variant'] = output;
            backup = backup.body;
            offset['style'] = backup;
            backup = sizing[romeon];
            backup = kiloes.bind(tangon)(backup);
            echoed = backup.intl;
            result = echoed.format;
            backup = sizing[romeon];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.t;
            output = backup.n+HrjY;
            backup = {};
            backup['subscriptionName'] = config;
            config = global;
            record = config.Date;
            target = sequen.expectedChargeTime;
            config = record.prototype;
            config = Object.create(config, {constructor: {value: record}});
            status = config;
            sequen = new status[record](target, papara);
            sequen = sequen instanceof Object ? sequen : config;
            backup['changeDate'] = sequen;
            backup['interval'] = vacuum;
            backup['newPrice'] = ctrled;
            backup['oldPrice'] = source;
            ctrled = _closure1_slot1;
            source = 15;
            source = sizing[source];
            ctrled = ctrled.bind(tangon)(source);
            source = ctrled.getArticleURL;
            update = _closure1_slot6;
            update = update.SUBSCRIPTION_CANCEL;
            update = source.bind(ctrled)(update);
            backup['hc_article_url'] = update;
            backup = result.bind(echoed)(output, backup);
            offset['children'] = backup;
            offset = zuuluu.bind(tangon)(foxtra, offset);
            verify[1] = offset;
            option['children'] = verify;
            verify = golfie.bind(tangon)(oscard, option);
            option = new Array(2);
            option[0] = verify;
            verify = 16;
            verify = sizing[verify];
            verify = kiloes.bind(tangon)(verify);
            offset = verify.Button;
            verify = {};
            foxtra = 'primary';
            verify['variant'] = foxtra;
            foxtra = sizing[romeon];
            foxtra = kiloes.bind(tangon)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            romeon = sizing[romeon];
            romeon = kiloes.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.BddRzc;
            romeon = foxtra.bind(backup)(romeon);
            verify['text'] = romeon;
            yankee = function() { // Original name: onPress
                zuuluu = _closure2_slot0;
                entity = _closure1_slot7;
                michal = entity.USER_DISMISS;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            verify['onPress'] = yankee;
            verify = zuuluu.bind(tangon)(offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();