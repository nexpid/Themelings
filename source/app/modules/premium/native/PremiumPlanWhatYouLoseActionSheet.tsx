// app/modules/premium/native/PremiumPlanWhatYouLoseActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    kiloes = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = kiloes;
    var _closure1_slot2 = golfie;
    michal = global;
    verify = michal.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    verify = 0;
    option = golfie[verify];
    report = argCor;
    entity = undefined;
    report = report.bind(entity)(option);
    var _closure1_slot3 = report;
    option = 1;
    report = golfie[option];
    report = oscard.bind(entity)(report);
    report = report.View;
    var _closure1_slot4 = report;
    report = 2;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.PremiumTypes;
    var _closure1_slot5 = report;
    offset = 3;
    offset = golfie[offset];
    offset = oscard.bind(entity)(offset);
    offset = offset.SubscriptionStatusTypes;
    var _closure1_slot6 = offset;
    offset = 4;
    yankee = golfie[offset];
    yankee = oscard.bind(entity)(yankee);
    yankee = yankee.jsx;
    var _closure1_slot7 = yankee;
    offset = golfie[offset];
    offset = oscard.bind(entity)(offset);
    offset = offset.jsxs;
    var _closure1_slot8 = offset;
    offset = 5;
    offset = golfie[offset];
    romeon = oscard.bind(entity)(offset);
    yankee = romeon.createStyles;
    offset = {};
    foxtra = {'paddingTop': 24, 'paddingHorizontal': 24};
    offset['body'] = foxtra;
    foxtra = {};
    sizing = 8;
    foxtra['marginBottom'] = sizing;
    backup = 6;
    output = golfie[backup];
    output = kiloes.bind(entity)(output);
    output = output.colors;
    output = output.HEADER_PRIMARY;
    foxtra['color'] = output;
    offset['title'] = foxtra;
    foxtra = {};
    output = 16;
    foxtra['marginBottom'] = output;
    result = golfie[backup];
    result = kiloes.bind(entity)(result);
    result = result.colors;
    result = result.HEADER_PRIMARY;
    foxtra['color'] = result;
    offset['subtitle'] = foxtra;
    foxtra = {'marginBottom': 16, 'borderRadius': null, 'display': 'flex', 'flexDirection': 'column', 'justifyContent': 'center', 'alignItems': 'center', 'backgroundColor': null, 'padding': 16};
    result = golfie[backup];
    result = kiloes.bind(entity)(result);
    result = result.radii;
    result = result.sm;
    foxtra['borderRadius'] = result;
    result = golfie[backup];
    result = kiloes.bind(entity)(result);
    result = result.colors;
    result = result.BACKGROUND_TERTIARY;
    foxtra['backgroundColor'] = result;
    offset['item'] = foxtra;
    foxtra = {};
    foxtra['marginTop'] = sizing;
    offset['itemLabel'] = foxtra;
    foxtra = {};
    foxtra['paddingHorizontal'] = output;
    offset['footer'] = foxtra;
    foxtra = {};
    foxtra['marginBottom'] = sizing;
    offset['button'] = foxtra;
    foxtra = {};
    sizing = golfie[backup];
    sizing = kiloes.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.round;
    foxtra['borderRadius'] = sizing;
    offset['roundedButton'] = foxtra;
    foxtra = {};
    sizing = golfie[backup];
    sizing = kiloes.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BACKGROUND_ACCENT;
    foxtra['backgroundColor'] = sizing;
    offset['keepButton'] = foxtra;
    foxtra = {'textAlign': 'center', 'paddingVertical': 8};
    backup = golfie[backup];
    backup = kiloes.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_SECONDARY;
    foxtra['color'] = backup;
    offset['keepText'] = foxtra;
    offset = yankee.bind(romeon)(offset);
    var _closure1_slot9 = offset;
    offset = michal.Set;
    yankee = report.TIER_1;
    michal = new Array(2);
    michal[0] = yankee;
    report = report.TIER_2;
    michal[1] = report;
    report = offset.prototype;
    report = Object.create(report, {constructor: {value: offset}});
    ctrled = report;
    source = michal;
    michal = new ctrled[offset](source, update);
    michal = michal instanceof Object ? michal : report;
    var _closure1_slot10 = michal;
    michal = function(argFoo) { // Original name: WhatYouLoseItem
        entity = argFoo;
        romeon = entity.imageSource;
        verify = entity.text;
        entity = _closure1_slot9;
        tangon = undefined;
        offset = entity.bind(tangon)();
        zuuluu = _closure1_slot8;
        michal = _closure1_slot4;
        entity = {};
        report = offset.item;
        entity['style'] = report;
        option = _closure1_slot7;
        golfie = _closure1_slot1;
        yankee = _closure1_slot2;
        report = 7;
        report = yankee[report];
        golfie = golfie.bind(tangon)(report);
        report = {};
        report['source'] = romeon;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        golfie = _closure1_slot0;
        oscard = 8;
        oscard = yankee[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {};
        yankee = 'text-md/medium';
        oscard['variant'] = yankee;
        offset = offset.itemLabel;
        oscard['style'] = offset;
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot11 = michal;
    michal = {};
    michal['DOWNGRADE'] = verify;
    report = 'DOWNGRADE';
    michal[verify] = report;
    michal['CANCEL'] = option;
    report = 'CANCEL';
    michal[option] = report;
    var _closure1_slot12 = michal;
    report = 28;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/premium/native/PremiumPlanWhatYouLoseActionSheet.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            result = entity.mode;
            michal = entity.onContinue;
            var _closure2_slot0 = michal;
            oscard = entity.subscription;
            var _closure2_slot1 = oscard;
            tangon = undefined;
            var _closure2_slot5 = tangon;
            entity = function() { // Original name: onClose
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 19;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            var _closure2_slot6 = entity;
            entity = function(argFoo) { // Original name: onContinueDowngradeOrCancellation
                tangon = _closure2_slot0;
                entity = undefined;
                zuuluu = argFoo;
                zuuluu = tangon.bind(entity)(zuuluu);
                michal = _closure2_slot6;
                michal = michal.bind(entity)();
                return entity;
            };
            var _closure2_slot7 = entity;
            entity = _closure1_slot9;
            kiloes = entity.bind(tangon)();
            michal = _closure1_slot0;
            report = _closure1_slot2;
            sequen = 9;
            entity = report[sequen];
            zuuluu = michal.bind(tangon)(entity);
            entity = zuuluu.getPremiumTypeFromSubscription;
            config = entity.bind(zuuluu)(oscard);
            var _closure2_slot2 = config;
            zuuluu = _closure1_slot1;
            entity = 10;
            entity = report[entity];
            entity = zuuluu.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            entity = entity.analyticsLocations;
            var _closure2_slot3 = entity;
            entity = 11;
            entity = report[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.useWhatYouLoseProfileTier1Source;
            entity = entity.bind(michal)();
            var _closure2_slot4 = entity;
            michal = 12;
            michal = report[michal];
            golfie = zuuluu.bind(tangon)(michal);
            zuuluu = null;
            report = zuuluu != config;
            michal = 'Expected premium type';
            michal = golfie.bind(tangon)(report, michal);
            michal = oscard.renewalMutations;
            zuuluu = zuuluu != michal;
            if(!zuuluu) { _fun00002_ip = 222; continue _fun00001 }
 203:
            report = oscard.status;
            michal = _closure1_slot6;
            michal = michal.CANCELED;
            zuuluu = report !== michal;
 222:
            if(!zuuluu) { _fun00002_ip = 267; continue _fun00001 }
 225:
            report = _closure1_slot0;
            michal = _closure1_slot2;
            michal = michal[sequen];
            report = report.bind(tangon)(michal);
            michal = report.getPremiumTypeFromSubscriptionRenewalMutations;
            report = michal.bind(report)(oscard);
            michal = _closure1_slot5;
            michal = michal.TIER_0;
            zuuluu = report === michal;
 267:
            michal = _closure1_slot12;
            michal = michal.CANCEL;
            michal = result === michal;
            if(!michal) { _fun00002_ip = 298; continue _fun00001 }
 284:
            oscard = _closure1_slot10;
            report = oscard.has;
            michal = report.bind(oscard)(config);
 298:
            if(!michal) { _fun00002_ip = 304; continue _fun00001 }
 301:
            michal = !zuuluu;
 304:
            _closure2_slot5 = michal;
            report = _closure1_slot3;
            zuuluu = report.useMemo;
            michal = new Array(2);
            michal[0] = config;
            michal[1] = entity;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = _closure2_slot2;
                    zuuluu = _closure1_slot5;
                    zuuluu = zuuluu.TIER_0;
                    if(!(zuuluu !== tangon)) { _fun00004_ip = 558; continue _fun00003 }
 27:
                    zuuluu = _closure1_slot5;
                    zuuluu = zuuluu.TIER_1;
                    if(!(zuuluu !== tangon)) { _fun00004_ip = 315; continue _fun00003 }
 44:
                    zuuluu = _closure1_slot5;
                    zuuluu = zuuluu.TIER_2;
                    if(!(zuuluu !== tangon)) { _fun00004_ip = 64; continue _fun00003 }
 58:
                    zuuluu = new Array(0);
                    return zuuluu;
 64:
                    tangon = {};
                    option = _closure1_slot1;
                    offset = _closure1_slot2;
                    zuuluu = 18;
                    zuuluu = offset[zuuluu];
                    verify = undefined;
                    zuuluu = option.bind(verify)(zuuluu);
                    tangon['imageSource'] = zuuluu;
                    oscard = _closure1_slot0;
                    report = 14;
                    zuuluu = offset[report];
                    zuuluu = oscard.bind(verify)(zuuluu);
                    romeon = zuuluu.intl;
                    yankee = romeon.format;
                    zuuluu = offset[report];
                    zuuluu = oscard.bind(verify)(zuuluu);
                    zuuluu = zuuluu.t;
                    golfie = zuuluu.gpqr+v;
                    zuuluu = {};
                    zuuluu = yankee.bind(romeon)(golfie, zuuluu);
                    tangon['text'] = zuuluu;
                    zuuluu = new Array(3);
                    zuuluu[0] = tangon;
                    tangon = {};
                    golfie = 17;
                    golfie = offset[golfie];
                    golfie = option.bind(verify)(golfie);
                    tangon['imageSource'] = golfie;
                    golfie = offset[report];
                    golfie = oscard.bind(verify)(golfie);
                    foxtra = golfie.intl;
                    romeon = foxtra.format;
                    golfie = offset[report];
                    golfie = oscard.bind(verify)(golfie);
                    golfie = golfie.t;
                    yankee = golfie.wRxEDQ;
                    golfie = {};
                    golfie = romeon.bind(foxtra)(yankee, golfie);
                    tangon['text'] = golfie;
                    zuuluu[1] = tangon;
                    tangon = {};
                    golfie = 16;
                    golfie = offset[golfie];
                    golfie = option.bind(verify)(golfie);
                    tangon['imageSource'] = golfie;
                    golfie = offset[report];
                    golfie = oscard.bind(verify)(golfie);
                    option = golfie.intl;
                    golfie = option.format;
                    report = offset[report];
                    report = oscard.bind(verify)(report);
                    report = report.t;
                    oscard = report.4WZ7T0;
                    report = {};
                    report = golfie.bind(option)(oscard, report);
                    tangon['text'] = report;
                    zuuluu[2] = tangon;
                    return zuuluu;
 315:
                    zuuluu = {};
                    michal = _closure2_slot4;
                    zuuluu['imageSource'] = michal;
                    option = _closure1_slot0;
                    verify = _closure1_slot2;
                    tangon = 14;
                    michal = verify[tangon];
                    report = undefined;
                    michal = option.bind(report)(michal);
                    offset = michal.intl;
                    golfie = offset.format;
                    michal = verify[tangon];
                    michal = option.bind(report)(michal);
                    michal = michal.t;
                    oscard = michal.xCaYwM;
                    michal = {};
                    michal = golfie.bind(offset)(oscard, michal);
                    zuuluu['text'] = michal;
                    michal = new Array(3);
                    michal[0] = zuuluu;
                    zuuluu = {};
                    golfie = _closure1_slot1;
                    oscard = 16;
                    oscard = verify[oscard];
                    oscard = golfie.bind(report)(oscard);
                    zuuluu['imageSource'] = oscard;
                    oscard = verify[tangon];
                    oscard = option.bind(report)(oscard);
                    romeon = oscard.intl;
                    yankee = romeon.format;
                    oscard = verify[tangon];
                    oscard = option.bind(report)(oscard);
                    oscard = oscard.t;
                    offset = oscard.wK04T0;
                    oscard = {};
                    oscard = yankee.bind(romeon)(offset, oscard);
                    zuuluu['text'] = oscard;
                    michal[1] = zuuluu;
                    zuuluu = {};
                    oscard = 17;
                    oscard = verify[oscard];
                    oscard = golfie.bind(report)(oscard);
                    zuuluu['imageSource'] = oscard;
                    oscard = verify[tangon];
                    oscard = option.bind(report)(oscard);
                    golfie = oscard.intl;
                    oscard = golfie.format;
                    tangon = verify[tangon];
                    tangon = option.bind(report)(tangon);
                    tangon = tangon.t;
                    report = tangon.K4Hv6+;
                    tangon = {};
                    tangon = oscard.bind(golfie)(report, tangon);
                    zuuluu['text'] = tangon;
                    michal[2] = zuuluu;
                    return michal;
 558:
                    michal = {};
                    oscard = _closure1_slot1;
                    option = _closure1_slot2;
                    zuuluu = 13;
                    zuuluu = option[zuuluu];
                    golfie = undefined;
                    zuuluu = oscard.bind(golfie)(zuuluu);
                    michal['imageSource'] = zuuluu;
                    tangon = _closure1_slot0;
                    zuuluu = 14;
                    entity = option[zuuluu];
                    entity = tangon.bind(golfie)(entity);
                    offset = entity.intl;
                    verify = offset.format;
                    entity = option[zuuluu];
                    entity = tangon.bind(golfie)(entity);
                    entity = entity.t;
                    report = entity.0hUHi4;
                    entity = {};
                    entity = verify.bind(offset)(report, entity);
                    michal['text'] = entity;
                    entity = new Array(2);
                    entity[0] = michal;
                    michal = {};
                    report = 15;
                    report = option[report];
                    report = oscard.bind(golfie)(report);
                    michal['imageSource'] = report;
                    report = option[zuuluu];
                    report = tangon.bind(golfie)(report);
                    oscard = report.intl;
                    report = oscard.format;
                    zuuluu = option[zuuluu];
                    zuuluu = tangon.bind(golfie)(zuuluu);
                    zuuluu = zuuluu.t;
                    tangon = zuuluu.wFWO6O;
                    zuuluu = {};
                    zuuluu = report.bind(oscard)(tangon, zuuluu);
                    michal['text'] = zuuluu;
                    entity[1] = michal;
                    return entity;
                }
            };
            romeon = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot8;
            verify = _closure1_slot0;
            option = _closure1_slot2;
            entity = 24;
            entity = option[entity];
            entity = verify.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {};
            yankee = _closure1_slot7;
            oscard = _closure1_slot1;
            report = 25;
            report = option[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            report['premiumType'] = config;
            oscard = yankee.bind(tangon)(oscard, report);
            report = new Array(3);
            report[0] = oscard;
            golfie = _closure1_slot4;
            oscard = {};
            offset = kiloes.body;
            oscard['style'] = offset;
            offset = 8;
            option = option[offset];
            option = verify.bind(tangon)(option);
            verify = option.Text;
            option = {};
            sizing = 'heading-xl/extrabold';
            option['variant'] = sizing;
            sizing = kiloes.title;
            option['style'] = sizing;
            sizing = _closure1_slot12;
            sizing = sizing.CANCEL;
            if(!(result !== sizing)) { _fun00002_ip = 541; continue _fun00001 }
 482:
            update = _closure1_slot0;
            source = _closure1_slot2;
            sizing = 14;
            output = source[sizing];
            output = update.bind(tangon)(output);
            echoed = output.intl;
            output = echoed.string;
            sizing = source[sizing];
            sizing = update.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.7VcWW1;
            sizing = output.bind(echoed)(sizing);
            _fun00002_ip = 598; continue _fun00001;
 541:
            source = _closure1_slot0;
            ctrled = _closure1_slot2;
            output = 14;
            echoed = ctrled[output];
            echoed = source.bind(tangon)(echoed);
            update = echoed.intl;
            echoed = update.string;
            output = ctrled[output];
            output = source.bind(tangon)(output);
            output = output.t;
            output = output.PWq8TE;
            sizing = echoed.bind(update)(output);
 598:
            option['children'] = sizing;
            verify = yankee.bind(tangon)(verify, option);
            option = new Array(3);
            option[0] = verify;
            sizing = _closure1_slot7;
            yankee = _closure1_slot0;
            verify = _closure1_slot2;
            verify = verify[offset];
            verify = yankee.bind(tangon)(verify);
            yankee = verify.Text;
            verify = {};
            output = 'text-md/medium';
            verify['variant'] = output;
            output = kiloes.subtitle;
            verify['style'] = output;
            output = _closure1_slot12;
            output = output.CANCEL;
            if(!(result !== output)) { _fun00002_ip = 766; continue _fun00001 }
 676:
            ctrled = _closure1_slot0;
            source = _closure1_slot2;
            output = 14;
            result = source[output];
            result = ctrled.bind(tangon)(result);
            update = result.intl;
            echoed = update.format;
            output = source[output];
            output = ctrled.bind(tangon)(output);
            output = output.t;
            result = output.Qk34Ii;
            output = {};
            source = source[sequen];
            vacuum = ctrled.bind(tangon)(source);
            ctrled = vacuum.getPremiumTypeDisplayName;
            source = true;
            source = ctrled.bind(vacuum)(config, source);
            output['subscriptionName'] = source;
            output = echoed.bind(update)(result, output);
            _fun00002_ip = 854; continue _fun00001;
 766:
            vacuum = _closure1_slot0;
            ctrled = _closure1_slot2;
            result = 14;
            echoed = ctrled[result];
            echoed = vacuum.bind(tangon)(echoed);
            source = echoed.intl;
            update = source.format;
            result = ctrled[result];
            result = vacuum.bind(tangon)(result);
            result = result.t;
            echoed = result.jh5mU1;
            result = {};
            ctrled = ctrled[sequen];
            sequen = vacuum.bind(tangon)(ctrled);
            vacuum = sequen.getPremiumTypeDisplayName;
            ctrled = true;
            ctrled = vacuum.bind(sequen)(config, ctrled);
            result['subscriptionName'] = ctrled;
            output = update.bind(source)(echoed, result);
 854:
            verify['children'] = output;
            verify = sizing.bind(tangon)(yankee, verify);
            option[1] = verify;
            yankee = romeon.map;
            verify = function(argFoo, argBar) {
                report = _closure1_slot7;
                tangon = _closure1_slot11;
                zuuluu = {};
                golfie = argFoo;
                option = zuuluu;
                entity = copyDataProperties(option, golfie);
                michal = undefined;
                entity = argBar;
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            };
            verify = yankee.bind(romeon)(verify);
            option[2] = verify;
            oscard['children'] = option;
            oscard = zuuluu.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            option = _closure1_slot8;
            golfie = _closure1_slot4;
            oscard = {};
            verify = kiloes.footer;
            oscard['style'] = verify;
            romeon = _closure1_slot7;
            echoed = _closure1_slot1;
            output = _closure1_slot2;
            result = 26;
            verify = output[result];
            yankee = echoed.bind(tangon)(verify);
            verify = {};
            sizing = kiloes.button;
            verify['style'] = sizing;
            sizing = _closure1_slot0;
            foxtra = 14;
            update = output[foxtra];
            update = sizing.bind(tangon)(update);
            ctrled = update.intl;
            source = ctrled.string;
            update = output[foxtra];
            update = sizing.bind(tangon)(update);
            update = update.t;
            update = update.3PatS0;
            update = source.bind(ctrled)(update);
            verify['text'] = update;
            result = output[result];
            result = echoed.bind(tangon)(result);
            result = result.Colors;
            result = result.BRAND;
            verify['color'] = result;
            result = function() { // Original name: onPress
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    tangon = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 27;
                    michal = michal[entity];
                    entity = undefined;
                    michal = tangon.bind(entity)(michal);
                    golfie = michal.NitroDowngradeModalExperiment;
                    oscard = golfie.getCurrentConfig;
                    report = {};
                    michal = 'c41775_1';
                    report['location'] = michal;
                    tangon = {};
                    option = _closure2_slot5;
                    tangon['autoTrackExposure'] = option;
                    tangon = oscard.bind(golfie)(report, tangon);
                    tangon = tangon.enabled;
                    report = _closure2_slot5;
                    if(!report) { _fun00006_ip = 84; continue _fun00005 }
 81:
                    if(tangon) { _fun00006_ip = 146; continue _fun00005 }
 84:
                    tangon = _closure2_slot7;
                    oscard = _closure1_slot0;
                    golfie = _closure1_slot2;
                    zuuluu = 20;
                    report = golfie[zuuluu];
                    report = oscard.bind(entity)(report);
                    report = report.STEP_ANALYTICS_NAMES;
                    zuuluu = golfie[zuuluu];
                    zuuluu = oscard.bind(entity)(zuuluu);
                    zuuluu = zuuluu.CancellationFlowSteps;
                    zuuluu = zuuluu.WHAT_YOU_LOSE;
                    zuuluu = report[zuuluu];
                    zuuluu = tangon.bind(entity)(zuuluu);
                    _fun00006_ip = 164; continue _fun00005;
 146:
                    zuuluu = _closure2_slot2;
                    michal = function(argFoo) { // Original name: showTier0DowngradeModal
                        option = _closure1_slot0;
                        michal = _closure1_slot2;
                        offset = 20;
                        tangon = michal[offset];
                        entity = undefined;
                        verify = option.bind(entity)(tangon);
                        report = verify.trackPremiumSubscriptionCancellationFlowStep;
                        tangon = {};
                        golfie = _closure2_slot1;
                        tangon['subscription'] = golfie;
                        oscard = _closure2_slot3;
                        tangon['analyticsLocations'] = oscard;
                        yankee = michal[offset];
                        yankee = option.bind(entity)(yankee);
                        romeon = yankee.STEP_ANALYTICS_NAMES;
                        yankee = michal[offset];
                        yankee = option.bind(entity)(yankee);
                        yankee = yankee.CancellationFlowSteps;
                        yankee = yankee.WHAT_YOU_LOSE;
                        yankee = romeon[yankee];
                        tangon['fromStep'] = yankee;
                        yankee = michal[offset];
                        yankee = option.bind(entity)(yankee);
                        yankee = yankee.STEP_ANALYTICS_NAMES;
                        offset = michal[offset];
                        offset = option.bind(entity)(offset);
                        offset = offset.CancellationFlowSteps;
                        offset = offset.DOWNGRADE_TO_TIER_0;
                        offset = yankee[offset];
                        tangon['toStep'] = offset;
                        tangon = report.bind(verify)(tangon);
                        tangon = _closure1_slot1;
                        zuuluu = 19;
                        zuuluu = michal[zuuluu];
                        report = tangon.bind(entity)(zuuluu);
                        zuuluu = report.hideActionSheet;
                        zuuluu = zuuluu.bind(report)();
                        zuuluu = 21;
                        zuuluu = michal[zuuluu];
                        report = tangon.bind(entity)(zuuluu);
                        tangon = report.pushLazy;
                        zuuluu = 23;
                        zuuluu = michal[zuuluu];
                        option = option.bind(entity)(zuuluu);
                        zuuluu = 22;
                        zuuluu = michal[zuuluu];
                        michal = michal.paths;
                        zuuluu = option.bind(entity)(zuuluu, michal);
                        michal = {};
                        michal['subscription'] = golfie;
                        michal['analyticsLocations'] = oscard;
                        oscard = argFoo;
                        michal['currentPremiumType'] = oscard;
                        oscard = function() { // Original name: continueToCancel
                            tangon = _closure1_slot1;
                            oscard = _closure1_slot2;
                            entity = 21;
                            zuuluu = oscard[entity];
                            entity = undefined;
                            tangon = tangon.bind(entity)(zuuluu);
                            zuuluu = tangon.pop;
                            zuuluu = zuuluu.bind(tangon)();
                            zuuluu = _closure2_slot7;
                            report = _closure1_slot0;
                            michal = 20;
                            tangon = oscard[michal];
                            tangon = report.bind(entity)(tangon);
                            tangon = tangon.STEP_ANALYTICS_NAMES;
                            michal = oscard[michal];
                            michal = report.bind(entity)(michal);
                            michal = michal.CancellationFlowSteps;
                            michal = michal.DOWNGRADE_TO_TIER_0;
                            michal = tangon[michal];
                            michal = zuuluu.bind(entity)(michal);
                            return entity;
                        };
                        michal['continueToCancel'] = oscard;
                        michal = tangon.bind(report)(zuuluu, michal);
                        return entity;
                    };
                    michal = michal.bind(entity)(zuuluu);
 164:
                    return entity;
                }
            };
            verify['onPress'] = result;
            yankee = romeon.bind(tangon)(yankee, verify);
            verify = new Array(2);
            verify[0] = yankee;
            offset = output[offset];
            offset = sizing.bind(tangon)(offset);
            yankee = offset.Text;
            offset = {};
            result = 'text-sm/medium';
            offset['variant'] = result;
            kiloes = kiloes.keepText;
            offset['style'] = kiloes;
            backup = function() { // Original name: onPress
                option = _closure1_slot0;
                verify = _closure1_slot2;
                oscard = 20;
                michal = verify[oscard];
                entity = undefined;
                report = option.bind(entity)(michal);
                tangon = report.trackPremiumSubscriptionCancellationFlowStep;
                zuuluu = {};
                golfie = _closure2_slot1;
                zuuluu['subscription'] = golfie;
                golfie = _closure2_slot3;
                zuuluu['analyticsLocations'] = golfie;
                golfie = verify[oscard];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.STEP_ANALYTICS_NAMES;
                oscard = verify[oscard];
                oscard = option.bind(entity)(oscard);
                oscard = oscard.CancellationFlowSteps;
                oscard = oscard.WHAT_YOU_LOSE;
                oscard = golfie[oscard];
                zuuluu['fromStep'] = oscard;
                oscard = null;
                zuuluu['toStep'] = oscard;
                zuuluu = tangon.bind(report)(zuuluu);
                michal = _closure2_slot6;
                michal = michal.bind(entity)();
                return entity;
            };
            offset['onPress'] = backup;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = output[foxtra];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.rzVN6u;
            foxtra = backup.bind(kiloes)(foxtra);
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['WhatYouLoseMode'] = michal;
    return entity;
})();