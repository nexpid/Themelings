// app/modules/premium/native/PremiumPerkCard.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    option = argBar;
    zuuluu = argFre;
    verify = argPlu;
    var _closure1_slot0 = option;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = verify;
    tangon = global;
    golfie = tangon.Object;
    oscard = golfie.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = oscard.bind(golfie)(zuuluu, entity, report);
    yankee = 0;
    oscard = verify[yankee];
    report = argCor;
    entity = undefined;
    report = report.bind(entity)(oscard);
    var _closure1_slot3 = report;
    offset = 1;
    report = verify[offset];
    report = option.bind(entity)(report);
    oscard = report.View;
    var _closure1_slot4 = oscard;
    report = report.ScrollView;
    var _closure1_slot5 = report;
    report = 2;
    report = verify[report];
    report = option.bind(entity)(report);
    report = report.MAX_PREMIUM_TIER_2_ATTACHMENT_SIZE;
    var _closure1_slot6 = report;
    report = 3;
    report = verify[report];
    report = option.bind(entity)(report);
    oscard = report.HorizontalGradient;
    var _closure1_slot7 = oscard;
    report = report.UserSettingsSections;
    var _closure1_slot8 = report;
    report = 4;
    oscard = verify[report];
    oscard = option.bind(entity)(oscard);
    oscard = oscard.jsx;
    var _closure1_slot9 = oscard;
    report = verify[report];
    report = option.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot10 = report;
    oscard = {};
    report = 'customProfile';
    oscard['CUSTOM_PROFILE'] = report;
    report = 'clientThemes';
    oscard['CLIENT_THEMES'] = report;
    report = 'serverBoosts';
    oscard['SERVER_BOOSTS'] = report;
    report = 'greyServerBoosts';
    oscard['GREYED_SERVER_BOOSTS'] = report;
    report = 'customAppIcons';
    oscard['CUSTOM_APP_ICONS'] = report;
    report = 'emoji';
    oscard['EMOJI'] = report;
    report = 'customSounds';
    oscard['CUSTOM_SOUNDS'] = report;
    report = 'sticker';
    oscard['STICKER'] = report;
    report = 'earlyAccess';
    oscard['EARLY_ACCESS'] = report;
    report = 'memberPricing';
    oscard['MEMBER_PRICING'] = report;
    report = 'largeUploads';
    oscard['LARGE_UPLOADS'] = report;
    report = 'hdVideo';
    oscard['HD_VIDEO'] = report;
    report = 'superReactions';
    oscard['SUPER_REACTIONS'] = report;
    report = 'entranceSounds';
    oscard['ENTRACE_SOUNDS'] = report;
    report = 'badge';
    oscard['BADGE'] = report;
    report = 'greyBadge';
    oscard['GREYED_BADGE'] = report;
    report = {};
    report['NARROW'] = yankee;
    golfie = 'NARROW';
    report[yankee] = golfie;
    report['WIDE'] = offset;
    golfie = 'WIDE';
    report[offset] = golfie;
    var _closure1_slot11 = report;
    offset = tangon.Object;
    golfie = offset.freeze;
    tangon = {};
    romeon = report.NARROW;
    yankee = {'width': 300, 'height': 364};
    tangon[romeon] = yankee;
    romeon = report.WIDE;
    yankee = {'width': 320, 'height': 364};
    tangon[romeon] = yankee;
    tangon = golfie.bind(offset)(tangon);
    var _closure1_slot12 = tangon;
    golfie = 27;
    golfie = verify[golfie];
    yankee = option.bind(entity)(golfie);
    offset = yankee.createStyles;
    golfie = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            golfie = argFoo;
            entity = {};
            michal = {};
            option = _closure1_slot1;
            tangon = _closure1_slot2;
            oscard = 28;
            verify = tangon[oscard];
            report = undefined;
            verify = option.bind(report)(verify);
            verify = verify.colors;
            verify = verify.BG_SURFACE_RAISED;
            michal['backgroundColor'] = verify;
            tangon = tangon[oscard];
            tangon = option.bind(report)(tangon);
            tangon = tangon.radii;
            tangon = tangon.sm;
            michal['borderRadius'] = tangon;
            tangon = _closure1_slot12;
            tangon = tangon[golfie];
            tangon = tangon.width;
            michal['width'] = tangon;
            tangon = _closure1_slot11;
            tangon = tangon.NARROW;
            tangon = golfie === tangon;
            if(!tangon) { _fun00002_ip = 127; continue _fun00001 }
 105:
            option = {};
            verify = _closure1_slot12;
            verify = verify[golfie];
            verify = verify.height;
            option['height'] = verify;
            tangon = option;
 127:
            romeon = michal;
            yankee = tangon;
            tangon = copyDataProperties(romeon, yankee);
            verify = _closure1_slot1;
            tangon = _closure1_slot2;
            option = tangon[oscard];
            option = verify.bind(report)(option);
            option = option.shadows;
            yankee = option.SHADOW_LOW;
            romeon = michal;
            option = copyDataProperties(romeon, yankee);
            entity['container'] = michal;
            michal = {};
            option = '100%';
            michal['width'] = option;
            offset = tangon[oscard];
            offset = verify.bind(report)(offset);
            offset = offset.radii;
            offset = offset.sm;
            michal['borderTopLeftRadius'] = offset;
            offset = tangon[oscard];
            offset = verify.bind(report)(offset);
            offset = offset.radii;
            offset = offset.sm;
            michal['borderTopRightRadius'] = offset;
            offset = 'hidden';
            michal['overflow'] = offset;
            entity['headerComponent'] = michal;
            michal = {};
            michal['width'] = option;
            offset = tangon[oscard];
            offset = verify.bind(report)(offset);
            offset = offset.radii;
            offset = offset.sm;
            michal['borderTopLeftRadius'] = offset;
            tangon = tangon[oscard];
            tangon = verify.bind(report)(tangon);
            tangon = tangon.radii;
            tangon = tangon.sm;
            michal['borderTopRightRadius'] = tangon;
            entity['image'] = michal;
            michal = {'marginTop': 16, 'marginHorizontal': 16};
            entity['title'] = michal;
            michal = {'marginTop': 8, 'marginHorizontal': 16};
            tangon = 8;
            verify = _closure1_slot11;
            verify = verify.WIDE;
            if(!(golfie === verify)) { _fun00002_ip = 362; continue _fun00001 }
 359:
            tangon = 24;
 362:
            michal['marginBottom'] = tangon;
            tangon = _closure1_slot11;
            tangon = tangon.NARROW;
            tangon = golfie === tangon;
            if(!tangon) { _fun00002_ip = 392; continue _fun00001 }
 383:
            golfie = {};
            golfie['height'] = option;
            tangon = golfie;
 392:
            romeon = michal;
            yankee = tangon;
            tangon = copyDataProperties(romeon, yankee);
            entity['description'] = michal;
            michal = {'marginTop': 'auto', 'marginHorizontal': 16, 'marginBottom': 16};
            entity['button'] = michal;
            michal = {'position': 'relative', 'alignItems': 'center', 'justifyContent': 'center'};
            entity['imageContainer'] = michal;
            michal = {};
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            golfie = zuuluu[oscard];
            golfie = tangon.bind(report)(golfie);
            golfie = golfie.colors;
            golfie = golfie.WHITE;
            michal['color'] = golfie;
            golfie = 14;
            michal['fontSize'] = golfie;
            entity['imageOverlayText'] = michal;
            michal = {'position': 'absolute', 'bottom': '10%', 'borderRadius': null, 'backgroundColor': null, 'paddingHorizontal': 12, 'paddingVertical': 4, 'justifyContent': 'center', 'alignItems': 'center'};
            golfie = zuuluu[oscard];
            golfie = tangon.bind(report)(golfie);
            golfie = golfie.radii;
            golfie = golfie.round;
            michal['borderRadius'] = golfie;
            golfie = zuuluu[oscard];
            golfie = tangon.bind(report)(golfie);
            golfie = golfie.colors;
            golfie = golfie.ACTIVITY_CARD_ICON_OVERLAY;
            michal['backgroundColor'] = golfie;
            entity['imageOverlayTextContainer'] = michal;
            michal = {'position': 'absolute', 'width': 'auto', 'top': 4294967288, 'left': 10, 'paddingHorizontal': 8, 'borderRadius': null, 'justifyContent': 'center'};
            zuuluu = zuuluu[oscard];
            zuuluu = tangon.bind(report)(zuuluu);
            zuuluu = zuuluu.radii;
            zuuluu = zuuluu.lg;
            michal['borderRadius'] = zuuluu;
            entity['pillTextContainer'] = michal;
            michal = {};
            zuuluu = 'uppercase';
            michal['textTransform'] = zuuluu;
            entity['pillText'] = michal;
            return entity;
        }
    };
    golfie = offset.bind(yankee)(golfie);
    var _closure1_slot13 = golfie;
    golfie = 34;
    golfie = verify[golfie];
    verify = option.bind(entity)(golfie);
    option = verify.fileFinishedImporting;
    golfie = 'modules/premium/native/PremiumPerkCard.tsx';
    golfie = option.bind(verify)(golfie);
    golfie = function(argFoo) { // Original name: PremiumPerkCard
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            michal = argFoo;
            option = michal.style;
            kiloes = michal.title;
            output = michal.titleStyle;
            report = michal.description;
            entity = michal.bodyComponent;
            backup = michal.headerComponent;
            ctrled = michal.imageSrc;
            romeon = michal.buttonOnPress;
            foxtra = michal.cta;
            tangon = undefined;
            if(!(foxtra === tangon)) { _fun00004_ip = 118; continue _fun00003 }
 60:
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            zuuluu = 9;
            oscard = offset[zuuluu];
            oscard = verify.bind(tangon)(oscard);
            golfie = oscard.intl;
            oscard = golfie.string;
            zuuluu = offset[zuuluu];
            zuuluu = verify.bind(tangon)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu.jVcuVV;
            foxtra = oscard.bind(golfie)(zuuluu);
 118:
            zuuluu = michal.variant;
            if(!(zuuluu === tangon)) { _fun00004_ip = 140; continue _fun00003 }
 127:
            oscard = _closure1_slot11;
            zuuluu = oscard.WIDE;
 140:
            config = michal.imageOverlayText;
            update = michal.pillText;
            michal = _closure1_slot13;
            yankee = michal.bind(tangon)(zuuluu);
            zuuluu = _closure1_slot1;
            oscard = _closure1_slot2;
            michal = 29;
            michal = oscard[michal];
            michal = zuuluu.bind(tangon)(michal);
            result = michal.bind(tangon)();
            oscard = null;
            if(!(oscard == ctrled)) { _fun00004_ip = 241; continue _fun00003 }
 194:
            michal = oscard != backup;
            golfie = null;
            if(!michal) { _fun00004_ip = 472; continue _fun00003 }
 206:
            verify = _closure1_slot9;
            zuuluu = _closure1_slot4;
            michal = {};
            sizing = yankee.headerComponent;
            michal['style'] = sizing;
            michal['children'] = backup;
            golfie = verify.bind(tangon)(zuuluu, michal);
            _fun00004_ip = 472; continue _fun00003;
 241:
            if(!(oscard == config)) { _fun00004_ip = 296; continue _fun00003 }
 245:
            verify = _closure1_slot9;
            zuuluu = _closure1_slot1;
            backup = _closure1_slot2;
            michal = 30;
            michal = backup[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = {};
            backup = yankee.image;
            michal['style'] = backup;
            michal['source'] = ctrled;
            michal = verify.bind(tangon)(zuuluu, michal);
            _fun00004_ip = 469; continue _fun00003;
 296:
            backup = _closure1_slot10;
            verify = _closure1_slot4;
            zuuluu = {};
            sizing = yankee.imageContainer;
            zuuluu['style'] = sizing;
            source = _closure1_slot9;
            echoed = _closure1_slot1;
            sequen = _closure1_slot2;
            sizing = 30;
            sizing = sequen[sizing];
            echoed = echoed.bind(tangon)(sizing);
            sizing = {};
            vacuum = yankee.image;
            sizing['style'] = vacuum;
            sizing['source'] = ctrled;
            echoed = source.bind(tangon)(echoed, sizing);
            sizing = new Array(2);
            sizing[0] = echoed;
            echoed = {};
            ctrled = yankee.imageOverlayTextContainer;
            echoed['style'] = ctrled;
            vacuum = _closure1_slot0;
            ctrled = 31;
            ctrled = sequen[ctrled];
            ctrled = vacuum.bind(tangon)(ctrled);
            vacuum = ctrled.Text;
            ctrled = {};
            sequen = yankee.imageOverlayText;
            ctrled['style'] = sequen;
            sequen = 'text-md/bold';
            ctrled['variant'] = sequen;
            sequen = config.toUpperCase;
            sequen = sequen.bind(config)();
            ctrled['children'] = sequen;
            ctrled = source.bind(tangon)(vacuum, ctrled);
            echoed['children'] = ctrled;
            echoed = source.bind(tangon)(verify, echoed);
            sizing[1] = echoed;
            zuuluu['children'] = sizing;
            michal = backup.bind(tangon)(verify, zuuluu);
 469:
            golfie = michal;
 472:
            if(!(oscard == report)) { _fun00004_ip = 490; continue _fun00003 }
 476:
            michal = oscard != entity;
            backup = null;
            if(!michal) { _fun00004_ip = 541; continue _fun00003 }
 485:
            backup = entity;
            _fun00004_ip = 541; continue _fun00003;
 490:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 31;
            entity = verify[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.Text;
            entity = {};
            verify = 'text-sm/normal';
            entity['variant'] = verify;
            entity['children'] = report;
            backup = zuuluu.bind(tangon)(michal, entity);
 541:
            zuuluu = _closure1_slot10;
            michal = _closure1_slot4;
            entity = {};
            verify = yankee.container;
            report = new Array(2);
            report[0] = verify;
            report[1] = option;
            entity['style'] = report;
            option = oscard != update;
            if(!option) { _fun00004_ip = 719; continue _fun00003 }
 582:
            sizing = _closure1_slot9;
            verify = _closure1_slot1;
            source = _closure1_slot2;
            report = 32;
            report = source[report];
            verify = verify.bind(tangon)(report);
            report = {};
            ctrled = yankee.pillTextContainer;
            echoed = new Array(1);
            echoed[0] = ctrled;
            report['style'] = echoed;
            echoed = _closure1_slot7;
            ctrled = echoed.START;
            report['start'] = ctrled;
            echoed = echoed.END;
            report['end'] = echoed;
            report['colors'] = result;
            echoed = _closure1_slot0;
            result = 31;
            result = source[result];
            result = echoed.bind(tangon)(result);
            echoed = result.Text;
            result = {'variant': 'text-xs/semibold', 'color': 'always-white'};
            source = yankee.pillText;
            result['style'] = source;
            result['children'] = update;
            result = sizing.bind(tangon)(echoed, result);
            report['children'] = result;
            option = sizing.bind(tangon)(verify, report);
 719:
            report = new Array(5);
            report[0] = option;
            report[1] = golfie;
            verify = _closure1_slot9;
            option = _closure1_slot0;
            sizing = _closure1_slot2;
            golfie = 31;
            golfie = sizing[golfie];
            golfie = option.bind(tangon)(golfie);
            option = golfie.Text;
            golfie = {};
            result = yankee.title;
            sizing = new Array(2);
            sizing[0] = result;
            sizing[1] = output;
            golfie['style'] = sizing;
            sizing = 'heading-lg/extrabold';
            golfie['variant'] = sizing;
            golfie['children'] = kiloes;
            golfie = verify.bind(tangon)(option, golfie);
            report[2] = golfie;
            option = _closure1_slot5;
            golfie = {};
            kiloes = yankee.description;
            golfie['style'] = kiloes;
            golfie['children'] = backup;
            golfie = verify.bind(tangon)(option, golfie);
            report[3] = golfie;
            oscard = oscard != romeon;
            if(!oscard) { _fun00004_ip = 927; continue _fun00003 }
 843:
            verify = _closure1_slot9;
            option = _closure1_slot4;
            golfie = {};
            yankee = yankee.button;
            golfie['style'] = yankee;
            yankee = _closure1_slot0;
            backup = _closure1_slot2;
            offset = 33;
            offset = backup[offset];
            offset = yankee.bind(tangon)(offset);
            yankee = offset.Button;
            offset = {'size': 'sm', 'variant': 'secondary'};
            offset['text'] = foxtra;
            offset['onPress'] = romeon;
            offset = verify.bind(tangon)(yankee, offset);
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 927:
            report[4] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = golfie;
    zuuluu['PerkCardTypes'] = oscard;
    zuuluu['PerkCardVariant'] = report;
    zuuluu['PERK_CARD_SIZES'] = tangon;
    michal = function() { // Original name: usePremiumPerkCard
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            michal = 5;
            michal = offset[michal];
            oscard = undefined;
            zuuluu = verify.bind(oscard)(michal);
            michal = zuuluu.useSubscriptionPlansLoaded;
            michal = michal.bind(zuuluu)();
            var _closure2_slot0 = michal;
            zuuluu = 6;
            zuuluu = offset[zuuluu];
            option = verify.bind(oscard)(zuuluu);
            golfie = option.formatSize;
            tangon = _closure1_slot6;
            zuuluu = 1024;
            tangon = tangon / zuuluu;
            zuuluu = {};
            yankee = true;
            zuuluu['useKibibytes'] = yankee;
            foxtra = golfie.bind(option)(tangon, zuuluu);
            golfie = _closure1_slot3;
            option = golfie.useCallback;
            tangon = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 7;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.getRootNavigationRef;
                    report = michal.bind(zuuluu)();
                    michal = null;
                    michal = michal != report;
                    if(!michal) { _fun00008_ip = 54; continue _fun00007 }
 44:
                    zuuluu = report.isReady;
                    michal = zuuluu.bind(report)();
 54:
                    if(!michal) { _fun00008_ip = 128; continue _fun00007 }
 57:
                    tangon = report.navigate;
                    zuuluu = {};
                    michal = _closure1_slot8;
                    michal = michal.COLLECTIBLES_SHOP;
                    zuuluu['screen'] = michal;
                    michal = {};
                    golfie = _closure1_slot1;
                    option = _closure1_slot2;
                    oscard = 8;
                    oscard = option[oscard];
                    oscard = golfie.bind(entity)(oscard);
                    oscard = oscard.PREMIUM_MARKETING_PERK_CARD;
                    michal['analyticsSource'] = oscard;
                    zuuluu['params'] = michal;
                    michal = 'settings';
                    michal = tangon.bind(report)(michal, zuuluu);
 128:
                    return entity;
                }
            };
            zuuluu = new Array(0);
            option = option.bind(golfie)(tangon, zuuluu);
            yankee = golfie.useCallback;
            tangon = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    entity = 7;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = tangon.getRootNavigationRef;
                    report = zuuluu.bind(tangon)();
                    zuuluu = null;
                    if(!(zuuluu != report)) { _fun00010_ip = 89; continue _fun00009 }
 41:
                    zuuluu = report.isReady;
                    zuuluu = zuuluu.bind(report)();
                    if(!zuuluu) { _fun00010_ip = 89; continue _fun00009 }
 54:
                    tangon = report.navigate;
                    zuuluu = {};
                    michal = _closure1_slot8;
                    michal = michal.PROFILE_CUSTOMIZATION;
                    zuuluu['screen'] = michal;
                    michal = 'settings';
                    michal = tangon.bind(report)(michal, zuuluu);
                    return entity;
 89:
                    entity = false;
                    return entity;
                }
            };
            zuuluu = new Array(0);
            backup = yankee.bind(golfie)(tangon, zuuluu);
            yankee = golfie.useCallback;
            tangon = function() {
                _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    entity = 7;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = tangon.getRootNavigationRef;
                    report = zuuluu.bind(tangon)();
                    zuuluu = null;
                    if(!(zuuluu != report)) { _fun00012_ip = 89; continue _fun00011 }
 41:
                    zuuluu = report.isReady;
                    zuuluu = zuuluu.bind(report)();
                    if(!zuuluu) { _fun00012_ip = 89; continue _fun00011 }
 54:
                    tangon = report.navigate;
                    zuuluu = {};
                    michal = _closure1_slot8;
                    michal = michal.APPEARANCE_THEME_PICKER;
                    zuuluu['screen'] = michal;
                    michal = 'settings';
                    michal = tangon.bind(report)(michal, zuuluu);
                    return entity;
 89:
                    entity = false;
                    return entity;
                }
            };
            zuuluu = new Array(0);
            romeon = yankee.bind(golfie)(tangon, zuuluu);
            tangon = golfie.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    entity = 7;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = tangon.getRootNavigationRef;
                    report = zuuluu.bind(tangon)();
                    zuuluu = null;
                    if(!(zuuluu != report)) { _fun00014_ip = 111; continue _fun00013 }
 41:
                    zuuluu = report.isReady;
                    zuuluu = zuuluu.bind(report)();
                    if(!zuuluu) { _fun00014_ip = 111; continue _fun00013 }
 54:
                    tangon = report.navigate;
                    zuuluu = {};
                    michal = _closure1_slot8;
                    michal = michal.GUILD_BOOSTING;
                    zuuluu['screen'] = michal;
                    michal = {};
                    oscard = _closure2_slot0;
                    oscard = !oscard;
                    michal['shouldFetchSubscriptionPlans'] = oscard;
                    zuuluu['params'] = michal;
                    michal = 'settings';
                    michal = tangon.bind(report)(michal, zuuluu);
                    return entity;
 111:
                    entity = false;
                    return entity;
                }
            };
            zuuluu = tangon.bind(golfie)(michal, zuuluu);
            tangon = golfie.useCallback;
            michal = function() {
                _fun00015: for(var _fun00016_ip = 0; ; ) switch(_fun00016_ip) {
 0:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    entity = 7;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = tangon.getRootNavigationRef;
                    report = zuuluu.bind(tangon)();
                    zuuluu = null;
                    if(!(zuuluu != report)) { _fun00016_ip = 89; continue _fun00015 }
 41:
                    zuuluu = report.isReady;
                    zuuluu = zuuluu.bind(report)();
                    if(!zuuluu) { _fun00016_ip = 89; continue _fun00015 }
 54:
                    tangon = report.navigate;
                    zuuluu = {};
                    michal = _closure1_slot8;
                    michal = michal.APP_ICONS;
                    zuuluu['screen'] = michal;
                    michal = 'settings';
                    michal = tangon.bind(report)(michal, zuuluu);
                    return entity;
 89:
                    entity = false;
                    return entity;
                }
            };
            entity = new Array(0);
            golfie = tangon.bind(golfie)(michal, entity);
            entity = {};
            michal = {};
            tangon = 9;
            yankee = offset[tangon];
            yankee = verify.bind(oscard)(yankee);
            sizing = yankee.intl;
            kiloes = sizing.string;
            yankee = offset[tangon];
            yankee = verify.bind(oscard)(yankee);
            yankee = yankee.t;
            yankee = yankee.KcyDwM;
            yankee = kiloes.bind(sizing)(yankee);
            michal['title'] = yankee;
            yankee = offset[tangon];
            yankee = verify.bind(oscard)(yankee);
            sizing = yankee.intl;
            kiloes = sizing.string;
            yankee = offset[tangon];
            yankee = verify.bind(oscard)(yankee);
            yankee = yankee.t;
            yankee = yankee.Mt3U1d;
            yankee = kiloes.bind(sizing)(yankee);
            michal['description'] = yankee;
            yankee = _closure1_slot1;
            kiloes = 10;
            kiloes = offset[kiloes];
            kiloes = yankee.bind(oscard)(kiloes);
            michal['imageSrc'] = kiloes;
            michal['buttonOnPress'] = backup;
            entity['customProfile'] = michal;
            michal = {};
            backup = offset[tangon];
            backup = verify.bind(oscard)(backup);
            sizing = backup.intl;
            kiloes = sizing.string;
            backup = offset[tangon];
            backup = verify.bind(oscard)(backup);
            backup = backup.t;
            backup = backup.kWM48P;
            backup = kiloes.bind(sizing)(backup);
            michal['title'] = backup;
            backup = offset[tangon];
            backup = verify.bind(oscard)(backup);
            sizing = backup.intl;
            kiloes = sizing.string;
            backup = offset[tangon];
            backup = verify.bind(oscard)(backup);
            backup = backup.t;
            backup = backup.CjRASE;
            backup = kiloes.bind(sizing)(backup);
            michal['description'] = backup;
            backup = 11;
            backup = offset[backup];
            backup = yankee.bind(oscard)(backup);
            michal['imageSrc'] = backup;
            michal['buttonOnPress'] = romeon;
            entity['clientThemes'] = michal;
            michal = {};
            romeon = offset[tangon];
            romeon = verify.bind(oscard)(romeon);
            kiloes = romeon.intl;
            backup = kiloes.string;
            romeon = offset[tangon];
            romeon = verify.bind(oscard)(romeon);
            romeon = romeon.t;
            romeon = romeon.NyDu//;
            romeon = backup.bind(kiloes)(romeon);
            michal['title'] = romeon;
            romeon = offset[tangon];
            romeon = verify.bind(oscard)(romeon);
            kiloes = romeon.intl;
            backup = kiloes.string;
            romeon = offset[tangon];
            romeon = verify.bind(oscard)(romeon);
            romeon = romeon.t;
            romeon = romeon.4pEwXF;
            romeon = backup.bind(kiloes)(romeon);
            michal['description'] = romeon;
            romeon = 12;
            romeon = offset[romeon];
            romeon = yankee.bind(oscard)(romeon);
            michal['imageSrc'] = romeon;
            michal['buttonOnPress'] = zuuluu;
            entity['serverBoosts'] = michal;
            michal = {};
            zuuluu = offset[tangon];
            zuuluu = verify.bind(oscard)(zuuluu);
            backup = zuuluu.intl;
            romeon = backup.string;
            zuuluu = offset[tangon];
            zuuluu = verify.bind(oscard)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu.NyDu//;
            zuuluu = romeon.bind(backup)(zuuluu);
            michal['title'] = zuuluu;
            zuuluu = offset[tangon];
            zuuluu = verify.bind(oscard)(zuuluu);
            backup = zuuluu.intl;
            romeon = backup.string;
            zuuluu = offset[tangon];
            zuuluu = verify.bind(oscard)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu.4pEwXF;
            zuuluu = romeon.bind(backup)(zuuluu);
            michal['description'] = zuuluu;
            zuuluu = 13;
            zuuluu = offset[zuuluu];
            zuuluu = yankee.bind(oscard)(zuuluu);
            michal['imageSrc'] = zuuluu;
            zuuluu = 'Requires Subscription';
            michal['imageOverlayText'] = zuuluu;
            entity['greyServerBoosts'] = michal;
            michal = {};
            romeon = offset[tangon];
            romeon = verify.bind(oscard)(romeon);
            kiloes = romeon.intl;
            backup = kiloes.string;
            romeon = offset[tangon];
            romeon = verify.bind(oscard)(romeon);
            romeon = romeon.t;
            romeon = romeon.OuItFh;
            romeon = backup.bind(kiloes)(romeon);
            michal['title'] = romeon;
            romeon = offset[tangon];
            romeon = verify.bind(oscard)(romeon);
            kiloes = romeon.intl;
            backup = kiloes.string;
            romeon = offset[tangon];
            romeon = verify.bind(oscard)(romeon);
            romeon = romeon.t;
            romeon = romeon.mPyrEx;
            romeon = backup.bind(kiloes)(romeon);
            michal['description'] = romeon;
            romeon = 14;
            romeon = offset[romeon];
            romeon = yankee.bind(oscard)(romeon);
            michal['imageSrc'] = romeon;
            michal['buttonOnPress'] = golfie;
            entity['customAppIcons'] = michal;
            michal = {};
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            backup = golfie.intl;
            romeon = backup.string;
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            golfie = golfie.t;
            golfie = golfie.R2IV/f;
            golfie = romeon.bind(backup)(golfie);
            michal['title'] = golfie;
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            backup = golfie.intl;
            romeon = backup.string;
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            golfie = golfie.t;
            golfie = golfie.R5Xag4;
            golfie = romeon.bind(backup)(golfie);
            michal['description'] = golfie;
            golfie = 15;
            golfie = offset[golfie];
            golfie = yankee.bind(oscard)(golfie);
            michal['imageSrc'] = golfie;
            entity['emoji'] = michal;
            michal = {};
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            backup = golfie.intl;
            romeon = backup.string;
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            golfie = golfie.t;
            golfie = golfie.LWsAra;
            golfie = romeon.bind(backup)(golfie);
            michal['title'] = golfie;
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            backup = golfie.intl;
            romeon = backup.string;
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            golfie = golfie.t;
            golfie = golfie.4lSyCQ;
            golfie = romeon.bind(backup)(golfie);
            michal['description'] = golfie;
            golfie = 16;
            golfie = offset[golfie];
            golfie = yankee.bind(oscard)(golfie);
            michal['imageSrc'] = golfie;
            entity['customSounds'] = michal;
            michal = {};
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            backup = golfie.intl;
            romeon = backup.string;
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            golfie = golfie.t;
            golfie = golfie.tzdIwM;
            golfie = romeon.bind(backup)(golfie);
            michal['title'] = golfie;
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            backup = golfie.intl;
            romeon = backup.string;
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            golfie = golfie.t;
            golfie = golfie.FXlU29;
            golfie = romeon.bind(backup)(golfie);
            michal['description'] = golfie;
            golfie = 17;
            golfie = offset[golfie];
            golfie = yankee.bind(oscard)(golfie);
            michal['imageSrc'] = golfie;
            entity['sticker'] = michal;
            michal = {};
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            backup = golfie.intl;
            romeon = backup.string;
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            golfie = golfie.t;
            golfie = golfie.EYxi0t;
            golfie = romeon.bind(backup)(golfie);
            michal['title'] = golfie;
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            backup = golfie.intl;
            romeon = backup.string;
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            golfie = golfie.t;
            golfie = golfie.M9AIt7;
            golfie = romeon.bind(backup)(golfie);
            michal['description'] = golfie;
            golfie = 18;
            golfie = offset[golfie];
            golfie = yankee.bind(oscard)(golfie);
            michal['imageSrc'] = golfie;
            entity['earlyAccess'] = michal;
            michal = {};
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            backup = golfie.intl;
            romeon = backup.string;
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            golfie = golfie.t;
            golfie = golfie.H4/NBA;
            golfie = romeon.bind(backup)(golfie);
            michal['title'] = golfie;
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            backup = golfie.intl;
            romeon = backup.string;
            golfie = offset[tangon];
            golfie = verify.bind(oscard)(golfie);
            golfie = golfie.t;
            golfie = golfie.wo3D3d;
            golfie = romeon.bind(backup)(golfie);
            michal['description'] = golfie;
            golfie = 19;
            golfie = offset[golfie];
            golfie = yankee.bind(oscard)(golfie);
            michal['imageSrc'] = golfie;
            golfie = 20;
            golfie = offset[golfie];
            verify = verify.bind(oscard)(golfie);
            golfie = verify.isIOS;
            verify = golfie.bind(verify)();
            golfie = undefined;
            if(!verify) { _fun00006_ip = 1503; continue _fun00005 }
 1500:
            golfie = option;
 1503:
            michal['buttonOnPress'] = golfie;
            entity['memberPricing'] = michal;
            michal = {};
            offset = _closure1_slot0;
            golfie = _closure1_slot2;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            romeon = option.intl;
            yankee = romeon.formatToPlainString;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            option = option.t;
            verify = option.jqhAdH;
            option = {};
            option['premiumMaxSize'] = foxtra;
            option = yankee.bind(romeon)(verify, option);
            michal['title'] = option;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            romeon = option.intl;
            yankee = romeon.formatToPlainString;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            option = option.t;
            verify = option.HI+cfn;
            option = {};
            option['premiumMaxSize'] = foxtra;
            option = yankee.bind(romeon)(verify, option);
            michal['description'] = option;
            report = _closure1_slot1;
            option = 21;
            option = golfie[option];
            option = report.bind(oscard)(option);
            michal['imageSrc'] = option;
            entity['largeUploads'] = michal;
            michal = {};
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            yankee = option.intl;
            verify = yankee.string;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            option = option.t;
            option = option.RSXQYG;
            option = verify.bind(yankee)(option);
            michal['title'] = option;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            yankee = option.intl;
            verify = yankee.string;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            option = option.t;
            option = option.ymCPxs;
            option = verify.bind(yankee)(option);
            michal['description'] = option;
            option = 22;
            option = golfie[option];
            option = report.bind(oscard)(option);
            michal['imageSrc'] = option;
            entity['hdVideo'] = michal;
            michal = {};
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            yankee = option.intl;
            verify = yankee.string;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            option = option.t;
            option = option.6S7kOz;
            option = verify.bind(yankee)(option);
            michal['title'] = option;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            yankee = option.intl;
            verify = yankee.string;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            option = option.t;
            option = option.A0U9fn;
            option = verify.bind(yankee)(option);
            michal['description'] = option;
            option = 23;
            option = golfie[option];
            option = report.bind(oscard)(option);
            michal['imageSrc'] = option;
            entity['superReactions'] = michal;
            michal = {};
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            yankee = option.intl;
            verify = yankee.string;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            option = option.t;
            option = option.f4M+Hx;
            option = verify.bind(yankee)(option);
            michal['title'] = option;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            yankee = option.intl;
            verify = yankee.string;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            option = option.t;
            option = option.7ZCYvL;
            option = verify.bind(yankee)(option);
            michal['description'] = option;
            option = 24;
            option = golfie[option];
            option = report.bind(oscard)(option);
            michal['imageSrc'] = option;
            entity['entranceSounds'] = michal;
            michal = {};
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            yankee = option.intl;
            verify = yankee.string;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            option = option.t;
            option = option.dcFfSE;
            option = verify.bind(yankee)(option);
            michal['title'] = option;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            yankee = option.intl;
            verify = yankee.string;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            option = option.t;
            option = option.37MFFh;
            option = verify.bind(yankee)(option);
            michal['description'] = option;
            option = 25;
            option = golfie[option];
            option = report.bind(oscard)(option);
            michal['imageSrc'] = option;
            entity['badge'] = michal;
            michal = {};
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            yankee = option.intl;
            verify = yankee.string;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            option = option.t;
            option = option.dcFfSE;
            option = verify.bind(yankee)(option);
            michal['title'] = option;
            option = golfie[tangon];
            option = offset.bind(oscard)(option);
            verify = option.intl;
            option = verify.string;
            tangon = golfie[tangon];
            tangon = offset.bind(oscard)(tangon);
            tangon = tangon.t;
            tangon = tangon.37MFFh;
            tangon = option.bind(verify)(tangon);
            michal['description'] = tangon;
            tangon = 26;
            tangon = golfie[tangon];
            tangon = report.bind(oscard)(tangon);
            michal['imageSrc'] = tangon;
            michal['imageOverlayText'] = zuuluu;
            entity['greyBadge'] = michal;
            return entity;
        }
    };
    zuuluu['usePremiumPerkCard'] = michal;
    return entity;
})();