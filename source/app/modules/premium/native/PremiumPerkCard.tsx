// app/modules/premium/native/PremiumPerkCard.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    options = argBar;
    zulu = argFred;
    verify = argPlugh;
    var _closure1_slot0 = options;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = verify;
    tango = global;
    golf = tango.Object;
    oscar = golf.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = oscar.bind(golf)(zulu, entity, report);
    yankee = 0;
    oscar = verify[yankee];
    report = argCorge;
    entity = undefined;
    report = report.bind(entity)(oscar);
    var _closure1_slot3 = report;
    offset = 1;
    report = verify[offset];
    report = options.bind(entity)(report);
    oscar = report.View;
    var _closure1_slot4 = oscar;
    report = report.ScrollView;
    var _closure1_slot5 = report;
    report = 2;
    report = verify[report];
    report = options.bind(entity)(report);
    report = report.MAX_PREMIUM_TIER_2_ATTACHMENT_SIZE;
    var _closure1_slot6 = report;
    report = 3;
    report = verify[report];
    report = options.bind(entity)(report);
    oscar = report.HorizontalGradient;
    var _closure1_slot7 = oscar;
    report = report.UserSettingsSections;
    var _closure1_slot8 = report;
    report = 4;
    oscar = verify[report];
    oscar = options.bind(entity)(oscar);
    oscar = oscar.jsx;
    var _closure1_slot9 = oscar;
    report = verify[report];
    report = options.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot10 = report;
    oscar = {};
    report = 'customProfile';
    oscar['CUSTOM_PROFILE'] = report;
    report = 'clientThemes';
    oscar['CLIENT_THEMES'] = report;
    report = 'serverBoosts';
    oscar['SERVER_BOOSTS'] = report;
    report = 'greyServerBoosts';
    oscar['GREYED_SERVER_BOOSTS'] = report;
    report = 'customAppIcons';
    oscar['CUSTOM_APP_ICONS'] = report;
    report = 'emoji';
    oscar['EMOJI'] = report;
    report = 'customSounds';
    oscar['CUSTOM_SOUNDS'] = report;
    report = 'sticker';
    oscar['STICKER'] = report;
    report = 'earlyAccess';
    oscar['EARLY_ACCESS'] = report;
    report = 'memberPricing';
    oscar['MEMBER_PRICING'] = report;
    report = 'largeUploads';
    oscar['LARGE_UPLOADS'] = report;
    report = 'hdVideo';
    oscar['HD_VIDEO'] = report;
    report = 'superReactions';
    oscar['SUPER_REACTIONS'] = report;
    report = 'entranceSounds';
    oscar['ENTRACE_SOUNDS'] = report;
    report = 'badge';
    oscar['BADGE'] = report;
    report = 'greyBadge';
    oscar['GREYED_BADGE'] = report;
    report = {};
    report['NARROW'] = yankee;
    golf = 'NARROW';
    report[yankee] = golf;
    report['WIDE'] = offset;
    golf = 'WIDE';
    report[offset] = golf;
    var _closure1_slot11 = report;
    offset = tango.Object;
    golf = offset.freeze;
    tango = {};
    romeo = report.NARROW;
    yankee = {'width': 300, 'height': 364};
    tango[romeo] = yankee;
    romeo = report.WIDE;
    yankee = {'width': 320, 'height': 364};
    tango[romeo] = yankee;
    tango = golf.bind(offset)(tango);
    var _closure1_slot12 = tango;
    golf = 27;
    golf = verify[golf];
    yankee = options.bind(entity)(golf);
    offset = yankee.createStyles;
    golf = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            golf = argFoo;
            entity = {};
            mike = {};
            options = _closure1_slot1;
            tango = _closure1_slot2;
            oscar = 28;
            verify = tango[oscar];
            report = undefined;
            verify = options.bind(report)(verify);
            verify = verify.colors;
            verify = verify.BG_SURFACE_RAISED;
            mike['backgroundColor'] = verify;
            tango = tango[oscar];
            tango = options.bind(report)(tango);
            tango = tango.radii;
            tango = tango.sm;
            mike['borderRadius'] = tango;
            tango = _closure1_slot12;
            tango = tango[golf];
            tango = tango.width;
            mike['width'] = tango;
            tango = _closure1_slot11;
            tango = tango.NARROW;
            tango = golf === tango;
            if(!tango) { _fun00002_ip = 127; continue _fun00001 }
 105:
            options = {};
            verify = _closure1_slot12;
            verify = verify[golf];
            verify = verify.height;
            options['height'] = verify;
            tango = options;
 127:
            romeo = mike;
            yankee = tango;
            tango = copyDataProperties(romeo, yankee);
            verify = _closure1_slot1;
            tango = _closure1_slot2;
            options = tango[oscar];
            options = verify.bind(report)(options);
            options = options.shadows;
            yankee = options.SHADOW_LOW;
            romeo = mike;
            options = copyDataProperties(romeo, yankee);
            entity['container'] = mike;
            mike = {};
            options = '100%';
            mike['width'] = options;
            offset = tango[oscar];
            offset = verify.bind(report)(offset);
            offset = offset.radii;
            offset = offset.sm;
            mike['borderTopLeftRadius'] = offset;
            offset = tango[oscar];
            offset = verify.bind(report)(offset);
            offset = offset.radii;
            offset = offset.sm;
            mike['borderTopRightRadius'] = offset;
            offset = 'hidden';
            mike['overflow'] = offset;
            entity['headerComponent'] = mike;
            mike = {};
            mike['width'] = options;
            offset = tango[oscar];
            offset = verify.bind(report)(offset);
            offset = offset.radii;
            offset = offset.sm;
            mike['borderTopLeftRadius'] = offset;
            tango = tango[oscar];
            tango = verify.bind(report)(tango);
            tango = tango.radii;
            tango = tango.sm;
            mike['borderTopRightRadius'] = tango;
            entity['image'] = mike;
            mike = {'marginTop': 16, 'marginHorizontal': 16};
            entity['title'] = mike;
            mike = {'marginTop': 8, 'marginHorizontal': 16};
            tango = 8;
            verify = _closure1_slot11;
            verify = verify.WIDE;
            if(!(golf === verify)) { _fun00002_ip = 358; continue _fun00001 }
 355:
            tango = 24;
 358:
            mike['marginBottom'] = tango;
            tango = _closure1_slot11;
            tango = tango.NARROW;
            tango = golf === tango;
            if(!tango) { _fun00002_ip = 388; continue _fun00001 }
 379:
            golf = {};
            golf['height'] = options;
            tango = golf;
 388:
            romeo = mike;
            yankee = tango;
            tango = copyDataProperties(romeo, yankee);
            entity['description'] = mike;
            mike = {'marginTop': 'auto', 'marginHorizontal': 16, 'marginBottom': 16};
            entity['button'] = mike;
            mike = {'position': 'relative', 'alignItems': 'center', 'justifyContent': 'center'};
            entity['imageContainer'] = mike;
            mike = {};
            tango = _closure1_slot1;
            zulu = _closure1_slot2;
            golf = zulu[oscar];
            golf = tango.bind(report)(golf);
            golf = golf.colors;
            golf = golf.WHITE;
            mike['color'] = golf;
            golf = 14;
            mike['fontSize'] = golf;
            entity['imageOverlayText'] = mike;
            mike = {'position': 'absolute', 'bottom': '10%', 'borderRadius': null, 'backgroundColor': null, 'paddingHorizontal': 12, 'paddingVertical': 4, 'justifyContent': 'center', 'alignItems': 'center'};
            golf = zulu[oscar];
            golf = tango.bind(report)(golf);
            golf = golf.radii;
            golf = golf.round;
            mike['borderRadius'] = golf;
            golf = zulu[oscar];
            golf = tango.bind(report)(golf);
            golf = golf.colors;
            golf = golf.ACTIVITY_CARD_ICON_OVERLAY;
            mike['backgroundColor'] = golf;
            entity['imageOverlayTextContainer'] = mike;
            mike = {'position': 'absolute', 'width': 'auto', 'top': 4294967288, 'left': 10, 'paddingHorizontal': 8, 'borderRadius': null, 'justifyContent': 'center'};
            zulu = zulu[oscar];
            zulu = tango.bind(report)(zulu);
            zulu = zulu.radii;
            zulu = zulu.lg;
            mike['borderRadius'] = zulu;
            entity['pillTextContainer'] = mike;
            mike = {};
            zulu = 'uppercase';
            mike['textTransform'] = zulu;
            entity['pillText'] = mike;
            return entity;
        }
    };
    golf = offset.bind(yankee)(golf);
    var _closure1_slot13 = golf;
    golf = 34;
    golf = verify[golf];
    verify = options.bind(entity)(golf);
    options = verify.fileFinishedImporting;
    golf = 'modules/premium/native/PremiumPerkCard.tsx';
    golf = options.bind(verify)(golf);
    golf = function(argFoo) { // Original name: PremiumPerkCard
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            mike = argFoo;
            options = mike.style;
            kilo = mike.title;
            output = mike.titleStyle;
            report = mike.description;
            entity = mike.bodyComponent;
            backup = mike.headerComponent;
            control = mike.imageSrc;
            romeo = mike.buttonOnPress;
            foxtrot = mike.cta;
            tango = undefined;
            if(!(foxtrot === tango)) { _fun00004_ip = 118; continue _fun00003 }
 60:
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            zulu = 9;
            oscar = offset[zulu];
            oscar = verify.bind(tango)(oscar);
            golf = oscar.intl;
            oscar = golf.string;
            zulu = offset[zulu];
            zulu = verify.bind(tango)(zulu);
            zulu = zulu.t;
            zulu = zulu.jVcuVV;
            foxtrot = oscar.bind(golf)(zulu);
 118:
            zulu = mike.variant;
            if(!(zulu === tango)) { _fun00004_ip = 140; continue _fun00003 }
 127:
            oscar = _closure1_slot11;
            zulu = oscar.WIDE;
 140:
            config = mike.imageOverlayText;
            update = mike.pillText;
            mike = _closure1_slot13;
            yankee = mike.bind(tango)(zulu);
            zulu = _closure1_slot1;
            oscar = _closure1_slot2;
            mike = 29;
            mike = oscar[mike];
            mike = zulu.bind(tango)(mike);
            result = mike.bind(tango)();
            oscar = null;
            if(!(oscar == control)) { _fun00004_ip = 241; continue _fun00003 }
 194:
            mike = oscar != backup;
            golf = null;
            if(!mike) { _fun00004_ip = 472; continue _fun00003 }
 206:
            verify = _closure1_slot9;
            zulu = _closure1_slot4;
            mike = {};
            sizing = yankee.headerComponent;
            mike['style'] = sizing;
            mike['children'] = backup;
            golf = verify.bind(tango)(zulu, mike);
            _fun00004_ip = 472; continue _fun00003;
 241:
            if(!(oscar == config)) { _fun00004_ip = 296; continue _fun00003 }
 245:
            verify = _closure1_slot9;
            zulu = _closure1_slot1;
            backup = _closure1_slot2;
            mike = 30;
            mike = backup[mike];
            zulu = zulu.bind(tango)(mike);
            mike = {};
            backup = yankee.image;
            mike['style'] = backup;
            mike['source'] = control;
            mike = verify.bind(tango)(zulu, mike);
            _fun00004_ip = 469; continue _fun00003;
 296:
            backup = _closure1_slot10;
            verify = _closure1_slot4;
            zulu = {};
            sizing = yankee.imageContainer;
            zulu['style'] = sizing;
            source = _closure1_slot9;
            echo = _closure1_slot1;
            sequence = _closure1_slot2;
            sizing = 30;
            sizing = sequence[sizing];
            echo = echo.bind(tango)(sizing);
            sizing = {};
            vacuum = yankee.image;
            sizing['style'] = vacuum;
            sizing['source'] = control;
            echo = source.bind(tango)(echo, sizing);
            sizing = new Array(2);
            sizing[0] = echo;
            echo = {};
            control = yankee.imageOverlayTextContainer;
            echo['style'] = control;
            vacuum = _closure1_slot0;
            control = 31;
            control = sequence[control];
            control = vacuum.bind(tango)(control);
            vacuum = control.Text;
            control = {};
            sequence = yankee.imageOverlayText;
            control['style'] = sequence;
            sequence = 'text-md/bold';
            control['variant'] = sequence;
            sequence = config.toUpperCase;
            sequence = sequence.bind(config)();
            control['children'] = sequence;
            control = source.bind(tango)(vacuum, control);
            echo['children'] = control;
            echo = source.bind(tango)(verify, echo);
            sizing[1] = echo;
            zulu['children'] = sizing;
            mike = backup.bind(tango)(verify, zulu);
 469:
            golf = mike;
 472:
            if(!(oscar == report)) { _fun00004_ip = 490; continue _fun00003 }
 476:
            mike = oscar != entity;
            backup = null;
            if(!mike) { _fun00004_ip = 541; continue _fun00003 }
 485:
            backup = entity;
            _fun00004_ip = 541; continue _fun00003;
 490:
            zulu = _closure1_slot9;
            mike = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 31;
            entity = verify[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.Text;
            entity = {};
            verify = 'text-sm/normal';
            entity['variant'] = verify;
            entity['children'] = report;
            backup = zulu.bind(tango)(mike, entity);
 541:
            zulu = _closure1_slot10;
            mike = _closure1_slot4;
            entity = {};
            verify = yankee.container;
            report = new Array(2);
            report[0] = verify;
            report[1] = options;
            entity['style'] = report;
            options = oscar != update;
            if(!options) { _fun00004_ip = 719; continue _fun00003 }
 582:
            sizing = _closure1_slot9;
            verify = _closure1_slot1;
            source = _closure1_slot2;
            report = 32;
            report = source[report];
            verify = verify.bind(tango)(report);
            report = {};
            control = yankee.pillTextContainer;
            echo = new Array(1);
            echo[0] = control;
            report['style'] = echo;
            echo = _closure1_slot7;
            control = echo.START;
            report['start'] = control;
            echo = echo.END;
            report['end'] = echo;
            report['colors'] = result;
            echo = _closure1_slot0;
            result = 31;
            result = source[result];
            result = echo.bind(tango)(result);
            echo = result.Text;
            result = {'variant': 'text-xs/semibold', 'color': 'always-white'};
            source = yankee.pillText;
            result['style'] = source;
            result['children'] = update;
            result = sizing.bind(tango)(echo, result);
            report['children'] = result;
            options = sizing.bind(tango)(verify, report);
 719:
            report = new Array(5);
            report[0] = options;
            report[1] = golf;
            verify = _closure1_slot9;
            options = _closure1_slot0;
            sizing = _closure1_slot2;
            golf = 31;
            golf = sizing[golf];
            golf = options.bind(tango)(golf);
            options = golf.Text;
            golf = {};
            result = yankee.title;
            sizing = new Array(2);
            sizing[0] = result;
            sizing[1] = output;
            golf['style'] = sizing;
            sizing = 'heading-lg/extrabold';
            golf['variant'] = sizing;
            golf['children'] = kilo;
            golf = verify.bind(tango)(options, golf);
            report[2] = golf;
            options = _closure1_slot5;
            golf = {};
            kilo = yankee.description;
            golf['style'] = kilo;
            golf['children'] = backup;
            golf = verify.bind(tango)(options, golf);
            report[3] = golf;
            oscar = oscar != romeo;
            if(!oscar) { _fun00004_ip = 927; continue _fun00003 }
 843:
            verify = _closure1_slot9;
            options = _closure1_slot4;
            golf = {};
            yankee = yankee.button;
            golf['style'] = yankee;
            yankee = _closure1_slot0;
            backup = _closure1_slot2;
            offset = 33;
            offset = backup[offset];
            offset = yankee.bind(tango)(offset);
            yankee = offset.Button;
            offset = {'size': 'sm', 'variant': 'secondary'};
            offset['text'] = foxtrot;
            offset['onPress'] = romeo;
            offset = verify.bind(tango)(yankee, offset);
            golf['children'] = offset;
            oscar = verify.bind(tango)(options, golf);
 927:
            report[4] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = golf;
    zulu['PerkCardTypes'] = oscar;
    zulu['PerkCardVariant'] = report;
    zulu['PERK_CARD_SIZES'] = tango;
    mike = function() { // Original name: usePremiumPerkCard
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            mike = 5;
            mike = offset[mike];
            oscar = undefined;
            zulu = verify.bind(oscar)(mike);
            mike = zulu.useSubscriptionPlansLoaded;
            mike = mike.bind(zulu)();
            var _closure2_slot0 = mike;
            zulu = 6;
            zulu = offset[zulu];
            options = verify.bind(oscar)(zulu);
            golf = options.formatSize;
            tango = _closure1_slot6;
            zulu = 1024;
            tango = tango / zulu;
            zulu = {};
            yankee = true;
            zulu['useKibibytes'] = yankee;
            foxtrot = golf.bind(options)(tango, zulu);
            golf = _closure1_slot3;
            options = golf.useCallback;
            tango = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 7;
                    mike = mike[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.getRootNavigationRef;
                    report = mike.bind(zulu)();
                    mike = null;
                    mike = mike != report;
                    if(!mike) { _fun00008_ip = 54; continue _fun00007 }
 44:
                    zulu = report.isReady;
                    mike = zulu.bind(report)();
 54:
                    if(!mike) { _fun00008_ip = 128; continue _fun00007 }
 57:
                    tango = report.navigate;
                    zulu = {};
                    mike = _closure1_slot8;
                    mike = mike.COLLECTIBLES_SHOP;
                    zulu['screen'] = mike;
                    mike = {};
                    golf = _closure1_slot1;
                    options = _closure1_slot2;
                    oscar = 8;
                    oscar = options[oscar];
                    oscar = golf.bind(entity)(oscar);
                    oscar = oscar.PREMIUM_MARKETING_PERK_CARD;
                    mike['analyticsSource'] = oscar;
                    zulu['params'] = mike;
                    mike = 'settings';
                    mike = tango.bind(report)(mike, zulu);
 128:
                    return entity;
                }
            };
            zulu = new Array(0);
            options = options.bind(golf)(tango, zulu);
            yankee = golf.useCallback;
            tango = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    entity = 7;
                    zulu = zulu[entity];
                    entity = undefined;
                    tango = tango.bind(entity)(zulu);
                    zulu = tango.getRootNavigationRef;
                    report = zulu.bind(tango)();
                    zulu = null;
                    if(!(zulu != report)) { _fun00010_ip = 89; continue _fun00009 }
 41:
                    zulu = report.isReady;
                    zulu = zulu.bind(report)();
                    if(!zulu) { _fun00010_ip = 89; continue _fun00009 }
 54:
                    tango = report.navigate;
                    zulu = {};
                    mike = _closure1_slot8;
                    mike = mike.PROFILE_CUSTOMIZATION;
                    zulu['screen'] = mike;
                    mike = 'settings';
                    mike = tango.bind(report)(mike, zulu);
                    return entity;
 89:
                    entity = false;
                    return entity;
                }
            };
            zulu = new Array(0);
            backup = yankee.bind(golf)(tango, zulu);
            yankee = golf.useCallback;
            tango = function() {
                _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    entity = 7;
                    zulu = zulu[entity];
                    entity = undefined;
                    tango = tango.bind(entity)(zulu);
                    zulu = tango.getRootNavigationRef;
                    report = zulu.bind(tango)();
                    zulu = null;
                    if(!(zulu != report)) { _fun00012_ip = 89; continue _fun00011 }
 41:
                    zulu = report.isReady;
                    zulu = zulu.bind(report)();
                    if(!zulu) { _fun00012_ip = 89; continue _fun00011 }
 54:
                    tango = report.navigate;
                    zulu = {};
                    mike = _closure1_slot8;
                    mike = mike.APPEARANCE_THEME_PICKER;
                    zulu['screen'] = mike;
                    mike = 'settings';
                    mike = tango.bind(report)(mike, zulu);
                    return entity;
 89:
                    entity = false;
                    return entity;
                }
            };
            zulu = new Array(0);
            romeo = yankee.bind(golf)(tango, zulu);
            tango = golf.useCallback;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    entity = 7;
                    zulu = zulu[entity];
                    entity = undefined;
                    tango = tango.bind(entity)(zulu);
                    zulu = tango.getRootNavigationRef;
                    report = zulu.bind(tango)();
                    zulu = null;
                    if(!(zulu != report)) { _fun00014_ip = 111; continue _fun00013 }
 41:
                    zulu = report.isReady;
                    zulu = zulu.bind(report)();
                    if(!zulu) { _fun00014_ip = 111; continue _fun00013 }
 54:
                    tango = report.navigate;
                    zulu = {};
                    mike = _closure1_slot8;
                    mike = mike.GUILD_BOOSTING;
                    zulu['screen'] = mike;
                    mike = {};
                    oscar = _closure2_slot0;
                    oscar = !oscar;
                    mike['shouldFetchSubscriptionPlans'] = oscar;
                    zulu['params'] = mike;
                    mike = 'settings';
                    mike = tango.bind(report)(mike, zulu);
                    return entity;
 111:
                    entity = false;
                    return entity;
                }
            };
            zulu = tango.bind(golf)(mike, zulu);
            tango = golf.useCallback;
            mike = function() {
                _fun00015: for(var _fun00016_ip = 0; ; ) switch(_fun00016_ip) {
 0:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    entity = 7;
                    zulu = zulu[entity];
                    entity = undefined;
                    tango = tango.bind(entity)(zulu);
                    zulu = tango.getRootNavigationRef;
                    report = zulu.bind(tango)();
                    zulu = null;
                    if(!(zulu != report)) { _fun00016_ip = 89; continue _fun00015 }
 41:
                    zulu = report.isReady;
                    zulu = zulu.bind(report)();
                    if(!zulu) { _fun00016_ip = 89; continue _fun00015 }
 54:
                    tango = report.navigate;
                    zulu = {};
                    mike = _closure1_slot8;
                    mike = mike.APP_ICONS;
                    zulu['screen'] = mike;
                    mike = 'settings';
                    mike = tango.bind(report)(mike, zulu);
                    return entity;
 89:
                    entity = false;
                    return entity;
                }
            };
            entity = new Array(0);
            golf = tango.bind(golf)(mike, entity);
            entity = {};
            mike = {};
            tango = 9;
            yankee = offset[tango];
            yankee = verify.bind(oscar)(yankee);
            sizing = yankee.intl;
            kilo = sizing.string;
            yankee = offset[tango];
            yankee = verify.bind(oscar)(yankee);
            yankee = yankee.t;
            yankee = yankee.KcyDwM;
            yankee = kilo.bind(sizing)(yankee);
            mike['title'] = yankee;
            yankee = offset[tango];
            yankee = verify.bind(oscar)(yankee);
            sizing = yankee.intl;
            kilo = sizing.string;
            yankee = offset[tango];
            yankee = verify.bind(oscar)(yankee);
            yankee = yankee.t;
            yankee = yankee.Mt3U1d;
            yankee = kilo.bind(sizing)(yankee);
            mike['description'] = yankee;
            yankee = _closure1_slot1;
            kilo = 10;
            kilo = offset[kilo];
            kilo = yankee.bind(oscar)(kilo);
            mike['imageSrc'] = kilo;
            mike['buttonOnPress'] = backup;
            entity['customProfile'] = mike;
            mike = {};
            backup = offset[tango];
            backup = verify.bind(oscar)(backup);
            sizing = backup.intl;
            kilo = sizing.string;
            backup = offset[tango];
            backup = verify.bind(oscar)(backup);
            backup = backup.t;
            backup = backup.kWM48P;
            backup = kilo.bind(sizing)(backup);
            mike['title'] = backup;
            backup = offset[tango];
            backup = verify.bind(oscar)(backup);
            sizing = backup.intl;
            kilo = sizing.string;
            backup = offset[tango];
            backup = verify.bind(oscar)(backup);
            backup = backup.t;
            backup = backup.CjRASE;
            backup = kilo.bind(sizing)(backup);
            mike['description'] = backup;
            backup = 11;
            backup = offset[backup];
            backup = yankee.bind(oscar)(backup);
            mike['imageSrc'] = backup;
            mike['buttonOnPress'] = romeo;
            entity['clientThemes'] = mike;
            mike = {};
            romeo = offset[tango];
            romeo = verify.bind(oscar)(romeo);
            kilo = romeo.intl;
            backup = kilo.string;
            romeo = offset[tango];
            romeo = verify.bind(oscar)(romeo);
            romeo = romeo.t;
            romeo = romeo.NyDu//;
            romeo = backup.bind(kilo)(romeo);
            mike['title'] = romeo;
            romeo = offset[tango];
            romeo = verify.bind(oscar)(romeo);
            kilo = romeo.intl;
            backup = kilo.string;
            romeo = offset[tango];
            romeo = verify.bind(oscar)(romeo);
            romeo = romeo.t;
            romeo = romeo.4pEwXF;
            romeo = backup.bind(kilo)(romeo);
            mike['description'] = romeo;
            romeo = 12;
            romeo = offset[romeo];
            romeo = yankee.bind(oscar)(romeo);
            mike['imageSrc'] = romeo;
            mike['buttonOnPress'] = zulu;
            entity['serverBoosts'] = mike;
            mike = {};
            zulu = offset[tango];
            zulu = verify.bind(oscar)(zulu);
            backup = zulu.intl;
            romeo = backup.string;
            zulu = offset[tango];
            zulu = verify.bind(oscar)(zulu);
            zulu = zulu.t;
            zulu = zulu.NyDu//;
            zulu = romeo.bind(backup)(zulu);
            mike['title'] = zulu;
            zulu = offset[tango];
            zulu = verify.bind(oscar)(zulu);
            backup = zulu.intl;
            romeo = backup.string;
            zulu = offset[tango];
            zulu = verify.bind(oscar)(zulu);
            zulu = zulu.t;
            zulu = zulu.4pEwXF;
            zulu = romeo.bind(backup)(zulu);
            mike['description'] = zulu;
            zulu = 13;
            zulu = offset[zulu];
            zulu = yankee.bind(oscar)(zulu);
            mike['imageSrc'] = zulu;
            zulu = 'Requires Subscription';
            mike['imageOverlayText'] = zulu;
            entity['greyServerBoosts'] = mike;
            mike = {};
            romeo = offset[tango];
            romeo = verify.bind(oscar)(romeo);
            kilo = romeo.intl;
            backup = kilo.string;
            romeo = offset[tango];
            romeo = verify.bind(oscar)(romeo);
            romeo = romeo.t;
            romeo = romeo.OuItFh;
            romeo = backup.bind(kilo)(romeo);
            mike['title'] = romeo;
            romeo = offset[tango];
            romeo = verify.bind(oscar)(romeo);
            kilo = romeo.intl;
            backup = kilo.string;
            romeo = offset[tango];
            romeo = verify.bind(oscar)(romeo);
            romeo = romeo.t;
            romeo = romeo.mPyrEx;
            romeo = backup.bind(kilo)(romeo);
            mike['description'] = romeo;
            romeo = 14;
            romeo = offset[romeo];
            romeo = yankee.bind(oscar)(romeo);
            mike['imageSrc'] = romeo;
            mike['buttonOnPress'] = golf;
            entity['customAppIcons'] = mike;
            mike = {};
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            backup = golf.intl;
            romeo = backup.string;
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            golf = golf.t;
            golf = golf.R2IV/f;
            golf = romeo.bind(backup)(golf);
            mike['title'] = golf;
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            backup = golf.intl;
            romeo = backup.string;
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            golf = golf.t;
            golf = golf.R5Xag4;
            golf = romeo.bind(backup)(golf);
            mike['description'] = golf;
            golf = 15;
            golf = offset[golf];
            golf = yankee.bind(oscar)(golf);
            mike['imageSrc'] = golf;
            entity['emoji'] = mike;
            mike = {};
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            backup = golf.intl;
            romeo = backup.string;
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            golf = golf.t;
            golf = golf.LWsAra;
            golf = romeo.bind(backup)(golf);
            mike['title'] = golf;
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            backup = golf.intl;
            romeo = backup.string;
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            golf = golf.t;
            golf = golf.4lSyCQ;
            golf = romeo.bind(backup)(golf);
            mike['description'] = golf;
            golf = 16;
            golf = offset[golf];
            golf = yankee.bind(oscar)(golf);
            mike['imageSrc'] = golf;
            entity['customSounds'] = mike;
            mike = {};
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            backup = golf.intl;
            romeo = backup.string;
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            golf = golf.t;
            golf = golf.tzdIwM;
            golf = romeo.bind(backup)(golf);
            mike['title'] = golf;
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            backup = golf.intl;
            romeo = backup.string;
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            golf = golf.t;
            golf = golf.FXlU29;
            golf = romeo.bind(backup)(golf);
            mike['description'] = golf;
            golf = 17;
            golf = offset[golf];
            golf = yankee.bind(oscar)(golf);
            mike['imageSrc'] = golf;
            entity['sticker'] = mike;
            mike = {};
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            backup = golf.intl;
            romeo = backup.string;
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            golf = golf.t;
            golf = golf.EYxi0t;
            golf = romeo.bind(backup)(golf);
            mike['title'] = golf;
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            backup = golf.intl;
            romeo = backup.string;
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            golf = golf.t;
            golf = golf.M9AIt7;
            golf = romeo.bind(backup)(golf);
            mike['description'] = golf;
            golf = 18;
            golf = offset[golf];
            golf = yankee.bind(oscar)(golf);
            mike['imageSrc'] = golf;
            entity['earlyAccess'] = mike;
            mike = {};
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            backup = golf.intl;
            romeo = backup.string;
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            golf = golf.t;
            golf = golf.H4/NBA;
            golf = romeo.bind(backup)(golf);
            mike['title'] = golf;
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            backup = golf.intl;
            romeo = backup.string;
            golf = offset[tango];
            golf = verify.bind(oscar)(golf);
            golf = golf.t;
            golf = golf.wo3D3d;
            golf = romeo.bind(backup)(golf);
            mike['description'] = golf;
            golf = 19;
            golf = offset[golf];
            golf = yankee.bind(oscar)(golf);
            mike['imageSrc'] = golf;
            golf = 20;
            golf = offset[golf];
            verify = verify.bind(oscar)(golf);
            golf = verify.isIOS;
            verify = golf.bind(verify)();
            golf = undefined;
            if(!verify) { _fun00006_ip = 1471; continue _fun00005 }
 1468:
            golf = options;
 1471:
            mike['buttonOnPress'] = golf;
            entity['memberPricing'] = mike;
            mike = {};
            offset = _closure1_slot0;
            golf = _closure1_slot2;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            romeo = options.intl;
            yankee = romeo.formatToPlainString;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            options = options.t;
            verify = options.jqhAdH;
            options = {};
            options['premiumMaxSize'] = foxtrot;
            options = yankee.bind(romeo)(verify, options);
            mike['title'] = options;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            romeo = options.intl;
            yankee = romeo.formatToPlainString;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            options = options.t;
            verify = options.HI+cfn;
            options = {};
            options['premiumMaxSize'] = foxtrot;
            options = yankee.bind(romeo)(verify, options);
            mike['description'] = options;
            report = _closure1_slot1;
            options = 21;
            options = golf[options];
            options = report.bind(oscar)(options);
            mike['imageSrc'] = options;
            entity['largeUploads'] = mike;
            mike = {};
            options = golf[tango];
            options = offset.bind(oscar)(options);
            yankee = options.intl;
            verify = yankee.string;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            options = options.t;
            options = options.RSXQYG;
            options = verify.bind(yankee)(options);
            mike['title'] = options;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            yankee = options.intl;
            verify = yankee.string;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            options = options.t;
            options = options.ymCPxs;
            options = verify.bind(yankee)(options);
            mike['description'] = options;
            options = 22;
            options = golf[options];
            options = report.bind(oscar)(options);
            mike['imageSrc'] = options;
            entity['hdVideo'] = mike;
            mike = {};
            options = golf[tango];
            options = offset.bind(oscar)(options);
            yankee = options.intl;
            verify = yankee.string;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            options = options.t;
            options = options.6S7kOz;
            options = verify.bind(yankee)(options);
            mike['title'] = options;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            yankee = options.intl;
            verify = yankee.string;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            options = options.t;
            options = options.A0U9fn;
            options = verify.bind(yankee)(options);
            mike['description'] = options;
            options = 23;
            options = golf[options];
            options = report.bind(oscar)(options);
            mike['imageSrc'] = options;
            entity['superReactions'] = mike;
            mike = {};
            options = golf[tango];
            options = offset.bind(oscar)(options);
            yankee = options.intl;
            verify = yankee.string;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            options = options.t;
            options = options.f4M+Hx;
            options = verify.bind(yankee)(options);
            mike['title'] = options;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            yankee = options.intl;
            verify = yankee.string;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            options = options.t;
            options = options.7ZCYvL;
            options = verify.bind(yankee)(options);
            mike['description'] = options;
            options = 24;
            options = golf[options];
            options = report.bind(oscar)(options);
            mike['imageSrc'] = options;
            entity['entranceSounds'] = mike;
            mike = {};
            options = golf[tango];
            options = offset.bind(oscar)(options);
            yankee = options.intl;
            verify = yankee.string;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            options = options.t;
            options = options.dcFfSE;
            options = verify.bind(yankee)(options);
            mike['title'] = options;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            yankee = options.intl;
            verify = yankee.string;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            options = options.t;
            options = options.37MFFh;
            options = verify.bind(yankee)(options);
            mike['description'] = options;
            options = 25;
            options = golf[options];
            options = report.bind(oscar)(options);
            mike['imageSrc'] = options;
            entity['badge'] = mike;
            mike = {};
            options = golf[tango];
            options = offset.bind(oscar)(options);
            yankee = options.intl;
            verify = yankee.string;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            options = options.t;
            options = options.dcFfSE;
            options = verify.bind(yankee)(options);
            mike['title'] = options;
            options = golf[tango];
            options = offset.bind(oscar)(options);
            verify = options.intl;
            options = verify.string;
            tango = golf[tango];
            tango = offset.bind(oscar)(tango);
            tango = tango.t;
            tango = tango.37MFFh;
            tango = options.bind(verify)(tango);
            mike['description'] = tango;
            tango = 26;
            tango = golf[tango];
            tango = report.bind(oscar)(tango);
            mike['imageSrc'] = tango;
            mike['imageOverlayText'] = zulu;
            entity['greyBadge'] = mike;
            return entity;
        }
    };
    zulu['usePremiumPerkCard'] = mike;
    return entity;
})();