// app/modules/premium/native/marketing_moments/collectible_decos/NitroHomeCollectibleDecoPerkCard.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'justifyContent': 'center', 'height': 200};
    tangon['imageContainer'] = verify;
    verify = {'width': '100%', 'height': 230};
    tangon['image'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/native/marketing_moments/collectible_decos/NitroHomeCollectibleDecoPerkCard.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() {
        entity = _closure1_slot6;
        tangon = undefined;
        verify = entity.bind(tangon)();
        golfie = _closure1_slot3;
        zuuluu = golfie.useMemo;
        michal = function() {
            tangon = _closure1_slot1;
            report = _closure1_slot2;
            michal = 4;
            michal = report[michal];
            zuuluu = undefined;
            michal = tangon.bind(zuuluu)(michal);
            tangon = _closure1_slot0;
            entity = 5;
            entity = report[entity];
            entity = tangon.bind(zuuluu)(entity);
            entity = entity.Q1_2025_MARKETING_CLAIM_DECO_END_DATE;
            zuuluu = michal.bind(zuuluu)(entity);
            michal = zuuluu.format;
            entity = 'll';
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        entity = new Array(0);
        offset = zuuluu.bind(golfie)(michal, entity);
        foxtra = _closure1_slot0;
        romeon = _closure1_slot2;
        golfie = 6;
        entity = romeon[golfie];
        entity = foxtra.bind(tangon)(entity);
        option = entity.intl;
        zuuluu = option.format;
        entity = romeon[golfie];
        entity = foxtra.bind(tangon)(entity);
        entity = entity.t;
        michal = entity.Ld4+Tk;
        entity = {};
        entity['date'] = offset;
        offset = 5;
        offset = romeon[offset];
        offset = foxtra.bind(tangon)(offset);
        offset = offset.Q1_2025_MARKETING_SUPPORT_URL;
        entity['termsLink'] = offset;
        option = zuuluu.bind(option)(michal, entity);
        zuuluu = _closure1_slot5;
        yankee = _closure1_slot1;
        entity = 7;
        entity = romeon[entity];
        michal = yankee.bind(tangon)(entity);
        entity = {};
        offset = romeon[golfie];
        offset = foxtra.bind(tangon)(offset);
        kiloes = offset.intl;
        backup = kiloes.string;
        offset = romeon[golfie];
        offset = foxtra.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.ith1Jy;
        offset = backup.bind(kiloes)(offset);
        entity['title'] = offset;
        entity['description'] = option;
        option = romeon[golfie];
        option = foxtra.bind(tangon)(option);
        offset = option.intl;
        option = offset.string;
        golfie = romeon[golfie];
        golfie = foxtra.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.Ic9qLC;
        golfie = option.bind(offset)(golfie);
        entity['cta'] = golfie;
        oscard = function() { // Original name: buttonOnPress
            report = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 8;
            tangon = michal[entity];
            entity = undefined;
            report = report.bind(entity)(tangon);
            tangon = report.openLazy;
            oscard = _closure1_slot0;
            zuuluu = 10;
            zuuluu = michal[zuuluu];
            oscard = oscard.bind(entity)(zuuluu);
            zuuluu = 9;
            zuuluu = michal[zuuluu];
            michal = michal.paths;
            zuuluu = oscard.bind(entity)(zuuluu, michal);
            michal = 'CollectibleMarketingMomentConfirmationSheet';
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        entity['buttonOnPress'] = oscard;
        oscard = _closure1_slot4;
        report = {};
        golfie = verify.imageContainer;
        report['style'] = golfie;
        golfie = 11;
        golfie = romeon[golfie];
        option = yankee.bind(tangon)(golfie);
        golfie = {};
        offset = 'contain';
        golfie['resizeMode'] = offset;
        verify = verify.image;
        golfie['style'] = verify;
        verify = {};
        offset = 12;
        offset = romeon[offset];
        offset = yankee.bind(tangon)(offset);
        verify['uri'] = offset;
        golfie['source'] = verify;
        golfie = zuuluu.bind(tangon)(option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['headerComponent'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['NitroHomeCollectibleDecoPerkCard'] = michal;
    return entity;
})();