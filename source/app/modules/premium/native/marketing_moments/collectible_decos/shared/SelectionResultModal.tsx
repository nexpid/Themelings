// app/modules/premium/native/marketing_moments/collectible_decos/shared/SelectionResultModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot3 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    offset = 'center';
    verify = {'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center', 'height': '100%'};
    tangon['container'] = verify;
    verify = {};
    yankee = 4;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_96;
    verify['marginTop'] = foxtra;
    tangon['imageContainer'] = verify;
    verify = {'width': '85%', 'alignItems': 'center'};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_64;
    verify['marginTop'] = foxtra;
    tangon['textContainer'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_32;
    verify['marginBottom'] = foxtra;
    tangon['title'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tangon['subtitle'] = verify;
    verify = {'bottom': null, 'position': 'absolute', 'width': '80%'};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_56;
    verify['bottom'] = foxtra;
    tangon['buttonContainer'] = verify;
    verify = {'height': 200, 'width': 240};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_16;
    verify['marginTop'] = yankee;
    tangon['emptyImage'] = verify;
    verify = {};
    verify['alignItems'] = offset;
    tangon['centeredContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/native/marketing_moments/collectible_decos/shared/SelectionResultModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SelectionResultModal
        entity = argFoo;
        result = entity.title;
        output = entity.content;
        oscard = entity.image;
        romeon = entity.buttonText;
        yankee = entity.buttonCallbackFn;
        entity = _closure1_slot5;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot4;
        offset = _closure1_slot0;
        foxtra = _closure1_slot1;
        entity = 5;
        entity = foxtra[entity];
        entity = offset.bind(tangon)(entity);
        michal = entity.Stack;
        entity = {};
        golfie = verify.container;
        entity['style'] = golfie;
        option = _closure1_slot3;
        golfie = _closure1_slot2;
        report = {};
        backup = verify.imageContainer;
        report['style'] = backup;
        report['children'] = oscard;
        oscard = option.bind(tangon)(golfie, report);
        report = new Array(3);
        report[0] = oscard;
        oscard = {};
        backup = verify.textContainer;
        oscard['style'] = backup;
        kiloes = 6;
        backup = foxtra[kiloes];
        backup = offset.bind(tangon)(backup);
        sizing = backup.Text;
        backup = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
        echoed = verify.title;
        backup['style'] = echoed;
        backup['children'] = result;
        sizing = option.bind(tangon)(sizing, backup);
        backup = new Array(2);
        backup[0] = sizing;
        kiloes = foxtra[kiloes];
        kiloes = offset.bind(tangon)(kiloes);
        sizing = kiloes.Text;
        kiloes = {'variant': 'text-lg/normal', 'color': 'header-primary'};
        result = verify.subtitle;
        kiloes['style'] = result;
        kiloes['children'] = output;
        kiloes = option.bind(tangon)(sizing, kiloes);
        backup[1] = kiloes;
        oscard['children'] = backup;
        oscard = zuuluu.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        oscard = {};
        verify = verify.buttonContainer;
        oscard['style'] = verify;
        verify = 7;
        verify = foxtra[verify];
        verify = offset.bind(tangon)(verify);
        offset = verify.Button;
        verify = {};
        verify['text'] = romeon;
        romeon = 'primary';
        verify['variant'] = romeon;
        verify['onPress'] = yankee;
        verify = option.bind(tangon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['SelectionResultModal'] = michal;
    return entity;
})();