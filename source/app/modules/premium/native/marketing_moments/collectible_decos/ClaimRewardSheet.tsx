// app/modules/premium/native/marketing_moments/collectible_decos/ClaimRewardSheet.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.PremiumTypes;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.UserSettingsSections;
    var _closure1_slot6 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 'column';
    verify['flexDirection'] = offset;
    offset = 6;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_8;
    verify['paddingBottom'] = romeo;
    tango['container'] = verify;
    verify = {};
    romeo = 100;
    verify['height'] = romeo;
    tango['nitroBanner'] = verify;
    verify = {};
    romeo = 'center';
    verify['alignItems'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_40;
    verify['paddingTop'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_8;
    verify['gap'] = romeo;
    tango['content'] = verify;
    verify = {'marginTop': null, 'width': 241, 'height': 146};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['marginTop'] = romeo;
    tango['image'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_12;
    verify['marginTop'] = romeo;
    tango['text'] = verify;
    verify = {'marginTop': null, 'height': 48, 'width': '85%'};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['marginTop'] = offset;
    tango['footer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 25;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/premium/native/marketing_moments/collectible_decos/ClaimRewardSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: ClaimRewardSheet
        _fun104859: for(var _fun104859_ip = 0; ; ) switch(_fun104859_ip) {
 0:
            tango = _closure1_slot3;
            zulu = tango.useCallback;
            mike = function() {
                _fun104860: for(var _fun104860_ip = 0; ; ) switch(_fun104860_ip) {
 0:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    entity = 7;
                    zulu = zulu[entity];
                    entity = undefined;
                    tango = tango.bind(entity)(zulu);
                    zulu = tango.getRootNavigationRef;
                    report = zulu.bind(tango)();
                    zulu = null;
                    if(!(zulu != report)) { _fun104860_ip = 89; continue _fun104860 }
 41:
                    zulu = report.isReady;
                    zulu = zulu.bind(report)();
                    if(!zulu) { _fun104860_ip = 89; continue _fun104860 }
 54:
                    tango = report.navigate;
                    zulu = {};
                    mike = _closure1_slot6;
                    mike = mike.PREMIUM;
                    zulu['screen'] = mike;
                    mike = 'settings';
                    mike = tango.bind(report)(mike, zulu);
                    return entity;
 89:
                    entity = false;
                    return entity;
                }
            };
            entity = new Array(0);
            report = zulu.bind(tango)(mike, entity);
            entity = _closure1_slot9;
            tango = undefined;
            sizing = entity.bind(tango)();
            yankee = _closure1_slot1;
            output = _closure1_slot2;
            entity = 8;
            entity = output[entity];
            entity = yankee.bind(tango)(entity);
            kilo = entity.bind(tango)();
            zulu = _closure1_slot7;
            backup = _closure1_slot0;
            entity = 9;
            entity = output[entity];
            entity = backup.bind(tango)(entity);
            mike = entity.BottomSheet;
            entity = {'startExpanded': true, 'handleDisabled': true};
            entity['onDismiss'] = report;
            golf = _closure1_slot8;
            oscar = _closure1_slot4;
            report = {};
            options = sizing.container;
            report['style'] = options;
            options = {};
            verify = sizing.nitroBanner;
            options['style'] = verify;
            verify = 10;
            verify = output[verify];
            offset = yankee.bind(tango)(verify);
            verify = {};
            foxtrot = _closure1_slot5;
            foxtrot = foxtrot.TIER_2;
            verify['premiumType'] = foxtrot;
            verify = zulu.bind(tango)(offset, verify);
            options['children'] = verify;
            verify = zulu.bind(tango)(oscar, options);
            options = new Array(3);
            options[0] = verify;
            verify = {};
            offset = sizing.content;
            verify['style'] = offset;
            offset = 11;
            offset = output[offset];
            yankee = yankee.bind(tango)(offset);
            offset = {};
            foxtrot = 12;
            foxtrot = output[foxtrot];
            backup = backup.bind(tango)(foxtrot);
            foxtrot = backup.isThemeDark;
            foxtrot = foxtrot.bind(backup)(kilo);
            kilo = _closure1_slot1;
            output = _closure1_slot2;
            if(foxtrot) { _fun104859_ip = 267; continue _fun104859 }
 253:
            foxtrot = 14;
            foxtrot = output[foxtrot];
            foxtrot = kilo.bind(tango)(foxtrot);
            _fun104859_ip = 279; continue _fun104859;
 267:
            backup = 13;
            backup = output[backup];
            foxtrot = kilo.bind(tango)(backup);
 279:
            offset['source'] = foxtrot;
            yankee = zulu.bind(tango)(yankee, offset);
            offset = new Array(4);
            offset[0] = yankee;
            yankee = _closure1_slot7;
            foxtrot = _closure1_slot0;
            backup = _closure1_slot2;
            kilo = 15;
            kilo = backup[kilo];
            kilo = foxtrot.bind(tango)(kilo);
            output = kilo.MainBannerImage;
            kilo = {};
            echo = sizing.image;
            kilo['imageStyles'] = echo;
            kilo = yankee.bind(tango)(output, kilo);
            offset[1] = kilo;
            kilo = 16;
            kilo = backup[kilo];
            kilo = foxtrot.bind(tango)(kilo);
            output = kilo.Text;
            kilo = {'variant': 'text-md/normal', 'color': 'header-primary'};
            echo = sizing.text;
            kilo['style'] = echo;
            echo = 17;
            update = backup[echo];
            update = foxtrot.bind(tango)(update);
            control = update.intl;
            source = control.string;
            update = backup[echo];
            update = foxtrot.bind(tango)(update);
            update = update.t;
            update = update.3DybLy;
            update = source.bind(control)(update);
            kilo['children'] = update;
            kilo = yankee.bind(tango)(output, kilo);
            offset[2] = kilo;
            kilo = _closure1_slot4;
            romeo = {};
            sizing = sizing.footer;
            romeo['style'] = sizing;
            sizing = 18;
            sizing = backup[sizing];
            sizing = foxtrot.bind(tango)(sizing);
            output = sizing.Button;
            sizing = {};
            update = backup[echo];
            update = foxtrot.bind(tango)(update);
            source = update.intl;
            update = source.string;
            echo = backup[echo];
            echo = foxtrot.bind(tango)(echo);
            echo = echo.t;
            echo = echo.gj3l2d;
            echo = update.bind(source)(echo);
            sizing['text'] = echo;
            echo = 'primary';
            sizing['variant'] = echo;
            result = function() { // Original name: onPress
                tango = _closure1_slot1;
                golf = _closure1_slot2;
                zulu = 19;
                report = golf[zulu];
                entity = undefined;
                oscar = tango.bind(entity)(report);
                report = oscar.hideActionSheet;
                report = report.bind(oscar)();
                zulu = golf[zulu];
                report = tango.bind(entity)(zulu);
                tango = report.openLazy;
                oscar = _closure1_slot0;
                mike = 21;
                mike = golf[mike];
                options = oscar.bind(entity)(mike);
                mike = 20;
                zulu = golf[mike];
                mike = golf.paths;
                zulu = options.bind(entity)(zulu, mike);
                mike = 22;
                mike = golf[mike];
                mike = oscar.bind(entity)(mike);
                mike = mike.SELECTION_SHEET_KEY;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            sizing['onPress'] = result;
            sizing = yankee.bind(tango)(output, sizing);
            romeo['children'] = sizing;
            romeo = yankee.bind(tango)(kilo, romeo);
            offset[3] = romeo;
            verify['children'] = offset;
            verify = golf.bind(tango)(oscar, verify);
            options[1] = verify;
            verify = 23;
            verify = backup[verify];
            verify = foxtrot.bind(tango)(verify);
            offset = verify.ActionSheetHeaderBar;
            verify = {};
            romeo = 24;
            romeo = backup[romeo];
            romeo = foxtrot.bind(tango)(romeo);
            romeo = romeo.ActionSheetHeaderBarVariants;
            romeo = romeo.FLOATING;
            verify['variant'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[2] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();