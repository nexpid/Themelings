// app/modules/premium/native/marketing_moments/collectible_decos/ClaimRewardSheet.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.PremiumTypes;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UserSettingsSections;
    var _closure1_slot6 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'column';
    verify['flexDirection'] = offset;
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['paddingBottom'] = romeon;
    tangon['container'] = verify;
    verify = {};
    romeon = 100;
    verify['height'] = romeon;
    tangon['nitroBanner'] = verify;
    verify = {};
    romeon = 'center';
    verify['alignItems'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_40;
    verify['paddingTop'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['gap'] = romeon;
    tangon['content'] = verify;
    verify = {'marginTop': null, 'width': 241, 'height': 146};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['marginTop'] = romeon;
    tangon['image'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_12;
    verify['marginTop'] = romeon;
    tangon['text'] = verify;
    verify = {'marginTop': null, 'height': 48, 'width': '85%'};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['marginTop'] = offset;
    tangon['footer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 25;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/native/marketing_moments/collectible_decos/ClaimRewardSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: ClaimRewardSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tangon = _closure1_slot3;
            zuuluu = tangon.useCallback;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    entity = 7;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = tangon.getRootNavigationRef;
                    report = zuuluu.bind(tangon)();
                    zuuluu = null;
                    if(!(zuuluu != report)) { _fun00004_ip = 89; continue _fun00003 }
 41:
                    zuuluu = report.isReady;
                    zuuluu = zuuluu.bind(report)();
                    if(!zuuluu) { _fun00004_ip = 89; continue _fun00003 }
 54:
                    tangon = report.navigate;
                    zuuluu = {};
                    michal = _closure1_slot6;
                    michal = michal.PREMIUM;
                    zuuluu['screen'] = michal;
                    michal = 'settings';
                    michal = tangon.bind(report)(michal, zuuluu);
                    return entity;
 89:
                    entity = false;
                    return entity;
                }
            };
            entity = new Array(0);
            report = zuuluu.bind(tangon)(michal, entity);
            entity = _closure1_slot9;
            tangon = undefined;
            sizing = entity.bind(tangon)();
            yankee = _closure1_slot1;
            output = _closure1_slot2;
            entity = 8;
            entity = output[entity];
            entity = yankee.bind(tangon)(entity);
            kiloes = entity.bind(tangon)();
            zuuluu = _closure1_slot7;
            backup = _closure1_slot0;
            entity = 9;
            entity = output[entity];
            entity = backup.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {'startExpanded': true, 'handleDisabled': true};
            entity['onDismiss'] = report;
            golfie = _closure1_slot8;
            oscard = _closure1_slot4;
            report = {};
            option = sizing.container;
            report['style'] = option;
            option = {};
            verify = sizing.nitroBanner;
            option['style'] = verify;
            verify = 10;
            verify = output[verify];
            offset = yankee.bind(tangon)(verify);
            verify = {};
            foxtra = _closure1_slot5;
            foxtra = foxtra.TIER_2;
            verify['premiumType'] = foxtra;
            verify = zuuluu.bind(tangon)(offset, verify);
            option['children'] = verify;
            verify = zuuluu.bind(tangon)(oscard, option);
            option = new Array(3);
            option[0] = verify;
            verify = {};
            offset = sizing.content;
            verify['style'] = offset;
            offset = 11;
            offset = output[offset];
            yankee = yankee.bind(tangon)(offset);
            offset = {};
            foxtra = 12;
            foxtra = output[foxtra];
            backup = backup.bind(tangon)(foxtra);
            foxtra = backup.isThemeDark;
            foxtra = foxtra.bind(backup)(kiloes);
            kiloes = _closure1_slot1;
            output = _closure1_slot2;
            if(foxtra) { _fun00002_ip = 263; continue _fun00001 }
 249:
            foxtra = 14;
            foxtra = output[foxtra];
            foxtra = kiloes.bind(tangon)(foxtra);
            _fun00002_ip = 275; continue _fun00001;
 263:
            backup = 13;
            backup = output[backup];
            foxtra = kiloes.bind(tangon)(backup);
 275:
            offset['source'] = foxtra;
            yankee = zuuluu.bind(tangon)(yankee, offset);
            offset = new Array(4);
            offset[0] = yankee;
            yankee = _closure1_slot7;
            foxtra = _closure1_slot0;
            backup = _closure1_slot2;
            kiloes = 15;
            kiloes = backup[kiloes];
            kiloes = foxtra.bind(tangon)(kiloes);
            output = kiloes.MainBannerImage;
            kiloes = {};
            echoed = sizing.image;
            kiloes['imageStyles'] = echoed;
            kiloes = yankee.bind(tangon)(output, kiloes);
            offset[1] = kiloes;
            kiloes = 16;
            kiloes = backup[kiloes];
            kiloes = foxtra.bind(tangon)(kiloes);
            output = kiloes.Text;
            kiloes = {'variant': 'text-md/normal', 'color': 'header-primary'};
            echoed = sizing.text;
            kiloes['style'] = echoed;
            echoed = 17;
            update = backup[echoed];
            update = foxtra.bind(tangon)(update);
            ctrled = update.intl;
            source = ctrled.string;
            update = backup[echoed];
            update = foxtra.bind(tangon)(update);
            update = update.t;
            update = update.3DybLy;
            update = source.bind(ctrled)(update);
            kiloes['children'] = update;
            kiloes = yankee.bind(tangon)(output, kiloes);
            offset[2] = kiloes;
            kiloes = _closure1_slot4;
            romeon = {};
            sizing = sizing.footer;
            romeon['style'] = sizing;
            sizing = 18;
            sizing = backup[sizing];
            sizing = foxtra.bind(tangon)(sizing);
            output = sizing.Button;
            sizing = {};
            update = backup[echoed];
            update = foxtra.bind(tangon)(update);
            source = update.intl;
            update = source.string;
            echoed = backup[echoed];
            echoed = foxtra.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.gj3l2d;
            echoed = update.bind(source)(echoed);
            sizing['text'] = echoed;
            echoed = 'primary';
            sizing['variant'] = echoed;
            result = function() { // Original name: onPress
                tangon = _closure1_slot1;
                golfie = _closure1_slot2;
                zuuluu = 19;
                report = golfie[zuuluu];
                entity = undefined;
                oscard = tangon.bind(entity)(report);
                report = oscard.hideActionSheet;
                report = report.bind(oscard)();
                zuuluu = golfie[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                tangon = report.openLazy;
                oscard = _closure1_slot0;
                michal = 21;
                michal = golfie[michal];
                option = oscard.bind(entity)(michal);
                michal = 20;
                zuuluu = golfie[michal];
                michal = golfie.paths;
                zuuluu = option.bind(entity)(zuuluu, michal);
                michal = 22;
                michal = golfie[michal];
                michal = oscard.bind(entity)(michal);
                michal = michal.SELECTION_SHEET_KEY;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            sizing['onPress'] = result;
            sizing = yankee.bind(tangon)(output, sizing);
            romeon['children'] = sizing;
            romeon = yankee.bind(tangon)(kiloes, romeon);
            offset[3] = romeon;
            verify['children'] = offset;
            verify = golfie.bind(tangon)(oscard, verify);
            option[1] = verify;
            verify = 23;
            verify = backup[verify];
            verify = foxtra.bind(tangon)(verify);
            offset = verify.ActionSheetHeaderBar;
            verify = {};
            romeon = 24;
            romeon = backup[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            romeon = romeon.ActionSheetHeaderBarVariants;
            romeon = romeon.FLOATING;
            verify['variant'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[2] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();