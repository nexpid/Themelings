// app/modules/premium/native/SubscriptionRenewalMutationsNotice.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    offset = {'padding': 10, 'marginVertical': 5, 'marginHorizontal': 15, 'borderRadius': null, 'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'center'};
    tangon = 10;
    yankee = 5;
    romeon = 4;
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.xs;
    offset['borderRadius'] = romeon;
    romeon = oscard[yankee];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.DARK_PRIMARY_630_LIGHT_PRIMARY_230;
    offset['backgroundColor'] = romeon;
    golfie['container'] = offset;
    offset = {'alignSelf': 'center', 'marginLeft': 15};
    romeon = oscard[yankee];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.DARK_PRIMARY_300_LIGHT_PRIMARY_500;
    offset['color'] = romeon;
    golfie['icon'] = offset;
    offset = {'paddingLeft': 10, 'marginRight': 15};
    yankee = oscard[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.DARK_PRIMARY_300_LIGHT_PRIMARY_500;
    offset['color'] = yankee;
    golfie['text'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/premium/native/SubscriptionRenewalMutationsNotice.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SubscriptionRenewalMutationsNotice
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            foxtra = entity.subscription;
            output = entity.renewalMutations;
            entity = _closure1_slot6;
            tangon = undefined;
            verify = entity.bind(tangon)();
            zuuluu = _closure1_slot5;
            michal = _closure1_slot3;
            entity = {};
            report = verify.container;
            entity['style'] = report;
            option = _closure1_slot4;
            oscard = _closure1_slot1;
            backup = _closure1_slot2;
            report = 6;
            report = backup[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            golfie = verify.icon;
            report['style'] = golfie;
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            offset = _closure1_slot0;
            oscard = 7;
            oscard = backup[oscard];
            oscard = offset.bind(tangon)(oscard);
            golfie = oscard.LegacyText;
            oscard = {};
            verify = verify.text;
            oscard['style'] = verify;
            verify = 8;
            yankee = backup[verify];
            yankee = offset.bind(tangon)(yankee);
            romeon = yankee.intl;
            yankee = romeon.format;
            verify = backup[verify];
            verify = offset.bind(tangon)(verify);
            verify = verify.t;
            offset = verify.ar1cPj;
            verify = {};
            backup = foxtra.hasExternalPlanChange;
            if(backup) { _fun00002_ip = 221; continue _fun00001 }
 182:
            sizing = _closure1_slot1;
            result = _closure1_slot2;
            backup = 9;
            backup = result[backup];
            result = sizing.bind(tangon)(backup);
            sizing = result.getDisplayName;
            backup = output.planId;
            backup = sizing.bind(result)(backup);
            _fun00002_ip = 252; continue _fun00001;
 221:
            sizing = _closure1_slot0;
            result = _closure1_slot2;
            kiloes = 9;
            kiloes = result[kiloes];
            sizing = sizing.bind(tangon)(kiloes);
            kiloes = sizing.getExternalPlanDisplayName;
            backup = kiloes.bind(sizing)(output);
 252:
            verify['planName'] = backup;
            foxtra = foxtra.currentPeriodEnd;
            verify['date'] = foxtra;
            verify = yankee.bind(romeon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();