// app/modules/premium/native/SubscriptionRenewalMutationsNotice.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    offset = {'padding': 10, 'marginVertical': 5, 'marginHorizontal': 15, 'borderRadius': null, 'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'center'};
    tango = 10;
    yankee = 5;
    romeo = 4;
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.xs;
    offset['borderRadius'] = romeo;
    romeo = oscar[yankee];
    romeo = report.bind(entity)(romeo);
    romeo = romeo.DARK_PRIMARY_630_LIGHT_PRIMARY_230;
    offset['backgroundColor'] = romeo;
    golf['container'] = offset;
    offset = {'alignSelf': 'center', 'marginLeft': 15};
    romeo = oscar[yankee];
    romeo = report.bind(entity)(romeo);
    romeo = romeo.DARK_PRIMARY_300_LIGHT_PRIMARY_500;
    offset['color'] = romeo;
    golf['icon'] = offset;
    offset = {'paddingLeft': 10, 'marginRight': 15};
    yankee = oscar[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.DARK_PRIMARY_300_LIGHT_PRIMARY_500;
    offset['color'] = yankee;
    golf['text'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/premium/native/SubscriptionRenewalMutationsNotice.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SubscriptionRenewalMutationsNotice
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            foxtrot = entity.subscription;
            output = entity.renewalMutations;
            entity = _closure1_slot6;
            tango = undefined;
            verify = entity.bind(tango)();
            zulu = _closure1_slot5;
            mike = _closure1_slot3;
            entity = {};
            report = verify.container;
            entity['style'] = report;
            options = _closure1_slot4;
            oscar = _closure1_slot1;
            backup = _closure1_slot2;
            report = 6;
            report = backup[report];
            oscar = oscar.bind(tango)(report);
            report = {};
            golf = verify.icon;
            report['style'] = golf;
            oscar = options.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            offset = _closure1_slot0;
            oscar = 7;
            oscar = backup[oscar];
            oscar = offset.bind(tango)(oscar);
            golf = oscar.LegacyText;
            oscar = {};
            verify = verify.text;
            oscar['style'] = verify;
            verify = 8;
            yankee = backup[verify];
            yankee = offset.bind(tango)(yankee);
            romeo = yankee.intl;
            yankee = romeo.format;
            verify = backup[verify];
            verify = offset.bind(tango)(verify);
            verify = verify.t;
            offset = verify.ar1cPj;
            verify = {};
            backup = foxtrot.hasExternalPlanChange;
            if(backup) { _fun00002_ip = 221; continue _fun00001 }
 182:
            sizing = _closure1_slot1;
            result = _closure1_slot2;
            backup = 9;
            backup = result[backup];
            result = sizing.bind(tango)(backup);
            sizing = result.getDisplayName;
            backup = output.planId;
            backup = sizing.bind(result)(backup);
            _fun00002_ip = 252; continue _fun00001;
 221:
            sizing = _closure1_slot0;
            result = _closure1_slot2;
            kilo = 9;
            kilo = result[kilo];
            sizing = sizing.bind(tango)(kilo);
            kilo = sizing.getExternalPlanDisplayName;
            backup = kilo.bind(sizing)(output);
 252:
            verify['planName'] = backup;
            foxtrot = foxtrot.currentPeriodEnd;
            verify['date'] = foxtrot;
            verify = yankee.bind(romeo)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();