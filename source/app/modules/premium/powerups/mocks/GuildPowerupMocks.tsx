// app/modules/premium/powerups/mocks/GuildPowerupMocks.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    entity = 0;
    michal = golfie[entity];
    entity = undefined;
    michal = oscard.bind(entity)(michal);
    verify = michal.GuildPowerupType;
    michal = {'type': null, 'skuId': '1', 'title': 'Lorem ipsum', 'cost': 1};
    tangon = verify.LEVEL;
    michal['type'] = tangon;
    report = 1;
    tangon = new Array(0);
    michal['dependencies'] = tangon;
    tangon = {'additional_emoji_slots': 50, 'additional_sound_slots': 50, 'additional_sticker_slots': 50, 'total_emoji_slots': 50, 'total_sound_slots': 50, 'total_sticker_slots': 50};
    option = new Array(0);
    tangon['features'] = option;
    michal['features'] = tangon;
    tangon = new Array(3);
    tangon[0] = michal;
    michal = {'type': null, 'skuId': '2', 'title': 'Lorem ipsum', 'cost': 1};
    option = verify.LEVEL;
    michal['type'] = option;
    option = ['1'];
    michal['dependencies'] = option;
    option = {'additional_emoji_slots': 50, 'additional_sound_slots': 50, 'additional_sticker_slots': 50, 'total_emoji_slots': 50, 'total_sound_slots': 50, 'total_sticker_slots': 50};
    offset = new Array(0);
    option['features'] = offset;
    michal['features'] = option;
    tangon[1] = michal;
    michal = {'type': null, 'skuId': '3', 'title': 'Lorem ipsum', 'cost': 1};
    option = verify.LEVEL;
    michal['type'] = option;
    option = ['2'];
    michal['dependencies'] = option;
    option = {'additional_emoji_slots': 50, 'additional_sound_slots': 50, 'additional_sticker_slots': 50, 'total_emoji_slots': 50, 'total_sound_slots': 50, 'total_sticker_slots': 50};
    offset = new Array(0);
    option['features'] = offset;
    michal['features'] = option;
    tangon[2] = michal;
    option = {'type': null, 'skuId': '4', 'title': 'Lorem ipsum', 'description': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec placerat posuere lao', 'cost': 1};
    michal = verify.PERK;
    option['type'] = michal;
    michal = new Array(0);
    option['dependencies'] = michal;
    michal = new Array(4);
    michal[0] = option;
    option = {'type': null, 'skuId': '5', 'title': 'Lorem ipsum', 'description': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec placerat posuere lao', 'cost': 1};
    offset = verify.PERK;
    option['type'] = offset;
    offset = new Array(0);
    option['dependencies'] = offset;
    michal[1] = option;
    option = {'type': null, 'skuId': '6', 'title': 'Lorem ipsum', 'description': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec placerat posuere lao', 'cost': 1};
    offset = verify.PERK;
    option['type'] = offset;
    offset = new Array(0);
    option['dependencies'] = offset;
    michal[2] = option;
    option = {'type': null, 'skuId': '7', 'title': 'Lorem ipsum', 'description': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec placerat posuere lao', 'cost': 1};
    verify = verify.PERK;
    option['type'] = verify;
    verify = new Array(0);
    option['dependencies'] = verify;
    michal[3] = option;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/premium/powerups/mocks/GuildPowerupMocks.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['MOCK_LEVELS'] = tangon;
    zuuluu['MOCK_PERKS'] = michal;
    return entity;
})();