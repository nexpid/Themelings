// app/modules/premium/gifting/native/views/promotions/SeasonalGiftingSKUSelectBottomSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    verify = tango.bind(entity)(golf);
    var _closure1_slot4 = verify;
    backup = 2;
    tango = oscar[backup];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 4;
    golf = oscar[tango];
    romeo = report.bind(entity)(golf);
    options = romeo.createStyles;
    golf = {};
    foxtrot = {};
    offset = 5;
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BG_BRAND;
    foxtrot['borderColor'] = kilo;
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.lg;
    foxtrot['borderRadius'] = kilo;
    foxtrot['borderWidth'] = backup;
    golf['selectedRow'] = foxtrot;
    foxtrot = {};
    foxtrot['paddingRight'] = tango;
    golf['trailingLabel'] = foxtrot;
    golf = options.bind(romeo)(golf);
    var _closure1_slot8 = golf;
    options = verify.memo;
    golf = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = argFoo;
            kilo = mike.reward;
            var _closure2_slot0 = kilo;
            report = mike.selected;
            foxtrot = mike.onSelect;
            var _closure2_slot1 = foxtrot;
            mike = _closure1_slot8;
            tango = undefined;
            oscar = mike.bind(tango)();
            golf = _closure1_slot0;
            zulu = _closure1_slot2;
            mike = 6;
            mike = zulu[mike];
            offset = golf.bind(tango)(mike);
            verify = offset.useFetchCollectiblesProduct;
            mike = kilo.skuId;
            mike = verify.bind(offset)(mike);
            yankee = mike.product;
            verify = _closure1_slot6;
            mike = 7;
            zulu = zulu[mike];
            zulu = golf.bind(tango)(zulu);
            golf = zulu.Text;
            zulu = {'variant': 'text-md/semibold', 'color': 'header-primary'};
            offset = null;
            romeo = offset == yankee;
            offset = undefined;
            if(romeo) { _fun00002_ip = 138; continue _fun00001 }
 133:
            offset = yankee.name;
 138:
            zulu['children'] = offset;
            romeo = verify.bind(tango)(golf, zulu);
            zulu = _closure1_slot6;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            golf = output[mike];
            golf = sizing.bind(tango)(golf);
            offset = golf.Text;
            golf = {'variant': 'heading-sm/medium', 'color': 'header-secondary'};
            verify = 8;
            yankee = output[verify];
            yankee = sizing.bind(tango)(yankee);
            result = yankee.intl;
            backup = result.string;
            yankee = output[verify];
            yankee = sizing.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.7v0T9P;
            yankee = backup.bind(result)(yankee);
            golf['children'] = yankee;
            yankee = zulu.bind(tango)(offset, golf);
            mike = output[mike];
            mike = sizing.bind(tango)(mike);
            golf = mike.Text;
            mike = {'variant': 'text-md/semibold', 'color': 'header-primary'};
            offset = oscar.trailingLabel;
            mike['style'] = offset;
            offset = output[verify];
            offset = sizing.bind(tango)(offset);
            backup = offset.intl;
            offset = backup.string;
            verify = output[verify];
            verify = sizing.bind(tango)(verify);
            verify = verify.t;
            verify = verify.QQsaCQ;
            offset = offset.bind(backup)(verify);
            verify = offset.toLocaleUpperCase;
            verify = verify.bind(offset)();
            mike['children'] = verify;
            verify = zulu.bind(tango)(golf, mike);
            offset = _closure1_slot4;
            golf = offset.useCallback;
            mike = new Array(2);
            mike[0] = kilo;
            mike[1] = foxtrot;
            entity = function() {
                zulu = _closure2_slot1;
                mike = _closure2_slot0;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            offset = golf.bind(offset)(entity, mike);
            mike = _closure1_slot5;
            entity = {};
            if(!report) { _fun00002_ip = 396; continue _fun00001 }
 390:
            report = oscar.selectedRow;
 396:
            entity['style'] = report;
            golf = _closure1_slot6;
            oscar = _closure1_slot0;
            backup = _closure1_slot2;
            report = 9;
            report = backup[report];
            report = oscar.bind(tango)(report);
            oscar = report.TableRow;
            report = {};
            foxtrot = _closure1_slot1;
            options = 10;
            options = backup[options];
            backup = foxtrot.bind(tango)(options);
            foxtrot = {'avatarDecoration': null, 'size': 42, 'animate': true};
            options = {};
            kilo = kilo.assetId;
            options['asset'] = kilo;
            foxtrot['avatarDecoration'] = options;
            options = true;
            foxtrot = golf.bind(tango)(backup, foxtrot);
            report['icon'] = foxtrot;
            report['label'] = romeo;
            report['subLabel'] = yankee;
            report['onPress'] = offset;
            report['trailing'] = verify;
            report['end'] = options;
            report['start'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    golf = options.bind(verify)(golf);
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'display': 'flex', 'flexDirection': 'column', 'padding': null, 'justifyContent': 'center'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['padding'] = romeo;
    romeo = 'center';
    tango['content'] = verify;
    verify = {};
    verify['textAlign'] = romeo;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['padding'] = foxtrot;
    tango['header'] = verify;
    verify = {};
    verify['alignSelf'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['marginVertical'] = romeo;
    tango['avatarPreview'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'column'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_12;
    verify['gap'] = romeo;
    tango['rewardsContainer'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['marginHorizontal'] = offset;
    tango['buttonContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 15;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/premium/gifting/native/views/promotions/SeasonalGiftingSKUSelectBottomSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SeasonalGiftingSKUSelectBottomSheet
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            mike = argFoo;
            zulu = mike.defaultHighlightedReward;
            output = mike.rewards;
            entity = mike.onSelect;
            var _closure2_slot0 = entity;
            report = mike.onDismiss;
            mike = _closure1_slot10;
            tango = undefined;
            offset = mike.bind(tango)();
            oscar = _closure1_slot4;
            mike = oscar.useState;
            golf = mike.bind(oscar)(zulu);
            zulu = _closure1_slot3;
            mike = 2;
            zulu = zulu.bind(tango)(golf, mike);
            mike = 0;
            result = zulu[mike];
            var _closure2_slot1 = result;
            mike = 1;
            mike = zulu[mike];
            var _closure2_slot2 = mike;
            zulu = oscar.useCallback;
            mike = new Array(2);
            mike[0] = entity;
            mike[1] = result;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zulu = _closure2_slot1;
                    mike = null;
                    if(!(mike != zulu)) { _fun00006_ip = 28; continue _fun00005 }
 13:
                    zulu = _closure2_slot0;
                    mike = _closure2_slot1;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
 28:
                    entity = undefined;
                    return entity;
                }
            };
            yankee = zulu.bind(oscar)(entity, mike);
            zulu = oscar.useCallback;
            mike = function(argFoo) {
                zulu = _closure2_slot2;
                entity = undefined;
                mike = argFoo;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            entity = new Array(0);
            entity = zulu.bind(oscar)(mike, entity);
            var _closure2_slot3 = entity;
            zulu = _closure1_slot7;
            echo = _closure1_slot0;
            update = _closure1_slot2;
            entity = 11;
            entity = update[entity];
            entity = echo.bind(tango)(entity);
            mike = entity.BottomSheet;
            entity = {};
            oscar = true;
            entity['startExpanded'] = oscar;
            entity['onDismiss'] = report;
            oscar = _closure1_slot5;
            report = {};
            golf = offset.content;
            report['style'] = golf;
            foxtrot = _closure1_slot6;
            golf = 7;
            golf = update[golf];
            golf = echo.bind(tango)(golf);
            options = golf.Text;
            golf = {'style': null, 'variant': 'redesign/heading-18/bold', 'color': 'header-primary', 'accessibilityRole': 'header'};
            romeo = offset.header;
            golf['style'] = romeo;
            sizing = 8;
            romeo = update[sizing];
            romeo = echo.bind(tango)(romeo);
            source = romeo.intl;
            kilo = source.string;
            romeo = update[sizing];
            romeo = echo.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.Rp0+ZG;
            romeo = kilo.bind(source)(romeo);
            golf['children'] = romeo;
            golf = foxtrot.bind(tango)(options, golf);
            romeo = new Array(3);
            romeo[0] = golf;
            options = _closure1_slot1;
            golf = 12;
            golf = update[golf];
            options = options.bind(tango)(golf);
            golf = {};
            kilo = offset.avatarPreview;
            golf['style'] = kilo;
            kilo = 13;
            kilo = update[kilo];
            kilo = echo.bind(tango)(kilo);
            kilo = kilo.AvatarSizes;
            kilo = kilo.PROFILE;
            golf['size'] = kilo;
            kilo = null;
            echo = kilo == result;
            kilo = undefined;
            if(echo) { _fun00004_ip = 389; continue _fun00003 }
 383:
            kilo = result.assetId;
 389:
            golf['asset'] = kilo;
            golf = foxtrot.bind(tango)(options, golf);
            romeo[1] = golf;
            options = _closure1_slot6;
            golf = _closure1_slot5;
            foxtrot = {};
            kilo = offset.rewardsContainer;
            foxtrot['style'] = kilo;
            kilo = output.map;
            backup = function(argFoo, argBar) {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    entity = argFoo;
                    report = _closure1_slot6;
                    tango = _closure1_slot9;
                    zulu = {};
                    zulu['reward'] = entity;
                    golf = _closure2_slot1;
                    mike = null;
                    golf = mike == golf;
                    mike = undefined;
                    options = undefined;
                    if(golf) { _fun00008_ip = 51; continue _fun00007 }
 41:
                    golf = _closure2_slot1;
                    options = golf.skuId;
 51:
                    golf = entity.skuId;
                    golf = options === golf;
                    zulu['selected'] = golf;
                    oscar = _closure2_slot3;
                    zulu['onSelect'] = oscar;
                    verify = entity.skuId;
                    entity = global;
                    entity = entity.HermesInternal;
                    options = entity.concat;
                    golf = '';
                    oscar = '-';
                    entity = argBar;
                    entity = options.bind(golf)(verify, oscar, entity);
                    entity = report.bind(mike)(tango, zulu, entity);
                    return entity;
                }
            };
            backup = kilo.bind(output)(backup);
            foxtrot['children'] = backup;
            foxtrot = options.bind(tango)(golf, foxtrot);
            romeo[2] = foxtrot;
            report['children'] = romeo;
            oscar = zulu.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            oscar = {};
            offset = offset.buttonContainer;
            oscar['style'] = offset;
            kilo = _closure1_slot0;
            romeo = _closure1_slot2;
            verify = 14;
            verify = romeo[verify];
            verify = kilo.bind(tango)(verify);
            offset = verify.Button;
            verify = {};
            foxtrot = romeo[sizing];
            foxtrot = kilo.bind(tango)(foxtrot);
            backup = foxtrot.intl;
            foxtrot = backup.string;
            romeo = romeo[sizing];
            romeo = kilo.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.WaYuBQ;
            romeo = foxtrot.bind(backup)(romeo);
            verify['text'] = romeo;
            verify['onPress'] = yankee;
            verify = options.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();