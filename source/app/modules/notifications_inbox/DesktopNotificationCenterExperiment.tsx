// app/modules/notifications_inbox/DesktopNotificationCenterExperiment.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    option = argBar;
    zuuluu = argFre;
    verify = argPlu;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    entity = 0;
    michal = verify[entity];
    entity = undefined;
    michal = option.bind(entity)(michal);
    golfie = michal.CommonTriggerPoints;
    oscard = {};
    michal = 'popout';
    oscard['POPOUT'] = michal;
    michal = 'sidebar';
    oscard['SIDEBAR'] = michal;
    michal = 'legacy';
    oscard['LEGACY'] = michal;
    report = {};
    michal = 'server-rail-top';
    report['SERVER_RAIL_TOP'] = michal;
    michal = 'server-rail-bottom';
    report['SERVER_RAIL_BOTTOM'] = michal;
    tangon = {};
    michal = 'tabs';
    tangon['TABS'] = michal;
    michal = 'dropdown';
    tangon['DROPDOWN'] = michal;
    michal = 1;
    michal = verify[michal];
    yankee = option.bind(entity)(michal);
    offset = yankee.createExperiment;
    michal = {'kind': 'user', 'id': '2025-04_desktop_notification_center', 'label': 'New Notification Center (Desktop)'};
    kiloes = null;
    romeon = {'notificationCenterVariant': null, 'entrypoint': null, 'filterStyle': null};
    michal['defaultConfig'] = romeon;
    golfie = golfie.CONNECTION_OPEN;
    michal['commonTriggerPoint'] = golfie;
    golfie = {'id': 1, 'label': 'Show notification center in popout'};
    romeon = {};
    foxtra = oscard.POPOUT;
    romeon['notificationCenterVariant'] = foxtra;
    foxtra = report.SERVER_RAIL_TOP;
    romeon['entrypoint'] = foxtra;
    foxtra = tangon.TABS;
    romeon['filterStyle'] = foxtra;
    golfie['config'] = romeon;
    romeon = new Array(4);
    romeon[0] = golfie;
    foxtra = {'id': 2, 'label': 'Show notification center in sidebar'};
    golfie = 2;
    backup = {};
    sizing = oscard.SIDEBAR;
    backup['notificationCenterVariant'] = sizing;
    sizing = report.SERVER_RAIL_TOP;
    backup['entrypoint'] = sizing;
    sizing = tangon.DROPDOWN;
    backup['filterStyle'] = sizing;
    foxtra['config'] = backup;
    romeon[1] = foxtra;
    foxtra = {'id': 3, 'label': 'Legacy inbox with server rail entrypoint'};
    backup = {};
    sizing = oscard.LEGACY;
    backup['notificationCenterVariant'] = sizing;
    sizing = report.SERVER_RAIL_TOP;
    backup['entrypoint'] = sizing;
    backup['filterStyle'] = kiloes;
    foxtra['config'] = backup;
    romeon[2] = foxtra;
    foxtra = {'id': 4, 'label': 'Panel variant with bottom rail entrypoint'};
    backup = {};
    kiloes = oscard.SIDEBAR;
    backup['notificationCenterVariant'] = kiloes;
    kiloes = report.SERVER_RAIL_BOTTOM;
    backup['entrypoint'] = kiloes;
    kiloes = tangon.DROPDOWN;
    backup['filterStyle'] = kiloes;
    foxtra['config'] = backup;
    romeon[3] = foxtra;
    michal['treatments'] = romeon;
    michal = offset.bind(yankee)(michal);
    golfie = verify[golfie];
    verify = option.bind(entity)(golfie);
    option = verify.fileFinishedImporting;
    golfie = 'modules/notifications_inbox/DesktopNotificationCenterExperiment.tsx';
    golfie = option.bind(verify)(golfie);
    zuuluu['NotificationCenterVariant'] = oscard;
    zuuluu['NotificationCenterEntrypoint'] = report;
    zuuluu['NotificationCenterFilterStyle'] = tangon;
    zuuluu['DesktopNotificationCenterExperiment'] = michal;
    return entity;
})();