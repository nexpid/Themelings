// app/modules/masked_link/MaskedLinkModalActionCreators.native.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, michal);
    entity = 0;
    golfie = oscard[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(golfie);
    var _closure1_slot2 = michal;
    michal = 1;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.jsx;
    var _closure1_slot3 = michal;
    michal = {};
    tangon = function(argFoo) { // Original name: show
        entity = argFoo;
        yankee = entity.url;
        offset = entity.trustUrl;
        verify = entity.onConfirm;
        oscard = entity.onCancel;
        option = entity.isProtocol;
        tangon = _closure1_slot2;
        zuuluu = tangon.lazy;
        entity = function() {
            zuuluu = _closure1_slot0;
            entity = _closure1_slot1;
            michal = 3;
            michal = entity[michal];
            tangon = undefined;
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = 2;
            michal = entity[michal];
            entity = entity.paths;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        golfie = zuuluu.bind(tangon)(entity);
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot1;
        entity = 4;
        zuuluu = zuuluu[entity];
        entity = undefined;
        report = tangon.bind(entity)(zuuluu);
        tangon = report.openAlert;
        zuuluu = _closure1_slot3;
        michal = {};
        michal['url'] = yankee;
        michal['trustUrl'] = offset;
        michal['onConfirm'] = verify;
        michal['onCancel'] = oscard;
        michal['isProtocol'] = option;
        zuuluu = zuuluu.bind(entity)(golfie, michal);
        michal = 'masked-link';
        michal = tangon.bind(report)(michal, zuuluu, oscard);
        return entity;
    };
    michal['show'] = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/masked_link/MaskedLinkModalActionCreators.native.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();