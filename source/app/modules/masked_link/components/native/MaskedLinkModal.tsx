// app/modules/masked_link/components/native/MaskedLinkModal.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot2 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 250;
    verify['maxHeight'] = offset;
    tangon['linkCalloutContainer'] = verify;
    verify = {};
    offset = 3;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    verify['borderRadius'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_FLOATING;
    verify['backgroundColor'] = offset;
    tangon['emphasis'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/masked_link/components/native/MaskedLinkModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: MaskedLinkModal
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            verify = entity.url;
            option = entity.trustUrl;
            backup = entity.isProtocol;
            golfie = entity.onConfirm;
            oscard = entity.onCancel;
            entity = _closure1_slot6;
            tangon = undefined;
            foxtra = entity.bind(tangon)();
            yankee = _closure1_slot0;
            report = _closure1_slot1;
            entity = 4;
            entity = report[entity];
            zuuluu = yankee.bind(tangon)(entity);
            michal = zuuluu.useModalState;
            entity = {};
            entity['url'] = verify;
            entity['trustUrl'] = option;
            entity['onConfirm'] = golfie;
            entity['onCancel'] = oscard;
            entity = michal.bind(zuuluu)(entity);
            ctrled = entity.protocol;
            echoed = entity.hostname;
            limora = entity.theRestOfTheUrl;
            result = entity.shouldTrustUrl;
            var _closure2_slot0 = result;
            michal = entity.setShouldTrustUrl;
            var _closure2_slot1 = michal;
            option = entity.handleConfirm;
            verify = entity.handleCancel;
            zuuluu = _closure1_slot4;
            offset = 5;
            entity = report[offset];
            entity = yankee.bind(tangon)(entity);
            michal = entity.AlertModal;
            entity = {};
            update = 6;
            oscard = report[update];
            oscard = yankee.bind(tangon)(oscard);
            golfie = oscard.intl;
            oscard = golfie.string;
            report = report[update];
            report = yankee.bind(tangon)(report);
            report = report.t;
            report = report.3w1QGh;
            report = oscard.bind(golfie)(report);
            entity['title'] = report;
            golfie = _closure1_slot0;
            oscard = _closure1_slot1;
            report = oscard[update];
            report = golfie.bind(tangon)(report);
            romeon = report.intl;
            if(backup) { _fun00002_ip = 285; continue _fun00001 }
 251:
            yankee = romeon.string;
            report = oscard[update];
            report = golfie.bind(tangon)(report);
            report = report.t;
            report = report.soRxRU;
            report = yankee.bind(romeon)(report);
            _fun00002_ip = 329; continue _fun00001;
 285:
            yankee = romeon.format;
            oscard = oscard[update];
            oscard = golfie.bind(tangon)(oscard);
            oscard = oscard.t;
            golfie = oscard.aCYv19;
            oscard = {};
            golfie = yankee.bind(romeon)(golfie, oscard);
            oscard = golfie.toString;
            report = oscard.bind(golfie)();
 329:
            entity['content'] = report;
            golfie = _closure1_slot5;
            romeon = _closure1_slot0;
            yankee = _closure1_slot1;
            report = 7;
            report = yankee[report];
            report = romeon.bind(tangon)(report);
            oscard = report.AlertActions;
            report = {};
            sizing = _closure1_slot4;
            yankee = yankee[offset];
            yankee = romeon.bind(tangon)(yankee);
            romeon = yankee.AlertActionButton;
            yankee = {};
            source = 'primary';
            yankee['variant'] = source;
            yankee['onPress'] = option;
            source = _closure1_slot0;
            option = _closure1_slot1;
            vacuum = option[update];
            vacuum = source.bind(tangon)(vacuum);
            sequen = vacuum.intl;
            vacuum = sequen.string;
            option = option[update];
            option = source.bind(tangon)(option);
            source = option.t;
            if(backup) { _fun00002_ip = 457; continue _fun00001 }
 442:
            option = source.NcJfJC;
            option = vacuum.bind(sequen)(option);
            _fun00002_ip = 470; continue _fun00001;
 457:
            source = source.COq6kp;
            option = vacuum.bind(sequen)(source);
 470:
            yankee['text'] = option;
            option = 'confirm';
            yankee = sizing.bind(tangon)(romeon, yankee, option);
            option = new Array(2);
            option[0] = yankee;
            source = _closure1_slot4;
            romeon = _closure1_slot0;
            yankee = _closure1_slot1;
            offset = yankee[offset];
            offset = romeon.bind(tangon)(offset);
            sizing = offset.AlertActionButton;
            offset = {};
            offset['onPress'] = verify;
            verify = 'secondary';
            offset['variant'] = verify;
            verify = yankee[update];
            verify = romeon.bind(tangon)(verify);
            sequen = verify.intl;
            vacuum = sequen.string;
            verify = yankee[update];
            verify = romeon.bind(tangon)(verify);
            verify = verify.t;
            verify = verify./g10LC;
            verify = vacuum.bind(sequen)(verify);
            offset['text'] = verify;
            verify = 'cancel';
            verify = source.bind(tangon)(sizing, offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['actions'] = report;
            golfie = _closure1_slot5;
            report = 8;
            report = yankee[report];
            report = romeon.bind(tangon)(report);
            oscard = report.Stack;
            report = {};
            option = 16;
            report['spacing'] = option;
            offset = _closure1_slot2;
            option = {};
            verify = foxtra.emphasis;
            option['style'] = verify;
            verify = 9;
            sizing = yankee[verify];
            sizing = romeon.bind(tangon)(sizing);
            sequen = sizing.FormRow;
            vacuum = {'start': true, 'end': true};
            record = _closure1_slot3;
            config = {};
            foxtra = foxtra.linkCalloutContainer;
            config['style'] = foxtra;
            sizing = 10;
            foxtra = yankee[sizing];
            foxtra = romeon.bind(tangon)(foxtra);
            papara = foxtra.Text;
            cntext = {};
            whisks = 'text-md/normal';
            cntext['variant'] = whisks;
            yankee = yankee[sizing];
            yankee = romeon.bind(tangon)(yankee);
            romeon = yankee.Text;
            yankee = {};
            foxtra = whisks;
            if(!backup) { _fun00002_ip = 758; continue _fun00001 }
 754:
            foxtra = 'text-md/semibold';
 758:
            yankee['variant'] = foxtra;
            sierra = 'text-muted';
            foxtra = sierra;
            if(!backup) { _fun00002_ip = 780; continue _fun00001 }
 774:
            foxtra = 'text-normal';
 780:
            yankee['color'] = foxtra;
            foxtra = new Array(2);
            foxtra[0] = ctrled;
            target = '//';
            foxtra[1] = target;
            yankee['children'] = foxtra;
            yankee = golfie.bind(tangon)(romeon, yankee);
            target = new Array(3);
            target[0] = yankee;
            foxtra = _closure1_slot4;
            romeon = _closure1_slot0;
            yankee = _closure1_slot1;
            yankee = yankee[sizing];
            yankee = romeon.bind(tangon)(yankee);
            romeon = yankee.Text;
            yankee = {};
            status = 'text-md/semibold';
            if(!backup) { _fun00002_ip = 858; continue _fun00001 }
 855:
            status = whisks;
 858:
            yankee['variant'] = status;
            status = 'text-normal';
            if(!backup) { _fun00002_ip = 874; continue _fun00001 }
 871:
            status = sierra;
 874:
            yankee['color'] = status;
            yankee['children'] = echoed;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            target[1] = yankee;
            yankee = _closure1_slot4;
            foxtra = _closure1_slot0;
            romeon = _closure1_slot1;
            status = romeon[sizing];
            status = foxtra.bind(tangon)(status);
            sierra = status.Text;
            status = {'variant': 'text-md/normal', 'color': 'text-muted'};
            status['children'] = limora;
            status = yankee.bind(tangon)(sierra, status);
            target[2] = status;
            cntext['children'] = target;
            cntext = golfie.bind(tangon)(papara, cntext);
            config['children'] = cntext;
            config = source.bind(tangon)(record, config);
            vacuum['label'] = config;
            vacuum = source.bind(tangon)(sequen, vacuum);
            option['children'] = vacuum;
            offset = source.bind(tangon)(offset, option);
            option = new Array(2);
            option[0] = offset;
            verify = romeon[verify];
            verify = foxtra.bind(tangon)(verify);
            offset = verify.FormCheckboxRow;
            verify = {'start': true, 'end': true};
            verify['selected'] = result;
            output = function() { // Original name: onPress
                zuuluu = _closure2_slot1;
                entity = _closure2_slot0;
                michal = !entity;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            verify['onPress'] = output;
            romeon = romeon[sizing];
            romeon = foxtra.bind(tangon)(romeon);
            foxtra = romeon.Text;
            romeon = {};
            sizing = 'text-md/medium';
            romeon['variant'] = sizing;
            sizing = _closure1_slot0;
            kiloes = _closure1_slot1;
            output = kiloes[update];
            output = sizing.bind(tangon)(output);
            result = output.intl;
            output = result.format;
            kiloes = kiloes[update];
            kiloes = sizing.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            if(backup) { _fun00002_ip = 1126; continue _fun00001 }
 1103:
            sizing = kiloes.ZgXDsL;
            backup = {};
            backup['domain'] = echoed;
            backup = output.bind(result)(sizing, backup);
            _fun00002_ip = 1166; continue _fun00001;
 1126:
            sizing = kiloes.haA+X1;
            kiloes = {};
            source = ctrled.replace;
            update = ':';
            echoed = '';
            echoed = source.bind(ctrled)(update, echoed);
            kiloes['protocol'] = echoed;
            backup = output.bind(result)(sizing, kiloes);
 1166:
            romeon['children'] = backup;
            romeon = yankee.bind(tangon)(foxtra, romeon);
            verify['label'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['extraContent'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();