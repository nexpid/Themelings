// app/modules/masked_link/components/native/MaskedLinkModal.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot2 = golf;
    tango = tango.ScrollView;
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 250;
    verify['maxHeight'] = offset;
    tango['linkCalloutContainer'] = verify;
    verify = {};
    offset = 3;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    verify['borderRadius'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_FLOATING;
    verify['backgroundColor'] = offset;
    tango['emphasis'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/masked_link/components/native/MaskedLinkModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: MaskedLinkModal
        _fun104654: for(var _fun104654_ip = 0; ; ) switch(_fun104654_ip) {
 0:
            entity = argFoo;
            verify = entity.url;
            options = entity.trustUrl;
            backup = entity.isProtocol;
            golf = entity.onConfirm;
            oscar = entity.onCancel;
            entity = _closure1_slot6;
            tango = undefined;
            foxtrot = entity.bind(tango)();
            yankee = _closure1_slot0;
            report = _closure1_slot1;
            entity = 4;
            entity = report[entity];
            zulu = yankee.bind(tango)(entity);
            mike = zulu.useModalState;
            entity = {};
            entity['url'] = verify;
            entity['trustUrl'] = options;
            entity['onConfirm'] = golf;
            entity['onCancel'] = oscar;
            entity = mike.bind(zulu)(entity);
            control = entity.protocol;
            echo = entity.hostname;
            lima = entity.theRestOfTheUrl;
            result = entity.shouldTrustUrl;
            var _closure2_slot0 = result;
            mike = entity.setShouldTrustUrl;
            var _closure2_slot1 = mike;
            options = entity.handleConfirm;
            verify = entity.handleCancel;
            zulu = _closure1_slot4;
            offset = 5;
            entity = report[offset];
            entity = yankee.bind(tango)(entity);
            mike = entity.AlertModal;
            entity = {};
            update = 6;
            oscar = report[update];
            oscar = yankee.bind(tango)(oscar);
            golf = oscar.intl;
            oscar = golf.string;
            report = report[update];
            report = yankee.bind(tango)(report);
            report = report.t;
            report = report.3w1QGh;
            report = oscar.bind(golf)(report);
            entity['title'] = report;
            golf = _closure1_slot0;
            oscar = _closure1_slot1;
            report = oscar[update];
            report = golf.bind(tango)(report);
            romeo = report.intl;
            if(backup) { _fun104654_ip = 281; continue _fun104654 }
 249:
            yankee = romeo.string;
            report = oscar[update];
            report = golf.bind(tango)(report);
            report = report.t;
            report = report.soRxRU;
            report = yankee.bind(romeo)(report);
            _fun104654_ip = 323; continue _fun104654;
 281:
            yankee = romeo.format;
            oscar = oscar[update];
            oscar = golf.bind(tango)(oscar);
            oscar = oscar.t;
            golf = oscar.aCYv19;
            oscar = {};
            golf = yankee.bind(romeo)(golf, oscar);
            oscar = golf.toString;
            report = oscar.bind(golf)();
 323:
            entity['content'] = report;
            golf = _closure1_slot5;
            romeo = _closure1_slot0;
            yankee = _closure1_slot1;
            report = 7;
            report = yankee[report];
            report = romeo.bind(tango)(report);
            oscar = report.AlertActions;
            report = {};
            sizing = _closure1_slot4;
            yankee = yankee[offset];
            yankee = romeo.bind(tango)(yankee);
            romeo = yankee.AlertActionButton;
            yankee = {};
            source = 'primary';
            yankee['variant'] = source;
            yankee['onPress'] = options;
            source = _closure1_slot0;
            options = _closure1_slot1;
            vacuum = options[update];
            vacuum = source.bind(tango)(vacuum);
            sequence = vacuum.intl;
            vacuum = sequence.string;
            options = options[update];
            options = source.bind(tango)(options);
            source = options.t;
            if(backup) { _fun104654_ip = 449; continue _fun104654 }
 436:
            options = source.NcJfJC;
            options = vacuum.bind(sequence)(options);
            _fun104654_ip = 460; continue _fun104654;
 449:
            source = source.COq6kp;
            options = vacuum.bind(sequence)(source);
 460:
            yankee['text'] = options;
            options = 'confirm';
            yankee = sizing.bind(tango)(romeo, yankee, options);
            options = new Array(2);
            options[0] = yankee;
            source = _closure1_slot4;
            romeo = _closure1_slot0;
            yankee = _closure1_slot1;
            offset = yankee[offset];
            offset = romeo.bind(tango)(offset);
            sizing = offset.AlertActionButton;
            offset = {};
            offset['onPress'] = verify;
            verify = 'secondary';
            offset['variant'] = verify;
            verify = yankee[update];
            verify = romeo.bind(tango)(verify);
            sequence = verify.intl;
            vacuum = sequence.string;
            verify = yankee[update];
            verify = romeo.bind(tango)(verify);
            verify = verify.t;
            verify = verify./g10LC;
            verify = vacuum.bind(sequence)(verify);
            offset['text'] = verify;
            verify = 'cancel';
            verify = source.bind(tango)(sizing, offset, verify);
            options[1] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['actions'] = report;
            golf = _closure1_slot5;
            report = 8;
            report = yankee[report];
            report = romeo.bind(tango)(report);
            oscar = report.Stack;
            report = {};
            options = 16;
            report['spacing'] = options;
            offset = _closure1_slot2;
            options = {};
            verify = foxtrot.emphasis;
            options['style'] = verify;
            verify = 9;
            sizing = yankee[verify];
            sizing = romeo.bind(tango)(sizing);
            sequence = sizing.FormRow;
            vacuum = {'start': true, 'end': true};
            record = _closure1_slot3;
            config = {};
            foxtrot = foxtrot.linkCalloutContainer;
            config['style'] = foxtrot;
            sizing = 10;
            foxtrot = yankee[sizing];
            foxtrot = romeo.bind(tango)(foxtrot);
            papa = foxtrot.Text;
            context = {};
            whiskey = 'text-md/normal';
            context['variant'] = whiskey;
            yankee = yankee[sizing];
            yankee = romeo.bind(tango)(yankee);
            romeo = yankee.Text;
            yankee = {};
            foxtrot = whiskey;
            if(!backup) { _fun104654_ip = 748; continue _fun104654 }
 744:
            foxtrot = 'text-md/semibold';
 748:
            yankee['variant'] = foxtrot;
            sierra = 'text-muted';
            foxtrot = sierra;
            if(!backup) { _fun104654_ip = 770; continue _fun104654 }
 764:
            foxtrot = 'text-normal';
 770:
            yankee['color'] = foxtrot;
            foxtrot = new Array(2);
            foxtrot[0] = control;
            target = '//';
            foxtrot[1] = target;
            yankee['children'] = foxtrot;
            yankee = golf.bind(tango)(romeo, yankee);
            target = new Array(3);
            target[0] = yankee;
            foxtrot = _closure1_slot4;
            romeo = _closure1_slot0;
            yankee = _closure1_slot1;
            yankee = yankee[sizing];
            yankee = romeo.bind(tango)(yankee);
            romeo = yankee.Text;
            yankee = {};
            status = 'text-md/semibold';
            if(!backup) { _fun104654_ip = 848; continue _fun104654 }
 845:
            status = whiskey;
 848:
            yankee['variant'] = status;
            status = 'text-normal';
            if(!backup) { _fun104654_ip = 864; continue _fun104654 }
 861:
            status = sierra;
 864:
            yankee['color'] = status;
            yankee['children'] = echo;
            yankee = foxtrot.bind(tango)(romeo, yankee);
            target[1] = yankee;
            yankee = _closure1_slot4;
            foxtrot = _closure1_slot0;
            romeo = _closure1_slot1;
            status = romeo[sizing];
            status = foxtrot.bind(tango)(status);
            sierra = status.Text;
            status = {'variant': 'text-md/normal', 'color': 'text-muted'};
            status['children'] = lima;
            status = yankee.bind(tango)(sierra, status);
            target[2] = status;
            context['children'] = target;
            context = golf.bind(tango)(papa, context);
            config['children'] = context;
            config = source.bind(tango)(record, config);
            vacuum['label'] = config;
            vacuum = source.bind(tango)(sequence, vacuum);
            options['children'] = vacuum;
            offset = source.bind(tango)(offset, options);
            options = new Array(2);
            options[0] = offset;
            verify = romeo[verify];
            verify = foxtrot.bind(tango)(verify);
            offset = verify.FormCheckboxRow;
            verify = {'start': true, 'end': true};
            verify['selected'] = result;
            output = function() { // Original name: onPress
                zulu = _closure2_slot1;
                entity = _closure2_slot0;
                mike = !entity;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            verify['onPress'] = output;
            romeo = romeo[sizing];
            romeo = foxtrot.bind(tango)(romeo);
            foxtrot = romeo.Text;
            romeo = {};
            sizing = 'text-md/medium';
            romeo['variant'] = sizing;
            sizing = _closure1_slot0;
            kilo = _closure1_slot1;
            output = kilo[update];
            output = sizing.bind(tango)(output);
            result = output.intl;
            output = result.format;
            kilo = kilo[update];
            kilo = sizing.bind(tango)(kilo);
            kilo = kilo.t;
            if(backup) { _fun104654_ip = 1114; continue _fun104654 }
 1093:
            sizing = kilo.ZgXDsL;
            backup = {};
            backup['domain'] = echo;
            backup = output.bind(result)(sizing, backup);
            _fun104654_ip = 1152; continue _fun104654;
 1114:
            sizing = kilo.haA+X1;
            kilo = {};
            source = control.replace;
            update = ':';
            echo = '';
            echo = source.bind(control)(update, echo);
            kilo['protocol'] = echo;
            backup = output.bind(result)(sizing, kilo);
 1152:
            romeo['children'] = backup;
            romeo = yankee.bind(tango)(foxtrot, romeo);
            verify['label'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[1] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['extraContent'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();