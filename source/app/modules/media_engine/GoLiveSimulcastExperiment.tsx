// app/modules/media_engine/GoLiveSimulcastExperiment.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    entity = global;
    options = entity.Object;
    tango = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(options)(zulu, entity, mike);
    entity = 0;
    mike = oscar[entity];
    entity = undefined;
    verify = report.bind(entity)(mike);
    options = verify.createExperiment;
    mike = {'kind': 'user', 'id': '2024-10_golive_simulcast', 'label': 'GoLive Simulcast'};
    tango = {'simulcastEnabled': false, 'lqStreamBitrate': 0};
    mike['defaultConfig'] = tango;
    yankee = {'id': 1, 'label': 'Simulcast'};
    tango = 1;
    offset = {'simulcastEnabled': true, 'lqStreamBitrate': 1500000};
    yankee['config'] = offset;
    offset = new Array(2);
    offset[0] = yankee;
    yankee = {'id': 2, 'label': 'Simulcast, no pacer for LQ'};
    romeo = {'simulcastEnabled': true, 'lqStreamBitrate': 1500000, 'workerExperimentString': 'bandwidth_estimation/trendline-window-duration-3750,robust-estimator/worker-lq-no-pacer'};
    yankee['config'] = romeo;
    offset[1] = yankee;
    mike['treatments'] = offset;
    mike = options.bind(verify)(mike);
    var _closure1_slot0 = mike;
    mike = {};
    options = function() { // Original name: getConfig
        tango = _closure1_slot0;
        zulu = tango.getCurrentConfig;
        mike = {};
        entity = 'getConfig';
        mike['location'] = entity;
        entity = {};
        report = false;
        entity['autoTrackExposure'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike['getConfig'] = options;
    options = function() { // Original name: simulcastEnabled
        tango = _closure1_slot0;
        zulu = tango.getCurrentConfig;
        mike = {};
        entity = 'simulcastEnabled';
        mike['location'] = entity;
        entity = {};
        report = true;
        entity['autoTrackExposure'] = report;
        entity = zulu.bind(tango)(mike, entity);
        entity = entity.simulcastEnabled;
        return entity;
    };
    mike['simulcastEnabled'] = options;
    golf = function() { // Original name: workerExperimentString
        tango = _closure1_slot0;
        zulu = tango.getCurrentConfig;
        mike = {};
        entity = 'workerExperimentString';
        mike['location'] = entity;
        entity = {};
        report = false;
        entity['autoTrackExposure'] = report;
        entity = zulu.bind(tango)(mike, entity);
        entity = entity.workerExperimentString;
        return entity;
    };
    mike['workerExperimentString'] = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/media_engine/GoLiveSimulcastExperiment.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();