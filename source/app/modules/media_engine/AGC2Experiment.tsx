// app/modules/media_engine/AGC2Experiment.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var6 = dependencyMap;
    var1 = global;
    var7 = var1.Object;
    var4 = var7.defineProperty;
    var2 = {};
    var1 = true;
    var2['value'] = var1;
    var1 = '__esModule';
    var1 = var4.bind(var7)(var3, var1, var2);
    var1 = 0;
    var2 = var6[var1];
    var1 = undefined;
    var8 = var5.bind(var1)(var2);
    var7 = var8.createExperiment;
    var2 = {'kind': 'user', 'id': '2025-07_agc2', 'label': 'WebRTC AGC2'};
    var4 = {};
    var9 = false;
    var4['useAGC2'] = var9;
    var2['defaultConfig'] = var4;
    var10 = {'id': 1, 'label': 'WebRTC defaults'};
    var4 = 1;
    var9 = {'useAGC2': true, 'enableAnalog': false, 'enableDigital': true, 'headroom_db': 5, 'max_gain_db': 50, 'initial_gain_db': 15, 'max_gain_change_db_per_second': 6, 'max_output_noise_level_dbfs': 4294967246, 'fixed_gain_db': 0};
    var10['config'] = var9;
    var9 = new Array(1);
    var9[0] = var10;
    var2['treatments'] = var9;
    var2 = var7.bind(var8)(var2);
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/media_engine/AGC2Experiment.tsx';
    var4 = var5.bind(var6)(var4);
    var3['default'] = var2;
    return var1;
})();