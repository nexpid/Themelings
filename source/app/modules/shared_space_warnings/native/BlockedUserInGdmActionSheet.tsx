// app/modules/shared_space_warnings/native/BlockedUserInGdmActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    report = golfie[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(report);
    var _closure1_slot3 = michal;
    michal = 1;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.Image;
    var _closure1_slot4 = report;
    michal = michal.View;
    var _closure1_slot5 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = yankee.bind(entity)(michal);
    var _closure1_slot6 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = yankee.bind(entity)(michal);
    var _closure1_slot7 = michal;
    michal = 4;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.BlockWarningEngagements;
    var _closure1_slot8 = report;
    michal = michal.GdmWarningMedium;
    var _closure1_slot9 = michal;
    michal = 5;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.AnalyticEvents;
    var _closure1_slot10 = michal;
    michal = 6;
    report = golfie[michal];
    report = oscard.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot11 = report;
    report = golfie[michal];
    report = oscard.bind(entity)(report);
    report = report.Fragment;
    var _closure1_slot12 = report;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.jsxs;
    var _closure1_slot13 = michal;
    michal = 7;
    michal = golfie[michal];
    option = oscard.bind(entity)(michal);
    report = option.createStyles;
    michal = {};
    verify = {};
    offset = 8;
    romeon = golfie[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_12;
    verify['paddingTop'] = romeon;
    romeon = golfie[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['gap'] = romeon;
    romeon = 'center';
    verify['textAlign'] = romeon;
    michal['container'] = verify;
    verify = {'alignSelf': 'center', 'width': 73, 'height': 86};
    michal['headerImage'] = verify;
    verify = {'textAlign': 'center', 'alignSelf': 'center'};
    michal['title'] = verify;
    verify = {'textAlign': 'center', 'alignSelf': 'center'};
    michal['description'] = verify;
    verify = {};
    foxtra = golfie[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    verify['paddingVertical'] = foxtra;
    michal['tableGroup'] = verify;
    verify = {};
    foxtra = golfie[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['paddingVertical'] = foxtra;
    verify['gap'] = offset;
    michal['buttonGroup'] = verify;
    verify = {};
    verify['gap'] = offset;
    michal['buttons'] = verify;
    verify = {};
    verify['textAlign'] = romeon;
    offset = golfie[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingHorizontal'] = offset;
    michal['footer'] = verify;
    verify = {'display': 'flex', 'justifyContent': 'center', 'alignItems': 'center', 'minWidth': 32};
    michal['icon'] = verify;
    michal = report.bind(option)(michal);
    var _closure1_slot14 = michal;
    michal = function(argFoo) { // Original name: getUserCalloutRowText
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.calledOutUserIds;
            golfie = entity.totalUsers;
            michal = entity.guildId;
            var _closure2_slot0 = michal;
            entity = entity.channelId;
            var _closure2_slot1 = entity;
            zuuluu = new Array(0);
            yankee = 0;
            foxtra = zuuluu;
            romeon = oscard;
            entity = arraySpread(foxtra, romeon, yankee);
            michal = zuuluu.map;
            entity = function(argFoo) {
                zuuluu = _closure1_slot7;
                michal = zuuluu.getUser;
                entity = argFoo;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            var _closure2_slot2 = entity;
            entity = function(argFoo) { // Original name: renderUsername
                tangon = _closure1_slot11;
                michal = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 9;
                entity = golfie[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.Text;
                entity = {};
                oscard = 'text-md/semibold';
                entity['variant'] = oscard;
                oscard = _closure1_slot1;
                report = 10;
                report = golfie[report];
                verify = oscard.bind(zuuluu)(report);
                option = verify.getName;
                golfie = _closure2_slot0;
                oscard = _closure2_slot1;
                report = argFoo;
                report = option.bind(verify)(golfie, oscard, report);
                entity['children'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            var _closure2_slot3 = entity;
            entity = 4;
            if(!(!(golfie >= entity))) { _fun00002_ip = 371; continue _fun00001 }
 93:
            entity = 3;
            if(!(entity !== golfie)) { _fun00002_ip = 280; continue _fun00001 }
 103:
            entity = 2;
            if(!(entity !== golfie)) { _fun00002_ip = 189; continue _fun00001 }
 110:
            report = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 11;
            zuuluu = verify[entity];
            michal = undefined;
            zuuluu = report.bind(michal)(zuuluu);
            tangon = zuuluu.intl;
            zuuluu = tangon.format;
            entity = verify[entity];
            entity = report.bind(michal)(entity);
            entity = entity.t;
            michal = entity.4WHCtr;
            entity = {};
            report = function() { // Original name: usernameHook
                zuuluu = _closure2_slot3;
                michal = _closure2_slot2;
                entity = 0;
                michal = michal[entity];
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity['usernameHook'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            _fun00002_ip = 278; continue _fun00001;
 189:
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            michal = 11;
            tangon = offset[michal];
            zuuluu = undefined;
            tangon = verify.bind(zuuluu)(tangon);
            report = tangon.intl;
            tangon = report.format;
            michal = offset[michal];
            michal = verify.bind(zuuluu)(michal);
            michal = michal.t;
            zuuluu = michal.veV4IC;
            michal = {};
            verify = function() { // Original name: usernameHook1
                zuuluu = _closure2_slot3;
                michal = _closure2_slot2;
                entity = 0;
                michal = michal[entity];
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal['usernameHook1'] = verify;
            verify = function() { // Original name: usernameHook2
                zuuluu = _closure2_slot3;
                michal = _closure2_slot2;
                entity = 1;
                michal = michal[entity];
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal['usernameHook2'] = verify;
            entity = tangon.bind(report)(zuuluu, michal);
 278:
            _fun00002_ip = 369; continue _fun00001;
 280:
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            michal = 11;
            tangon = offset[michal];
            zuuluu = undefined;
            tangon = verify.bind(zuuluu)(tangon);
            report = tangon.intl;
            tangon = report.format;
            michal = offset[michal];
            michal = verify.bind(zuuluu)(michal);
            michal = michal.t;
            zuuluu = michal.67ZE+/;
            michal = {};
            verify = function() { // Original name: usernameHook1
                zuuluu = _closure2_slot3;
                michal = _closure2_slot2;
                entity = 0;
                michal = michal[entity];
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal['usernameHook1'] = verify;
            verify = function() { // Original name: usernameHook2
                zuuluu = _closure2_slot3;
                michal = _closure2_slot2;
                entity = 1;
                michal = michal[entity];
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal['usernameHook2'] = verify;
            entity = tangon.bind(report)(zuuluu, michal);
 369:
            _fun00002_ip = 476; continue _fun00001;
 371:
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            michal = 11;
            tangon = offset[michal];
            zuuluu = undefined;
            tangon = verify.bind(zuuluu)(tangon);
            report = tangon.intl;
            tangon = report.format;
            michal = offset[michal];
            michal = verify.bind(zuuluu)(michal);
            michal = michal.t;
            zuuluu = michal.qfo6KS;
            michal = {};
            verify = function() { // Original name: usernameHook1
                zuuluu = _closure2_slot3;
                michal = _closure2_slot2;
                entity = 0;
                michal = michal[entity];
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal['usernameHook1'] = verify;
            option = function() { // Original name: usernameHook2
                zuuluu = _closure2_slot3;
                michal = _closure2_slot2;
                entity = 1;
                michal = michal[entity];
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal['usernameHook2'] = option;
            oscard = oscard.length;
            oscard = golfie - oscard;
            michal['numberOfOtherUsers'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 476:
            return entity;
        }
    };
    var _closure1_slot15 = michal;
    report = function(argFoo) { // Original name: UserCalloutAvatars
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            zuuluu = argFoo;
            michal = zuuluu.userIds;
            var _closure2_slot0 = michal;
            offset = zuuluu.guildId;
            report = _closure1_slot0;
            golfie = _closure1_slot2;
            zuuluu = 12;
            zuuluu = golfie[zuuluu];
            oscard = undefined;
            yankee = report.bind(oscard)(zuuluu);
            verify = yankee.useStateFromStoresArray;
            zuuluu = _closure1_slot7;
            tangon = new Array(1);
            tangon[0] = zuuluu;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            entity = function() {
                zuuluu = _closure2_slot0;
                michal = zuuluu.map;
                entity = function(argFoo) {
                    zuuluu = _closure1_slot7;
                    michal = zuuluu.getUser;
                    entity = argFoo;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            tangon = verify.bind(yankee)(tangon, entity, zuuluu);
            zuuluu = tangon.filter;
            entity = 13;
            entity = golfie[entity];
            entity = report.bind(oscard)(entity);
            entity = entity.isNotNullish;
            romeon = zuuluu.bind(tangon)(entity);
            zuuluu = michal.length;
            entity = 1;
            if(!(entity !== zuuluu)) { _fun00004_ip = 201; continue _fun00003 }
 125:
            tangon = _closure1_slot11;
            golfie = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 16;
            entity = verify[entity];
            entity = golfie.bind(oscard)(entity);
            zuuluu = entity.FacepileGroupDMAvatar;
            entity = {};
            entity['users'] = romeon;
            report = 14;
            report = verify[report];
            report = golfie.bind(oscard)(report);
            report = report.AvatarSizes;
            report = report.REFRESH_MEDIUM_32;
            entity['size'] = report;
            entity = tangon.bind(oscard)(zuuluu, entity);
            _fun00004_ip = 351; continue _fun00003;
 201:
            tangon = _closure1_slot7;
            zuuluu = tangon.getUser;
            yankee = 0;
            michal = michal[yankee];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = null;
            if(!(michal == zuuluu)) { _fun00004_ip = 268; continue _fun00003 }
 228:
            tangon = _closure1_slot11;
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            michal = 15;
            michal = report[michal];
            michal = zuuluu.bind(oscard)(michal);
            zuuluu = michal.UserIcon;
            michal = {};
            michal = tangon.bind(oscard)(zuuluu, michal);
            _fun00004_ip = 348; continue _fun00003;
 268:
            report = _closure1_slot11;
            tangon = _closure1_slot1;
            verify = _closure1_slot2;
            golfie = 14;
            zuuluu = verify[golfie];
            tangon = tangon.bind(oscard)(zuuluu);
            zuuluu = {};
            yankee = romeon[yankee];
            zuuluu['user'] = yankee;
            zuuluu['guildId'] = offset;
            option = _closure1_slot0;
            golfie = verify[golfie];
            golfie = option.bind(oscard)(golfie);
            golfie = golfie.AvatarSizes;
            golfie = golfie.REFRESH_MEDIUM_32;
            zuuluu['size'] = golfie;
            golfie = true;
            zuuluu['aria-hidden'] = golfie;
            michal = report.bind(oscard)(tangon, zuuluu);
 348:
            entity = michal;
 351:
            return entity;
        }
    };
    var _closure1_slot16 = report;
    report = function(argFoo) { // Original name: BlockedUserInGDMDescription
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            foxtra = entity.numOfBlockedUsers;
            backup = entity.numOfIgnoredUsers;
            michal = 0;
            entity = foxtra > michal;
            michal = backup > michal;
            if(!entity) { _fun00006_ip = 34; continue _fun00005 }
 28:
            if(michal) { _fun00006_ip = 370; continue _fun00005 }
 34:
            if(entity) { _fun00006_ip = 209; continue _fun00005 }
 40:
            entity = null;
            if(!michal) { _fun00006_ip = 204; continue _fun00005 }
 48:
            report = _closure1_slot13;
            tangon = _closure1_slot12;
            zuuluu = {};
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            golfie = 11;
            oscard = yankee[golfie];
            michal = undefined;
            oscard = offset.bind(michal)(oscard);
            romeon = oscard.intl;
            verify = romeon.format;
            oscard = yankee[golfie];
            oscard = offset.bind(michal)(oscard);
            oscard = oscard.t;
            option = oscard.6IRwub;
            oscard = {};
            oscard['n'] = backup;
            option = verify.bind(romeon)(option, oscard);
            oscard = new Array(3);
            oscard[0] = option;
            option = '\n';
            oscard[1] = option;
            option = yankee[golfie];
            option = offset.bind(michal)(option);
            verify = option.intl;
            option = verify.string;
            golfie = yankee[golfie];
            golfie = offset.bind(michal)(golfie);
            golfie = golfie.t;
            golfie = golfie.6AKLRk;
            golfie = option.bind(verify)(golfie);
            oscard[2] = golfie;
            zuuluu['children'] = oscard;
            entity = report.bind(michal)(tangon, zuuluu);
 204:
            _fun00006_ip = 365; continue _fun00005;
 209:
            report = _closure1_slot13;
            tangon = _closure1_slot12;
            zuuluu = {};
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            golfie = 11;
            oscard = yankee[golfie];
            michal = undefined;
            oscard = offset.bind(michal)(oscard);
            romeon = oscard.intl;
            verify = romeon.format;
            oscard = yankee[golfie];
            oscard = offset.bind(michal)(oscard);
            oscard = oscard.t;
            option = oscard.iKtixc;
            oscard = {};
            oscard['n'] = foxtra;
            option = verify.bind(romeon)(option, oscard);
            oscard = new Array(3);
            oscard[0] = option;
            option = '\n';
            oscard[1] = option;
            option = yankee[golfie];
            option = offset.bind(michal)(option);
            verify = option.intl;
            option = verify.string;
            golfie = yankee[golfie];
            golfie = offset.bind(michal)(golfie);
            golfie = golfie.t;
            golfie = golfie.SN1hrq;
            golfie = option.bind(verify)(golfie);
            oscard[2] = golfie;
            zuuluu['children'] = oscard;
            entity = report.bind(michal)(tangon, zuuluu);
 365:
            _fun00006_ip = 518; continue _fun00005;
 370:
            report = _closure1_slot13;
            tangon = _closure1_slot12;
            zuuluu = {};
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            golfie = 11;
            oscard = yankee[golfie];
            michal = undefined;
            oscard = offset.bind(michal)(oscard);
            verify = oscard.intl;
            option = verify.string;
            oscard = yankee[golfie];
            oscard = offset.bind(michal)(oscard);
            oscard = oscard.t;
            oscard = oscard.xbRNIy;
            option = option.bind(verify)(oscard);
            oscard = new Array(3);
            oscard[0] = option;
            option = '\n';
            oscard[1] = option;
            option = yankee[golfie];
            option = offset.bind(michal)(option);
            verify = option.intl;
            option = verify.string;
            golfie = yankee[golfie];
            golfie = offset.bind(michal)(golfie);
            golfie = golfie.t;
            golfie = golfie.Bp2/np;
            golfie = option.bind(verify)(golfie);
            oscard[2] = golfie;
            zuuluu['children'] = oscard;
            entity = report.bind(michal)(tangon, zuuluu);
 518:
            return entity;
        }
    };
    var _closure1_slot17 = report;
    report = 28;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/shared_space_warnings/native/BlockedUserInGdmActionSheet.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: BlockedUserInGdmActionSheet
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            michal = argFoo;
            entity = michal.channelId;
            var _closure2_slot0 = entity;
            ctrled = michal.blockedUserIds;
            var _closure2_slot1 = ctrled;
            source = michal.ignoredUserIds;
            var _closure2_slot2 = source;
            michal = _closure1_slot14;
            tangon = undefined;
            offset = michal.bind(tangon)();
            var _closure2_slot3 = offset;
            oscard = _closure1_slot3;
            report = oscard.useEffect;
            zuuluu = new Array(3);
            zuuluu[0] = entity;
            zuuluu[1] = ctrled;
            zuuluu[2] = source;
            michal = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 19;
                michal = michal[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                tangon = report.track;
                michal = _closure1_slot10;
                zuuluu = michal.GDM_BLOCKED_USER_WARNING_VIEWED;
                michal = {};
                option = _closure2_slot0;
                michal['channel_id'] = option;
                golfie = _closure1_slot9;
                golfie = golfie.ACTION_SHEET;
                michal['warning_medium'] = golfie;
                golfie = _closure2_slot2;
                michal['ignored_user_ids'] = golfie;
                oscard = _closure2_slot1;
                michal['blocked_user_ids'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            michal = report.bind(oscard)(michal, zuuluu);
            michal = {};
            michal['channelId'] = entity;
            michal['blockedUserIds'] = ctrled;
            michal['ignoredUserIds'] = source;
            option = michal.channelId;
            entity = michal.blockedUserIds;
            michal = michal.ignoredUserIds;
            report = _closure1_slot6;
            zuuluu = report.getChannel;
            golfie = zuuluu.bind(report)(option);
            report = entity.length;
            zuuluu = 0;
            report = report > zuuluu;
            oscard = michal.length;
            oscard = oscard > zuuluu;
            verify = {};
            sizing = _closure1_slot11;
            kiloes = _closure1_slot0;
            yankee = _closure1_slot2;
            romeon = 17;
            romeon = yankee[romeon];
            romeon = kiloes.bind(tangon)(romeon);
            foxtra = romeon.CircleCheckIcon;
            romeon = {};
            romeon = sizing.bind(tangon)(foxtra, romeon);
            verify['icon'] = romeon;
            output = 11;
            romeon = yankee[output];
            romeon = kiloes.bind(tangon)(romeon);
            echoed = romeon.intl;
            foxtra = echoed.string;
            romeon = yankee[output];
            romeon = kiloes.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.RIMw5+;
            romeon = foxtra.bind(echoed)(romeon);
            verify['label'] = romeon;
            echoed = new Array(2);
            echoed[0] = verify;
            verify = {};
            romeon = 18;
            romeon = yankee[romeon];
            romeon = kiloes.bind(tangon)(romeon);
            foxtra = romeon.CircleInformationIcon;
            romeon = {};
            romeon = sizing.bind(tangon)(foxtra, romeon);
            verify['icon'] = romeon;
            romeon = yankee[output];
            romeon = kiloes.bind(tangon)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            yankee = yankee[output];
            yankee = kiloes.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.bejNWF;
            yankee = romeon.bind(foxtra)(yankee);
            verify['label'] = yankee;
            echoed[1] = verify;
            if(!report) { _fun00008_ip = 356; continue _fun00007 }
 350:
            if(oscard) { _fun00008_ip = 542; continue _fun00007 }
 356:
            yankee = new Array(0);
            if(report) { _fun00008_ip = 391; continue _fun00007 }
 363:
            cntext = yankee;
            record = michal;
            config = 0;
            oscard = arraySpread(cntext, record, config);
            verify = yankee.slice;
            oscard = 2;
            kiloes = verify.bind(yankee)(zuuluu, oscard);
            _fun00008_ip = 417; continue _fun00007;
 391:
            cntext = yankee;
            record = entity;
            config = 0;
            oscard = arraySpread(cntext, record, config);
            verify = yankee.slice;
            oscard = 2;
            kiloes = verify.bind(yankee)(zuuluu, oscard);
 417:
            if(report) { _fun00008_ip = 427; continue _fun00007 }
 420:
            foxtra = michal.length;
            _fun00008_ip = 432; continue _fun00007;
 427:
            foxtra = entity.length;
 432:
            oscard = echoed.unshift;
            report = {};
            sizing = _closure1_slot11;
            yankee = _closure1_slot16;
            verify = {};
            verify['userIds'] = kiloes;
            romeon = null;
            vacuum = romeon == golfie;
            update = undefined;
            if(vacuum) { _fun00008_ip = 471; continue _fun00007 }
 466:
            update = golfie.guild_id;
 471:
            verify['guildId'] = update;
            verify = sizing.bind(tangon)(yankee, verify);
            report['icon'] = verify;
            yankee = _closure1_slot15;
            verify = {};
            verify['calledOutUserIds'] = kiloes;
            verify['totalUsers'] = foxtra;
            verify['channelId'] = option;
            foxtra = romeon == golfie;
            romeon = undefined;
            if(foxtra) { _fun00008_ip = 519; continue _fun00007 }
 514:
            romeon = golfie.guild_id;
 519:
            verify['guildId'] = romeon;
            verify = yankee.bind(tangon)(verify);
            report['label'] = verify;
            report = oscard.bind(echoed)(report);
            _fun00008_ip = 692; continue _fun00007;
 542:
            verify = new Array(0);
            cntext = verify;
            record = entity;
            config = 0;
            config = arraySpread(cntext, record, config);
            cntext = verify;
            record = michal;
            entity = arraySpread(cntext, record, config);
            michal = verify.slice;
            entity = 2;
            yankee = michal.bind(verify)(zuuluu, entity);
            michal = echoed.unshift;
            entity = {};
            romeon = _closure1_slot11;
            report = _closure1_slot16;
            zuuluu = {};
            zuuluu['userIds'] = yankee;
            oscard = null;
            kiloes = oscard == golfie;
            foxtra = undefined;
            if(kiloes) { _fun00008_ip = 621; continue _fun00007 }
 616:
            foxtra = golfie.guild_id;
 621:
            zuuluu['guildId'] = foxtra;
            zuuluu = romeon.bind(tangon)(report, zuuluu);
            entity['icon'] = zuuluu;
            report = _closure1_slot15;
            zuuluu = {};
            zuuluu['calledOutUserIds'] = yankee;
            verify = verify.length;
            zuuluu['totalUsers'] = verify;
            zuuluu['channelId'] = option;
            option = oscard == golfie;
            oscard = undefined;
            if(option) { _fun00008_ip = 674; continue _fun00007 }
 669:
            oscard = golfie.guild_id;
 674:
            zuuluu['guildId'] = oscard;
            zuuluu = report.bind(tangon)(zuuluu);
            entity['label'] = zuuluu;
            entity = michal.bind(echoed)(entity);
 692:
            zuuluu = _closure1_slot11;
            sizing = _closure1_slot0;
            foxtra = _closure1_slot2;
            entity = 20;
            entity = foxtra[entity];
            entity = sizing.bind(tangon)(entity);
            michal = entity.ActionSheet;
            entity = {};
            report = true;
            entity['startExpanded'] = report;
            golfie = _closure1_slot13;
            oscard = _closure1_slot5;
            report = {};
            option = offset.container;
            report['style'] = option;
            verify = _closure1_slot4;
            option = {};
            romeon = _closure1_slot1;
            yankee = 21;
            yankee = foxtra[yankee];
            yankee = romeon.bind(tangon)(yankee);
            option['source'] = yankee;
            yankee = offset.headerImage;
            option['style'] = yankee;
            verify = zuuluu.bind(tangon)(verify, option);
            option = new Array(4);
            option[0] = verify;
            verify = {};
            romeon = 9;
            yankee = foxtra[romeon];
            yankee = sizing.bind(tangon)(yankee);
            kiloes = yankee.Text;
            yankee = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
            update = offset.title;
            yankee['style'] = update;
            update = foxtra[output];
            update = sizing.bind(tangon)(update);
            sequen = update.intl;
            vacuum = sequen.string;
            update = foxtra[output];
            update = sizing.bind(tangon)(update);
            update = update.t;
            update = update.mwJJ+f;
            update = vacuum.bind(sequen)(update);
            yankee['children'] = update;
            kiloes = zuuluu.bind(tangon)(kiloes, yankee);
            yankee = new Array(2);
            yankee[0] = kiloes;
            romeon = foxtra[romeon];
            romeon = sizing.bind(tangon)(romeon);
            kiloes = romeon.Text;
            romeon = {'variant': 'text-md/medium', 'color': 'header-secondary'};
            update = offset.description;
            romeon['style'] = update;
            update = _closure1_slot17;
            result = {};
            ctrled = ctrled.length;
            result['numOfBlockedUsers'] = ctrled;
            source = source.length;
            result['numOfIgnoredUsers'] = source;
            result = zuuluu.bind(tangon)(update, result);
            romeon['children'] = result;
            romeon = zuuluu.bind(tangon)(kiloes, romeon);
            yankee[1] = romeon;
            verify['children'] = yankee;
            verify = golfie.bind(tangon)(oscard, verify);
            option[1] = verify;
            verify = {};
            yankee = offset.tableGroup;
            verify['style'] = yankee;
            yankee = 22;
            yankee = foxtra[yankee];
            yankee = sizing.bind(tangon)(yankee);
            romeon = yankee.TableRowGroup;
            yankee = {};
            result = echoed.map;
            kiloes = function(argFoo, argBar) {
                entity = argFoo;
                option = entity.icon;
                entity = entity.label;
                report = _closure1_slot11;
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 23;
                michal = tangon[michal];
                tangon = undefined;
                michal = zuuluu.bind(tangon)(michal);
                zuuluu = michal.TableRow;
                michal = {};
                golfie = _closure1_slot5;
                oscard = {};
                verify = _closure2_slot3;
                verify = verify.icon;
                oscard['style'] = verify;
                oscard['children'] = option;
                oscard = report.bind(tangon)(golfie, oscard);
                michal['icon'] = oscard;
                michal['label'] = entity;
                entity = argBar;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            kiloes = result.bind(echoed)(kiloes);
            yankee['children'] = kiloes;
            yankee = zuuluu.bind(tangon)(romeon, yankee);
            verify['children'] = yankee;
            verify = zuuluu.bind(tangon)(oscard, verify);
            option[2] = verify;
            verify = {};
            offset = offset.buttons;
            verify['style'] = offset;
            yankee = 24;
            offset = foxtra[yankee];
            offset = sizing.bind(tangon)(offset);
            romeon = offset.Button;
            offset = {};
            kiloes = 'lg';
            offset['size'] = kiloes;
            kiloes = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 25;
                michal = tangon[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                michal = report.hideActionSheet;
                michal = michal.bind(report)();
                report = _closure1_slot0;
                michal = 26;
                michal = tangon[michal];
                report = report.bind(entity)(michal);
                michal = report.dismissGdmBlockedUserWarning;
                option = _closure2_slot0;
                michal = michal.bind(report)(option);
                michal = 27;
                michal = tangon[michal];
                verify = zuuluu.bind(entity)(michal);
                report = verify.closePrivateChannel;
                michal = true;
                michal = report.bind(verify)(option, michal, michal);
                michal = 19;
                michal = tangon[michal];
                report = zuuluu.bind(entity)(michal);
                tangon = report.track;
                michal = _closure1_slot10;
                zuuluu = michal.GDM_BLOCKED_USER_WARNING_ENGAGEMENT;
                michal = {};
                verify = _closure1_slot8;
                verify = verify.CLICK_TO_LEAVE;
                michal['action'] = verify;
                michal['channel_id'] = option;
                golfie = _closure1_slot9;
                golfie = golfie.ACTION_SHEET;
                michal['warning_medium'] = golfie;
                golfie = _closure2_slot2;
                michal['ignored_user_ids'] = golfie;
                oscard = _closure2_slot1;
                michal['blocked_user_ids'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            offset['onPress'] = kiloes;
            kiloes = foxtra[output];
            kiloes = sizing.bind(tangon)(kiloes);
            echoed = kiloes.intl;
            result = echoed.string;
            kiloes = foxtra[output];
            kiloes = sizing.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.I4q1kJ;
            kiloes = result.bind(echoed)(kiloes);
            offset['text'] = kiloes;
            romeon = zuuluu.bind(tangon)(romeon, offset);
            offset = new Array(2);
            offset[0] = romeon;
            yankee = foxtra[yankee];
            yankee = sizing.bind(tangon)(yankee);
            romeon = yankee.Button;
            yankee = {'size': 'lg', 'variant': 'secondary'};
            backup = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 25;
                michal = tangon[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                michal = report.hideActionSheet;
                michal = michal.bind(report)();
                report = _closure1_slot0;
                michal = 26;
                michal = tangon[michal];
                report = report.bind(entity)(michal);
                michal = report.dismissGdmBlockedUserWarning;
                option = _closure2_slot0;
                michal = michal.bind(report)(option);
                michal = 19;
                michal = tangon[michal];
                report = zuuluu.bind(entity)(michal);
                tangon = report.track;
                michal = _closure1_slot10;
                zuuluu = michal.GDM_BLOCKED_USER_WARNING_ENGAGEMENT;
                michal = {};
                verify = _closure1_slot8;
                verify = verify.CLICK_TO_STAY;
                michal['action'] = verify;
                michal['channel_id'] = option;
                golfie = _closure1_slot9;
                golfie = golfie.ACTION_SHEET;
                michal['warning_medium'] = golfie;
                golfie = _closure2_slot2;
                michal['ignored_user_ids'] = golfie;
                oscard = _closure2_slot1;
                michal['blocked_user_ids'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            yankee['onPress'] = backup;
            backup = foxtra[output];
            backup = sizing.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = foxtra[output];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.DRJhmZ;
            foxtra = backup.bind(kiloes)(foxtra);
            yankee['text'] = foxtra;
            yankee = zuuluu.bind(tangon)(romeon, yankee);
            offset[1] = yankee;
            verify['children'] = offset;
            verify = golfie.bind(tangon)(oscard, verify);
            option[3] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['getUserCalloutRowText'] = michal;
    return entity;
})();