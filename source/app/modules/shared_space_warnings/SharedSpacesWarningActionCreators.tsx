// app/modules/shared_space_warnings/SharedSpacesWarningActionCreators.tsx
export default (function(argFoo, argBar, _, __, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    tango = tango.setDismissalTimeForChannel;
    var _closure1_slot2 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Endpoints;
    var _closure1_slot3 = tango;
    tango = 3;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/shared_space_warnings/SharedSpacesWarningActionCreators.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: dismissGdmBlockedUserWarning
        oscar = argFoo;
        entity = _closure1_slot2;
        zulu = undefined;
        entity = entity.bind(zulu)(oscar);
        mike = _closure1_slot0;
        report = _closure1_slot1;
        entity = 2;
        entity = report[entity];
        entity = mike.bind(zulu)(entity);
        zulu = entity.HTTP;
        mike = zulu.post;
        entity = {};
        report = _closure1_slot3;
        tango = report.CHANNEL_BLOCKED_USER_WARNING_ACK;
        tango = tango.bind(report)(oscar);
        entity['url'] = tango;
        tango = false;
        entity['rejectWithError'] = tango;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    zulu['dismissGdmBlockedUserWarning'] = mike;
    return entity;
})();