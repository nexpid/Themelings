// app/modules/suspicious_downloads/native/SuspiciousDownloadActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Image;
    var _closure1_slot3 = golf;
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    yankee = 'center';
    tango = {'alignSelf': 'center', 'height': 105, 'marginBottom': 4294967280};
    golf['image'] = tango;
    offset = {};
    tango = 12;
    offset['padding'] = tango;
    golf['container'] = offset;
    offset = {'textAlign': 'center', 'marginTop': 20, 'marginBottom': 8};
    golf['title'] = offset;
    offset = {};
    offset['textAlign'] = yankee;
    golf['body'] = offset;
    offset = {'marginTop': 18, 'height': 40};
    golf['button'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/suspicious_downloads/native/SuspiciousDownloadActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        entity = argFoo;
        entity = entity.href;
        var _closure2_slot0 = entity;
        entity = _closure1_slot7;
        tango = undefined;
        sizing = entity.bind(tango)();
        zulu = _closure1_slot5;
        mike = _closure1_slot3;
        entity = {};
        oscar = sizing.image;
        entity['style'] = oscar;
        result = _closure1_slot0;
        foxtrot = _closure1_slot2;
        oscar = 4;
        oscar = foxtrot[oscar];
        oscar = result.bind(tango)(oscar);
        entity['source'] = oscar;
        oscar = zulu.bind(tango)(mike, entity);
        romeo = _closure1_slot1;
        entity = 5;
        entity = foxtrot[entity];
        entity = romeo.bind(tango)(entity);
        entity = entity.bind(tango)();
        offset = entity.bottom;
        entity = 6;
        entity = foxtrot[entity];
        entity = result.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        golf = true;
        entity['startExpanded'] = golf;
        entity['header'] = oscar;
        golf = _closure1_slot6;
        oscar = _closure1_slot4;
        report = {};
        verify = sizing.container;
        options = new Array(2);
        options[0] = verify;
        verify = {};
        verify['paddingBottom'] = offset;
        options[1] = verify;
        report['style'] = options;
        verify = 7;
        options = foxtrot[verify];
        options = result.bind(tango)(options);
        offset = options.Text;
        options = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        yankee = sizing.title;
        options['style'] = yankee;
        kilo = 8;
        yankee = foxtrot[kilo];
        yankee = result.bind(tango)(yankee);
        echo = yankee.intl;
        output = echo.string;
        yankee = foxtrot[kilo];
        yankee = result.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.XtDo9f;
        yankee = output.bind(echo)(yankee);
        options['children'] = yankee;
        offset = zulu.bind(tango)(offset, options);
        options = new Array(4);
        options[0] = offset;
        verify = foxtrot[verify];
        verify = result.bind(tango)(verify);
        offset = verify.Text;
        verify = {};
        yankee = sizing.body;
        verify['style'] = yankee;
        yankee = 'text-md/medium';
        verify['variant'] = yankee;
        yankee = foxtrot[kilo];
        yankee = result.bind(tango)(yankee);
        echo = yankee.intl;
        output = echo.string;
        yankee = foxtrot[kilo];
        yankee = result.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.L9yFkp;
        yankee = output.bind(echo)(yankee);
        verify['children'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[1] = verify;
        yankee = 9;
        verify = foxtrot[yankee];
        offset = romeo.bind(tango)(verify);
        verify = {};
        output = sizing.button;
        verify['style'] = output;
        output = foxtrot[kilo];
        output = result.bind(tango)(output);
        update = output.intl;
        echo = update.string;
        output = foxtrot[kilo];
        output = result.bind(tango)(output);
        output = output.t;
        output = output.j7Vi2t;
        output = echo.bind(update)(output);
        verify['text'] = output;
        output = function() { // Original name: onPress
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 10;
            mike = mike[entity];
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            entity = mike.hideActionSheet;
            entity = entity.bind(mike)();
            return entity;
        };
        verify['onPress'] = output;
        output = foxtrot[yankee];
        output = romeo.bind(tango)(output);
        output = output.Colors;
        output = output.BRAND;
        verify['color'] = output;
        output = foxtrot[yankee];
        output = romeo.bind(tango)(output);
        output = output.Sizes;
        output = output.SMALL;
        verify['size'] = output;
        verify = zulu.bind(tango)(offset, verify);
        options[2] = verify;
        verify = foxtrot[yankee];
        offset = romeo.bind(tango)(verify);
        verify = {};
        sizing = sizing.button;
        verify['style'] = sizing;
        sizing = foxtrot[kilo];
        sizing = result.bind(tango)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kilo = foxtrot[kilo];
        kilo = result.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo./bHu8/;
        kilo = sizing.bind(output)(kilo);
        verify['text'] = kilo;
        backup = function() { // Original name: onPress
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            entity = 10;
            mike = tango[entity];
            entity = undefined;
            report = zulu.bind(entity)(mike);
            mike = report.hideActionSheet;
            mike = mike.bind(report)();
            mike = 11;
            mike = tango[mike];
            tango = zulu.bind(entity)(mike);
            zulu = _closure2_slot0;
            mike = true;
            mike = tango.bind(entity)(zulu, mike);
            return entity;
        };
        verify['onPress'] = backup;
        backup = foxtrot[yankee];
        backup = romeo.bind(tango)(backup);
        backup = backup.Colors;
        backup = backup.TRANSPARENT;
        verify['color'] = backup;
        yankee = foxtrot[yankee];
        yankee = romeo.bind(tango)(yankee);
        yankee = yankee.Sizes;
        yankee = yankee.SMALL;
        verify['size'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[3] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();