// app/modules/suspicious_downloads/native/SuspiciousDownloadActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot3 = golfie;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    yankee = 'center';
    tangon = {'alignSelf': 'center', 'height': 105, 'marginBottom': 4294967280};
    golfie['image'] = tangon;
    offset = {};
    tangon = 12;
    offset['padding'] = tangon;
    golfie['container'] = offset;
    offset = {'textAlign': 'center', 'marginTop': 20, 'marginBottom': 8};
    golfie['title'] = offset;
    offset = {};
    offset['textAlign'] = yankee;
    golfie['body'] = offset;
    offset = {'marginTop': 18, 'height': 40};
    golfie['button'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/suspicious_downloads/native/SuspiciousDownloadActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        entity = argFoo;
        entity = entity.href;
        var _closure2_slot0 = entity;
        entity = _closure1_slot7;
        tangon = undefined;
        sizing = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        michal = _closure1_slot3;
        entity = {};
        oscard = sizing.image;
        entity['style'] = oscard;
        result = _closure1_slot0;
        foxtra = _closure1_slot2;
        oscard = 4;
        oscard = foxtra[oscard];
        oscard = result.bind(tangon)(oscard);
        entity['source'] = oscard;
        oscard = zuuluu.bind(tangon)(michal, entity);
        romeon = _closure1_slot1;
        entity = 5;
        entity = foxtra[entity];
        entity = romeon.bind(tangon)(entity);
        entity = entity.bind(tangon)();
        offset = entity.bottom;
        entity = 6;
        entity = foxtra[entity];
        entity = result.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        golfie = true;
        entity['startExpanded'] = golfie;
        entity['header'] = oscard;
        golfie = _closure1_slot6;
        oscard = _closure1_slot4;
        report = {};
        verify = sizing.container;
        option = new Array(2);
        option[0] = verify;
        verify = {};
        verify['paddingBottom'] = offset;
        option[1] = verify;
        report['style'] = option;
        verify = 7;
        option = foxtra[verify];
        option = result.bind(tangon)(option);
        offset = option.Text;
        option = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        yankee = sizing.title;
        option['style'] = yankee;
        kiloes = 8;
        yankee = foxtra[kiloes];
        yankee = result.bind(tangon)(yankee);
        echoed = yankee.intl;
        output = echoed.string;
        yankee = foxtra[kiloes];
        yankee = result.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.XtDo9f;
        yankee = output.bind(echoed)(yankee);
        option['children'] = yankee;
        offset = zuuluu.bind(tangon)(offset, option);
        option = new Array(4);
        option[0] = offset;
        verify = foxtra[verify];
        verify = result.bind(tangon)(verify);
        offset = verify.Text;
        verify = {};
        yankee = sizing.body;
        verify['style'] = yankee;
        yankee = 'text-md/medium';
        verify['variant'] = yankee;
        yankee = foxtra[kiloes];
        yankee = result.bind(tangon)(yankee);
        echoed = yankee.intl;
        output = echoed.string;
        yankee = foxtra[kiloes];
        yankee = result.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.L9yFkp;
        yankee = output.bind(echoed)(yankee);
        verify['children'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[1] = verify;
        yankee = 9;
        verify = foxtra[yankee];
        offset = romeon.bind(tangon)(verify);
        verify = {};
        output = sizing.button;
        verify['style'] = output;
        output = foxtra[kiloes];
        output = result.bind(tangon)(output);
        update = output.intl;
        echoed = update.string;
        output = foxtra[kiloes];
        output = result.bind(tangon)(output);
        output = output.t;
        output = output.j7Vi2t;
        output = echoed.bind(update)(output);
        verify['text'] = output;
        output = function() { // Original name: onPress
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 10;
            michal = michal[entity];
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            entity = michal.hideActionSheet;
            entity = entity.bind(michal)();
            return entity;
        };
        verify['onPress'] = output;
        output = foxtra[yankee];
        output = romeon.bind(tangon)(output);
        output = output.Colors;
        output = output.BRAND;
        verify['color'] = output;
        output = foxtra[yankee];
        output = romeon.bind(tangon)(output);
        output = output.Sizes;
        output = output.SMALL;
        verify['size'] = output;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[2] = verify;
        verify = foxtra[yankee];
        offset = romeon.bind(tangon)(verify);
        verify = {};
        sizing = sizing.button;
        verify['style'] = sizing;
        sizing = foxtra[kiloes];
        sizing = result.bind(tangon)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kiloes = foxtra[kiloes];
        kiloes = result.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes./bHu8/;
        kiloes = sizing.bind(output)(kiloes);
        verify['text'] = kiloes;
        backup = function() { // Original name: onPress
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            entity = 10;
            michal = tangon[entity];
            entity = undefined;
            report = zuuluu.bind(entity)(michal);
            michal = report.hideActionSheet;
            michal = michal.bind(report)();
            michal = 11;
            michal = tangon[michal];
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = _closure2_slot0;
            michal = true;
            michal = tangon.bind(entity)(zuuluu, michal);
            return entity;
        };
        verify['onPress'] = backup;
        backup = foxtra[yankee];
        backup = romeon.bind(tangon)(backup);
        backup = backup.Colors;
        backup = backup.TRANSPARENT;
        verify['color'] = backup;
        yankee = foxtra[yankee];
        yankee = romeon.bind(tangon)(yankee);
        yankee = yankee.Sizes;
        yankee = yankee.SMALL;
        verify['size'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[3] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();