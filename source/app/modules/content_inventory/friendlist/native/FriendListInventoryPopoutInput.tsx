// app/modules/content_inventory/friendlist/native/FriendListInventoryPopoutInput.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    options = tango.bind(entity)(golf);
    var _closure1_slot4 = options;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.TextInput;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ThemeTypes;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    offset = report.bind(entity)(tango);
    verify = offset.createStyles;
    golf = {};
    tango = {'backgroundColor': 'rgba(0,0,0,0.1)', 'height': 84, 'position': 'absolute', 'bottom': 0, 'left': 0, 'right': 0, 'paddingHorizontal': 24, 'paddingTop': 8};
    golf['inputWrapper'] = tango;
    yankee = {};
    tango = 'transparent';
    yankee['borderColor'] = tango;
    tango = 6;
    foxtrot = oscar[tango];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.CHAT_INPUT_CONTAINER_BACKGROUND;
    yankee['backgroundColor'] = foxtrot;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    tango = tango.radii;
    tango = tango.xl;
    yankee['borderRadius'] = tango;
    tango = 12;
    yankee['padding'] = tango;
    golf['input'] = yankee;
    golf = verify.bind(offset)(golf);
    var _closure1_slot8 = golf;
    golf = {};
    verify = 'function FriendListInventoryPopoutInputTsx1(){const{disabled}=this.__closure;return disabled?-84:0;}';
    golf['code'] = verify;
    var _closure1_slot9 = golf;
    golf = {};
    verify = 'function FriendListInventoryPopoutInputTsx2(){const{withTiming,animatedValue}=this.__closure;return{bottom:withTiming(animatedValue.get(),{duration:300})};}';
    golf['code'] = verify;
    var _closure1_slot10 = golf;
    golf = options.forwardRef;
    mike = function(argFoo, argBar) {
        _fun115091: for(var _fun115091_ip = 0; ; ) switch(_fun115091_ip) {
 0:
            entity = argFoo;
            sizing = entity.user;
            mike = entity.onSubmit;
            var _closure2_slot0 = mike;
            yankee = entity.disabled;
            tango = undefined;
            if(!(yankee === tango)) { _fun115091_ip = 33; continue _fun115091 }
 31:
            yankee = false;
 33:
            var _closure2_slot1 = yankee;
            var _closure2_slot2 = tango;
            var _closure2_slot3 = tango;
            var _closure2_slot4 = tango;
            entity = _closure1_slot8;
            kilo = entity.bind(tango)();
            report = _closure1_slot4;
            mike = report.useState;
            entity = '';
            zulu = mike.bind(report)(entity);
            mike = _closure1_slot3;
            entity = 2;
            mike = mike.bind(tango)(zulu, entity);
            entity = 0;
            backup = mike[entity];
            _closure2_slot2 = backup;
            entity = 1;
            entity = mike[entity];
            _closure2_slot3 = entity;
            zulu = report.useEffect;
            mike = new Array(1);
            mike[0] = yankee;
            entity = function() {
                zulu = _closure2_slot3;
                entity = undefined;
                mike = '';
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            entity = zulu.bind(report)(entity, mike);
            foxtrot = _closure1_slot0;
            output = _closure1_slot2;
            report = 7;
            entity = output[report];
            zulu = foxtrot.bind(tango)(entity);
            mike = zulu.useDerivedValue;
            entity = function() { // Original name: C
                _fun115093: for(var _fun115093_ip = 0; ; ) switch(_fun115093_ip) {
 0:
                    mike = _closure2_slot1;
                    entity = 0;
                    if(!mike) { _fun115093_ip = 18; continue _fun115093 }
 12:
                    entity = -84;
 18:
                    return entity;
                }
            };
            oscar = {};
            oscar['disabled'] = yankee;
            entity['__closure'] = oscar;
            oscar = 7327983059320.0;
            entity['__workletHash'] = oscar;
            oscar = _closure1_slot9;
            entity['__initData'] = oscar;
            golf = mike.bind(zulu)(entity);
            _closure2_slot4 = golf;
            entity = output[report];
            zulu = foxtrot.bind(tango)(entity);
            mike = zulu.useAnimatedStyle;
            entity = function() { // Original name: I
                entity = {};
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                mike = 8;
                zulu = zulu[mike];
                mike = undefined;
                report = tango.bind(mike)(zulu);
                tango = report.withTiming;
                zulu = _closure2_slot4;
                mike = zulu.get;
                zulu = mike.bind(zulu)();
                mike = {};
                oscar = 300;
                mike['duration'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                entity['bottom'] = mike;
                return entity;
            };
            oscar = {};
            options = 8;
            options = output[options];
            options = foxtrot.bind(tango)(options);
            options = options.withTiming;
            oscar['withTiming'] = options;
            oscar['animatedValue'] = golf;
            entity['__closure'] = oscar;
            oscar = 149765023669.0;
            entity['__workletHash'] = oscar;
            oscar = _closure1_slot10;
            entity['__initData'] = oscar;
            offset = mike.bind(zulu)(entity);
            zulu = _closure1_slot7;
            entity = 9;
            entity = output[entity];
            entity = foxtrot.bind(tango)(entity);
            mike = entity.ThemeContextProvider;
            entity = {};
            oscar = _closure1_slot6;
            oscar = oscar.DARK;
            entity['theme'] = oscar;
            options = _closure1_slot1;
            report = output[report];
            report = options.bind(tango)(report);
            oscar = report.View;
            report = {};
            result = kilo.inputWrapper;
            golf = new Array(2);
            golf[0] = result;
            golf[1] = offset;
            report['style'] = golf;
            golf = 10;
            golf = output[golf];
            options = options.bind(tango)(golf);
            golf = {};
            offset = kilo.inputWrapper;
            golf['style'] = offset;
            offset = _closure1_slot5;
            verify = {};
            kilo = kilo.input;
            verify['style'] = kilo;
            kilo = argBar;
            verify['ref'] = kilo;
            verify['value'] = backup;
            backup = function(argFoo) { // Original name: onChangeText
                zulu = _closure2_slot3;
                entity = undefined;
                mike = argFoo;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            verify['onChangeText'] = backup;
            romeo = function() { // Original name: onSubmitEditing
                zulu = _closure2_slot0;
                mike = _closure2_slot2;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            verify['onSubmitEditing'] = romeo;
            romeo = false;
            verify['autoFocus'] = romeo;
            romeo = 11;
            backup = output[romeo];
            backup = foxtrot.bind(tango)(backup);
            kilo = backup.intl;
            backup = kilo.formatToPlainString;
            romeo = output[romeo];
            romeo = foxtrot.bind(tango)(romeo);
            romeo = romeo.t;
            foxtrot = romeo.0ZQw/f;
            romeo = {};
            sizing = sizing.globalName;
            romeo['name'] = sizing;
            romeo = backup.bind(kilo)(foxtrot, romeo);
            verify['placeholder'] = romeo;
            romeo = 'send';
            verify['returnKeyType'] = romeo;
            romeo = 'off';
            verify['autoComplete'] = romeo;
            romeo = 'black';
            verify['placeholderTextColor'] = romeo;
            romeo = !yankee;
            verify['editable'] = romeo;
            yankee = !yankee;
            verify['selectTextOnFocus'] = yankee;
            verify = zulu.bind(tango)(offset, verify);
            golf['children'] = verify;
            golf = zulu.bind(tango)(options, golf);
            report['children'] = golf;
            report = zulu.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = golf.bind(options)(mike);
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/content_inventory/friendlist/native/FriendListInventoryPopoutInput.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();