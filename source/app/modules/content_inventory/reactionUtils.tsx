// app/modules/content_inventory/reactionUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    zulu = argFred;
    tango = argPlugh;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = tango;
    entity = global;
    golf = entity.Object;
    oscar = golf.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = oscar.bind(golf)(zulu, entity, report);
    entity = 2;
    report = tango[entity];
    tango = argBar;
    entity = undefined;
    oscar = tango.bind(entity)(report);
    report = oscar.fileFinishedImporting;
    tango = 'modules/content_inventory/reactionUtils.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: sendMessageWithEmbed
        mike = argFoo;
        entity = mike.channel;
        offset = mike.content;
        verify = mike.entry;
        romeo = mike.whenReady;
        golf = mike.doNotNotifyOnError;
        tango = _closure1_slot0;
        options = _closure1_slot1;
        mike = 0;
        mike = options[mike];
        zulu = undefined;
        report = tango.bind(zulu)(mike);
        mike = report.parse;
        foxtrot = mike.bind(report)(entity, offset);
        mike = 1;
        mike = options[mike];
        tango = tango.bind(zulu)(mike);
        zulu = tango.sendMessage;
        backup = entity.id;
        entity = {};
        options = {};
        options['unverified_content'] = verify;
        entity['contentInventoryEntry'] = options;
        entity['doNotNotifyOnError'] = golf;
        kilo = tango;
        yankee = entity;
        entity = kilo[zulu](backup, foxtrot, romeo, yankee, offset);
        return entity;
    };
    zulu['sendMessageWithEmbed'] = tango;
    mike = function(argFoo) { // Original name: sendMessageWithoutContentInventoryEntry
        mike = argFoo;
        entity = mike.channel;
        verify = mike.content;
        yankee = mike.whenReady;
        golf = mike.doNotNotifyOnError;
        tango = _closure1_slot0;
        options = _closure1_slot1;
        mike = 0;
        mike = options[mike];
        zulu = undefined;
        report = tango.bind(zulu)(mike);
        mike = report.parse;
        romeo = mike.bind(report)(entity, verify);
        mike = 1;
        mike = options[mike];
        tango = tango.bind(zulu)(mike);
        zulu = tango.sendMessage;
        foxtrot = entity.id;
        entity = {};
        entity['doNotNotifyOnError'] = golf;
        backup = tango;
        offset = entity;
        entity = backup[zulu](foxtrot, romeo, yankee, offset, verify);
        return entity;
    };
    zulu['sendMessageWithoutContentInventoryEntry'] = mike;
    return entity;
})();