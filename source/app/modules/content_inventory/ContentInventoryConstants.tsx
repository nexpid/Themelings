// app/modules/content_inventory/ContentInventoryConstants.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    zuuluu = argFre;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    golfie = {};
    entity = 'global feed';
    golfie['GLOBAL_FEED'] = entity;
    entity = 'game profile feed';
    golfie['GAME_PROFILE_FEED'] = entity;
    oscard = {};
    yankee = 1;
    oscard['GUILD_MEMBER_LIST'] = yankee;
    entity = 'GUILD_MEMBER_LIST';
    oscard[yankee] = entity;
    report = {};
    offset = 2;
    report['CARD_POPOUT_OPEN'] = offset;
    entity = 'CARD_POPOUT_OPEN';
    report[offset] = entity;
    verify = 3;
    report['REACTION_EMOJI_REACT_SENT'] = verify;
    entity = 'REACTION_EMOJI_REACT_SENT';
    report[verify] = entity;
    option = 4;
    report['DM_REACTION_MESSAGE_SENT'] = option;
    entity = 'DM_REACTION_MESSAGE_SENT';
    report[option] = entity;
    michal = 5;
    report['CHANNEL_REACTION_MESSAGE_SENT'] = michal;
    entity = 'CHANNEL_REACTION_MESSAGE_SENT';
    report[michal] = entity;
    michal = 6;
    report['VOICE_CHANNEL_JOINED'] = michal;
    entity = 'VOICE_CHANNEL_JOINED';
    report[michal] = entity;
    tangon = 7;
    report['VOICE_CHANNEL_PREVIEWED'] = tangon;
    entity = 'VOICE_CHANNEL_PREVIEWED';
    report[tangon] = entity;
    michal = 8;
    report['OPENED_GAME_PROFILE'] = michal;
    entity = 'OPENED_GAME_PROFILE';
    report[michal] = entity;
    michal = 9;
    report['COPIED_LEADERBOARD_ROW'] = michal;
    entity = 'COPIED_LEADERBOARD_ROW';
    report[michal] = entity;
    michal = {};
    michal['SPOTIFY'] = yankee;
    entity = 'SPOTIFY';
    michal[yankee] = entity;
    michal['CRUNCHYROLL'] = offset;
    entity = 'CRUNCHYROLL';
    michal[offset] = entity;
    michal['XBOX'] = verify;
    entity = 'XBOX';
    michal[verify] = entity;
    michal['PLAYSTATION'] = option;
    entity = 'PLAYSTATION';
    michal[option] = entity;
    option = argPlu;
    entity = 0;
    verify = option[entity];
    option = argBar;
    entity = undefined;
    offset = option.bind(entity)(verify);
    verify = offset.fileFinishedImporting;
    option = 'modules/content_inventory/ContentInventoryConstants.tsx';
    option = verify.bind(offset)(option);
    zuuluu['ContentInventoryFeedKey'] = golfie;
    zuuluu['ContentInventorySurfaceTypes'] = oscard;
    zuuluu['ContentInventoryInteractionTypes'] = report;
    report = 10000;
    zuuluu['FEED_OFF_BY_DEFAULT_ABOVE_MEMBER_COUNT'] = report;
    zuuluu['NEW_RELEASE_CUTOFF_DAYS'] = tangon;
    zuuluu['ContentInventoryEntryProviderTypes'] = michal;
    return entity;
})();