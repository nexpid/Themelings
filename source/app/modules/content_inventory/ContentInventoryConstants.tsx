// app/modules/content_inventory/ContentInventoryConstants.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    zulu = argFred;
    entity = global;
    report = entity.Object;
    tango = report.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(report)(zulu, entity, mike);
    golf = {};
    entity = 'global feed';
    golf['GLOBAL_FEED'] = entity;
    entity = 'game profile feed';
    golf['GAME_PROFILE_FEED'] = entity;
    oscar = {};
    yankee = 1;
    oscar['GUILD_MEMBER_LIST'] = yankee;
    entity = 'GUILD_MEMBER_LIST';
    oscar[yankee] = entity;
    report = {};
    offset = 2;
    report['CARD_POPOUT_OPEN'] = offset;
    entity = 'CARD_POPOUT_OPEN';
    report[offset] = entity;
    verify = 3;
    report['REACTION_EMOJI_REACT_SENT'] = verify;
    entity = 'REACTION_EMOJI_REACT_SENT';
    report[verify] = entity;
    options = 4;
    report['DM_REACTION_MESSAGE_SENT'] = options;
    entity = 'DM_REACTION_MESSAGE_SENT';
    report[options] = entity;
    mike = 5;
    report['CHANNEL_REACTION_MESSAGE_SENT'] = mike;
    entity = 'CHANNEL_REACTION_MESSAGE_SENT';
    report[mike] = entity;
    mike = 6;
    report['VOICE_CHANNEL_JOINED'] = mike;
    entity = 'VOICE_CHANNEL_JOINED';
    report[mike] = entity;
    tango = 7;
    report['VOICE_CHANNEL_PREVIEWED'] = tango;
    entity = 'VOICE_CHANNEL_PREVIEWED';
    report[tango] = entity;
    mike = 8;
    report['OPENED_GAME_PROFILE'] = mike;
    entity = 'OPENED_GAME_PROFILE';
    report[mike] = entity;
    mike = 9;
    report['COPIED_LEADERBOARD_ROW'] = mike;
    entity = 'COPIED_LEADERBOARD_ROW';
    report[mike] = entity;
    mike = {};
    mike['SPOTIFY'] = yankee;
    entity = 'SPOTIFY';
    mike[yankee] = entity;
    mike['CRUNCHYROLL'] = offset;
    entity = 'CRUNCHYROLL';
    mike[offset] = entity;
    mike['XBOX'] = verify;
    entity = 'XBOX';
    mike[verify] = entity;
    mike['PLAYSTATION'] = options;
    entity = 'PLAYSTATION';
    mike[options] = entity;
    options = argPlugh;
    entity = 0;
    verify = options[entity];
    options = argBar;
    entity = undefined;
    offset = options.bind(entity)(verify);
    verify = offset.fileFinishedImporting;
    options = 'modules/content_inventory/ContentInventoryConstants.tsx';
    options = verify.bind(offset)(options);
    zulu['ContentInventoryFeedKey'] = golf;
    zulu['ContentInventorySurfaceTypes'] = oscar;
    zulu['ContentInventoryInteractionTypes'] = report;
    report = 10000;
    zulu['FEED_OFF_BY_DEFAULT_ABOVE_MEMBER_COUNT'] = report;
    zulu['NEW_RELEASE_CUTOFF_DAYS'] = tango;
    zulu['ContentInventoryEntryProviderTypes'] = mike;
    return entity;
})();