// app/modules/voice_calls/native/action_sheet/VoiceFeedbackActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.FeedbackType;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = function() { // Original name: trackOpen
        tangon = _closure1_slot1;
        zuuluu = _closure1_slot2;
        entity = 4;
        zuuluu = zuuluu[entity];
        entity = undefined;
        report = tangon.bind(entity)(zuuluu);
        tangon = report.track;
        michal = _closure1_slot3;
        zuuluu = michal.OPEN_POPOUT;
        michal = {};
        oscard = 'Call Session Feedback';
        michal['type'] = oscard;
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    var _closure1_slot6 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/voice_calls/native/action_sheet/VoiceFeedbackActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: VoiceFeedbackActionSheet
        entity = argFoo;
        entity = entity.analyticsData;
        var _closure2_slot0 = entity;
        kiloes = _closure1_slot0;
        romeon = _closure1_slot2;
        entity = 5;
        entity = romeon[entity];
        tangon = undefined;
        zuuluu = kiloes.bind(tangon)(entity);
        michal = zuuluu.improperGetEnglishIntlMessageText;
        entity = 'CALL_FEEDBACK_OPTION_OTHER';
        golfie = michal.bind(zuuluu)(entity);
        entity = 6;
        entity = romeon[entity];
        zuuluu = kiloes.bind(tangon)(entity);
        michal = zuuluu.useCallSurveyRefreshExperiment;
        entity = {};
        option = 'VoiceFeedbackActionSheet';
        entity['location'] = option;
        entity = michal.bind(zuuluu)(entity);
        offset = entity.showVibesHoneypot;
        entity = 7;
        entity = romeon[entity];
        zuuluu = kiloes.bind(tangon)(entity);
        michal = zuuluu.useFeedbackPersistenceExperiment;
        entity = {};
        entity['location'] = option;
        entity = michal.bind(zuuluu)(entity);
        backup = entity.showMobileOptOuts;
        option = 8;
        entity = romeon[option];
        entity = kiloes.bind(tangon)(entity);
        zuuluu = entity.intl;
        michal = zuuluu.string;
        entity = romeon[option];
        entity = kiloes.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.Ss6tlZ;
        yankee = michal.bind(zuuluu)(entity);
        entity = romeon[option];
        entity = kiloes.bind(tangon)(entity);
        zuuluu = entity.intl;
        michal = zuuluu.string;
        entity = romeon[option];
        entity = kiloes.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.tLi4cX;
        foxtra = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot5;
        verify = _closure1_slot1;
        entity = 9;
        entity = romeon[entity];
        michal = verify.bind(tangon)(entity);
        entity = {};
        entity['headerLabel'] = yankee;
        yankee = true;
        entity['showHeaderCloseButton'] = yankee;
        backup = !backup;
        entity['hideDontShowAgainCheckbox'] = backup;
        entity['ratingsBodyLabel'] = foxtra;
        foxtra = romeon[option];
        foxtra = kiloes.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        option = romeon[option];
        option = kiloes.bind(tangon)(option);
        option = option.t;
        option = option.FJmoxM;
        option = foxtra.bind(backup)(option);
        entity['reasonsHeaderLabel'] = option;
        option = 10;
        option = romeon[option];
        verify = verify.bind(tangon)(option);
        option = {};
        option['isMobile'] = yankee;
        option['showVibesHoneypot'] = offset;
        option = verify.bind(tangon)(option);
        entity['reasons'] = option;
        option = new Array(1);
        option[0] = golfie;
        entity['feedbackReasons'] = option;
        entity['otherKey'] = golfie;
        oscard = _closure1_slot6;
        entity['trackOpen'] = oscard;
        report = function(argFoo) { // Original name: trackReport
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = argFoo;
                tangon = michal.rating;
                entity = michal.reason;
                report = michal.dontShowAgain;
                offset = michal.feedback;
                zuuluu = null;
                michal = zuuluu != entity;
                yankee = null;
                verify = null;
                if(!michal) { _fun00002_ip = 50; continue _fun00001 }
 40:
                yankee = entity.code;
                verify = entity.value;
 50:
                golfie = _closure1_slot1;
                oscard = _closure1_slot2;
                entity = 11;
                oscard = oscard[entity];
                entity = undefined;
                option = golfie.bind(entity)(oscard);
                oscard = _closure1_slot3;
                golfie = oscard.CALL_REPORT_PROBLEM;
                oscard = {};
                oscard['rating'] = tangon;
                oscard['reasonCode'] = yankee;
                oscard['reasonDescription'] = verify;
                yankee = zuuluu != offset;
                verify = '';
                if(!yankee) { _fun00002_ip = 116; continue _fun00001 }
 113:
                verify = offset;
 116:
                oscard['feedback'] = verify;
                verify = _closure2_slot0;
                oscard['analyticsData'] = verify;
                oscard = option.bind(entity)(golfie, oscard);
                if(!report) { _fun00002_ip = 200; continue _fun00001 }
 142:
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                report = 12;
                report = golfie[report];
                golfie = oscard.bind(entity)(report);
                oscard = golfie.processOptOut;
                report = {};
                option = _closure1_slot4;
                option = option.VOICE;
                report['feedbackType'] = option;
                option = 'VoiceFeedbackActionSheet';
                report['location'] = option;
                report = oscard.bind(golfie)(report);
 200:
                if(!(zuuluu != tangon)) { _fun00002_ip = 234; continue _fun00001 }
 204:
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 13;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.presentFeedbackSent;
                michal = michal.bind(zuuluu)();
 234:
                return entity;
            }
        };
        entity['trackReport'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();