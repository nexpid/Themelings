// app/modules/voice_calls/native/action_sheet/VoiceEmptyState.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    sizing = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = sizing;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    foxtrot = tango.Fonts;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 4;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    tango = {};
    offset = 'center';
    tango['justifyContent'] = offset;
    golf['container'] = tango;
    tango = 12;
    kilo = 16;
    offset = {'paddingHorizontal': 12, 'paddingTop': 16};
    golf['button'] = offset;
    offset = {};
    backup = 5;
    yankee = oscar[backup];
    echo = sizing.bind(entity)(yankee);
    result = foxtrot.DISPLAY_EXTRABOLD;
    yankee = 6;
    romeo = oscar[yankee];
    romeo = sizing.bind(entity)(romeo);
    romeo = romeo.colors;
    output = romeo.HEADER_PRIMARY;
    romeo = 18;
    source = echo.bind(entity)(result, output, romeo);
    control = offset;
    romeo = copyDataProperties(control, source);
    output = 'none';
    romeo = 'textTransform';
    offset[romeo] = output;
    output = 24;
    romeo = 'lineHeight';
    offset[romeo] = output;
    golf['emptyTitle'] = offset;
    offset = {};
    backup = oscar[backup];
    backup = sizing.bind(entity)(backup);
    foxtrot = foxtrot.PRIMARY_MEDIUM;
    yankee = oscar[yankee];
    yankee = sizing.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.HEADER_SECONDARY;
    source = backup.bind(entity)(foxtrot, yankee, kilo);
    control = offset;
    yankee = copyDataProperties(control, source);
    yankee = 20;
    offset[romeo] = yankee;
    romeo = '600';
    yankee = 'fontWeight';
    offset[yankee] = romeo;
    golf['emptyBody'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/voice_calls/native/action_sheet/VoiceEmptyState.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        entity = argFoo;
        offset = entity.channel;
        entity = _closure1_slot6;
        tango = undefined;
        verify = entity.bind(tango)();
        golf = _closure1_slot1;
        yankee = _closure1_slot2;
        entity = 7;
        entity = yankee[entity];
        entity = golf.bind(tango)(entity);
        entity = entity.bind(tango)();
        romeo = entity.bottom;
        zulu = _closure1_slot5;
        mike = _closure1_slot3;
        entity = {};
        options = verify.container;
        oscar = new Array(2);
        oscar[0] = options;
        options = {};
        options['paddingBottom'] = romeo;
        oscar[1] = options;
        entity['style'] = oscar;
        options = _closure1_slot4;
        kilo = _closure1_slot0;
        report = 8;
        report = yankee[report];
        report = kilo.bind(tango)(report);
        oscar = report.ThemedEmptyState;
        report = {};
        romeo = 9;
        foxtrot = yankee[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        sizing = foxtrot.intl;
        backup = sizing.string;
        foxtrot = yankee[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot./HABZm;
        foxtrot = backup.bind(sizing)(foxtrot);
        report['title'] = foxtrot;
        foxtrot = yankee[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.string;
        romeo = yankee[romeo];
        romeo = kilo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.5Jy2FR;
        romeo = foxtrot.bind(backup)(romeo);
        report['body'] = romeo;
        romeo = 10;
        foxtrot = yankee[romeo];
        foxtrot = golf.bind(tango)(foxtrot);
        report['lightSource'] = foxtrot;
        romeo = yankee[romeo];
        romeo = golf.bind(tango)(romeo);
        report['darkSource'] = romeo;
        romeo = verify.emptyTitle;
        report['titleStyle'] = romeo;
        romeo = verify.emptyBody;
        report['bodyStyle'] = romeo;
        romeo = {'marginBottom': 16, 'marginTop': 20};
        report['imageStyle'] = romeo;
        oscar = options.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = 11;
        oscar = yankee[oscar];
        golf = golf.bind(tango)(oscar);
        oscar = {};
        oscar['channel'] = offset;
        verify = verify.button;
        oscar['style'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();