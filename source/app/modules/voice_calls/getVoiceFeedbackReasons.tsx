// app/modules/voice_calls/getVoiceFeedbackReasons.tsx
export default (function(argFoo, argBar, _, __, ___, argFred, argPlugh) {
    oscar = argBar;
    zulu = argFred;
    report = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = report;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, mike);
    mike = {};
    entity = "I couldn't hear audio at all";
    mike['COULD_NOT_HEAR_AUDIO'] = entity;
    entity = 'Nobody could hear me';
    mike['NOBODY_COULD_HEAR_ME'] = entity;
    entity = 'Audio had echos or feedback';
    mike['AUDIO_ECHOS'] = entity;
    entity = 'Audio was robotic or distorted';
    mike['AUDIO_ROBOTIC'] = entity;
    entity = 'Audio cut in and out';
    mike['AUDIO_CUT'] = entity;
    entity = 'Volume was too low or high';
    mike['BAD_VOLUME'] = entity;
    entity = 'Background noise was too loud';
    mike['BACKGROUND_NOISE'] = entity;
    entity = 'Issues with speakerphone';
    mike['SPEAKERPHONE'] = entity;
    entity = 'Issues with headset/bluetooth';
    mike['HEADSET'] = entity;
    entity = 'Other';
    mike['OTHER'] = entity;
    var _closure1_slot2 = mike;
    entity = 1;
    report = report[entity];
    entity = undefined;
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/voice_calls/getVoiceFeedbackReasons.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: getVoiceFeedbackReasons
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zulu = {};
            options = _closure1_slot0;
            report = _closure1_slot1;
            yankee = 0;
            entity = report[yankee];
            offset = undefined;
            entity = options.bind(offset)(entity);
            oscar = entity.intl;
            tango = oscar.string;
            entity = report[yankee];
            entity = options.bind(offset)(entity);
            entity = entity.t;
            entity = entity.UqD/9f;
            entity = tango.bind(oscar)(entity);
            zulu['label'] = entity;
            entity = 2;
            zulu['code'] = entity;
            tango = _closure1_slot2;
            entity = tango.COULD_NOT_HEAR_AUDIO;
            zulu['value'] = entity;
            entity = new Array(7);
            entity[0] = zulu;
            zulu = {};
            oscar = report[yankee];
            oscar = options.bind(offset)(oscar);
            verify = oscar.intl;
            golf = verify.string;
            oscar = report[yankee];
            oscar = options.bind(offset)(oscar);
            oscar = oscar.t;
            oscar = oscar.DVEGuL;
            oscar = golf.bind(verify)(oscar);
            zulu['label'] = oscar;
            oscar = 3;
            zulu['code'] = oscar;
            oscar = tango.NOBODY_COULD_HEAR_ME;
            zulu['value'] = oscar;
            entity[1] = zulu;
            zulu = {};
            oscar = report[yankee];
            oscar = options.bind(offset)(oscar);
            verify = oscar.intl;
            golf = verify.string;
            oscar = report[yankee];
            oscar = options.bind(offset)(oscar);
            oscar = oscar.t;
            oscar = oscar.2nWcBw;
            oscar = golf.bind(verify)(oscar);
            zulu['label'] = oscar;
            oscar = 4;
            zulu['code'] = oscar;
            oscar = tango.AUDIO_ECHOS;
            zulu['value'] = oscar;
            entity[2] = zulu;
            zulu = {};
            oscar = report[yankee];
            oscar = options.bind(offset)(oscar);
            verify = oscar.intl;
            golf = verify.string;
            oscar = report[yankee];
            oscar = options.bind(offset)(oscar);
            oscar = oscar.t;
            oscar = oscar.K3E4Dw;
            oscar = golf.bind(verify)(oscar);
            zulu['label'] = oscar;
            oscar = 5;
            zulu['code'] = oscar;
            oscar = tango.AUDIO_ROBOTIC;
            zulu['value'] = oscar;
            entity[3] = zulu;
            zulu = {};
            oscar = report[yankee];
            oscar = options.bind(offset)(oscar);
            verify = oscar.intl;
            golf = verify.string;
            oscar = report[yankee];
            oscar = options.bind(offset)(oscar);
            oscar = oscar.t;
            oscar = oscar.Dpm2U1;
            oscar = golf.bind(verify)(oscar);
            zulu['label'] = oscar;
            oscar = 6;
            zulu['code'] = oscar;
            oscar = tango.AUDIO_CUT;
            zulu['value'] = oscar;
            entity[4] = zulu;
            zulu = {};
            oscar = report[yankee];
            oscar = options.bind(offset)(oscar);
            verify = oscar.intl;
            golf = verify.string;
            oscar = report[yankee];
            oscar = options.bind(offset)(oscar);
            oscar = oscar.t;
            oscar = oscar.kuGsi4;
            oscar = golf.bind(verify)(oscar);
            zulu['label'] = oscar;
            oscar = 7;
            zulu['code'] = oscar;
            oscar = tango.BAD_VOLUME;
            zulu['value'] = oscar;
            entity[5] = zulu;
            zulu = {};
            oscar = report[yankee];
            oscar = options.bind(offset)(oscar);
            golf = oscar.intl;
            oscar = golf.string;
            report = report[yankee];
            report = options.bind(offset)(report);
            report = report.t;
            report = report.PkiFCQ;
            report = oscar.bind(golf)(report);
            zulu['label'] = report;
            report = 8;
            zulu['code'] = report;
            tango = tango.BACKGROUND_NOISE;
            zulu['value'] = tango;
            entity[6] = zulu;
            zulu = argFoo;
            if(!zulu) { _fun00002_ip = 631; continue _fun00001 }
 540:
            tango = entity.push;
            zulu = {};
            options = _closure1_slot0;
            report = _closure1_slot1;
            oscar = report[yankee];
            oscar = options.bind(offset)(oscar);
            golf = oscar.intl;
            oscar = golf.string;
            report = report[yankee];
            report = options.bind(offset)(report);
            report = report.t;
            report = report.hvIDwc;
            report = oscar.bind(golf)(report);
            zulu['label'] = report;
            report = 9;
            zulu['code'] = report;
            report = _closure1_slot2;
            report = report.SPEAKERPHONE;
            zulu['value'] = report;
            zulu = tango.bind(entity)(zulu);
 631:
            tango = entity.push;
            zulu = {};
            verify = _closure1_slot0;
            oscar = _closure1_slot1;
            report = oscar[yankee];
            report = verify.bind(offset)(report);
            options = report.intl;
            golf = options.string;
            report = oscar[yankee];
            report = verify.bind(offset)(report);
            report = report.t;
            report = report.+gUm1t;
            report = golf.bind(options)(report);
            zulu['label'] = report;
            report = 10;
            zulu['code'] = report;
            report = _closure1_slot2;
            mike = report.HEADSET;
            zulu['value'] = mike;
            mike = {};
            golf = oscar[yankee];
            golf = verify.bind(offset)(golf);
            options = golf.intl;
            golf = options.string;
            oscar = oscar[yankee];
            oscar = verify.bind(offset)(oscar);
            oscar = oscar.t;
            oscar = oscar.emlT9/;
            oscar = golf.bind(options)(oscar);
            mike['label'] = oscar;
            oscar = 1;
            mike['code'] = oscar;
            report = report.OTHER;
            mike['value'] = report;
            mike = tango.bind(entity)(zulu, mike);
            return entity;
        }
    };
    zulu['default'] = tango;
    zulu['VoiceFeedbackReasonOption'] = mike;
    return entity;
})();