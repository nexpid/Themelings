// app/modules/voice_calls/getVoiceFeedbackReasons.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    report = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = report;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, michal);
    michal = {};
    entity = "I couldn't hear audio at all";
    michal['COULD_NOT_HEAR_AUDIO'] = entity;
    entity = 'Nobody could hear me';
    michal['NOBODY_COULD_HEAR_ME'] = entity;
    entity = 'Audio had echos or feedback';
    michal['AUDIO_ECHOS'] = entity;
    entity = 'Audio was robotic or distorted';
    michal['AUDIO_ROBOTIC'] = entity;
    entity = 'Audio cut in and out';
    michal['AUDIO_CUT'] = entity;
    entity = 'Volume was too low or high';
    michal['BAD_VOLUME'] = entity;
    entity = 'Background noise was too loud';
    michal['BACKGROUND_NOISE'] = entity;
    entity = 'Issues with speakerphone';
    michal['SPEAKERPHONE'] = entity;
    entity = 'Issues with headset/bluetooth';
    michal['HEADSET'] = entity;
    entity = 'Other';
    michal['OTHER'] = entity;
    var _closure1_slot2 = michal;
    entity = 1;
    report = report[entity];
    entity = undefined;
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/voice_calls/getVoiceFeedbackReasons.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: getVoiceFeedbackReasons
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = {};
            option = _closure1_slot0;
            report = _closure1_slot1;
            yankee = 0;
            entity = report[yankee];
            offset = undefined;
            entity = option.bind(offset)(entity);
            oscard = entity.intl;
            tangon = oscard.string;
            entity = report[yankee];
            entity = option.bind(offset)(entity);
            entity = entity.t;
            entity = entity.UqD/9f;
            entity = tangon.bind(oscard)(entity);
            zuuluu['label'] = entity;
            entity = 2;
            zuuluu['code'] = entity;
            tangon = _closure1_slot2;
            entity = tangon.COULD_NOT_HEAR_AUDIO;
            zuuluu['value'] = entity;
            entity = new Array(7);
            entity[0] = zuuluu;
            zuuluu = {};
            oscard = report[yankee];
            oscard = option.bind(offset)(oscard);
            verify = oscard.intl;
            golfie = verify.string;
            oscard = report[yankee];
            oscard = option.bind(offset)(oscard);
            oscard = oscard.t;
            oscard = oscard.DVEGuL;
            oscard = golfie.bind(verify)(oscard);
            zuuluu['label'] = oscard;
            oscard = 3;
            zuuluu['code'] = oscard;
            oscard = tangon.NOBODY_COULD_HEAR_ME;
            zuuluu['value'] = oscard;
            entity[1] = zuuluu;
            zuuluu = {};
            oscard = report[yankee];
            oscard = option.bind(offset)(oscard);
            verify = oscard.intl;
            golfie = verify.string;
            oscard = report[yankee];
            oscard = option.bind(offset)(oscard);
            oscard = oscard.t;
            oscard = oscard.2nWcBw;
            oscard = golfie.bind(verify)(oscard);
            zuuluu['label'] = oscard;
            oscard = 4;
            zuuluu['code'] = oscard;
            oscard = tangon.AUDIO_ECHOS;
            zuuluu['value'] = oscard;
            entity[2] = zuuluu;
            zuuluu = {};
            oscard = report[yankee];
            oscard = option.bind(offset)(oscard);
            verify = oscard.intl;
            golfie = verify.string;
            oscard = report[yankee];
            oscard = option.bind(offset)(oscard);
            oscard = oscard.t;
            oscard = oscard.K3E4Dw;
            oscard = golfie.bind(verify)(oscard);
            zuuluu['label'] = oscard;
            oscard = 5;
            zuuluu['code'] = oscard;
            oscard = tangon.AUDIO_ROBOTIC;
            zuuluu['value'] = oscard;
            entity[3] = zuuluu;
            zuuluu = {};
            oscard = report[yankee];
            oscard = option.bind(offset)(oscard);
            verify = oscard.intl;
            golfie = verify.string;
            oscard = report[yankee];
            oscard = option.bind(offset)(oscard);
            oscard = oscard.t;
            oscard = oscard.Dpm2U1;
            oscard = golfie.bind(verify)(oscard);
            zuuluu['label'] = oscard;
            oscard = 6;
            zuuluu['code'] = oscard;
            oscard = tangon.AUDIO_CUT;
            zuuluu['value'] = oscard;
            entity[4] = zuuluu;
            zuuluu = {};
            oscard = report[yankee];
            oscard = option.bind(offset)(oscard);
            verify = oscard.intl;
            golfie = verify.string;
            oscard = report[yankee];
            oscard = option.bind(offset)(oscard);
            oscard = oscard.t;
            oscard = oscard.kuGsi4;
            oscard = golfie.bind(verify)(oscard);
            zuuluu['label'] = oscard;
            oscard = 7;
            zuuluu['code'] = oscard;
            oscard = tangon.BAD_VOLUME;
            zuuluu['value'] = oscard;
            entity[5] = zuuluu;
            zuuluu = {};
            oscard = report[yankee];
            oscard = option.bind(offset)(oscard);
            golfie = oscard.intl;
            oscard = golfie.string;
            report = report[yankee];
            report = option.bind(offset)(report);
            report = report.t;
            report = report.PkiFCQ;
            report = oscard.bind(golfie)(report);
            zuuluu['label'] = report;
            report = 8;
            zuuluu['code'] = report;
            tangon = tangon.BACKGROUND_NOISE;
            zuuluu['value'] = tangon;
            entity[6] = zuuluu;
            zuuluu = argFoo;
            if(!zuuluu) { _fun00002_ip = 631; continue _fun00001 }
 540:
            tangon = entity.push;
            zuuluu = {};
            option = _closure1_slot0;
            report = _closure1_slot1;
            oscard = report[yankee];
            oscard = option.bind(offset)(oscard);
            golfie = oscard.intl;
            oscard = golfie.string;
            report = report[yankee];
            report = option.bind(offset)(report);
            report = report.t;
            report = report.hvIDwc;
            report = oscard.bind(golfie)(report);
            zuuluu['label'] = report;
            report = 9;
            zuuluu['code'] = report;
            report = _closure1_slot2;
            report = report.SPEAKERPHONE;
            zuuluu['value'] = report;
            zuuluu = tangon.bind(entity)(zuuluu);
 631:
            tangon = entity.push;
            zuuluu = {};
            verify = _closure1_slot0;
            oscard = _closure1_slot1;
            report = oscard[yankee];
            report = verify.bind(offset)(report);
            option = report.intl;
            golfie = option.string;
            report = oscard[yankee];
            report = verify.bind(offset)(report);
            report = report.t;
            report = report.+gUm1t;
            report = golfie.bind(option)(report);
            zuuluu['label'] = report;
            report = 10;
            zuuluu['code'] = report;
            report = _closure1_slot2;
            michal = report.HEADSET;
            zuuluu['value'] = michal;
            michal = {};
            golfie = oscard[yankee];
            golfie = verify.bind(offset)(golfie);
            option = golfie.intl;
            golfie = option.string;
            oscard = oscard[yankee];
            oscard = verify.bind(offset)(oscard);
            oscard = oscard.t;
            oscard = oscard.emlT9/;
            oscard = golfie.bind(option)(oscard);
            michal['label'] = oscard;
            oscard = 1;
            michal['code'] = oscard;
            report = report.OTHER;
            michal['value'] = report;
            michal = tangon.bind(entity)(zuuluu, michal);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['VoiceFeedbackReasonOption'] = michal;
    return entity;
})();