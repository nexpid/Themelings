// app/modules/provisional_accounts/native/ProvisionalAccountExplainer.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: useNativeProvisionalAccountExplainerText
        entity = argFoo;
        report = entity.userId;
        option = entity.iconSize;
        var _closure2_slot0 = option;
        golfie = entity.textVariant;
        var _closure2_slot1 = golfie;
        oscard = _closure1_slot3;
        tangon = oscard.useCallback;
        zuuluu = new Array(2);
        zuuluu[0] = option;
        zuuluu[1] = golfie;
        michal = function(argFoo) {
            entity = argFoo;
            report = _closure1_slot5;
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            michal = 5;
            michal = tangon[michal];
            tangon = undefined;
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = {};
            michal['application'] = entity;
            golfie = _closure2_slot1;
            michal['textVariant'] = golfie;
            oscard = _closure2_slot0;
            michal['iconSize'] = oscard;
            entity = entity.id;
            entity = report.bind(tangon)(zuuluu, michal, entity);
            return entity;
        };
        tangon = tangon.bind(oscard)(michal, zuuluu);
        zuuluu = _closure1_slot0;
        michal = _closure1_slot2;
        entity = 6;
        michal = michal[entity];
        entity = undefined;
        zuuluu = zuuluu.bind(entity)(michal);
        michal = zuuluu.useProvisionalAccountExplanationText;
        entity = {};
        entity['userId'] = report;
        entity['renderApplicationName'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    var _closure1_slot8 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = function() {
        entity = {};
        michal = {};
        report = _closure1_slot1;
        oscard = _closure1_slot2;
        zuuluu = 4;
        golfie = oscard[zuuluu];
        tangon = undefined;
        golfie = report.bind(tangon)(golfie);
        golfie = golfie.colors;
        golfie = golfie.BG_MOD_FAINT;
        michal['backgroundColor'] = golfie;
        golfie = oscard[zuuluu];
        golfie = report.bind(tangon)(golfie);
        golfie = golfie.spacing;
        golfie = golfie.PX_8;
        michal['gap'] = golfie;
        entity['chatContainer'] = michal;
        michal = {'flexDirection': 'row', 'alignItems': 'center'};
        zuuluu = oscard[zuuluu];
        zuuluu = report.bind(tangon)(zuuluu);
        zuuluu = zuuluu.spacing;
        zuuluu = zuuluu.PX_4;
        michal['gap'] = zuuluu;
        entity['header'] = michal;
        return entity;
    };
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/provisional_accounts/native/ProvisionalAccountExplainer.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: ChatProvisionalAccountExplainerCard
        entity = argFoo;
        yankee = entity.style;
        report = entity.userId;
        zuuluu = entity.iconSize;
        entity = _closure1_slot7;
        tangon = undefined;
        oscard = entity.bind(tangon)();
        michal = _closure1_slot8;
        entity = {};
        entity['userId'] = report;
        entity['iconSize'] = zuuluu;
        zuuluu = 'text-sm/semibold';
        entity['textVariant'] = zuuluu;
        verify = michal.bind(tangon)(entity);
        zuuluu = _closure1_slot6;
        golfie = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 7;
        entity = offset[entity];
        entity = golfie.bind(tangon)(entity);
        michal = entity.Card;
        entity = {};
        romeon = oscard.chatContainer;
        report = new Array(2);
        report[0] = romeon;
        report[1] = yankee;
        entity['style'] = report;
        yankee = _closure1_slot4;
        report = {};
        oscard = oscard.header;
        report['style'] = oscard;
        backup = _closure1_slot5;
        oscard = 8;
        romeon = offset[oscard];
        romeon = golfie.bind(tangon)(romeon);
        foxtra = romeon.Text;
        romeon = {'variant': 'text-sm/semibold', 'color': 'header-secondary'};
        kiloes = 9;
        sizing = offset[kiloes];
        sizing = golfie.bind(tangon)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kiloes = offset[kiloes];
        kiloes = golfie.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.Iyka0d;
        kiloes = sizing.bind(output)(kiloes);
        romeon['children'] = kiloes;
        foxtra = backup.bind(tangon)(foxtra, romeon);
        romeon = new Array(2);
        romeon[0] = foxtra;
        kiloes = _closure1_slot5;
        foxtra = 10;
        foxtra = offset[foxtra];
        foxtra = golfie.bind(tangon)(foxtra);
        backup = foxtra.CircleWarningIcon;
        foxtra = {'size': 'xs', 'color': 'header-secondary'};
        foxtra = kiloes.bind(tangon)(backup, foxtra);
        romeon[1] = foxtra;
        report['children'] = romeon;
        yankee = zuuluu.bind(tangon)(yankee, report);
        report = new Array(2);
        report[0] = yankee;
        option = _closure1_slot5;
        oscard = offset[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'variant': 'text-sm/normal', 'color': 'text-normal'};
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['ChatProvisionalAccountExplainerCard'] = tangon;
    michal = function(argFoo) { // Original name: UserProfileProvisionalAccountExplainerCard
        entity = argFoo;
        oscard = entity.style;
        tangon = entity.userId;
        zuuluu = entity.iconSize;
        michal = _closure1_slot8;
        entity = {};
        entity['userId'] = tangon;
        entity['iconSize'] = zuuluu;
        zuuluu = 'text-md/semibold';
        entity['textVariant'] = zuuluu;
        tangon = undefined;
        option = michal.bind(tangon)(entity);
        zuuluu = _closure1_slot5;
        michal = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 11;
        entity = verify[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        entity['style'] = oscard;
        oscard = _closure1_slot0;
        golfie = 9;
        offset = verify[golfie];
        offset = oscard.bind(tangon)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        golfie = verify[golfie];
        golfie = oscard.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.Iyka0d;
        golfie = offset.bind(yankee)(golfie);
        entity['title'] = golfie;
        yankee = _closure1_slot5;
        golfie = 10;
        golfie = verify[golfie];
        golfie = oscard.bind(tangon)(golfie);
        offset = golfie.CircleWarningIcon;
        golfie = {'size': 'xs', 'color': 'header-secondary'};
        golfie = yankee.bind(tangon)(offset, golfie);
        entity['titleIcon'] = golfie;
        golfie = _closure1_slot5;
        report = 8;
        report = verify[report];
        report = oscard.bind(tangon)(report);
        oscard = report.Text;
        report = {'variant': 'text-md/normal', 'color': 'text-normal'};
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['UserProfileProvisionalAccountExplainerCard'] = michal;
    return entity;
})();