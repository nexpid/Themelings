// app/modules/provisional_accounts/native/ProvisionalAccountExplainer.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: useNativeProvisionalAccountExplainerText
        entity = argFoo;
        report = entity.userId;
        options = entity.iconSize;
        var _closure2_slot0 = options;
        golf = entity.textVariant;
        var _closure2_slot1 = golf;
        oscar = _closure1_slot3;
        tango = oscar.useCallback;
        zulu = new Array(2);
        zulu[0] = options;
        zulu[1] = golf;
        mike = function(argFoo) {
            entity = argFoo;
            report = _closure1_slot5;
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            mike = 5;
            mike = tango[mike];
            tango = undefined;
            zulu = zulu.bind(tango)(mike);
            mike = {};
            mike['application'] = entity;
            golf = _closure2_slot1;
            mike['textVariant'] = golf;
            oscar = _closure2_slot0;
            mike['iconSize'] = oscar;
            entity = entity.id;
            entity = report.bind(tango)(zulu, mike, entity);
            return entity;
        };
        tango = tango.bind(oscar)(mike, zulu);
        zulu = _closure1_slot0;
        mike = _closure1_slot2;
        entity = 6;
        mike = mike[entity];
        entity = undefined;
        zulu = zulu.bind(entity)(mike);
        mike = zulu.useProvisionalAccountExplanationText;
        entity = {};
        entity['userId'] = report;
        entity['renderApplicationName'] = tango;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    var _closure1_slot8 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = function() {
        entity = {};
        mike = {};
        report = _closure1_slot1;
        oscar = _closure1_slot2;
        zulu = 4;
        golf = oscar[zulu];
        tango = undefined;
        golf = report.bind(tango)(golf);
        golf = golf.colors;
        golf = golf.BG_MOD_FAINT;
        mike['backgroundColor'] = golf;
        golf = oscar[zulu];
        golf = report.bind(tango)(golf);
        golf = golf.spacing;
        golf = golf.PX_8;
        mike['gap'] = golf;
        entity['chatContainer'] = mike;
        mike = {'flexDirection': 'row', 'alignItems': 'center'};
        zulu = oscar[zulu];
        zulu = report.bind(tango)(zulu);
        zulu = zulu.spacing;
        zulu = zulu.PX_4;
        mike['gap'] = zulu;
        entity['header'] = mike;
        return entity;
    };
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/provisional_accounts/native/ProvisionalAccountExplainer.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: ChatProvisionalAccountExplainerCard
        entity = argFoo;
        yankee = entity.style;
        report = entity.userId;
        zulu = entity.iconSize;
        entity = _closure1_slot7;
        tango = undefined;
        oscar = entity.bind(tango)();
        mike = _closure1_slot8;
        entity = {};
        entity['userId'] = report;
        entity['iconSize'] = zulu;
        zulu = 'text-sm/semibold';
        entity['textVariant'] = zulu;
        verify = mike.bind(tango)(entity);
        zulu = _closure1_slot6;
        golf = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 7;
        entity = offset[entity];
        entity = golf.bind(tango)(entity);
        mike = entity.Card;
        entity = {};
        romeo = oscar.chatContainer;
        report = new Array(2);
        report[0] = romeo;
        report[1] = yankee;
        entity['style'] = report;
        yankee = _closure1_slot4;
        report = {};
        oscar = oscar.header;
        report['style'] = oscar;
        backup = _closure1_slot5;
        oscar = 8;
        romeo = offset[oscar];
        romeo = golf.bind(tango)(romeo);
        foxtrot = romeo.Text;
        romeo = {'variant': 'text-sm/semibold', 'color': 'header-secondary'};
        kilo = 9;
        sizing = offset[kilo];
        sizing = golf.bind(tango)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kilo = offset[kilo];
        kilo = golf.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.Iyka0d;
        kilo = sizing.bind(output)(kilo);
        romeo['children'] = kilo;
        foxtrot = backup.bind(tango)(foxtrot, romeo);
        romeo = new Array(2);
        romeo[0] = foxtrot;
        kilo = _closure1_slot5;
        foxtrot = 10;
        foxtrot = offset[foxtrot];
        foxtrot = golf.bind(tango)(foxtrot);
        backup = foxtrot.CircleWarningIcon;
        foxtrot = {'size': 'xs', 'color': 'header-secondary'};
        foxtrot = kilo.bind(tango)(backup, foxtrot);
        romeo[1] = foxtrot;
        report['children'] = romeo;
        yankee = zulu.bind(tango)(yankee, report);
        report = new Array(2);
        report[0] = yankee;
        options = _closure1_slot5;
        oscar = offset[oscar];
        oscar = golf.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'variant': 'text-sm/normal', 'color': 'text-normal'};
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['ChatProvisionalAccountExplainerCard'] = tango;
    mike = function(argFoo) { // Original name: UserProfileProvisionalAccountExplainerCard
        entity = argFoo;
        oscar = entity.style;
        tango = entity.userId;
        zulu = entity.iconSize;
        mike = _closure1_slot8;
        entity = {};
        entity['userId'] = tango;
        entity['iconSize'] = zulu;
        zulu = 'text-md/semibold';
        entity['textVariant'] = zulu;
        tango = undefined;
        options = mike.bind(tango)(entity);
        zulu = _closure1_slot5;
        mike = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 11;
        entity = verify[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        entity['style'] = oscar;
        oscar = _closure1_slot0;
        golf = 9;
        offset = verify[golf];
        offset = oscar.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        golf = verify[golf];
        golf = oscar.bind(tango)(golf);
        golf = golf.t;
        golf = golf.Iyka0d;
        golf = offset.bind(yankee)(golf);
        entity['title'] = golf;
        yankee = _closure1_slot5;
        golf = 10;
        golf = verify[golf];
        golf = oscar.bind(tango)(golf);
        offset = golf.CircleWarningIcon;
        golf = {'size': 'xs', 'color': 'header-secondary'};
        golf = yankee.bind(tango)(offset, golf);
        entity['titleIcon'] = golf;
        golf = _closure1_slot5;
        report = 8;
        report = verify[report];
        report = oscar.bind(tango)(report);
        oscar = report.Text;
        report = {'variant': 'text-md/normal', 'color': 'text-normal'};
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['UserProfileProvisionalAccountExplainerCard'] = mike;
    return entity;
})();