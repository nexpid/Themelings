// app/modules/provisional_accounts/native/ProvisionalAccountNoCallAllowed.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'center';
    verify['alignSelf'] = offset;
    tangon['header'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/provisional_accounts/native/ProvisionalAccountNoCallAllowed.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: ProvisionalAccountNoCallAllowed
        entity = _closure1_slot5;
        tangon = undefined;
        golfie = entity.bind(tangon)();
        zuuluu = _closure1_slot4;
        romeon = _closure1_slot0;
        foxtra = _closure1_slot2;
        option = 4;
        entity = foxtra[option];
        entity = romeon.bind(tangon)(entity);
        michal = entity.AlertModal;
        entity = {};
        report = 5;
        report = foxtra[report];
        report = romeon.bind(tangon)(report);
        oscard = report.CircleWarningIcon;
        report = {};
        verify = 'lg';
        report['size'] = verify;
        golfie = golfie.header;
        report['style'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['header'] = report;
        golfie = 6;
        report = foxtra[golfie];
        report = romeon.bind(tangon)(report);
        verify = report.intl;
        oscard = verify.string;
        report = foxtra[golfie];
        report = romeon.bind(tangon)(report);
        report = report.t;
        report = report.vh+Zpq;
        report = oscard.bind(verify)(report);
        entity['title'] = report;
        report = foxtra[golfie];
        report = romeon.bind(tangon)(report);
        offset = report.intl;
        verify = offset.format;
        report = foxtra[golfie];
        report = romeon.bind(tangon)(report);
        report = report.t;
        oscard = report.tx08s7;
        report = {};
        kiloes = _closure1_slot1;
        backup = 7;
        backup = foxtra[backup];
        kiloes = kiloes.bind(tangon)(backup);
        backup = kiloes.getArticleURL;
        yankee = _closure1_slot3;
        yankee = yankee.SLAYER_PROVISIONAL_ACCOUNTS;
        yankee = backup.bind(kiloes)(yankee);
        report['helpdeskArticle'] = yankee;
        report = verify.bind(offset)(oscard, report);
        entity['content'] = report;
        report = 8;
        report = foxtra[report];
        report = romeon.bind(tangon)(report);
        oscard = report.AlertActions;
        report = {};
        option = foxtra[option];
        option = romeon.bind(tangon)(option);
        verify = option.AlertActionButton;
        option = {};
        offset = 'secondary';
        option['variant'] = offset;
        offset = foxtra[golfie];
        offset = romeon.bind(tangon)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        golfie = foxtra[golfie];
        golfie = romeon.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.NX+WJC;
        golfie = offset.bind(yankee)(golfie);
        option['text'] = golfie;
        golfie = 'got-it';
        golfie = zuuluu.bind(tangon)(verify, option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['actions'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();