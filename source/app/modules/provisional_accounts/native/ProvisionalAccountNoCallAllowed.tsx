// app/modules/provisional_accounts/native/ProvisionalAccountNoCallAllowed.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.HelpdeskArticles;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 'center';
    verify['alignSelf'] = offset;
    tango['header'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/provisional_accounts/native/ProvisionalAccountNoCallAllowed.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: ProvisionalAccountNoCallAllowed
        entity = _closure1_slot5;
        tango = undefined;
        golf = entity.bind(tango)();
        zulu = _closure1_slot4;
        romeo = _closure1_slot0;
        foxtrot = _closure1_slot2;
        options = 4;
        entity = foxtrot[options];
        entity = romeo.bind(tango)(entity);
        mike = entity.AlertModal;
        entity = {};
        report = 5;
        report = foxtrot[report];
        report = romeo.bind(tango)(report);
        oscar = report.CircleWarningIcon;
        report = {};
        verify = 'lg';
        report['size'] = verify;
        golf = golf.header;
        report['style'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['header'] = report;
        golf = 6;
        report = foxtrot[golf];
        report = romeo.bind(tango)(report);
        verify = report.intl;
        oscar = verify.string;
        report = foxtrot[golf];
        report = romeo.bind(tango)(report);
        report = report.t;
        report = report.vh+Zpq;
        report = oscar.bind(verify)(report);
        entity['title'] = report;
        report = foxtrot[golf];
        report = romeo.bind(tango)(report);
        offset = report.intl;
        verify = offset.format;
        report = foxtrot[golf];
        report = romeo.bind(tango)(report);
        report = report.t;
        oscar = report.tx08s7;
        report = {};
        kilo = _closure1_slot1;
        backup = 7;
        backup = foxtrot[backup];
        kilo = kilo.bind(tango)(backup);
        backup = kilo.getArticleURL;
        yankee = _closure1_slot3;
        yankee = yankee.SLAYER_PROVISIONAL_ACCOUNTS;
        yankee = backup.bind(kilo)(yankee);
        report['helpdeskArticle'] = yankee;
        report = verify.bind(offset)(oscar, report);
        entity['content'] = report;
        report = 8;
        report = foxtrot[report];
        report = romeo.bind(tango)(report);
        oscar = report.AlertActions;
        report = {};
        options = foxtrot[options];
        options = romeo.bind(tango)(options);
        verify = options.AlertActionButton;
        options = {};
        offset = 'secondary';
        options['variant'] = offset;
        offset = foxtrot[golf];
        offset = romeo.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        golf = foxtrot[golf];
        golf = romeo.bind(tango)(golf);
        golf = golf.t;
        golf = golf.NX+WJC;
        golf = offset.bind(yankee)(golf);
        options['text'] = golf;
        golf = 'got-it';
        golf = zulu.bind(tango)(verify, options, golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['actions'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();