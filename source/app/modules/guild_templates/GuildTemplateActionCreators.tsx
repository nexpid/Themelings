// app/modules/guild_templates/GuildTemplateActionCreators.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    michal = global;
    verify = michal.Object;
    option = verify.defineProperty;
    golfie = {};
    entity = true;
    golfie['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, golfie);
    entity = 0;
    golfie = oscard[entity];
    entity = undefined;
    golfie = report.bind(entity)(golfie);
    option = golfie.Endpoints;
    var _closure1_slot3 = option;
    golfie = golfie.AnalyticEvents;
    var _closure1_slot4 = golfie;
    michal = michal.Map;
    golfie = michal.prototype;
    golfie = Object.create(golfie, {constructor: {value: michal}});
    foxtra = golfie;
    michal = new foxtra[michal](romeon);
    michal = michal instanceof Object ? michal : golfie;
    var _closure1_slot5 = michal;
    michal = {};
    golfie = function(argFoo) { // Original name: resolveGuildTemplate
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            oscard = argFoo;
            var _closure2_slot0 = oscard;
            report = _closure1_slot1;
            michal = _closure1_slot2;
            zuuluu = 1;
            michal = michal[zuuluu];
            golfie = undefined;
            report = report.bind(golfie)(michal);
            michal = report.isDispatching;
            michal = michal.bind(report)();
            if(michal) { _fun00002_ip = 234; continue _fun00001 }
 50:
            report = _closure1_slot5;
            michal = report.get;
            michal = michal.bind(report)(oscard);
            report = null;
            if(!(report == michal)) { _fun00002_ip = 232; continue _fun00001 }
 73:
            report = _closure1_slot1;
            option = _closure1_slot2;
            zuuluu = option[zuuluu];
            verify = report.bind(golfie)(zuuluu);
            report = verify.dispatch;
            zuuluu = {};
            offset = 'GUILD_TEMPLATE_RESOLVE';
            zuuluu['type'] = offset;
            zuuluu['code'] = oscard;
            zuuluu = report.bind(verify)(zuuluu);
            report = _closure1_slot0;
            zuuluu = 2;
            zuuluu = option[zuuluu];
            zuuluu = report.bind(golfie)(zuuluu);
            golfie = zuuluu.HTTP;
            report = golfie.get;
            zuuluu = {'url': null, 'oldFormErrors': true, 'rejectWithError': true};
            verify = _closure1_slot3;
            option = verify.UNRESOLVED_GUILD_TEMPLATE;
            option = option.bind(verify)(oscard);
            zuuluu['url'] = option;
            option = report.bind(golfie)(zuuluu);
            golfie = option.then;
            report = function(argFoo) {
                entity = argFoo;
                report = entity.body;
                oscard = _closure1_slot1;
                golfie = _closure1_slot2;
                michal = 3;
                michal = golfie[michal];
                tangon = undefined;
                verify = oscard.bind(tangon)(michal);
                option = verify.track;
                entity = _closure1_slot4;
                zuuluu = entity.GUILD_TEMPLATE_RESOLVED;
                entity = {};
                michal = true;
                entity['resolved'] = michal;
                michal = _closure2_slot0;
                entity['guild_template_code'] = michal;
                offset = report.name;
                entity['guild_template_name'] = offset;
                offset = report.description;
                entity['guild_template_description'] = offset;
                offset = report.source_guild_id;
                entity['guild_template_guild_id'] = offset;
                entity = option.bind(verify)(zuuluu, entity);
                entity = 1;
                entity = golfie[entity];
                option = oscard.bind(tangon)(entity);
                zuuluu = option.dispatch;
                entity = {};
                verify = 'GUILD_TEMPLATE_RESOLVE_SUCCESS';
                entity['type'] = verify;
                entity['guildTemplate'] = report;
                entity['code'] = michal;
                entity = zuuluu.bind(option)(entity);
                entity = {};
                zuuluu = 4;
                zuuluu = golfie[zuuluu];
                zuuluu = oscard.bind(tangon)(zuuluu);
                zuuluu = zuuluu.bind(tangon)(report);
                entity['guildTemplate'] = zuuluu;
                entity['code'] = michal;
                return entity;
            };
            zuuluu = function() {
                tangon = _closure1_slot1;
                report = _closure1_slot2;
                michal = 3;
                michal = report[michal];
                zuuluu = undefined;
                option = tangon.bind(zuuluu)(michal);
                golfie = option.track;
                entity = _closure1_slot4;
                oscard = entity.GUILD_TEMPLATE_RESOLVED;
                entity = {};
                michal = false;
                entity['resolved'] = michal;
                michal = _closure2_slot0;
                entity['guild_template_code'] = michal;
                entity = golfie.bind(option)(oscard, entity);
                entity = 1;
                entity = report[entity];
                tangon = tangon.bind(zuuluu)(entity);
                zuuluu = tangon.dispatch;
                entity = {};
                report = 'GUILD_TEMPLATE_RESOLVE_FAILURE';
                entity['type'] = report;
                entity['code'] = michal;
                entity = zuuluu.bind(tangon)(entity);
                entity = {};
                zuuluu = null;
                entity['guildTemplate'] = zuuluu;
                entity['code'] = michal;
                return entity;
            };
            golfie = golfie.bind(option)(report, zuuluu);
            report = golfie.finally;
            zuuluu = function() {
                zuuluu = _closure1_slot5;
                michal = zuuluu.delete;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            zuuluu = report.bind(golfie)(zuuluu);
            report = _closure1_slot5;
            tangon = report.set;
            tangon = tangon.bind(report)(oscard, zuuluu);
            return zuuluu;
 232:
            return michal;
 234:
            michal = global;
            zuuluu = michal.Promise;
            michal = zuuluu.resolve;
            zuuluu = michal.bind(zuuluu)();
            michal = zuuluu.then;
            entity = function() {
                zuuluu = _closure1_slot6;
                michal = _closure2_slot0;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        }
    };
    var _closure1_slot6 = golfie;
    michal['resolveGuildTemplate'] = golfie;
    golfie = function(argFoo) { // Original name: loadTemplatesForGuild
        zuuluu = _closure1_slot0;
        michal = _closure1_slot2;
        entity = 2;
        michal = michal[entity];
        entity = undefined;
        entity = zuuluu.bind(entity)(michal);
        zuuluu = entity.HTTP;
        michal = zuuluu.get;
        entity = {'url': null, 'oldFormErrors': true, 'rejectWithError': false};
        oscard = _closure1_slot3;
        report = oscard.GUILD_TEMPLATES;
        tangon = argFoo;
        tangon = report.bind(oscard)(tangon);
        entity['url'] = tangon;
        zuuluu = michal.bind(zuuluu)(entity);
        michal = zuuluu.then;
        entity = function(argFoo) {
            entity = argFoo;
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            michal = 1;
            zuuluu = zuuluu[michal];
            michal = undefined;
            tangon = tangon.bind(michal)(zuuluu);
            zuuluu = tangon.dispatch;
            michal = {};
            report = 'GUILD_TEMPLATE_LOAD_FOR_GUILD_SUCCESS';
            michal['type'] = report;
            report = entity.body;
            michal['guildTemplates'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['loadTemplatesForGuild'] = golfie;
    golfie = function(argFoo, argBar, argBaz) { // Original name: createGuildTemplate
        zuuluu = _closure1_slot0;
        michal = _closure1_slot2;
        entity = 2;
        michal = michal[entity];
        entity = undefined;
        entity = zuuluu.bind(entity)(michal);
        zuuluu = entity.HTTP;
        michal = zuuluu.post;
        entity = {};
        oscard = _closure1_slot3;
        report = oscard.GUILD_TEMPLATES;
        tangon = argFoo;
        tangon = report.bind(oscard)(tangon);
        entity['url'] = tangon;
        tangon = {};
        report = argBar;
        tangon['name'] = report;
        report = argBaz;
        tangon['description'] = report;
        entity['body'] = tangon;
        tangon = true;
        entity['oldFormErrors'] = tangon;
        tangon = false;
        entity['rejectWithError'] = tangon;
        zuuluu = michal.bind(zuuluu)(entity);
        michal = zuuluu.then;
        entity = function(argFoo) {
            report = argFoo;
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 1;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.dispatch;
            michal = {};
            oscard = 'GUILD_TEMPLATE_CREATE_SUCCESS';
            michal['type'] = oscard;
            oscard = report.body;
            michal['guildTemplate'] = oscard;
            report = report.body;
            report = report.code;
            michal['code'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['createGuildTemplate'] = golfie;
    golfie = function(argFoo, argBar) { // Original name: syncGuildTemplate
        option = argBar;
        var _closure2_slot0 = option;
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot2;
        michal = 2;
        zuuluu = zuuluu[michal];
        michal = undefined;
        michal = tangon.bind(michal)(zuuluu);
        tangon = michal.HTTP;
        zuuluu = tangon.put;
        michal = {'url': null, 'oldFormErrors': true, 'rejectWithError': false};
        golfie = _closure1_slot3;
        oscard = golfie.GUILD_TEMPLATE;
        report = argFoo;
        report = oscard.bind(golfie)(report, option);
        michal['url'] = report;
        zuuluu = zuuluu.bind(tangon)(michal);
        michal = zuuluu.then;
        entity = function(argFoo) {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 1;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.dispatch;
            michal = {};
            report = 'GUILD_TEMPLATE_SYNC_SUCCESS';
            michal['type'] = report;
            report = argFoo;
            report = report.body;
            michal['guildTemplate'] = report;
            report = _closure2_slot0;
            michal['code'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['syncGuildTemplate'] = golfie;
    golfie = function(argFoo, argBar, argBaz, argCor) { // Original name: updateGuildTemplate
        option = argBar;
        var _closure2_slot0 = option;
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot2;
        michal = 2;
        zuuluu = zuuluu[michal];
        michal = undefined;
        michal = tangon.bind(michal)(zuuluu);
        tangon = michal.HTTP;
        zuuluu = tangon.patch;
        michal = {};
        golfie = _closure1_slot3;
        oscard = golfie.GUILD_TEMPLATE;
        report = argFoo;
        report = oscard.bind(golfie)(report, option);
        michal['url'] = report;
        report = {};
        oscard = argBaz;
        report['name'] = oscard;
        oscard = argCor;
        report['description'] = oscard;
        michal['body'] = report;
        report = true;
        michal['oldFormErrors'] = report;
        report = false;
        michal['rejectWithError'] = report;
        zuuluu = zuuluu.bind(tangon)(michal);
        michal = zuuluu.then;
        entity = function(argFoo) {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 1;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.dispatch;
            michal = {};
            report = 'GUILD_TEMPLATE_SYNC_SUCCESS';
            michal['type'] = report;
            report = argFoo;
            report = report.body;
            michal['guildTemplate'] = report;
            report = _closure2_slot0;
            michal['code'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['updateGuildTemplate'] = golfie;
    tangon = function(argFoo, argBar) { // Original name: deleteGuildTemplate
        option = argFoo;
        golfie = argBar;
        var _closure2_slot0 = option;
        var _closure2_slot1 = golfie;
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot2;
        michal = 2;
        zuuluu = zuuluu[michal];
        michal = undefined;
        michal = tangon.bind(michal)(zuuluu);
        tangon = michal.HTTP;
        zuuluu = tangon.del;
        michal = {'url': null, 'oldFormErrors': true, 'rejectWithError': false};
        oscard = _closure1_slot3;
        report = oscard.GUILD_TEMPLATE;
        report = report.bind(oscard)(option, golfie);
        michal['url'] = report;
        zuuluu = zuuluu.bind(tangon)(michal);
        michal = zuuluu.then;
        entity = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 1;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.dispatch;
            michal = {};
            report = 'GUILD_TEMPLATE_DELETE_SUCCESS';
            michal['type'] = report;
            oscard = _closure2_slot0;
            michal['guildId'] = oscard;
            report = _closure2_slot1;
            michal['code'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['deleteGuildTemplate'] = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_templates/GuildTemplateActionCreators.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();