// app/modules/app_database/managers/MobileAppDatabaseManager.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, mike);
    entity = 0;
    mike = oscar[entity];
    entity = undefined;
    mike = report.bind(entity)(mike);
    verify = mike.AppDatabaseManager;
    mike = {};
    golf = 'Channels';
    mike['name'] = golf;
    golf = ['BACKGROUND_SYNC', 'CHANNEL_CREATE', 'CHANNEL_DELETE', 'CHANNEL_RECIPIENT_ADD', 'CHANNEL_RECIPIENT_REMOVE', 'CHANNEL_UPDATES', 'CONNECTION_OPEN', 'CONNECTION_OPEN_SUPPLEMENTAL', 'GUILD_CREATE', 'GUILD_DELETE'];
    mike['actions'] = golf;
    golf = function() { // Original name: require
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 1;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    mike['require'] = golf;
    options = new Array(16);
    options[0] = mike;
    mike = {};
    golf = 'GuildBasicChannels';
    mike['name'] = golf;
    golf = ['BACKGROUND_SYNC', 'CHANNEL_CREATE', 'CHANNEL_DELETE', 'CHANNEL_UPDATES', 'CONNECTION_OPEN', 'GUILD_CREATE', 'GUILD_DELETE', 'GUILD_MEMBER_UPDATE', 'GUILD_ROLE_UPDATE', 'GUILD_UPDATE', 'POST_CONNECTION_OPEN', 'WRITE_CACHES'];
    mike['actions'] = golf;
    golf = function() { // Original name: require
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 2;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    mike['require'] = golf;
    options[1] = mike;
    mike = {};
    golf = 'GuildEmojis';
    mike['name'] = golf;
    golf = ['BACKGROUND_SYNC', 'CONNECTION_OPEN', 'GUILD_CREATE', 'GUILD_DELETE', 'GUILD_EMOJIS_UPDATE', 'GUILD_UPDATE'];
    mike['actions'] = golf;
    golf = function() { // Original name: require
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 3;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    mike['require'] = golf;
    options[2] = mike;
    mike = {};
    golf = 'Guilds';
    mike['name'] = golf;
    golf = ['BACKGROUND_SYNC', 'CONNECTION_OPEN', 'GUILD_CREATE', 'GUILD_DELETE', 'GUILD_MEMBER_ADD', 'GUILD_MEMBER_UPDATE', 'GUILD_ROLE_CREATE', 'GUILD_ROLE_DELETE', 'GUILD_ROLE_UPDATE', 'GUILD_UPDATE'];
    mike['actions'] = golf;
    golf = function() { // Original name: require
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 4;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    mike['require'] = golf;
    options[3] = mike;
    mike = {};
    golf = 'GuildsRequiringDeletedIdsSync';
    mike['name'] = golf;
    golf = ['BACKGROUND_SYNC', 'CONNECTION_OPEN', 'GUILD_CREATE', 'DELETED_ENTITY_IDS'];
    mike['actions'] = golf;
    golf = function() { // Original name: require
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 5;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    mike['require'] = golf;
    options[4] = mike;
    mike = {};
    golf = 'GuildsRequiringChannelSync';
    mike['name'] = golf;
    golf = ['BACKGROUND_SYNC', 'CONNECTION_OPEN', 'GUILD_CREATE', 'CHANNEL_SYNC'];
    mike['actions'] = golf;
    golf = function() { // Original name: require
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 6;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    mike['require'] = golf;
    options[5] = mike;
    mike = {};
    golf = 'GuildStickers';
    mike['name'] = golf;
    golf = ['BACKGROUND_SYNC', 'CONNECTION_OPEN', 'GUILD_CREATE', 'GUILD_DELETE', 'GUILD_STICKERS_UPDATE', 'GUILD_UPDATE'];
    mike['actions'] = golf;
    golf = function() { // Original name: require
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 7;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    mike['require'] = golf;
    options[6] = mike;
    mike = {};
    golf = 'GuildVersions';
    mike['name'] = golf;
    golf = ['BACKGROUND_SYNC', 'CHANNEL_CREATE', 'CHANNEL_DELETE', 'CHANNEL_UPDATES', 'CONNECTION_OPEN', 'GUILD_CREATE', 'GUILD_DELETE', 'GUILD_EMOJIS_UPDATE', 'GUILD_ROLE_CREATE', 'GUILD_ROLE_DELETE', 'GUILD_ROLE_UPDATE', 'GUILD_STICKERS_UPDATE', 'GUILD_UPDATE'];
    mike['actions'] = golf;
    golf = function() { // Original name: require
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 8;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    mike['require'] = golf;
    options[7] = mike;
    mike = {};
    golf = 'KvCacheVersion';
    mike['name'] = golf;
    golf = ['CONNECTION_OPEN', 'WRITE_CACHES', 'BACKGROUND_SYNC'];
    mike['actions'] = golf;
    golf = function() { // Original name: require
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 9;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    mike['require'] = golf;
    options[8] = mike;
    mike = {};
    golf = 'Messages';
    mike['name'] = golf;
    golf = ['CHANNEL_DELETE', 'GUILD_DELETE', 'LOAD_MESSAGES_SUCCESS', 'MESSAGE_CREATE', 'MESSAGE_DELETE_BULK', 'MESSAGE_DELETE', 'MESSAGE_PREVIEWS_LOADED', 'MESSAGE_UPDATE'];
    mike['actions'] = golf;
    golf = function() { // Original name: require
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 10;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    mike['require'] = golf;
    options[9] = mike;
    mike = {};
    golf = 'LowDiskTrim';
    mike['name'] = golf;
    golf = ['POST_CONNECTION_OPEN'];
    mike['actions'] = golf;
    golf = function() { // Original name: require
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 11;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    mike['require'] = golf;
    options[10] = mike;
    mike = {};
    golf = 'NonGuildVersions';
    mike['name'] = golf;
    golf = ['CONNECTION_OPEN', 'BACKGROUND_SYNC'];
    mike['actions'] = golf;
    golf = function() { // Original name: require
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 12;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    mike['require'] = golf;
    options[11] = mike;
    mike = {};
    golf = 'ReadStates';
    mike['name'] = golf;
    golf = ['CONNECTION_OPEN', 'CHANNEL_PINS_ACK', 'MESSAGE_ACK', 'BACKGROUND_SYNC_FINISHED', 'WRITE_CACHES'];
    mike['actions'] = golf;
    golf = function() { // Original name: require
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 13;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    mike['require'] = golf;
    options[12] = mike;
    mike = {};
    golf = 'UserSettingsProto';
    mike['name'] = golf;
    golf = ['CONNECTION_OPEN', 'USER_SETTINGS_PROTO_UPDATE', 'USER_SETTINGS_PROTO_ENQUEUE_UPDATE', 'USER_SETTINGS_PROTO_UPDATE_EDIT_INFO'];
    mike['actions'] = golf;
    golf = function() { // Original name: require
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 14;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    mike['require'] = golf;
    options[13] = mike;
    mike = {};
    golf = 'UserGuildSettings';
    mike['name'] = golf;
    golf = ['CONNECTION_OPEN', 'USER_GUILD_SETTINGS_FULL_UPDATE'];
    mike['actions'] = golf;
    golf = function() { // Original name: require
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 15;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    mike['require'] = golf;
    options[14] = mike;
    mike = {};
    golf = 'UserSearchItems';
    mike['name'] = golf;
    golf = ['POST_CONNECTION_OPEN', 'WRITE_CACHES'];
    mike['actions'] = golf;
    tango = function() { // Original name: require
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 16;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    mike['require'] = tango;
    options[15] = mike;
    mike = verify.prototype;
    tango = Object.create(mike, {constructor: {value: verify}});
    romeo = 'MobileAppDatabaseManager';
    yankee = new Array(0);
    foxtrot = tango;
    offset = options;
    mike = new foxtrot[verify](romeo, yankee, offset, verify);
    mike = mike instanceof Object ? mike : tango;
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/app_database/managers/MobileAppDatabaseManager.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();