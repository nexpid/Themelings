// app/modules/app_database/util/Lru.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    oscar = argBaz;
    zulu = argFred;
    report = argPlugh;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = report[entity];
    entity = undefined;
    tango = oscar.bind(entity)(tango);
    var _closure1_slot0 = tango;
    tango = 1;
    tango = report[tango];
    tango = oscar.bind(entity)(tango);
    var _closure1_slot1 = tango;
    mike = function() {
        tango = _closure1_slot1;
        zulu = function(argFoo) { // Original name: Lru
            zulu = this;
            tango = _closure1_slot0;
            mike = _closure2_slot0;
            entity = undefined;
            mike = tango.bind(entity)(zulu, mike);
            mike = global;
            mike = mike.Map;
            tango = mike.prototype;
            tango = Object.create(tango, {constructor: {value: mike}});
            golf = tango;
            mike = new golf[mike](oscar);
            mike = mike instanceof Object ? mike : tango;
            zulu['items'] = mike;
            mike = argFoo;
            zulu['limit'] = mike;
            return entity;
        };
        var _closure2_slot0 = zulu;
        entity = {};
        mike = 'length';
        entity['key'] = mike;
        mike = function() { // Original name: get
            entity = this;
            entity = entity.items;
            entity = entity.size;
            return entity;
        };
        entity['get'] = mike;
        mike = new Array(13);
        mike[0] = entity;
        entity = {};
        oscar = 'capacity';
        entity['key'] = oscar;
        oscar = function() { // Original name: get
            entity = this;
            entity = entity.limit;
            return entity;
        };
        entity['get'] = oscar;
        mike[1] = entity;
        entity = {};
        oscar = global;
        oscar = oscar.Symbol;
        oscar = oscar.iterator;
        entity['key'] = oscar;
        oscar = function() { // Original name: value
            entity = this;
            mike = entity.items;
            entity = mike.entries;
            entity = entity.bind(mike)();
            return entity;
        };
        entity['value'] = oscar;
        mike[2] = entity;
        entity = {};
        oscar = 'entries';
        entity['key'] = oscar;
        oscar = function() { // Original name: value
            entity = this;
            mike = entity.items;
            entity = mike.entries;
            entity = entity.bind(mike)();
            return entity;
        };
        entity['value'] = oscar;
        mike[3] = entity;
        entity = {};
        oscar = 'keys';
        entity['key'] = oscar;
        oscar = function() { // Original name: value
            entity = this;
            mike = entity.items;
            entity = mike.keys;
            entity = entity.bind(mike)();
            return entity;
        };
        entity['value'] = oscar;
        mike[4] = entity;
        entity = {};
        oscar = 'values';
        entity['key'] = oscar;
        oscar = function() { // Original name: value
            entity = this;
            mike = entity.items;
            entity = mike.values;
            entity = entity.bind(mike)();
            return entity;
        };
        entity['value'] = oscar;
        mike[5] = entity;
        entity = {};
        oscar = 'ordered';
        entity['key'] = oscar;
        oscar = function() { // Original name: value
            entity = this;
            mike = entity.items;
            entity = mike.values;
            report = entity.bind(mike)();
            mike = new Array(0);
            tango = 0;
            oscar = mike;
            entity = arraySpread(oscar, report, tango);
            entity = mike.reverse;
            entity = entity.bind(mike)();
            return entity;
        };
        entity['value'] = oscar;
        mike[6] = entity;
        entity = {};
        oscar = 'clear';
        entity['key'] = oscar;
        oscar = function() { // Original name: value
            entity = this;
            mike = entity.items;
            entity = mike.clear;
            entity = entity.bind(mike)();
            entity = undefined;
            return entity;
        };
        entity['value'] = oscar;
        mike[7] = entity;
        entity = {};
        oscar = 'has';
        entity['key'] = oscar;
        oscar = function(argFoo) { // Original name: value
            entity = this;
            zulu = entity.items;
            mike = zulu.has;
            entity = argFoo;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        entity['value'] = oscar;
        mike[8] = entity;
        entity = {};
        oscar = 'get';
        entity['key'] = oscar;
        oscar = function(argFoo) { // Original name: value
            entity = this;
            zulu = entity.items;
            mike = zulu.get;
            entity = argFoo;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        entity['value'] = oscar;
        mike[9] = entity;
        entity = {};
        oscar = 'put';
        entity['key'] = oscar;
        oscar = function(argFoo, argBar) { // Original name: value
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                report = argFoo;
                entity = this;
                zulu = entity.items;
                mike = zulu.delete;
                mike = mike.bind(zulu)(report);
                tango = entity.items;
                zulu = tango.set;
                mike = argBar;
                mike = zulu.bind(tango)(report, mike);
                mike = entity.items;
                zulu = mike.size;
                mike = entity.limit;
                if(!(!(zulu > mike))) { _fun00002_ip = 67; continue _fun00001 }
 63:
                mike = undefined;
                return mike;
 67:
                mike = entity.oldestKey;
                zulu = mike.bind(entity)();
                tango = entity.items;
                mike = tango.get;
                mike = mike.bind(tango)(zulu);
                tango = entity.items;
                entity = tango.delete;
                entity = entity.bind(tango)(zulu);
                entity = new Array(2);
                entity[0] = zulu;
                entity[1] = mike;
                return entity;
            }
        };
        entity['value'] = oscar;
        mike[10] = entity;
        entity = {};
        oscar = 'delete';
        entity['key'] = oscar;
        oscar = function(argFoo) { // Original name: value
            entity = this;
            zulu = entity.items;
            mike = zulu.delete;
            entity = argFoo;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        entity['value'] = oscar;
        mike[11] = entity;
        entity = {};
        oscar = 'oldestKey';
        entity['key'] = oscar;
        report = function() { // Original name: value
            entity = this;
            mike = entity.items;
            entity = mike.keys;
            mike = entity.bind(mike)();
            entity = mike.next;
            entity = entity.bind(mike)();
            entity = entity.value;
            return entity;
        };
        entity['value'] = report;
        mike[12] = entity;
        entity = undefined;
        entity = tango.bind(entity)(zulu, mike);
        return entity;
    };
    mike = mike.bind(entity)();
    tango = 2;
    report = report[tango];
    tango = argBar;
    oscar = tango.bind(entity)(report);
    report = oscar.fileFinishedImporting;
    tango = 'modules/app_database/util/Lru.tsx';
    tango = report.bind(oscar)(tango);
    zulu['Lru'] = mike;
    return entity;
})();