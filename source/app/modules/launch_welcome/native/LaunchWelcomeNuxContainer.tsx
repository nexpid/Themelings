// app/modules/launch_welcome/native/LaunchWelcomeNuxContainer.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    option = tangon.Pressable;
    golfie = tangon.StyleSheet;
    var _closure1_slot4 = golfie;
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.MODE_CHANGE_PHYSICS;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot8 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    golfie = yankee.bind(entity)(tangon);
    tangon = golfie.createAnimatedComponent;
    tangon = tangon.bind(golfie)(option);
    var _closure1_slot10 = tangon;
    tangon = {'mass': 1, 'stiffness': 392, 'damping': 12.9};
    var _closure1_slot11 = tangon;
    tangon = {'mass': 1, 'stiffness': 169, 'damping': 17.4};
    var _closure1_slot12 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'center';
    verify['alignItems'] = offset;
    tangon['copyContainer'] = verify;
    verify = {};
    offset = 7;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.TEXT_NORMAL;
    verify['color'] = foxtra;
    tangon['nuxTitle'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.TEXT_NORMAL;
    verify['color'] = foxtra;
    foxtra = 0.5;
    verify['opacity'] = foxtra;
    tangon['nuxSubtitle'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_12;
    verify['marginVertical'] = foxtra;
    verify['width'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_NORMAL;
    verify['backgroundColor'] = offset;
    tangon['line'] = verify;
    verify = {'flex': 1, 'justifyContent': 'flex-end'};
    tangon['backdrop'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot13 = tangon;
    tangon = {};
    golfie = "function LaunchWelcomeNuxContainerTsx1(){const{withSpring,isNuxVisible,isTabsVisible,MODE_CHANGE_PHYSICS,isScreenReaderEnabled}=this.__closure;return{opacity:withSpring(isNuxVisible&&isTabsVisible?1:0,MODE_CHANGE_PHYSICS,'animate-always'),display:isScreenReaderEnabled&&!isNuxVisible?'none':undefined};}";
    tangon['code'] = golfie;
    var _closure1_slot14 = tangon;
    tangon = {};
    golfie = 'function LaunchWelcomeNuxContainerTsx2(){const{LINE_HEIGHT,animation}=this.__closure;return{height:LINE_HEIGHT+animation.get()};}';
    tangon['code'] = golfie;
    var _closure1_slot15 = tangon;
    tangon = {};
    golfie = "function LaunchWelcomeNuxContainerTsx3(){const{withSpring,isTabsVisible,isNuxVisible,MODE_CHANGE_PHYSICS}=this.__closure;return{blurAmount:withSpring(isTabsVisible&&isNuxVisible?0.3:0,MODE_CHANGE_PHYSICS,'animate-always')};}";
    tangon['code'] = golfie;
    var _closure1_slot16 = tangon;
    tangon = 16;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/launch_welcome/native/LaunchWelcomeNuxContainer.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: LaunchWelcomeNuxContainer
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            report = michal.descriptors;
            golfie = michal.isTabsVisible;
            var _closure2_slot0 = golfie;
            michal = _closure1_slot13;
            tangon = undefined;
            backup = michal.bind(tangon)();
            result = _closure1_slot0;
            echoed = _closure1_slot2;
            michal = 8;
            michal = echoed[michal];
            zuuluu = result.bind(tangon)(michal);
            michal = zuuluu.useIsScreenReaderEnabled;
            offset = michal.bind(zuuluu)();
            var _closure2_slot1 = offset;
            michal = 9;
            michal = echoed[michal];
            option = result.bind(tangon)(michal);
            oscard = option.useStateFromStores;
            michal = _closure1_slot6;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                michal = _closure1_slot6;
                entity = michal.getWidth;
                entity = entity.bind(michal)();
                return entity;
            };
            source = oscard.bind(option)(zuuluu, michal);
            michal = 10;
            michal = echoed[michal];
            zuuluu = result.bind(tangon)(michal);
            michal = zuuluu.useLaunchWelcomeNuxVisible;
            michal = michal.bind(zuuluu)();
            romeon = michal.isNuxVisible;
            var _closure2_slot2 = romeon;
            michal = michal.setNuxVisible;
            var _closure2_slot3 = michal;
            zuuluu = _closure1_slot1;
            michal = 11;
            michal = echoed[michal];
            michal = zuuluu.bind(tangon)(michal);
            verify = michal.bind(tangon)();
            sizing = 5;
            michal = echoed[sizing];
            oscard = result.bind(tangon)(michal);
            zuuluu = oscard.useSharedValue;
            michal = 0;
            kiloes = zuuluu.bind(oscard)(michal);
            var _closure2_slot4 = kiloes;
            option = _closure1_slot3;
            oscard = option.useEffect;
            zuuluu = new Array(1);
            zuuluu[0] = kiloes;
            michal = function() {
                zuuluu = _closure2_slot4;
                michal = zuuluu.set;
                backup = _closure1_slot0;
                sizing = _closure1_slot2;
                verify = 5;
                tangon = sizing[verify];
                foxtra = undefined;
                oscard = backup.bind(foxtra)(tangon);
                report = oscard.withRepeat;
                tangon = sizing[verify];
                option = backup.bind(foxtra)(tangon);
                golfie = option.withSequence;
                tangon = sizing[verify];
                output = backup.bind(foxtra)(tangon);
                offset = output.withDelay;
                romeon = 12;
                tangon = sizing[romeon];
                echoed = backup.bind(foxtra)(tangon);
                result = echoed.withSpring;
                yankee = _closure1_slot11;
                tangon = 8;
                kiloes = 'animate-always';
                tangon = result.bind(echoed)(tangon, yankee, kiloes);
                yankee = 2000;
                tangon = offset.bind(output)(yankee, tangon);
                verify = sizing[verify];
                offset = backup.bind(foxtra)(verify);
                verify = offset.withDelay;
                romeon = sizing[romeon];
                backup = backup.bind(foxtra)(romeon);
                foxtra = backup.withSpring;
                romeon = _closure1_slot12;
                entity = 0;
                entity = foxtra.bind(backup)(entity, romeon, kiloes);
                entity = verify.bind(offset)(yankee, entity);
                tangon = golfie.bind(option)(tangon, entity);
                entity = -1;
                entity = report.bind(oscard)(tangon, entity);
                entity = michal.bind(zuuluu)(entity);
                entity = function() {
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 5;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.cancelAnimation;
                    entity = _closure2_slot4;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                return entity;
            };
            michal = oscard.bind(option)(michal, zuuluu);
            michal = echoed[sizing];
            oscard = result.bind(tangon)(michal);
            zuuluu = oscard.useAnimatedStyle;
            michal = function() { // Original name: P
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = {};
                    report = _closure1_slot0;
                    tangon = _closure1_slot2;
                    zuuluu = 12;
                    zuuluu = tangon[zuuluu];
                    tangon = undefined;
                    option = report.bind(tangon)(zuuluu);
                    golfie = option.withSpring;
                    report = _closure2_slot2;
                    oscard = 0;
                    if(!report) { _fun00004_ip = 56; continue _fun00003 }
 44:
                    report = _closure2_slot0;
                    oscard = 0;
                    if(!report) { _fun00004_ip = 56; continue _fun00003 }
 53:
                    oscard = 1;
 56:
                    report = _closure1_slot7;
                    michal = 'animate-always';
                    michal = golfie.bind(option)(oscard, report, michal);
                    entity['opacity'] = michal;
                    report = _closure2_slot1;
                    michal = undefined;
                    if(!report) { _fun00004_ip = 99; continue _fun00003 }
 86:
                    zuuluu = _closure2_slot2;
                    michal = undefined;
                    if(zuuluu) { _fun00004_ip = 99; continue _fun00003 }
 95:
                    michal = 'none';
 99:
                    entity['display'] = michal;
                    return entity;
                }
            };
            option = {};
            output = 12;
            foxtra = echoed[output];
            foxtra = result.bind(tangon)(foxtra);
            foxtra = foxtra.withSpring;
            option['withSpring'] = foxtra;
            option['isNuxVisible'] = romeon;
            option['isTabsVisible'] = golfie;
            foxtra = _closure1_slot7;
            option['MODE_CHANGE_PHYSICS'] = foxtra;
            option['isScreenReaderEnabled'] = offset;
            michal['__closure'] = option;
            option = 60937156682.0;
            michal['__workletHash'] = option;
            option = _closure1_slot14;
            michal['__initData'] = option;
            offset = zuuluu.bind(oscard)(michal);
            michal = echoed[sizing];
            oscard = result.bind(tangon)(michal);
            zuuluu = oscard.useAnimatedStyle;
            michal = function() { // Original name: D
                entity = {};
                zuuluu = _closure2_slot4;
                michal = zuuluu.get;
                zuuluu = michal.bind(zuuluu)();
                michal = 79;
                michal = michal + zuuluu;
                entity['height'] = michal;
                return entity;
            };
            option = {};
            update = 79;
            option['LINE_HEIGHT'] = update;
            option['animation'] = kiloes;
            michal['__closure'] = option;
            option = 12238304514300.0;
            michal['__workletHash'] = option;
            option = _closure1_slot15;
            michal['__initData'] = option;
            kiloes = zuuluu.bind(oscard)(michal);
            michal = echoed[sizing];
            oscard = result.bind(tangon)(michal);
            zuuluu = oscard.useAnimatedProps;
            michal = function() { // Original name: L
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = {};
                    report = _closure1_slot0;
                    tangon = _closure1_slot2;
                    zuuluu = 12;
                    tangon = tangon[zuuluu];
                    zuuluu = undefined;
                    oscard = report.bind(zuuluu)(tangon);
                    report = oscard.withSpring;
                    option = _closure2_slot0;
                    tangon = 0;
                    if(!option) { _fun00006_ip = 63; continue _fun00005 }
 44:
                    zuuluu = _closure2_slot2;
                    tangon = 0;
                    if(!zuuluu) { _fun00006_ip = 63; continue _fun00005 }
 53:
                    tangon = 0.3;
 63:
                    zuuluu = _closure1_slot7;
                    michal = 'animate-always';
                    michal = report.bind(oscard)(tangon, zuuluu, michal);
                    entity['blurAmount'] = michal;
                    return entity;
                }
            };
            option = {};
            output = echoed[output];
            output = result.bind(tangon)(output);
            output = output.withSpring;
            option['withSpring'] = output;
            option['isTabsVisible'] = golfie;
            option['isNuxVisible'] = romeon;
            option['MODE_CHANGE_PHYSICS'] = foxtra;
            michal['__closure'] = option;
            option = 13587467032843.0;
            michal['__workletHash'] = option;
            option = _closure1_slot16;
            michal['__initData'] = option;
            option = zuuluu.bind(oscard)(michal);
            michal = global;
            zuuluu = michal.Object;
            michal = zuuluu.keys;
            michal = michal.bind(zuuluu)(report);
            update = michal.length;
            echoed = 3;
            if(!(!(update <= echoed))) { _fun00002_ip = 1008; continue _fun00001 }
 539:
            report = function() { // Original name: handleDismiss
                zuuluu = _closure2_slot3;
                entity = undefined;
                michal = false;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            zuuluu = _closure1_slot8;
            michal = _closure1_slot10;
            entity = {};
            oscard = _closure1_slot4;
            foxtra = oscard.absoluteFill;
            oscard = new Array(2);
            oscard[0] = foxtra;
            oscard[1] = offset;
            entity['style'] = oscard;
            offset = 'none';
            oscard = offset;
            if(!romeon) { _fun00002_ip = 602; continue _fun00001 }
 592:
            oscard = offset;
            if(!golfie) { _fun00002_ip = 602; continue _fun00001 }
 598:
            oscard = 'auto';
 602:
            entity['pointerEvents'] = oscard;
            entity['onPressIn'] = report;
            entity['onPress'] = report;
            golfie = _closure1_slot8;
            foxtra = _closure1_slot1;
            romeon = _closure1_slot2;
            report = 13;
            report = romeon[report];
            oscard = foxtra.bind(tangon)(report);
            report = {};
            report['blurTheme'] = verify;
            verify = 'ultra-thin';
            report['blurStyle'] = verify;
            verify = backup.backdrop;
            report['style'] = verify;
            report['animatedProps'] = option;
            offset = _closure1_slot9;
            verify = _closure1_slot5;
            option = {};
            result = backup.copyContainer;
            output = new Array(2);
            output[0] = result;
            result = {};
            echoed = update - echoed;
            echoed = source * echoed;
            echoed = echoed / update;
            result['marginRight'] = echoed;
            output[1] = result;
            option['style'] = output;
            ctrled = _closure1_slot0;
            output = 14;
            yankee = romeon[output];
            yankee = ctrled.bind(tangon)(yankee);
            result = yankee.Text;
            yankee = {};
            echoed = backup.nuxTitle;
            yankee['style'] = echoed;
            echoed = 'text-md/semibold';
            yankee['variant'] = echoed;
            echoed = 15;
            update = romeon[echoed];
            update = ctrled.bind(tangon)(update);
            vacuum = update.intl;
            source = vacuum.string;
            update = romeon[echoed];
            update = ctrled.bind(tangon)(update);
            update = update.t;
            update = update.MdrITE;
            update = source.bind(vacuum)(update);
            yankee['children'] = update;
            result = golfie.bind(tangon)(result, yankee);
            yankee = new Array(3);
            yankee[0] = result;
            output = romeon[output];
            output = ctrled.bind(tangon)(output);
            result = output.Text;
            output = {};
            update = backup.nuxSubtitle;
            output['style'] = update;
            update = 'heading-sm/medium';
            output['variant'] = update;
            update = romeon[echoed];
            update = ctrled.bind(tangon)(update);
            source = update.intl;
            update = source.string;
            echoed = romeon[echoed];
            echoed = ctrled.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.lfpjfX;
            echoed = update.bind(source)(echoed);
            output['children'] = echoed;
            output = golfie.bind(tangon)(result, output);
            yankee[1] = output;
            romeon = romeon[sizing];
            romeon = foxtra.bind(tangon)(romeon);
            foxtra = romeon.View;
            romeon = {};
            sizing = backup.line;
            backup = new Array(2);
            backup[0] = sizing;
            backup[1] = kiloes;
            romeon['style'] = backup;
            romeon = golfie.bind(tangon)(foxtra, romeon);
            yankee[2] = romeon;
            option['children'] = yankee;
            option = offset.bind(tangon)(verify, option);
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
 1008:
            entity = null;
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();