// app/modules/launch_welcome/native/LaunchWelcomeNuxContainer.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    romeo = 1;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    options = tango.Pressable;
    golf = tango.StyleSheet;
    var _closure1_slot4 = golf;
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.MODE_CHANGE_PHYSICS;
    var _closure1_slot7 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    golf = yankee.bind(entity)(tango);
    tango = golf.createAnimatedComponent;
    tango = tango.bind(golf)(options);
    var _closure1_slot10 = tango;
    tango = {'mass': 1, 'stiffness': 392, 'damping': 12.9};
    var _closure1_slot11 = tango;
    tango = {'mass': 1, 'stiffness': 169, 'damping': 17.4};
    var _closure1_slot12 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 'center';
    verify['alignItems'] = offset;
    tango['copyContainer'] = verify;
    verify = {};
    offset = 7;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.TEXT_NORMAL;
    verify['color'] = foxtrot;
    tango['nuxTitle'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.TEXT_NORMAL;
    verify['color'] = foxtrot;
    foxtrot = 0.5;
    verify['opacity'] = foxtrot;
    tango['nuxSubtitle'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_12;
    verify['marginVertical'] = foxtrot;
    verify['width'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_NORMAL;
    verify['backgroundColor'] = offset;
    tango['line'] = verify;
    verify = {'flex': 1, 'justifyContent': 'flex-end'};
    tango['backdrop'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot13 = tango;
    tango = {};
    golf = "function LaunchWelcomeNuxContainerTsx1(){const{withSpring,isNuxVisible,isTabsVisible,MODE_CHANGE_PHYSICS,isScreenReaderEnabled}=this.__closure;return{opacity:withSpring(isNuxVisible&&isTabsVisible?1:0,MODE_CHANGE_PHYSICS,'animate-always'),display:isScreenReaderEnabled&&!isNuxVisible?'none':undefined};}";
    tango['code'] = golf;
    var _closure1_slot14 = tango;
    tango = {};
    golf = 'function LaunchWelcomeNuxContainerTsx2(){const{LINE_HEIGHT,animation}=this.__closure;return{height:LINE_HEIGHT+animation.get()};}';
    tango['code'] = golf;
    var _closure1_slot15 = tango;
    tango = {};
    golf = "function LaunchWelcomeNuxContainerTsx3(){const{withSpring,isTabsVisible,isNuxVisible,MODE_CHANGE_PHYSICS}=this.__closure;return{blurAmount:withSpring(isTabsVisible&&isNuxVisible?0.3:0,MODE_CHANGE_PHYSICS,'animate-always')};}";
    tango['code'] = golf;
    var _closure1_slot16 = tango;
    tango = 16;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/launch_welcome/native/LaunchWelcomeNuxContainer.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: LaunchWelcomeNuxContainer
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = argFoo;
            report = mike.descriptors;
            golf = mike.isTabsVisible;
            var _closure2_slot0 = golf;
            mike = _closure1_slot13;
            tango = undefined;
            backup = mike.bind(tango)();
            result = _closure1_slot0;
            echo = _closure1_slot2;
            mike = 8;
            mike = echo[mike];
            zulu = result.bind(tango)(mike);
            mike = zulu.useIsScreenReaderEnabled;
            offset = mike.bind(zulu)();
            var _closure2_slot1 = offset;
            mike = 9;
            mike = echo[mike];
            options = result.bind(tango)(mike);
            oscar = options.useStateFromStores;
            mike = _closure1_slot6;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                mike = _closure1_slot6;
                entity = mike.getWidth;
                entity = entity.bind(mike)();
                return entity;
            };
            source = oscar.bind(options)(zulu, mike);
            mike = 10;
            mike = echo[mike];
            zulu = result.bind(tango)(mike);
            mike = zulu.useLaunchWelcomeNuxVisible;
            mike = mike.bind(zulu)();
            romeo = mike.isNuxVisible;
            var _closure2_slot2 = romeo;
            mike = mike.setNuxVisible;
            var _closure2_slot3 = mike;
            zulu = _closure1_slot1;
            mike = 11;
            mike = echo[mike];
            mike = zulu.bind(tango)(mike);
            verify = mike.bind(tango)();
            sizing = 5;
            mike = echo[sizing];
            oscar = result.bind(tango)(mike);
            zulu = oscar.useSharedValue;
            mike = 0;
            kilo = zulu.bind(oscar)(mike);
            var _closure2_slot4 = kilo;
            options = _closure1_slot3;
            oscar = options.useEffect;
            zulu = new Array(1);
            zulu[0] = kilo;
            mike = function() {
                zulu = _closure2_slot4;
                mike = zulu.set;
                backup = _closure1_slot0;
                sizing = _closure1_slot2;
                verify = 5;
                tango = sizing[verify];
                foxtrot = undefined;
                oscar = backup.bind(foxtrot)(tango);
                report = oscar.withRepeat;
                tango = sizing[verify];
                options = backup.bind(foxtrot)(tango);
                golf = options.withSequence;
                tango = sizing[verify];
                output = backup.bind(foxtrot)(tango);
                offset = output.withDelay;
                romeo = 12;
                tango = sizing[romeo];
                echo = backup.bind(foxtrot)(tango);
                result = echo.withSpring;
                yankee = _closure1_slot11;
                tango = 8;
                kilo = 'animate-always';
                tango = result.bind(echo)(tango, yankee, kilo);
                yankee = 2000;
                tango = offset.bind(output)(yankee, tango);
                verify = sizing[verify];
                offset = backup.bind(foxtrot)(verify);
                verify = offset.withDelay;
                romeo = sizing[romeo];
                backup = backup.bind(foxtrot)(romeo);
                foxtrot = backup.withSpring;
                romeo = _closure1_slot12;
                entity = 0;
                entity = foxtrot.bind(backup)(entity, romeo, kilo);
                entity = verify.bind(offset)(yankee, entity);
                tango = golf.bind(options)(tango, entity);
                entity = -1;
                entity = report.bind(oscar)(tango, entity);
                entity = mike.bind(zulu)(entity);
                entity = function() {
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 5;
                    mike = mike[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.cancelAnimation;
                    entity = _closure2_slot4;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                return entity;
            };
            mike = oscar.bind(options)(mike, zulu);
            mike = echo[sizing];
            oscar = result.bind(tango)(mike);
            zulu = oscar.useAnimatedStyle;
            mike = function() { // Original name: P
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = {};
                    report = _closure1_slot0;
                    tango = _closure1_slot2;
                    zulu = 12;
                    zulu = tango[zulu];
                    tango = undefined;
                    options = report.bind(tango)(zulu);
                    golf = options.withSpring;
                    report = _closure2_slot2;
                    oscar = 0;
                    if(!report) { _fun00004_ip = 56; continue _fun00003 }
 44:
                    report = _closure2_slot0;
                    oscar = 0;
                    if(!report) { _fun00004_ip = 56; continue _fun00003 }
 53:
                    oscar = 1;
 56:
                    report = _closure1_slot7;
                    mike = 'animate-always';
                    mike = golf.bind(options)(oscar, report, mike);
                    entity['opacity'] = mike;
                    report = _closure2_slot1;
                    mike = undefined;
                    if(!report) { _fun00004_ip = 99; continue _fun00003 }
 86:
                    zulu = _closure2_slot2;
                    mike = undefined;
                    if(zulu) { _fun00004_ip = 99; continue _fun00003 }
 95:
                    mike = 'none';
 99:
                    entity['display'] = mike;
                    return entity;
                }
            };
            options = {};
            output = 12;
            foxtrot = echo[output];
            foxtrot = result.bind(tango)(foxtrot);
            foxtrot = foxtrot.withSpring;
            options['withSpring'] = foxtrot;
            options['isNuxVisible'] = romeo;
            options['isTabsVisible'] = golf;
            foxtrot = _closure1_slot7;
            options['MODE_CHANGE_PHYSICS'] = foxtrot;
            options['isScreenReaderEnabled'] = offset;
            mike['__closure'] = options;
            options = 60937156682.0;
            mike['__workletHash'] = options;
            options = _closure1_slot14;
            mike['__initData'] = options;
            offset = zulu.bind(oscar)(mike);
            mike = echo[sizing];
            oscar = result.bind(tango)(mike);
            zulu = oscar.useAnimatedStyle;
            mike = function() { // Original name: D
                entity = {};
                zulu = _closure2_slot4;
                mike = zulu.get;
                zulu = mike.bind(zulu)();
                mike = 79;
                mike = mike + zulu;
                entity['height'] = mike;
                return entity;
            };
            options = {};
            update = 79;
            options['LINE_HEIGHT'] = update;
            options['animation'] = kilo;
            mike['__closure'] = options;
            options = 12238304514300.0;
            mike['__workletHash'] = options;
            options = _closure1_slot15;
            mike['__initData'] = options;
            kilo = zulu.bind(oscar)(mike);
            mike = echo[sizing];
            oscar = result.bind(tango)(mike);
            zulu = oscar.useAnimatedProps;
            mike = function() { // Original name: L
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = {};
                    report = _closure1_slot0;
                    tango = _closure1_slot2;
                    zulu = 12;
                    tango = tango[zulu];
                    zulu = undefined;
                    oscar = report.bind(zulu)(tango);
                    report = oscar.withSpring;
                    options = _closure2_slot0;
                    tango = 0;
                    if(!options) { _fun00006_ip = 63; continue _fun00005 }
 44:
                    zulu = _closure2_slot2;
                    tango = 0;
                    if(!zulu) { _fun00006_ip = 63; continue _fun00005 }
 53:
                    tango = 0.3;
 63:
                    zulu = _closure1_slot7;
                    mike = 'animate-always';
                    mike = report.bind(oscar)(tango, zulu, mike);
                    entity['blurAmount'] = mike;
                    return entity;
                }
            };
            options = {};
            output = echo[output];
            output = result.bind(tango)(output);
            output = output.withSpring;
            options['withSpring'] = output;
            options['isTabsVisible'] = golf;
            options['isNuxVisible'] = romeo;
            options['MODE_CHANGE_PHYSICS'] = foxtrot;
            mike['__closure'] = options;
            options = 13587467032843.0;
            mike['__workletHash'] = options;
            options = _closure1_slot16;
            mike['__initData'] = options;
            options = zulu.bind(oscar)(mike);
            mike = global;
            zulu = mike.Object;
            mike = zulu.keys;
            mike = mike.bind(zulu)(report);
            update = mike.length;
            echo = 3;
            if(!(!(update <= echo))) { _fun00002_ip = 1008; continue _fun00001 }
 539:
            report = function() { // Original name: handleDismiss
                zulu = _closure2_slot3;
                entity = undefined;
                mike = false;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            zulu = _closure1_slot8;
            mike = _closure1_slot10;
            entity = {};
            oscar = _closure1_slot4;
            foxtrot = oscar.absoluteFill;
            oscar = new Array(2);
            oscar[0] = foxtrot;
            oscar[1] = offset;
            entity['style'] = oscar;
            offset = 'none';
            oscar = offset;
            if(!romeo) { _fun00002_ip = 602; continue _fun00001 }
 592:
            oscar = offset;
            if(!golf) { _fun00002_ip = 602; continue _fun00001 }
 598:
            oscar = 'auto';
 602:
            entity['pointerEvents'] = oscar;
            entity['onPressIn'] = report;
            entity['onPress'] = report;
            golf = _closure1_slot8;
            foxtrot = _closure1_slot1;
            romeo = _closure1_slot2;
            report = 13;
            report = romeo[report];
            oscar = foxtrot.bind(tango)(report);
            report = {};
            report['blurTheme'] = verify;
            verify = 'ultra-thin';
            report['blurStyle'] = verify;
            verify = backup.backdrop;
            report['style'] = verify;
            report['animatedProps'] = options;
            offset = _closure1_slot9;
            verify = _closure1_slot5;
            options = {};
            result = backup.copyContainer;
            output = new Array(2);
            output[0] = result;
            result = {};
            echo = update - echo;
            echo = source * echo;
            echo = echo / update;
            result['marginRight'] = echo;
            output[1] = result;
            options['style'] = output;
            control = _closure1_slot0;
            output = 14;
            yankee = romeo[output];
            yankee = control.bind(tango)(yankee);
            result = yankee.Text;
            yankee = {};
            echo = backup.nuxTitle;
            yankee['style'] = echo;
            echo = 'text-md/semibold';
            yankee['variant'] = echo;
            echo = 15;
            update = romeo[echo];
            update = control.bind(tango)(update);
            vacuum = update.intl;
            source = vacuum.string;
            update = romeo[echo];
            update = control.bind(tango)(update);
            update = update.t;
            update = update.MdrITE;
            update = source.bind(vacuum)(update);
            yankee['children'] = update;
            result = golf.bind(tango)(result, yankee);
            yankee = new Array(3);
            yankee[0] = result;
            output = romeo[output];
            output = control.bind(tango)(output);
            result = output.Text;
            output = {};
            update = backup.nuxSubtitle;
            output['style'] = update;
            update = 'heading-sm/medium';
            output['variant'] = update;
            update = romeo[echo];
            update = control.bind(tango)(update);
            source = update.intl;
            update = source.string;
            echo = romeo[echo];
            echo = control.bind(tango)(echo);
            echo = echo.t;
            echo = echo.lfpjfX;
            echo = update.bind(source)(echo);
            output['children'] = echo;
            output = golf.bind(tango)(result, output);
            yankee[1] = output;
            romeo = romeo[sizing];
            romeo = foxtrot.bind(tango)(romeo);
            foxtrot = romeo.View;
            romeo = {};
            sizing = backup.line;
            backup = new Array(2);
            backup[0] = sizing;
            backup[1] = kilo;
            romeo['style'] = backup;
            romeo = golf.bind(tango)(foxtrot, romeo);
            yankee[2] = romeo;
            options['children'] = yankee;
            options = offset.bind(tango)(verify, options);
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
 1008:
            entity = null;
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();