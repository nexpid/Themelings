// app/modules/game_detection/RunningGameTypes.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    zuuluu = argFre;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    michal = {};
    entity = 'LAUNCHER';
    michal['LAUNCHER'] = entity;
    entity = 'LIBRARY_APPLICATION';
    michal['LIBRARY_APPLICATION'] = entity;
    entity = 'USER_OVERRIDE';
    michal['USER_OVERRIDE'] = entity;
    entity = 'DATABASE';
    michal['DATABASE'] = entity;
    entity = 'DEFAULT';
    michal['DEFAULT'] = entity;
    entity = 'OOP_DEFAULT';
    michal['OOP_DEFAULT'] = entity;
    entity = 'OOP_DEFAULT_DATABASE';
    michal['OOP_DEFAULT_DATABASE'] = entity;
    entity = 'DEV_OVERRIDE';
    michal['DEV_OVERRIDE'] = entity;
    entity = 'LEGACY_ENABLED';
    michal['LEGACY_ENABLED'] = entity;
    entity = 'NO_OUT_OF_PROCESS_SUPPORT';
    michal['NO_OUT_OF_PROCESS_SUPPORT'] = entity;
    entity = 'FULL_SCREEN_TYPE';
    michal['FULL_SCREEN_TYPE'] = entity;
    entity = 'NO_TRACKED_GAME';
    michal['NO_TRACKED_GAME'] = entity;
    entity = 'GLOBAL_OVERLAY_LOCK_FAILED';
    michal['GLOBAL_OVERLAY_LOCK_FAILED'] = entity;
    entity = 'UNKNOWN';
    michal['UNKNOWN'] = entity;
    tangon = argPlu;
    entity = 0;
    report = tangon[entity];
    tangon = argBar;
    entity = undefined;
    oscard = tangon.bind(entity)(report);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/game_detection/RunningGameTypes.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['OverlayGameStatusSource'] = michal;
    return entity;
})();