// app/modules/guild_onboarding/native/GuildOnboardingCompleted.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    backup = tango.StyleSheet;
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot10 = tango;
    tango = 7;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    tango = {'flex': 1, 'position': 'relative'};
    golf['screen'] = tango;
    yankee = 24;
    tango = {'backgroundColor': 'rgba(0, 0, 0, 0.5)', 'paddingHorizontal': 24, 'display': 'flex', 'justifyContent': 'center', 'flexGrow': 1};
    golf['container'] = tango;
    tango = {};
    romeo = 8;
    offset = oscar[romeo];
    offset = foxtrot.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_TERTIARY;
    tango['backgroundColor'] = offset;
    golf['containerWithoutSplash'] = tango;
    tango = {'position': 'absolute', 'width': '100%', 'height': '100%'};
    golf['backgroundImage'] = tango;
    tango = {};
    golf['title'] = tango;
    tango = {};
    offset = 16;
    tango['marginTop'] = offset;
    golf['subtitle'] = tango;
    tango = {'marginTop': 24, 'padding': 16, 'paddingBottom': 32};
    kilo = oscar[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.sm;
    tango['borderRadius'] = kilo;
    kilo = oscar[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BACKGROUND_FLOATING;
    tango['backgroundColor'] = kilo;
    golf['card'] = tango;
    tango = {};
    tango['marginTop'] = offset;
    golf['username'] = tango;
    tango = {};
    tango['marginTop'] = romeo;
    golf['rolesHeader'] = tango;
    tango = {'marginTop': 12, 'display': 'flex', 'flexDirection': 'row', 'flexWrap': 'wrap'};
    golf['roles'] = tango;
    tango = {};
    tango['marginRight'] = romeo;
    golf['role'] = tango;
    offset = {'paddingHorizontal': 8, 'height': 28, 'borderRadius': null, 'display': 'flex', 'justifyContent': 'center'};
    tango = 28;
    kilo = oscar[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.xs;
    offset['borderRadius'] = kilo;
    backup = backup.hairlineWidth;
    offset['borderWidth'] = backup;
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MODIFIER_ACCENT;
    offset['borderColor'] = backup;
    golf['roleOverflow'] = offset;
    offset = {'marginTop': 24, 'borderColor': null, 'borderWidth': 2, 'borderRadius': null, 'padding': 12, 'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MODIFIER_ACCENT;
    offset['borderColor'] = backup;
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    offset['borderRadius'] = romeo;
    golf['animation'] = offset;
    offset = {};
    romeo = {};
    romeo['translateX'] = yankee;
    yankee = new Array(2);
    yankee[0] = romeo;
    romeo = {};
    foxtrot = '5deg';
    romeo['rotate'] = foxtrot;
    yankee[1] = romeo;
    offset['transform'] = yankee;
    golf['wave'] = offset;
    offset = {'flexGrow': 1, 'marginLeft': 8};
    golf['animationText'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot11 = golf;
    golf = {};
    options = "function GuildOnboardingCompletedTsx1(){const{withSequence,withTiming,withDelay,ANIMATION_DURATION,Easing,useReducedMotion}=this.__closure;const opacity=withSequence(withTiming(0,{duration:0}),withDelay(ANIMATION_DURATION,withTiming(0.5,{duration:ANIMATION_DURATION})),withTiming(1,{duration:ANIMATION_DURATION,easing:Easing.out(Easing.ease)}));const scale=withSequence(withTiming(1,{duration:0}),withDelay(ANIMATION_DURATION,withTiming(1.5,{duration:ANIMATION_DURATION,easing:Easing.out(Easing.ease)})),withTiming(1,{duration:useReducedMotion?1:ANIMATION_DURATION,easing:Easing.out(Easing.ease)}));const rawRotation=withSequence(withTiming('0deg',{duration:0}),withDelay(ANIMATION_DURATION,withTiming('-2deg',{duration:ANIMATION_DURATION})),withTiming('-5deg',{duration:ANIMATION_DURATION}));return{opacity:opacity,transform:[{rotate:rawRotation},{scale:scale}]};}";
    golf['code'] = options;
    var _closure1_slot12 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_onboarding/native/GuildOnboardingCompleted.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildOnboardingCompleted
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            papa = entity.guildId;
            var _closure2_slot0 = papa;
            yankee = entity.prompts;
            offset = entity.completeOnboarding;
            var _closure2_slot1 = offset;
            zulu = entity.onClose;
            var _closure2_slot2 = zulu;
            report = undefined;
            var _closure2_slot8 = report;
            var _closure2_slot9 = report;
            var _closure2_slot10 = report;
            entity = _closure1_slot11;
            config = entity.bind(report)();
            var _closure2_slot3 = config;
            oscar = _closure1_slot0;
            options = _closure1_slot2;
            entity = 9;
            entity = options[entity];
            mike = oscar.bind(report)(entity);
            entity = mike.useNavigation;
            tango = entity.bind(mike)();
            var _closure2_slot4 = tango;
            mike = 10;
            entity = options[mike];
            romeo = oscar.bind(report)(entity);
            verify = romeo.useStateFromStores;
            entity = _closure1_slot7;
            golf = new Array(1);
            golf[0] = entity;
            entity = function() {
                mike = _closure1_slot7;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            record = verify.bind(romeo)(golf, entity);
            entity = options[mike];
            foxtrot = oscar.bind(report)(entity);
            romeo = foxtrot.useStateFromStores;
            entity = _closure1_slot6;
            verify = new Array(1);
            verify[0] = entity;
            golf = function() {
                zulu = _closure1_slot6;
                mike = zulu.getGuild;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            variable36 = romeo.bind(foxtrot)(verify, golf);
            var _closure2_slot5 = variable36;
            golf = options[mike];
            romeo = oscar.bind(report)(golf);
            verify = romeo.useStateFromStores;
            golf = new Array(1);
            golf[0] = entity;
            entity = function() {
                zulu = _closure1_slot6;
                mike = zulu.getRoles;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            entity = verify.bind(romeo)(golf, entity);
            var _closure2_slot6 = entity;
            golf = _closure1_slot1;
            entity = 11;
            entity = options[entity];
            entity = golf.bind(report)(entity);
            foxtrot = entity.bind(report)(papa);
            var _closure2_slot7 = foxtrot;
            entity = 12;
            entity = options[entity];
            golf = oscar.bind(report)(entity);
            entity = golf.useThemeContext;
            entity = entity.bind(golf)();
            golf = entity.theme;
            entity = 13;
            entity = options[entity];
            oscar = oscar.bind(report)(entity);
            entity = oscar.useProfileThemeValues;
            golf = entity.bind(oscar)(golf);
            whiskey = {};
            entity = null;
            options = entity == golf;
            oscar = undefined;
            if(options) { _fun00002_ip = 316; continue _fun00001 }
 310:
            oscar = golf.rolePillBackgroundColor;
 316:
            whiskey['backgroundColor'] = oscar;
            oscar = entity != variable36;
            echo = null;
            if(!oscar) { _fun00002_ip = 412; continue _fun00001 }
 329:
            romeo = _closure1_slot1;
            backup = _closure1_slot2;
            oscar = 14;
            oscar = backup[oscar];
            options = romeo.bind(report)(oscar);
            golf = options.getGuildSplashURL;
            oscar = {};
            verify = variable36.id;
            oscar['id'] = verify;
            verify = variable36.splash;
            oscar['splash'] = verify;
            verify = 15;
            verify = backup[verify];
            verify = romeo.bind(report)(verify);
            romeo = verify.bind(report)();
            verify = 400;
            verify = verify * romeo;
            oscar['size'] = verify;
            echo = golf.bind(options)(oscar);
 412:
            verify = _closure1_slot0;
            options = _closure1_slot2;
            oscar = options[mike];
            kilo = verify.bind(report)(oscar);
            backup = kilo.useStateFromStoresArray;
            oscar = _closure1_slot8;
            romeo = new Array(1);
            romeo[0] = oscar;
            golf = new Array(1);
            golf[0] = papa;
            oscar = function() {
                zulu = _closure1_slot8;
                mike = zulu.getOnboardingResponses;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            oscar = backup.bind(kilo)(romeo, oscar, golf);
            _closure2_slot8 = oscar;
            golf = yankee.map;
            oscar = function(argFoo) {
                entity = argFoo;
                entity = entity.options;
                return entity;
            };
            golf = golf.bind(yankee)(oscar);
            oscar = golf.flat;
            yankee = oscar.bind(golf)();
            golf = yankee.filter;
            oscar = function(argFoo) {
                zulu = _closure2_slot8;
                mike = zulu.includes;
                entity = argFoo;
                entity = entity.id;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            oscar = golf.bind(yankee)(oscar);
            _closure2_slot9 = oscar;
            golf = _closure1_slot3;
            romeo = golf.useMemo;
            yankee = new Array(2);
            yankee[0] = foxtrot;
            yankee[1] = oscar;
            oscar = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    report = _closure2_slot9;
                    mike = report.map;
                    entity = function(argFoo) {
                        entity = argFoo;
                        entity = entity.roleIds;
                        return entity;
                    };
                    mike = mike.bind(report)(entity);
                    entity = mike.flat;
                    report = entity.bind(mike)();
                    mike = report.filter;
                    golf = _closure1_slot0;
                    oscar = _closure1_slot2;
                    entity = 16;
                    oscar = oscar[entity];
                    entity = undefined;
                    entity = golf.bind(entity)(oscar);
                    entity = entity.isNotNullish;
                    mike = mike.bind(report)(entity);
                    entity = {};
                    report = _closure2_slot7;
                    zulu = null;
                    report = zulu != report;
                    options = 0;
                    zulu = 0;
                    if(!report) { _fun00004_ip = 162; continue _fun00003 }
 94:
                    report = mike.length;
                    report = report > options;
                    zulu = 0;
                    if(!report) { _fun00004_ip = 162; continue _fun00003 }
 108:
                    report = global;
                    oscar = report.Math;
                    report = oscar.max;
                    golf = mike.map;
                    tango = function(argFoo) {
                        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                            mike = _closure2_slot7;
                            entity = argFoo;
                            mike = mike[entity];
                            entity = null;
                            zulu = entity != mike;
                            entity = 0;
                            if(!zulu) { _fun00006_ip = 28; continue _fun00005 }
 25:
                            entity = mike;
 28:
                            return entity;
                        }
                    };
                    offset = golf.bind(mike)(tango);
                    tango = new Array(0);
                    yankee = tango;
                    verify = 0;
                    golf = arraySpread(yankee, offset, verify);
                    yankee = report;
                    offset = tango;
                    verify = oscar;
                    zulu = apply(yankee, offset, verify);
 162:
                    entity['numSharedRoleMembers'] = zulu;
                    entity['allSelectedRoleIds'] = mike;
                    return entity;
                }
            };
            oscar = romeo.bind(golf)(oscar, yankee);
            variable39 = oscar.numSharedRoleMembers;
            sierra = oscar.allSelectedRoleIds;
            yankee = golf.useLayoutEffect;
            oscar = new Array(1);
            oscar[0] = tango;
            tango = function() {
                zulu = _closure2_slot4;
                mike = zulu.setOptions;
                entity = {};
                tango = function() { // Original name: headerLeft
                    entity = null;
                    return entity;
                };
                entity['headerLeft'] = tango;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            tango = yankee.bind(golf)(tango, oscar);
            oscar = golf.useEffect;
            tango = new Array(2);
            tango[0] = offset;
            tango[1] = zulu;
            zulu = function() {
                entity = global;
                tango = entity.setTimeout;
                entity = undefined;
                zulu = function() {
                    zulu = _closure2_slot1;
                    entity = undefined;
                    zulu = zulu.bind(entity)();
                    mike = _closure2_slot2;
                    mike = mike.bind(entity)();
                    return entity;
                };
                mike = 3600;
                mike = tango.bind(entity)(zulu, mike);
                return entity;
            };
            zulu = oscar.bind(golf)(zulu, tango);
            mike = options[mike];
            oscar = verify.bind(report)(mike);
            tango = oscar.useStateFromStores;
            mike = _closure1_slot5;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                entity = _closure1_slot5;
                entity = entity.useReducedMotion;
                return entity;
            };
            golf = tango.bind(oscar)(zulu, mike);
            _closure2_slot10 = golf;
            result = 17;
            mike = options[result];
            tango = verify.bind(report)(mike);
            zulu = tango.useAnimatedStyle;
            mike = function() { // Original name: q
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    offset = _closure1_slot0;
                    entity = _closure1_slot2;
                    report = 17;
                    mike = entity[report];
                    yankee = undefined;
                    foxtrot = offset.bind(yankee)(mike);
                    options = foxtrot.withSequence;
                    romeo = 18;
                    mike = entity[romeo];
                    tango = offset.bind(yankee)(mike);
                    zulu = tango.withTiming;
                    mike = {};
                    oscar = 0;
                    mike['duration'] = oscar;
                    golf = zulu.bind(tango)(oscar, mike);
                    mike = entity[report];
                    backup = offset.bind(yankee)(mike);
                    tango = backup.withDelay;
                    mike = entity[romeo];
                    output = offset.bind(yankee)(mike);
                    sizing = output.withTiming;
                    kilo = {};
                    mike = 400;
                    kilo['duration'] = mike;
                    zulu = 0.5;
                    zulu = sizing.bind(output)(zulu, kilo);
                    tango = tango.bind(backup)(mike, zulu);
                    zulu = entity[romeo];
                    kilo = offset.bind(yankee)(zulu);
                    backup = kilo.withTiming;
                    zulu = {};
                    zulu['duration'] = mike;
                    sizing = entity[report];
                    sizing = offset.bind(yankee)(sizing);
                    result = sizing.Easing;
                    output = result.out;
                    sizing = entity[report];
                    sizing = offset.bind(yankee)(sizing);
                    sizing = sizing.Easing;
                    sizing = sizing.ease;
                    sizing = output.bind(result)(sizing);
                    zulu['easing'] = sizing;
                    sizing = 1;
                    zulu = backup.bind(kilo)(sizing, zulu);
                    zulu = options.bind(foxtrot)(golf, tango, zulu);
                    tango = entity[report];
                    foxtrot = offset.bind(yankee)(tango);
                    options = foxtrot.withSequence;
                    tango = entity[romeo];
                    backup = offset.bind(yankee)(tango);
                    golf = backup.withTiming;
                    tango = {};
                    tango['duration'] = oscar;
                    golf = golf.bind(backup)(sizing, tango);
                    tango = entity[report];
                    kilo = offset.bind(yankee)(tango);
                    backup = kilo.withDelay;
                    tango = entity[romeo];
                    echo = offset.bind(yankee)(tango);
                    result = echo.withTiming;
                    output = {};
                    output['duration'] = mike;
                    tango = entity[report];
                    tango = offset.bind(yankee)(tango);
                    source = tango.Easing;
                    update = source.out;
                    tango = entity[report];
                    tango = offset.bind(yankee)(tango);
                    tango = tango.Easing;
                    tango = tango.ease;
                    tango = update.bind(source)(tango);
                    output['easing'] = tango;
                    tango = 1.5;
                    tango = result.bind(echo)(tango, output);
                    tango = backup.bind(kilo)(mike, tango);
                    entity = entity[romeo];
                    kilo = offset.bind(yankee)(entity);
                    backup = kilo.withTiming;
                    entity = {};
                    output = _closure2_slot10;
                    offset = sizing;
                    if(output) { _fun00008_ip = 395; continue _fun00007 }
 392:
                    offset = mike;
 395:
                    entity['duration'] = offset;
                    offset = _closure1_slot0;
                    verify = _closure1_slot2;
                    output = verify[report];
                    output = offset.bind(yankee)(output);
                    echo = output.Easing;
                    result = echo.out;
                    output = verify[report];
                    output = offset.bind(yankee)(output);
                    output = output.Easing;
                    output = output.ease;
                    output = result.bind(echo)(output);
                    entity['easing'] = output;
                    entity = backup.bind(kilo)(sizing, entity);
                    tango = options.bind(foxtrot)(golf, tango, entity);
                    entity = {};
                    entity['opacity'] = zulu;
                    zulu = {};
                    golf = verify[report];
                    options = offset.bind(yankee)(golf);
                    golf = options.withSequence;
                    foxtrot = verify[romeo];
                    kilo = offset.bind(yankee)(foxtrot);
                    backup = kilo.withTiming;
                    foxtrot = {};
                    foxtrot['duration'] = oscar;
                    oscar = '0deg';
                    oscar = backup.bind(kilo)(oscar, foxtrot);
                    report = verify[report];
                    backup = offset.bind(yankee)(report);
                    foxtrot = backup.withDelay;
                    report = verify[romeo];
                    output = offset.bind(yankee)(report);
                    sizing = output.withTiming;
                    kilo = {};
                    kilo['duration'] = mike;
                    report = '-2deg';
                    report = sizing.bind(output)(report, kilo);
                    report = foxtrot.bind(backup)(mike, report);
                    verify = verify[romeo];
                    yankee = offset.bind(yankee)(verify);
                    offset = yankee.withTiming;
                    verify = {};
                    verify['duration'] = mike;
                    mike = '-5deg';
                    mike = offset.bind(yankee)(mike, verify);
                    mike = golf.bind(options)(oscar, report, mike);
                    zulu['rotate'] = mike;
                    mike = new Array(2);
                    mike[0] = zulu;
                    zulu = {};
                    zulu['scale'] = tango;
                    mike[1] = zulu;
                    entity['transform'] = mike;
                    return entity;
                }
            };
            oscar = {};
            offset = options[result];
            offset = verify.bind(report)(offset);
            offset = offset.withSequence;
            oscar['withSequence'] = offset;
            offset = 18;
            offset = options[offset];
            offset = verify.bind(report)(offset);
            offset = offset.withTiming;
            oscar['withTiming'] = offset;
            offset = options[result];
            offset = verify.bind(report)(offset);
            offset = offset.withDelay;
            oscar['withDelay'] = offset;
            offset = 400;
            oscar['ANIMATION_DURATION'] = offset;
            options = options[result];
            options = verify.bind(report)(options);
            options = options.Easing;
            oscar['Easing'] = options;
            oscar['useReducedMotion'] = golf;
            mike['__closure'] = oscar;
            oscar = 8282245217026.0;
            mike['__workletHash'] = oscar;
            oscar = _closure1_slot12;
            mike['__initData'] = oscar;
            vacuum = zulu.bind(tango)(mike);
            if(!(entity != record)) { _fun00002_ip = 2278; continue _fun00001 }
 819:
            if(!(entity != variable36)) { _fun00002_ip = 2278; continue _fun00001 }
 826:
            mike = sierra.length;
            status = 3;
            variable37 = mike - status;
            tango = _closure1_slot10;
            zulu = _closure1_slot4;
            mike = {};
            oscar = config.screen;
            mike['style'] = oscar;
            oscar = entity != echo;
            golf = null;
            if(!oscar) { _fun00002_ip = 920; continue _fun00001 }
 867:
            verify = _closure1_slot9;
            options = _closure1_slot1;
            offset = _closure1_slot2;
            oscar = 19;
            oscar = offset[oscar];
            options = options.bind(report)(oscar);
            oscar = {};
            offset = {};
            offset['uri'] = echo;
            oscar['source'] = offset;
            offset = config.backgroundImage;
            oscar['style'] = offset;
            golf = verify.bind(report)(options, oscar);
 920:
            oscar = new Array(2);
            oscar[0] = golf;
            verify = _closure1_slot9;
            options = _closure1_slot0;
            offset = _closure1_slot2;
            golf = 20;
            golf = offset[golf];
            golf = options.bind(report)(golf);
            options = golf.SafeAreaPaddingView;
            golf = {};
            offset = true;
            golf['bottom'] = offset;
            yankee = config.container;
            offset = new Array(2);
            offset[0] = yankee;
            romeo = entity == echo;
            yankee = null;
            if(!romeo) { _fun00002_ip = 994; continue _fun00001 }
 988:
            yankee = config.containerWithoutSplash;
 994:
            offset[1] = yankee;
            golf['style'] = offset;
            romeo = _closure1_slot10;
            yankee = _closure1_slot4;
            offset = {};
            update = _closure1_slot9;
            backup = _closure1_slot0;
            foxtrot = _closure1_slot2;
            target = 21;
            foxtrot = foxtrot[target];
            foxtrot = backup.bind(report)(foxtrot);
            sizing = foxtrot.Text;
            foxtrot = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xxl/extrabold'};
            backup = config.title;
            foxtrot['style'] = backup;
            kilo = entity == echo;
            output = 'always-white';
            backup = output;
            if(!kilo) { _fun00002_ip = 1088; continue _fun00001 }
 1082:
            backup = 'header-primary';
 1088:
            foxtrot['color'] = backup;
            kilo = _closure1_slot0;
            backup = _closure1_slot2;
            lima = 22;
            source = backup[lima];
            source = kilo.bind(report)(source);
            equality = source.intl;
            context = equality.string;
            source = backup[lima];
            source = kilo.bind(report)(source);
            source = source.t;
            source = source.PFWIYW;
            source = context.bind(equality)(source);
            foxtrot['children'] = source;
            sizing = update.bind(report)(sizing, foxtrot);
            foxtrot = new Array(3);
            foxtrot[0] = sizing;
            sizing = _closure1_slot9;
            backup = backup[target];
            backup = kilo.bind(report)(backup);
            kilo = backup.Text;
            backup = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-md/medium'};
            update = config.subtitle;
            backup['style'] = update;
            echo = entity == echo;
            if(!echo) { _fun00002_ip = 1224; continue _fun00001 }
 1218:
            output = 'text-muted';
 1224:
            backup['color'] = output;
            update = _closure1_slot0;
            echo = _closure1_slot2;
            output = echo[lima];
            output = update.bind(report)(output);
            context = output.intl;
            source = context.string;
            output = echo[lima];
            output = update.bind(report)(output);
            output = output.t;
            output = output.og4NNj;
            output = source.bind(context)(output);
            backup['children'] = output;
            backup = sizing.bind(report)(kilo, backup);
            foxtrot[1] = backup;
            sizing = _closure1_slot10;
            kilo = _closure1_slot4;
            backup = {};
            output = config.card;
            backup['style'] = output;
            source = _closure1_slot9;
            context = _closure1_slot1;
            equality = 23;
            output = echo[equality];
            context = context.bind(report)(output);
            output = {};
            equality = echo[equality];
            equality = update.bind(report)(equality);
            equality = equality.AvatarSizes;
            equality = equality.XXLARGE;
            output['size'] = equality;
            output['user'] = record;
            output['guildId'] = papa;
            papa = false;
            output['animate'] = papa;
            context = source.bind(report)(context, output);
            output = new Array(5);
            output[0] = context;
            echo = echo[target];
            echo = update.bind(report)(echo);
            update = echo.Text;
            echo = {'style': null, 'variant': 'heading-xl/semibold', 'color': 'header-primary'};
            context = config.username;
            echo['style'] = context;
            record = record.username;
            echo['children'] = record;
            echo = source.bind(report)(update, echo);
            output[1] = echo;
            context = 0;
            update = variable39 > context;
            echo = null;
            if(!update) { _fun00002_ip = 1577; continue _fun00001 }
 1461:
            record = _closure1_slot9;
            equality = _closure1_slot0;
            papa = _closure1_slot2;
            update = papa[target];
            update = equality.bind(report)(update);
            source = update.Text;
            update = {'style': null, 'variant': 'text-sm/normal', 'color': 'text-muted'};
            quebec = config.rolesHeader;
            update['style'] = quebec;
            quebec = papa[lima];
            quebec = equality.bind(report)(quebec);
            variable38 = quebec.intl;
            quebec = variable38.format;
            papa = papa[lima];
            papa = equality.bind(report)(papa);
            papa = papa.t;
            equality = papa.l1Jc1t;
            papa = {};
            papa['numSharedRoleMembers'] = variable39;
            papa = quebec.bind(variable38)(equality, papa);
            update['children'] = papa;
            echo = record.bind(report)(source, update);
 1577:
            output[2] = echo;
            source = _closure1_slot10;
            update = _closure1_slot4;
            echo = {};
            record = config.roles;
            echo['style'] = record;
            papa = sierra.map;
            record = function(argFoo) {
                mike = _closure2_slot6;
                entity = argFoo;
                entity = mike[entity];
                return entity;
            };
            sierra = papa.bind(sierra)(record);
            papa = sierra.filter;
            equality = _closure1_slot0;
            quebec = _closure1_slot2;
            record = 16;
            record = quebec[record];
            record = equality.bind(report)(record);
            record = record.isNotNullish;
            papa = papa.bind(sierra)(record);
            record = papa.slice;
            papa = record.bind(papa)(context, status);
            record = papa.map;
            sequence = function(argFoo) {
                entity = argFoo;
                report = _closure1_slot9;
                tango = _closure1_slot4;
                zulu = {};
                oscar = _closure2_slot3;
                oscar = oscar.role;
                zulu['style'] = oscar;
                golf = _closure1_slot1;
                oscar = _closure1_slot2;
                mike = 24;
                oscar = oscar[mike];
                mike = undefined;
                golf = golf.bind(mike)(oscar);
                oscar = {};
                oscar['role'] = entity;
                options = _closure2_slot5;
                options = options.id;
                oscar['guildId'] = options;
                options = true;
                oscar['disableInteraction'] = options;
                oscar = report.bind(mike)(golf, oscar);
                zulu['children'] = oscar;
                entity = entity.id;
                entity = report.bind(mike)(tango, zulu, entity);
                return entity;
            };
            record = record.bind(papa)(sequence);
            sequence = new Array(2);
            sequence[0] = record;
            record = null;
            if(!(variable37 > context)) { _fun00002_ip = 1802; continue _fun00001 }
 1692:
            status = _closure1_slot9;
            papa = _closure1_slot4;
            context = {};
            equality = config.roleOverflow;
            sierra = new Array(2);
            sierra[0] = equality;
            sierra[1] = whiskey;
            context['style'] = sierra;
            whiskey = _closure1_slot0;
            sierra = _closure1_slot2;
            sierra = sierra[target];
            sierra = whiskey.bind(report)(sierra);
            whiskey = sierra.Text;
            sierra = {'variant': 'heading-deprecated-12/semibold', 'color': 'header-primary'};
            equality = global;
            equality = equality.HermesInternal;
            quebec = equality.concat;
            equality = '+';
            equality = quebec.bind(equality)(variable37);
            sierra['children'] = equality;
            sierra = status.bind(report)(whiskey, sierra);
            context['children'] = sierra;
            record = status.bind(report)(papa, context);
 1802:
            sequence[1] = record;
            echo['children'] = sequence;
            echo = source.bind(report)(update, echo);
            output[3] = echo;
            update = _closure1_slot10;
            context = _closure1_slot1;
            papa = _closure1_slot2;
            result = papa[result];
            result = context.bind(report)(result);
            echo = result.View;
            result = {};
            sequence = config.animation;
            source = new Array(2);
            source[0] = sequence;
            source[1] = vacuum;
            result['style'] = source;
            sequence = _closure1_slot9;
            record = 25;
            source = papa[record];
            vacuum = context.bind(report)(source);
            source = {};
            source['guild'] = variable36;
            status = _closure1_slot0;
            record = papa[record];
            record = status.bind(report)(record);
            record = record.GuildIconSizes;
            record = record.LARGE;
            source['size'] = record;
            vacuum = sequence.bind(report)(vacuum, source);
            source = new Array(3);
            source[0] = vacuum;
            vacuum = _closure1_slot4;
            control = {};
            record = config.animationText;
            control['style'] = record;
            record = papa[target];
            record = status.bind(report)(record);
            sierra = record.Text;
            record = {'variant': 'text-sm/medium', 'color': 'header-primary'};
            whiskey = papa[lima];
            whiskey = status.bind(report)(whiskey);
            quebec = whiskey.intl;
            equality = quebec.format;
            lima = papa[lima];
            lima = status.bind(report)(lima);
            lima = lima.t;
            whiskey = lima.FXREhY;
            lima = {};
            variable36 = variable36.name;
            lima['guildName'] = variable36;
            lima = equality.bind(quebec)(whiskey, lima);
            record['children'] = lima;
            sierra = sequence.bind(report)(sierra, record);
            record = new Array(2);
            record[0] = sierra;
            target = papa[target];
            target = status.bind(report)(target);
            status = target.Text;
            target = {'variant': 'text-xs/normal', 'color': 'text-muted'};
            sierra = 26;
            sierra = papa[sierra];
            sierra = context.bind(report)(sierra);
            whiskey = sierra.bind(report)();
            lima = whiskey.format;
            sierra = 'LL';
            whiskey = lima.bind(whiskey)(sierra);
            sierra = global;
            sierra = sierra.HermesInternal;
            lima = sierra.concat;
            sierra = '';
            sierra = lima.bind(sierra)(whiskey);
            target['children'] = sierra;
            target = sequence.bind(report)(status, target);
            record[1] = target;
            control['children'] = record;
            control = update.bind(report)(vacuum, control);
            source[1] = control;
            control = 19;
            control = papa[control];
            vacuum = context.bind(report)(control);
            control = {};
            record = 27;
            record = papa[record];
            record = context.bind(report)(record);
            control['source'] = record;
            config = config.wave;
            control['style'] = config;
            control = sequence.bind(report)(vacuum, control);
            source[2] = control;
            result['children'] = source;
            result = update.bind(report)(echo, result);
            output[4] = result;
            backup['children'] = output;
            backup = sizing.bind(report)(kilo, backup);
            foxtrot[2] = backup;
            offset['children'] = foxtrot;
            offset = romeo.bind(report)(yankee, offset);
            golf['children'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            mike = tango.bind(report)(zulu, mike);
            return mike;
 2278:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();