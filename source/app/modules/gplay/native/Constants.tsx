// app/modules/gplay/native/Constants.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var3 = exports;
    var1 = global;
    var7 = var1.Object;
    var6 = var7.defineProperty;
    var5 = {};
    var4 = true;
    var5['value'] = var4;
    var4 = '__esModule';
    var4 = var6.bind(var7)(var3, var4, var5);
    var7 = {};
    var8 = 0;
    var7['DISCONNECTED'] = var8;
    var4 = 'DISCONNECTED';
    var7[var8] = var4;
    var9 = 1;
    var7['CONNECTING'] = var9;
    var4 = 'CONNECTING';
    var7[var9] = var4;
    var10 = 2;
    var7['CONNECTED'] = var10;
    var4 = 'CONNECTED';
    var7[var10] = var4;
    var12 = 3;
    var7['ERROR'] = var12;
    var11 = 'ERROR';
    var7[var12] = var11;
    var6 = {};
    var6['EXECUTE'] = var8;
    var4 = 'EXECUTE';
    var6[var8] = var4;
    var6['CLEAR'] = var9;
    var4 = 'CLEAR';
    var6[var9] = var4;
    var5 = {};
    var5['BILLING_UNAVAILABLE'] = var12;
    var4 = 'BILLING_UNAVAILABLE';
    var5[var12] = var4;
    var12 = 999;
    var5['BILLING_CLIENT_NOT_READY'] = var12;
    var4 = 'BILLING_CLIENT_NOT_READY';
    var5[var12] = var4;
    var12 = 5;
    var5['DEVELOPER_ERROR'] = var12;
    var4 = 'DEVELOPER_ERROR';
    var5[var12] = var4;
    var4 = 6;
    var5['ERROR'] = var4;
    var5[var4] = var11;
    var11 = -2;
    var5['FEATURE_NOT_SUPPORTED'] = var11;
    var4 = 'FEATURE_NOT_SUPPORTED';
    var5[var11] = var4;
    var11 = 7;
    var5['ITEM_ALREADY_OWNED'] = var11;
    var4 = 'ITEM_ALREADY_OWNED';
    var5[var11] = var4;
    var11 = 8;
    var5['ITEM_NOT_OWNED'] = var11;
    var4 = 'ITEM_NOT_OWNED';
    var5[var11] = var4;
    var11 = 4;
    var5['ITEM_UNAVAILABLE'] = var11;
    var4 = 'ITEM_UNAVAILABLE';
    var5[var11] = var4;
    var11 = 12;
    var5['NETWORK_ERROR'] = var11;
    var4 = 'NETWORK_ERROR';
    var5[var11] = var4;
    var5['OK'] = var8;
    var4 = 'OK';
    var5[var8] = var4;
    var11 = -1;
    var5['SERVICE_DISCONNECTED'] = var11;
    var4 = 'SERVICE_DISCONNECTED';
    var5[var11] = var4;
    var11 = -3;
    var5['SERVICE_TIMEOUT'] = var11;
    var4 = 'SERVICE_TIMEOUT';
    var5[var11] = var4;
    var5['SERVICE_UNAVAILABLE'] = var10;
    var4 = 'SERVICE_UNAVAILABLE';
    var5[var10] = var4;
    var5['USER_CANCELED'] = var9;
    var4 = 'USER_CANCELED';
    var5[var9] = var4;
    var4 = {};
    var9 = 'in_app';
    var4['IN_APP'] = var9;
    var9 = 'subscription';
    var4['SUBSCRIPTION'] = var9;
    var10 = var1.Set;
    var9 = var5.SERVICE_DISCONNECTED;
    var1 = new Array(5);
    var1[0] = var9;
    var9 = var5.SERVICE_TIMEOUT;
    var1[1] = var9;
    var9 = var5.SERVICE_UNAVAILABLE;
    var1[2] = var9;
    var9 = var5.NETWORK_ERROR;
    var1[3] = var9;
    var9 = var5.BILLING_CLIENT_NOT_READY;
    var1[4] = var9;
    var9 = var10.prototype;
    var9 = Object.create(var9, {constructor: {value: var10}});
    var16 = var9;
    var15 = var1;
    var1 = new var16[var10](var15, var14);
    var1 = var1 instanceof Object ? var1 : var9;
    var _closure1_slot0 = var1;
    var1 = dependencyMap;
    var9 = var1[var8];
    var8 = require;
    var1 = undefined;
    var10 = var8.bind(var1)(var9);
    var9 = var10.fileFinishedImporting;
    var8 = 'modules/gplay/native/Constants.tsx';
    var8 = var9.bind(var10)(var8);
    var3['GPlayConnectionState'] = var7;
    var3['GPlayDowngradeCommand'] = var6;
    var3['GPlayBillingResult'] = var5;
    var3['GPlaySkusType'] = var4;
    var2 = function isTransientGPlayBillingResult(arg1) {
        var3 = _closure1_slot0;
        var2 = var3.has;
        var1 = arg1;
        var1 = var2.bind(var3)(var1);
        return var1;
    };
    var3['isTransientGPlayBillingResult'] = var2;
    return var1;
})();