// app/modules/gplay/native/GPlayAnalyticsStore.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var6 = require;
    var3 = exports;
    var7 = dependencyMap;
    var _closure1_slot0 = var6;
    var _closure1_slot1 = var7;
    var1 = global;
    var9 = var1.Object;
    var8 = var9.defineProperty;
    var5 = {};
    var2 = true;
    var5['value'] = var2;
    var2 = '__esModule';
    var2 = var8.bind(var9)(var3, var2, var5);
    var5 = var1.Object;
    var2 = var5.freeze;
    var1 = {};
    var8 = {};
    var1['analyticsByProductId'] = var8;
    var1 = var2.bind(var5)(var1);
    var _closure1_slot2 = var1;
    var1 = 0;
    var2 = var7[var1];
    var1 = undefined;
    var8 = var6.bind(var1)(var2);
    var5 = var8.create;
    var2 = function() {
        var1 = _closure1_slot2;
        return var1;
    };
    var2 = var5.bind(var8)(var2);
    var _closure1_slot3 = var2;
    var5 = 2;
    var5 = var7[var5];
    var7 = var6.bind(var1)(var5);
    var6 = var7.fileFinishedImporting;
    var5 = 'modules/gplay/native/GPlayAnalyticsStore.tsx';
    var5 = var6.bind(var7)(var5);
    var5 = function(arg1, arg2) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var1 = arg2;
        var _closure2_slot1 = var1;
        var4 = _closure1_slot0;
        var3 = _closure1_slot1;
        var1 = 1;
        var3 = var3[var1];
        var1 = undefined;
        var4 = var4.bind(var1)(var3);
        var3 = var4.batchUpdates;
        var2 = function() {
            var3 = _closure1_slot3;
            var2 = var3.setState;
            var1 = function(arg1) {
                var1 = {};
                var2 = {};
                var3 = arg1;
                var5 = var3.analyticsByProductId;
                var6 = var2;
                var3 = copyDataProperties(var6, var5);
                var4 = _closure2_slot0;
                var3 = _closure2_slot1;
                var2[var4] = var3;
                var1['analyticsByProductId'] = var2;
                return var1;
            };
            var1 = var2.bind(var3)(var1);
            var1 = undefined;
            return var1;
        };
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['setGPlayAnalytics'] = var5;
    var4 = function(arg1) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var4 = _closure1_slot0;
        var3 = _closure1_slot1;
        var1 = 1;
        var3 = var3[var1];
        var1 = undefined;
        var4 = var4.bind(var1)(var3);
        var3 = var4.batchUpdates;
        var2 = function() {
            var3 = _closure1_slot3;
            var2 = var3.setState;
            var1 = function(arg1) {
                var2 = {};
                var1 = arg1;
                var3 = var1.analyticsByProductId;
                var4 = var2;
                var1 = copyDataProperties(var4, var3);
                var1 = _closure2_slot0;
                var1 = delete var2[var1];
                var1 = {};
                var1['analyticsByProductId'] = var2;
                return var1;
            };
            var1 = var2.bind(var3)(var1);
            var1 = undefined;
            return var1;
        };
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['deleteGPlayAnalytics'] = var4;
    var3['useGPlayAnalyticsStore'] = var2;
    return var1;
})();