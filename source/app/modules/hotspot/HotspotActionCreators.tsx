// app/modules/hotspot/HotspotActionCreators.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot2 = tango;
    tango = 3;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/hotspot/HotspotActionCreators.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: hideHotspot
        verify = argFoo;
        var _closure2_slot0 = verify;
        tango = _closure1_slot0;
        report = _closure1_slot1;
        entity = 1;
        oscar = report[entity];
        entity = undefined;
        options = tango.bind(entity)(oscar);
        golf = options.track;
        zulu = _closure1_slot2;
        oscar = zulu.HOTSPOT_HIDDEN;
        zulu = {};
        zulu['hotspot_location'] = verify;
        zulu = golf.bind(options)(oscar, zulu);
        zulu = 2;
        zulu = report[zulu];
        tango = tango.bind(entity)(zulu);
        zulu = tango.wait;
        mike = function() {
            zulu = _closure1_slot0;
            mike = _closure1_slot1;
            entity = 2;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.dispatch;
            mike = {};
            report = 'HOTSPOT_HIDE';
            mike['type'] = report;
            report = _closure2_slot0;
            mike['location'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['hideHotspot'] = tango;
    tango = function(argFoo, argBar) { // Original name: setHotspotOverride
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 2;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'HOTSPOT_OVERRIDE_SET';
        mike['type'] = report;
        report = argFoo;
        mike['location'] = report;
        report = argBar;
        mike['enabled'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['setHotspotOverride'] = tango;
    mike = function(argFoo) { // Original name: clearHotspotOverride
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 2;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'HOTSPOT_OVERRIDE_CLEAR';
        mike['type'] = report;
        report = argFoo;
        mike['location'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['clearHotspotOverride'] = mike;
    return entity;
})();