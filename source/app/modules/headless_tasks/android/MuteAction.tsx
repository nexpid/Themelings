// app/modules/headless_tasks/android/MuteAction.tsx
export default (function(argFoo, argBar, argBaz, _, argGrault, __, argPlugh) {
    zulu = argBar;
    tango = argPlugh;
    var _closure1_slot0 = zulu;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = tango;
    entity = 0;
    report = tango[entity];
    entity = undefined;
    report = zulu.bind(entity)(report);
    report = report.MuteUntilSeconds;
    var _closure1_slot3 = report;
    report = function(argFoo) {
        mike = argFoo;
        var _closure2_slot0 = mike;
        mike = global;
        zulu = mike.Promise;
        mike = zulu.prototype;
        mike = Object.create(mike, {constructor: {value: zulu}});
        tango = function(argFoo) {
            entity = argFoo;
            var _closure3_slot0 = entity;
            tango = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 1;
            zulu = zulu[entity];
            entity = undefined;
            tango = tango.bind(entity)(zulu);
            zulu = tango.awaitStorage;
            mike = function() {
                tango = _closure1_slot1;
                offset = _closure1_slot2;
                entity = 2;
                zulu = offset[entity];
                entity = undefined;
                zulu = tango.bind(entity)(zulu);
                golf = zulu.bind(entity)();
                oscar = golf.add;
                romeo = _closure1_slot3;
                report = romeo.HOURS_1;
                zulu = 'second';
                report = oscar.bind(golf)(report, zulu);
                zulu = report.toISOString;
                yankee = zulu.bind(report)();
                zulu = 3;
                zulu = offset[zulu];
                options = tango.bind(entity)(zulu);
                golf = options.updateChannelOverrideSettings;
                zulu = _closure2_slot0;
                oscar = zulu.guildId;
                kilo = zulu.channelId;
                tango = {};
                zulu = true;
                tango['muted'] = zulu;
                verify = {};
                romeo = romeo.HOURS_1;
                verify['selected_time_window'] = romeo;
                verify['end_time'] = yankee;
                tango['mute_config'] = verify;
                verify = _closure1_slot0;
                mike = 4;
                mike = offset[mike];
                mike = verify.bind(entity)(mike);
                mike = mike.NotificationLabels;
                foxtrot = mike.Muted;
                output = options;
                sizing = oscar;
                backup = tango;
                mike = output[golf](sizing, kilo, backup, foxtrot, romeo);
                mike = _closure3_slot0;
                mike = mike.bind(entity)(zulu);
                return entity;
            };
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        report = mike;
        entity = new report[zulu](tango, zulu);
        entity = entity instanceof Object ? entity : mike;
        return entity;
    };
    mike = argGrault;
    mike['exports'] = report;
    mike = 5;
    mike = tango[mike];
    tango = zulu.bind(entity)(mike);
    zulu = tango.fileFinishedImporting;
    mike = 'modules/headless_tasks/android/MuteAction.tsx';
    mike = zulu.bind(tango)(mike);
    return entity;
})();