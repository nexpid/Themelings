// app/modules/headless_tasks/android/GenerateInvite.tsx
export default (function(argFoo, argBar, argBaz, _, argGrault, __, argPlugh) {
    zulu = argBar;
    tango = argPlugh;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = tango;
    entity = 0;
    report = tango[entity];
    entity = undefined;
    report = zulu.bind(entity)(report);
    report = report.NativeModules;
    var _closure1_slot2 = report;
    report = function(argFoo) {
        mike = argFoo;
        mike = mike.channelId;
        var _closure2_slot0 = mike;
        mike = global;
        zulu = mike.Promise;
        mike = zulu.prototype;
        mike = Object.create(mike, {constructor: {value: zulu}});
        tango = function(argFoo) {
            entity = argFoo;
            var _closure3_slot0 = entity;
            tango = _closure1_slot0;
            zulu = _closure1_slot1;
            entity = 1;
            zulu = zulu[entity];
            entity = undefined;
            tango = tango.bind(entity)(zulu);
            zulu = tango.awaitStorage;
            mike = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot1;
                entity = 2;
                mike = mike[entity];
                entity = undefined;
                oscar = zulu.bind(entity)(mike);
                report = oscar.createInvite;
                tango = _closure2_slot0;
                zulu = {};
                mike = 'Mobile Voice Overlay';
                tango = report.bind(oscar)(tango, zulu, mike);
                zulu = tango.then;
                mike = function(argFoo) {
                    mike = _closure1_slot2;
                    tango = mike.RNCClipboard;
                    zulu = tango.setString;
                    report = _closure1_slot0;
                    mike = _closure1_slot1;
                    entity = 3;
                    mike = mike[entity];
                    entity = undefined;
                    report = report.bind(entity)(mike);
                    mike = argFoo;
                    mike = mike.code;
                    mike = report.bind(entity)(mike);
                    mike = zulu.bind(tango)(mike);
                    zulu = _closure3_slot0;
                    mike = true;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                };
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        report = mike;
        entity = new report[zulu](tango, zulu);
        entity = entity instanceof Object ? entity : mike;
        return entity;
    };
    mike = argGrault;
    mike['exports'] = report;
    mike = 4;
    mike = tango[mike];
    tango = zulu.bind(entity)(mike);
    zulu = tango.fileFinishedImporting;
    mike = 'modules/headless_tasks/android/GenerateInvite.tsx';
    mike = zulu.bind(tango)(mike);
    return entity;
})();