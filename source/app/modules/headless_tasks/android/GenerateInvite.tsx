// app/modules/headless_tasks/android/GenerateInvite.tsx
export default (function(argFoo, argBar, argBaz, _, argGra, __, argPlu) {
    zuuluu = argBar;
    tangon = argPlu;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = tangon;
    entity = 0;
    report = tangon[entity];
    entity = undefined;
    report = zuuluu.bind(entity)(report);
    report = report.NativeModules;
    var _closure1_slot2 = report;
    report = function(argFoo) {
        michal = argFoo;
        michal = michal.channelId;
        var _closure2_slot0 = michal;
        michal = global;
        zuuluu = michal.Promise;
        michal = zuuluu.prototype;
        michal = Object.create(michal, {constructor: {value: zuuluu}});
        tangon = function(argFoo) {
            entity = argFoo;
            var _closure3_slot0 = entity;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot1;
            entity = 1;
            zuuluu = zuuluu[entity];
            entity = undefined;
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.awaitStorage;
            michal = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot1;
                entity = 2;
                michal = michal[entity];
                entity = undefined;
                oscard = zuuluu.bind(entity)(michal);
                report = oscard.createInvite;
                tangon = _closure2_slot0;
                zuuluu = {};
                michal = 'Mobile Voice Overlay';
                tangon = report.bind(oscard)(tangon, zuuluu, michal);
                zuuluu = tangon.then;
                michal = function(argFoo) {
                    michal = _closure1_slot2;
                    tangon = michal.RNCClipboard;
                    zuuluu = tangon.setString;
                    report = _closure1_slot0;
                    michal = _closure1_slot1;
                    entity = 3;
                    michal = michal[entity];
                    entity = undefined;
                    report = report.bind(entity)(michal);
                    michal = argFoo;
                    michal = michal.code;
                    michal = report.bind(entity)(michal);
                    michal = zuuluu.bind(tangon)(michal);
                    zuuluu = _closure3_slot0;
                    michal = true;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        report = michal;
        entity = new report[zuuluu](tangon, zuuluu);
        entity = entity instanceof Object ? entity : michal;
        return entity;
    };
    michal = argGra;
    michal['exports'] = report;
    michal = 4;
    michal = tangon[michal];
    tangon = zuuluu.bind(entity)(michal);
    zuuluu = tangon.fileFinishedImporting;
    michal = 'modules/headless_tasks/android/GenerateInvite.tsx';
    michal = zuuluu.bind(tangon)(michal);
    return entity;
})();