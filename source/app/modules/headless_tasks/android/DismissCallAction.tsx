// app/modules/headless_tasks/android/DismissCallAction.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var3 = require;
    var4 = dependencyMap;
    var _closure1_slot0 = var3;
    var1 = metroImportDefault;
    var _closure1_slot1 = var1;
    var _closure1_slot2 = var4;
    var1 = 0;
    var5 = var4[var1];
    var1 = undefined;
    var5 = var3.bind(var1)(var5);
    var5 = var5.AnalyticEvents;
    var _closure1_slot3 = var5;
    var5 = function(arg1) {
        var2 = arg1;
        var _closure2_slot0 = var2;
        var2 = global;
        var3 = var2.Promise;
        var2 = var3.prototype;
        var2 = Object.create(var2, {constructor: {value: var3}});
        var4 = function(arg1) {
            var1 = arg1;
            var _closure3_slot0 = var1;
            var4 = _closure1_slot1;
            var3 = _closure1_slot2;
            var1 = 1;
            var3 = var3[var1];
            var1 = undefined;
            var4 = var4.bind(var1)(var3);
            var3 = var4.awaitStorage;
            var2 = function() {
                _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
                    var1 = _closure2_slot0;
                    var1 = var1.isFullscreenCallUI;
                    if(!var1) { _fun0001_ip = 2; continue _fun0001 }
case 3:
                    var3 = _closure1_slot1;
                    var9 = _closure1_slot2;
                    var1 = 2;
                    var1 = var9[var1];
                    var8 = undefined;
                    var5 = var3.bind(var8)(var1);
                    var4 = var5.track;
                    var1 = _closure1_slot3;
                    var3 = var1.CALLKIT_CLICKED;
                    var1 = {};
                    var7 = 'decline';
                    var1['action_type'] = var7;
                    var7 = _closure1_slot0;
                    var6 = 3;
                    var6 = var9[var6];
                    var8 = var7.bind(var8)(var6);
                    var7 = var8.collectChannelAnalyticsMetadataFromId;
                    var6 = _closure2_slot0;
                    var6 = var6.channelId;
                    var12 = var7.bind(var8)(var6);
                    var13 = var1;
                    var6 = copyDataProperties(var13, var12);
                    var1 = var4.bind(var5)(var3, var1);
case 2:
                    var4 = _closure1_slot1;
                    var5 = _closure1_slot2;
                    var1 = 2;
                    var3 = var5[var1];
                    var1 = undefined;
                    var8 = var4.bind(var1)(var3);
                    var7 = var8.track;
                    var3 = _closure1_slot3;
                    var6 = var3.RING_CALL_DECLINED;
                    var3 = {};
                    var10 = 4;
                    var10 = var5[var10];
                    var10 = var4.bind(var1)(var10);
                    var10 = var10.PUSH_NOTIFICATION;
                    var3['location'] = var10;
                    var2 = _closure2_slot0;
                    var10 = var2.guildId;
                    var3['guild_id'] = var10;
                    var10 = var2.userId;
                    var3['ringer_user_id'] = var10;
                    var10 = _closure1_slot0;
                    var9 = 3;
                    var9 = var5[var9];
                    var11 = var10.bind(var1)(var9);
                    var10 = var11.collectChannelAnalyticsMetadataFromId;
                    var9 = var2.channelId;
                    var12 = var10.bind(var11)(var9);
                    var13 = var3;
                    var9 = copyDataProperties(var13, var12);
                    var3 = var7.bind(var8)(var6, var3);
                    var3 = 5;
                    var3 = var5[var3];
                    var4 = var4.bind(var1)(var3);
                    var3 = var4.stopRinging;
                    var2 = var2.channelId;
                    var2 = var3.bind(var4)(var2);
                    var3 = _closure3_slot0;
                    var2 = true;
                    var2 = var3.bind(var1)(var2);
                    return var1;
                }
            };
            var2 = var3.bind(var4)(var2);
            return var1;
        };
        var5 = var2;
        var1 = new var5[var3](var4, var3);
        var1 = var1 instanceof Object ? var1 : var2;
        return var1;
    };
    var2 = moduleObject;
    var2['exports'] = var5;
    var2 = 6;
    var2 = var4[var2];
    var4 = var3.bind(var1)(var2);
    var3 = var4.fileFinishedImporting;
    var2 = 'modules/headless_tasks/android/DismissCallAction.tsx';
    var2 = var3.bind(var4)(var2);
    return var1;
})();