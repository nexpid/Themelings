// app/modules/headless_tasks/HeadlessTaskUtils.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    michal = michal.TOKEN_KEY;
    var _closure1_slot2 = michal;
    michal = {};
    tangon = function(argFoo) { // Original name: awaitStorage
        entity = argFoo;
        var _closure2_slot0 = entity;
        report = _closure1_slot0;
        tangon = _closure1_slot1;
        entity = 1;
        tangon = tangon[entity];
        entity = undefined;
        tangon = report.bind(entity)(tangon);
        report = tangon.Storage;
        tangon = report.asyncGet;
        zuuluu = _closure1_slot2;
        michal = function() {
            michal = _closure2_slot0;
            entity = undefined;
            michal = michal.bind(entity)();
            return entity;
        };
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    michal['awaitStorage'] = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/headless_tasks/HeadlessTaskUtils.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();