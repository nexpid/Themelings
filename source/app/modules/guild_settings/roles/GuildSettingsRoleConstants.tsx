// app/modules/guild_settings/roles/GuildSettingsRoleConstants.tsx
export default (function(_, argBar, __, argCor, ___, argFre, argPlu) {
    golfie = argBar;
    output = argCor;
    zuuluu = argFre;
    option = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = option;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    oscard = 0;
    michal = option[oscard];
    entity = undefined;
    michal = golfie.bind(entity)(michal);
    michal = michal.Permissions;
    report = {};
    report['COSMETIC'] = oscard;
    tangon = 'COSMETIC';
    report[oscard] = tangon;
    oscard = 1;
    report['MEMBER'] = oscard;
    tangon = 'MEMBER';
    report[oscard] = tangon;
    sizing = 2;
    report['MODERATOR'] = sizing;
    tangon = 'MODERATOR';
    report[sizing] = tangon;
    foxtra = 3;
    report['MANAGER'] = foxtra;
    tangon = 'MANAGER';
    report[foxtra] = tangon;
    tangon = report.COSMETIC;
    verify = option[oscard];
    backup = output.bind(entity)(verify);
    romeon = backup.remove;
    verify = option[sizing];
    verify = output.bind(entity)(verify);
    yankee = verify.DEFAULT;
    verify = michal.MENTION_EVERYONE;
    kiloes = romeon.bind(backup)(yankee, verify);
    verify = option[oscard];
    record = output.bind(entity)(verify);
    config = record.combine;
    verify = option[sizing];
    verify = output.bind(entity)(verify);
    variable37 = verify.DEFAULT;
    variable36 = michal.VIEW_AUDIT_LOG;
    quebec = michal.MANAGE_NICKNAMES;
    equals = michal.KICK_MEMBERS;
    whisks = michal.BAN_MEMBERS;
    limora = michal.MANAGE_MESSAGES;
    sierra = michal.MUTE_MEMBERS;
    status = michal.DEAFEN_MEMBERS;
    target = michal.MOVE_MEMBERS;
    papara = michal.PRIORITY_SPEAKER;
    cntext = michal.MODERATE_MEMBERS;
    variable38 = record;
    backup = variable38[config](variable37, variable36, quebec, equals, whisks, limora, sierra, status, target, papara, cntext, record);
    verify = option[oscard];
    vacuum = output.bind(entity)(verify);
    ctrled = vacuum.combine;
    variable36 = michal.MANAGE_CHANNELS;
    quebec = michal.MANAGE_THREADS;
    equals = michal.MANAGE_ROLES;
    whisks = michal.MANAGE_GUILD_EXPRESSIONS;
    limora = michal.MANAGE_GUILD;
    sierra = michal.MANAGE_WEBHOOKS;
    status = michal.SEND_TTS_MESSAGES;
    variable38 = vacuum;
    variable37 = backup;
    romeon = variable38[ctrled](variable37, variable36, quebec, equals, whisks, limora, sierra, status, target);
    oscard = option[oscard];
    verify = output.bind(entity)(oscard);
    oscard = verify.add;
    michal = michal.VIEW_GUILD_ANALYTICS;
    yankee = oscard.bind(verify)(romeon, michal);
    michal = {};
    verify = report.COSMETIC;
    oscard = {};
    result = 'template_cosmetic';
    oscard['key'] = result;
    result = option[foxtra];
    update = golfie.bind(entity)(result);
    echoed = update.unsafe_getRawColor;
    result = 'BRAND_500';
    result = echoed.bind(update)(result);
    oscard['color'] = result;
    result = option[sizing];
    result = output.bind(entity)(result);
    result = result.NONE;
    oscard['permissions'] = result;
    result = function() { // Original name: title
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 4;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.M8jQys;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    oscard['title'] = result;
    result = function() { // Original name: description
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 4;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.7nF/S0;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    oscard['description'] = result;
    result = function() { // Original name: contents
        oscard = _closure1_slot0;
        golfie = _closure1_slot1;
        michal = 4;
        entity = golfie[michal];
        report = undefined;
        entity = oscard.bind(report)(entity);
        tangon = entity.intl;
        zuuluu = tangon.string;
        entity = golfie[michal];
        entity = oscard.bind(report)(entity);
        entity = entity.t;
        entity = entity.uwLDAQ;
        zuuluu = zuuluu.bind(tangon)(entity);
        entity = new Array(2);
        entity[0] = zuuluu;
        zuuluu = golfie[michal];
        zuuluu = oscard.bind(report)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.string;
        michal = golfie[michal];
        michal = oscard.bind(report)(michal);
        michal = michal.t;
        michal = michal.gqngNz;
        michal = zuuluu.bind(tangon)(michal);
        entity[1] = michal;
        return entity;
    };
    oscard['contents'] = result;
    result = function() { // Original name: contentPreface
        entity = '';
        return entity;
    };
    oscard['contentPreface'] = result;
    michal[verify] = oscard;
    verify = report.MEMBER;
    oscard = {};
    result = 'template_member';
    oscard['key'] = result;
    result = option[foxtra];
    update = golfie.bind(entity)(result);
    echoed = update.unsafe_getRawColor;
    result = 'GREEN_360';
    result = echoed.bind(update)(result);
    oscard['color'] = result;
    sizing = option[sizing];
    sizing = output.bind(entity)(sizing);
    sizing = sizing.DEFAULT;
    oscard['permissions'] = sizing;
    oscard['communityPermissions'] = kiloes;
    kiloes = function() { // Original name: title
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 4;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.9BsHzs;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    oscard['title'] = kiloes;
    kiloes = function() { // Original name: description
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 4;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.ywKYt7;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    oscard['description'] = kiloes;
    kiloes = function() { // Original name: contents
        oscard = _closure1_slot0;
        golfie = _closure1_slot1;
        michal = 4;
        entity = golfie[michal];
        report = undefined;
        entity = oscard.bind(report)(entity);
        tangon = entity.intl;
        zuuluu = tangon.string;
        entity = golfie[michal];
        entity = oscard.bind(report)(entity);
        entity = entity.t;
        entity = entity.9Vhbnp;
        zuuluu = zuuluu.bind(tangon)(entity);
        entity = new Array(3);
        entity[0] = zuuluu;
        zuuluu = golfie[michal];
        zuuluu = oscard.bind(report)(zuuluu);
        option = zuuluu.intl;
        tangon = option.string;
        zuuluu = golfie[michal];
        zuuluu = oscard.bind(report)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.0xn+w8;
        zuuluu = tangon.bind(option)(zuuluu);
        entity[1] = zuuluu;
        zuuluu = golfie[michal];
        zuuluu = oscard.bind(report)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.string;
        michal = golfie[michal];
        michal = oscard.bind(report)(michal);
        michal = michal.t;
        michal = michal.ieWVpK;
        michal = zuuluu.bind(tangon)(michal);
        entity[2] = michal;
        return entity;
    };
    oscard['contents'] = kiloes;
    kiloes = function() { // Original name: contentPreface
        entity = '';
        return entity;
    };
    oscard['contentPreface'] = kiloes;
    michal[verify] = oscard;
    verify = report.MODERATOR;
    oscard = {};
    kiloes = 'template_moderator';
    oscard['key'] = kiloes;
    kiloes = option[foxtra];
    output = golfie.bind(entity)(kiloes);
    sizing = output.unsafe_getRawColor;
    kiloes = 'YELLOW_300';
    kiloes = sizing.bind(output)(kiloes);
    oscard['color'] = kiloes;
    oscard['permissions'] = backup;
    backup = function() { // Original name: title
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 4;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.m/GC8/;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    oscard['title'] = backup;
    backup = function() { // Original name: description
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 4;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.ERrMJS;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    oscard['description'] = backup;
    backup = function() { // Original name: contents
        oscard = _closure1_slot0;
        golfie = _closure1_slot1;
        michal = 4;
        entity = golfie[michal];
        report = undefined;
        entity = oscard.bind(report)(entity);
        tangon = entity.intl;
        zuuluu = tangon.string;
        entity = golfie[michal];
        entity = oscard.bind(report)(entity);
        entity = entity.t;
        entity = entity.YOSxcX;
        zuuluu = zuuluu.bind(tangon)(entity);
        entity = new Array(4);
        entity[0] = zuuluu;
        zuuluu = golfie[michal];
        zuuluu = oscard.bind(report)(zuuluu);
        option = zuuluu.intl;
        tangon = option.string;
        zuuluu = golfie[michal];
        zuuluu = oscard.bind(report)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.q9H4Fh;
        zuuluu = tangon.bind(option)(zuuluu);
        entity[1] = zuuluu;
        zuuluu = golfie[michal];
        zuuluu = oscard.bind(report)(zuuluu);
        option = zuuluu.intl;
        tangon = option.string;
        zuuluu = golfie[michal];
        zuuluu = oscard.bind(report)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.9nHnCg;
        zuuluu = tangon.bind(option)(zuuluu);
        entity[2] = zuuluu;
        zuuluu = golfie[michal];
        zuuluu = oscard.bind(report)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.string;
        michal = golfie[michal];
        michal = oscard.bind(report)(michal);
        michal = michal.t;
        michal = michal.iqwXvb;
        michal = zuuluu.bind(tangon)(michal);
        entity[3] = michal;
        return entity;
    };
    oscard['contents'] = backup;
    backup = function() { // Original name: contentPreface
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 4;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.amGM7O;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    oscard['contentPreface'] = backup;
    michal[verify] = oscard;
    verify = report.MANAGER;
    oscard = {};
    backup = 'template_manager';
    oscard['key'] = backup;
    foxtra = option[foxtra];
    kiloes = golfie.bind(entity)(foxtra);
    backup = kiloes.unsafe_getRawColor;
    foxtra = 'RED_400';
    foxtra = backup.bind(kiloes)(foxtra);
    oscard['color'] = foxtra;
    oscard['permissions'] = romeon;
    oscard['communityPermissions'] = yankee;
    yankee = function() { // Original name: title
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 4;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.qKmu39;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    oscard['title'] = yankee;
    yankee = function() { // Original name: description
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 4;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.WxWPYW;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    oscard['description'] = yankee;
    yankee = function() { // Original name: contents
        oscard = _closure1_slot0;
        golfie = _closure1_slot1;
        michal = 4;
        entity = golfie[michal];
        report = undefined;
        entity = oscard.bind(report)(entity);
        tangon = entity.intl;
        zuuluu = tangon.string;
        entity = golfie[michal];
        entity = oscard.bind(report)(entity);
        entity = entity.t;
        entity = entity.Hx1Vo6;
        zuuluu = zuuluu.bind(tangon)(entity);
        entity = new Array(4);
        entity[0] = zuuluu;
        zuuluu = golfie[michal];
        zuuluu = oscard.bind(report)(zuuluu);
        option = zuuluu.intl;
        tangon = option.string;
        zuuluu = golfie[michal];
        zuuluu = oscard.bind(report)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.aUZ/zM;
        zuuluu = tangon.bind(option)(zuuluu);
        entity[1] = zuuluu;
        zuuluu = golfie[michal];
        zuuluu = oscard.bind(report)(zuuluu);
        option = zuuluu.intl;
        tangon = option.string;
        zuuluu = golfie[michal];
        zuuluu = oscard.bind(report)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.8lQujo;
        zuuluu = tangon.bind(option)(zuuluu);
        entity[2] = zuuluu;
        zuuluu = golfie[michal];
        zuuluu = oscard.bind(report)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.string;
        michal = golfie[michal];
        michal = oscard.bind(report)(michal);
        michal = michal.t;
        michal = michal.cUP4pq;
        michal = zuuluu.bind(tangon)(michal);
        entity[3] = michal;
        return entity;
    };
    oscard['contents'] = yankee;
    offset = function() { // Original name: contentPreface
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 4;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.7Dkb6+;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    oscard['contentPreface'] = offset;
    michal[verify] = oscard;
    oscard = 5;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/guild_settings/roles/GuildSettingsRoleConstants.tsx';
    oscard = golfie.bind(option)(oscard);
    oscard = 440;
    zuuluu['CREATE_ROLE_DESKTOP_MODAL_WIDTH'] = oscard;
    oscard = 371;
    zuuluu['DEFAULT_HEADER_HEIGHT_PX'] = oscard;
    oscard = 30;
    zuuluu['MAX_BULK_ROLE_MEMBERS_ADD'] = oscard;
    zuuluu['PermissionTemplateTypes'] = report;
    zuuluu['DEFAULT_TEMPLATE_TYPE'] = tangon;
    zuuluu['PermissionTemplates'] = michal;
    return entity;
})();