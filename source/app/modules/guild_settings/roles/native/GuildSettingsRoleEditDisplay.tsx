// app/modules/guild_settings/roles/native/GuildSettingsRoleEditDisplay.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    golf = tango.Platform;
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    romeo = tango.Fonts;
    golf = tango.DEFAULT_ROLE_COLOR;
    var _closure1_slot5 = golf;
    tango = tango.MAX_ROLE_LENGTH;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.TitleStyleType;
    var _closure1_slot7 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot10 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    foxtrot = 16;
    verify['paddingVertical'] = foxtrot;
    tango['input'] = verify;
    verify = {'flexGrow': 1, 'flexDirection': 'row', 'justifyContent': 'space-between', 'alignItems': 'center', 'paddingRight': 8};
    tango['labelRow'] = verify;
    verify = {'paddingTop': 2, 'opacity': 0.5};
    tango['roleIcon'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tango['row'] = verify;
    verify = {'marginHorizontal': 0, 'marginVertical': 0, 'marginRight': 8, 'minWidth': 24, 'height': 24, 'borderRadius': 3};
    tango['colorBlock'] = verify;
    verify = {};
    foxtrot = 'capitalize';
    verify['textTransform'] = foxtrot;
    tango['iconFormLabel'] = verify;
    verify = {};
    romeo = romeo.PRIMARY_SEMIBOLD;
    verify['fontFamily'] = romeo;
    verify['flex'] = offset;
    offset = 6;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.unsafe_rawColors;
    offset = offset.RED_400;
    verify['color'] = offset;
    tango['deleteText'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = 22;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_settings/roles/native/GuildSettingsRoleEditDisplay.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildSettingsRoleEditDisplay
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zulu = argFoo;
            golf = zulu.guild;
            options = zulu.role;
            context = zulu.name;
            backup = zulu.mentionable;
            control = zulu.hoist;
            variable36 = zulu.color;
            record = zulu.onNameChanged;
            foxtrot = zulu.onMentionableChanged;
            source = zulu.onHoistChanged;
            oscar = zulu.onColorChanged;
            var _closure2_slot0 = oscar;
            mike = zulu.locked;
            config = zulu.autoFocusInput;
            tango = undefined;
            var _closure2_slot1 = tango;
            zulu = _closure1_slot11;
            status = zulu.bind(tango)();
            report = _closure1_slot0;
            verify = _closure1_slot2;
            zulu = 7;
            zulu = verify[zulu];
            offset = report.bind(tango)(zulu);
            verify = offset.isEveryoneRoleId;
            report = golf.id;
            zulu = options.id;
            output = verify.bind(offset)(report, zulu);
            sizing = output;
            if(output) { _fun00002_ip = 146; continue _fun00001 }
 143:
            sizing = mike;
 146:
            mike = 0;
            if(!(mike === variable36)) { _fun00002_ip = 156; continue _fun00001 }
 152:
            variable36 = _closure1_slot5;
 156:
            _closure2_slot1 = variable36;
            zulu = _closure1_slot0;
            report = _closure1_slot2;
            mike = 8;
            mike = report[mike];
            verify = zulu.bind(tango)(mike);
            mike = verify.canGuildUseRoleIcons;
            offset = mike.bind(verify)(golf, options);
            mike = 9;
            mike = report[mike];
            report = zulu.bind(tango)(mike);
            zulu = report.useRoleIcon;
            mike = {};
            golf = golf.id;
            mike['guildId'] = golf;
            golf = options.id;
            mike['roleId'] = golf;
            golf = 26;
            mike['size'] = golf;
            papa = zulu.bind(report)(mike);
            verify = null;
            if(!(verify == papa)) { _fun00002_ip = 326; continue _fun00001 }
 249:
            report = _closure1_slot8;
            result = _closure1_slot1;
            romeo = _closure1_slot2;
            golf = 10;
            mike = romeo[golf];
            zulu = result.bind(tango)(mike);
            mike = {};
            yankee = 11;
            yankee = romeo[yankee];
            yankee = result.bind(tango)(yankee);
            mike['source'] = yankee;
            yankee = _closure1_slot0;
            golf = romeo[golf];
            golf = yankee.bind(tango)(golf);
            golf = golf.IconSizes;
            golf = golf.MEDIUM;
            mike['size'] = golf;
            papa = report.bind(tango)(zulu, mike);
 326:
            report = _closure1_slot3;
            zulu = report.useCallback;
            mike = new Array(2);
            mike[0] = variable36;
            mike[1] = oscar;
            entity = function() {
                report = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 12;
                tango = mike[entity];
                entity = undefined;
                oscar = report.bind(entity)(tango);
                report = oscar.openLazy;
                tango = _closure1_slot0;
                zulu = 14;
                zulu = mike[zulu];
                tango = tango.bind(entity)(zulu);
                zulu = 13;
                zulu = mike[zulu];
                mike = mike.paths;
                tango = tango.bind(entity)(zulu, mike);
                zulu = {};
                golf = _closure2_slot1;
                zulu['color'] = golf;
                mike = _closure2_slot0;
                zulu['onSelect'] = mike;
                mike = 'RoleColorPicker';
                mike = report.bind(oscar)(tango, mike, zulu);
                return entity;
            };
            sequence = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot9;
            mike = _closure1_slot10;
            entity = {};
            romeo = _closure1_slot8;
            vacuum = _closure1_slot0;
            update = _closure1_slot2;
            result = 15;
            report = update[result];
            report = vacuum.bind(tango)(report);
            oscar = report.FormSection;
            report = {};
            golf = _closure1_slot7;
            golf = golf.ANDROID_NO_BORDER;
            report['titleStyleType'] = golf;
            echo = 16;
            golf = update[echo];
            golf = vacuum.bind(tango)(golf);
            target = golf.intl;
            yankee = target.string;
            golf = update[echo];
            golf = vacuum.bind(tango)(golf);
            golf = golf.t;
            golf = golf.dLbkBg;
            golf = yankee.bind(target)(golf);
            report['title'] = golf;
            golf = true;
            report['thinTitle'] = golf;
            golf = update[result];
            golf = vacuum.bind(tango)(golf);
            yankee = golf.FormInput;
            golf = {};
            target = status.input;
            golf['style'] = target;
            golf['value'] = context;
            golf['disabled'] = sizing;
            golf['onChange'] = record;
            record = false;
            golf['showTopContainer'] = record;
            record = _closure1_slot6;
            golf['maxLength'] = record;
            golf['autoFocus'] = config;
            config = 17;
            config = update[config];
            config = vacuum.bind(tango)(config);
            config = config.ClearButtonVisibility;
            config = config.ALWAYS;
            golf['clearButtonVisibility'] = config;
            golf = romeo.bind(tango)(yankee, golf);
            report['children'] = golf;
            oscar = romeo.bind(tango)(oscar, report);
            report = new Array(4);
            report[0] = oscar;
            lima = _closure1_slot1;
            oscar = 18;
            oscar = update[oscar];
            golf = lima.bind(tango)(oscar);
            oscar = {};
            oscar['role'] = options;
            oscar = romeo.bind(tango)(golf, oscar);
            report[1] = oscar;
            oscar = update[result];
            oscar = vacuum.bind(tango)(oscar);
            golf = oscar.FormSection;
            oscar = {};
            options = update[result];
            options = vacuum.bind(tango)(options);
            yankee = options.FormRow;
            options = {};
            record = _closure1_slot4;
            config = {};
            context = status.labelRow;
            config['style'] = context;
            context = update[result];
            context = vacuum.bind(tango)(context);
            target = context.FormLabel;
            context = {};
            sierra = update[echo];
            sierra = vacuum.bind(tango)(sierra);
            equality = sierra.intl;
            whiskey = equality.string;
            sierra = update[echo];
            sierra = vacuum.bind(tango)(sierra);
            sierra = sierra.t;
            sierra = sierra.5NC5YW;
            sierra = whiskey.bind(equality)(sierra);
            context['text'] = sierra;
            target = romeo.bind(tango)(target, context);
            context = new Array(2);
            context[0] = target;
            target = {};
            sierra = status.row;
            target['style'] = sierra;
            sierra = 19;
            sierra = update[sierra];
            lima = lima.bind(tango)(sierra);
            sierra = {};
            sierra['color'] = variable36;
            whiskey = status.colorBlock;
            sierra['style'] = whiskey;
            sierra['onSelect'] = sequence;
            lima = romeo.bind(tango)(lima, sierra);
            sierra = new Array(2);
            sierra[0] = lima;
            lima = 20;
            lima = update[lima];
            lima = vacuum.bind(tango)(lima);
            whiskey = lima.Text;
            lima = {};
            equality = 'text-sm/medium';
            lima['variant'] = equality;
            equality = 21;
            equality = update[equality];
            quebec = vacuum.bind(tango)(equality);
            equality = quebec.int2hex;
            equality = equality.bind(quebec)(variable36);
            lima['children'] = equality;
            lima = romeo.bind(tango)(whiskey, lima);
            sierra[1] = lima;
            target['children'] = sierra;
            target = zulu.bind(tango)(record, target);
            context[1] = target;
            config['children'] = context;
            config = zulu.bind(tango)(record, config);
            options['label'] = config;
            options['disabled'] = sizing;
            options['onPress'] = sequence;
            update = update[result];
            update = vacuum.bind(tango)(update);
            update = update.FormRow;
            update = update.Arrow;
            options['trailing'] = update;
            yankee = romeo.bind(tango)(yankee, options);
            options = new Array(2);
            options[0] = yankee;
            verify = null;
            if(!offset) { _fun00002_ip = 1213; continue _fun00001 }
 958:
            romeo = _closure1_slot9;
            yankee = _closure1_slot4;
            offset = {};
            config = _closure1_slot8;
            target = _closure1_slot0;
            record = _closure1_slot2;
            update = record[result];
            update = target.bind(tango)(update);
            vacuum = update.FormDivider;
            update = {};
            vacuum = config.bind(tango)(vacuum, update);
            update = new Array(2);
            update[0] = vacuum;
            vacuum = record[result];
            vacuum = target.bind(tango)(vacuum);
            sequence = vacuum.FormRow;
            vacuum = {};
            vacuum['disabled'] = sizing;
            context = record[result];
            context = target.bind(tango)(context);
            sierra = context.FormLabel;
            context = {};
            lima = status.iconFormLabel;
            context['style'] = lima;
            lima = record[echo];
            lima = target.bind(tango)(lima);
            equality = lima.intl;
            whiskey = equality.string;
            lima = record[echo];
            lima = target.bind(tango)(lima);
            lima = lima.t;
            lima = lima.B9grJy;
            lima = whiskey.bind(equality)(lima);
            context['text'] = lima;
            context = config.bind(tango)(sierra, context);
            vacuum['label'] = context;
            context = {};
            status = status.roleIcon;
            context['style'] = status;
            context['children'] = papa;
            context = config.bind(tango)(yankee, context);
            vacuum['trailing'] = context;
            context = record[echo];
            context = target.bind(tango)(context);
            papa = context.intl;
            context = papa.string;
            record = record[echo];
            record = target.bind(tango)(record);
            record = record.t;
            record = record.ZTpgyM;
            record = context.bind(papa)(record);
            vacuum['subLabel'] = record;
            vacuum = config.bind(tango)(sequence, vacuum);
            update[1] = vacuum;
            offset['children'] = update;
            verify = romeo.bind(tango)(yankee, offset);
 1213:
            options[1] = verify;
            oscar['children'] = options;
            oscar = zulu.bind(tango)(golf, oscar);
            report[2] = oscar;
            options = _closure1_slot9;
            offset = _closure1_slot0;
            verify = _closure1_slot2;
            oscar = verify[result];
            oscar = offset.bind(tango)(oscar);
            golf = oscar.FormSection;
            oscar = {};
            update = _closure1_slot8;
            verify = verify[result];
            verify = offset.bind(tango)(verify);
            romeo = verify.FormSwitchRow;
            verify = {};
            offset = sizing;
            if(sizing) { _fun00002_ip = 1290; continue _fun00001 }
 1287:
            offset = output;
 1290:
            verify['disabled'] = offset;
            yankee = _closure1_slot0;
            offset = _closure1_slot2;
            vacuum = offset[echo];
            vacuum = yankee.bind(tango)(vacuum);
            config = vacuum.intl;
            sequence = config.string;
            vacuum = offset[echo];
            vacuum = yankee.bind(tango)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.iVW5w8;
            vacuum = sequence.bind(config)(vacuum);
            verify['label'] = vacuum;
            verify['value'] = control;
            verify['onValueChange'] = source;
            source = offset[echo];
            source = yankee.bind(tango)(source);
            vacuum = source.intl;
            control = vacuum.string;
            source = offset[echo];
            source = yankee.bind(tango)(source);
            source = source.t;
            source = source.vceJPj;
            source = control.bind(vacuum)(source);
            verify['subLabel'] = source;
            romeo = update.bind(tango)(romeo, verify);
            verify = new Array(3);
            verify[0] = romeo;
            romeo = _closure1_slot8;
            update = offset[result];
            update = yankee.bind(tango)(update);
            source = update.FormDivider;
            update = {};
            update = romeo.bind(tango)(source, update);
            verify[1] = update;
            offset = offset[result];
            offset = yankee.bind(tango)(offset);
            yankee = offset.FormSwitchRow;
            offset = {};
            if(sizing) { _fun00002_ip = 1476; continue _fun00001 }
 1473:
            sizing = output;
 1476:
            offset['disabled'] = sizing;
            sizing = _closure1_slot0;
            kilo = _closure1_slot2;
            output = kilo[echo];
            output = sizing.bind(tango)(output);
            result = output.intl;
            output = result.format;
            kilo = kilo[echo];
            kilo = sizing.bind(tango)(kilo);
            kilo = kilo.t;
            sizing = kilo.DTXoJS;
            kilo = {};
            kilo = output.bind(result)(sizing, kilo);
            offset['label'] = kilo;
            offset['value'] = backup;
            offset['onValueChange'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[2] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[3] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();