// app/modules/guild_settings/roles/native/GuildSettingsRoleTemplate.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    foxtra = 1;
    golfie = oscard[foxtra];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    option = tangon.Dimensions;
    golfie = tangon.AccessibilityInfo;
    var _closure1_slot6 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.PermissionTemplateTypes;
    var _closure1_slot10 = golfie;
    golfie = tangon.PermissionTemplates;
    var _closure1_slot11 = golfie;
    tangon = tangon.DEFAULT_TEMPLATE_TYPE;
    var _closure1_slot12 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticEvents;
    var _closure1_slot13 = golfie;
    golfie = tangon.GuildFeatures;
    var _closure1_slot14 = golfie;
    yankee = tangon.Fonts;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot15 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot16 = tangon;
    golfie = option.get;
    tangon = 'window';
    tangon = golfie.bind(option)(tangon);
    golfie = tangon.width;
    var _closure1_slot17 = golfie;
    tangon = 300;
    tangon = golfie - tangon;
    var _closure1_slot18 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 9;
    backup = oscard[offset];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MOBILE_PRIMARY;
    verify['backgroundColor'] = backup;
    verify['flex'] = foxtra;
    tangon['container'] = verify;
    verify = {};
    verify['flex'] = foxtra;
    tangon['carousel'] = verify;
    verify = {'paddingHorizontal': 10, 'flex': 1};
    tangon['cardWrapper'] = verify;
    verify = {'backgroundColor': null, 'borderColor': null, 'borderRadius': null, 'borderStyle': 'solid', 'borderWidth': 1, 'flex': 1, 'maxHeight': 460, 'flexDirection': 'column', 'marginVertical': 16, 'padding': 16, 'paddingTop': 20};
    foxtra = oscard[offset];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = foxtra;
    foxtra = oscard[offset];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_TERTIARY;
    verify['borderColor'] = foxtra;
    offset = oscard[offset];
    offset = romeon.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    romeon = 16;
    tangon['card'] = verify;
    offset = 'center';
    verify = {'alignItems': 'center', 'textAlign': 'center', 'paddingBottom': 16};
    tangon['templateTitle'] = verify;
    verify = {};
    verify['paddingBottom'] = romeon;
    tangon['templateSubtitle'] = verify;
    verify = {'flex': 1, 'justifyContent': 'flex-start'};
    tangon['templateContentWrapper'] = verify;
    verify = {'alignItems': 'center', 'flexDirection': 'row', 'paddingBottom': 8};
    tangon['templateContent'] = verify;
    verify = {'flex': 1, 'marginLeft': 12};
    tangon['templateContentText'] = verify;
    verify = {};
    yankee = yankee.PRIMARY_SEMIBOLD;
    verify['fontFamily'] = yankee;
    tangon['templateContentTextBold'] = verify;
    verify = {'justifyContent': 'flex-end', 'flexGrow': 0, 'paddingTop': 16};
    tangon['templateButton'] = verify;
    verify = {};
    verify['alignItems'] = offset;
    tangon['sliderContainer'] = verify;
    verify = {'marginTop': 8, 'width': 300, 'maxWidth': '72%'};
    tangon['slider'] = verify;
    verify = {'alignItems': 'center', 'flexDirection': 'row', 'justifyContent': 'space-between', 'marginBottom': 16, 'textAlign': 'center', 'width': 380, 'maxWidth': '85%'};
    tangon['sliderLabels'] = verify;
    verify = {'marginHorizontal': 0, 'width': '25%', 'textAlign': 'center', 'alignItems': 'center'};
    tangon['sliderLabel'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot19 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_settings/roles/native/GuildSettingsRoleTemplate.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildSettingsRoleTemplate
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.onSelect;
            var _closure2_slot0 = michal;
            michal = entity.location;
            var _closure2_slot1 = michal;
            entity = entity.guildId;
            var _closure2_slot2 = entity;
            tangon = undefined;
            var _closure2_slot4 = tangon;
            var _closure2_slot5 = tangon;
            update = function(argFoo) { // Original name: updateLevel
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = global;
                    zuuluu = entity.Math;
                    michal = zuuluu.round;
                    entity = argFoo;
                    report = michal.bind(zuuluu)(entity);
                    zuuluu = _closure2_slot5;
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(report);
                    zuuluu = _closure2_slot4;
                    oscard = null;
                    zuuluu = oscard != zuuluu;
                    if(!zuuluu) { _fun00004_ip = 61; continue _fun00003 }
 48:
                    tangon = _closure2_slot4;
                    tangon = tangon.current;
                    zuuluu = oscard != tangon;
 61:
                    if(!zuuluu) { _fun00004_ip = 103; continue _fun00003 }
 64:
                    michal = _closure2_slot4;
                    tangon = michal.current;
                    zuuluu = tangon.snapToItem;
                    michal = _closure1_slot8;
                    michal = michal.useReducedMotion;
                    michal = !michal;
                    michal = zuuluu.bind(tangon)(report, michal);
 103:
                    return entity;
                }
            };
            var _closure2_slot10 = update;
            entity = _closure1_slot19;
            offset = entity.bind(tangon)();
            var _closure2_slot3 = offset;
            golfie = _closure1_slot1;
            result = _closure1_slot2;
            entity = 10;
            entity = result[entity];
            entity = golfie.bind(tangon)(entity);
            output = entity.bind(tangon)();
            report = _closure1_slot4;
            michal = report.useRef;
            entity = null;
            foxtra = michal.bind(report)(entity);
            _closure2_slot4 = foxtra;
            michal = report.useState;
            entity = _closure1_slot12;
            entity = michal.bind(report)(entity);
            oscard = _closure1_slot3;
            zuuluu = 2;
            entity = oscard.bind(tangon)(entity, zuuluu);
            michal = 0;
            backup = entity[michal];
            vacuum = 1;
            entity = entity[vacuum];
            _closure2_slot5 = entity;
            option = report.useState;
            entity = _closure1_slot17;
            entity = option.bind(report)(entity);
            entity = oscard.bind(tangon)(entity, zuuluu);
            yankee = entity[michal];
            var _closure2_slot6 = yankee;
            entity = entity[vacuum];
            var _closure2_slot7 = entity;
            option = report.useState;
            entity = _closure1_slot18;
            entity = option.bind(report)(entity);
            entity = oscard.bind(tangon)(entity, zuuluu);
            kiloes = entity[michal];
            entity = entity[vacuum];
            var _closure2_slot8 = entity;
            option = report.useState;
            entity = false;
            entity = option.bind(report)(entity);
            entity = oscard.bind(tangon)(entity, zuuluu);
            verify = entity[michal];
            entity = entity[vacuum];
            var _closure2_slot9 = entity;
            zuuluu = report.useEffect;
            michal = function() {
                michal = _closure1_slot6;
                entity = michal.isScreenReaderEnabled;
                zuuluu = entity.bind(michal)();
                michal = zuuluu.then;
                entity = function(argFoo) {
                    zuuluu = _closure2_slot9;
                    entity = undefined;
                    michal = argFoo;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            entity = new Array(0);
            entity = zuuluu.bind(report)(michal, entity);
            entity = global;
            zuuluu = entity.Object;
            michal = zuuluu.values;
            entity = _closure1_slot11;
            sizing = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot16;
            michal = _closure1_slot5;
            entity = {};
            report = offset.container;
            entity['style'] = report;
            report = function(argFoo) { // Original name: onLayout
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = argFoo;
                    entity = entity.nativeEvent;
                    entity = entity.layout;
                    tangon = entity.width;
                    michal = _closure2_slot6;
                    if(!(tangon !== michal)) { _fun00006_ip = 60; continue _fun00005 }
 30:
                    michal = _closure2_slot7;
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(tangon);
                    michal = _closure2_slot8;
                    entity = 300;
                    entity = tangon - entity;
                    entity = michal.bind(zuuluu)(entity);
 60:
                    entity = undefined;
                    return entity;
                }
            };
            entity['onLayout'] = report;
            report = {};
            oscard = offset.sliderContainer;
            report['style'] = oscard;
            option = _closure1_slot15;
            oscard = 13;
            oscard = result[oscard];
            echoed = golfie.bind(tangon)(oscard);
            oscard = {};
            ctrled = sizing.length;
            ctrled = ctrled - vacuum;
            oscard['maximumValue'] = ctrled;
            ctrled = sizing[backup];
            ctrled = ctrled.color;
            oscard['minimumTrackTintColor'] = ctrled;
            source = _closure1_slot10;
            source = source.COSMETIC;
            oscard['minimumValue'] = source;
            oscard['onSlidingComplete'] = update;
            update = offset.slider;
            oscard['style'] = update;
            update = sizing[backup];
            update = update.color;
            oscard['thumbTintColor'] = update;
            oscard['value'] = backup;
            backup = true;
            oscard['accessibilityElementsHidden'] = backup;
            echoed = option.bind(tangon)(echoed, oscard);
            oscard = new Array(2);
            oscard[0] = echoed;
            echoed = {};
            update = offset.sliderLabels;
            echoed['style'] = update;
            source = sizing.map;
            update = function(argFoo, argBar) {
                entity = argFoo;
                entity = entity.title;
                michal = argBar;
                var _closure3_slot0 = michal;
                report = _closure1_slot15;
                tangon = _closure1_slot5;
                zuuluu = {};
                oscard = _closure2_slot3;
                oscard = oscard.sliderLabel;
                zuuluu['style'] = oscard;
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                michal = 14;
                oscard = offset[michal];
                michal = undefined;
                oscard = verify.bind(michal)(oscard);
                golfie = oscard.PressableOpacity;
                oscard = {};
                yankee = 'button';
                oscard['accessibilityRole'] = yankee;
                option = function() { // Original name: onPress
                    zuuluu = _closure2_slot10;
                    michal = _closure3_slot0;
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                oscard['onPress'] = option;
                option = 15;
                option = offset[option];
                option = verify.bind(michal)(option);
                verify = option.Text;
                option = {};
                offset = 'text-sm/medium';
                option['variant'] = offset;
                offset = entity.bind(michal)();
                option['children'] = offset;
                option = report.bind(michal)(verify, option);
                oscard['children'] = option;
                oscard = report.bind(michal)(golfie, oscard);
                zuuluu['children'] = oscard;
                entity = entity.bind(michal)();
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            };
            update = source.bind(sizing)(update);
            echoed['children'] = update;
            echoed = option.bind(tangon)(michal, echoed);
            oscard[1] = echoed;
            report['children'] = oscard;
            oscard = zuuluu.bind(tangon)(michal, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = 16;
            oscard = result[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {'data': null, 'firstItem': 0, 'inactiveSlideScale': 1};
            oscard['data'] = sizing;
            sizing = 0.7;
            if(!output) { _fun00002_ip = 573; continue _fun00001 }
 563:
            sizing = 0.3;
 573:
            oscard['inactiveSlideOpacity'] = sizing;
            kiloes = yankee - kiloes;
            oscard['itemWidth'] = kiloes;
            kiloes = function(argFoo) { // Original name: onBeforeSnapToItem
                zuuluu = _closure2_slot5;
                entity = undefined;
                michal = argFoo;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            oscard['onBeforeSnapToItem'] = kiloes;
            oscard['enableMomentum'] = backup;
            backup = 0.9;
            oscard['decelerationRate'] = backup;
            oscard['ref'] = foxtra;
            romeon = function(argFoo) { // Original name: renderItem
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    entity = argFoo;
                    sizing = entity.item;
                    var _closure3_slot0 = sizing;
                    entity = sizing.contentPreface;
                    output = entity.bind(sizing)();
                    tangon = _closure1_slot15;
                    zuuluu = _closure1_slot5;
                    michal = {};
                    backup = _closure2_slot3;
                    entity = backup.cardWrapper;
                    michal['style'] = entity;
                    oscard = _closure1_slot16;
                    report = {};
                    entity = backup.card;
                    report['style'] = entity;
                    verify = _closure1_slot0;
                    option = _closure1_slot2;
                    update = 15;
                    golfie = option[update];
                    entity = undefined;
                    golfie = verify.bind(entity)(golfie);
                    offset = golfie.Text;
                    golfie = {};
                    kiloes = backup.templateTitle;
                    golfie['style'] = kiloes;
                    kiloes = 'heading-lg/extrabold';
                    golfie['variant'] = kiloes;
                    kiloes = sizing.title;
                    kiloes = kiloes.bind(sizing)();
                    golfie['children'] = kiloes;
                    offset = tangon.bind(entity)(offset, golfie);
                    golfie = new Array(4);
                    golfie[0] = offset;
                    option = option[update];
                    option = verify.bind(entity)(option);
                    verify = option.Text;
                    option = {};
                    offset = backup.templateSubtitle;
                    option['style'] = offset;
                    echoed = 'text-sm/medium';
                    option['variant'] = echoed;
                    offset = sizing.description;
                    offset = offset.bind(sizing)();
                    option['children'] = offset;
                    option = tangon.bind(entity)(verify, option);
                    golfie[1] = option;
                    verify = _closure1_slot7;
                    option = {};
                    offset = {};
                    backup = backup.templateContentWrapper;
                    offset['style'] = backup;
                    result = null;
                    backup = result != output;
                    kiloes = null;
                    if(!backup) { _fun00008_ip = 308; continue _fun00007 }
 232:
                    backup = '';
                    kiloes = null;
                    if(!(backup !== output)) { _fun00008_ip = 308; continue _fun00007 }
 242:
                    result = _closure1_slot15;
                    output = _closure1_slot0;
                    backup = _closure1_slot2;
                    backup = backup[update];
                    backup = output.bind(entity)(backup);
                    output = backup.Text;
                    backup = {};
                    update = _closure2_slot3;
                    update = update.templateSubtitle;
                    backup['style'] = update;
                    backup['variant'] = echoed;
                    echoed = sizing.contentPreface;
                    echoed = echoed.bind(sizing)();
                    backup['children'] = echoed;
                    kiloes = result.bind(entity)(output, backup);
 308:
                    backup = new Array(2);
                    backup[0] = kiloes;
                    kiloes = sizing.contents;
                    output = kiloes.bind(sizing)();
                    sizing = output.map;
                    kiloes = function(argFoo, argBar) {
                        report = _closure1_slot16;
                        tangon = _closure1_slot5;
                        zuuluu = {};
                        verify = _closure2_slot3;
                        entity = verify.templateContent;
                        zuuluu['style'] = entity;
                        option = _closure1_slot15;
                        romeon = _closure1_slot1;
                        offset = _closure1_slot2;
                        yankee = 17;
                        entity = offset[yankee];
                        michal = undefined;
                        oscard = romeon.bind(michal)(entity);
                        entity = {};
                        foxtra = 18;
                        foxtra = offset[foxtra];
                        foxtra = romeon.bind(michal)(foxtra);
                        entity['source'] = foxtra;
                        golfie = _closure1_slot0;
                        yankee = offset[yankee];
                        yankee = golfie.bind(michal)(yankee);
                        yankee = yankee.IconSizes;
                        yankee = yankee.MEDIUM;
                        entity['size'] = yankee;
                        yankee = 9;
                        yankee = offset[yankee];
                        yankee = romeon.bind(michal)(yankee);
                        yankee = yankee.unsafe_rawColors;
                        yankee = yankee.GREEN_360;
                        entity['color'] = yankee;
                        oscard = option.bind(michal)(oscard, entity);
                        entity = new Array(2);
                        entity[0] = oscard;
                        oscard = 15;
                        oscard = offset[oscard];
                        oscard = golfie.bind(michal)(oscard);
                        golfie = oscard.Text;
                        oscard = {};
                        verify = verify.templateContentText;
                        oscard['style'] = verify;
                        verify = 'text-sm/medium';
                        oscard['variant'] = verify;
                        verify = argFoo;
                        oscard['children'] = verify;
                        oscard = option.bind(michal)(golfie, oscard);
                        entity[1] = oscard;
                        zuuluu['children'] = entity;
                        entity = _closure3_slot0;
                        verify = entity.key;
                        entity = global;
                        entity = entity.HermesInternal;
                        option = entity.concat;
                        golfie = '';
                        oscard = '_content_';
                        entity = argBar;
                        entity = option.bind(golfie)(verify, oscard, entity);
                        entity = report.bind(michal)(tangon, zuuluu, entity);
                        return entity;
                    };
                    kiloes = sizing.bind(output)(kiloes);
                    backup[1] = kiloes;
                    offset['children'] = backup;
                    offset = oscard.bind(entity)(zuuluu, offset);
                    option['children'] = offset;
                    option = tangon.bind(entity)(verify, option);
                    golfie[2] = option;
                    offset = _closure1_slot15;
                    verify = _closure1_slot5;
                    option = {};
                    romeon = _closure2_slot3;
                    romeon = romeon.templateButton;
                    option['style'] = romeon;
                    output = _closure1_slot0;
                    result = _closure1_slot2;
                    yankee = 19;
                    yankee = result[yankee];
                    yankee = output.bind(entity)(yankee);
                    romeon = yankee.Button;
                    yankee = {};
                    backup = 20;
                    kiloes = result[backup];
                    kiloes = output.bind(entity)(kiloes);
                    sizing = kiloes.intl;
                    kiloes = sizing.string;
                    backup = result[backup];
                    backup = output.bind(entity)(backup);
                    backup = backup.t;
                    backup = backup.mQS8Ii;
                    backup = kiloes.bind(sizing)(backup);
                    yankee['text'] = backup;
                    foxtra = function() { // Original name: onPress
                        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                            entity = _closure3_slot0;
                            report = entity.permissions;
                            zuuluu = entity.communityPermissions;
                            option = entity.key;
                            tangon = _closure1_slot1;
                            romeon = _closure1_slot2;
                            entity = 11;
                            michal = romeon[entity];
                            entity = undefined;
                            offset = tangon.bind(entity)(michal);
                            verify = offset.track;
                            michal = _closure1_slot13;
                            golfie = michal.ROLE_TEMPLATE_SELECTED;
                            tangon = {};
                            yankee = _closure2_slot1;
                            tangon['location_page'] = yankee;
                            tangon['template_name'] = option;
                            yankee = _closure1_slot0;
                            option = 12;
                            option = romeon[option];
                            romeon = yankee.bind(entity)(option);
                            yankee = romeon.collectGuildAnalyticsMetadata;
                            option = _closure2_slot2;
                            foxtra = yankee.bind(romeon)(option);
                            backup = tangon;
                            yankee = copyDataProperties(backup, foxtra);
                            tangon = verify.bind(offset)(golfie, tangon);
                            golfie = _closure1_slot9;
                            tangon = golfie.getGuild;
                            golfie = tangon.bind(golfie)(option);
                            tangon = null;
                            if(!(tangon != golfie)) { _fun00010_ip = 200; continue _fun00009 }
 147:
                            option = golfie.features;
                            golfie = option.has;
                            oscard = _closure1_slot14;
                            oscard = oscard.COMMUNITY;
                            oscard = golfie.bind(option)(oscard);
                            if(!oscard) { _fun00010_ip = 180; continue _fun00009 }
 176:
                            if(!(tangon == zuuluu)) { _fun00010_ip = 191; continue _fun00009 }
 180:
                            tangon = _closure2_slot0;
                            tangon = tangon.bind(entity)(report);
                            _fun00010_ip = 200; continue _fun00009;
 191:
                            michal = _closure2_slot0;
                            michal = michal.bind(entity)(zuuluu);
 200:
                            return entity;
                        }
                    };
                    yankee['onPress'] = foxtra;
                    yankee = offset.bind(entity)(romeon, yankee);
                    option['children'] = yankee;
                    option = offset.bind(entity)(verify, option);
                    golfie[3] = option;
                    report['children'] = golfie;
                    report = oscard.bind(entity)(zuuluu, report);
                    michal['children'] = report;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                }
            };
            oscard['renderItem'] = romeon;
            oscard['sliderWidth'] = yankee;
            offset = offset.carousel;
            oscard['style'] = offset;
            verify = !verify;
            oscard['scrollEnabled'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();