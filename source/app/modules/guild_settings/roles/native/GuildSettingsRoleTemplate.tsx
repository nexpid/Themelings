// app/modules/guild_settings/roles/native/GuildSettingsRoleTemplate.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    foxtrot = 1;
    golf = oscar[foxtrot];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    options = tango.Dimensions;
    golf = tango.AccessibilityInfo;
    var _closure1_slot6 = golf;
    tango = tango.ScrollView;
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.PermissionTemplateTypes;
    var _closure1_slot10 = golf;
    golf = tango.PermissionTemplates;
    var _closure1_slot11 = golf;
    tango = tango.DEFAULT_TEMPLATE_TYPE;
    var _closure1_slot12 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticEvents;
    var _closure1_slot13 = golf;
    golf = tango.GuildFeatures;
    var _closure1_slot14 = golf;
    yankee = tango.Fonts;
    tango = 7;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot15 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot16 = tango;
    golf = options.get;
    tango = 'window';
    tango = golf.bind(options)(tango);
    golf = tango.width;
    var _closure1_slot17 = golf;
    tango = 300;
    tango = golf - tango;
    var _closure1_slot18 = tango;
    tango = 8;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 9;
    backup = oscar[offset];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MOBILE_PRIMARY;
    verify['backgroundColor'] = backup;
    verify['flex'] = foxtrot;
    tango['container'] = verify;
    verify = {};
    verify['flex'] = foxtrot;
    tango['carousel'] = verify;
    verify = {'paddingHorizontal': 10, 'flex': 1};
    tango['cardWrapper'] = verify;
    verify = {'backgroundColor': null, 'borderColor': null, 'borderRadius': null, 'borderStyle': 'solid', 'borderWidth': 1, 'flex': 1, 'maxHeight': 460, 'flexDirection': 'column', 'marginVertical': 16, 'padding': 16, 'paddingTop': 20};
    foxtrot = oscar[offset];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_TERTIARY;
    verify['borderColor'] = foxtrot;
    offset = oscar[offset];
    offset = romeo.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    romeo = 16;
    tango['card'] = verify;
    offset = 'center';
    verify = {'alignItems': 'center', 'textAlign': 'center', 'paddingBottom': 16};
    tango['templateTitle'] = verify;
    verify = {};
    verify['paddingBottom'] = romeo;
    tango['templateSubtitle'] = verify;
    verify = {'flex': 1, 'justifyContent': 'flex-start'};
    tango['templateContentWrapper'] = verify;
    verify = {'alignItems': 'center', 'flexDirection': 'row', 'paddingBottom': 8};
    tango['templateContent'] = verify;
    verify = {'flex': 1, 'marginLeft': 12};
    tango['templateContentText'] = verify;
    verify = {};
    yankee = yankee.PRIMARY_SEMIBOLD;
    verify['fontFamily'] = yankee;
    tango['templateContentTextBold'] = verify;
    verify = {'justifyContent': 'flex-end', 'flexGrow': 0, 'paddingTop': 16};
    tango['templateButton'] = verify;
    verify = {};
    verify['alignItems'] = offset;
    tango['sliderContainer'] = verify;
    verify = {'marginTop': 8, 'width': 300, 'maxWidth': '72%'};
    tango['slider'] = verify;
    verify = {'alignItems': 'center', 'flexDirection': 'row', 'justifyContent': 'space-between', 'marginBottom': 16, 'textAlign': 'center', 'width': 380, 'maxWidth': '85%'};
    tango['sliderLabels'] = verify;
    verify = {'marginHorizontal': 0, 'width': '25%', 'textAlign': 'center', 'alignItems': 'center'};
    tango['sliderLabel'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot19 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_settings/roles/native/GuildSettingsRoleTemplate.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildSettingsRoleTemplate
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            mike = entity.onSelect;
            var _closure2_slot0 = mike;
            mike = entity.location;
            var _closure2_slot1 = mike;
            entity = entity.guildId;
            var _closure2_slot2 = entity;
            tango = undefined;
            var _closure2_slot4 = tango;
            var _closure2_slot5 = tango;
            update = function(argFoo) { // Original name: updateLevel
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = global;
                    zulu = entity.Math;
                    mike = zulu.round;
                    entity = argFoo;
                    report = mike.bind(zulu)(entity);
                    zulu = _closure2_slot5;
                    entity = undefined;
                    zulu = zulu.bind(entity)(report);
                    zulu = _closure2_slot4;
                    oscar = null;
                    zulu = oscar != zulu;
                    if(!zulu) { _fun00004_ip = 61; continue _fun00003 }
 48:
                    tango = _closure2_slot4;
                    tango = tango.current;
                    zulu = oscar != tango;
 61:
                    if(!zulu) { _fun00004_ip = 103; continue _fun00003 }
 64:
                    mike = _closure2_slot4;
                    tango = mike.current;
                    zulu = tango.snapToItem;
                    mike = _closure1_slot8;
                    mike = mike.useReducedMotion;
                    mike = !mike;
                    mike = zulu.bind(tango)(report, mike);
 103:
                    return entity;
                }
            };
            var _closure2_slot10 = update;
            entity = _closure1_slot19;
            offset = entity.bind(tango)();
            var _closure2_slot3 = offset;
            golf = _closure1_slot1;
            result = _closure1_slot2;
            entity = 10;
            entity = result[entity];
            entity = golf.bind(tango)(entity);
            output = entity.bind(tango)();
            report = _closure1_slot4;
            mike = report.useRef;
            entity = null;
            foxtrot = mike.bind(report)(entity);
            _closure2_slot4 = foxtrot;
            mike = report.useState;
            entity = _closure1_slot12;
            entity = mike.bind(report)(entity);
            oscar = _closure1_slot3;
            zulu = 2;
            entity = oscar.bind(tango)(entity, zulu);
            mike = 0;
            backup = entity[mike];
            vacuum = 1;
            entity = entity[vacuum];
            _closure2_slot5 = entity;
            options = report.useState;
            entity = _closure1_slot17;
            entity = options.bind(report)(entity);
            entity = oscar.bind(tango)(entity, zulu);
            yankee = entity[mike];
            var _closure2_slot6 = yankee;
            entity = entity[vacuum];
            var _closure2_slot7 = entity;
            options = report.useState;
            entity = _closure1_slot18;
            entity = options.bind(report)(entity);
            entity = oscar.bind(tango)(entity, zulu);
            kilo = entity[mike];
            entity = entity[vacuum];
            var _closure2_slot8 = entity;
            options = report.useState;
            entity = false;
            entity = options.bind(report)(entity);
            entity = oscar.bind(tango)(entity, zulu);
            verify = entity[mike];
            entity = entity[vacuum];
            var _closure2_slot9 = entity;
            zulu = report.useEffect;
            mike = function() {
                mike = _closure1_slot6;
                entity = mike.isScreenReaderEnabled;
                zulu = entity.bind(mike)();
                mike = zulu.then;
                entity = function(argFoo) {
                    zulu = _closure2_slot9;
                    entity = undefined;
                    mike = argFoo;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                };
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            entity = new Array(0);
            entity = zulu.bind(report)(mike, entity);
            entity = global;
            zulu = entity.Object;
            mike = zulu.values;
            entity = _closure1_slot11;
            sizing = mike.bind(zulu)(entity);
            zulu = _closure1_slot16;
            mike = _closure1_slot5;
            entity = {};
            report = offset.container;
            entity['style'] = report;
            report = function(argFoo) { // Original name: onLayout
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = argFoo;
                    entity = entity.nativeEvent;
                    entity = entity.layout;
                    tango = entity.width;
                    mike = _closure2_slot6;
                    if(!(tango !== mike)) { _fun00006_ip = 60; continue _fun00005 }
 30:
                    mike = _closure2_slot7;
                    zulu = undefined;
                    mike = mike.bind(zulu)(tango);
                    mike = _closure2_slot8;
                    entity = 300;
                    entity = tango - entity;
                    entity = mike.bind(zulu)(entity);
 60:
                    entity = undefined;
                    return entity;
                }
            };
            entity['onLayout'] = report;
            report = {};
            oscar = offset.sliderContainer;
            report['style'] = oscar;
            options = _closure1_slot15;
            oscar = 13;
            oscar = result[oscar];
            echo = golf.bind(tango)(oscar);
            oscar = {};
            control = sizing.length;
            control = control - vacuum;
            oscar['maximumValue'] = control;
            control = sizing[backup];
            control = control.color;
            oscar['minimumTrackTintColor'] = control;
            source = _closure1_slot10;
            source = source.COSMETIC;
            oscar['minimumValue'] = source;
            oscar['onSlidingComplete'] = update;
            update = offset.slider;
            oscar['style'] = update;
            update = sizing[backup];
            update = update.color;
            oscar['thumbTintColor'] = update;
            oscar['value'] = backup;
            backup = true;
            oscar['accessibilityElementsHidden'] = backup;
            echo = options.bind(tango)(echo, oscar);
            oscar = new Array(2);
            oscar[0] = echo;
            echo = {};
            update = offset.sliderLabels;
            echo['style'] = update;
            source = sizing.map;
            update = function(argFoo, argBar) {
                entity = argFoo;
                entity = entity.title;
                mike = argBar;
                var _closure3_slot0 = mike;
                report = _closure1_slot15;
                tango = _closure1_slot5;
                zulu = {};
                oscar = _closure2_slot3;
                oscar = oscar.sliderLabel;
                zulu['style'] = oscar;
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                mike = 14;
                oscar = offset[mike];
                mike = undefined;
                oscar = verify.bind(mike)(oscar);
                golf = oscar.PressableOpacity;
                oscar = {};
                yankee = 'button';
                oscar['accessibilityRole'] = yankee;
                options = function() { // Original name: onPress
                    zulu = _closure2_slot10;
                    mike = _closure3_slot0;
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                };
                oscar['onPress'] = options;
                options = 15;
                options = offset[options];
                options = verify.bind(mike)(options);
                verify = options.Text;
                options = {};
                offset = 'text-sm/medium';
                options['variant'] = offset;
                offset = entity.bind(mike)();
                options['children'] = offset;
                options = report.bind(mike)(verify, options);
                oscar['children'] = options;
                oscar = report.bind(mike)(golf, oscar);
                zulu['children'] = oscar;
                entity = entity.bind(mike)();
                entity = report.bind(mike)(tango, zulu, entity);
                return entity;
            };
            update = source.bind(sizing)(update);
            echo['children'] = update;
            echo = options.bind(tango)(mike, echo);
            oscar[1] = echo;
            report['children'] = oscar;
            oscar = zulu.bind(tango)(mike, report);
            report = new Array(2);
            report[0] = oscar;
            oscar = 16;
            oscar = result[oscar];
            golf = golf.bind(tango)(oscar);
            oscar = {'data': null, 'firstItem': 0, 'inactiveSlideScale': 1};
            oscar['data'] = sizing;
            sizing = 0.7;
            if(!output) { _fun00002_ip = 573; continue _fun00001 }
 563:
            sizing = 0.3;
 573:
            oscar['inactiveSlideOpacity'] = sizing;
            kilo = yankee - kilo;
            oscar['itemWidth'] = kilo;
            kilo = function(argFoo) { // Original name: onBeforeSnapToItem
                zulu = _closure2_slot5;
                entity = undefined;
                mike = argFoo;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            oscar['onBeforeSnapToItem'] = kilo;
            oscar['enableMomentum'] = backup;
            backup = 0.9;
            oscar['decelerationRate'] = backup;
            oscar['ref'] = foxtrot;
            romeo = function(argFoo) { // Original name: renderItem
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    entity = argFoo;
                    sizing = entity.item;
                    var _closure3_slot0 = sizing;
                    entity = sizing.contentPreface;
                    output = entity.bind(sizing)();
                    tango = _closure1_slot15;
                    zulu = _closure1_slot5;
                    mike = {};
                    romeo = _closure2_slot3;
                    entity = romeo.cardWrapper;
                    mike['style'] = entity;
                    oscar = _closure1_slot16;
                    report = {};
                    entity = romeo.card;
                    report['style'] = entity;
                    verify = _closure1_slot0;
                    options = _closure1_slot2;
                    update = 15;
                    golf = options[update];
                    entity = undefined;
                    golf = verify.bind(entity)(golf);
                    offset = golf.Text;
                    golf = {};
                    kilo = romeo.templateTitle;
                    golf['style'] = kilo;
                    kilo = 'heading-lg/extrabold';
                    golf['variant'] = kilo;
                    kilo = sizing.title;
                    kilo = kilo.bind(sizing)();
                    golf['children'] = kilo;
                    offset = tango.bind(entity)(offset, golf);
                    golf = new Array(4);
                    golf[0] = offset;
                    options = options[update];
                    options = verify.bind(entity)(options);
                    verify = options.Text;
                    options = {};
                    offset = romeo.templateSubtitle;
                    options['style'] = offset;
                    echo = 'text-sm/medium';
                    options['variant'] = echo;
                    offset = sizing.description;
                    offset = offset.bind(sizing)();
                    options['children'] = offset;
                    options = tango.bind(entity)(verify, options);
                    golf[1] = options;
                    verify = _closure1_slot7;
                    options = {};
                    offset = {};
                    romeo = romeo.templateContentWrapper;
                    offset['style'] = romeo;
                    result = null;
                    romeo = result != output;
                    kilo = null;
                    if(!romeo) { _fun00008_ip = 308; continue _fun00007 }
 232:
                    romeo = '';
                    kilo = null;
                    if(!(romeo !== output)) { _fun00008_ip = 308; continue _fun00007 }
 242:
                    result = _closure1_slot15;
                    output = _closure1_slot0;
                    romeo = _closure1_slot2;
                    romeo = romeo[update];
                    romeo = output.bind(entity)(romeo);
                    output = romeo.Text;
                    romeo = {};
                    update = _closure2_slot3;
                    update = update.templateSubtitle;
                    romeo['style'] = update;
                    romeo['variant'] = echo;
                    echo = sizing.contentPreface;
                    echo = echo.bind(sizing)();
                    romeo['children'] = echo;
                    kilo = result.bind(entity)(output, romeo);
 308:
                    romeo = new Array(2);
                    romeo[0] = kilo;
                    kilo = sizing.contents;
                    output = kilo.bind(sizing)();
                    sizing = output.map;
                    kilo = function(argFoo, argBar) {
                        report = _closure1_slot16;
                        tango = _closure1_slot5;
                        zulu = {};
                        verify = _closure2_slot3;
                        entity = verify.templateContent;
                        zulu['style'] = entity;
                        options = _closure1_slot15;
                        romeo = _closure1_slot1;
                        offset = _closure1_slot2;
                        yankee = 17;
                        entity = offset[yankee];
                        mike = undefined;
                        oscar = romeo.bind(mike)(entity);
                        entity = {};
                        foxtrot = 18;
                        foxtrot = offset[foxtrot];
                        foxtrot = romeo.bind(mike)(foxtrot);
                        entity['source'] = foxtrot;
                        golf = _closure1_slot0;
                        yankee = offset[yankee];
                        yankee = golf.bind(mike)(yankee);
                        yankee = yankee.IconSizes;
                        yankee = yankee.MEDIUM;
                        entity['size'] = yankee;
                        yankee = 9;
                        yankee = offset[yankee];
                        yankee = romeo.bind(mike)(yankee);
                        yankee = yankee.unsafe_rawColors;
                        yankee = yankee.GREEN_360;
                        entity['color'] = yankee;
                        oscar = options.bind(mike)(oscar, entity);
                        entity = new Array(2);
                        entity[0] = oscar;
                        oscar = 15;
                        oscar = offset[oscar];
                        oscar = golf.bind(mike)(oscar);
                        golf = oscar.Text;
                        oscar = {};
                        verify = verify.templateContentText;
                        oscar['style'] = verify;
                        verify = 'text-sm/medium';
                        oscar['variant'] = verify;
                        verify = argFoo;
                        oscar['children'] = verify;
                        oscar = options.bind(mike)(golf, oscar);
                        entity[1] = oscar;
                        zulu['children'] = entity;
                        entity = _closure3_slot0;
                        verify = entity.key;
                        entity = global;
                        entity = entity.HermesInternal;
                        options = entity.concat;
                        golf = '';
                        oscar = '_content_';
                        entity = argBar;
                        entity = options.bind(golf)(verify, oscar, entity);
                        entity = report.bind(mike)(tango, zulu, entity);
                        return entity;
                    };
                    kilo = sizing.bind(output)(kilo);
                    romeo[1] = kilo;
                    offset['children'] = romeo;
                    offset = oscar.bind(entity)(zulu, offset);
                    options['children'] = offset;
                    options = tango.bind(entity)(verify, options);
                    golf[2] = options;
                    offset = _closure1_slot15;
                    verify = _closure1_slot5;
                    options = {};
                    yankee = _closure2_slot3;
                    yankee = yankee.templateButton;
                    options['style'] = yankee;
                    romeo = _closure1_slot1;
                    result = _closure1_slot2;
                    yankee = 19;
                    yankee = result[yankee];
                    romeo = romeo.bind(entity)(yankee);
                    yankee = {};
                    output = _closure1_slot0;
                    backup = 20;
                    kilo = result[backup];
                    kilo = output.bind(entity)(kilo);
                    sizing = kilo.intl;
                    kilo = sizing.string;
                    backup = result[backup];
                    backup = output.bind(entity)(backup);
                    backup = backup.t;
                    backup = backup.mQS8Ii;
                    backup = kilo.bind(sizing)(backup);
                    yankee['text'] = backup;
                    foxtrot = function() { // Original name: onPress
                        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                            entity = _closure3_slot0;
                            report = entity.permissions;
                            zulu = entity.communityPermissions;
                            options = entity.key;
                            tango = _closure1_slot1;
                            romeo = _closure1_slot2;
                            entity = 11;
                            mike = romeo[entity];
                            entity = undefined;
                            offset = tango.bind(entity)(mike);
                            verify = offset.track;
                            mike = _closure1_slot13;
                            golf = mike.ROLE_TEMPLATE_SELECTED;
                            tango = {};
                            yankee = _closure2_slot1;
                            tango['location_page'] = yankee;
                            tango['template_name'] = options;
                            yankee = _closure1_slot0;
                            options = 12;
                            options = romeo[options];
                            romeo = yankee.bind(entity)(options);
                            yankee = romeo.collectGuildAnalyticsMetadata;
                            options = _closure2_slot2;
                            foxtrot = yankee.bind(romeo)(options);
                            backup = tango;
                            yankee = copyDataProperties(backup, foxtrot);
                            tango = verify.bind(offset)(golf, tango);
                            golf = _closure1_slot9;
                            tango = golf.getGuild;
                            options = tango.bind(golf)(options);
                            tango = null;
                            if(!(tango != options)) { _fun00010_ip = 195; continue _fun00009 }
 147:
                            golf = options.hasFeature;
                            oscar = _closure1_slot14;
                            oscar = oscar.COMMUNITY;
                            oscar = golf.bind(options)(oscar);
                            if(!oscar) { _fun00010_ip = 175; continue _fun00009 }
 171:
                            if(!(tango == zulu)) { _fun00010_ip = 186; continue _fun00009 }
 175:
                            tango = _closure2_slot0;
                            tango = tango.bind(entity)(report);
                            _fun00010_ip = 195; continue _fun00009;
 186:
                            mike = _closure2_slot0;
                            mike = mike.bind(entity)(zulu);
 195:
                            return entity;
                        }
                    };
                    yankee['onPress'] = foxtrot;
                    yankee = offset.bind(entity)(romeo, yankee);
                    options['children'] = yankee;
                    options = offset.bind(entity)(verify, options);
                    golf[3] = options;
                    report['children'] = golf;
                    report = oscar.bind(entity)(zulu, report);
                    mike['children'] = report;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                }
            };
            oscar['renderItem'] = romeo;
            oscar['sliderWidth'] = yankee;
            offset = offset.carousel;
            oscar['style'] = offset;
            verify = !verify;
            oscar['scrollEnabled'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();