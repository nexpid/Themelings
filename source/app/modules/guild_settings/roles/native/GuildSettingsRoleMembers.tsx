// app/modules/guild_settings/roles/native/GuildSettingsRoleMembers.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: onMembersLoadFail
        golfie = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 8;
        michal = verify[entity];
        entity = undefined;
        tangon = golfie.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        oscard = 'ERROR_OCCURRED_TRY_AGAIN';
        michal['key'] = oscard;
        oscard = 9;
        oscard = verify[oscard];
        oscard = golfie.bind(entity)(oscard);
        michal['icon'] = oscard;
        option = _closure1_slot0;
        report = 10;
        oscard = verify[report];
        oscard = option.bind(entity)(oscard);
        golfie = oscard.intl;
        oscard = golfie.string;
        report = verify[report];
        report = option.bind(entity)(report);
        report = report.t;
        report = report.fEptJC;
        report = oscard.bind(golfie)(report);
        michal['content'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    offset = 1;
    golfie = oscard[offset];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot7 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    yankee = 7;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_12;
    verify['paddingHorizontal'] = foxtra;
    verify['flex'] = offset;
    tangon['container'] = verify;
    verify = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_12;
    verify['paddingBottom'] = foxtra;
    tangon['containerSearchBar'] = verify;
    verify = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.md;
    verify['borderRadius'] = foxtra;
    verify['borderWidth'] = offset;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.INFO_HELP_FOREGROUND;
    verify['borderColor'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.INFO_HELP_BACKGROUND;
    verify['backgroundColor'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['marginBottom'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['padding'] = foxtra;
    foxtra = 'row';
    verify['flexDirection'] = foxtra;
    foxtra = 'center';
    verify['alignItems'] = foxtra;
    tangon['missingMembers'] = verify;
    verify = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_8;
    verify['marginLeft'] = yankee;
    verify['flex'] = offset;
    tangon['missingMembersText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 29;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_settings/roles/native/GuildSettingsRoleMembers.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildSettingsRoleMembers
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            entity = zuuluu.guild;
            var _closure2_slot0 = entity;
            michal = zuuluu.role;
            var _closure2_slot1 = michal;
            romeon = zuuluu.locked;
            var _closure2_slot2 = romeon;
            verify = zuuluu.contentContainerStyle;
            zuuluu = _closure1_slot10;
            tangon = undefined;
            ctrled = zuuluu.bind(tangon)();
            report = _closure1_slot4;
            oscard = report.useState;
            zuuluu = '';
            golfie = oscard.bind(report)(zuuluu);
            oscard = _closure1_slot3;
            zuuluu = 2;
            golfie = oscard.bind(tangon)(golfie, zuuluu);
            kiloes = 0;
            oscard = golfie[kiloes];
            zuuluu = 1;
            output = golfie[zuuluu];
            zuuluu = oscard.trim;
            oscard = zuuluu.bind(oscard)();
            zuuluu = oscard.toLowerCase;
            foxtra = zuuluu.bind(oscard)();
            var _closure2_slot3 = foxtra;
            backup = _closure1_slot0;
            result = _closure1_slot2;
            zuuluu = 11;
            oscard = result[zuuluu];
            offset = backup.bind(tangon)(oscard);
            golfie = offset.useQueryGuildMembers;
            oscard = entity.id;
            oscard = golfie.bind(offset)(oscard, foxtra);
            zuuluu = result[zuuluu];
            foxtra = backup.bind(tangon)(zuuluu);
            offset = foxtra.useGuildRoleMembers;
            golfie = entity.id;
            oscard = michal.id;
            zuuluu = _closure1_slot11;
            zuuluu = offset.bind(foxtra)(golfie, oscard, zuuluu);
            golfie = zuuluu.filter;
            oscard = function(argFoo) {
                entity = argFoo;
                michal = entity.name;
                entity = michal.toLowerCase;
                zuuluu = entity.bind(michal)();
                michal = zuuluu.includes;
                entity = _closure2_slot3;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            offset = golfie.bind(zuuluu)(oscard);
            var _closure2_slot4 = offset;
            oscard = 12;
            oscard = result[oscard];
            foxtra = backup.bind(tangon)(oscard);
            golfie = foxtra.useSubscribeGuildMembers;
            oscard = {};
            echoed = entity.id;
            update = zuuluu.map;
            sizing = function(argFoo) {
                entity = argFoo;
                entity = entity.id;
                return entity;
            };
            sizing = update.bind(zuuluu)(sizing);
            oscard[echoed] = sizing;
            oscard = golfie.bind(foxtra)(oscard);
            oscard = 13;
            oscard = result[oscard];
            echoed = backup.bind(tangon)(oscard);
            sizing = echoed.useStateFromStores;
            oscard = _closure1_slot6;
            foxtra = new Array(1);
            foxtra[0] = oscard;
            oscard = entity.id;
            golfie = new Array(2);
            golfie[0] = oscard;
            oscard = michal.id;
            golfie[1] = oscard;
            oscard = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = _closure1_slot6;
                    michal = tangon.getRoleMemberCount;
                    entity = _closure2_slot0;
                    entity = entity.id;
                    tangon = michal.bind(tangon)(entity);
                    entity = null;
                    report = entity == tangon;
                    michal = undefined;
                    if(report) { _fun00004_ip = 54; continue _fun00003 }
 41:
                    zuuluu = _closure2_slot1;
                    zuuluu = zuuluu.id;
                    michal = tangon[zuuluu];
 54:
                    zuuluu = entity != michal;
                    entity = 0;
                    if(!zuuluu) { _fun00004_ip = 66; continue _fun00003 }
 63:
                    entity = michal;
 66:
                    return entity;
                }
            };
            oscard = sizing.bind(echoed)(foxtra, oscard, golfie);
            zuuluu = zuuluu.length;
            golfie = oscard > zuuluu;
            foxtra = report.useCallback;
            zuuluu = entity.id;
            oscard = new Array(3);
            oscard[0] = zuuluu;
            zuuluu = michal.id;
            oscard[1] = zuuluu;
            zuuluu = michal.name;
            oscard[2] = zuuluu;
            zuuluu = function(argFoo, argBar) {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    foxtra = argFoo;
                    entity = argBar;
                    var _closure3_slot0 = foxtra;
                    zuuluu = entity.filter;
                    michal = function(argFoo) {
                        entity = _closure2_slot1;
                        michal = entity.id;
                        entity = argFoo;
                        entity = entity !== michal;
                        return entity;
                    };
                    michal = zuuluu.bind(entity)(michal);
                    var _closure3_slot1 = michal;
                    michal = michal.length;
                    entity = entity.length;
                    if(!(michal !== entity)) { _fun00006_ip = 370; continue _fun00005 }
 50:
                    michal = _closure1_slot1;
                    golfie = _closure1_slot2;
                    entity = 14;
                    entity = golfie[entity];
                    oscard = undefined;
                    zuuluu = michal.bind(oscard)(entity);
                    michal = zuuluu.show;
                    entity = {};
                    report = _closure1_slot0;
                    option = 10;
                    verify = golfie[option];
                    verify = report.bind(oscard)(verify);
                    yankee = verify.intl;
                    offset = yankee.string;
                    verify = golfie[option];
                    verify = report.bind(oscard)(verify);
                    verify = verify.t;
                    verify = verify.7sFNfX;
                    verify = offset.bind(yankee)(verify);
                    entity['title'] = verify;
                    verify = golfie[option];
                    verify = report.bind(oscard)(verify);
                    romeon = verify.intl;
                    yankee = romeon.format;
                    verify = golfie[option];
                    verify = report.bind(oscard)(verify);
                    verify = verify.t;
                    offset = verify.scORUl;
                    verify = {};
                    foxtra = foxtra.name;
                    verify['username'] = foxtra;
                    foxtra = _closure2_slot1;
                    foxtra = foxtra.name;
                    verify['roleName'] = foxtra;
                    verify = yankee.bind(romeon)(offset, verify);
                    entity['body'] = verify;
                    verify = golfie[option];
                    verify = report.bind(oscard)(verify);
                    yankee = verify.intl;
                    offset = yankee.string;
                    verify = golfie[option];
                    verify = report.bind(oscard)(verify);
                    verify = verify.t;
                    verify = verify.ETE/oK;
                    verify = offset.bind(yankee)(verify);
                    entity['cancelText'] = verify;
                    verify = golfie[option];
                    verify = report.bind(oscard)(verify);
                    offset = verify.intl;
                    verify = offset.string;
                    option = golfie[option];
                    option = report.bind(oscard)(option);
                    option = option.t;
                    option = option.N86XcH;
                    option = verify.bind(offset)(option);
                    entity['confirmText'] = option;
                    tangon = function() { // Original name: onConfirm
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 15;
                        michal = michal[entity];
                        entity = undefined;
                        option = zuuluu.bind(entity)(michal);
                        golfie = option.updateMemberRoles;
                        zuuluu = _closure2_slot0;
                        foxtra = zuuluu.id;
                        tangon = _closure3_slot0;
                        romeon = tangon.id;
                        yankee = _closure3_slot1;
                        michal = _closure2_slot1;
                        michal = michal.id;
                        zuuluu = new Array(1);
                        zuuluu[0] = michal;
                        offset = new Array(0);
                        backup = option;
                        verify = zuuluu;
                        tangon = backup[golfie](foxtra, romeon, yankee, offset, verify, option);
                        zuuluu = tangon.catch;
                        michal = function() {
                            oscard = _closure1_slot1;
                            golfie = _closure1_slot2;
                            entity = 8;
                            michal = golfie[entity];
                            entity = undefined;
                            tangon = oscard.bind(entity)(michal);
                            zuuluu = tangon.open;
                            michal = {};
                            option = 'ERROR_OCCURRED_TRY_AGAIN';
                            michal['key'] = option;
                            offset = _closure1_slot0;
                            report = 10;
                            option = golfie[report];
                            option = offset.bind(entity)(option);
                            verify = option.intl;
                            option = verify.string;
                            report = golfie[report];
                            report = offset.bind(entity)(report);
                            report = report.t;
                            report = report.fEptJC;
                            report = option.bind(verify)(report);
                            michal['content'] = report;
                            report = 9;
                            report = golfie[report];
                            report = oscard.bind(entity)(report);
                            michal['icon'] = report;
                            michal = zuuluu.bind(tangon)(michal);
                            return entity;
                        };
                        michal = zuuluu.bind(tangon)(michal);
                        return entity;
                    };
                    entity['onConfirm'] = tangon;
                    tangon = false;
                    entity['hideActionSheet'] = tangon;
                    tangon = 16;
                    tangon = golfie[tangon];
                    tangon = report.bind(oscard)(tangon);
                    tangon = tangon.ButtonColors;
                    tangon = tangon.RED;
                    entity['confirmColor'] = tangon;
                    entity = michal.bind(zuuluu)(entity);
 370:
                    entity = undefined;
                    return entity;
                }
            };
            oscard = foxtra.bind(report)(zuuluu, oscard);
            var _closure2_slot5 = oscard;
            foxtra = report.useCallback;
            zuuluu = new Array(2);
            zuuluu[0] = entity;
            zuuluu[1] = michal;
            michal = function() {
                report = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 17;
                tangon = michal[entity];
                entity = undefined;
                option = report.bind(entity)(tangon);
                golfie = option.track;
                tangon = _closure1_slot7;
                oscard = tangon.OPEN_POPOUT;
                tangon = {'type': 'Add Role Members', 'location_page': 'Role Settings', 'location_section': 'Members'};
                tangon = golfie.bind(option)(oscard, tangon);
                tangon = 18;
                tangon = michal[tangon];
                oscard = report.bind(entity)(tangon);
                report = oscard.openLazy;
                tangon = _closure1_slot0;
                zuuluu = 20;
                zuuluu = michal[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = 19;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                tangon = tangon.bind(entity)(zuuluu, michal);
                option = _closure2_slot0;
                yankee = option.id;
                golfie = _closure2_slot1;
                offset = golfie.id;
                michal = global;
                michal = michal.HermesInternal;
                verify = michal.concat;
                zuuluu = 'role-add-members-';
                michal = '-';
                zuuluu = verify.bind(zuuluu)(yankee, michal, offset);
                michal = {};
                michal['guild'] = option;
                michal['role'] = golfie;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            sizing = foxtra.bind(report)(michal, zuuluu);
            zuuluu = report.useCallback;
            michal = new Array(4);
            michal[0] = oscard;
            entity = entity.id;
            michal[1] = entity;
            michal[2] = romeon;
            michal[3] = offset;
            entity = function(argFoo) {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    michal = argFoo;
                    entity = michal.item;
                    var _closure3_slot0 = entity;
                    verify = michal.index;
                    report = _closure1_slot8;
                    zuuluu = _closure1_slot1;
                    tangon = _closure1_slot2;
                    michal = 21;
                    michal = tangon[michal];
                    tangon = undefined;
                    zuuluu = zuuluu.bind(tangon)(michal);
                    michal = {};
                    option = _closure2_slot4;
                    yankee = option.length;
                    option = 1;
                    option = yankee - option;
                    option = verify === option;
                    michal['end'] = option;
                    option = 0;
                    option = option === verify;
                    if(!option) { _fun00008_ip = 90; continue _fun00007 }
 86:
                    option = _closure2_slot2;
 90:
                    michal['start'] = option;
                    option = _closure2_slot0;
                    option = option.id;
                    michal['guildId'] = option;
                    option = entity.user;
                    option = option.id;
                    michal['userId'] = option;
                    option = _closure2_slot2;
                    oscard = null;
                    if(option) { _fun00008_ip = 209; continue _fun00007 }
 130:
                    verify = _closure1_slot8;
                    yankee = _closure1_slot0;
                    romeon = _closure1_slot2;
                    golfie = 22;
                    golfie = romeon[golfie];
                    golfie = yankee.bind(tangon)(golfie);
                    option = golfie.PressableOpacity;
                    golfie = {};
                    offset = function() { // Original name: onPress
                        tangon = _closure2_slot5;
                        zuuluu = _closure3_slot0;
                        michal = zuuluu.roles;
                        entity = undefined;
                        entity = tangon.bind(entity)(zuuluu, michal);
                        return entity;
                    };
                    golfie['onPress'] = offset;
                    offset = 23;
                    offset = romeon[offset];
                    offset = yankee.bind(tangon)(offset);
                    yankee = offset.CircleXIcon;
                    offset = {};
                    offset = verify.bind(tangon)(yankee, offset);
                    golfie['children'] = offset;
                    oscard = verify.bind(tangon)(option, golfie);
 209:
                    michal['trailing'] = oscard;
                    entity = entity.id;
                    entity = report.bind(tangon)(zuuluu, michal, entity);
                    return entity;
                }
            };
            entity = zuuluu.bind(report)(entity, michal);
            var _closure2_slot6 = entity;
            zuuluu = _closure1_slot9;
            michal = _closure1_slot5;
            entity = {};
            report = ctrled.container;
            entity['style'] = report;
            oscard = _closure1_slot8;
            report = {};
            foxtra = ctrled.containerSearchBar;
            report['style'] = foxtra;
            foxtra = 24;
            foxtra = result[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            backup = foxtra.SearchField;
            foxtra = {};
            foxtra['onChange'] = output;
            foxtra = oscard.bind(tangon)(backup, foxtra);
            report['children'] = foxtra;
            oscard = oscard.bind(tangon)(michal, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = {};
            oscard['style'] = verify;
            foxtra = null;
            if(!golfie) { _fun00002_ip = 784; continue _fun00001 }
 569:
            output = _closure1_slot9;
            backup = _closure1_slot5;
            golfie = {};
            result = ctrled.missingMembers;
            golfie['style'] = result;
            source = _closure1_slot8;
            config = _closure1_slot0;
            record = _closure1_slot2;
            result = 25;
            result = record[result];
            result = config.bind(tangon)(result);
            echoed = result.CircleInformationIcon;
            result = {};
            vacuum = _closure1_slot1;
            update = 7;
            update = record[update];
            update = vacuum.bind(tangon)(update);
            update = update.colors;
            update = update.TEXT_LINK;
            result['color'] = update;
            update = 'md';
            result['size'] = update;
            echoed = source.bind(tangon)(echoed, result);
            result = new Array(2);
            result[0] = echoed;
            echoed = 26;
            echoed = record[echoed];
            echoed = config.bind(tangon)(echoed);
            update = echoed.Text;
            echoed = {};
            ctrled = ctrled.missingMembersText;
            echoed['style'] = ctrled;
            ctrled = 'text-sm/medium';
            echoed['variant'] = ctrled;
            ctrled = 10;
            vacuum = record[ctrled];
            vacuum = config.bind(tangon)(vacuum);
            sequen = vacuum.intl;
            vacuum = sequen.string;
            ctrled = record[ctrled];
            ctrled = config.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.RQxHZ2;
            ctrled = vacuum.bind(sequen)(ctrled);
            echoed['children'] = ctrled;
            echoed = source.bind(tangon)(update, echoed);
            result[1] = echoed;
            golfie['children'] = result;
            foxtra = output.bind(tangon)(backup, golfie);
 784:
            golfie = new Array(3);
            golfie[0] = foxtra;
            verify = null;
            if(romeon) { _fun00002_ip = 955; continue _fun00001 }
 800:
            foxtra = _closure1_slot8;
            result = _closure1_slot0;
            echoed = _closure1_slot2;
            yankee = 27;
            yankee = echoed[yankee];
            yankee = result.bind(tangon)(yankee);
            romeon = yankee.TableRow;
            yankee = {};
            backup = true;
            yankee['arrow'] = backup;
            output = 10;
            update = echoed[output];
            update = result.bind(tangon)(update);
            source = update.intl;
            update = source.string;
            output = echoed[output];
            output = result.bind(tangon)(output);
            output = output.t;
            output = output.ZYOK4+;
            output = update.bind(source)(output);
            yankee['label'] = output;
            output = 28;
            output = echoed[output];
            output = result.bind(tangon)(output);
            result = output.CirclePlusIcon;
            output = {};
            echoed = 'md';
            output['size'] = echoed;
            output = foxtra.bind(tangon)(result, output);
            yankee['icon'] = output;
            yankee['onPress'] = sizing;
            yankee['start'] = backup;
            backup = offset.length;
            backup = kiloes === backup;
            yankee['end'] = backup;
            verify = foxtra.bind(tangon)(romeon, yankee);
 955:
            golfie[1] = verify;
            verify = offset.map;
            option = function(argFoo, argBar) {
                zuuluu = _closure2_slot6;
                michal = {};
                entity = argFoo;
                michal['item'] = entity;
                entity = argBar;
                michal['index'] = entity;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            option = verify.bind(offset)(option);
            golfie[2] = option;
            oscard['children'] = golfie;
            oscard = zuuluu.bind(tangon)(michal, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();