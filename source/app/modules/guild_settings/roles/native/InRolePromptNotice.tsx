// app/modules/guild_settings/roles/native/InRolePromptNotice.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.RoleFlags;
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'paddingHorizontal': 16, 'paddingTop': 16, 'flexDirection': 'row', 'alignItems': 'center'};
    tango['promptRow'] = verify;
    verify = {};
    offset = 8;
    verify['marginLeft'] = offset;
    tango['promptText'] = verify;
    verify = {'height': 16, 'width': 16};
    tango['icon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_settings/roles/native/InRolePromptNotice.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            tango = entity.role;
            entity = _closure1_slot7;
            oscar = undefined;
            yankee = entity.bind(oscar)();
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 5;
            entity = zulu[entity];
            report = mike.bind(oscar)(entity);
            zulu = report.hasFlag;
            mike = tango.flags;
            entity = _closure1_slot4;
            entity = entity.IN_PROMPT;
            mike = zulu.bind(report)(mike, entity);
            entity = null;
            if(!mike) { _fun00002_ip = 503; continue _fun00001 }
 77:
            zulu = _closure1_slot0;
            report = _closure1_slot2;
            mike = 6;
            mike = report[mike];
            zulu = zulu.bind(oscar)(mike);
            mike = zulu.isRolePowerful;
            mike = mike.bind(zulu)(tango);
            report = _closure1_slot6;
            tango = _closure1_slot3;
            zulu = {};
            golf = yankee.promptRow;
            zulu['style'] = golf;
            offset = _closure1_slot5;
            foxtrot = _closure1_slot1;
            kilo = _closure1_slot2;
            golf = 7;
            golf = kilo[golf];
            verify = foxtrot.bind(oscar)(golf);
            if(mike) { _fun00002_ip = 318; continue _fun00001 }
 158:
            mike = {};
            golf = yankee.icon;
            mike['style'] = golf;
            golf = 8;
            golf = kilo[golf];
            golf = foxtrot.bind(oscar)(golf);
            mike['source'] = golf;
            golf = offset.bind(oscar)(verify, mike);
            mike = new Array(2);
            mike[0] = golf;
            result = _closure1_slot0;
            golf = 10;
            golf = kilo[golf];
            golf = result.bind(oscar)(golf);
            romeo = golf.Text;
            golf = {};
            backup = yankee.promptText;
            golf['style'] = backup;
            backup = 'text-sm/medium';
            golf['variant'] = backup;
            backup = 11;
            sizing = kilo[backup];
            sizing = result.bind(oscar)(sizing);
            output = sizing.intl;
            sizing = output.string;
            backup = kilo[backup];
            backup = result.bind(oscar)(backup);
            backup = backup.t;
            backup = backup.mqeO2t;
            backup = sizing.bind(output)(backup);
            golf['children'] = backup;
            golf = offset.bind(oscar)(romeo, golf);
            mike[1] = golf;
            zulu['children'] = mike;
            mike = report.bind(oscar)(tango, zulu);
            _fun00002_ip = 500; continue _fun00001;
 318:
            golf = {};
            romeo = yankee.icon;
            golf['style'] = romeo;
            romeo = 8;
            romeo = kilo[romeo];
            romeo = foxtrot.bind(oscar)(romeo);
            golf['source'] = romeo;
            romeo = 9;
            romeo = kilo[romeo];
            romeo = foxtrot.bind(oscar)(romeo);
            romeo = romeo.unsafe_rawColors;
            romeo = romeo.YELLOW_300;
            golf['color'] = romeo;
            verify = offset.bind(oscar)(verify, golf);
            golf = new Array(2);
            golf[0] = verify;
            backup = _closure1_slot0;
            options = 10;
            options = kilo[options];
            options = backup.bind(oscar)(options);
            verify = options.Text;
            options = {};
            yankee = yankee.promptText;
            options['style'] = yankee;
            yankee = 'text-sm/medium';
            options['variant'] = yankee;
            yankee = 11;
            romeo = kilo[yankee];
            romeo = backup.bind(oscar)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            yankee = kilo[yankee];
            yankee = backup.bind(oscar)(yankee);
            yankee = yankee.t;
            yankee = yankee.YRbgX1;
            yankee = romeo.bind(foxtrot)(yankee);
            options['children'] = yankee;
            options = offset.bind(oscar)(verify, options);
            golf[1] = options;
            zulu['children'] = golf;
            mike = report.bind(oscar)(tango, zulu);
 500:
            entity = mike;
 503:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();