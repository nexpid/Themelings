// app/modules/guild_settings/roles/native/InRolePromptNotice.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.RoleFlags;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'paddingHorizontal': 16, 'paddingTop': 16, 'flexDirection': 'row', 'alignItems': 'center'};
    tangon['promptRow'] = verify;
    verify = {};
    offset = 8;
    verify['marginLeft'] = offset;
    tangon['promptText'] = verify;
    verify = {'height': 16, 'width': 16};
    tangon['icon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_settings/roles/native/InRolePromptNotice.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            tangon = entity.role;
            entity = _closure1_slot7;
            oscard = undefined;
            yankee = entity.bind(oscard)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 5;
            entity = zuuluu[entity];
            report = michal.bind(oscard)(entity);
            zuuluu = report.hasFlag;
            michal = tangon.flags;
            entity = _closure1_slot4;
            entity = entity.IN_PROMPT;
            michal = zuuluu.bind(report)(michal, entity);
            entity = null;
            if(!michal) { _fun00002_ip = 503; continue _fun00001 }
 77:
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            michal = 6;
            michal = report[michal];
            zuuluu = zuuluu.bind(oscard)(michal);
            michal = zuuluu.isRolePowerful;
            michal = michal.bind(zuuluu)(tangon);
            report = _closure1_slot6;
            tangon = _closure1_slot3;
            zuuluu = {};
            golfie = yankee.promptRow;
            zuuluu['style'] = golfie;
            offset = _closure1_slot5;
            foxtra = _closure1_slot1;
            kiloes = _closure1_slot2;
            golfie = 7;
            golfie = kiloes[golfie];
            verify = foxtra.bind(oscard)(golfie);
            if(michal) { _fun00002_ip = 318; continue _fun00001 }
 158:
            michal = {};
            golfie = yankee.icon;
            michal['style'] = golfie;
            golfie = 8;
            golfie = kiloes[golfie];
            golfie = foxtra.bind(oscard)(golfie);
            michal['source'] = golfie;
            golfie = offset.bind(oscard)(verify, michal);
            michal = new Array(2);
            michal[0] = golfie;
            result = _closure1_slot0;
            golfie = 10;
            golfie = kiloes[golfie];
            golfie = result.bind(oscard)(golfie);
            romeon = golfie.Text;
            golfie = {};
            backup = yankee.promptText;
            golfie['style'] = backup;
            backup = 'text-sm/medium';
            golfie['variant'] = backup;
            backup = 11;
            sizing = kiloes[backup];
            sizing = result.bind(oscard)(sizing);
            output = sizing.intl;
            sizing = output.string;
            backup = kiloes[backup];
            backup = result.bind(oscard)(backup);
            backup = backup.t;
            backup = backup.mqeO2t;
            backup = sizing.bind(output)(backup);
            golfie['children'] = backup;
            golfie = offset.bind(oscard)(romeon, golfie);
            michal[1] = golfie;
            zuuluu['children'] = michal;
            michal = report.bind(oscard)(tangon, zuuluu);
            _fun00002_ip = 500; continue _fun00001;
 318:
            golfie = {};
            romeon = yankee.icon;
            golfie['style'] = romeon;
            romeon = 8;
            romeon = kiloes[romeon];
            romeon = foxtra.bind(oscard)(romeon);
            golfie['source'] = romeon;
            romeon = 9;
            romeon = kiloes[romeon];
            romeon = foxtra.bind(oscard)(romeon);
            romeon = romeon.unsafe_rawColors;
            romeon = romeon.YELLOW_300;
            golfie['color'] = romeon;
            verify = offset.bind(oscard)(verify, golfie);
            golfie = new Array(2);
            golfie[0] = verify;
            backup = _closure1_slot0;
            option = 10;
            option = kiloes[option];
            option = backup.bind(oscard)(option);
            verify = option.Text;
            option = {};
            yankee = yankee.promptText;
            option['style'] = yankee;
            yankee = 'text-sm/medium';
            option['variant'] = yankee;
            yankee = 11;
            romeon = kiloes[yankee];
            romeon = backup.bind(oscard)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            yankee = kiloes[yankee];
            yankee = backup.bind(oscard)(yankee);
            yankee = yankee.t;
            yankee = yankee.YRbgX1;
            yankee = romeon.bind(foxtra)(yankee);
            option['children'] = yankee;
            option = offset.bind(oscard)(verify, option);
            golfie[1] = option;
            zuuluu['children'] = golfie;
            michal = report.bind(oscard)(tangon, zuuluu);
 500:
            entity = michal;
 503:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();