// app/modules/guild_settings/roles/native/GuildSettingsRoleCreateModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    golf = argCorge;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = golf;
    var _closure1_slot3 = oscar;
    entity = function(argFoo, argBar, argBaz, argCorge) { // Original name: logTransitionEvent
        zulu = _closure1_slot1;
        options = _closure1_slot3;
        entity = 14;
        mike = options[entity];
        entity = undefined;
        report = zulu.bind(entity)(mike);
        tango = report.track;
        mike = _closure1_slot18;
        zulu = mike.USER_FLOW_TRANSITION;
        mike = {};
        golf = _closure1_slot19;
        golf = golf.GUILD_ROLE_CREATION_MODAL;
        mike['flow_type'] = golf;
        golf = argFoo;
        mike['from_step'] = golf;
        golf = argBar;
        mike['to_step'] = golf;
        golf = argBaz;
        mike['skip'] = golf;
        golf = _closure1_slot0;
        oscar = 15;
        oscar = options[oscar];
        options = golf.bind(entity)(oscar);
        golf = options.collectGuildAnalyticsMetadata;
        oscar = argCorge;
        verify = golf.bind(options)(oscar);
        offset = mike;
        oscar = copyDataProperties(offset, verify);
        mike = tango.bind(report)(zulu, mike);
        return entity;
    };
    var _closure1_slot31 = entity;
    entity = function() { // Original name: useGuildSettingsStoreGuild
        zulu = _closure1_slot0;
        tango = _closure1_slot3;
        entity = 19;
        entity = tango[entity];
        report = undefined;
        golf = zulu.bind(report)(entity);
        oscar = golf.useStateFromStores;
        entity = _closure1_slot12;
        zulu = new Array(1);
        zulu[0] = entity;
        entity = function() {
            mike = _closure1_slot12;
            entity = mike.getProps;
            entity = entity.bind(mike)();
            entity = entity.guild;
            return entity;
        };
        entity = oscar.bind(golf)(zulu, entity);
        zulu = _closure1_slot1;
        mike = 20;
        mike = tango[mike];
        tango = zulu.bind(report)(mike);
        mike = null;
        zulu = mike != entity;
        mike = 'useGuildSettingsStoreGuild: Guild cannot be null';
        mike = tango.bind(report)(zulu, mike);
        return entity;
    };
    var _closure1_slot32 = entity;
    entity = function() { // Original name: useGuildSettingsStoreGuildWithRole
        offset = _closure1_slot0;
        golf = _closure1_slot3;
        verify = 19;
        entity = golf[verify];
        oscar = undefined;
        report = offset.bind(oscar)(entity);
        tango = report.useStateFromStoresObject;
        entity = _closure1_slot12;
        zulu = new Array(1);
        zulu[0] = entity;
        entity = function() {
            mike = _closure1_slot12;
            entity = mike.getProps;
            entity = entity.bind(mike)();
            return entity;
        };
        entity = tango.bind(report)(zulu, entity);
        zulu = entity.guild;
        var _closure2_slot0 = zulu;
        entity = entity.selectedRoleId;
        var _closure2_slot1 = entity;
        report = _closure1_slot1;
        tango = 20;
        entity = golf[tango];
        foxtrot = report.bind(oscar)(entity);
        entity = null;
        romeo = entity != zulu;
        yankee = 'useGuildSettingsStoreGuildWithRole: Guild cannot be null';
        yankee = foxtrot.bind(oscar)(romeo, yankee);
        verify = golf[verify];
        offset = offset.bind(oscar)(verify);
        verify = offset.useStateFromStores;
        yankee = _closure1_slot9;
        options = new Array(1);
        options[0] = yankee;
        mike = function() {
            _fun126046: for(var _fun126046_ip = 0; ; ) switch(_fun126046_ip) {
 0:
                zulu = _closure2_slot1;
                entity = null;
                zulu = entity != zulu;
                entity = undefined;
                if(!zulu) { _fun126046_ip = 50; continue _fun126046 }
 18:
                report = _closure1_slot9;
                tango = report.getRole;
                zulu = _closure2_slot0;
                zulu = zulu.id;
                mike = _closure2_slot1;
                entity = tango.bind(report)(zulu, mike);
 50:
                return entity;
            }
        };
        mike = verify.bind(offset)(options, mike);
        tango = golf[tango];
        report = report.bind(oscar)(tango);
        tango = entity != mike;
        entity = 'useGuildSettingsStoreGuildWithRole: Role cannot be null';
        entity = report.bind(oscar)(tango, entity);
        entity = {};
        entity['guild'] = zulu;
        entity['role'] = mike;
        return entity;
    };
    var _closure1_slot33 = entity;
    entity = function() { // Original name: shouldSkipPermissions
        _fun126047: for(var _fun126047_ip = 0; ; ) switch(_fun126047_ip) {
 0:
            mike = _closure1_slot12;
            entity = mike.getProps;
            entity = entity.bind(mike)();
            report = entity.guild;
            mike = _closure1_slot1;
            options = _closure1_slot3;
            entity = 20;
            entity = options[entity];
            tango = undefined;
            zulu = mike.bind(tango)(entity);
            entity = null;
            mike = entity != report;
            entity = 'shouldSkipPermissions: Guild cannot be null';
            entity = zulu.bind(tango)(mike, entity);
            mike = _closure1_slot10;
            entity = mike.getCurrentUser;
            oscar = entity.bind(mike)();
            entity = report.isOwner;
            entity = entity.bind(report)(oscar);
            zulu = _closure1_slot2;
            mike = 21;
            mike = options[mike];
            tango = zulu.bind(tango)(mike);
            zulu = tango.can;
            mike = {};
            golf = _closure1_slot20;
            golf = golf.ADMINISTRATOR;
            mike['permission'] = golf;
            mike['user'] = oscar;
            mike['context'] = report;
            mike = zulu.bind(tango)(mike);
            entity = !entity;
            if(!entity) { _fun126047_ip = 147; continue _fun126047 }
 144:
            entity = !mike;
 147:
            return entity;
        }
    };
    var _closure1_slot34 = entity;
    entity = function() { // Original name: RoleCreateScene
        _fun126048: for(var _fun126048_ip = 0; ; ) switch(_fun126048_ip) {
 0:
            mike = _closure1_slot25;
            tango = undefined;
            foxtrot = mike.bind(tango)();
            source = _closure1_slot0;
            result = _closure1_slot3;
            mike = 22;
            mike = result[mike];
            zulu = source.bind(tango)(mike);
            mike = zulu.useNavigation;
            options = mike.bind(zulu)();
            var _closure2_slot0 = options;
            mike = _closure1_slot32;
            offset = mike.bind(tango)();
            var _closure2_slot1 = offset;
            report = _closure1_slot6;
            zulu = report.useState;
            output = 17;
            mike = result[output];
            mike = source.bind(tango)(mike);
            golf = mike.intl;
            oscar = golf.string;
            mike = result[output];
            mike = source.bind(tango)(mike);
            mike = mike.t;
            mike = mike.QBMHvL;
            mike = oscar.bind(golf)(mike);
            zulu = zulu.bind(report)(mike);
            mike = _closure1_slot5;
            golf = 2;
            mike = mike.bind(tango)(zulu, golf);
            report = 0;
            config = mike[report];
            var _closure2_slot2 = config;
            zulu = 1;
            sequence = mike[zulu];
            yankee = _closure1_slot6;
            oscar = yankee.useState;
            mike = _closure1_slot17;
            oscar = oscar.bind(yankee)(mike);
            mike = _closure1_slot5;
            mike = mike.bind(tango)(oscar, golf);
            equality = mike[report];
            var _closure2_slot3 = equality;
            mike = mike[zulu];
            var _closure2_slot4 = mike;
            yankee = _closure1_slot6;
            oscar = yankee.useState;
            mike = false;
            oscar = oscar.bind(yankee)(mike);
            mike = _closure1_slot5;
            mike = mike.bind(tango)(oscar, golf);
            backup = mike[report];
            mike = mike[zulu];
            var _closure2_slot5 = mike;
            mike = 19;
            mike = result[mike];
            oscar = source.bind(tango)(mike);
            report = oscar.useStateFromStores;
            mike = _closure1_slot11;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                entity = _closure1_slot11;
                entity = entity.keyboardOpen;
                return entity;
            };
            yankee = report.bind(oscar)(zulu, mike);
            oscar = _closure1_slot6;
            report = oscar.useLayoutEffect;
            zulu = new Array(2);
            zulu[0] = options;
            zulu[1] = offset;
            mike = function() {
                tango = _closure2_slot0;
                zulu = tango.setOptions;
                mike = {};
                golf = _closure1_slot0;
                oscar = _closure1_slot3;
                entity = 23;
                oscar = oscar[entity];
                entity = undefined;
                options = golf.bind(entity)(oscar);
                golf = options.getHeaderCloseButton;
                oscar = function() {
                    tango = _closure1_slot29;
                    mike = _closure1_slot27;
                    entity = _closure1_slot26;
                    entity = entity.STEP_DISPLAY;
                    zulu = mike[entity];
                    entity = _closure2_slot1;
                    mike = entity.id;
                    entity = undefined;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                oscar = golf.bind(options)(oscar);
                mike['headerLeft'] = oscar;
                report = function() { // Original name: headerTitle
                    tango = _closure1_slot21;
                    zulu = _closure1_slot28;
                    mike = {};
                    entity = _closure1_slot26;
                    entity = entity.STEP_DISPLAY;
                    mike['step'] = entity;
                    entity = undefined;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                mike['headerTitle'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            mike = report.bind(oscar)(mike, zulu);
            oscar = _closure1_slot6;
            report = oscar.useCallback;
            zulu = function(argFoo) {
                zulu = _closure2_slot4;
                entity = undefined;
                mike = argFoo;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            mike = new Array(0);
            oscar = report.bind(oscar)(zulu, mike);
            var _closure2_slot6 = oscar;
            golf = _closure1_slot6;
            report = golf.useCallback;
            zulu = _closure1_slot4;
            mike = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun126055: for(var _fun126055_ip = 0; ; ) switch(_fun126055_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                        if(mike) { _fun126055_ip = 188; continue _fun126055 }
 10: // try_start_0
                        tango = _closure2_slot5;
                        oscar = undefined;
                        zulu = true;
                        zulu = tango.bind(oscar)(zulu);
                        report = _closure2_slot3;
                        tango = _closure1_slot17;
                        golf = 0;
                        if(!(report !== tango)) { _fun126055_ip = 47; continue _fun126055 }
 43:
                        golf = _closure2_slot3;
 47:
                        report = _closure1_slot1;
                        options = _closure1_slot3;
                        tango = 24;
                        tango = options[tango];
                        oscar = report.bind(oscar)(tango);
                        report = oscar.createRole;
                        tango = _closure2_slot1;
                        tango = tango.id;
                        mike = _closure2_slot2;
                        mike = report.bind(oscar)(tango, mike, golf);
                        SaveGenerator(address=97);
 95:
                        return mike;
 97:
                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=3);
                        if(tango) { _fun126055_ip = 129; continue _fun126055 }
 103:
                        report = _closure1_slot12;
                        tango = report.addConditionalChangeListener;
                        zulu = function() {
                            _fun126056: for(var _fun126056_ip = 0; ; ) switch(_fun126056_ip) {
 0:
                                zulu = _closure1_slot12;
                                entity = zulu.getProps;
                                zulu = entity.bind(zulu)();
                                entity = zulu.guild;
                                report = zulu.selectedRoleId;
                                zulu = null;
                                golf = zulu != entity;
                                oscar = undefined;
                                tango = undefined;
                                if(!golf) { _fun126056_ip = 71; continue _fun126056 }
 41:
                                golf = zulu != report;
                                tango = undefined;
                                if(!golf) { _fun126056_ip = 71; continue _fun126056 }
 50:
                                verify = _closure1_slot9;
                                options = verify.getRole;
                                golf = entity.id;
                                tango = options.bind(verify)(golf, report);
 71:
                                if(!(zulu != report)) { _fun126056_ip = 242; continue _fun126056 }
 78:
                                if(!(zulu != tango)) { _fun126056_ip = 242; continue _fun126056 }
 85:
                                if(!(zulu != entity)) { _fun126056_ip = 242; continue _fun126056 }
 92:
                                tango = _closure1_slot0;
                                report = _closure1_slot3;
                                zulu = 25;
                                zulu = report[zulu];
                                golf = tango.bind(oscar)(zulu);
                                zulu = golf.roleCreatedToast;
                                zulu = zulu.bind(golf)();
                                zulu = 26;
                                zulu = report[zulu];
                                report = tango.bind(oscar)(zulu);
                                tango = report.setRoleJustCreated;
                                zulu = true;
                                zulu = tango.bind(report)(zulu);
                                zulu = _closure1_slot26;
                                zulu = zulu.STEP_PERMISSIONS;
                                tango = _closure1_slot34;
                                tango = tango.bind(oscar)();
                                if(!tango) { _fun126056_ip = 178; continue _fun126056 }
 168:
                                tango = _closure1_slot26;
                                zulu = tango.STEP_MEMBERS;
 178:
                                report = _closure2_slot0;
                                tango = report.push;
                                tango = tango.bind(report)(zulu);
                                report = _closure1_slot31;
                                golf = _closure1_slot27;
                                tango = _closure1_slot26;
                                tango = tango.STEP_DISPLAY;
                                foxtrot = golf[tango];
                                mike = _closure1_slot27;
                                romeo = mike[zulu];
                                offset = entity.id;
                                entity = false;
                                backup = undefined;
                                yankee = false;
                                mike = backup[report](foxtrot, romeo, yankee, offset, verify);
                                return entity;
 242:
                                entity = true;
                                return entity;
                            }
                        };
                        zulu = tango.bind(report)(zulu);
 127: // try_end0
                        _fun126055_ip = 183; continue _fun126055;
 129:
                        return mike;
 132: // catch_target0
                        CatchBlockStart(arg_register=1);
                        zulu = _closure2_slot5;
                        tango = undefined;
                        mike = false;
                        mike = zulu.bind(tango)(mike);
                        zulu = _closure1_slot0;
                        report = _closure1_slot3;
                        mike = 25;
                        mike = report[mike];
                        zulu = zulu.bind(tango)(mike);
                        mike = zulu.roleCreateFailedToast;
                        mike = mike.bind(zulu)();
 183:
                        mike = undefined;
                        return mike;
 188:
                        return entity;
                    }
                };
                return entity;
            };
            zulu = zulu.bind(tango)(mike);
            mike = new Array(4);
            mike[0] = equality;
            offset = offset.id;
            mike[1] = offset;
            mike[2] = config;
            mike[3] = options;
            romeo = report.bind(golf)(zulu, mike);
            report = _closure1_slot6;
            zulu = report.useCallback;
            mike = new Array(2);
            mike[0] = equality;
            mike[1] = oscar;
            entity = function() {
                mike = _closure1_slot8;
                entity = mike.dismiss;
                entity = entity.bind(mike)();
                report = _closure1_slot1;
                mike = _closure1_slot3;
                entity = 27;
                tango = mike[entity];
                entity = undefined;
                oscar = report.bind(entity)(tango);
                report = oscar.openLazy;
                tango = _closure1_slot0;
                zulu = 29;
                zulu = mike[zulu];
                tango = tango.bind(entity)(zulu);
                zulu = 28;
                zulu = mike[zulu];
                mike = mike.paths;
                tango = tango.bind(entity)(zulu, mike);
                zulu = {};
                golf = _closure2_slot3;
                zulu['color'] = golf;
                mike = _closure2_slot6;
                zulu['onSelect'] = mike;
                mike = 'RoleColorPicker';
                mike = report.bind(oscar)(tango, mike, zulu);
                return entity;
            };
            lima = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot22;
            mike = _closure1_slot38;
            entity = {};
            report = result[output];
            report = source.bind(tango)(report);
            golf = report.intl;
            oscar = golf.string;
            report = result[output];
            report = source.bind(tango)(report);
            report = report.t;
            report = report.8pxAPj;
            report = oscar.bind(golf)(report);
            entity['title'] = report;
            report = result[output];
            report = source.bind(tango)(report);
            golf = report.intl;
            oscar = golf.string;
            report = result[output];
            report = source.bind(tango)(report);
            report = report.t;
            report = report.JubQz8;
            report = oscar.bind(golf)(report);
            entity['subtitle'] = report;
            golf = _closure1_slot22;
            oscar = _closure1_slot7;
            report = {};
            options = foxtrot.sceneInner;
            report['style'] = options;
            sizing = _closure1_slot21;
            offset = 30;
            options = result[offset];
            options = source.bind(tango)(options);
            kilo = options.FormSection;
            options = {};
            echo = result[output];
            echo = source.bind(tango)(echo);
            control = echo.intl;
            update = control.string;
            echo = result[output];
            echo = source.bind(tango)(echo);
            echo = echo.t;
            echo = echo.dLbkBg;
            echo = update.bind(control)(echo);
            options['title'] = echo;
            update = true;
            options['thinTitle'] = update;
            vacuum = _closure1_slot21;
            echo = result[offset];
            echo = source.bind(tango)(echo);
            control = echo.FormInput;
            echo = {'value': null, 'onChange': null, 'showTopContainer': false, 'maxLength': null, 'autoFocus': true, 'autoComplete': 'off'};
            echo['value'] = config;
            echo['onChange'] = sequence;
            sequence = _closure1_slot16;
            echo['maxLength'] = sequence;
            echo = vacuum.bind(tango)(control, echo);
            options['children'] = echo;
            kilo = sizing.bind(tango)(kilo, options);
            options = new Array(5);
            options[0] = kilo;
            echo = _closure1_slot21;
            kilo = result[offset];
            kilo = source.bind(tango)(kilo);
            sizing = kilo.FormHint;
            kilo = {};
            control = result[output];
            control = source.bind(tango)(control);
            sequence = control.intl;
            vacuum = sequence.string;
            control = result[output];
            control = source.bind(tango)(control);
            control = control.t;
            control = control.m4j44e;
            control = vacuum.bind(sequence)(control);
            kilo['children'] = control;
            kilo = echo.bind(tango)(sizing, kilo);
            options[1] = kilo;
            echo = _closure1_slot21;
            kilo = result[offset];
            kilo = source.bind(tango)(kilo);
            sizing = kilo.FormDivider;
            kilo = {};
            kilo['outer'] = update;
            update = foxtrot.formDivider;
            kilo['style'] = update;
            kilo = echo.bind(tango)(sizing, kilo);
            options[2] = kilo;
            echo = _closure1_slot21;
            kilo = result[offset];
            kilo = source.bind(tango)(kilo);
            sizing = kilo.FormRow;
            kilo = {};
            update = foxtrot.formRow;
            kilo['DEPRECATED_style'] = update;
            kilo['onPress'] = lima;
            vacuum = _closure1_slot22;
            control = _closure1_slot7;
            update = {};
            sequence = foxtrot.colorRow;
            update['style'] = sequence;
            record = _closure1_slot21;
            target = 16;
            sequence = result[target];
            sequence = source.bind(tango)(sequence);
            config = sequence.Text;
            sequence = {};
            context = 'text-md/semibold';
            sequence['variant'] = context;
            context = result[output];
            context = source.bind(tango)(context);
            status = context.intl;
            papa = status.string;
            context = result[output];
            context = source.bind(tango)(context);
            context = context.t;
            context = context.5NC5YW;
            context = papa.bind(status)(context);
            sequence['children'] = context;
            config = record.bind(tango)(config, sequence);
            sequence = new Array(2);
            sequence[0] = config;
            context = _closure1_slot22;
            record = _closure1_slot7;
            config = {};
            papa = foxtrot.colorValue;
            config['style'] = papa;
            sierra = _closure1_slot21;
            status = _closure1_slot1;
            papa = 31;
            papa = result[papa];
            status = status.bind(tango)(papa);
            papa = {};
            papa['color'] = equality;
            whiskey = foxtrot.colorBlock;
            papa['style'] = whiskey;
            papa['onSelect'] = lima;
            status = sierra.bind(tango)(status, papa);
            papa = new Array(2);
            papa[0] = status;
            sierra = _closure1_slot21;
            target = result[target];
            target = source.bind(tango)(target);
            status = target.Text;
            target = {};
            lima = 'text-sm/medium';
            target['variant'] = lima;
            lima = 32;
            lima = result[lima];
            whiskey = source.bind(tango)(lima);
            lima = whiskey.int2hex;
            lima = lima.bind(whiskey)(equality);
            target['children'] = lima;
            target = sierra.bind(tango)(status, target);
            papa[1] = target;
            config['children'] = papa;
            config = context.bind(tango)(record, config);
            sequence[1] = config;
            update['children'] = sequence;
            update = vacuum.bind(tango)(control, update);
            kilo['label'] = update;
            update = result[offset];
            update = source.bind(tango)(update);
            update = update.FormRow;
            update = update.Arrow;
            kilo['trailing'] = update;
            kilo = echo.bind(tango)(sizing, kilo);
            options[3] = kilo;
            sizing = _closure1_slot21;
            offset = result[offset];
            offset = source.bind(tango)(offset);
            kilo = offset.FormHint;
            offset = {};
            echo = result[output];
            echo = source.bind(tango)(echo);
            update = echo.intl;
            echo = update.string;
            result = result[output];
            result = source.bind(tango)(result);
            result = result.t;
            result = result.9TMIgY;
            result = echo.bind(update)(result);
            offset['children'] = result;
            offset = sizing.bind(tango)(kilo, offset);
            options[4] = offset;
            report['children'] = options;
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot21;
            golf = _closure1_slot7;
            oscar = {};
            kilo = foxtrot.nextButton;
            offset = new Array(2);
            offset[0] = kilo;
            if(!yankee) { _fun126048_ip = 1324; continue _fun126048 }
 1318:
            yankee = foxtrot.nextButtonFloating;
 1324:
            offset[1] = yankee;
            oscar['style'] = offset;
            yankee = _closure1_slot21;
            sizing = _closure1_slot0;
            foxtrot = _closure1_slot3;
            verify = 33;
            verify = foxtrot[verify];
            verify = sizing.bind(tango)(verify);
            offset = verify.Button;
            verify = {};
            verify['loading'] = backup;
            verify['disabled'] = backup;
            backup = foxtrot[output];
            backup = sizing.bind(tango)(backup);
            kilo = backup.intl;
            backup = kilo.string;
            foxtrot = foxtrot[output];
            foxtrot = sizing.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.CumH4u;
            foxtrot = backup.bind(kilo)(foxtrot);
            verify['text'] = foxtrot;
            verify['onPress'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot35 = entity;
    entity = function() { // Original name: RolePermissionTemplate
        mike = _closure1_slot25;
        tango = undefined;
        offset = mike.bind(tango)();
        sizing = _closure1_slot0;
        output = _closure1_slot3;
        mike = 22;
        mike = output[mike];
        zulu = sizing.bind(tango)(mike);
        mike = zulu.useNavigation;
        golf = mike.bind(zulu)();
        var _closure2_slot0 = golf;
        mike = _closure1_slot33;
        zulu = mike.bind(tango)();
        mike = zulu.role;
        var _closure2_slot1 = mike;
        options = zulu.guild;
        var _closure2_slot2 = options;
        yankee = _closure1_slot6;
        oscar = yankee.useLayoutEffect;
        report = new Array(2);
        report[0] = golf;
        zulu = options.id;
        report[1] = zulu;
        zulu = function() {
            tango = _closure2_slot0;
            zulu = tango.setOptions;
            mike = {};
            golf = _closure1_slot0;
            oscar = _closure1_slot3;
            entity = 23;
            oscar = oscar[entity];
            entity = undefined;
            options = golf.bind(entity)(oscar);
            golf = options.getHeaderCloseButton;
            oscar = function() {
                tango = _closure1_slot29;
                mike = _closure1_slot27;
                entity = _closure1_slot26;
                entity = entity.STEP_PERMISSIONS;
                zulu = mike[entity];
                entity = _closure2_slot2;
                mike = entity.id;
                entity = undefined;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            oscar = golf.bind(options)(oscar);
            mike['headerLeft'] = oscar;
            report = function() { // Original name: headerTitle
                tango = _closure1_slot21;
                zulu = _closure1_slot28;
                mike = {};
                entity = _closure1_slot26;
                entity = entity.STEP_PERMISSIONS;
                mike['step'] = entity;
                entity = undefined;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            mike['headerTitle'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        zulu = oscar.bind(yankee)(zulu, report);
        oscar = _closure1_slot6;
        report = oscar.useCallback;
        yankee = options.id;
        zulu = new Array(3);
        zulu[0] = yankee;
        zulu[1] = golf;
        mike = mike.id;
        zulu[2] = mike;
        mike = function(argFoo) {
            tango = _closure1_slot1;
            mike = _closure1_slot3;
            entity = 24;
            mike = mike[entity];
            entity = undefined;
            verify = tango.bind(entity)(mike);
            options = verify.updateRolePermissions;
            mike = _closure2_slot2;
            golf = mike.id;
            report = _closure2_slot1;
            oscar = report.id;
            report = argFoo;
            report = options.bind(verify)(golf, oscar, report);
            oscar = _closure2_slot0;
            report = oscar.push;
            tango = _closure1_slot26;
            tango = tango.STEP_MEMBERS;
            tango = report.bind(oscar)(tango);
            oscar = _closure1_slot31;
            report = _closure1_slot27;
            tango = _closure1_slot26;
            tango = tango.STEP_PERMISSIONS;
            foxtrot = report[tango];
            tango = _closure1_slot27;
            zulu = _closure1_slot26;
            zulu = zulu.STEP_MEMBERS;
            romeo = tango[zulu];
            offset = mike.id;
            yankee = false;
            backup = undefined;
            mike = backup[oscar](foxtrot, romeo, yankee, offset, verify);
            return entity;
        };
        yankee = report.bind(oscar)(mike, zulu);
        var _closure2_slot3 = yankee;
        report = _closure1_slot6;
        zulu = report.useCallback;
        mike = new Array(1);
        mike[0] = yankee;
        entity = function() {
            zulu = _closure2_slot3;
            mike = _closure1_slot13;
            entity = _closure1_slot14;
            entity = mike[entity];
            mike = entity.permissions;
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        romeo = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot22;
        mike = _closure1_slot38;
        entity = {};
        report = false;
        entity['hasSkipButton'] = report;
        foxtrot = 17;
        report = output[foxtrot];
        report = sizing.bind(tango)(report);
        golf = report.intl;
        oscar = golf.string;
        report = output[foxtrot];
        report = sizing.bind(tango)(report);
        report = report.t;
        report = report.p0IwND;
        report = oscar.bind(golf)(report);
        entity['title'] = report;
        report = output[foxtrot];
        report = sizing.bind(tango)(report);
        golf = report.intl;
        oscar = golf.string;
        report = output[foxtrot];
        report = sizing.bind(tango)(report);
        report = report.t;
        report = report.G529Hh;
        report = oscar.bind(golf)(report);
        entity['subtitle'] = report;
        golf = _closure1_slot21;
        oscar = _closure1_slot1;
        report = 34;
        report = output[report];
        oscar = oscar.bind(tango)(report);
        report = {};
        report['onSelect'] = yankee;
        yankee = _closure1_slot19;
        yankee = yankee.GUILD_ROLE_CREATION_MODAL;
        report['location'] = yankee;
        options = options.id;
        report['guildId'] = options;
        oscar = golf.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        options = _closure1_slot21;
        golf = _closure1_slot7;
        oscar = {};
        offset = offset.sceneFooter;
        oscar['style'] = offset;
        yankee = _closure1_slot21;
        verify = 33;
        verify = output[verify];
        verify = sizing.bind(tango)(verify);
        offset = verify.Button;
        verify = {};
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = output[foxtrot];
        foxtrot = sizing.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.CJm5V1;
        foxtrot = backup.bind(kilo)(foxtrot);
        verify['text'] = foxtrot;
        verify['onPress'] = romeo;
        verify = yankee.bind(tango)(offset, verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot36 = entity;
    entity = function() { // Original name: RoleMembers
        _fun126064: for(var _fun126064_ip = 0; ; ) switch(_fun126064_ip) {
 0:
            mike = _closure1_slot25;
            tango = undefined;
            yankee = mike.bind(tango)();
            oscar = _closure1_slot0;
            control = _closure1_slot3;
            mike = 22;
            mike = control[mike];
            zulu = oscar.bind(tango)(mike);
            mike = zulu.useNavigation;
            mike = mike.bind(zulu)();
            var _closure2_slot0 = mike;
            zulu = _closure1_slot33;
            zulu = zulu.bind(tango)();
            verify = zulu.role;
            var _closure2_slot1 = verify;
            echo = zulu.guild;
            var _closure2_slot2 = echo;
            report = _closure1_slot1;
            zulu = 20;
            zulu = control[zulu];
            golf = report.bind(tango)(zulu);
            zulu = null;
            report = zulu != verify;
            zulu = 'Role cannot be null';
            zulu = golf.bind(tango)(report, zulu);
            golf = _closure1_slot6;
            report = golf.useLayoutEffect;
            zulu = new Array(2);
            zulu[0] = mike;
            mike = echo.id;
            zulu[1] = mike;
            mike = function() {
                zulu = _closure2_slot0;
                mike = zulu.setOptions;
                entity = {};
                golf = _closure1_slot0;
                oscar = _closure1_slot3;
                report = 23;
                oscar = oscar[report];
                report = undefined;
                golf = golf.bind(report)(oscar);
                oscar = golf.getHeaderCloseButton;
                report = function() {
                    tango = _closure1_slot29;
                    mike = _closure1_slot27;
                    entity = _closure1_slot26;
                    entity = entity.STEP_MEMBERS;
                    zulu = mike[entity];
                    entity = _closure2_slot2;
                    mike = entity.id;
                    entity = undefined;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                report = oscar.bind(golf)(report);
                entity['headerLeft'] = report;
                tango = function() { // Original name: headerTitle
                    tango = _closure1_slot21;
                    zulu = _closure1_slot28;
                    mike = {};
                    entity = _closure1_slot26;
                    entity = entity.STEP_MEMBERS;
                    mike['step'] = entity;
                    entity = undefined;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                entity['headerTitle'] = tango;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            mike = report.bind(golf)(mike, zulu);
            mike = 19;
            mike = control[mike];
            golf = oscar.bind(tango)(mike);
            report = golf.useStateFromStores;
            mike = _closure1_slot11;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                entity = _closure1_slot11;
                entity = entity.keyboardOpen;
                return entity;
            };
            offset = report.bind(golf)(zulu, mike);
            golf = _closure1_slot6;
            report = golf.useCallback;
            mike = verify.id;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function(argFoo) {
                entity = argFoo;
                zulu = entity.roles;
                mike = zulu.includes;
                entity = _closure2_slot1;
                entity = entity.id;
                entity = mike.bind(zulu)(entity);
                entity = !entity;
                return entity;
            };
            golf = report.bind(golf)(mike, zulu);
            mike = 35;
            mike = control[mike];
            report = oscar.bind(tango)(mike);
            zulu = report.useGuildMembers;
            mike = echo.id;
            result = zulu.bind(report)(mike, golf);
            report = _closure1_slot6;
            zulu = report.useState;
            mike = {};
            zulu = zulu.bind(report)(mike);
            mike = _closure1_slot5;
            golf = 2;
            mike = mike.bind(tango)(zulu, golf);
            romeo = 0;
            sizing = mike[romeo];
            var _closure2_slot3 = sizing;
            zulu = 1;
            options = mike[zulu];
            report = _closure1_slot6;
            mike = report.useState;
            source = false;
            report = mike.bind(report)(source);
            mike = _closure1_slot5;
            mike = mike.bind(tango)(report, golf);
            output = mike[romeo];
            mike = mike[zulu];
            var _closure2_slot4 = mike;
            golf = _closure1_slot6;
            report = golf.useCallback;
            zulu = new Array(4);
            zulu[0] = mike;
            mike = echo.id;
            zulu[1] = mike;
            mike = verify.id;
            zulu[2] = mike;
            zulu[3] = sizing;
            mike = function() {
                _fun126070: for(var _fun126070_ip = 0; ; ) switch(_fun126070_ip) {
 0:
                    entity = global;
                    tango = entity.Object;
                    zulu = tango.keys;
                    mike = _closure2_slot3;
                    options = zulu.bind(tango)(mike);
                    zulu = options.length;
                    mike = 0;
                    if(!(zulu > mike)) { _fun126070_ip = 110; continue _fun126070 }
 36:
                    tango = _closure2_slot4;
                    zulu = undefined;
                    mike = true;
                    mike = tango.bind(zulu)(mike);
                    report = _closure1_slot1;
                    oscar = _closure1_slot3;
                    mike = 36;
                    mike = oscar[mike];
                    golf = report.bind(zulu)(mike);
                    oscar = golf.bulkAddMemberRoles;
                    mike = _closure2_slot2;
                    report = mike.id;
                    mike = _closure2_slot1;
                    mike = mike.id;
                    mike = oscar.bind(golf)(report, mike, options);
                    mike = false;
                    mike = tango.bind(zulu)(mike);
 110:
                    golf = _closure1_slot31;
                    tango = _closure1_slot27;
                    zulu = _closure1_slot26;
                    zulu = zulu.STEP_MEMBERS;
                    romeo = tango[zulu];
                    zulu = _closure1_slot27;
                    yankee = zulu.FLOW_COMPLETED;
                    entity = _closure2_slot2;
                    verify = entity.id;
                    entity = undefined;
                    offset = false;
                    foxtrot = undefined;
                    zulu = foxtrot[golf](romeo, yankee, offset, verify, options);
                    zulu = _closure1_slot1;
                    tango = _closure1_slot3;
                    mike = 18;
                    mike = tango[mike];
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.close;
                    mike = mike.bind(zulu)();
                    return entity;
                }
            };
            kilo = report.bind(golf)(mike, zulu);
            report = _closure1_slot6;
            zulu = report.useMemo;
            mike = new Array(1);
            mike[0] = sizing;
            entity = function() {
                entity = global;
                zulu = entity.Object;
                mike = zulu.keys;
                entity = _closure2_slot3;
                entity = mike.bind(zulu)(entity);
                entity = entity.length;
                return entity;
            };
            backup = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot22;
            mike = _closure1_slot38;
            entity = {};
            report = !offset;
            entity['hasSkipButton'] = report;
            update = 17;
            report = control[update];
            report = oscar.bind(tango)(report);
            vacuum = report.intl;
            golf = vacuum.string;
            report = control[update];
            report = oscar.bind(tango)(report);
            report = report.t;
            report = report.+gWHtL;
            report = golf.bind(vacuum)(report);
            entity['title'] = report;
            report = control[update];
            report = oscar.bind(tango)(report);
            sequence = report.intl;
            vacuum = sequence.formatToPlainString;
            report = control[update];
            report = oscar.bind(tango)(report);
            report = report.t;
            golf = report.yZW3oq;
            report = {};
            config = _closure1_slot15;
            report['numMembers'] = config;
            report = vacuum.bind(sequence)(golf, report);
            entity['subtitle'] = report;
            golf = _closure1_slot21;
            report = 37;
            report = control[report];
            report = oscar.bind(tango)(report);
            oscar = report.AddMembersBody;
            report = {};
            report['autoFocusSearch'] = source;
            report['guild'] = echo;
            report['members'] = result;
            report['pendingAdditions'] = sizing;
            report['role'] = verify;
            report['setPendingAdditions'] = options;
            options = _closure1_slot15;
            report['maxCount'] = options;
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot21;
            golf = _closure1_slot7;
            oscar = {};
            sizing = yankee.nextButton;
            verify = new Array(2);
            verify[0] = sizing;
            if(!offset) { _fun126064_ip = 661; continue _fun126064 }
 655:
            offset = yankee.nextButtonFloating;
 661:
            verify[1] = offset;
            oscar['style'] = verify;
            yankee = _closure1_slot21;
            echo = _closure1_slot0;
            sizing = _closure1_slot3;
            verify = 33;
            verify = sizing[verify];
            verify = echo.bind(tango)(verify);
            offset = verify.Button;
            verify = {};
            verify['loading'] = output;
            output = sizing[update];
            output = echo.bind(tango)(output);
            result = output.intl;
            output = result.string;
            sizing = sizing[update];
            sizing = echo.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.XcPHf3;
            sizing = output.bind(result)(sizing);
            verify['text'] = sizing;
            verify['onPress'] = kilo;
            romeo = romeo === backup;
            if(romeo) { _fun126064_ip = 773; continue _fun126064 }
 765:
            foxtrot = _closure1_slot15;
            romeo = backup > foxtrot;
 773:
            verify['disabled'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot37 = entity;
    entity = function(argFoo) { // Original name: ModalScene
        _fun126072: for(var _fun126072_ip = 0; ; ) switch(_fun126072_ip) {
 0:
            mike = argFoo;
            kilo = mike.children;
            offset = mike.hasSkipButton;
            vacuum = mike.title;
            update = mike.subtitle;
            zulu = _closure1_slot25;
            report = undefined;
            backup = zulu.bind(report)();
            tango = _closure1_slot1;
            oscar = _closure1_slot3;
            zulu = 38;
            zulu = oscar[zulu];
            zulu = tango.bind(report)(zulu);
            zulu = zulu.bind(report)();
            yankee = zulu.insets;
            tango = _closure1_slot0;
            zulu = 22;
            zulu = oscar[zulu];
            tango = tango.bind(report)(zulu);
            zulu = tango.useNavigation;
            options = zulu.bind(tango)();
            var _closure2_slot0 = options;
            zulu = _closure1_slot32;
            golf = zulu.bind(report)();
            var _closure2_slot1 = golf;
            oscar = _closure1_slot6;
            tango = oscar.useCallback;
            zulu = new Array(2);
            zulu[0] = options;
            golf = golf.id;
            zulu[1] = golf;
            entity = function() {
                _fun126073: for(var _fun126073_ip = 0; ; ) switch(_fun126073_ip) {
 0:
                    zulu = _closure2_slot0;
                    mike = zulu.getState;
                    mike = mike.bind(zulu)();
                    zulu = mike.routes;
                    tango = zulu.length;
                    mike = 1;
                    mike = tango - mike;
                    mike = zulu[mike];
                    tango = mike.key;
                    zulu = _closure1_slot26;
                    zulu = zulu.STEP_DISPLAY;
                    if(!(tango !== zulu)) { _fun126073_ip = 254; continue _fun126073 }
 64:
                    zulu = _closure1_slot26;
                    zulu = zulu.STEP_PERMISSIONS;
                    if(!(tango !== zulu)) { _fun126073_ip = 192; continue _fun126073 }
 78:
                    tango = _closure1_slot27;
                    zulu = _closure1_slot26;
                    zulu = zulu.STEP_MEMBERS;
                    oscar = tango[zulu];
                    zulu = _closure1_slot27;
                    report = zulu.FLOW_DISMISSED;
                    golf = _closure1_slot1;
                    options = _closure1_slot3;
                    zulu = 14;
                    zulu = options[zulu];
                    tango = undefined;
                    yankee = golf.bind(tango)(zulu);
                    offset = yankee.track;
                    zulu = _closure1_slot18;
                    verify = zulu.MODAL_DISMISSED;
                    zulu = {};
                    romeo = _closure1_slot19;
                    romeo = romeo.GUILD_ROLE_CREATION_MODAL;
                    zulu['type'] = romeo;
                    zulu = offset.bind(yankee)(verify, zulu);
                    zulu = 18;
                    zulu = options[zulu];
                    tango = golf.bind(tango)(zulu);
                    zulu = tango.close;
                    zulu = zulu.bind(tango)();
                    _fun126073_ip = 369; continue _fun126073;
 192:
                    tango = _closure1_slot27;
                    zulu = _closure1_slot26;
                    zulu = zulu.STEP_PERMISSIONS;
                    oscar = tango[zulu];
                    golf = _closure1_slot27;
                    zulu = _closure1_slot26;
                    zulu = zulu.STEP_MEMBERS;
                    report = golf[zulu];
                    verify = _closure2_slot0;
                    options = verify.push;
                    golf = _closure1_slot26;
                    golf = golf.STEP_MEMBERS;
                    golf = options.bind(verify)(golf);
                    _fun126073_ip = 369; continue _fun126073;
 254:
                    tango = _closure1_slot27;
                    zulu = _closure1_slot26;
                    zulu = zulu.STEP_DISPLAY;
                    tango = tango[zulu];
                    golf = _closure1_slot34;
                    zulu = undefined;
                    options = golf.bind(zulu)();
                    golf = _closure1_slot27;
                    zulu = _closure1_slot26;
                    if(options) { _fun126073_ip = 332; continue _fun126073 }
 293:
                    options = zulu.STEP_PERMISSIONS;
                    report = golf[options];
                    yankee = _closure2_slot0;
                    offset = yankee.push;
                    verify = _closure1_slot26;
                    verify = verify.STEP_PERMISSIONS;
                    verify = offset.bind(yankee)(verify);
                    oscar = tango;
                    _fun126073_ip = 369; continue _fun126073;
 332:
                    zulu = zulu.STEP_MEMBERS;
                    report = golf[zulu];
                    verify = _closure2_slot0;
                    options = verify.push;
                    golf = _closure1_slot26;
                    golf = golf.STEP_MEMBERS;
                    golf = options.bind(verify)(golf);
                    oscar = tango;
 369:
                    tango = _closure1_slot31;
                    entity = _closure2_slot1;
                    foxtrot = entity.id;
                    entity = undefined;
                    backup = true;
                    output = undefined;
                    sizing = oscar;
                    kilo = report;
                    mike = output[tango](sizing, kilo, backup, foxtrot, romeo);
                    return entity;
                }
            };
            output = tango.bind(oscar)(entity, zulu);
            entity = global;
            zulu = entity.navigator;
            entity = null;
            if(!(entity != zulu)) { _fun126072_ip = 595; continue _fun126072 }
 168:
            tango = _closure1_slot21;
            zulu = _closure1_slot23;
            entity = {};
            options = _closure1_slot22;
            golf = _closure1_slot7;
            oscar = {};
            verify = {};
            sequence = backup.container;
            config = verify;
            romeo = copyDataProperties(config, sequence);
            foxtrot = yankee.top;
            romeo = 'paddingTop';
            verify[romeo] = foxtrot;
            romeo = backup.container;
            romeo = romeo.paddingBottom;
            yankee = yankee.bottom;
            romeo = romeo + yankee;
            yankee = 'paddingBottom';
            verify[yankee] = romeo;
            oscar['style'] = verify;
            romeo = _closure1_slot22;
            yankee = _closure1_slot7;
            verify = {};
            foxtrot = backup.sceneHeader;
            verify['style'] = foxtrot;
            control = _closure1_slot21;
            result = _closure1_slot0;
            source = _closure1_slot3;
            sizing = 16;
            foxtrot = source[sizing];
            foxtrot = result.bind(report)(foxtrot);
            echo = foxtrot.Text;
            foxtrot = {'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            foxtrot['children'] = vacuum;
            echo = control.bind(report)(echo, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = echo;
            echo = _closure1_slot21;
            sizing = source[sizing];
            sizing = result.bind(report)(sizing);
            result = sizing.Text;
            sizing = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            source = backup.sceneSubtitle;
            sizing['style'] = source;
            sizing['children'] = update;
            sizing = echo.bind(report)(result, sizing);
            foxtrot[1] = sizing;
            verify['children'] = foxtrot;
            yankee = romeo.bind(report)(yankee, verify);
            verify = new Array(3);
            verify[0] = yankee;
            foxtrot = _closure1_slot21;
            romeo = _closure1_slot7;
            yankee = {};
            sizing = backup.sceneContent;
            yankee['style'] = sizing;
            yankee['children'] = kilo;
            yankee = foxtrot.bind(report)(romeo, yankee);
            verify[1] = yankee;
            if(!offset) { _fun126072_ip = 569; continue _fun126072 }
 446:
            foxtrot = _closure1_slot21;
            romeo = _closure1_slot7;
            yankee = {};
            backup = backup.sceneFooter;
            yankee['style'] = backup;
            sizing = _closure1_slot21;
            source = _closure1_slot0;
            control = _closure1_slot3;
            backup = 33;
            backup = control[backup];
            backup = source.bind(report)(backup);
            kilo = backup.Button;
            backup = {};
            result = 17;
            echo = control[result];
            echo = source.bind(report)(echo);
            update = echo.intl;
            echo = update.string;
            result = control[result];
            result = source.bind(report)(result);
            result = result.t;
            result = result.CJm5V1;
            result = echo.bind(update)(result);
            backup['text'] = result;
            backup['onPress'] = output;
            backup = sizing.bind(report)(kilo, backup);
            yankee['children'] = backup;
            offset = foxtrot.bind(report)(romeo, yankee);
 569:
            verify[2] = offset;
            oscar['children'] = verify;
            oscar = options.bind(report)(golf, oscar);
            entity['children'] = oscar;
            entity = tango.bind(report)(zulu, entity);
            _fun126072_ip = 633; continue _fun126072;
 595:
            tango = _closure1_slot21;
            zulu = _closure1_slot0;
            oscar = _closure1_slot3;
            mike = 39;
            mike = oscar[mike];
            mike = zulu.bind(report)(mike);
            zulu = mike.SceneLoadingIndicator;
            mike = {};
            entity = tango.bind(report)(zulu, mike);
 633:
            return entity;
        }
    };
    var _closure1_slot38 = entity;
    entity = global;
    offset = entity.Object;
    options = offset.defineProperty;
    tango = {};
    verify = true;
    tango['value'] = verify;
    entity = '__esModule';
    entity = options.bind(offset)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot4 = tango;
    kilo = 1;
    tango = oscar[kilo];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    offset = golf.bind(entity)(tango);
    var _closure1_slot6 = offset;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot7 = golf;
    golf = tango.Keyboard;
    var _closure1_slot8 = golf;
    tango = tango.Platform;
    tango = 4;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot10 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot11 = tango;
    tango = 7;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot12 = tango;
    backup = 8;
    tango = oscar[backup];
    tango = report.bind(entity)(tango);
    golf = tango.PermissionTemplates;
    var _closure1_slot13 = golf;
    golf = tango.DEFAULT_TEMPLATE_TYPE;
    var _closure1_slot14 = golf;
    tango = tango.MAX_BULK_ROLE_MEMBERS_ADD;
    var _closure1_slot15 = tango;
    tango = 9;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.MAX_ROLE_LENGTH;
    var _closure1_slot16 = golf;
    golf = tango.DEFAULT_ROLE_COLOR;
    var _closure1_slot17 = golf;
    golf = tango.AnalyticEvents;
    var _closure1_slot18 = golf;
    golf = tango.AnalyticsSections;
    var _closure1_slot19 = golf;
    tango = tango.Permissions;
    var _closure1_slot20 = tango;
    tango = 10;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot21 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot22 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot23 = tango;
    tango = {};
    golf = {'flexDirection': 'row', 'justifyContent': 'center', 'alignContent': 'center', 'width': '100%'};
    tango['titleContainer'] = golf;
    golf = {'textAlign': 'center', 'flex': 1};
    tango['title'] = golf;
    var _closure1_slot24 = tango;
    tango = 11;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    yankee = {};
    romeo = 12;
    romeo = oscar[romeo];
    romeo = report.bind(entity)(romeo);
    romeo = romeo.NAV_BAR_HEIGHT;
    yankee['marginTop'] = romeo;
    yankee['flexGrow'] = kilo;
    romeo = 13;
    sizing = oscar[romeo];
    sizing = foxtrot.bind(entity)(sizing);
    sizing = sizing.spacing;
    sizing = sizing.PX_16;
    yankee['paddingBottom'] = sizing;
    tango['container'] = yankee;
    yankee = {'alignItems': 'center', 'marginBottom': 8, 'marginHorizontal': 16};
    tango['sceneHeader'] = yankee;
    yankee = {'textAlign': 'center', 'paddingTop': 8, 'maxWidth': 400};
    tango['sceneSubtitle'] = yankee;
    yankee = {};
    yankee['flex'] = kilo;
    tango['sceneContent'] = yankee;
    yankee = {};
    yankee['flex'] = kilo;
    tango['sceneInner'] = yankee;
    yankee = {'marginBottom': 8, 'paddingVertical': 12};
    tango['formRow'] = yankee;
    yankee = {};
    kilo = 24;
    yankee['marginTop'] = kilo;
    kilo = oscar[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.unsafe_rawColors;
    kilo = kilo.TRANSPARENT;
    yankee['backgroundColor'] = kilo;
    tango['formDivider'] = yankee;
    yankee = {'flexDirection': 'row', 'flexGrow': 1, 'justifyContent': 'space-between', 'alignItems': 'center'};
    tango['colorRow'] = yankee;
    yankee = {'flexDirection': 'row', 'alignItems': 'center'};
    tango['colorValue'] = yankee;
    yankee = {'marginHorizontal': 0, 'marginVertical': 0, 'marginRight': 8, 'minWidth': 24, 'height': 24, 'borderRadius': 3};
    tango['colorBlock'] = yankee;
    yankee = {};
    yankee['paddingBottom'] = backup;
    tango['sceneFooter'] = yankee;
    yankee = {'width': '100%', 'paddingHorizontal': 16, 'paddingVertical': 16};
    tango['nextButton'] = yankee;
    yankee = {'paddingVertical': 0, 'paddingTop': 16};
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_MOBILE_PRIMARY;
    yankee['backgroundColor'] = romeo;
    tango['nextButtonFloating'] = yankee;
    tango = golf.bind(options)(tango);
    var _closure1_slot25 = tango;
    golf = {};
    tango = 'STEP_DISPLAY';
    golf['STEP_DISPLAY'] = tango;
    tango = 'STEP_PERMISSIONS';
    golf['STEP_PERMISSIONS'] = tango;
    tango = 'STEP_MEMBERS';
    golf['STEP_MEMBERS'] = tango;
    var _closure1_slot26 = golf;
    tango = {};
    yankee = golf.STEP_DISPLAY;
    options = 'Role Display';
    tango[yankee] = options;
    yankee = golf.STEP_PERMISSIONS;
    options = 'Role Permissions';
    tango[yankee] = options;
    yankee = golf.STEP_MEMBERS;
    options = 'Role Members';
    tango[yankee] = options;
    yankee = 'Flow Initialized';
    options = 'FLOW_INITIALIZED';
    tango[options] = yankee;
    yankee = 'Flow Dismissed';
    options = 'FLOW_DISMISSED';
    tango[options] = yankee;
    yankee = 'Flow Completed';
    options = 'FLOW_COMPLETED';
    tango[options] = yankee;
    var _closure1_slot27 = tango;
    options = offset.memo;
    tango = function(argFoo) {
        entity = argFoo;
        tango = entity.step;
        entity = global;
        report = entity.Object;
        zulu = report.keys;
        mike = _closure1_slot26;
        zulu = zulu.bind(report)(mike);
        romeo = zulu.length;
        mike = zulu.indexOf;
        zulu = mike.bind(zulu)(tango);
        mike = 1;
        foxtrot = zulu + mike;
        tango = _closure1_slot21;
        zulu = _closure1_slot7;
        mike = {};
        options = _closure1_slot24;
        report = options.titleContainer;
        mike['style'] = report;
        golf = _closure1_slot21;
        verify = _closure1_slot0;
        backup = _closure1_slot3;
        entity = 16;
        report = backup[entity];
        entity = undefined;
        report = verify.bind(entity)(report);
        oscar = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-md/extrabold', 'color': 'header-primary'};
        options = options.title;
        report['style'] = options;
        options = 17;
        offset = backup[options];
        offset = verify.bind(entity)(offset);
        yankee = offset.intl;
        offset = yankee.format;
        options = backup[options];
        options = verify.bind(entity)(options);
        options = options.t;
        verify = options.8v/u0t;
        options = {};
        options['number'] = foxtrot;
        options['total'] = romeo;
        options = offset.bind(yankee)(verify, options);
        report['children'] = options;
        report = golf.bind(entity)(oscar, report);
        mike['children'] = report;
        entity = tango.bind(entity)(zulu, mike);
        return entity;
    };
    tango = options.bind(offset)(tango);
    var _closure1_slot28 = tango;
    tango = function(argFoo, argBar) { // Original name: closeModal
        golf = _closure1_slot31;
        entity = _closure1_slot27;
        offset = entity.FLOW_DISMISSED;
        entity = undefined;
        yankee = argFoo;
        verify = false;
        options = argBar;
        romeo = undefined;
        zulu = romeo[golf](yankee, offset, verify, options, golf);
        zulu = _closure1_slot1;
        tango = _closure1_slot3;
        mike = 18;
        mike = tango[mike];
        zulu = zulu.bind(entity)(mike);
        mike = zulu.close;
        mike = mike.bind(zulu)();
        return entity;
    };
    var _closure1_slot29 = tango;
    tango = {};
    offset = golf.STEP_DISPLAY;
    options = {};
    options['fullscreen'] = verify;
    yankee = function() { // Original name: render
        tango = _closure1_slot21;
        zulu = _closure1_slot35;
        mike = undefined;
        entity = {};
        entity = tango.bind(mike)(zulu, entity);
        return entity;
    };
    options['render'] = yankee;
    tango[offset] = options;
    offset = golf.STEP_PERMISSIONS;
    options = {};
    options['fullscreen'] = verify;
    yankee = function() { // Original name: render
        tango = _closure1_slot21;
        zulu = _closure1_slot36;
        mike = undefined;
        entity = {};
        entity = tango.bind(mike)(zulu, entity);
        return entity;
    };
    options['render'] = yankee;
    tango[offset] = options;
    options = golf.STEP_MEMBERS;
    golf = {};
    golf['fullscreen'] = verify;
    verify = function() { // Original name: render
        tango = _closure1_slot21;
        zulu = _closure1_slot37;
        mike = undefined;
        entity = {};
        entity = tango.bind(mike)(zulu, entity);
        return entity;
    };
    golf['render'] = verify;
    tango[options] = golf;
    var _closure1_slot30 = tango;
    tango = 42;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_settings/roles/native/GuildSettingsRoleCreateModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: GuildSettingsRoleCreateModal
        mike = _closure1_slot32;
        tango = undefined;
        mike = mike.bind(tango)();
        var _closure2_slot0 = mike;
        zulu = _closure1_slot1;
        oscar = _closure1_slot3;
        mike = 40;
        mike = oscar[mike];
        mike = zulu.bind(tango)(mike);
        entity = function() {
            oscar = _closure1_slot31;
            mike = _closure1_slot27;
            offset = mike.FLOW_INITIALIZED;
            mike = _closure1_slot27;
            entity = _closure1_slot26;
            entity = entity.STEP_DISPLAY;
            verify = mike[entity];
            entity = _closure2_slot0;
            golf = entity.id;
            entity = undefined;
            options = false;
            yankee = undefined;
            mike = yankee[oscar](offset, verify, options, golf, oscar);
            return entity;
        };
        entity = mike.bind(tango)(entity);
        zulu = _closure1_slot21;
        mike = _closure1_slot0;
        entity = 41;
        entity = oscar[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.Navigator;
        entity = {};
        oscar = _closure1_slot30;
        entity['screens'] = oscar;
        report = _closure1_slot26;
        report = report.STEP_DISPLAY;
        entity['initialRouteName'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();