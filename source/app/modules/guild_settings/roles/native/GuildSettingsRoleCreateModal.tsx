// app/modules/guild_settings/roles/native/GuildSettingsRoleCreateModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    golfie = argCor;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = golfie;
    var _closure1_slot3 = oscard;
    entity = function(argFoo, argBar, argBaz, argCor) { // Original name: logTransitionEvent
        zuuluu = _closure1_slot1;
        option = _closure1_slot3;
        entity = 14;
        michal = option[entity];
        entity = undefined;
        report = zuuluu.bind(entity)(michal);
        tangon = report.track;
        michal = _closure1_slot18;
        zuuluu = michal.USER_FLOW_TRANSITION;
        michal = {};
        golfie = _closure1_slot19;
        golfie = golfie.GUILD_ROLE_CREATION_MODAL;
        michal['flow_type'] = golfie;
        golfie = argFoo;
        michal['from_step'] = golfie;
        golfie = argBar;
        michal['to_step'] = golfie;
        golfie = argBaz;
        michal['skip'] = golfie;
        golfie = _closure1_slot0;
        oscard = 15;
        oscard = option[oscard];
        option = golfie.bind(entity)(oscard);
        golfie = option.collectGuildAnalyticsMetadata;
        oscard = argCor;
        verify = golfie.bind(option)(oscard);
        offset = michal;
        oscard = copyDataProperties(offset, verify);
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    var _closure1_slot30 = entity;
    entity = function() { // Original name: useGuildSettingsStoreGuild
        zuuluu = _closure1_slot0;
        tangon = _closure1_slot3;
        entity = 19;
        entity = tangon[entity];
        report = undefined;
        golfie = zuuluu.bind(report)(entity);
        oscard = golfie.useStateFromStores;
        entity = _closure1_slot12;
        zuuluu = new Array(1);
        zuuluu[0] = entity;
        entity = function() {
            michal = _closure1_slot12;
            entity = michal.getProps;
            entity = entity.bind(michal)();
            entity = entity.guild;
            return entity;
        };
        entity = oscard.bind(golfie)(zuuluu, entity);
        zuuluu = _closure1_slot1;
        michal = 20;
        michal = tangon[michal];
        tangon = zuuluu.bind(report)(michal);
        michal = null;
        zuuluu = michal != entity;
        michal = 'useGuildSettingsStoreGuild: Guild cannot be null';
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    var _closure1_slot31 = entity;
    entity = function() { // Original name: useGuildSettingsStoreGuildWithRole
        offset = _closure1_slot0;
        golfie = _closure1_slot3;
        verify = 19;
        entity = golfie[verify];
        oscard = undefined;
        report = offset.bind(oscard)(entity);
        tangon = report.useStateFromStoresObject;
        entity = _closure1_slot12;
        zuuluu = new Array(1);
        zuuluu[0] = entity;
        entity = function() {
            michal = _closure1_slot12;
            entity = michal.getProps;
            entity = entity.bind(michal)();
            return entity;
        };
        entity = tangon.bind(report)(zuuluu, entity);
        zuuluu = entity.guild;
        var _closure2_slot0 = zuuluu;
        entity = entity.selectedRoleId;
        var _closure2_slot1 = entity;
        report = _closure1_slot1;
        tangon = 20;
        entity = golfie[tangon];
        foxtra = report.bind(oscard)(entity);
        entity = null;
        romeon = entity != zuuluu;
        yankee = 'useGuildSettingsStoreGuildWithRole: Guild cannot be null';
        yankee = foxtra.bind(oscard)(romeon, yankee);
        verify = golfie[verify];
        offset = offset.bind(oscard)(verify);
        verify = offset.useStateFromStores;
        yankee = _closure1_slot9;
        option = new Array(1);
        option[0] = yankee;
        michal = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zuuluu = _closure2_slot1;
                entity = null;
                zuuluu = entity != zuuluu;
                entity = undefined;
                if(!zuuluu) { _fun00002_ip = 50; continue _fun00001 }
 18:
                report = _closure1_slot9;
                tangon = report.getRole;
                zuuluu = _closure2_slot0;
                zuuluu = zuuluu.id;
                michal = _closure2_slot1;
                entity = tangon.bind(report)(zuuluu, michal);
 50:
                return entity;
            }
        };
        michal = verify.bind(offset)(option, michal);
        tangon = golfie[tangon];
        report = report.bind(oscard)(tangon);
        tangon = entity != michal;
        entity = 'useGuildSettingsStoreGuildWithRole: Role cannot be null';
        entity = report.bind(oscard)(tangon, entity);
        entity = {};
        entity['guild'] = zuuluu;
        entity['role'] = michal;
        return entity;
    };
    var _closure1_slot32 = entity;
    entity = function() { // Original name: shouldSkipPermissions
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            michal = _closure1_slot12;
            entity = michal.getProps;
            entity = entity.bind(michal)();
            report = entity.guild;
            michal = _closure1_slot1;
            option = _closure1_slot3;
            entity = 20;
            entity = option[entity];
            tangon = undefined;
            zuuluu = michal.bind(tangon)(entity);
            entity = null;
            michal = entity != report;
            entity = 'shouldSkipPermissions: Guild cannot be null';
            entity = zuuluu.bind(tangon)(michal, entity);
            michal = _closure1_slot10;
            entity = michal.getCurrentUser;
            oscard = entity.bind(michal)();
            entity = report.isOwner;
            entity = entity.bind(report)(oscard);
            zuuluu = _closure1_slot2;
            michal = 21;
            michal = option[michal];
            tangon = zuuluu.bind(tangon)(michal);
            zuuluu = tangon.can;
            michal = {};
            golfie = _closure1_slot20;
            golfie = golfie.ADMINISTRATOR;
            michal['permission'] = golfie;
            michal['user'] = oscard;
            michal['context'] = report;
            michal = zuuluu.bind(tangon)(michal);
            entity = !entity;
            if(!entity) { _fun00004_ip = 147; continue _fun00003 }
 144:
            entity = !michal;
 147:
            return entity;
        }
    };
    var _closure1_slot33 = entity;
    entity = function() { // Original name: RoleCreateScene
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            michal = _closure1_slot24;
            tangon = undefined;
            foxtra = michal.bind(tangon)();
            source = _closure1_slot0;
            result = _closure1_slot3;
            michal = 22;
            michal = result[michal];
            zuuluu = source.bind(tangon)(michal);
            michal = zuuluu.useNavigation;
            option = michal.bind(zuuluu)();
            var _closure2_slot0 = option;
            michal = _closure1_slot31;
            offset = michal.bind(tangon)();
            var _closure2_slot1 = offset;
            report = _closure1_slot6;
            zuuluu = report.useState;
            output = 17;
            michal = result[output];
            michal = source.bind(tangon)(michal);
            golfie = michal.intl;
            oscard = golfie.string;
            michal = result[output];
            michal = source.bind(tangon)(michal);
            michal = michal.t;
            michal = michal.QBMHvL;
            michal = oscard.bind(golfie)(michal);
            zuuluu = zuuluu.bind(report)(michal);
            michal = _closure1_slot5;
            golfie = 2;
            michal = michal.bind(tangon)(zuuluu, golfie);
            report = 0;
            config = michal[report];
            var _closure2_slot2 = config;
            zuuluu = 1;
            sequen = michal[zuuluu];
            yankee = _closure1_slot6;
            oscard = yankee.useState;
            michal = _closure1_slot17;
            oscard = oscard.bind(yankee)(michal);
            michal = _closure1_slot5;
            michal = michal.bind(tangon)(oscard, golfie);
            equals = michal[report];
            var _closure2_slot3 = equals;
            michal = michal[zuuluu];
            var _closure2_slot4 = michal;
            yankee = _closure1_slot6;
            oscard = yankee.useState;
            michal = false;
            oscard = oscard.bind(yankee)(michal);
            michal = _closure1_slot5;
            michal = michal.bind(tangon)(oscard, golfie);
            backup = michal[report];
            michal = michal[zuuluu];
            var _closure2_slot5 = michal;
            michal = 19;
            michal = result[michal];
            oscard = source.bind(tangon)(michal);
            report = oscard.useStateFromStores;
            michal = _closure1_slot11;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                entity = _closure1_slot11;
                entity = entity.keyboardOpen;
                return entity;
            };
            yankee = report.bind(oscard)(zuuluu, michal);
            oscard = _closure1_slot6;
            report = oscard.useLayoutEffect;
            zuuluu = new Array(2);
            zuuluu[0] = option;
            zuuluu[1] = offset;
            michal = function() {
                tangon = _closure2_slot0;
                zuuluu = tangon.setOptions;
                michal = {};
                golfie = _closure1_slot0;
                oscard = _closure1_slot3;
                entity = 23;
                oscard = oscard[entity];
                entity = undefined;
                option = golfie.bind(entity)(oscard);
                golfie = option.getHeaderCloseButton;
                oscard = function() {
                    tangon = _closure1_slot28;
                    michal = _closure1_slot26;
                    entity = _closure1_slot25;
                    entity = entity.STEP_DISPLAY;
                    zuuluu = michal[entity];
                    entity = _closure2_slot1;
                    michal = entity.id;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                oscard = golfie.bind(option)(oscard);
                michal['headerLeft'] = oscard;
                report = function() { // Original name: headerTitle
                    tangon = _closure1_slot21;
                    zuuluu = _closure1_slot27;
                    michal = {};
                    entity = _closure1_slot25;
                    entity = entity.STEP_DISPLAY;
                    michal['step'] = entity;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                michal['headerTitle'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            michal = report.bind(oscard)(michal, zuuluu);
            oscard = _closure1_slot6;
            report = oscard.useCallback;
            zuuluu = function(argFoo) {
                zuuluu = _closure2_slot4;
                entity = undefined;
                michal = argFoo;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal = new Array(0);
            oscard = report.bind(oscard)(zuuluu, michal);
            var _closure2_slot6 = oscard;
            golfie = _closure1_slot6;
            report = golfie.useCallback;
            zuuluu = _closure1_slot4;
            michal = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                        if(michal) { _fun00008_ip = 188; continue _fun00007 }
 10: // try_start_0
                        tangon = _closure2_slot5;
                        oscard = undefined;
                        zuuluu = true;
                        zuuluu = tangon.bind(oscard)(zuuluu);
                        report = _closure2_slot3;
                        tangon = _closure1_slot17;
                        golfie = 0;
                        if(!(report !== tangon)) { _fun00008_ip = 47; continue _fun00007 }
 43:
                        golfie = _closure2_slot3;
 47:
                        report = _closure1_slot1;
                        option = _closure1_slot3;
                        tangon = 24;
                        tangon = option[tangon];
                        oscard = report.bind(oscard)(tangon);
                        report = oscard.createRole;
                        tangon = _closure2_slot1;
                        tangon = tangon.id;
                        michal = _closure2_slot2;
                        michal = report.bind(oscard)(tangon, michal, golfie);
                        SaveGenerator(address=97);
 95:
                        return michal;
 97:
                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=3);
                        if(tangon) { _fun00008_ip = 129; continue _fun00007 }
 103:
                        report = _closure1_slot12;
                        tangon = report.addConditionalChangeListener;
                        zuuluu = function() {
                            _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                                zuuluu = _closure1_slot12;
                                entity = zuuluu.getProps;
                                zuuluu = entity.bind(zuuluu)();
                                entity = zuuluu.guild;
                                report = zuuluu.selectedRoleId;
                                zuuluu = null;
                                golfie = zuuluu != entity;
                                oscard = undefined;
                                tangon = undefined;
                                if(!golfie) { _fun00010_ip = 71; continue _fun00009 }
 41:
                                golfie = zuuluu != report;
                                tangon = undefined;
                                if(!golfie) { _fun00010_ip = 71; continue _fun00009 }
 50:
                                verify = _closure1_slot9;
                                option = verify.getRole;
                                golfie = entity.id;
                                tangon = option.bind(verify)(golfie, report);
 71:
                                if(!(zuuluu != report)) { _fun00010_ip = 242; continue _fun00009 }
 78:
                                if(!(zuuluu != tangon)) { _fun00010_ip = 242; continue _fun00009 }
 85:
                                if(!(zuuluu != entity)) { _fun00010_ip = 242; continue _fun00009 }
 92:
                                tangon = _closure1_slot0;
                                report = _closure1_slot3;
                                zuuluu = 25;
                                zuuluu = report[zuuluu];
                                golfie = tangon.bind(oscard)(zuuluu);
                                zuuluu = golfie.roleCreatedToast;
                                zuuluu = zuuluu.bind(golfie)();
                                zuuluu = 26;
                                zuuluu = report[zuuluu];
                                report = tangon.bind(oscard)(zuuluu);
                                tangon = report.setRoleJustCreated;
                                zuuluu = true;
                                zuuluu = tangon.bind(report)(zuuluu);
                                zuuluu = _closure1_slot25;
                                zuuluu = zuuluu.STEP_PERMISSIONS;
                                tangon = _closure1_slot33;
                                tangon = tangon.bind(oscard)();
                                if(!tangon) { _fun00010_ip = 178; continue _fun00009 }
 168:
                                tangon = _closure1_slot25;
                                zuuluu = tangon.STEP_MEMBERS;
 178:
                                report = _closure2_slot0;
                                tangon = report.push;
                                tangon = tangon.bind(report)(zuuluu);
                                report = _closure1_slot30;
                                golfie = _closure1_slot26;
                                tangon = _closure1_slot25;
                                tangon = tangon.STEP_DISPLAY;
                                foxtra = golfie[tangon];
                                michal = _closure1_slot26;
                                romeon = michal[zuuluu];
                                offset = entity.id;
                                entity = false;
                                backup = undefined;
                                yankee = false;
                                michal = backup[report](foxtra, romeon, yankee, offset, verify);
                                return entity;
 242:
                                entity = true;
                                return entity;
                            }
                        };
                        zuuluu = tangon.bind(report)(zuuluu);
 127: // try_end0
                        _fun00008_ip = 183; continue _fun00007;
 129:
                        return michal;
 132: // catch_target0
                        CatchBlockStart(arg_register=1);
                        zuuluu = _closure2_slot5;
                        tangon = undefined;
                        michal = false;
                        michal = zuuluu.bind(tangon)(michal);
                        zuuluu = _closure1_slot0;
                        report = _closure1_slot3;
                        michal = 25;
                        michal = report[michal];
                        zuuluu = zuuluu.bind(tangon)(michal);
                        michal = zuuluu.roleCreateFailedToast;
                        michal = michal.bind(zuuluu)();
 183:
                        michal = undefined;
                        return michal;
 188:
                        return entity;
                    }
                };
                return entity;
            };
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = new Array(4);
            michal[0] = equals;
            offset = offset.id;
            michal[1] = offset;
            michal[2] = config;
            michal[3] = option;
            romeon = report.bind(golfie)(zuuluu, michal);
            report = _closure1_slot6;
            zuuluu = report.useCallback;
            michal = new Array(2);
            michal[0] = equals;
            michal[1] = oscard;
            entity = function() {
                michal = _closure1_slot8;
                entity = michal.dismiss;
                entity = entity.bind(michal)();
                report = _closure1_slot1;
                michal = _closure1_slot3;
                entity = 27;
                tangon = michal[entity];
                entity = undefined;
                oscard = report.bind(entity)(tangon);
                report = oscard.openLazy;
                tangon = _closure1_slot0;
                zuuluu = 29;
                zuuluu = michal[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = 28;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                tangon = tangon.bind(entity)(zuuluu, michal);
                zuuluu = {};
                golfie = _closure2_slot3;
                zuuluu['color'] = golfie;
                michal = _closure2_slot6;
                zuuluu['onSelect'] = michal;
                michal = 'RoleColorPicker';
                michal = report.bind(oscard)(tangon, michal, zuuluu);
                return entity;
            };
            limora = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot22;
            michal = _closure1_slot37;
            entity = {};
            report = result[output];
            report = source.bind(tangon)(report);
            golfie = report.intl;
            oscard = golfie.string;
            report = result[output];
            report = source.bind(tangon)(report);
            report = report.t;
            report = report.8pxAPj;
            report = oscard.bind(golfie)(report);
            entity['title'] = report;
            report = result[output];
            report = source.bind(tangon)(report);
            golfie = report.intl;
            oscard = golfie.string;
            report = result[output];
            report = source.bind(tangon)(report);
            report = report.t;
            report = report.JubQz8;
            report = oscard.bind(golfie)(report);
            entity['subtitle'] = report;
            golfie = _closure1_slot22;
            oscard = _closure1_slot7;
            report = {};
            option = foxtra.sceneInner;
            report['style'] = option;
            sizing = _closure1_slot21;
            offset = 30;
            option = result[offset];
            option = source.bind(tangon)(option);
            kiloes = option.FormSection;
            option = {};
            echoed = result[output];
            echoed = source.bind(tangon)(echoed);
            ctrled = echoed.intl;
            update = ctrled.string;
            echoed = result[output];
            echoed = source.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.dLbkBg;
            echoed = update.bind(ctrled)(echoed);
            option['title'] = echoed;
            update = true;
            option['thinTitle'] = update;
            vacuum = _closure1_slot21;
            echoed = result[offset];
            echoed = source.bind(tangon)(echoed);
            ctrled = echoed.FormInput;
            echoed = {'value': null, 'onChange': null, 'showTopContainer': false, 'maxLength': null, 'autoFocus': true, 'autoComplete': 'off'};
            echoed['value'] = config;
            echoed['onChange'] = sequen;
            sequen = _closure1_slot16;
            echoed['maxLength'] = sequen;
            echoed = vacuum.bind(tangon)(ctrled, echoed);
            option['children'] = echoed;
            kiloes = sizing.bind(tangon)(kiloes, option);
            option = new Array(5);
            option[0] = kiloes;
            echoed = _closure1_slot21;
            kiloes = result[offset];
            kiloes = source.bind(tangon)(kiloes);
            sizing = kiloes.FormHint;
            kiloes = {};
            ctrled = result[output];
            ctrled = source.bind(tangon)(ctrled);
            sequen = ctrled.intl;
            vacuum = sequen.string;
            ctrled = result[output];
            ctrled = source.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.m4j44e;
            ctrled = vacuum.bind(sequen)(ctrled);
            kiloes['children'] = ctrled;
            kiloes = echoed.bind(tangon)(sizing, kiloes);
            option[1] = kiloes;
            echoed = _closure1_slot21;
            kiloes = result[offset];
            kiloes = source.bind(tangon)(kiloes);
            sizing = kiloes.FormDivider;
            kiloes = {};
            kiloes['outer'] = update;
            update = foxtra.formDivider;
            kiloes['style'] = update;
            kiloes = echoed.bind(tangon)(sizing, kiloes);
            option[2] = kiloes;
            echoed = _closure1_slot21;
            kiloes = result[offset];
            kiloes = source.bind(tangon)(kiloes);
            sizing = kiloes.FormRow;
            kiloes = {};
            update = foxtra.formRow;
            kiloes['DEPRECATED_style'] = update;
            kiloes['onPress'] = limora;
            vacuum = _closure1_slot22;
            ctrled = _closure1_slot7;
            update = {};
            sequen = foxtra.colorRow;
            update['style'] = sequen;
            record = _closure1_slot21;
            target = 16;
            sequen = result[target];
            sequen = source.bind(tangon)(sequen);
            config = sequen.Text;
            sequen = {};
            cntext = 'text-md/semibold';
            sequen['variant'] = cntext;
            cntext = result[output];
            cntext = source.bind(tangon)(cntext);
            status = cntext.intl;
            papara = status.string;
            cntext = result[output];
            cntext = source.bind(tangon)(cntext);
            cntext = cntext.t;
            cntext = cntext.5NC5YW;
            cntext = papara.bind(status)(cntext);
            sequen['children'] = cntext;
            config = record.bind(tangon)(config, sequen);
            sequen = new Array(2);
            sequen[0] = config;
            cntext = _closure1_slot22;
            record = _closure1_slot7;
            config = {};
            papara = foxtra.colorValue;
            config['style'] = papara;
            sierra = _closure1_slot21;
            status = _closure1_slot1;
            papara = 31;
            papara = result[papara];
            status = status.bind(tangon)(papara);
            papara = {};
            papara['color'] = equals;
            whisks = foxtra.colorBlock;
            papara['style'] = whisks;
            papara['onSelect'] = limora;
            status = sierra.bind(tangon)(status, papara);
            papara = new Array(2);
            papara[0] = status;
            sierra = _closure1_slot21;
            target = result[target];
            target = source.bind(tangon)(target);
            status = target.Text;
            target = {};
            limora = 'text-sm/medium';
            target['variant'] = limora;
            limora = 32;
            limora = result[limora];
            whisks = source.bind(tangon)(limora);
            limora = whisks.int2hex;
            limora = limora.bind(whisks)(equals);
            target['children'] = limora;
            target = sierra.bind(tangon)(status, target);
            papara[1] = target;
            config['children'] = papara;
            config = cntext.bind(tangon)(record, config);
            sequen[1] = config;
            update['children'] = sequen;
            update = vacuum.bind(tangon)(ctrled, update);
            kiloes['label'] = update;
            update = result[offset];
            update = source.bind(tangon)(update);
            update = update.FormRow;
            update = update.Arrow;
            kiloes['trailing'] = update;
            kiloes = echoed.bind(tangon)(sizing, kiloes);
            option[3] = kiloes;
            sizing = _closure1_slot21;
            offset = result[offset];
            offset = source.bind(tangon)(offset);
            kiloes = offset.FormHint;
            offset = {};
            echoed = result[output];
            echoed = source.bind(tangon)(echoed);
            update = echoed.intl;
            echoed = update.string;
            result = result[output];
            result = source.bind(tangon)(result);
            result = result.t;
            result = result.9TMIgY;
            result = echoed.bind(update)(result);
            offset['children'] = result;
            offset = sizing.bind(tangon)(kiloes, offset);
            option[4] = offset;
            report['children'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot21;
            golfie = _closure1_slot7;
            oscard = {};
            kiloes = foxtra.nextButton;
            offset = new Array(2);
            offset[0] = kiloes;
            if(!yankee) { _fun00006_ip = 1328; continue _fun00005 }
 1322:
            yankee = foxtra.nextButtonFloating;
 1328:
            offset[1] = yankee;
            oscard['style'] = offset;
            yankee = _closure1_slot21;
            sizing = _closure1_slot0;
            foxtra = _closure1_slot3;
            verify = 33;
            verify = foxtra[verify];
            verify = sizing.bind(tangon)(verify);
            offset = verify.Button;
            verify = {};
            verify['loading'] = backup;
            verify['disabled'] = backup;
            backup = foxtra[output];
            backup = sizing.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = foxtra[output];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.CumH4u;
            foxtra = backup.bind(kiloes)(foxtra);
            verify['text'] = foxtra;
            verify['onPress'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot34 = entity;
    entity = function() { // Original name: RolePermissionTemplate
        michal = _closure1_slot24;
        tangon = undefined;
        offset = michal.bind(tangon)();
        sizing = _closure1_slot0;
        output = _closure1_slot3;
        michal = 22;
        michal = output[michal];
        zuuluu = sizing.bind(tangon)(michal);
        michal = zuuluu.useNavigation;
        golfie = michal.bind(zuuluu)();
        var _closure2_slot0 = golfie;
        michal = _closure1_slot32;
        zuuluu = michal.bind(tangon)();
        michal = zuuluu.role;
        var _closure2_slot1 = michal;
        option = zuuluu.guild;
        var _closure2_slot2 = option;
        yankee = _closure1_slot6;
        oscard = yankee.useLayoutEffect;
        report = new Array(2);
        report[0] = golfie;
        zuuluu = option.id;
        report[1] = zuuluu;
        zuuluu = function() {
            tangon = _closure2_slot0;
            zuuluu = tangon.setOptions;
            michal = {};
            golfie = _closure1_slot0;
            oscard = _closure1_slot3;
            entity = 23;
            oscard = oscard[entity];
            entity = undefined;
            option = golfie.bind(entity)(oscard);
            golfie = option.getHeaderCloseButton;
            oscard = function() {
                tangon = _closure1_slot28;
                michal = _closure1_slot26;
                entity = _closure1_slot25;
                entity = entity.STEP_PERMISSIONS;
                zuuluu = michal[entity];
                entity = _closure2_slot2;
                michal = entity.id;
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            oscard = golfie.bind(option)(oscard);
            michal['headerLeft'] = oscard;
            report = function() { // Original name: headerTitle
                tangon = _closure1_slot21;
                zuuluu = _closure1_slot27;
                michal = {};
                entity = _closure1_slot25;
                entity = entity.STEP_PERMISSIONS;
                michal['step'] = entity;
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            michal['headerTitle'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        zuuluu = oscard.bind(yankee)(zuuluu, report);
        oscard = _closure1_slot6;
        report = oscard.useCallback;
        yankee = option.id;
        zuuluu = new Array(3);
        zuuluu[0] = yankee;
        zuuluu[1] = golfie;
        michal = michal.id;
        zuuluu[2] = michal;
        michal = function(argFoo) {
            tangon = _closure1_slot1;
            michal = _closure1_slot3;
            entity = 24;
            michal = michal[entity];
            entity = undefined;
            verify = tangon.bind(entity)(michal);
            option = verify.updateRolePermissions;
            michal = _closure2_slot2;
            golfie = michal.id;
            report = _closure2_slot1;
            oscard = report.id;
            report = argFoo;
            report = option.bind(verify)(golfie, oscard, report);
            oscard = _closure2_slot0;
            report = oscard.push;
            tangon = _closure1_slot25;
            tangon = tangon.STEP_MEMBERS;
            tangon = report.bind(oscard)(tangon);
            oscard = _closure1_slot30;
            report = _closure1_slot26;
            tangon = _closure1_slot25;
            tangon = tangon.STEP_PERMISSIONS;
            foxtra = report[tangon];
            tangon = _closure1_slot26;
            zuuluu = _closure1_slot25;
            zuuluu = zuuluu.STEP_MEMBERS;
            romeon = tangon[zuuluu];
            offset = michal.id;
            yankee = false;
            backup = undefined;
            michal = backup[oscard](foxtra, romeon, yankee, offset, verify);
            return entity;
        };
        yankee = report.bind(oscard)(michal, zuuluu);
        var _closure2_slot3 = yankee;
        report = _closure1_slot6;
        zuuluu = report.useCallback;
        michal = new Array(1);
        michal[0] = yankee;
        entity = function() {
            zuuluu = _closure2_slot3;
            michal = _closure1_slot13;
            entity = _closure1_slot14;
            entity = michal[entity];
            michal = entity.permissions;
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        romeon = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot22;
        michal = _closure1_slot37;
        entity = {};
        report = false;
        entity['hasSkipButton'] = report;
        foxtra = 17;
        report = output[foxtra];
        report = sizing.bind(tangon)(report);
        golfie = report.intl;
        oscard = golfie.string;
        report = output[foxtra];
        report = sizing.bind(tangon)(report);
        report = report.t;
        report = report.p0IwND;
        report = oscard.bind(golfie)(report);
        entity['title'] = report;
        report = output[foxtra];
        report = sizing.bind(tangon)(report);
        golfie = report.intl;
        oscard = golfie.string;
        report = output[foxtra];
        report = sizing.bind(tangon)(report);
        report = report.t;
        report = report.G529Hh;
        report = oscard.bind(golfie)(report);
        entity['subtitle'] = report;
        golfie = _closure1_slot21;
        oscard = _closure1_slot1;
        report = 34;
        report = output[report];
        oscard = oscard.bind(tangon)(report);
        report = {};
        report['onSelect'] = yankee;
        yankee = _closure1_slot19;
        yankee = yankee.GUILD_ROLE_CREATION_MODAL;
        report['location'] = yankee;
        option = option.id;
        report['guildId'] = option;
        oscard = golfie.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        option = _closure1_slot21;
        golfie = _closure1_slot7;
        oscard = {};
        offset = offset.sceneFooter;
        oscard['style'] = offset;
        yankee = _closure1_slot21;
        verify = 33;
        verify = output[verify];
        verify = sizing.bind(tangon)(verify);
        offset = verify.Button;
        verify = {};
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = output[foxtra];
        foxtra = sizing.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.CJm5V1;
        foxtra = backup.bind(kiloes)(foxtra);
        verify['text'] = foxtra;
        verify['onPress'] = romeon;
        verify = yankee.bind(tangon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot35 = entity;
    entity = function() { // Original name: RoleMembers
        _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
            michal = _closure1_slot24;
            tangon = undefined;
            yankee = michal.bind(tangon)();
            oscard = _closure1_slot0;
            ctrled = _closure1_slot3;
            michal = 22;
            michal = ctrled[michal];
            zuuluu = oscard.bind(tangon)(michal);
            michal = zuuluu.useNavigation;
            michal = michal.bind(zuuluu)();
            var _closure2_slot0 = michal;
            zuuluu = _closure1_slot32;
            zuuluu = zuuluu.bind(tangon)();
            verify = zuuluu.role;
            var _closure2_slot1 = verify;
            echoed = zuuluu.guild;
            var _closure2_slot2 = echoed;
            report = _closure1_slot1;
            zuuluu = 20;
            zuuluu = ctrled[zuuluu];
            golfie = report.bind(tangon)(zuuluu);
            zuuluu = null;
            report = zuuluu != verify;
            zuuluu = 'Role cannot be null';
            zuuluu = golfie.bind(tangon)(report, zuuluu);
            golfie = _closure1_slot6;
            report = golfie.useLayoutEffect;
            zuuluu = new Array(2);
            zuuluu[0] = michal;
            michal = echoed.id;
            zuuluu[1] = michal;
            michal = function() {
                zuuluu = _closure2_slot0;
                michal = zuuluu.setOptions;
                entity = {};
                golfie = _closure1_slot0;
                oscard = _closure1_slot3;
                report = 23;
                oscard = oscard[report];
                report = undefined;
                golfie = golfie.bind(report)(oscard);
                oscard = golfie.getHeaderCloseButton;
                report = function() {
                    tangon = _closure1_slot28;
                    michal = _closure1_slot26;
                    entity = _closure1_slot25;
                    entity = entity.STEP_MEMBERS;
                    zuuluu = michal[entity];
                    entity = _closure2_slot2;
                    michal = entity.id;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                report = oscard.bind(golfie)(report);
                entity['headerLeft'] = report;
                tangon = function() { // Original name: headerTitle
                    tangon = _closure1_slot21;
                    zuuluu = _closure1_slot27;
                    michal = {};
                    entity = _closure1_slot25;
                    entity = entity.STEP_MEMBERS;
                    michal['step'] = entity;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                entity['headerTitle'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            michal = report.bind(golfie)(michal, zuuluu);
            michal = 19;
            michal = ctrled[michal];
            golfie = oscard.bind(tangon)(michal);
            report = golfie.useStateFromStores;
            michal = _closure1_slot11;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                entity = _closure1_slot11;
                entity = entity.keyboardOpen;
                return entity;
            };
            offset = report.bind(golfie)(zuuluu, michal);
            golfie = _closure1_slot6;
            report = golfie.useCallback;
            michal = verify.id;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function(argFoo) {
                entity = argFoo;
                zuuluu = entity.roles;
                michal = zuuluu.includes;
                entity = _closure2_slot1;
                entity = entity.id;
                entity = michal.bind(zuuluu)(entity);
                entity = !entity;
                return entity;
            };
            golfie = report.bind(golfie)(michal, zuuluu);
            michal = 35;
            michal = ctrled[michal];
            report = oscard.bind(tangon)(michal);
            zuuluu = report.useGuildMembers;
            michal = echoed.id;
            result = zuuluu.bind(report)(michal, golfie);
            report = _closure1_slot6;
            zuuluu = report.useState;
            michal = {};
            zuuluu = zuuluu.bind(report)(michal);
            michal = _closure1_slot5;
            golfie = 2;
            michal = michal.bind(tangon)(zuuluu, golfie);
            romeon = 0;
            sizing = michal[romeon];
            var _closure2_slot3 = sizing;
            zuuluu = 1;
            option = michal[zuuluu];
            report = _closure1_slot6;
            michal = report.useState;
            source = false;
            report = michal.bind(report)(source);
            michal = _closure1_slot5;
            michal = michal.bind(tangon)(report, golfie);
            output = michal[romeon];
            michal = michal[zuuluu];
            var _closure2_slot4 = michal;
            golfie = _closure1_slot6;
            report = golfie.useCallback;
            zuuluu = new Array(4);
            zuuluu[0] = michal;
            michal = echoed.id;
            zuuluu[1] = michal;
            michal = verify.id;
            zuuluu[2] = michal;
            zuuluu[3] = sizing;
            michal = function() {
                _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                    entity = global;
                    tangon = entity.Object;
                    zuuluu = tangon.keys;
                    michal = _closure2_slot3;
                    option = zuuluu.bind(tangon)(michal);
                    zuuluu = option.length;
                    michal = 0;
                    if(!(zuuluu > michal)) { _fun00014_ip = 110; continue _fun00013 }
 36:
                    tangon = _closure2_slot4;
                    zuuluu = undefined;
                    michal = true;
                    michal = tangon.bind(zuuluu)(michal);
                    report = _closure1_slot1;
                    oscard = _closure1_slot3;
                    michal = 36;
                    michal = oscard[michal];
                    golfie = report.bind(zuuluu)(michal);
                    oscard = golfie.bulkAddMemberRoles;
                    michal = _closure2_slot2;
                    report = michal.id;
                    michal = _closure2_slot1;
                    michal = michal.id;
                    michal = oscard.bind(golfie)(report, michal, option);
                    michal = false;
                    michal = tangon.bind(zuuluu)(michal);
 110:
                    golfie = _closure1_slot30;
                    tangon = _closure1_slot26;
                    zuuluu = _closure1_slot25;
                    zuuluu = zuuluu.STEP_MEMBERS;
                    romeon = tangon[zuuluu];
                    zuuluu = _closure1_slot26;
                    yankee = zuuluu.FLOW_COMPLETED;
                    entity = _closure2_slot2;
                    verify = entity.id;
                    entity = undefined;
                    offset = false;
                    foxtra = undefined;
                    zuuluu = foxtra[golfie](romeon, yankee, offset, verify, option);
                    zuuluu = _closure1_slot1;
                    tangon = _closure1_slot3;
                    michal = 18;
                    michal = tangon[michal];
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.close;
                    michal = michal.bind(zuuluu)();
                    return entity;
                }
            };
            kiloes = report.bind(golfie)(michal, zuuluu);
            report = _closure1_slot6;
            zuuluu = report.useMemo;
            michal = new Array(1);
            michal[0] = sizing;
            entity = function() {
                entity = global;
                zuuluu = entity.Object;
                michal = zuuluu.keys;
                entity = _closure2_slot3;
                entity = michal.bind(zuuluu)(entity);
                entity = entity.length;
                return entity;
            };
            backup = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot22;
            michal = _closure1_slot37;
            entity = {};
            report = !offset;
            entity['hasSkipButton'] = report;
            update = 17;
            report = ctrled[update];
            report = oscard.bind(tangon)(report);
            vacuum = report.intl;
            golfie = vacuum.string;
            report = ctrled[update];
            report = oscard.bind(tangon)(report);
            report = report.t;
            report = report.+gWHtL;
            report = golfie.bind(vacuum)(report);
            entity['title'] = report;
            report = ctrled[update];
            report = oscard.bind(tangon)(report);
            sequen = report.intl;
            vacuum = sequen.formatToPlainString;
            report = ctrled[update];
            report = oscard.bind(tangon)(report);
            report = report.t;
            golfie = report.yZW3oq;
            report = {};
            config = _closure1_slot15;
            report['numMembers'] = config;
            report = vacuum.bind(sequen)(golfie, report);
            entity['subtitle'] = report;
            golfie = _closure1_slot21;
            report = 37;
            report = ctrled[report];
            report = oscard.bind(tangon)(report);
            oscard = report.AddMembersBody;
            report = {};
            report['autoFocusSearch'] = source;
            report['guild'] = echoed;
            report['members'] = result;
            report['pendingAdditions'] = sizing;
            report['role'] = verify;
            report['setPendingAdditions'] = option;
            option = _closure1_slot15;
            report['maxCount'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot21;
            golfie = _closure1_slot7;
            oscard = {};
            sizing = yankee.nextButton;
            verify = new Array(2);
            verify[0] = sizing;
            if(!offset) { _fun00012_ip = 665; continue _fun00011 }
 659:
            offset = yankee.nextButtonFloating;
 665:
            verify[1] = offset;
            oscard['style'] = verify;
            yankee = _closure1_slot21;
            echoed = _closure1_slot0;
            sizing = _closure1_slot3;
            verify = 33;
            verify = sizing[verify];
            verify = echoed.bind(tangon)(verify);
            offset = verify.Button;
            verify = {};
            verify['loading'] = output;
            output = sizing[update];
            output = echoed.bind(tangon)(output);
            result = output.intl;
            output = result.string;
            sizing = sizing[update];
            sizing = echoed.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.XcPHf3;
            sizing = output.bind(result)(sizing);
            verify['text'] = sizing;
            verify['onPress'] = kiloes;
            romeon = romeon === backup;
            if(romeon) { _fun00012_ip = 779; continue _fun00011 }
 771:
            foxtra = _closure1_slot15;
            romeon = backup > foxtra;
 779:
            verify['disabled'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot36 = entity;
    entity = function(argFoo) { // Original name: ModalScene
        _fun00015: for(var _fun00016_ip = 0; ; ) switch(_fun00016_ip) {
 0:
            michal = argFoo;
            romeon = michal.children;
            golfie = michal.hasSkipButton;
            update = michal.title;
            output = michal.subtitle;
            zuuluu = _closure1_slot24;
            report = undefined;
            yankee = zuuluu.bind(report)();
            tangon = _closure1_slot1;
            oscard = _closure1_slot3;
            zuuluu = 38;
            zuuluu = oscard[zuuluu];
            zuuluu = tangon.bind(report)(zuuluu);
            zuuluu = zuuluu.bind(report)();
            option = zuuluu.insets;
            tangon = _closure1_slot0;
            zuuluu = 22;
            zuuluu = oscard[zuuluu];
            tangon = tangon.bind(report)(zuuluu);
            zuuluu = tangon.useNavigation;
            offset = zuuluu.bind(tangon)();
            var _closure2_slot0 = offset;
            zuuluu = _closure1_slot31;
            verify = zuuluu.bind(report)();
            var _closure2_slot1 = verify;
            oscard = _closure1_slot6;
            tangon = oscard.useCallback;
            zuuluu = new Array(2);
            zuuluu[0] = offset;
            verify = verify.id;
            zuuluu[1] = verify;
            entity = function() {
                _fun00017: for(var _fun00018_ip = 0; ; ) switch(_fun00018_ip) {
 0:
                    zuuluu = _closure2_slot0;
                    michal = zuuluu.getState;
                    michal = michal.bind(zuuluu)();
                    zuuluu = michal.routes;
                    tangon = zuuluu.length;
                    michal = 1;
                    michal = tangon - michal;
                    michal = zuuluu[michal];
                    tangon = michal.key;
                    zuuluu = _closure1_slot25;
                    zuuluu = zuuluu.STEP_DISPLAY;
                    if(!(tangon !== zuuluu)) { _fun00018_ip = 254; continue _fun00017 }
 64:
                    zuuluu = _closure1_slot25;
                    zuuluu = zuuluu.STEP_PERMISSIONS;
                    if(!(tangon !== zuuluu)) { _fun00018_ip = 192; continue _fun00017 }
 78:
                    tangon = _closure1_slot26;
                    zuuluu = _closure1_slot25;
                    zuuluu = zuuluu.STEP_MEMBERS;
                    oscard = tangon[zuuluu];
                    zuuluu = _closure1_slot26;
                    report = zuuluu.FLOW_DISMISSED;
                    golfie = _closure1_slot1;
                    option = _closure1_slot3;
                    zuuluu = 14;
                    zuuluu = option[zuuluu];
                    tangon = undefined;
                    yankee = golfie.bind(tangon)(zuuluu);
                    offset = yankee.track;
                    zuuluu = _closure1_slot18;
                    verify = zuuluu.MODAL_DISMISSED;
                    zuuluu = {};
                    romeon = _closure1_slot19;
                    romeon = romeon.GUILD_ROLE_CREATION_MODAL;
                    zuuluu['type'] = romeon;
                    zuuluu = offset.bind(yankee)(verify, zuuluu);
                    zuuluu = 18;
                    zuuluu = option[zuuluu];
                    tangon = golfie.bind(tangon)(zuuluu);
                    zuuluu = tangon.close;
                    zuuluu = zuuluu.bind(tangon)();
                    _fun00018_ip = 369; continue _fun00017;
 192:
                    tangon = _closure1_slot26;
                    zuuluu = _closure1_slot25;
                    zuuluu = zuuluu.STEP_PERMISSIONS;
                    oscard = tangon[zuuluu];
                    golfie = _closure1_slot26;
                    zuuluu = _closure1_slot25;
                    zuuluu = zuuluu.STEP_MEMBERS;
                    report = golfie[zuuluu];
                    verify = _closure2_slot0;
                    option = verify.push;
                    golfie = _closure1_slot25;
                    golfie = golfie.STEP_MEMBERS;
                    golfie = option.bind(verify)(golfie);
                    _fun00018_ip = 369; continue _fun00017;
 254:
                    tangon = _closure1_slot26;
                    zuuluu = _closure1_slot25;
                    zuuluu = zuuluu.STEP_DISPLAY;
                    tangon = tangon[zuuluu];
                    golfie = _closure1_slot33;
                    zuuluu = undefined;
                    option = golfie.bind(zuuluu)();
                    golfie = _closure1_slot26;
                    zuuluu = _closure1_slot25;
                    if(option) { _fun00018_ip = 332; continue _fun00017 }
 293:
                    option = zuuluu.STEP_PERMISSIONS;
                    report = golfie[option];
                    yankee = _closure2_slot0;
                    offset = yankee.push;
                    verify = _closure1_slot25;
                    verify = verify.STEP_PERMISSIONS;
                    verify = offset.bind(yankee)(verify);
                    oscard = tangon;
                    _fun00018_ip = 369; continue _fun00017;
 332:
                    zuuluu = zuuluu.STEP_MEMBERS;
                    report = golfie[zuuluu];
                    verify = _closure2_slot0;
                    option = verify.push;
                    golfie = _closure1_slot25;
                    golfie = golfie.STEP_MEMBERS;
                    golfie = option.bind(verify)(golfie);
                    oscard = tangon;
 369:
                    tangon = _closure1_slot30;
                    entity = _closure2_slot1;
                    foxtra = entity.id;
                    entity = undefined;
                    backup = true;
                    output = undefined;
                    sizing = oscard;
                    kiloes = report;
                    michal = output[tangon](sizing, kiloes, backup, foxtra, romeon);
                    return entity;
                }
            };
            backup = tangon.bind(oscard)(entity, zuuluu);
            entity = global;
            zuuluu = entity.navigator;
            entity = null;
            if(!(entity != zuuluu)) { _fun00016_ip = 575; continue _fun00015 }
 168:
            tangon = _closure1_slot22;
            zuuluu = _closure1_slot7;
            entity = {};
            oscard = {};
            source = yankee.container;
            ctrled = oscard;
            verify = copyDataProperties(ctrled, source);
            offset = option.top;
            verify = 'paddingTop';
            oscard[verify] = offset;
            verify = yankee.container;
            verify = verify.paddingBottom;
            option = option.bottom;
            verify = verify + option;
            option = 'paddingBottom';
            oscard[option] = verify;
            entity['style'] = oscard;
            verify = _closure1_slot22;
            option = _closure1_slot7;
            oscard = {};
            offset = yankee.sceneHeader;
            oscard['style'] = offset;
            echoed = _closure1_slot21;
            kiloes = _closure1_slot0;
            result = _closure1_slot3;
            foxtra = 16;
            offset = result[foxtra];
            offset = kiloes.bind(report)(offset);
            sizing = offset.Text;
            offset = {'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            offset['children'] = update;
            sizing = echoed.bind(report)(sizing, offset);
            offset = new Array(2);
            offset[0] = sizing;
            sizing = _closure1_slot21;
            foxtra = result[foxtra];
            foxtra = kiloes.bind(report)(foxtra);
            kiloes = foxtra.Text;
            foxtra = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            result = yankee.sceneSubtitle;
            foxtra['style'] = result;
            foxtra['children'] = output;
            foxtra = sizing.bind(report)(kiloes, foxtra);
            offset[1] = foxtra;
            oscard['children'] = offset;
            option = verify.bind(report)(option, oscard);
            oscard = new Array(3);
            oscard[0] = option;
            offset = _closure1_slot21;
            verify = _closure1_slot7;
            option = {};
            foxtra = yankee.sceneContent;
            option['style'] = foxtra;
            option['children'] = romeon;
            option = offset.bind(report)(verify, option);
            oscard[1] = option;
            if(!golfie) { _fun00016_ip = 559; continue _fun00015 }
 436:
            offset = _closure1_slot21;
            verify = _closure1_slot7;
            option = {};
            yankee = yankee.sceneFooter;
            option['style'] = yankee;
            foxtra = _closure1_slot21;
            result = _closure1_slot0;
            echoed = _closure1_slot3;
            yankee = 33;
            yankee = echoed[yankee];
            yankee = result.bind(report)(yankee);
            romeon = yankee.Button;
            yankee = {};
            kiloes = 17;
            sizing = echoed[kiloes];
            sizing = result.bind(report)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = echoed[kiloes];
            kiloes = result.bind(report)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.CJm5V1;
            kiloes = sizing.bind(output)(kiloes);
            yankee['text'] = kiloes;
            yankee['onPress'] = backup;
            yankee = foxtra.bind(report)(romeon, yankee);
            option['children'] = yankee;
            golfie = offset.bind(report)(verify, option);
 559:
            oscard[2] = golfie;
            entity['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, entity);
            _fun00016_ip = 613; continue _fun00015;
 575:
            tangon = _closure1_slot21;
            zuuluu = _closure1_slot0;
            oscard = _closure1_slot3;
            michal = 39;
            michal = oscard[michal];
            michal = zuuluu.bind(report)(michal);
            zuuluu = michal.SceneLoadingIndicator;
            michal = {};
            entity = tangon.bind(report)(zuuluu, michal);
 613:
            return entity;
        }
    };
    var _closure1_slot37 = entity;
    entity = global;
    offset = entity.Object;
    option = offset.defineProperty;
    tangon = {};
    verify = true;
    tangon['value'] = verify;
    entity = '__esModule';
    entity = option.bind(offset)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    kiloes = 1;
    tangon = oscard[kiloes];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    offset = golfie.bind(entity)(tangon);
    var _closure1_slot6 = offset;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot7 = golfie;
    golfie = tangon.Keyboard;
    var _closure1_slot8 = golfie;
    tangon = tangon.Platform;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot12 = tangon;
    backup = 8;
    tangon = oscard[backup];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.PermissionTemplates;
    var _closure1_slot13 = golfie;
    golfie = tangon.DEFAULT_TEMPLATE_TYPE;
    var _closure1_slot14 = golfie;
    tangon = tangon.MAX_BULK_ROLE_MEMBERS_ADD;
    var _closure1_slot15 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.MAX_ROLE_LENGTH;
    var _closure1_slot16 = golfie;
    golfie = tangon.DEFAULT_ROLE_COLOR;
    var _closure1_slot17 = golfie;
    golfie = tangon.AnalyticEvents;
    var _closure1_slot18 = golfie;
    golfie = tangon.AnalyticsSections;
    var _closure1_slot19 = golfie;
    tangon = tangon.Permissions;
    var _closure1_slot20 = tangon;
    tangon = 10;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot21 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot22 = tangon;
    tangon = {};
    golfie = {'flexDirection': 'row', 'justifyContent': 'center', 'alignContent': 'center', 'width': '100%'};
    tangon['titleContainer'] = golfie;
    golfie = {'textAlign': 'center', 'flex': 1};
    tangon['title'] = golfie;
    var _closure1_slot23 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    yankee = {};
    romeon = 12;
    romeon = oscard[romeon];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.NAV_BAR_HEIGHT;
    yankee['marginTop'] = romeon;
    yankee['flexGrow'] = kiloes;
    romeon = 13;
    sizing = oscard[romeon];
    sizing = foxtra.bind(entity)(sizing);
    sizing = sizing.spacing;
    sizing = sizing.PX_16;
    yankee['paddingBottom'] = sizing;
    tangon['container'] = yankee;
    yankee = {'alignItems': 'center', 'marginBottom': 8, 'marginHorizontal': 16};
    tangon['sceneHeader'] = yankee;
    yankee = {'textAlign': 'center', 'paddingTop': 8, 'maxWidth': 400};
    tangon['sceneSubtitle'] = yankee;
    yankee = {};
    yankee['flex'] = kiloes;
    tangon['sceneContent'] = yankee;
    yankee = {};
    yankee['flex'] = kiloes;
    tangon['sceneInner'] = yankee;
    yankee = {'marginBottom': 8, 'paddingVertical': 12};
    tangon['formRow'] = yankee;
    yankee = {};
    kiloes = 24;
    yankee['marginTop'] = kiloes;
    kiloes = oscard[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.unsafe_rawColors;
    kiloes = kiloes.TRANSPARENT;
    yankee['backgroundColor'] = kiloes;
    tangon['formDivider'] = yankee;
    yankee = {'flexDirection': 'row', 'flexGrow': 1, 'justifyContent': 'space-between', 'alignItems': 'center'};
    tangon['colorRow'] = yankee;
    yankee = {'flexDirection': 'row', 'alignItems': 'center'};
    tangon['colorValue'] = yankee;
    yankee = {'marginHorizontal': 0, 'marginVertical': 0, 'marginRight': 8, 'minWidth': 24, 'height': 24, 'borderRadius': 3};
    tangon['colorBlock'] = yankee;
    yankee = {};
    yankee['paddingBottom'] = backup;
    tangon['sceneFooter'] = yankee;
    yankee = {'width': '100%', 'paddingHorizontal': 16, 'paddingVertical': 16};
    tangon['nextButton'] = yankee;
    yankee = {'paddingVertical': 0, 'paddingTop': 16};
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_MOBILE_PRIMARY;
    yankee['backgroundColor'] = romeon;
    tangon['nextButtonFloating'] = yankee;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot24 = tangon;
    golfie = {};
    tangon = 'STEP_DISPLAY';
    golfie['STEP_DISPLAY'] = tangon;
    tangon = 'STEP_PERMISSIONS';
    golfie['STEP_PERMISSIONS'] = tangon;
    tangon = 'STEP_MEMBERS';
    golfie['STEP_MEMBERS'] = tangon;
    var _closure1_slot25 = golfie;
    tangon = {};
    yankee = golfie.STEP_DISPLAY;
    option = 'Role Display';
    tangon[yankee] = option;
    yankee = golfie.STEP_PERMISSIONS;
    option = 'Role Permissions';
    tangon[yankee] = option;
    yankee = golfie.STEP_MEMBERS;
    option = 'Role Members';
    tangon[yankee] = option;
    yankee = 'Flow Initialized';
    option = 'FLOW_INITIALIZED';
    tangon[option] = yankee;
    yankee = 'Flow Dismissed';
    option = 'FLOW_DISMISSED';
    tangon[option] = yankee;
    yankee = 'Flow Completed';
    option = 'FLOW_COMPLETED';
    tangon[option] = yankee;
    var _closure1_slot26 = tangon;
    option = offset.memo;
    tangon = function(argFoo) {
        entity = argFoo;
        tangon = entity.step;
        entity = global;
        report = entity.Object;
        zuuluu = report.keys;
        michal = _closure1_slot25;
        zuuluu = zuuluu.bind(report)(michal);
        romeon = zuuluu.length;
        michal = zuuluu.indexOf;
        zuuluu = michal.bind(zuuluu)(tangon);
        michal = 1;
        foxtra = zuuluu + michal;
        tangon = _closure1_slot21;
        zuuluu = _closure1_slot7;
        michal = {};
        option = _closure1_slot23;
        report = option.titleContainer;
        michal['style'] = report;
        golfie = _closure1_slot21;
        verify = _closure1_slot0;
        backup = _closure1_slot3;
        entity = 16;
        report = backup[entity];
        entity = undefined;
        report = verify.bind(entity)(report);
        oscard = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-md/extrabold', 'color': 'header-primary'};
        option = option.title;
        report['style'] = option;
        option = 17;
        offset = backup[option];
        offset = verify.bind(entity)(offset);
        yankee = offset.intl;
        offset = yankee.format;
        option = backup[option];
        option = verify.bind(entity)(option);
        option = option.t;
        verify = option.8v/u0t;
        option = {};
        option['number'] = foxtra;
        option['total'] = romeon;
        option = offset.bind(yankee)(verify, option);
        report['children'] = option;
        report = golfie.bind(entity)(oscard, report);
        michal['children'] = report;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    tangon = option.bind(offset)(tangon);
    var _closure1_slot27 = tangon;
    tangon = function(argFoo, argBar) { // Original name: closeModal
        golfie = _closure1_slot30;
        entity = _closure1_slot26;
        offset = entity.FLOW_DISMISSED;
        entity = undefined;
        yankee = argFoo;
        verify = false;
        option = argBar;
        romeon = undefined;
        zuuluu = romeon[golfie](yankee, offset, verify, option, golfie);
        zuuluu = _closure1_slot1;
        tangon = _closure1_slot3;
        michal = 18;
        michal = tangon[michal];
        zuuluu = zuuluu.bind(entity)(michal);
        michal = zuuluu.close;
        michal = michal.bind(zuuluu)();
        return entity;
    };
    var _closure1_slot28 = tangon;
    tangon = {};
    offset = golfie.STEP_DISPLAY;
    option = {};
    option['fullscreen'] = verify;
    yankee = function() { // Original name: render
        tangon = _closure1_slot21;
        zuuluu = _closure1_slot34;
        michal = undefined;
        entity = {};
        entity = tangon.bind(michal)(zuuluu, entity);
        return entity;
    };
    option['render'] = yankee;
    tangon[offset] = option;
    offset = golfie.STEP_PERMISSIONS;
    option = {};
    option['fullscreen'] = verify;
    yankee = function() { // Original name: render
        tangon = _closure1_slot21;
        zuuluu = _closure1_slot35;
        michal = undefined;
        entity = {};
        entity = tangon.bind(michal)(zuuluu, entity);
        return entity;
    };
    option['render'] = yankee;
    tangon[offset] = option;
    option = golfie.STEP_MEMBERS;
    golfie = {};
    golfie['fullscreen'] = verify;
    verify = function() { // Original name: render
        tangon = _closure1_slot21;
        zuuluu = _closure1_slot36;
        michal = undefined;
        entity = {};
        entity = tangon.bind(michal)(zuuluu, entity);
        return entity;
    };
    golfie['render'] = verify;
    tangon[option] = golfie;
    var _closure1_slot29 = tangon;
    tangon = 42;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_settings/roles/native/GuildSettingsRoleCreateModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: GuildSettingsRoleCreateModal
        michal = _closure1_slot31;
        tangon = undefined;
        michal = michal.bind(tangon)();
        var _closure2_slot0 = michal;
        zuuluu = _closure1_slot1;
        oscard = _closure1_slot3;
        michal = 40;
        michal = oscard[michal];
        michal = zuuluu.bind(tangon)(michal);
        entity = function() {
            oscard = _closure1_slot30;
            michal = _closure1_slot26;
            offset = michal.FLOW_INITIALIZED;
            michal = _closure1_slot26;
            entity = _closure1_slot25;
            entity = entity.STEP_DISPLAY;
            verify = michal[entity];
            entity = _closure2_slot0;
            golfie = entity.id;
            entity = undefined;
            option = false;
            yankee = undefined;
            michal = yankee[oscard](offset, verify, option, golfie, oscard);
            return entity;
        };
        entity = michal.bind(tangon)(entity);
        zuuluu = _closure1_slot21;
        michal = _closure1_slot0;
        entity = 41;
        entity = oscard[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Navigator;
        entity = {};
        oscard = _closure1_slot29;
        entity['screens'] = oscard;
        report = _closure1_slot25;
        report = report.STEP_DISPLAY;
        entity['initialRouteName'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();