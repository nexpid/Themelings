// app/modules/guild_settings/native/EmojiOverflowActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    golf = argCorge;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = golf;
    var _closure1_slot3 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Image;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'width': 30, 'height': 30, 'marginRight': 8, 'resizeMode': 'contain'};
    tango['emojiImage'] = verify;
    verify = {};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.TEXT_DANGER;
    verify['tintColor'] = romeo;
    tango['destructiveIcon'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_DANGER;
    verify['color'] = offset;
    tango['destructiveText'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_settings/native/EmojiOverflowActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: EmojiOverflowActionSheet
        entity = argFoo;
        golf = entity.emoji;
        var _closure2_slot0 = golf;
        mike = entity.guildId;
        var _closure2_slot1 = mike;
        entity = entity.onClose;
        var _closure2_slot2 = entity;
        entity = _closure1_slot7;
        tango = undefined;
        romeo = entity.bind(tango)();
        options = _closure1_slot5;
        mike = _closure1_slot4;
        entity = {};
        zulu = romeo.emojiImage;
        entity['style'] = zulu;
        zulu = {};
        oscar = _closure1_slot2;
        sizing = _closure1_slot3;
        report = 5;
        report = sizing[report];
        offset = oscar.bind(tango)(report);
        oscar = offset.getEmojiURL;
        report = {};
        foxtrot = golf.id;
        report['id'] = foxtrot;
        foxtrot = golf.animated;
        report['animated'] = foxtrot;
        foxtrot = 48;
        report['size'] = foxtrot;
        report = oscar.bind(offset)(report);
        zulu['uri'] = report;
        entity['source'] = zulu;
        offset = options.bind(tango)(mike, entity);
        zulu = _closure1_slot6;
        kilo = _closure1_slot0;
        entity = 6;
        entity = sizing[entity];
        entity = kilo.bind(tango)(entity);
        mike = entity.ActionSheet;
        entity = {};
        report = 7;
        report = sizing[report];
        report = kilo.bind(tango)(report);
        oscar = report.BottomSheetTitleHeader;
        report = {};
        report['leading'] = offset;
        foxtrot = golf.name;
        golf = global;
        golf = golf.HermesInternal;
        offset = golf.concat;
        golf = ':';
        golf = offset.bind(golf)(foxtrot, golf);
        report['title'] = golf;
        oscar = options.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        offset = 8;
        oscar = sizing[offset];
        oscar = kilo.bind(tango)(oscar);
        golf = oscar.FormRow;
        oscar = {};
        output = _closure1_slot1;
        yankee = 9;
        yankee = sizing[yankee];
        foxtrot = output.bind(tango)(yankee);
        yankee = {};
        backup = romeo.destructiveIcon;
        yankee['style'] = backup;
        backup = 10;
        backup = sizing[backup];
        backup = output.bind(tango)(backup);
        yankee['source'] = backup;
        yankee = options.bind(tango)(foxtrot, yankee);
        oscar['leading'] = yankee;
        offset = sizing[offset];
        offset = kilo.bind(tango)(offset);
        yankee = offset.FormLabel;
        offset = {};
        romeo = romeo.destructiveText;
        offset['style'] = romeo;
        romeo = 11;
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.string;
        romeo = sizing[romeo];
        romeo = kilo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.oyYWHB;
        romeo = foxtrot.bind(backup)(romeo);
        offset['text'] = romeo;
        offset = options.bind(tango)(yankee, offset);
        oscar['label'] = offset;
        verify = function() { // Original name: onPress
            zulu = _closure1_slot0;
            mike = _closure1_slot3;
            entity = 12;
            mike = mike[entity];
            entity = undefined;
            oscar = zulu.bind(entity)(mike);
            report = oscar.deleteEmoji;
            tango = _closure2_slot1;
            zulu = _closure2_slot0;
            zulu = zulu.id;
            zulu = report.bind(oscar)(tango, zulu);
            mike = _closure2_slot2;
            mike = mike.bind(entity)();
            return entity;
        };
        oscar['onPress'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();