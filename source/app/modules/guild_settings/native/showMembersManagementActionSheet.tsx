// app/modules/guild_settings/native/showMembersManagementActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    entity = argCorge;
    var _closure1_slot2 = entity;
    var _closure1_slot3 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Permissions;
    var _closure1_slot5 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_settings/native/showMembersManagementActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: showMembersManagementActionSheet
        _fun126529: for(var _fun126529_ip = 0; ; ) switch(_fun126529_ip) {
 0:
            entity = argFoo;
            options = entity.guild;
            var _closure2_slot0 = options;
            mike = entity.selectedRoleId;
            var _closure2_slot1 = mike;
            entity = entity.onFilterRoleId;
            var _closure2_slot2 = entity;
            zulu = {};
            verify = _closure1_slot0;
            offset = _closure1_slot3;
            yankee = 2;
            tango = offset[yankee];
            entity = undefined;
            tango = verify.bind(entity)(tango);
            golf = tango.intl;
            report = golf.string;
            tango = offset[yankee];
            tango = verify.bind(entity)(tango);
            tango = tango.t;
            tango = tango.pEasFR;
            tango = report.bind(golf)(tango);
            zulu['label'] = tango;
            tango = function() { // Original name: onPress
                report = _closure1_slot1;
                mike = _closure1_slot3;
                entity = 3;
                tango = mike[entity];
                entity = undefined;
                oscar = report.bind(entity)(tango);
                report = oscar.openLazy;
                tango = _closure1_slot0;
                zulu = 5;
                zulu = mike[zulu];
                tango = tango.bind(entity)(zulu);
                zulu = 4;
                zulu = mike[zulu];
                mike = mike.paths;
                tango = tango.bind(entity)(zulu, mike);
                zulu = {};
                golf = _closure2_slot0;
                zulu['guild'] = golf;
                golf = _closure2_slot1;
                zulu['selectedRoleId'] = golf;
                mike = _closure2_slot2;
                zulu['onFilterRoleId'] = mike;
                mike = 'MembersFilter';
                mike = report.bind(oscar)(tango, mike, zulu);
                return entity;
            };
            zulu['onPress'] = tango;
            report = new Array(1);
            report[0] = zulu;
            golf = _closure1_slot4;
            tango = golf.can;
            verify = _closure1_slot2;
            zulu = 6;
            zulu = offset[zulu];
            romeo = verify.bind(entity)(zulu);
            offset = romeo.combine;
            zulu = _closure1_slot5;
            verify = zulu.MANAGE_GUILD;
            zulu = zulu.KICK_MEMBERS;
            zulu = offset.bind(romeo)(verify, zulu);
            zulu = tango.bind(golf)(zulu, options);
            if(!zulu) { _fun126529_ip = 268; continue _fun126529 }
 182:
            tango = report.push;
            zulu = {};
            offset = _closure1_slot0;
            golf = _closure1_slot3;
            options = golf[yankee];
            options = offset.bind(entity)(options);
            verify = options.intl;
            options = verify.string;
            golf = golf[yankee];
            golf = offset.bind(entity)(golf);
            golf = golf.t;
            golf = golf.2mIlKS;
            golf = options.bind(verify)(golf);
            zulu['label'] = golf;
            oscar = function() { // Original name: onPress
                report = _closure1_slot1;
                mike = _closure1_slot3;
                entity = 3;
                tango = mike[entity];
                entity = undefined;
                oscar = report.bind(entity)(tango);
                report = oscar.openLazy;
                tango = _closure1_slot0;
                zulu = 5;
                zulu = mike[zulu];
                tango = tango.bind(entity)(zulu);
                zulu = 7;
                zulu = mike[zulu];
                mike = mike.paths;
                tango = tango.bind(entity)(zulu, mike);
                zulu = {};
                mike = _closure2_slot0;
                zulu['guild'] = mike;
                mike = 'MembersPrune';
                mike = report.bind(oscar)(tango, mike, zulu);
                return entity;
            };
            zulu['onPress'] = oscar;
            oscar = true;
            zulu['isDestructive'] = oscar;
            zulu = tango.bind(report)(zulu);
 268:
            zulu = _closure1_slot0;
            tango = _closure1_slot3;
            mike = 8;
            mike = tango[mike];
            tango = zulu.bind(entity)(mike);
            zulu = tango.showSimpleActionSheet;
            mike = {};
            oscar = 'GuildSettingsMembersMore';
            mike['key'] = oscar;
            mike['options'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        }
    };
    zulu['default'] = tango;
    mike = function(argFoo) { // Original name: getMembersManagementActions
        _fun126532: for(var _fun126532_ip = 0; ; ) switch(_fun126532_ip) {
 0:
            entity = argFoo;
            golf = entity.guild;
            var _closure2_slot0 = golf;
            mike = entity.selectedRoleId;
            var _closure2_slot1 = mike;
            entity = entity.onFilterRoleId;
            var _closure2_slot2 = entity;
            mike = {};
            options = _closure1_slot0;
            yankee = _closure1_slot3;
            offset = 2;
            entity = yankee[offset];
            verify = undefined;
            entity = options.bind(verify)(entity);
            oscar = entity.intl;
            zulu = oscar.string;
            entity = yankee[offset];
            entity = options.bind(verify)(entity);
            entity = entity.t;
            entity = entity.pEasFR;
            entity = zulu.bind(oscar)(entity);
            mike['label'] = entity;
            entity = function() { // Original name: action
                report = _closure1_slot1;
                mike = _closure1_slot3;
                entity = 3;
                tango = mike[entity];
                entity = undefined;
                oscar = report.bind(entity)(tango);
                report = oscar.openLazy;
                tango = _closure1_slot0;
                zulu = 5;
                zulu = mike[zulu];
                tango = tango.bind(entity)(zulu);
                zulu = 4;
                zulu = mike[zulu];
                mike = mike.paths;
                tango = tango.bind(entity)(zulu, mike);
                zulu = {};
                golf = _closure2_slot0;
                zulu['guild'] = golf;
                golf = _closure2_slot1;
                zulu['selectedRoleId'] = golf;
                mike = _closure2_slot2;
                zulu['onFilterRoleId'] = mike;
                mike = 'MembersFilter';
                mike = report.bind(oscar)(tango, mike, zulu);
                return entity;
            };
            mike['action'] = entity;
            entity = new Array(1);
            entity[0] = mike;
            oscar = _closure1_slot4;
            zulu = oscar.can;
            options = _closure1_slot2;
            mike = 6;
            mike = yankee[mike];
            romeo = options.bind(verify)(mike);
            yankee = romeo.combine;
            mike = _closure1_slot5;
            options = mike.MANAGE_GUILD;
            mike = mike.KICK_MEMBERS;
            mike = yankee.bind(romeo)(options, mike);
            mike = zulu.bind(oscar)(mike, golf);
            if(!mike) { _fun126532_ip = 271; continue _fun126532 }
 182:
            zulu = entity.push;
            mike = {};
            options = _closure1_slot0;
            report = _closure1_slot3;
            oscar = report[offset];
            oscar = options.bind(verify)(oscar);
            golf = oscar.intl;
            oscar = golf.string;
            report = report[offset];
            report = options.bind(verify)(report);
            report = report.t;
            report = report.2mIlKS;
            report = oscar.bind(golf)(report);
            mike['label'] = report;
            tango = function() { // Original name: action
                report = _closure1_slot1;
                mike = _closure1_slot3;
                entity = 3;
                tango = mike[entity];
                entity = undefined;
                oscar = report.bind(entity)(tango);
                report = oscar.openLazy;
                tango = _closure1_slot0;
                zulu = 5;
                zulu = mike[zulu];
                tango = tango.bind(entity)(zulu);
                zulu = 7;
                zulu = mike[zulu];
                mike = mike.paths;
                tango = tango.bind(entity)(zulu, mike);
                zulu = {};
                mike = _closure2_slot0;
                zulu['guild'] = mike;
                mike = 'MembersPrune';
                mike = report.bind(oscar)(tango, mike, zulu);
                return entity;
            };
            mike['action'] = tango;
            tango = 'destructive';
            mike['variant'] = tango;
            mike = zulu.bind(entity)(mike);
 271:
            return entity;
        }
    };
    zulu['getMembersManagementActions'] = mike;
    return entity;
})();