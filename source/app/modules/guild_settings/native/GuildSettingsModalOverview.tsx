// app/modules/guild_settings/native/GuildSettingsModalOverview.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    entity = function(argFoo, argBar, argBaz) { // Original name: _callSuper
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tango = argFoo;
            oscar = argBaz;
            mike = _closure1_slot6;
            zulu = undefined;
            entity = argBar;
            verify = mike.bind(zulu)(entity);
            mike = _closure1_slot5;
            entity = _closure1_slot33;
            entity = entity.bind(zulu)();
            if(entity) { _fun00002_ip = 51; continue _fun00001 }
 38:
            entity = verify.apply;
            entity = entity.bind(verify)(tango, oscar);
            _fun00002_ip = 92; continue _fun00001;
 51:
            golf = global;
            options = golf.Reflect;
            golf = options.construct;
            if(oscar) { _fun00002_ip = 71; continue _fun00001 }
 67:
            oscar = new Array(0);
 71:
            report = _closure1_slot6;
            report = report.bind(zulu)(tango);
            report = report.constructor;
            entity = golf.bind(options)(verify, oscar, report);
 92:
            entity = mike.bind(zulu)(tango, entity);
            return entity;
        }
    };
    var _closure1_slot32 = entity;
    entity = function() { // Original name: _isNativeReflectConstruct
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
 2: // try_start_0
            mike = global;
            zulu = mike.Boolean;
            zulu = zulu.prototype;
            tango = zulu.valueOf;
            zulu = tango.call;
            options = mike.Reflect;
            golf = options.construct;
            oscar = mike.Boolean;
            report = new Array(0);
            mike = function() {
                entity = undefined;
                return entity;
            };
            mike = golf.bind(options)(oscar, report, mike);
            mike = zulu.bind(tango)(mike);
            mike = !mike;
            var _closure2_slot0 = mike;
 72: // try_end0
            _fun00004_ip = 76; continue _fun00003;
 74: // catch_target0
            CatchBlockStart(arg_register=1);
 76:
            mike = function() { // Original name: _isNativeReflectConstruct
                entity = _closure2_slot0;
                entity = !entity;
                entity = !entity;
                return entity;
            };
            _closure1_slot33 = mike;
            entity = undefined;
            entity = mike.bind(entity)();
            return entity;
        }
    };
    var _closure1_slot33 = entity;
    golf = global;
    verify = golf.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot3 = tango;
    romeo = 1;
    tango = oscar[romeo];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 5;
    options = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(options);
    options = 6;
    options = oscar[options];
    options = report.bind(entity)(options);
    options = options.View;
    var _closure1_slot8 = options;
    options = 7;
    options = oscar[options];
    options = foxtrot.bind(entity)(options);
    var _closure1_slot9 = options;
    options = 8;
    options = oscar[options];
    options = report.bind(entity)(options);
    verify = options.GUILD_SELECTABLE_CHANNELS_KEY;
    var _closure1_slot10 = verify;
    options = options.GUILD_VOCAL_CHANNELS_KEY;
    var _closure1_slot11 = options;
    options = 9;
    options = oscar[options];
    options = foxtrot.bind(entity)(options);
    var _closure1_slot12 = options;
    options = 10;
    options = oscar[options];
    options = foxtrot.bind(entity)(options);
    var _closure1_slot13 = options;
    options = 11;
    options = oscar[options];
    options = foxtrot.bind(entity)(options);
    var _closure1_slot14 = options;
    options = 12;
    options = oscar[options];
    options = foxtrot.bind(entity)(options);
    var _closure1_slot15 = options;
    options = 13;
    options = oscar[options];
    options = foxtrot.bind(entity)(options);
    var _closure1_slot16 = options;
    options = 14;
    options = oscar[options];
    options = report.bind(entity)(options);
    verify = options.UserNotificationSettings;
    var _closure1_slot17 = verify;
    verify = options.ChannelTypes;
    var _closure1_slot18 = verify;
    verify = options.Permissions;
    var _closure1_slot19 = verify;
    verify = options.GuildFeatures;
    var _closure1_slot20 = verify;
    verify = options.HelpdeskArticles;
    var _closure1_slot21 = verify;
    verify = options.SystemChannelFlags;
    var _closure1_slot22 = verify;
    verify = options.MAX_MEMBERS_NOTIFY_ALL_MESSAGES;
    var _closure1_slot23 = verify;
    options = options.EMPTY_STRING_SNOWFLAKE_ID;
    var _closure1_slot24 = options;
    options = 15;
    options = oscar[options];
    options = report.bind(entity)(options);
    options = options.TitleStyleType;
    var _closure1_slot25 = options;
    options = 16;
    verify = oscar[options];
    verify = report.bind(entity)(verify);
    verify = verify.jsx;
    var _closure1_slot26 = verify;
    verify = oscar[options];
    verify = report.bind(entity)(verify);
    verify = verify.jsxs;
    var _closure1_slot27 = verify;
    options = oscar[options];
    options = report.bind(entity)(options);
    options = options.Fragment;
    var _closure1_slot28 = options;
    options = 17;
    options = oscar[options];
    offset = report.bind(entity)(options);
    verify = offset.createLegacyClassComponentStyles;
    options = {};
    yankee = {};
    yankee['flex'] = romeo;
    options['overview'] = yankee;
    yankee = {};
    romeo = 18;
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_12;
    yankee['marginHorizontal'] = backup;
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_24;
    yankee['marginBottom'] = backup;
    options['redesignHorizontalPadding'] = yankee;
    yankee = {};
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_12;
    yankee['marginTop'] = romeo;
    options['hint'] = yankee;
    options = verify.bind(offset)(options);
    var _closure1_slot29 = options;
    verify = golf.Object;
    options = verify.freeze;
    offset = {};
    golf = 60;
    offset['value'] = golf;
    golf = function() { // Original name: label
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 19;
        zulu = oscar[entity];
        mike = undefined;
        zulu = report.bind(mike)(zulu);
        tango = zulu.intl;
        zulu = tango.formatToPlainString;
        entity = oscar[entity];
        entity = report.bind(mike)(entity);
        entity = entity.t;
        mike = entity.iXLF9f;
        entity = {};
        report = 1;
        entity['minutes'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    offset['label'] = golf;
    golf = new Array(5);
    golf[0] = offset;
    offset = {};
    yankee = 300;
    offset['value'] = yankee;
    yankee = function() { // Original name: label
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 19;
        zulu = oscar[entity];
        mike = undefined;
        zulu = report.bind(mike)(zulu);
        tango = zulu.intl;
        zulu = tango.formatToPlainString;
        entity = oscar[entity];
        entity = report.bind(mike)(entity);
        entity = entity.t;
        mike = entity.iXLF9f;
        entity = {};
        report = 5;
        entity['minutes'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    offset['label'] = yankee;
    golf[1] = offset;
    offset = {};
    yankee = 900;
    offset['value'] = yankee;
    yankee = function() { // Original name: label
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 19;
        zulu = oscar[entity];
        mike = undefined;
        zulu = report.bind(mike)(zulu);
        tango = zulu.intl;
        zulu = tango.formatToPlainString;
        entity = oscar[entity];
        entity = report.bind(mike)(entity);
        entity = entity.t;
        mike = entity.iXLF9f;
        entity = {};
        report = 15;
        entity['minutes'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    offset['label'] = yankee;
    golf[2] = offset;
    offset = {};
    yankee = 1800;
    offset['value'] = yankee;
    yankee = function() { // Original name: label
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 19;
        zulu = oscar[entity];
        mike = undefined;
        zulu = report.bind(mike)(zulu);
        tango = zulu.intl;
        zulu = tango.formatToPlainString;
        entity = oscar[entity];
        entity = report.bind(mike)(entity);
        entity = entity.t;
        mike = entity.iXLF9f;
        entity = {};
        report = 30;
        entity['minutes'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    offset['label'] = yankee;
    golf[3] = offset;
    offset = {};
    yankee = 3600;
    offset['value'] = yankee;
    yankee = function() { // Original name: label
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 19;
        zulu = oscar[entity];
        mike = undefined;
        zulu = report.bind(mike)(zulu);
        tango = zulu.intl;
        zulu = tango.formatToPlainString;
        entity = oscar[entity];
        entity = report.bind(mike)(entity);
        entity = entity.t;
        mike = entity.xCjYxM;
        entity = {};
        report = 1;
        entity['hours'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    offset['label'] = yankee;
    golf[4] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot30 = golf;
    golf = tango.PureComponent;
    tango = function(argFoo) {
        tango = function(argFoo) { // Original name: GuildSettingsModalOverview
            oscar = this;
            yankee = 0;
            golf = copyRestArgs(yankee);
            zulu = _closure1_slot3;
            report = _closure2_slot0;
            tango = undefined;
            zulu = zulu.bind(tango)(oscar, report);
            zulu = _closure1_slot32;
            entity = new Array(0);
            yankee = entity;
            offset = golf;
            verify = 0;
            golf = arraySpread(yankee, offset, verify);
            entity = zulu.bind(tango)(oscar, report, entity);
            var _closure3_slot0 = entity;
            zulu = function(argFoo) {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 20;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.updateGuild;
                mike = {};
                report = argFoo;
                mike['name'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity['handleNameChange'] = zulu;
            zulu = function(argFoo) {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 20;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.updateGuild;
                mike = {};
                report = argFoo;
                mike['description'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity['handleDescriptionChange'] = zulu;
            zulu = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zulu = _closure1_slot1;
                    offset = _closure1_slot2;
                    entity = 21;
                    mike = offset[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = {};
                    tango = _closure3_slot0;
                    golf = tango.props;
                    golf = golf.guild;
                    golf = golf.id;
                    mike['guildId'] = golf;
                    golf = _closure1_slot11;
                    mike['channelType'] = golf;
                    verify = _closure1_slot0;
                    oscar = 19;
                    golf = offset[oscar];
                    golf = verify.bind(entity)(golf);
                    options = golf.intl;
                    golf = options.string;
                    oscar = offset[oscar];
                    oscar = verify.bind(entity)(oscar);
                    oscar = oscar.t;
                    oscar = oscar.wGiHkJ;
                    oscar = golf.bind(options)(oscar);
                    mike['noChannelOptionLabel'] = oscar;
                    oscar = function(argFoo) { // Original name: onSelect
                        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                            oscar = argFoo;
                            zulu = _closure1_slot1;
                            mike = _closure1_slot2;
                            entity = 20;
                            mike = mike[entity];
                            entity = undefined;
                            tango = zulu.bind(entity)(mike);
                            zulu = tango.updateGuild;
                            mike = {};
                            report = null;
                            golf = report == oscar;
                            report = undefined;
                            if(golf) { _fun00008_ip = 52; continue _fun00007 }
 47:
                            report = oscar.id;
 52:
                            mike['afkChannelId'] = report;
                            mike = zulu.bind(tango)(mike);
                            return entity;
                        }
                    };
                    mike['onSelect'] = oscar;
                    report = function(argFoo) { // Original name: filterFn
                        entity = argFoo;
                        entity = entity.channel;
                        mike = entity.type;
                        entity = _closure1_slot18;
                        entity = entity.GUILD_VOICE;
                        entity = mike === entity;
                        return entity;
                    };
                    mike['filterFn'] = report;
                    tango = tango.props;
                    report = tango.afkChannel;
                    tango = null;
                    oscar = tango != report;
                    if(!oscar) { _fun00006_ip = 167; continue _fun00005 }
 164:
                    tango = report;
 167:
                    mike['selectedChannel'] = tango;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                }
            };
            entity['handleAfkChannelChange'] = zulu;
            zulu = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    zulu = _closure1_slot1;
                    offset = _closure1_slot2;
                    entity = 21;
                    mike = offset[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = {};
                    tango = _closure3_slot0;
                    golf = tango.props;
                    golf = golf.guild;
                    golf = golf.id;
                    mike['guildId'] = golf;
                    golf = _closure1_slot10;
                    mike['channelType'] = golf;
                    golf = function(argFoo) { // Original name: filterFn
                        entity = argFoo;
                        entity = entity.channel;
                        mike = entity.type;
                        entity = _closure1_slot18;
                        entity = entity.GUILD_TEXT;
                        entity = mike === entity;
                        return entity;
                    };
                    mike['filterFn'] = golf;
                    verify = _closure1_slot0;
                    oscar = 19;
                    golf = offset[oscar];
                    golf = verify.bind(entity)(golf);
                    options = golf.intl;
                    golf = options.string;
                    oscar = offset[oscar];
                    oscar = verify.bind(entity)(oscar);
                    oscar = oscar.t;
                    oscar = oscar.ibUhoa;
                    oscar = golf.bind(options)(oscar);
                    mike['noChannelOptionLabel'] = oscar;
                    report = function(argFoo) { // Original name: onSelect
                        _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                            oscar = argFoo;
                            zulu = _closure1_slot1;
                            mike = _closure1_slot2;
                            entity = 20;
                            mike = mike[entity];
                            entity = undefined;
                            tango = zulu.bind(entity)(mike);
                            zulu = tango.updateGuild;
                            mike = {};
                            report = null;
                            golf = report == oscar;
                            report = undefined;
                            if(golf) { _fun00012_ip = 52; continue _fun00011 }
 47:
                            report = oscar.id;
 52:
                            mike['systemChannelId'] = report;
                            mike = zulu.bind(tango)(mike);
                            return entity;
                        }
                    };
                    mike['onSelect'] = report;
                    tango = tango.props;
                    report = tango.systemChannel;
                    tango = null;
                    oscar = tango != report;
                    if(!oscar) { _fun00010_ip = 167; continue _fun00009 }
 164:
                    tango = report;
 167:
                    mike['selectedChannel'] = tango;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                }
            };
            entity['handleSystemChannelChange'] = zulu;
            zulu = function(argFoo) {
                tango = _closure3_slot0;
                zulu = tango.handleSystemChannelFlagsChange;
                entity = _closure1_slot22;
                mike = entity.SUPPRESS_JOIN_NOTIFICATIONS;
                entity = argFoo;
                entity = !entity;
                entity = zulu.bind(tango)(mike, entity);
                entity = undefined;
                return entity;
            };
            entity['handleSystemJoinMessages'] = zulu;
            zulu = function(argFoo) {
                tango = _closure3_slot0;
                zulu = tango.handleSystemChannelFlagsChange;
                entity = _closure1_slot22;
                mike = entity.SUPPRESS_JOIN_NOTIFICATION_REPLIES;
                entity = argFoo;
                entity = !entity;
                entity = zulu.bind(tango)(mike, entity);
                entity = undefined;
                return entity;
            };
            entity['handleSystemJoinMessageReplies'] = zulu;
            zulu = function(argFoo) {
                tango = _closure3_slot0;
                zulu = tango.handleSystemChannelFlagsChange;
                entity = _closure1_slot22;
                mike = entity.SUPPRESS_PREMIUM_SUBSCRIPTIONS;
                entity = argFoo;
                entity = !entity;
                entity = zulu.bind(tango)(mike, entity);
                entity = undefined;
                return entity;
            };
            entity['handleSystemPremiumSubscribe'] = zulu;
            zulu = function(argFoo) {
                tango = _closure3_slot0;
                zulu = tango.handleSystemChannelFlagsChange;
                entity = _closure1_slot22;
                mike = entity.SUPPRESS_GUILD_REMINDER_NOTIFICATIONS;
                entity = argFoo;
                entity = !entity;
                entity = zulu.bind(tango)(mike, entity);
                entity = undefined;
                return entity;
            };
            entity['handleSystemReminderNotifications'] = zulu;
            zulu = function(argFoo) {
                tango = _closure3_slot0;
                zulu = tango.handleSystemChannelFlagsChange;
                entity = _closure1_slot22;
                mike = entity.SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATIONS;
                entity = argFoo;
                entity = !entity;
                entity = zulu.bind(tango)(mike, entity);
                entity = undefined;
                return entity;
            };
            entity['handleSystemGuildRoleSubscriptionPurchaseMessages'] = zulu;
            zulu = function(argFoo) {
                tango = _closure3_slot0;
                zulu = tango.handleSystemChannelFlagsChange;
                entity = _closure1_slot22;
                mike = entity.SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATION_REPLIES;
                entity = argFoo;
                entity = !entity;
                entity = zulu.bind(tango)(mike, entity);
                entity = undefined;
                return entity;
            };
            entity['handleSystemGuildRoleSubscriptionPurchaseMessageReplies'] = zulu;
            zulu = function(argFoo) {
                tango = _closure3_slot0;
                zulu = tango.handleSystemChannelFlagsChange;
                entity = _closure1_slot22;
                mike = entity.SUPPRESS_CHANNEL_PROMPT_DEADCHAT;
                entity = argFoo;
                entity = !entity;
                entity = zulu.bind(tango)(mike, entity);
                entity = undefined;
                return entity;
            };
            entity['handleSystemGuildChannelPromptDeadchatMessages'] = zulu;
            zulu = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 22;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.showSimpleActionSheet;
                mike = {};
                oscar = 'AFKTimeout';
                mike['key'] = oscar;
                golf = _closure1_slot30;
                oscar = golf.map;
                report = function(argFoo) {
                    tango = argFoo;
                    var _closure5_slot0 = tango;
                    entity = {};
                    zulu = tango.label;
                    zulu = zulu.bind(tango)();
                    entity['label'] = zulu;
                    mike = function() { // Original name: onPress
                        zulu = _closure1_slot1;
                        mike = _closure1_slot2;
                        entity = 20;
                        mike = mike[entity];
                        entity = undefined;
                        tango = zulu.bind(entity)(mike);
                        zulu = tango.updateGuild;
                        mike = {};
                        report = _closure5_slot0;
                        report = report.value;
                        mike['afkTimeout'] = report;
                        mike = zulu.bind(tango)(mike);
                        return entity;
                    };
                    entity['onPress'] = mike;
                    return entity;
                };
                report = oscar.bind(golf)(report);
                mike['options'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity['handleAFKTimeoutChange'] = zulu;
            zulu = function() {
                oscar = _closure1_slot1;
                golf = _closure1_slot2;
                entity = 23;
                mike = golf[entity];
                entity = undefined;
                tango = oscar.bind(entity)(mike);
                zulu = tango.show;
                mike = {};
                yankee = _closure1_slot0;
                options = 19;
                report = golf[options];
                report = yankee.bind(entity)(report);
                offset = report.intl;
                verify = offset.string;
                report = golf[options];
                report = yankee.bind(entity)(report);
                report = report.t;
                report = report.l3hWPz;
                report = verify.bind(offset)(report);
                mike['title'] = report;
                report = golf[options];
                report = yankee.bind(entity)(report);
                foxtrot = report.intl;
                romeo = foxtrot.format;
                report = golf[options];
                report = yankee.bind(entity)(report);
                report = report.t;
                offset = report.Zuo+VV;
                verify = {};
                report = _closure3_slot0;
                backup = report.props;
                kilo = backup.guild;
                backup = kilo.toString;
                backup = backup.bind(kilo)();
                verify['name'] = backup;
                verify = romeo.bind(foxtrot)(offset, verify);
                mike['body'] = verify;
                verify = golf[options];
                verify = yankee.bind(entity)(verify);
                romeo = verify.intl;
                offset = romeo.string;
                verify = golf[options];
                verify = yankee.bind(entity)(verify);
                verify = verify.t;
                verify = verify.gm1Ven;
                verify = offset.bind(romeo)(verify);
                mike['cancelText'] = verify;
                verify = golf[options];
                verify = yankee.bind(entity)(verify);
                offset = verify.intl;
                verify = offset.string;
                options = golf[options];
                options = yankee.bind(entity)(options);
                options = options.t;
                options = options.p89ACg;
                options = verify.bind(offset)(options);
                mike['confirmText'] = options;
                report = report.handleConfirmDeleteServer;
                mike['onConfirm'] = report;
                report = 24;
                report = golf[report];
                report = oscar.bind(entity)(report);
                report = report.Colors;
                report = report.RED;
                mike['confirmColor'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity['handleDeleteServer'] = zulu;
            zulu = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 20;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.deleteGuild;
                mike = _closure3_slot0;
                zulu = mike.props;
                zulu = zulu.guild;
                zulu = zulu.id;
                mike = mike.props;
                mike = mike.guild;
                mike = mike.name;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            entity['handleConfirmDeleteServer'] = zulu;
            zulu = function(argFoo) {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 20;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.updateGuild;
                mike = {};
                report = argFoo;
                mike['splash'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity['handleSplashChange'] = zulu;
            zulu = function(argFoo) {
                _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                    entity = _closure3_slot0;
                    entity = entity.props;
                    entity = entity.guild;
                    mike = global;
                    zulu = mike.Set;
                    oscar = entity.features;
                    mike = zulu.prototype;
                    mike = Object.create(mike, {constructor: {value: zulu}});
                    golf = mike;
                    entity = new golf[zulu](oscar, report);
                    report = entity instanceof Object ? entity : mike;
                    entity = argFoo;
                    if(entity) { _fun00014_ip = 82; continue _fun00013 }
 57:
                    mike = report.delete;
                    entity = _closure1_slot20;
                    entity = entity.SUMMARIES_ENABLED_BY_USER;
                    entity = mike.bind(report)(entity);
                    _fun00014_ip = 105; continue _fun00013;
 82:
                    mike = report.add;
                    entity = _closure1_slot20;
                    entity = entity.SUMMARIES_ENABLED_BY_USER;
                    entity = mike.bind(report)(entity);
 105:
                    zulu = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 20;
                    mike = mike[entity];
                    entity = undefined;
                    tango = zulu.bind(entity)(mike);
                    zulu = tango.updateGuild;
                    mike = {};
                    mike['features'] = report;
                    mike = zulu.bind(tango)(mike);
                    return entity;
                }
            };
            entity['handleSummariesToggle'] = zulu;
            zulu = function(argFoo) {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 20;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.updateGuild;
                mike = {};
                report = argFoo;
                mike['banner'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity['handleBannerChange'] = zulu;
            mike = function() {
                entity = _closure3_slot0;
                entity = entity.props;
                entity = entity.guild;
                report = entity.id;
                output = entity.name;
                sizing = entity.icon;
                kilo = entity.afkChannelId;
                backup = entity.afkTimeout;
                foxtrot = entity.systemChannelId;
                yankee = entity.safetyAlertsChannelId;
                romeo = entity.systemChannelFlags;
                offset = entity.defaultMessageNotifications;
                verify = entity.splash;
                options = entity.banner;
                golf = entity.description;
                oscar = entity.features;
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 20;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.saveGuild;
                mike = {};
                mike['name'] = output;
                mike['icon'] = sizing;
                mike['afkChannelId'] = kilo;
                mike['afkTimeout'] = backup;
                mike['systemChannelId'] = foxtrot;
                mike['systemChannelFlags'] = romeo;
                mike['safetyAlertsChannelId'] = yankee;
                mike['defaultMessageNotifications'] = offset;
                mike['splash'] = verify;
                mike['banner'] = options;
                mike['description'] = golf;
                mike['features'] = oscar;
                mike = zulu.bind(tango)(report, mike);
                return entity;
            };
            entity['handleOverviewSaveChanges'] = mike;
            return entity;
        };
        var _closure2_slot0 = tango;
        report = _closure1_slot7;
        zulu = undefined;
        mike = argFoo;
        mike = report.bind(zulu)(tango, mike);
        mike = _closure1_slot4;
        report = {};
        entity = 'componentDidMount';
        report['key'] = entity;
        entity = function() { // Original name: value
            mike = this;
            entity = mike.updateNavigator;
            entity = entity.bind(mike)();
            entity = undefined;
            return entity;
        };
        report['value'] = entity;
        entity = new Array(17);
        entity[0] = report;
        report = {};
        golf = 'componentDidUpdate';
        report['key'] = golf;
        golf = function(argFoo) { // Original name: value
            _fun00015: for(var _fun00016_ip = 0; ; ) switch(_fun00016_ip) {
 0:
                mike = argFoo;
                tango = this;
                entity = tango.props;
                entity = entity.errors;
                zulu = tango.updateNavigator;
                zulu = zulu.bind(tango)(mike);
                mike = mike.errors;
                zulu = mike.message;
                mike = entity.message;
                mike = zulu !== mike;
                if(!mike) { _fun00016_ip = 62; continue _fun00015 }
 51:
                tango = entity.message;
                zulu = null;
                mike = zulu != tango;
 62:
                if(!mike) { _fun00016_ip = 106; continue _fun00015 }
 65:
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                mike = 25;
                zulu = zulu[mike];
                mike = undefined;
                zulu = tango.bind(mike)(zulu);
                mike = zulu.presentError;
                entity = entity.message;
                entity = mike.bind(zulu)(entity);
 106:
                entity = undefined;
                return entity;
            }
        };
        report['value'] = golf;
        entity[1] = report;
        report = {};
        golf = 'updateNavigator';
        report['key'] = golf;
        golf = function(argFoo) { // Original name: value
            _fun00017: for(var _fun00018_ip = 0; ; ) switch(_fun00018_ip) {
 0:
                mike = argFoo;
                entity = this;
                var _closure3_slot0 = entity;
                entity = entity.props;
                zulu = entity.navigation;
                golf = entity.submitting;
                oscar = entity.hasChanges;
                entity = null;
                entity = entity != mike;
                if(!entity) { _fun00018_ip = 54; continue _fun00017 }
 44:
                tango = mike.submitting;
                entity = golf === tango;
 54:
                if(!entity) { _fun00018_ip = 67; continue _fun00017 }
 57:
                mike = mike.hasChanges;
                entity = oscar === mike;
 67:
                if(entity) { _fun00018_ip = 196; continue _fun00017 }
 73:
                mike = zulu.setOptions;
                entity = {};
                yankee = _closure1_slot0;
                romeo = _closure1_slot2;
                options = 19;
                verify = romeo[options];
                tango = undefined;
                verify = yankee.bind(tango)(verify);
                offset = verify.intl;
                verify = offset.string;
                options = romeo[options];
                options = yankee.bind(tango)(options);
                options = options.t;
                options = options./dp6yc;
                options = verify.bind(offset)(options);
                entity['title'] = options;
                options = undefined;
                if(!golf) { _fun00018_ip = 157; continue _fun00017 }
 150:
                options = function() {
                    entity = null;
                    return entity;
                };
 157:
                entity['headerLeft'] = options;
                if(golf) { _fun00018_ip = 179; continue _fun00017 }
 165:
                tango = undefined;
                if(!oscar) { _fun00018_ip = 177; continue _fun00017 }
 170:
                tango = function() {
                    tango = _closure1_slot26;
                    options = _closure1_slot0;
                    verify = _closure1_slot2;
                    entity = 27;
                    entity = verify[entity];
                    zulu = undefined;
                    entity = options.bind(zulu)(entity);
                    mike = entity.HeaderActionButton;
                    entity = {};
                    report = _closure3_slot0;
                    report = report.handleOverviewSaveChanges;
                    entity['onPress'] = report;
                    report = 19;
                    oscar = verify[report];
                    oscar = options.bind(zulu)(oscar);
                    golf = oscar.intl;
                    oscar = golf.string;
                    report = verify[report];
                    report = options.bind(zulu)(report);
                    report = report.t;
                    report = report.R3BPHx;
                    report = oscar.bind(golf)(report);
                    entity['text'] = report;
                    entity = tango.bind(zulu)(mike, entity);
                    return entity;
                };
 177:
                _fun00018_ip = 186; continue _fun00017;
 179:
                tango = function() {
                    tango = _closure1_slot26;
                    mike = _closure1_slot0;
                    zulu = _closure1_slot2;
                    entity = 26;
                    entity = zulu[entity];
                    zulu = undefined;
                    entity = mike.bind(zulu)(entity);
                    mike = entity.HeaderSubmittingIndicator;
                    entity = {};
                    entity = tango.bind(zulu)(mike, entity);
                    return entity;
                };
 186:
                entity['headerRight'] = tango;
                entity = mike.bind(zulu)(entity);
 196:
                entity = undefined;
                return entity;
            }
        };
        report['value'] = golf;
        entity[2] = report;
        report = {};
        golf = 'componentWillUnmount';
        report['key'] = golf;
        golf = function() { // Original name: value
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 20;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.cancelChanges;
            mike = this;
            mike = mike.props;
            mike = mike.guild;
            mike = mike.id;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        report['value'] = golf;
        entity[3] = report;
        report = {};
        golf = 'getError';
        report['key'] = golf;
        golf = function(argFoo) { // Original name: value
            _fun00019: for(var _fun00020_ip = 0; ; ) switch(_fun00020_ip) {
 0:
                entity = this;
                entity = entity.props;
                report = entity.errors;
                mike = null;
                zulu = mike == report;
                entity = undefined;
                if(zulu) { _fun00020_ip = 47; continue _fun00019 }
 25:
                zulu = argFoo;
                zulu = report[zulu];
                mike = mike == zulu;
                entity = undefined;
                if(mike) { _fun00020_ip = 47; continue _fun00019 }
 41:
                mike = 0;
                entity = zulu[mike];
 47:
                return entity;
            }
        };
        report['value'] = golf;
        entity[4] = report;
        report = {};
        golf = 'handleSystemChannelFlagsChange';
        report['key'] = golf;
        golf = function(argFoo, argBar) { // Original name: value
            entity = this;
            entity = entity.props;
            zulu = entity.guild;
            oscar = _closure1_slot0;
            tango = _closure1_slot2;
            entity = 28;
            report = tango[entity];
            entity = undefined;
            options = oscar.bind(entity)(report);
            golf = options.setFlag;
            oscar = zulu.systemChannelFlags;
            report = argFoo;
            zulu = argBar;
            report = golf.bind(options)(oscar, report, zulu);
            zulu = _closure1_slot1;
            mike = 20;
            mike = tango[mike];
            tango = zulu.bind(entity)(mike);
            zulu = tango.updateGuild;
            mike = {};
            mike['systemChannelFlags'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        report['value'] = golf;
        entity[5] = report;
        report = {};
        golf = 'handleDefaultNotificationsChange';
        report['key'] = golf;
        golf = function(argFoo) { // Original name: value
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 20;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.updateGuild;
            mike = {};
            report = argFoo;
            mike['defaultMessageNotifications'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        report['value'] = golf;
        entity[6] = report;
        report = {};
        golf = 'renderGuildName';
        report['key'] = golf;
        golf = function() { // Original name: value
            options = this;
            entity = options.props;
            foxtrot = entity.guild;
            verify = entity.canManage;
            tango = _closure1_slot26;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            report = 29;
            entity = yankee[report];
            zulu = undefined;
            entity = offset.bind(zulu)(entity);
            mike = entity.FormSection;
            entity = {};
            oscar = _closure1_slot25;
            oscar = oscar.ANDROID_NO_BORDER;
            entity['titleStyleType'] = oscar;
            golf = 19;
            oscar = yankee[golf];
            oscar = offset.bind(zulu)(oscar);
            backup = oscar.intl;
            romeo = backup.string;
            oscar = yankee[golf];
            oscar = offset.bind(zulu)(oscar);
            oscar = oscar.t;
            oscar = oscar.dBih7e;
            oscar = romeo.bind(backup)(oscar);
            entity['title'] = oscar;
            romeo = options.getError;
            oscar = 'name';
            oscar = romeo.bind(options)(oscar);
            entity['error'] = oscar;
            report = yankee[report];
            report = offset.bind(zulu)(report);
            oscar = report.FormInput;
            report = {};
            romeo = foxtrot.toString;
            romeo = romeo.bind(foxtrot)();
            report['value'] = romeo;
            verify = !verify;
            report['disabled'] = verify;
            options = options.handleNameChange;
            report['onChange'] = options;
            options = false;
            report['showTopContainer'] = options;
            options = 30;
            options = yankee[options];
            options = offset.bind(zulu)(options);
            options = options.ClearButtonVisibility;
            options = options.WITH_CONTENT;
            report['clearButtonVisibility'] = options;
            options = yankee[golf];
            options = offset.bind(zulu)(options);
            verify = options.intl;
            options = verify.string;
            golf = yankee[golf];
            golf = offset.bind(zulu)(golf);
            golf = golf.t;
            golf = golf.R04ENT;
            golf = options.bind(verify)(golf);
            report['clearButtonAccessibilityLabel'] = golf;
            report = tango.bind(zulu)(oscar, report);
            entity['children'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        report['value'] = golf;
        entity[7] = report;
        report = {};
        golf = 'renderAFKSettings';
        report['key'] = golf;
        golf = function() { // Original name: value
            _fun00021: for(var _fun00022_ip = 0; ; ) switch(_fun00022_ip) {
 0:
                verify = this;
                mike = verify.props;
                romeo = mike.guild;
                var _closure3_slot0 = romeo;
                yankee = mike.canManage;
                oscar = mike.afkChannel;
                kilo = null;
                if(!(kilo == oscar)) { _fun00022_ip = 99; continue _fun00021 }
 37:
                golf = _closure1_slot0;
                options = _closure1_slot2;
                mike = 19;
                zulu = options[mike];
                report = undefined;
                zulu = golf.bind(report)(zulu);
                tango = zulu.intl;
                zulu = tango.string;
                mike = options[mike];
                mike = golf.bind(report)(mike);
                mike = mike.t;
                mike = mike.wGiHkJ;
                result = zulu.bind(tango)(mike);
                _fun00022_ip = 145; continue _fun00021;
 99:
                report = _closure1_slot0;
                tango = _closure1_slot2;
                zulu = 31;
                tango = tango[zulu];
                zulu = undefined;
                report = report.bind(zulu)(tango);
                tango = report.computeChannelName;
                zulu = _closure1_slot15;
                mike = _closure1_slot14;
                result = tango.bind(report)(oscar, zulu, mike);
 145:
                mike = romeo.afkChannelId;
                zulu = kilo != mike;
                mike = null;
                if(!zulu) { _fun00022_ip = 184; continue _fun00021 }
 160:
                tango = _closure1_slot30;
                zulu = tango.find;
                entity = function(argFoo) {
                    entity = argFoo;
                    mike = entity.value;
                    entity = _closure3_slot0;
                    entity = entity.afkTimeout;
                    entity = mike === entity;
                    return entity;
                };
                mike = zulu.bind(tango)(entity);
 184:
                if(!(kilo == mike)) { _fun00022_ip = 213; continue _fun00021 }
 188:
                zulu = _closure1_slot30;
                entity = 1;
                zulu = zulu[entity];
                entity = zulu.label;
                foxtrot = entity.bind(zulu)();
                _fun00022_ip = 222; continue _fun00021;
 213:
                entity = mike.label;
                foxtrot = entity.bind(mike)();
 222:
                tango = _closure1_slot27;
                echo = _closure1_slot0;
                update = _closure1_slot2;
                backup = 29;
                entity = update[backup];
                zulu = undefined;
                entity = echo.bind(zulu)(entity);
                mike = entity.FormSection;
                entity = {};
                sizing = 19;
                report = update[sizing];
                report = echo.bind(zulu)(report);
                golf = report.intl;
                oscar = golf.string;
                report = update[sizing];
                report = echo.bind(zulu)(report);
                report = report.t;
                report = report.qyGmGh;
                report = oscar.bind(golf)(report);
                entity['title'] = report;
                options = _closure1_slot26;
                report = update[backup];
                report = echo.bind(zulu)(report);
                oscar = report.FormHint;
                report = {};
                golf = update[sizing];
                golf = echo.bind(zulu)(golf);
                source = golf.intl;
                output = source.string;
                golf = update[sizing];
                golf = echo.bind(zulu)(golf);
                golf = golf.t;
                golf = golf.ffEOKC;
                golf = output.bind(source)(golf);
                report['children'] = golf;
                report = options.bind(zulu)(oscar, report);
                entity['hint'] = report;
                report = update[backup];
                report = echo.bind(zulu)(report);
                oscar = report.FormRow;
                report = {};
                golf = update[sizing];
                golf = echo.bind(zulu)(golf);
                source = golf.intl;
                output = source.string;
                golf = update[sizing];
                golf = echo.bind(zulu)(golf);
                golf = golf.t;
                golf = golf.KuYcnZ;
                golf = output.bind(source)(golf);
                report['label'] = golf;
                golf = !yankee;
                report['disabled'] = golf;
                golf = update[backup];
                golf = echo.bind(zulu)(golf);
                golf = golf.FormRow;
                output = golf.Arrow;
                golf = {};
                golf['label'] = result;
                golf = options.bind(zulu)(output, golf);
                report['trailing'] = golf;
                golf = verify.handleAfkChannelChange;
                report['onPress'] = golf;
                oscar = options.bind(zulu)(oscar, report);
                report = new Array(3);
                report[0] = oscar;
                oscar = update[backup];
                oscar = echo.bind(zulu)(oscar);
                golf = oscar.FormDivider;
                oscar = {};
                oscar = options.bind(zulu)(golf, oscar);
                report[1] = oscar;
                oscar = update[backup];
                oscar = echo.bind(zulu)(oscar);
                golf = oscar.FormRow;
                oscar = {};
                output = update[sizing];
                output = echo.bind(zulu)(output);
                result = output.intl;
                output = result.string;
                sizing = update[sizing];
                sizing = echo.bind(zulu)(sizing);
                sizing = sizing.t;
                sizing = sizing.brhYaW;
                sizing = output.bind(result)(sizing);
                oscar['label'] = sizing;
                yankee = !yankee;
                if(yankee) { _fun00022_ip = 638; continue _fun00021 }
 628:
                romeo = romeo.afkChannelId;
                yankee = kilo == romeo;
 638:
                oscar['disabled'] = yankee;
                romeo = _closure1_slot26;
                yankee = _closure1_slot0;
                offset = _closure1_slot2;
                offset = offset[backup];
                offset = yankee.bind(zulu)(offset);
                offset = offset.FormRow;
                yankee = offset.Arrow;
                offset = {};
                offset['label'] = foxtrot;
                offset = romeo.bind(zulu)(yankee, offset);
                oscar['trailing'] = offset;
                verify = verify.handleAFKTimeoutChange;
                oscar['onPress'] = verify;
                oscar = options.bind(zulu)(golf, oscar);
                report[2] = oscar;
                entity['children'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            }
        };
        report['value'] = golf;
        entity[8] = report;
        report = {};
        golf = 'renderSystemMessageSettings';
        report['key'] = golf;
        golf = function() { // Original name: value
            _fun00023: for(var _fun00024_ip = 0; ; ) switch(_fun00024_ip) {
 0:
                kilo = this;
                entity = kilo.props;
                output = entity.guild;
                update = entity.canManage;
                report = entity.systemChannel;
                oscar = entity.enableDeadchatPrompt;
                entity = null;
                if(!(entity == report)) { _fun00024_ip = 99; continue _fun00023 }
 37:
                golf = _closure1_slot0;
                options = _closure1_slot2;
                entity = 19;
                mike = options[entity];
                tango = undefined;
                mike = golf.bind(tango)(mike);
                zulu = mike.intl;
                mike = zulu.string;
                entity = options[entity];
                entity = golf.bind(tango)(entity);
                entity = entity.t;
                entity = entity.ibUhoa;
                result = mike.bind(zulu)(entity);
                _fun00024_ip = 145; continue _fun00023;
 99:
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                mike = 31;
                zulu = zulu[mike];
                mike = undefined;
                tango = tango.bind(mike)(zulu);
                zulu = tango.computeChannelName;
                mike = _closure1_slot15;
                entity = _closure1_slot14;
                result = zulu.bind(tango)(report, mike, entity);
 145:
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 32;
                entity = zulu[entity];
                tango = undefined;
                mike = mike.bind(tango)(entity);
                entity = mike.isEligibleForRoleSubscriptionPurchaseSystemMessageSettings;
                entity = entity.bind(mike)(output);
                options = entity;
                if(entity) { _fun00024_ip = 235; continue _fun00023 }
 187:
                zulu = _closure1_slot0;
                report = _closure1_slot2;
                mike = 28;
                mike = report[mike];
                golf = zulu.bind(tango)(mike);
                report = golf.hasFlag;
                zulu = output.systemChannelFlags;
                mike = _closure1_slot22;
                mike = mike.SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATIONS;
                options = report.bind(golf)(zulu, mike);
 235:
                golf = entity;
                if(golf) { _fun00024_ip = 289; continue _fun00023 }
 241:
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 28;
                entity = zulu[entity];
                report = mike.bind(tango)(entity);
                zulu = report.hasFlag;
                mike = output.systemChannelFlags;
                entity = _closure1_slot22;
                entity = entity.SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATION_REPLIES;
                golf = zulu.bind(report)(mike, entity);
 289:
                zulu = _closure1_slot27;
                echo = _closure1_slot0;
                sizing = _closure1_slot2;
                yankee = 29;
                entity = sizing[yankee];
                entity = echo.bind(tango)(entity);
                mike = entity.FormSection;
                entity = {};
                source = 19;
                report = sizing[source];
                report = echo.bind(tango)(report);
                offset = report.intl;
                verify = offset.string;
                report = sizing[source];
                report = echo.bind(tango)(report);
                report = report.t;
                report = report.DP39VF;
                report = verify.bind(offset)(report);
                entity['title'] = report;
                romeo = _closure1_slot26;
                report = sizing[yankee];
                report = echo.bind(tango)(report);
                verify = report.FormHint;
                report = {};
                offset = sizing[source];
                offset = echo.bind(tango)(offset);
                control = offset.intl;
                foxtrot = control.string;
                offset = sizing[source];
                offset = echo.bind(tango)(offset);
                offset = offset.t;
                offset = offset.BT9zR0;
                offset = foxtrot.bind(control)(offset);
                report['children'] = offset;
                report = romeo.bind(tango)(verify, report);
                entity['hint'] = report;
                report = sizing[yankee];
                report = echo.bind(tango)(report);
                verify = report.FormRow;
                report = {};
                offset = sizing[source];
                offset = echo.bind(tango)(offset);
                control = offset.intl;
                foxtrot = control.string;
                offset = sizing[source];
                offset = echo.bind(tango)(offset);
                offset = offset.t;
                offset = offset.GK18KC;
                offset = foxtrot.bind(control)(offset);
                report['label'] = offset;
                offset = !update;
                report['disabled'] = offset;
                offset = sizing[yankee];
                offset = echo.bind(tango)(offset);
                offset = offset.FormRow;
                foxtrot = offset.Arrow;
                offset = {};
                offset['label'] = result;
                offset = romeo.bind(tango)(foxtrot, offset);
                report['trailing'] = offset;
                offset = kilo.handleSystemChannelChange;
                report['onPress'] = offset;
                verify = romeo.bind(tango)(verify, report);
                report = new Array(12);
                report[0] = verify;
                verify = sizing[yankee];
                verify = echo.bind(tango)(verify);
                offset = verify.FormDivider;
                verify = {};
                verify = romeo.bind(tango)(offset, verify);
                report[1] = verify;
                verify = sizing[yankee];
                verify = echo.bind(tango)(verify);
                offset = verify.FormSwitchRow;
                verify = {};
                foxtrot = sizing[source];
                foxtrot = echo.bind(tango)(foxtrot);
                control = foxtrot.intl;
                result = control.string;
                foxtrot = sizing[source];
                foxtrot = echo.bind(tango)(foxtrot);
                foxtrot = foxtrot.t;
                foxtrot = foxtrot.+f0bXV;
                foxtrot = result.bind(control)(foxtrot);
                verify['label'] = foxtrot;
                foxtrot = !update;
                verify['disabled'] = foxtrot;
                result = 28;
                foxtrot = sizing[result];
                config = echo.bind(tango)(foxtrot);
                sequence = config.hasFlag;
                vacuum = output.systemChannelFlags;
                foxtrot = _closure1_slot22;
                control = foxtrot.SUPPRESS_JOIN_NOTIFICATIONS;
                control = sequence.bind(config)(vacuum, control);
                control = !control;
                verify['value'] = control;
                control = kilo.handleSystemJoinMessages;
                verify['onValueChange'] = control;
                verify = romeo.bind(tango)(offset, verify);
                report[2] = verify;
                verify = sizing[yankee];
                verify = echo.bind(tango)(verify);
                offset = verify.FormDivider;
                verify = {};
                verify = romeo.bind(tango)(offset, verify);
                report[3] = verify;
                verify = sizing[yankee];
                verify = echo.bind(tango)(verify);
                offset = verify.FormSwitchRow;
                verify = {};
                control = sizing[source];
                control = echo.bind(tango)(control);
                sequence = control.intl;
                vacuum = sequence.string;
                control = sizing[source];
                control = echo.bind(tango)(control);
                control = control.t;
                control = control.72k7jY;
                control = vacuum.bind(sequence)(control);
                verify['label'] = control;
                control = !update;
                verify['disabled'] = control;
                control = sizing[result];
                config = echo.bind(tango)(control);
                sequence = config.hasFlag;
                vacuum = output.systemChannelFlags;
                control = foxtrot.SUPPRESS_JOIN_NOTIFICATION_REPLIES;
                control = sequence.bind(config)(vacuum, control);
                control = !control;
                verify['value'] = control;
                control = kilo.handleSystemJoinMessageReplies;
                verify['onValueChange'] = control;
                verify = romeo.bind(tango)(offset, verify);
                report[4] = verify;
                verify = sizing[yankee];
                verify = echo.bind(tango)(verify);
                offset = verify.FormDivider;
                verify = {};
                verify = romeo.bind(tango)(offset, verify);
                report[5] = verify;
                verify = sizing[yankee];
                verify = echo.bind(tango)(verify);
                offset = verify.FormSwitchRow;
                verify = {};
                control = sizing[source];
                control = echo.bind(tango)(control);
                sequence = control.intl;
                vacuum = sequence.string;
                control = sizing[source];
                control = echo.bind(tango)(control);
                control = control.t;
                control = control.2L8NCA;
                control = vacuum.bind(sequence)(control);
                verify['label'] = control;
                control = !update;
                verify['disabled'] = control;
                control = sizing[result];
                config = echo.bind(tango)(control);
                sequence = config.hasFlag;
                vacuum = output.systemChannelFlags;
                control = foxtrot.SUPPRESS_PREMIUM_SUBSCRIPTIONS;
                control = sequence.bind(config)(vacuum, control);
                control = !control;
                verify['value'] = control;
                control = kilo.handleSystemPremiumSubscribe;
                verify['onValueChange'] = control;
                verify = romeo.bind(tango)(offset, verify);
                report[6] = verify;
                verify = sizing[yankee];
                verify = echo.bind(tango)(verify);
                offset = verify.FormDivider;
                verify = {};
                verify = romeo.bind(tango)(offset, verify);
                report[7] = verify;
                verify = sizing[yankee];
                verify = echo.bind(tango)(verify);
                offset = verify.FormSwitchRow;
                verify = {};
                control = sizing[source];
                control = echo.bind(tango)(control);
                sequence = control.intl;
                vacuum = sequence.string;
                control = sizing[source];
                control = echo.bind(tango)(control);
                control = control.t;
                control = control.NvnW+f;
                control = vacuum.bind(sequence)(control);
                verify['label'] = control;
                control = !update;
                verify['disabled'] = control;
                sizing = sizing[result];
                control = echo.bind(tango)(sizing);
                echo = control.hasFlag;
                sizing = output.systemChannelFlags;
                foxtrot = foxtrot.SUPPRESS_GUILD_REMINDER_NOTIFICATIONS;
                foxtrot = echo.bind(control)(sizing, foxtrot);
                foxtrot = !foxtrot;
                verify['value'] = foxtrot;
                foxtrot = kilo.handleSystemReminderNotifications;
                verify['onValueChange'] = foxtrot;
                verify = romeo.bind(tango)(offset, verify);
                report[8] = verify;
                if(!options) { _fun00024_ip = 1453; continue _fun00023 }
 1251:
                romeo = _closure1_slot27;
                offset = _closure1_slot28;
                verify = {};
                control = _closure1_slot26;
                sequence = _closure1_slot0;
                vacuum = _closure1_slot2;
                foxtrot = vacuum[yankee];
                foxtrot = sequence.bind(tango)(foxtrot);
                sizing = foxtrot.FormDivider;
                foxtrot = {};
                sizing = control.bind(tango)(sizing, foxtrot);
                foxtrot = new Array(2);
                foxtrot[0] = sizing;
                sizing = vacuum[yankee];
                sizing = sequence.bind(tango)(sizing);
                echo = sizing.FormSwitchRow;
                sizing = {};
                config = vacuum[source];
                config = sequence.bind(tango)(config);
                context = config.intl;
                record = context.string;
                config = vacuum[source];
                config = sequence.bind(tango)(config);
                config = config.t;
                config = config.54n19f;
                config = record.bind(context)(config);
                sizing['label'] = config;
                config = !update;
                sizing['disabled'] = config;
                vacuum = vacuum[result];
                record = sequence.bind(tango)(vacuum);
                config = record.hasFlag;
                sequence = output.systemChannelFlags;
                vacuum = _closure1_slot22;
                vacuum = vacuum.SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATIONS;
                vacuum = config.bind(record)(sequence, vacuum);
                vacuum = !vacuum;
                sizing['value'] = vacuum;
                vacuum = kilo.handleSystemGuildRoleSubscriptionPurchaseMessages;
                sizing['onValueChange'] = vacuum;
                sizing = control.bind(tango)(echo, sizing);
                foxtrot[1] = sizing;
                verify['children'] = foxtrot;
                options = romeo.bind(tango)(offset, verify);
 1453:
                report[9] = options;
                if(!golf) { _fun00024_ip = 1665; continue _fun00023 }
 1463:
                offset = _closure1_slot27;
                verify = _closure1_slot28;
                options = {};
                echo = _closure1_slot26;
                vacuum = _closure1_slot0;
                control = _closure1_slot2;
                romeo = control[yankee];
                romeo = vacuum.bind(tango)(romeo);
                foxtrot = romeo.FormDivider;
                romeo = {};
                foxtrot = echo.bind(tango)(foxtrot, romeo);
                romeo = new Array(2);
                romeo[0] = foxtrot;
                foxtrot = control[yankee];
                foxtrot = vacuum.bind(tango)(foxtrot);
                sizing = foxtrot.FormSwitchRow;
                foxtrot = {};
                sequence = control[source];
                sequence = vacuum.bind(tango)(sequence);
                record = sequence.intl;
                config = record.string;
                sequence = control[source];
                sequence = vacuum.bind(tango)(sequence);
                sequence = sequence.t;
                sequence = sequence.IhF5d3;
                sequence = config.bind(record)(sequence);
                foxtrot['label'] = sequence;
                sequence = !update;
                foxtrot['disabled'] = sequence;
                control = control[result];
                config = vacuum.bind(tango)(control);
                sequence = config.hasFlag;
                vacuum = output.systemChannelFlags;
                control = _closure1_slot22;
                control = control.SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATION_REPLIES;
                control = sequence.bind(config)(vacuum, control);
                control = !control;
                foxtrot['value'] = control;
                control = kilo.handleSystemGuildRoleSubscriptionPurchaseMessageReplies;
                foxtrot['onValueChange'] = control;
                foxtrot = echo.bind(tango)(sizing, foxtrot);
                romeo[1] = foxtrot;
                options['children'] = romeo;
                golf = offset.bind(tango)(verify, options);
 1665:
                report[10] = golf;
                if(!oscar) { _fun00024_ip = 1906; continue _fun00023 }
 1675:
                verify = _closure1_slot27;
                options = _closure1_slot28;
                golf = {};
                foxtrot = _closure1_slot26;
                echo = _closure1_slot0;
                sizing = _closure1_slot2;
                offset = sizing[yankee];
                offset = echo.bind(tango)(offset);
                romeo = offset.FormDivider;
                offset = {};
                romeo = foxtrot.bind(tango)(romeo, offset);
                offset = new Array(2);
                offset[0] = romeo;
                yankee = sizing[yankee];
                yankee = echo.bind(tango)(yankee);
                romeo = yankee.FormSwitchRow;
                yankee = {};
                control = sizing[source];
                control = echo.bind(tango)(control);
                vacuum = control.intl;
                control = vacuum.string;
                source = sizing[source];
                source = echo.bind(tango)(source);
                source = source.t;
                source = source.3yOX19;
                source = control.bind(vacuum)(source);
                yankee['label'] = source;
                update = !update;
                yankee['disabled'] = update;
                result = sizing[result];
                update = echo.bind(tango)(result);
                echo = update.hasFlag;
                result = output.systemChannelFlags;
                output = _closure1_slot22;
                output = output.SUPPRESS_CHANNEL_PROMPT_DEADCHAT;
                output = echo.bind(update)(result, output);
                output = !output;
                yankee['value'] = output;
                kilo = kilo.handleSystemGuildChannelPromptDeadchatMessages;
                yankee['onValueChange'] = kilo;
                kilo = _closure1_slot1;
                backup = 33;
                backup = sizing[backup];
                kilo = kilo.bind(tango)(backup);
                backup = {};
                backup = foxtrot.bind(tango)(kilo, backup);
                yankee['trailing'] = backup;
                yankee = foxtrot.bind(tango)(romeo, yankee);
                offset[1] = yankee;
                golf['children'] = offset;
                oscar = verify.bind(tango)(options, golf);
 1906:
                report[11] = oscar;
                entity['children'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            }
        };
        report['value'] = golf;
        entity[9] = report;
        report = {};
        golf = 'renderDefaultNotificationSettings';
        report['key'] = golf;
        golf = function() { // Original name: value
            _fun00025: for(var _fun00026_ip = 0; ; ) switch(_fun00026_ip) {
 0:
                entity = this;
                var _closure3_slot0 = entity;
                entity = entity.props;
                options = entity.guild;
                yankee = entity.canManage;
                kilo = entity.guildMemberCount;
                tango = _closure1_slot26;
                output = _closure1_slot0;
                romeo = _closure1_slot2;
                report = 29;
                entity = romeo[report];
                zulu = undefined;
                entity = output.bind(zulu)(entity);
                mike = entity.FormSection;
                entity = {};
                backup = 19;
                oscar = romeo[backup];
                oscar = output.bind(zulu)(oscar);
                foxtrot = oscar.intl;
                offset = foxtrot.string;
                oscar = romeo[backup];
                oscar = output.bind(zulu)(oscar);
                oscar = oscar.t;
                oscar = oscar.23TVho;
                oscar = offset.bind(foxtrot)(oscar);
                entity['title'] = oscar;
                report = romeo[report];
                report = output.bind(zulu)(report);
                oscar = report.FormHint;
                report = {};
                offset = romeo[backup];
                offset = output.bind(zulu)(offset);
                sizing = offset.intl;
                foxtrot = sizing.string;
                offset = romeo[backup];
                offset = output.bind(zulu)(offset);
                offset = offset.t;
                offset = offset.PA2MZm;
                offset = foxtrot.bind(sizing)(offset);
                report['children'] = offset;
                report = tango.bind(zulu)(oscar, report);
                entity['hint'] = report;
                oscar = _closure1_slot1;
                offset = 34;
                report = romeo[offset];
                oscar = oscar.bind(zulu)(report);
                report = {};
                options = options.defaultMessageNotifications;
                report['value'] = options;
                options = {};
                foxtrot = _closure1_slot17;
                foxtrot = foxtrot.ALL_MESSAGES;
                options['value'] = foxtrot;
                foxtrot = romeo[backup];
                foxtrot = output.bind(zulu)(foxtrot);
                sizing = foxtrot.intl;
                foxtrot = sizing.string;
                romeo = romeo[backup];
                romeo = output.bind(zulu)(romeo);
                romeo = romeo.t;
                romeo = romeo.n/bTaW;
                romeo = foxtrot.bind(sizing)(romeo);
                options['name'] = romeo;
                romeo = null;
                foxtrot = romeo != kilo;
                romeo = undefined;
                if(!foxtrot) { _fun00026_ip = 369; continue _fun00025 }
 302:
                foxtrot = _closure1_slot23;
                foxtrot = kilo >= foxtrot;
                romeo = undefined;
                if(!foxtrot) { _fun00026_ip = 369; continue _fun00025 }
 315:
                output = _closure1_slot0;
                foxtrot = _closure1_slot2;
                kilo = foxtrot[backup];
                kilo = output.bind(zulu)(kilo);
                sizing = kilo.intl;
                kilo = sizing.string;
                foxtrot = foxtrot[backup];
                foxtrot = output.bind(zulu)(foxtrot);
                foxtrot = foxtrot.t;
                foxtrot = foxtrot.L+P4t7;
                romeo = kilo.bind(sizing)(foxtrot);
 369:
                options['desc'] = romeo;
                romeo = new Array(2);
                romeo[0] = options;
                foxtrot = {};
                options = _closure1_slot17;
                options = options.ONLY_MENTIONS;
                foxtrot['value'] = options;
                kilo = _closure1_slot0;
                options = _closure1_slot2;
                sizing = options[backup];
                sizing = kilo.bind(zulu)(sizing);
                output = sizing.intl;
                sizing = output.format;
                backup = options[backup];
                backup = kilo.bind(zulu)(backup);
                backup = backup.t;
                kilo = backup.L2hmY2;
                backup = {};
                backup = sizing.bind(output)(kilo, backup);
                foxtrot['name'] = backup;
                romeo[1] = foxtrot;
                report['options'] = romeo;
                yankee = !yankee;
                report['disabled'] = yankee;
                verify = _closure1_slot1;
                options = options[offset];
                options = verify.bind(zulu)(options);
                options = options.Sizes;
                options = options.LARGE;
                report['size'] = options;
                golf = function(argFoo) { // Original name: onChange
                    entity = argFoo;
                    zulu = entity.value;
                    mike = _closure3_slot0;
                    entity = mike.handleDefaultNotificationsChange;
                    entity = entity.bind(mike)(zulu);
                    return entity;
                };
                report['onChange'] = golf;
                report = tango.bind(zulu)(oscar, report);
                entity['children'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            }
        };
        report['value'] = golf;
        entity[10] = report;
        report = {};
        golf = 'renderSplash';
        report['key'] = golf;
        golf = function() { // Original name: value
            _fun00027: for(var _fun00028_ip = 0; ; ) switch(_fun00028_ip) {
 0:
                foxtrot = this;
                mike = _closure1_slot29;
                entity = foxtrot.context;
                report = undefined;
                romeo = mike.bind(report)(entity);
                entity = foxtrot.props;
                kilo = entity.guild;
                result = entity.canManage;
                mike = kilo.hasFeature;
                entity = _closure1_slot20;
                entity = entity.INVITE_SPLASH;
                mike = mike.bind(kilo)(entity);
                entity = null;
                if(!mike) { _fun00028_ip = 503; continue _fun00027 }
 67:
                tango = _closure1_slot27;
                zulu = _closure1_slot8;
                mike = {};
                oscar = romeo.redesignHorizontalPadding;
                mike['style'] = oscar;
                verify = _closure1_slot26;
                yankee = _closure1_slot0;
                output = _closure1_slot2;
                oscar = 35;
                oscar = output[oscar];
                oscar = yankee.bind(report)(oscar);
                golf = oscar.TableRowGroupTitle;
                oscar = {};
                offset = 19;
                options = output[offset];
                options = yankee.bind(report)(options);
                echo = options.intl;
                sizing = echo.string;
                options = output[offset];
                options = yankee.bind(report)(options);
                options = options.t;
                options = options.tzGY0t;
                options = sizing.bind(echo)(options);
                oscar['title'] = options;
                golf = verify.bind(report)(golf, oscar);
                oscar = new Array(4);
                oscar[0] = golf;
                sizing = _closure1_slot1;
                golf = 36;
                golf = output[golf];
                options = sizing.bind(report)(golf);
                golf = {};
                result = !result;
                golf['disabled'] = result;
                golf['guild'] = kilo;
                kilo = kilo.splash;
                golf['rawSource'] = kilo;
                kilo = function(argFoo, argBar) { // Original name: getSource
                    tango = argFoo;
                    zulu = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 37;
                    mike = mike[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.getGuildSplashSource;
                    entity = {};
                    report = tango.id;
                    entity['id'] = report;
                    tango = tango.splash;
                    entity['splash'] = tango;
                    tango = argBar;
                    entity['size'] = tango;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                golf['getSource'] = kilo;
                foxtrot = foxtrot.handleSplashChange;
                golf['onChooseAsset'] = foxtrot;
                foxtrot = {'width': 1920, 'height': 1080};
                golf['size'] = foxtrot;
                golf = verify.bind(report)(options, golf);
                oscar[1] = golf;
                golf = 29;
                options = output[golf];
                options = yankee.bind(report)(options);
                foxtrot = options.FormHint;
                options = {};
                romeo = romeo.hint;
                options['style'] = romeo;
                romeo = true;
                options['inset'] = romeo;
                kilo = output[offset];
                kilo = yankee.bind(report)(kilo);
                echo = kilo.intl;
                result = echo.string;
                kilo = output[offset];
                kilo = yankee.bind(report)(kilo);
                kilo = kilo.t;
                kilo = kilo.FEFkkJ;
                kilo = result.bind(echo)(kilo);
                options['children'] = kilo;
                options = verify.bind(report)(foxtrot, options);
                oscar[2] = options;
                golf = output[golf];
                golf = yankee.bind(report)(golf);
                options = golf.FormHint;
                golf = {};
                golf['inset'] = romeo;
                romeo = output[offset];
                romeo = yankee.bind(report)(romeo);
                foxtrot = romeo.intl;
                romeo = foxtrot.format;
                offset = output[offset];
                offset = yankee.bind(report)(offset);
                offset = offset.t;
                yankee = offset.ZYA9PT;
                offset = {};
                kilo = 38;
                kilo = output[kilo];
                sizing = sizing.bind(report)(kilo);
                kilo = sizing.getArticleURL;
                backup = _closure1_slot21;
                backup = backup.GUILD_INVITE_SPLASH;
                backup = kilo.bind(sizing)(backup);
                offset['articleURL'] = backup;
                offset = romeo.bind(foxtrot)(yankee, offset);
                golf['children'] = offset;
                golf = verify.bind(report)(options, golf);
                oscar[3] = golf;
                mike['children'] = oscar;
                entity = tango.bind(report)(zulu, mike);
 503:
                return entity;
            }
        };
        report['value'] = golf;
        entity[11] = report;
        report = {};
        golf = 'renderSummaries';
        report['key'] = golf;
        golf = function() { // Original name: value
            _fun00029: for(var _fun00030_ip = 0; ; ) switch(_fun00030_ip) {
 0:
                golf = this;
                entity = golf.props;
                foxtrot = entity.guild;
                offset = entity.canManage;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 39;
                entity = zulu[entity];
                tango = undefined;
                zulu = mike.bind(tango)(entity);
                mike = zulu.canGuildUseConversationSummaries;
                entity = false;
                entity = mike.bind(zulu)(foxtrot, entity);
                if(entity) { _fun00030_ip = 65; continue _fun00029 }
 61:
                entity = null;
                return entity;
 65:
                sizing = _closure1_slot0;
                verify = _closure1_slot2;
                romeo = 19;
                entity = verify[romeo];
                entity = sizing.bind(tango)(entity);
                report = entity.intl;
                zulu = report.format;
                entity = verify[romeo];
                entity = sizing.bind(tango)(entity);
                entity = entity.t;
                mike = entity.c6Cy/v;
                entity = {};
                options = _closure1_slot1;
                oscar = 38;
                oscar = verify[oscar];
                kilo = options.bind(tango)(oscar);
                backup = kilo.getArticleURL;
                oscar = _closure1_slot21;
                oscar = oscar.CONVERSATION_SUMMARIES;
                oscar = backup.bind(kilo)(oscar);
                entity['helpdeskArticle'] = oscar;
                kilo = zulu.bind(report)(mike, entity);
                zulu = _closure1_slot26;
                report = 29;
                entity = verify[report];
                entity = sizing.bind(tango)(entity);
                mike = entity.FormSection;
                entity = {};
                oscar = verify[romeo];
                oscar = sizing.bind(tango)(oscar);
                output = oscar.intl;
                backup = output.string;
                oscar = verify[romeo];
                oscar = sizing.bind(tango)(oscar);
                oscar = oscar.t;
                oscar = oscar.XPDhcX;
                oscar = backup.bind(output)(oscar);
                entity['title'] = oscar;
                oscar = verify[report];
                oscar = sizing.bind(tango)(oscar);
                backup = oscar.FormHint;
                oscar = {};
                oscar['children'] = kilo;
                oscar = zulu.bind(tango)(backup, oscar);
                entity['hint'] = oscar;
                report = verify[report];
                report = sizing.bind(tango)(report);
                oscar = report.FormSwitchRow;
                report = {};
                backup = verify[romeo];
                backup = sizing.bind(tango)(backup);
                kilo = backup.intl;
                backup = kilo.string;
                romeo = verify[romeo];
                romeo = sizing.bind(tango)(romeo);
                romeo = romeo.t;
                romeo = romeo.vmEDQk;
                romeo = backup.bind(kilo)(romeo);
                report['label'] = romeo;
                romeo = foxtrot.hasFeature;
                yankee = _closure1_slot20;
                yankee = yankee.SUMMARIES_ENABLED_BY_USER;
                yankee = romeo.bind(foxtrot)(yankee);
                report['value'] = yankee;
                offset = !offset;
                report['disabled'] = offset;
                golf = golf.handleSummariesToggle;
                report['onValueChange'] = golf;
                golf = 33;
                golf = verify[golf];
                options = options.bind(tango)(golf);
                golf = {};
                golf = zulu.bind(tango)(options, golf);
                report['trailing'] = golf;
                report = zulu.bind(tango)(oscar, report);
                entity['children'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            }
        };
        report['value'] = golf;
        entity[12] = report;
        report = {};
        golf = 'renderDescription';
        report['key'] = golf;
        golf = function() { // Original name: value
            _fun00031: for(var _fun00032_ip = 0; ; ) switch(_fun00032_ip) {
 0:
                verify = this;
                entity = verify.props;
                foxtrot = entity.guild;
                offset = entity.canManage;
                zulu = foxtrot.hasFeature;
                entity = _closure1_slot20;
                entity = entity.VERIFIED;
                entity = zulu.bind(foxtrot)(entity);
                if(entity) { _fun00032_ip = 75; continue _fun00031 }
 46:
                zulu = foxtrot.hasFeature;
                entity = _closure1_slot20;
                entity = entity.DISCOVERABLE;
                zulu = zulu.bind(foxtrot)(entity);
                entity = null;
                if(!zulu) { _fun00032_ip = 368; continue _fun00031 }
 75:
                report = _closure1_slot26;
                yankee = _closure1_slot0;
                romeo = _closure1_slot2;
                oscar = 29;
                mike = romeo[oscar];
                tango = undefined;
                mike = yankee.bind(tango)(mike);
                zulu = mike.FormSection;
                mike = {};
                options = 19;
                golf = romeo[options];
                golf = yankee.bind(tango)(golf);
                kilo = golf.intl;
                backup = kilo.string;
                golf = romeo[options];
                golf = yankee.bind(tango)(golf);
                golf = golf.t;
                golf = golf.RSfm+v;
                golf = backup.bind(kilo)(golf);
                mike['title'] = golf;
                golf = romeo[oscar];
                golf = yankee.bind(tango)(golf);
                backup = golf.FormHint;
                golf = {};
                kilo = romeo[options];
                kilo = yankee.bind(tango)(kilo);
                output = kilo.intl;
                sizing = output.string;
                kilo = romeo[options];
                kilo = yankee.bind(tango)(kilo);
                kilo = kilo.t;
                kilo = kilo./B6PR0;
                kilo = sizing.bind(output)(kilo);
                golf['children'] = kilo;
                golf = report.bind(tango)(backup, golf);
                mike['hint'] = golf;
                oscar = romeo[oscar];
                oscar = yankee.bind(tango)(oscar);
                golf = oscar.FormInput;
                oscar = {'showCharactersRemaining': true, 'maxLength': 120, 'showTopContainer': false, 'value': null, 'multiline': true, 'disabled': null, 'numberOfLines': 4, 'onChange': null, 'autoCorrect': true};
                foxtrot = foxtrot.description;
                oscar['value'] = foxtrot;
                offset = !offset;
                oscar['disabled'] = offset;
                verify = verify.handleDescriptionChange;
                oscar['onChange'] = verify;
                verify = romeo[options];
                verify = yankee.bind(tango)(verify);
                offset = verify.intl;
                verify = offset.string;
                options = romeo[options];
                options = yankee.bind(tango)(options);
                options = options.t;
                options = options.Nvfows;
                options = verify.bind(offset)(options);
                oscar['placeholder'] = options;
                oscar = report.bind(tango)(golf, oscar);
                mike['children'] = oscar;
                entity = report.bind(tango)(zulu, mike);
 368:
                return entity;
            }
        };
        report['value'] = golf;
        entity[13] = report;
        report = {};
        golf = 'renderBanner';
        report['key'] = golf;
        golf = function() { // Original name: value
            _fun00033: for(var _fun00034_ip = 0; ; ) switch(_fun00034_ip) {
 0:
                romeo = this;
                mike = _closure1_slot29;
                entity = romeo.context;
                tango = undefined;
                yankee = mike.bind(tango)(entity);
                entity = romeo.props;
                backup = entity.guild;
                output = entity.canManage;
                mike = backup.hasFeature;
                entity = _closure1_slot20;
                entity = entity.BANNER;
                entity = mike.bind(backup)(entity);
                if(entity) { _fun00034_ip = 66; continue _fun00033 }
 62:
                entity = null;
                return entity;
 66:
                zulu = _closure1_slot27;
                mike = _closure1_slot8;
                entity = {};
                report = yankee.redesignHorizontalPadding;
                entity['style'] = report;
                options = _closure1_slot26;
                offset = _closure1_slot0;
                sizing = _closure1_slot2;
                report = 35;
                report = sizing[report];
                report = offset.bind(tango)(report);
                oscar = report.TableRowGroupTitle;
                report = {};
                verify = 19;
                golf = sizing[verify];
                golf = offset.bind(tango)(golf);
                result = golf.intl;
                kilo = result.string;
                golf = sizing[verify];
                golf = offset.bind(tango)(golf);
                golf = golf.t;
                golf = golf.0r0AzM;
                golf = kilo.bind(result)(golf);
                report['title'] = golf;
                oscar = options.bind(tango)(oscar, report);
                report = new Array(4);
                report[0] = oscar;
                kilo = _closure1_slot1;
                oscar = 36;
                oscar = sizing[oscar];
                golf = kilo.bind(tango)(oscar);
                oscar = {};
                output = !output;
                oscar['disabled'] = output;
                oscar['guild'] = backup;
                backup = backup.banner;
                oscar['rawSource'] = backup;
                backup = function(argFoo) { // Original name: getSource
                    tango = argFoo;
                    zulu = tango.hasFeature;
                    mike = _closure1_slot20;
                    mike = mike.ANIMATED_BANNER;
                    zulu = zulu.bind(tango)(mike);
                    report = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 37;
                    mike = mike[entity];
                    entity = undefined;
                    mike = report.bind(entity)(mike);
                    entity = mike.getGuildBannerSource;
                    entity = entity.bind(mike)(tango, zulu);
                    return entity;
                };
                oscar['getSource'] = backup;
                romeo = romeo.handleBannerChange;
                oscar['onChooseAsset'] = romeo;
                romeo = {'width': 960, 'height': 540};
                oscar['size'] = romeo;
                oscar = options.bind(tango)(golf, oscar);
                report[1] = oscar;
                oscar = 29;
                golf = sizing[oscar];
                golf = offset.bind(tango)(golf);
                romeo = golf.FormHint;
                golf = {};
                yankee = yankee.hint;
                golf['style'] = yankee;
                yankee = true;
                golf['inset'] = yankee;
                backup = sizing[verify];
                backup = offset.bind(tango)(backup);
                result = backup.intl;
                output = result.string;
                backup = sizing[verify];
                backup = offset.bind(tango)(backup);
                backup = backup.t;
                backup = backup.UfqmIS;
                backup = output.bind(result)(backup);
                golf['children'] = backup;
                golf = options.bind(tango)(romeo, golf);
                report[2] = golf;
                oscar = sizing[oscar];
                oscar = offset.bind(tango)(oscar);
                golf = oscar.FormHint;
                oscar = {};
                oscar['inset'] = yankee;
                yankee = sizing[verify];
                yankee = offset.bind(tango)(yankee);
                romeo = yankee.intl;
                yankee = romeo.format;
                verify = sizing[verify];
                verify = offset.bind(tango)(verify);
                verify = verify.t;
                offset = verify.vBcWUl;
                verify = {};
                backup = 38;
                backup = sizing[backup];
                kilo = kilo.bind(tango)(backup);
                backup = kilo.getArticleURL;
                foxtrot = _closure1_slot21;
                foxtrot = foxtrot.GUILD_BANNER_SPLASH;
                foxtrot = backup.bind(kilo)(foxtrot);
                verify['articleURL'] = foxtrot;
                verify = yankee.bind(romeo)(offset, verify);
                oscar['children'] = verify;
                oscar = options.bind(tango)(golf, oscar);
                report[3] = oscar;
                entity['children'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            }
        };
        report['value'] = golf;
        entity[14] = report;
        report = {};
        golf = 'renderDeleteGuild';
        report['key'] = golf;
        golf = function() { // Original name: value
            _fun00035: for(var _fun00036_ip = 0; ; ) switch(_fun00036_ip) {
 0:
                options = this;
                entity = options.props;
                oscar = entity.guild;
                zulu = _closure1_slot15;
                entity = zulu.getCurrentUser;
                report = entity.bind(zulu)();
                tango = null;
                zulu = tango != report;
                entity = null;
                if(!zulu) { _fun00036_ip = 201; continue _fun00035 }
 43:
                zulu = oscar.isOwnerWithRequiredMfaLevel;
                zulu = zulu.bind(oscar)(report);
                entity = null;
                if(!zulu) { _fun00036_ip = 201; continue _fun00035 }
 62:
                report = _closure1_slot26;
                romeo = _closure1_slot0;
                foxtrot = _closure1_slot2;
                mike = 29;
                mike = foxtrot[mike];
                tango = undefined;
                mike = romeo.bind(tango)(mike);
                zulu = mike.FormSection;
                mike = {};
                oscar = 40;
                oscar = foxtrot[oscar];
                oscar = romeo.bind(tango)(oscar);
                golf = oscar.TableRow;
                oscar = {};
                verify = 'danger';
                oscar['variant'] = verify;
                verify = 19;
                offset = foxtrot[verify];
                offset = romeo.bind(tango)(offset);
                yankee = offset.intl;
                offset = yankee.string;
                verify = foxtrot[verify];
                verify = romeo.bind(tango)(verify);
                verify = verify.t;
                verify = verify.l3hWPz;
                verify = offset.bind(yankee)(verify);
                oscar['label'] = verify;
                options = options.handleDeleteServer;
                oscar['onPress'] = options;
                oscar = report.bind(tango)(golf, oscar);
                mike['children'] = oscar;
                entity = report.bind(tango)(zulu, mike);
 201:
                return entity;
            }
        };
        report['value'] = golf;
        entity[15] = report;
        report = {};
        golf = 'render';
        report['key'] = golf;
        oscar = function() { // Original name: value
            oscar = this;
            mike = _closure1_slot29;
            entity = oscar.context;
            tango = undefined;
            options = mike.bind(tango)(entity);
            zulu = _closure1_slot27;
            mike = _closure1_slot28;
            entity = {};
            golf = _closure1_slot0;
            verify = _closure1_slot2;
            report = 29;
            report = verify[report];
            report = golf.bind(tango)(report);
            golf = report.Form;
            report = {};
            options = options.overview;
            report['style'] = options;
            options = oscar.props;
            options = options.contentContainerStyle;
            report['contentContainerStyle'] = options;
            options = oscar.renderGuildName;
            verify = options.bind(oscar)();
            options = new Array(9);
            options[0] = verify;
            verify = oscar.renderSummaries;
            verify = verify.bind(oscar)();
            options[1] = verify;
            verify = oscar.renderAFKSettings;
            verify = verify.bind(oscar)();
            options[2] = verify;
            verify = oscar.renderSystemMessageSettings;
            verify = verify.bind(oscar)();
            options[3] = verify;
            verify = oscar.renderDefaultNotificationSettings;
            verify = verify.bind(oscar)();
            options[4] = verify;
            verify = oscar.renderDescription;
            verify = verify.bind(oscar)();
            options[5] = verify;
            verify = oscar.renderBanner;
            verify = verify.bind(oscar)();
            options[6] = verify;
            verify = oscar.renderSplash;
            verify = verify.bind(oscar)();
            options[7] = verify;
            verify = oscar.renderDeleteGuild;
            verify = verify.bind(oscar)();
            options[8] = verify;
            report['children'] = options;
            golf = zulu.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            oscar = oscar.props;
            oscar = oscar.navScrim;
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        };
        report['value'] = oscar;
        entity[16] = report;
        entity = mike.bind(zulu)(tango, entity);
        return entity;
    };
    golf = tango.bind(entity)(golf);
    var _closure1_slot31 = golf;
    tango = 41;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ThemeContext;
    golf['contextType'] = tango;
    tango = 46;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_settings/native/GuildSettingsModalOverview.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ConnectedGuildSettingsModalOverview
        _fun00037: for(var _fun00038_ip = 0; ; ) switch(_fun00038_ip) {
 0:
            mike = argFoo;
            offset = mike.contentContainerStyle;
            verify = mike.navScrim;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            tango = 42;
            tango = zulu[tango];
            report = undefined;
            golf = mike.bind(report)(tango);
            tango = golf.useNavigation;
            echo = tango.bind(golf)();
            tango = 43;
            golf = zulu[tango];
            foxtrot = mike.bind(report)(golf);
            romeo = foxtrot.useStateFromStoresObject;
            golf = _closure1_slot16;
            yankee = new Array(1);
            yankee[0] = golf;
            options = function() {
                entity = {};
                zulu = _closure1_slot16;
                mike = zulu.getGuild;
                mike = mike.bind(zulu)();
                entity['guild'] = mike;
                mike = zulu.isSubmitting;
                mike = mike.bind(zulu)();
                entity['submitting'] = mike;
                mike = zulu.hasChanges;
                mike = mike.bind(zulu)();
                entity['hasChanges'] = mike;
                mike = zulu.getErrors;
                mike = mike.bind(zulu)();
                entity['errors'] = mike;
                return entity;
            };
            golf = new Array(0);
            golf = romeo.bind(foxtrot)(yankee, options, golf);
            output = golf.submitting;
            sizing = golf.hasChanges;
            yankee = golf.errors;
            result = golf.guild;
            var _closure2_slot0 = result;
            golf = zulu[tango];
            backup = mike.bind(report)(golf);
            foxtrot = backup.useStateFromStores;
            golf = _closure1_slot13;
            romeo = new Array(1);
            romeo[0] = golf;
            options = new Array(1);
            options[0] = result;
            golf = function() {
                tango = _closure1_slot13;
                zulu = tango.can;
                entity = _closure1_slot19;
                mike = entity.MANAGE_GUILD;
                entity = _closure2_slot0;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            kilo = foxtrot.bind(backup)(romeo, golf, options);
            golf = zulu[tango];
            backup = mike.bind(report)(golf);
            foxtrot = backup.useStateFromStores;
            golf = _closure1_slot9;
            romeo = new Array(1);
            romeo[0] = golf;
            options = function() {
                _fun00039: for(var _fun00040_ip = 0; ; ) switch(_fun00040_ip) {
 0:
                    zulu = _closure1_slot9;
                    mike = zulu.getChannel;
                    report = _closure2_slot0;
                    entity = null;
                    report = entity == report;
                    entity = undefined;
                    if(report) { _fun00040_ip = 40; continue _fun00039 }
 30:
                    tango = _closure2_slot0;
                    entity = tango.afkChannelId;
 40:
                    entity = mike.bind(zulu)(entity);
                    return entity;
                }
            };
            backup = foxtrot.bind(backup)(romeo, options);
            options = zulu[tango];
            foxtrot = mike.bind(report)(options);
            romeo = foxtrot.useStateFromStores;
            options = new Array(1);
            options[0] = golf;
            golf = function() {
                _fun00041: for(var _fun00042_ip = 0; ; ) switch(_fun00042_ip) {
 0:
                    zulu = _closure1_slot9;
                    mike = zulu.getChannel;
                    report = _closure2_slot0;
                    entity = null;
                    report = entity == report;
                    entity = undefined;
                    if(report) { _fun00042_ip = 40; continue _fun00041 }
 30:
                    tango = _closure2_slot0;
                    entity = tango.systemChannelId;
 40:
                    entity = mike.bind(zulu)(entity);
                    return entity;
                }
            };
            foxtrot = romeo.bind(foxtrot)(options, golf);
            tango = zulu[tango];
            options = mike.bind(report)(tango);
            golf = options.useStateFromStores;
            romeo = _closure1_slot12;
            tango = new Array(1);
            tango[0] = romeo;
            entity = function() {
                _fun00043: for(var _fun00044_ip = 0; ; ) switch(_fun00044_ip) {
 0:
                    zulu = _closure1_slot12;
                    mike = zulu.getMemberCount;
                    report = _closure2_slot0;
                    entity = null;
                    report = entity == report;
                    entity = undefined;
                    if(report) { _fun00044_ip = 40; continue _fun00043 }
 31:
                    tango = _closure2_slot0;
                    entity = tango.id;
 40:
                    entity = mike.bind(zulu)(entity);
                    return entity;
                }
            };
            romeo = golf.bind(options)(tango, entity);
            entity = 44;
            entity = zulu[entity];
            entity = mike.bind(report)(entity);
            golf = entity.SimpleDeadchatPromptExperiment;
            tango = golf.useExperiment;
            zulu = {};
            entity = null;
            options = entity == result;
            mike = undefined;
            if(options) { _fun00038_ip = 330; continue _fun00037 }
 325:
            mike = result.id;
 330:
            if(!(entity == mike)) { _fun00038_ip = 338; continue _fun00037 }
 334:
            mike = _closure1_slot24;
 338:
            zulu['guildId'] = mike;
            mike = 'guild_settings_mobile';
            zulu['location'] = mike;
            mike = {};
            options = entity == result;
            mike['disable'] = options;
            options = true;
            mike['autoTrackExposure'] = options;
            mike = tango.bind(golf)(zulu, mike);
            options = mike.enableDeadchat;
            mike = entity != result;
            entity = null;
            if(!mike) { _fun00038_ip = 504; continue _fun00037 }
 391:
            tango = _closure1_slot26;
            zulu = _closure1_slot0;
            golf = _closure1_slot2;
            mike = 45;
            mike = golf[mike];
            mike = zulu.bind(report)(mike);
            zulu = mike.RedesignCompat;
            mike = {};
            golf = _closure1_slot31;
            oscar = {};
            oscar['navigation'] = echo;
            oscar['guild'] = result;
            oscar['submitting'] = output;
            oscar['hasChanges'] = sizing;
            oscar['canManage'] = kilo;
            oscar['afkChannel'] = backup;
            oscar['systemChannel'] = foxtrot;
            oscar['guildMemberCount'] = romeo;
            oscar['errors'] = yankee;
            oscar['contentContainerStyle'] = offset;
            oscar['navScrim'] = verify;
            oscar['enableDeadchatPrompt'] = options;
            oscar = tango.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 504:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();