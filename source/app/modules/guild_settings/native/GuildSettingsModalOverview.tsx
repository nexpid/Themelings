// app/modules/guild_settings/native/GuildSettingsModalOverview.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: _isNativeReflectConstruct
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
 2: // try_start_0
            michal = global;
            zuuluu = michal.Boolean;
            zuuluu = zuuluu.prototype;
            tangon = zuuluu.valueOf;
            zuuluu = tangon.call;
            option = michal.Reflect;
            golfie = option.construct;
            oscard = michal.Boolean;
            report = new Array(0);
            michal = function() {
                entity = undefined;
                return entity;
            };
            michal = golfie.bind(option)(oscard, report, michal);
            michal = zuuluu.bind(tangon)(michal);
            michal = !michal;
            var _closure2_slot0 = michal;
 72: // try_end0
            _fun00002_ip = 76; continue _fun00001;
 74: // catch_target0
            CatchBlockStart(arg_register=1);
 76:
            michal = function() { // Original name: _isNativeReflectConstruct
                entity = _closure2_slot0;
                entity = !entity;
                entity = !entity;
                return entity;
            };
            _closure1_slot32 = michal;
            entity = undefined;
            entity = michal.bind(entity)();
            return entity;
        }
    };
    var _closure1_slot32 = entity;
    golfie = global;
    verify = golfie.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    romeon = 1;
    tangon = oscard[romeon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    option = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(option);
    option = 6;
    option = oscard[option];
    option = report.bind(entity)(option);
    option = option.View;
    var _closure1_slot8 = option;
    option = 7;
    option = oscard[option];
    option = foxtra.bind(entity)(option);
    var _closure1_slot9 = option;
    option = 8;
    option = oscard[option];
    option = report.bind(entity)(option);
    verify = option.GUILD_SELECTABLE_CHANNELS_KEY;
    var _closure1_slot10 = verify;
    option = option.GUILD_VOCAL_CHANNELS_KEY;
    var _closure1_slot11 = option;
    option = 9;
    option = oscard[option];
    option = foxtra.bind(entity)(option);
    var _closure1_slot12 = option;
    option = 10;
    option = oscard[option];
    option = foxtra.bind(entity)(option);
    var _closure1_slot13 = option;
    option = 11;
    option = oscard[option];
    option = foxtra.bind(entity)(option);
    var _closure1_slot14 = option;
    option = 12;
    option = oscard[option];
    option = foxtra.bind(entity)(option);
    var _closure1_slot15 = option;
    option = 13;
    option = oscard[option];
    option = foxtra.bind(entity)(option);
    var _closure1_slot16 = option;
    option = 14;
    option = oscard[option];
    option = report.bind(entity)(option);
    verify = option.UserNotificationSettings;
    var _closure1_slot17 = verify;
    verify = option.ChannelTypes;
    var _closure1_slot18 = verify;
    verify = option.Permissions;
    var _closure1_slot19 = verify;
    verify = option.GuildFeatures;
    var _closure1_slot20 = verify;
    verify = option.HelpdeskArticles;
    var _closure1_slot21 = verify;
    verify = option.SystemChannelFlags;
    var _closure1_slot22 = verify;
    verify = option.MAX_MEMBERS_NOTIFY_ALL_MESSAGES;
    var _closure1_slot23 = verify;
    option = option.EMPTY_STRING_SNOWFLAKE_ID;
    var _closure1_slot24 = option;
    option = 15;
    option = oscard[option];
    option = report.bind(entity)(option);
    option = option.TitleStyleType;
    var _closure1_slot25 = option;
    option = 16;
    option = oscard[option];
    option = report.bind(entity)(option);
    verify = option.jsx;
    var _closure1_slot26 = verify;
    verify = option.jsxs;
    var _closure1_slot27 = verify;
    option = option.Fragment;
    var _closure1_slot28 = option;
    option = 17;
    option = oscard[option];
    offset = report.bind(entity)(option);
    verify = offset.createLegacyClassComponentStyles;
    option = {};
    yankee = {};
    yankee['flex'] = romeon;
    option['overview'] = yankee;
    yankee = {};
    romeon = 18;
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_12;
    yankee['marginHorizontal'] = backup;
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_24;
    yankee['marginBottom'] = backup;
    option['redesignHorizontalPadding'] = yankee;
    yankee = {};
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_12;
    yankee['marginTop'] = romeon;
    option['hint'] = yankee;
    option = verify.bind(offset)(option);
    var _closure1_slot29 = option;
    verify = golfie.Object;
    option = verify.freeze;
    offset = {};
    golfie = 60;
    offset['value'] = golfie;
    golfie = function() { // Original name: label
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 19;
        zuuluu = oscard[entity];
        michal = undefined;
        zuuluu = report.bind(michal)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.formatToPlainString;
        entity = oscard[entity];
        entity = report.bind(michal)(entity);
        entity = entity.t;
        michal = entity.iXLF9f;
        entity = {};
        report = 1;
        entity['minutes'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    offset['label'] = golfie;
    golfie = new Array(5);
    golfie[0] = offset;
    offset = {};
    yankee = 300;
    offset['value'] = yankee;
    yankee = function() { // Original name: label
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 19;
        zuuluu = oscard[entity];
        michal = undefined;
        zuuluu = report.bind(michal)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.formatToPlainString;
        entity = oscard[entity];
        entity = report.bind(michal)(entity);
        entity = entity.t;
        michal = entity.iXLF9f;
        entity = {};
        report = 5;
        entity['minutes'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    offset['label'] = yankee;
    golfie[1] = offset;
    offset = {};
    yankee = 900;
    offset['value'] = yankee;
    yankee = function() { // Original name: label
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 19;
        zuuluu = oscard[entity];
        michal = undefined;
        zuuluu = report.bind(michal)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.formatToPlainString;
        entity = oscard[entity];
        entity = report.bind(michal)(entity);
        entity = entity.t;
        michal = entity.iXLF9f;
        entity = {};
        report = 15;
        entity['minutes'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    offset['label'] = yankee;
    golfie[2] = offset;
    offset = {};
    yankee = 1800;
    offset['value'] = yankee;
    yankee = function() { // Original name: label
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 19;
        zuuluu = oscard[entity];
        michal = undefined;
        zuuluu = report.bind(michal)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.formatToPlainString;
        entity = oscard[entity];
        entity = report.bind(michal)(entity);
        entity = entity.t;
        michal = entity.iXLF9f;
        entity = {};
        report = 30;
        entity['minutes'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    offset['label'] = yankee;
    golfie[3] = offset;
    offset = {};
    yankee = 3600;
    offset['value'] = yankee;
    yankee = function() { // Original name: label
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 19;
        zuuluu = oscard[entity];
        michal = undefined;
        zuuluu = report.bind(michal)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.formatToPlainString;
        entity = oscard[entity];
        entity = report.bind(michal)(entity);
        entity = entity.t;
        michal = entity.xCjYxM;
        entity = {};
        report = 1;
        entity['hours'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    offset['label'] = yankee;
    golfie[4] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot30 = golfie;
    golfie = tangon.PureComponent;
    tangon = function(argFoo) {
        tangon = function(argFoo) { // Original name: GuildSettingsModalOverview
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                report = this;
                foxtra = 0;
                entity = copyRestArgs(foxtra);
                option = _closure1_slot3;
                zuuluu = _closure2_slot0;
                tangon = undefined;
                option = option.bind(tangon)(report, zuuluu);
                offset = new Array(0);
                foxtra = offset;
                romeon = entity;
                yankee = 0;
                entity = arraySpread(foxtra, romeon, yankee);
                entity = _closure1_slot6;
                verify = entity.bind(tangon)(zuuluu);
                zuuluu = _closure1_slot5;
                entity = _closure1_slot32;
                entity = entity.bind(tangon)();
                if(entity) { _fun00004_ip = 86; continue _fun00003 }
 73:
                entity = verify.apply;
                entity = entity.bind(verify)(report, offset);
                _fun00004_ip = 120; continue _fun00003;
 86:
                golfie = global;
                option = golfie.Reflect;
                golfie = option.construct;
                oscard = _closure1_slot6;
                oscard = oscard.bind(tangon)(report);
                oscard = oscard.constructor;
                entity = golfie.bind(option)(verify, offset, oscard);
 120:
                entity = zuuluu.bind(tangon)(report, entity);
                var _closure3_slot0 = entity;
                zuuluu = function(argFoo) {
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 20;
                    michal = michal[entity];
                    entity = undefined;
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.updateGuild;
                    michal = {};
                    report = argFoo;
                    michal['name'] = report;
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                entity['handleNameChange'] = zuuluu;
                zuuluu = function(argFoo) {
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 20;
                    michal = michal[entity];
                    entity = undefined;
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.updateGuild;
                    michal = {};
                    report = argFoo;
                    michal['description'] = report;
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                entity['handleDescriptionChange'] = zuuluu;
                zuuluu = function() {
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        zuuluu = _closure1_slot1;
                        offset = _closure1_slot2;
                        entity = 21;
                        michal = offset[entity];
                        entity = undefined;
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = {};
                        tangon = _closure3_slot0;
                        golfie = tangon.props;
                        golfie = golfie.guild;
                        golfie = golfie.id;
                        michal['guildId'] = golfie;
                        golfie = _closure1_slot11;
                        michal['channelType'] = golfie;
                        verify = _closure1_slot0;
                        oscard = 19;
                        golfie = offset[oscard];
                        golfie = verify.bind(entity)(golfie);
                        option = golfie.intl;
                        golfie = option.string;
                        oscard = offset[oscard];
                        oscard = verify.bind(entity)(oscard);
                        oscard = oscard.t;
                        oscard = oscard.wGiHkJ;
                        oscard = golfie.bind(option)(oscard);
                        michal['noChannelOptionLabel'] = oscard;
                        oscard = function(argFoo) { // Original name: onSelect
                            _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                                oscard = argFoo;
                                zuuluu = _closure1_slot1;
                                michal = _closure1_slot2;
                                entity = 20;
                                michal = michal[entity];
                                entity = undefined;
                                tangon = zuuluu.bind(entity)(michal);
                                zuuluu = tangon.updateGuild;
                                michal = {};
                                report = null;
                                golfie = report == oscard;
                                report = undefined;
                                if(golfie) { _fun00008_ip = 52; continue _fun00007 }
 47:
                                report = oscard.id;
 52:
                                michal['afkChannelId'] = report;
                                michal = zuuluu.bind(tangon)(michal);
                                return entity;
                            }
                        };
                        michal['onSelect'] = oscard;
                        report = function(argFoo) { // Original name: filterFn
                            entity = argFoo;
                            entity = entity.channel;
                            michal = entity.type;
                            entity = _closure1_slot18;
                            entity = entity.GUILD_VOICE;
                            entity = michal === entity;
                            return entity;
                        };
                        michal['filterFn'] = report;
                        tangon = tangon.props;
                        report = tangon.afkChannel;
                        tangon = null;
                        oscard = tangon != report;
                        if(!oscard) { _fun00006_ip = 167; continue _fun00005 }
 164:
                        tangon = report;
 167:
                        michal['selectedChannel'] = tangon;
                        michal = zuuluu.bind(entity)(michal);
                        return entity;
                    }
                };
                entity['handleAfkChannelChange'] = zuuluu;
                zuuluu = function() {
                    _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                        zuuluu = _closure1_slot1;
                        offset = _closure1_slot2;
                        entity = 21;
                        michal = offset[entity];
                        entity = undefined;
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = {};
                        tangon = _closure3_slot0;
                        golfie = tangon.props;
                        golfie = golfie.guild;
                        golfie = golfie.id;
                        michal['guildId'] = golfie;
                        golfie = _closure1_slot10;
                        michal['channelType'] = golfie;
                        golfie = function(argFoo) { // Original name: filterFn
                            entity = argFoo;
                            entity = entity.channel;
                            michal = entity.type;
                            entity = _closure1_slot18;
                            entity = entity.GUILD_TEXT;
                            entity = michal === entity;
                            return entity;
                        };
                        michal['filterFn'] = golfie;
                        verify = _closure1_slot0;
                        oscard = 19;
                        golfie = offset[oscard];
                        golfie = verify.bind(entity)(golfie);
                        option = golfie.intl;
                        golfie = option.string;
                        oscard = offset[oscard];
                        oscard = verify.bind(entity)(oscard);
                        oscard = oscard.t;
                        oscard = oscard.ibUhoa;
                        oscard = golfie.bind(option)(oscard);
                        michal['noChannelOptionLabel'] = oscard;
                        report = function(argFoo) { // Original name: onSelect
                            _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                                oscard = argFoo;
                                zuuluu = _closure1_slot1;
                                michal = _closure1_slot2;
                                entity = 20;
                                michal = michal[entity];
                                entity = undefined;
                                tangon = zuuluu.bind(entity)(michal);
                                zuuluu = tangon.updateGuild;
                                michal = {};
                                report = null;
                                golfie = report == oscard;
                                report = undefined;
                                if(golfie) { _fun00012_ip = 52; continue _fun00011 }
 47:
                                report = oscard.id;
 52:
                                michal['systemChannelId'] = report;
                                michal = zuuluu.bind(tangon)(michal);
                                return entity;
                            }
                        };
                        michal['onSelect'] = report;
                        tangon = tangon.props;
                        report = tangon.systemChannel;
                        tangon = null;
                        oscard = tangon != report;
                        if(!oscard) { _fun00010_ip = 167; continue _fun00009 }
 164:
                        tangon = report;
 167:
                        michal['selectedChannel'] = tangon;
                        michal = zuuluu.bind(entity)(michal);
                        return entity;
                    }
                };
                entity['handleSystemChannelChange'] = zuuluu;
                zuuluu = function(argFoo) {
                    tangon = _closure3_slot0;
                    zuuluu = tangon.handleSystemChannelFlagsChange;
                    entity = _closure1_slot22;
                    michal = entity.SUPPRESS_JOIN_NOTIFICATIONS;
                    entity = argFoo;
                    entity = !entity;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    entity = undefined;
                    return entity;
                };
                entity['handleSystemJoinMessages'] = zuuluu;
                zuuluu = function(argFoo) {
                    tangon = _closure3_slot0;
                    zuuluu = tangon.handleSystemChannelFlagsChange;
                    entity = _closure1_slot22;
                    michal = entity.SUPPRESS_JOIN_NOTIFICATION_REPLIES;
                    entity = argFoo;
                    entity = !entity;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    entity = undefined;
                    return entity;
                };
                entity['handleSystemJoinMessageReplies'] = zuuluu;
                zuuluu = function(argFoo) {
                    tangon = _closure3_slot0;
                    zuuluu = tangon.handleSystemChannelFlagsChange;
                    entity = _closure1_slot22;
                    michal = entity.SUPPRESS_PREMIUM_SUBSCRIPTIONS;
                    entity = argFoo;
                    entity = !entity;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    entity = undefined;
                    return entity;
                };
                entity['handleSystemPremiumSubscribe'] = zuuluu;
                zuuluu = function(argFoo) {
                    tangon = _closure3_slot0;
                    zuuluu = tangon.handleSystemChannelFlagsChange;
                    entity = _closure1_slot22;
                    michal = entity.SUPPRESS_GUILD_REMINDER_NOTIFICATIONS;
                    entity = argFoo;
                    entity = !entity;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    entity = undefined;
                    return entity;
                };
                entity['handleSystemReminderNotifications'] = zuuluu;
                zuuluu = function(argFoo) {
                    tangon = _closure3_slot0;
                    zuuluu = tangon.handleSystemChannelFlagsChange;
                    entity = _closure1_slot22;
                    michal = entity.SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATIONS;
                    entity = argFoo;
                    entity = !entity;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    entity = undefined;
                    return entity;
                };
                entity['handleSystemGuildRoleSubscriptionPurchaseMessages'] = zuuluu;
                zuuluu = function(argFoo) {
                    tangon = _closure3_slot0;
                    zuuluu = tangon.handleSystemChannelFlagsChange;
                    entity = _closure1_slot22;
                    michal = entity.SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATION_REPLIES;
                    entity = argFoo;
                    entity = !entity;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    entity = undefined;
                    return entity;
                };
                entity['handleSystemGuildRoleSubscriptionPurchaseMessageReplies'] = zuuluu;
                zuuluu = function(argFoo) {
                    tangon = _closure3_slot0;
                    zuuluu = tangon.handleSystemChannelFlagsChange;
                    entity = _closure1_slot22;
                    michal = entity.SUPPRESS_CHANNEL_PROMPT_DEADCHAT;
                    entity = argFoo;
                    entity = !entity;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    entity = undefined;
                    return entity;
                };
                entity['handleSystemGuildChannelPromptDeadchatMessages'] = zuuluu;
                zuuluu = function() {
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 22;
                    michal = michal[entity];
                    entity = undefined;
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.showSimpleActionSheet;
                    michal = {};
                    oscard = 'AFKTimeout';
                    michal['key'] = oscard;
                    golfie = _closure1_slot30;
                    oscard = golfie.map;
                    report = function(argFoo) {
                        tangon = argFoo;
                        var _closure5_slot0 = tangon;
                        entity = {};
                        zuuluu = tangon.label;
                        zuuluu = zuuluu.bind(tangon)();
                        entity['label'] = zuuluu;
                        michal = function() { // Original name: onPress
                            zuuluu = _closure1_slot1;
                            michal = _closure1_slot2;
                            entity = 20;
                            michal = michal[entity];
                            entity = undefined;
                            tangon = zuuluu.bind(entity)(michal);
                            zuuluu = tangon.updateGuild;
                            michal = {};
                            report = _closure5_slot0;
                            report = report.value;
                            michal['afkTimeout'] = report;
                            michal = zuuluu.bind(tangon)(michal);
                            return entity;
                        };
                        entity['onPress'] = michal;
                        return entity;
                    };
                    report = oscard.bind(golfie)(report);
                    michal['options'] = report;
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                entity['handleAFKTimeoutChange'] = zuuluu;
                zuuluu = function() {
                    oscard = _closure1_slot1;
                    golfie = _closure1_slot2;
                    entity = 23;
                    michal = golfie[entity];
                    entity = undefined;
                    tangon = oscard.bind(entity)(michal);
                    zuuluu = tangon.show;
                    michal = {};
                    yankee = _closure1_slot0;
                    option = 19;
                    report = golfie[option];
                    report = yankee.bind(entity)(report);
                    offset = report.intl;
                    verify = offset.string;
                    report = golfie[option];
                    report = yankee.bind(entity)(report);
                    report = report.t;
                    report = report.l3hWPz;
                    report = verify.bind(offset)(report);
                    michal['title'] = report;
                    report = golfie[option];
                    report = yankee.bind(entity)(report);
                    foxtra = report.intl;
                    romeon = foxtra.format;
                    report = golfie[option];
                    report = yankee.bind(entity)(report);
                    report = report.t;
                    offset = report.Zuo+VV;
                    verify = {};
                    report = _closure3_slot0;
                    backup = report.props;
                    kiloes = backup.guild;
                    backup = kiloes.toString;
                    backup = backup.bind(kiloes)();
                    verify['name'] = backup;
                    verify = romeon.bind(foxtra)(offset, verify);
                    michal['body'] = verify;
                    verify = golfie[option];
                    verify = yankee.bind(entity)(verify);
                    romeon = verify.intl;
                    offset = romeon.string;
                    verify = golfie[option];
                    verify = yankee.bind(entity)(verify);
                    verify = verify.t;
                    verify = verify.gm1Ven;
                    verify = offset.bind(romeon)(verify);
                    michal['cancelText'] = verify;
                    verify = golfie[option];
                    verify = yankee.bind(entity)(verify);
                    offset = verify.intl;
                    verify = offset.string;
                    option = golfie[option];
                    option = yankee.bind(entity)(option);
                    option = option.t;
                    option = option.p89ACg;
                    option = verify.bind(offset)(option);
                    michal['confirmText'] = option;
                    report = report.handleConfirmDeleteServer;
                    michal['onConfirm'] = report;
                    report = 24;
                    report = golfie[report];
                    report = oscard.bind(entity)(report);
                    report = report.Colors;
                    report = report.RED;
                    michal['confirmColor'] = report;
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                entity['handleDeleteServer'] = zuuluu;
                zuuluu = function() {
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 20;
                    michal = michal[entity];
                    entity = undefined;
                    report = zuuluu.bind(entity)(michal);
                    tangon = report.deleteGuild;
                    michal = _closure3_slot0;
                    zuuluu = michal.props;
                    zuuluu = zuuluu.guild;
                    zuuluu = zuuluu.id;
                    michal = michal.props;
                    michal = michal.guild;
                    michal = michal.name;
                    michal = tangon.bind(report)(zuuluu, michal);
                    return entity;
                };
                entity['handleConfirmDeleteServer'] = zuuluu;
                zuuluu = function(argFoo) {
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 20;
                    michal = michal[entity];
                    entity = undefined;
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.updateGuild;
                    michal = {};
                    report = argFoo;
                    michal['splash'] = report;
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                entity['handleSplashChange'] = zuuluu;
                zuuluu = function(argFoo) {
                    _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                        entity = _closure3_slot0;
                        entity = entity.props;
                        entity = entity.guild;
                        michal = global;
                        zuuluu = michal.Set;
                        oscard = entity.features;
                        michal = zuuluu.prototype;
                        michal = Object.create(michal, {constructor: {value: zuuluu}});
                        golfie = michal;
                        entity = new golfie[zuuluu](oscard, report);
                        report = entity instanceof Object ? entity : michal;
                        entity = argFoo;
                        if(entity) { _fun00014_ip = 82; continue _fun00013 }
 57:
                        michal = report.delete;
                        entity = _closure1_slot20;
                        entity = entity.SUMMARIES_ENABLED_BY_USER;
                        entity = michal.bind(report)(entity);
                        _fun00014_ip = 105; continue _fun00013;
 82:
                        michal = report.add;
                        entity = _closure1_slot20;
                        entity = entity.SUMMARIES_ENABLED_BY_USER;
                        entity = michal.bind(report)(entity);
 105:
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 20;
                        michal = michal[entity];
                        entity = undefined;
                        tangon = zuuluu.bind(entity)(michal);
                        zuuluu = tangon.updateGuild;
                        michal = {};
                        michal['features'] = report;
                        michal = zuuluu.bind(tangon)(michal);
                        return entity;
                    }
                };
                entity['handleSummariesToggle'] = zuuluu;
                zuuluu = function(argFoo) {
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 20;
                    michal = michal[entity];
                    entity = undefined;
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.updateGuild;
                    michal = {};
                    report = argFoo;
                    michal['banner'] = report;
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                entity['handleBannerChange'] = zuuluu;
                michal = function() {
                    entity = _closure3_slot0;
                    entity = entity.props;
                    entity = entity.guild;
                    report = entity.id;
                    output = entity.name;
                    sizing = entity.icon;
                    kiloes = entity.afkChannelId;
                    backup = entity.afkTimeout;
                    foxtra = entity.systemChannelId;
                    yankee = entity.safetyAlertsChannelId;
                    romeon = entity.systemChannelFlags;
                    offset = entity.defaultMessageNotifications;
                    verify = entity.splash;
                    option = entity.banner;
                    golfie = entity.description;
                    oscard = entity.features;
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 20;
                    michal = michal[entity];
                    entity = undefined;
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.saveGuild;
                    michal = {};
                    michal['name'] = output;
                    michal['icon'] = sizing;
                    michal['afkChannelId'] = kiloes;
                    michal['afkTimeout'] = backup;
                    michal['systemChannelId'] = foxtra;
                    michal['systemChannelFlags'] = romeon;
                    michal['safetyAlertsChannelId'] = yankee;
                    michal['defaultMessageNotifications'] = offset;
                    michal['splash'] = verify;
                    michal['banner'] = option;
                    michal['description'] = golfie;
                    michal['features'] = oscard;
                    michal = zuuluu.bind(tangon)(report, michal);
                    return entity;
                };
                entity['handleOverviewSaveChanges'] = michal;
                return entity;
            }
        };
        var _closure2_slot0 = tangon;
        report = _closure1_slot7;
        zuuluu = undefined;
        michal = argFoo;
        michal = report.bind(zuuluu)(tangon, michal);
        michal = _closure1_slot4;
        report = {};
        entity = 'componentDidMount';
        report['key'] = entity;
        entity = function() { // Original name: value
            michal = this;
            entity = michal.updateNavigator;
            entity = entity.bind(michal)();
            entity = undefined;
            return entity;
        };
        report['value'] = entity;
        entity = new Array(17);
        entity[0] = report;
        report = {};
        golfie = 'componentDidUpdate';
        report['key'] = golfie;
        golfie = function(argFoo) { // Original name: value
            _fun00015: for(var _fun00016_ip = 0; ; ) switch(_fun00016_ip) {
 0:
                michal = argFoo;
                tangon = this;
                entity = tangon.props;
                entity = entity.errors;
                zuuluu = tangon.updateNavigator;
                zuuluu = zuuluu.bind(tangon)(michal);
                michal = michal.errors;
                zuuluu = michal.message;
                michal = entity.message;
                michal = zuuluu !== michal;
                if(!michal) { _fun00016_ip = 62; continue _fun00015 }
 51:
                tangon = entity.message;
                zuuluu = null;
                michal = zuuluu != tangon;
 62:
                if(!michal) { _fun00016_ip = 106; continue _fun00015 }
 65:
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                michal = 25;
                zuuluu = zuuluu[michal];
                michal = undefined;
                zuuluu = tangon.bind(michal)(zuuluu);
                michal = zuuluu.presentError;
                entity = entity.message;
                entity = michal.bind(zuuluu)(entity);
 106:
                entity = undefined;
                return entity;
            }
        };
        report['value'] = golfie;
        entity[1] = report;
        report = {};
        golfie = 'updateNavigator';
        report['key'] = golfie;
        golfie = function(argFoo) { // Original name: value
            _fun00017: for(var _fun00018_ip = 0; ; ) switch(_fun00018_ip) {
 0:
                michal = argFoo;
                entity = this;
                var _closure3_slot0 = entity;
                entity = entity.props;
                zuuluu = entity.navigation;
                golfie = entity.submitting;
                oscard = entity.hasChanges;
                entity = null;
                entity = entity != michal;
                if(!entity) { _fun00018_ip = 54; continue _fun00017 }
 44:
                tangon = michal.submitting;
                entity = golfie === tangon;
 54:
                if(!entity) { _fun00018_ip = 67; continue _fun00017 }
 57:
                michal = michal.hasChanges;
                entity = oscard === michal;
 67:
                if(entity) { _fun00018_ip = 196; continue _fun00017 }
 73:
                michal = zuuluu.setOptions;
                entity = {};
                yankee = _closure1_slot0;
                romeon = _closure1_slot2;
                option = 19;
                verify = romeon[option];
                tangon = undefined;
                verify = yankee.bind(tangon)(verify);
                offset = verify.intl;
                verify = offset.string;
                option = romeon[option];
                option = yankee.bind(tangon)(option);
                option = option.t;
                option = option./dp6yc;
                option = verify.bind(offset)(option);
                entity['title'] = option;
                option = undefined;
                if(!golfie) { _fun00018_ip = 157; continue _fun00017 }
 150:
                option = function() {
                    entity = null;
                    return entity;
                };
 157:
                entity['headerLeft'] = option;
                if(golfie) { _fun00018_ip = 179; continue _fun00017 }
 165:
                tangon = undefined;
                if(!oscard) { _fun00018_ip = 177; continue _fun00017 }
 170:
                tangon = function() {
                    tangon = _closure1_slot26;
                    option = _closure1_slot0;
                    verify = _closure1_slot2;
                    entity = 27;
                    entity = verify[entity];
                    zuuluu = undefined;
                    entity = option.bind(zuuluu)(entity);
                    michal = entity.HeaderActionButton;
                    entity = {};
                    report = _closure3_slot0;
                    report = report.handleOverviewSaveChanges;
                    entity['onPress'] = report;
                    report = 19;
                    oscard = verify[report];
                    oscard = option.bind(zuuluu)(oscard);
                    golfie = oscard.intl;
                    oscard = golfie.string;
                    report = verify[report];
                    report = option.bind(zuuluu)(report);
                    report = report.t;
                    report = report.R3BPHx;
                    report = oscard.bind(golfie)(report);
                    entity['text'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
 177:
                _fun00018_ip = 186; continue _fun00017;
 179:
                tangon = function() {
                    tangon = _closure1_slot26;
                    michal = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    entity = 26;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    entity = michal.bind(zuuluu)(entity);
                    michal = entity.HeaderSubmittingIndicator;
                    entity = {};
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
 186:
                entity['headerRight'] = tangon;
                entity = michal.bind(zuuluu)(entity);
 196:
                entity = undefined;
                return entity;
            }
        };
        report['value'] = golfie;
        entity[2] = report;
        report = {};
        golfie = 'componentWillUnmount';
        report['key'] = golfie;
        golfie = function() { // Original name: value
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 20;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.cancelChanges;
            michal = this;
            michal = michal.props;
            michal = michal.guild;
            michal = michal.id;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        report['value'] = golfie;
        entity[3] = report;
        report = {};
        golfie = 'getError';
        report['key'] = golfie;
        golfie = function(argFoo) { // Original name: value
            _fun00019: for(var _fun00020_ip = 0; ; ) switch(_fun00020_ip) {
 0:
                entity = this;
                entity = entity.props;
                report = entity.errors;
                michal = null;
                zuuluu = michal == report;
                entity = undefined;
                if(zuuluu) { _fun00020_ip = 47; continue _fun00019 }
 25:
                zuuluu = argFoo;
                zuuluu = report[zuuluu];
                michal = michal == zuuluu;
                entity = undefined;
                if(michal) { _fun00020_ip = 47; continue _fun00019 }
 41:
                michal = 0;
                entity = zuuluu[michal];
 47:
                return entity;
            }
        };
        report['value'] = golfie;
        entity[4] = report;
        report = {};
        golfie = 'handleSystemChannelFlagsChange';
        report['key'] = golfie;
        golfie = function(argFoo, argBar) { // Original name: value
            entity = this;
            entity = entity.props;
            zuuluu = entity.guild;
            oscard = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 28;
            report = tangon[entity];
            entity = undefined;
            option = oscard.bind(entity)(report);
            golfie = option.setFlag;
            oscard = zuuluu.systemChannelFlags;
            report = argFoo;
            zuuluu = argBar;
            report = golfie.bind(option)(oscard, report, zuuluu);
            zuuluu = _closure1_slot1;
            michal = 20;
            michal = tangon[michal];
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.updateGuild;
            michal = {};
            michal['systemChannelFlags'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        report['value'] = golfie;
        entity[5] = report;
        report = {};
        golfie = 'handleDefaultNotificationsChange';
        report['key'] = golfie;
        golfie = function(argFoo) { // Original name: value
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 20;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.updateGuild;
            michal = {};
            report = argFoo;
            michal['defaultMessageNotifications'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        report['value'] = golfie;
        entity[6] = report;
        report = {};
        golfie = 'renderGuildName';
        report['key'] = golfie;
        golfie = function() { // Original name: value
            option = this;
            entity = option.props;
            foxtra = entity.guild;
            verify = entity.canManage;
            tangon = _closure1_slot26;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            report = 29;
            entity = yankee[report];
            zuuluu = undefined;
            entity = offset.bind(zuuluu)(entity);
            michal = entity.FormSection;
            entity = {};
            oscard = _closure1_slot25;
            oscard = oscard.ANDROID_NO_BORDER;
            entity['titleStyleType'] = oscard;
            golfie = 19;
            oscard = yankee[golfie];
            oscard = offset.bind(zuuluu)(oscard);
            backup = oscard.intl;
            romeon = backup.string;
            oscard = yankee[golfie];
            oscard = offset.bind(zuuluu)(oscard);
            oscard = oscard.t;
            oscard = oscard.dBih7e;
            oscard = romeon.bind(backup)(oscard);
            entity['title'] = oscard;
            romeon = option.getError;
            oscard = 'name';
            oscard = romeon.bind(option)(oscard);
            entity['error'] = oscard;
            report = yankee[report];
            report = offset.bind(zuuluu)(report);
            oscard = report.FormInput;
            report = {};
            romeon = foxtra.toString;
            romeon = romeon.bind(foxtra)();
            report['value'] = romeon;
            verify = !verify;
            report['disabled'] = verify;
            option = option.handleNameChange;
            report['onChange'] = option;
            option = false;
            report['showTopContainer'] = option;
            option = 30;
            option = yankee[option];
            option = offset.bind(zuuluu)(option);
            option = option.ClearButtonVisibility;
            option = option.WITH_CONTENT;
            report['clearButtonVisibility'] = option;
            option = yankee[golfie];
            option = offset.bind(zuuluu)(option);
            verify = option.intl;
            option = verify.string;
            golfie = yankee[golfie];
            golfie = offset.bind(zuuluu)(golfie);
            golfie = golfie.t;
            golfie = golfie.R04ENT;
            golfie = option.bind(verify)(golfie);
            report['clearButtonAccessibilityLabel'] = golfie;
            report = tangon.bind(zuuluu)(oscard, report);
            entity['children'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        report['value'] = golfie;
        entity[7] = report;
        report = {};
        golfie = 'renderAFKSettings';
        report['key'] = golfie;
        golfie = function() { // Original name: value
            _fun00021: for(var _fun00022_ip = 0; ; ) switch(_fun00022_ip) {
 0:
                verify = this;
                michal = verify.props;
                romeon = michal.guild;
                var _closure3_slot0 = romeon;
                yankee = michal.canManage;
                oscard = michal.afkChannel;
                kiloes = null;
                if(!(kiloes == oscard)) { _fun00022_ip = 99; continue _fun00021 }
 37:
                golfie = _closure1_slot0;
                option = _closure1_slot2;
                michal = 19;
                zuuluu = option[michal];
                report = undefined;
                zuuluu = golfie.bind(report)(zuuluu);
                tangon = zuuluu.intl;
                zuuluu = tangon.string;
                michal = option[michal];
                michal = golfie.bind(report)(michal);
                michal = michal.t;
                michal = michal.wGiHkJ;
                result = zuuluu.bind(tangon)(michal);
                _fun00022_ip = 145; continue _fun00021;
 99:
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                zuuluu = 31;
                tangon = tangon[zuuluu];
                zuuluu = undefined;
                report = report.bind(zuuluu)(tangon);
                tangon = report.computeChannelName;
                zuuluu = _closure1_slot15;
                michal = _closure1_slot14;
                result = tangon.bind(report)(oscard, zuuluu, michal);
 145:
                michal = romeon.afkChannelId;
                zuuluu = kiloes != michal;
                michal = null;
                if(!zuuluu) { _fun00022_ip = 184; continue _fun00021 }
 160:
                tangon = _closure1_slot30;
                zuuluu = tangon.find;
                entity = function(argFoo) {
                    entity = argFoo;
                    michal = entity.value;
                    entity = _closure3_slot0;
                    entity = entity.afkTimeout;
                    entity = michal === entity;
                    return entity;
                };
                michal = zuuluu.bind(tangon)(entity);
 184:
                if(!(kiloes == michal)) { _fun00022_ip = 213; continue _fun00021 }
 188:
                zuuluu = _closure1_slot30;
                entity = 1;
                zuuluu = zuuluu[entity];
                entity = zuuluu.label;
                foxtra = entity.bind(zuuluu)();
                _fun00022_ip = 222; continue _fun00021;
 213:
                entity = michal.label;
                foxtra = entity.bind(michal)();
 222:
                tangon = _closure1_slot27;
                echoed = _closure1_slot0;
                update = _closure1_slot2;
                backup = 29;
                entity = update[backup];
                zuuluu = undefined;
                entity = echoed.bind(zuuluu)(entity);
                michal = entity.FormSection;
                entity = {};
                sizing = 19;
                report = update[sizing];
                report = echoed.bind(zuuluu)(report);
                golfie = report.intl;
                oscard = golfie.string;
                report = update[sizing];
                report = echoed.bind(zuuluu)(report);
                report = report.t;
                report = report.qyGmGh;
                report = oscard.bind(golfie)(report);
                entity['title'] = report;
                option = _closure1_slot26;
                report = update[backup];
                report = echoed.bind(zuuluu)(report);
                oscard = report.FormHint;
                report = {};
                golfie = update[sizing];
                golfie = echoed.bind(zuuluu)(golfie);
                source = golfie.intl;
                output = source.string;
                golfie = update[sizing];
                golfie = echoed.bind(zuuluu)(golfie);
                golfie = golfie.t;
                golfie = golfie.ffEOKC;
                golfie = output.bind(source)(golfie);
                report['children'] = golfie;
                report = option.bind(zuuluu)(oscard, report);
                entity['hint'] = report;
                report = update[backup];
                report = echoed.bind(zuuluu)(report);
                oscard = report.FormRow;
                report = {};
                golfie = update[sizing];
                golfie = echoed.bind(zuuluu)(golfie);
                source = golfie.intl;
                output = source.string;
                golfie = update[sizing];
                golfie = echoed.bind(zuuluu)(golfie);
                golfie = golfie.t;
                golfie = golfie.KuYcnZ;
                golfie = output.bind(source)(golfie);
                report['label'] = golfie;
                golfie = !yankee;
                report['disabled'] = golfie;
                golfie = update[backup];
                golfie = echoed.bind(zuuluu)(golfie);
                golfie = golfie.FormRow;
                output = golfie.Arrow;
                golfie = {};
                golfie['label'] = result;
                golfie = option.bind(zuuluu)(output, golfie);
                report['trailing'] = golfie;
                golfie = verify.handleAfkChannelChange;
                report['onPress'] = golfie;
                oscard = option.bind(zuuluu)(oscard, report);
                report = new Array(3);
                report[0] = oscard;
                oscard = update[backup];
                oscard = echoed.bind(zuuluu)(oscard);
                golfie = oscard.FormDivider;
                oscard = {};
                oscard = option.bind(zuuluu)(golfie, oscard);
                report[1] = oscard;
                oscard = update[backup];
                oscard = echoed.bind(zuuluu)(oscard);
                golfie = oscard.FormRow;
                oscard = {};
                output = update[sizing];
                output = echoed.bind(zuuluu)(output);
                result = output.intl;
                output = result.string;
                sizing = update[sizing];
                sizing = echoed.bind(zuuluu)(sizing);
                sizing = sizing.t;
                sizing = sizing.brhYaW;
                sizing = output.bind(result)(sizing);
                oscard['label'] = sizing;
                yankee = !yankee;
                if(yankee) { _fun00022_ip = 638; continue _fun00021 }
 628:
                romeon = romeon.afkChannelId;
                yankee = kiloes == romeon;
 638:
                oscard['disabled'] = yankee;
                romeon = _closure1_slot26;
                yankee = _closure1_slot0;
                offset = _closure1_slot2;
                offset = offset[backup];
                offset = yankee.bind(zuuluu)(offset);
                offset = offset.FormRow;
                yankee = offset.Arrow;
                offset = {};
                offset['label'] = foxtra;
                offset = romeon.bind(zuuluu)(yankee, offset);
                oscard['trailing'] = offset;
                verify = verify.handleAFKTimeoutChange;
                oscard['onPress'] = verify;
                oscard = option.bind(zuuluu)(golfie, oscard);
                report[2] = oscard;
                entity['children'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            }
        };
        report['value'] = golfie;
        entity[8] = report;
        report = {};
        golfie = 'renderSystemMessageSettings';
        report['key'] = golfie;
        golfie = function() { // Original name: value
            _fun00023: for(var _fun00024_ip = 0; ; ) switch(_fun00024_ip) {
 0:
                kiloes = this;
                entity = kiloes.props;
                output = entity.guild;
                update = entity.canManage;
                report = entity.systemChannel;
                oscard = entity.enableDeadchatPrompt;
                entity = null;
                if(!(entity == report)) { _fun00024_ip = 99; continue _fun00023 }
 37:
                golfie = _closure1_slot0;
                option = _closure1_slot2;
                entity = 19;
                michal = option[entity];
                tangon = undefined;
                michal = golfie.bind(tangon)(michal);
                zuuluu = michal.intl;
                michal = zuuluu.string;
                entity = option[entity];
                entity = golfie.bind(tangon)(entity);
                entity = entity.t;
                entity = entity.ibUhoa;
                result = michal.bind(zuuluu)(entity);
                _fun00024_ip = 145; continue _fun00023;
 99:
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                michal = 31;
                zuuluu = zuuluu[michal];
                michal = undefined;
                tangon = tangon.bind(michal)(zuuluu);
                zuuluu = tangon.computeChannelName;
                michal = _closure1_slot15;
                entity = _closure1_slot14;
                result = zuuluu.bind(tangon)(report, michal, entity);
 145:
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 32;
                entity = zuuluu[entity];
                tangon = undefined;
                michal = michal.bind(tangon)(entity);
                entity = michal.isEligibleForRoleSubscriptionPurchaseSystemMessageSettings;
                entity = entity.bind(michal)(output);
                option = entity;
                if(entity) { _fun00024_ip = 235; continue _fun00023 }
 187:
                zuuluu = _closure1_slot0;
                report = _closure1_slot2;
                michal = 28;
                michal = report[michal];
                golfie = zuuluu.bind(tangon)(michal);
                report = golfie.hasFlag;
                zuuluu = output.systemChannelFlags;
                michal = _closure1_slot22;
                michal = michal.SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATIONS;
                option = report.bind(golfie)(zuuluu, michal);
 235:
                golfie = entity;
                if(golfie) { _fun00024_ip = 289; continue _fun00023 }
 241:
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 28;
                entity = zuuluu[entity];
                report = michal.bind(tangon)(entity);
                zuuluu = report.hasFlag;
                michal = output.systemChannelFlags;
                entity = _closure1_slot22;
                entity = entity.SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATION_REPLIES;
                golfie = zuuluu.bind(report)(michal, entity);
 289:
                zuuluu = _closure1_slot27;
                echoed = _closure1_slot0;
                sizing = _closure1_slot2;
                yankee = 29;
                entity = sizing[yankee];
                entity = echoed.bind(tangon)(entity);
                michal = entity.FormSection;
                entity = {};
                source = 19;
                report = sizing[source];
                report = echoed.bind(tangon)(report);
                offset = report.intl;
                verify = offset.string;
                report = sizing[source];
                report = echoed.bind(tangon)(report);
                report = report.t;
                report = report.DP39VF;
                report = verify.bind(offset)(report);
                entity['title'] = report;
                romeon = _closure1_slot26;
                report = sizing[yankee];
                report = echoed.bind(tangon)(report);
                verify = report.FormHint;
                report = {};
                offset = sizing[source];
                offset = echoed.bind(tangon)(offset);
                ctrled = offset.intl;
                foxtra = ctrled.string;
                offset = sizing[source];
                offset = echoed.bind(tangon)(offset);
                offset = offset.t;
                offset = offset.BT9zR0;
                offset = foxtra.bind(ctrled)(offset);
                report['children'] = offset;
                report = romeon.bind(tangon)(verify, report);
                entity['hint'] = report;
                report = sizing[yankee];
                report = echoed.bind(tangon)(report);
                verify = report.FormRow;
                report = {};
                offset = sizing[source];
                offset = echoed.bind(tangon)(offset);
                ctrled = offset.intl;
                foxtra = ctrled.string;
                offset = sizing[source];
                offset = echoed.bind(tangon)(offset);
                offset = offset.t;
                offset = offset.GK18KC;
                offset = foxtra.bind(ctrled)(offset);
                report['label'] = offset;
                offset = !update;
                report['disabled'] = offset;
                offset = sizing[yankee];
                offset = echoed.bind(tangon)(offset);
                offset = offset.FormRow;
                foxtra = offset.Arrow;
                offset = {};
                offset['label'] = result;
                offset = romeon.bind(tangon)(foxtra, offset);
                report['trailing'] = offset;
                offset = kiloes.handleSystemChannelChange;
                report['onPress'] = offset;
                verify = romeon.bind(tangon)(verify, report);
                report = new Array(12);
                report[0] = verify;
                verify = sizing[yankee];
                verify = echoed.bind(tangon)(verify);
                offset = verify.FormDivider;
                verify = {};
                verify = romeon.bind(tangon)(offset, verify);
                report[1] = verify;
                verify = sizing[yankee];
                verify = echoed.bind(tangon)(verify);
                offset = verify.FormSwitchRow;
                verify = {};
                foxtra = sizing[source];
                foxtra = echoed.bind(tangon)(foxtra);
                ctrled = foxtra.intl;
                result = ctrled.string;
                foxtra = sizing[source];
                foxtra = echoed.bind(tangon)(foxtra);
                foxtra = foxtra.t;
                foxtra = foxtra.+f0bXV;
                foxtra = result.bind(ctrled)(foxtra);
                verify['label'] = foxtra;
                foxtra = !update;
                verify['disabled'] = foxtra;
                result = 28;
                foxtra = sizing[result];
                config = echoed.bind(tangon)(foxtra);
                sequen = config.hasFlag;
                vacuum = output.systemChannelFlags;
                foxtra = _closure1_slot22;
                ctrled = foxtra.SUPPRESS_JOIN_NOTIFICATIONS;
                ctrled = sequen.bind(config)(vacuum, ctrled);
                ctrled = !ctrled;
                verify['value'] = ctrled;
                ctrled = kiloes.handleSystemJoinMessages;
                verify['onValueChange'] = ctrled;
                verify = romeon.bind(tangon)(offset, verify);
                report[2] = verify;
                verify = sizing[yankee];
                verify = echoed.bind(tangon)(verify);
                offset = verify.FormDivider;
                verify = {};
                verify = romeon.bind(tangon)(offset, verify);
                report[3] = verify;
                verify = sizing[yankee];
                verify = echoed.bind(tangon)(verify);
                offset = verify.FormSwitchRow;
                verify = {};
                ctrled = sizing[source];
                ctrled = echoed.bind(tangon)(ctrled);
                sequen = ctrled.intl;
                vacuum = sequen.string;
                ctrled = sizing[source];
                ctrled = echoed.bind(tangon)(ctrled);
                ctrled = ctrled.t;
                ctrled = ctrled.72k7jY;
                ctrled = vacuum.bind(sequen)(ctrled);
                verify['label'] = ctrled;
                ctrled = !update;
                verify['disabled'] = ctrled;
                ctrled = sizing[result];
                config = echoed.bind(tangon)(ctrled);
                sequen = config.hasFlag;
                vacuum = output.systemChannelFlags;
                ctrled = foxtra.SUPPRESS_JOIN_NOTIFICATION_REPLIES;
                ctrled = sequen.bind(config)(vacuum, ctrled);
                ctrled = !ctrled;
                verify['value'] = ctrled;
                ctrled = kiloes.handleSystemJoinMessageReplies;
                verify['onValueChange'] = ctrled;
                verify = romeon.bind(tangon)(offset, verify);
                report[4] = verify;
                verify = sizing[yankee];
                verify = echoed.bind(tangon)(verify);
                offset = verify.FormDivider;
                verify = {};
                verify = romeon.bind(tangon)(offset, verify);
                report[5] = verify;
                verify = sizing[yankee];
                verify = echoed.bind(tangon)(verify);
                offset = verify.FormSwitchRow;
                verify = {};
                ctrled = sizing[source];
                ctrled = echoed.bind(tangon)(ctrled);
                sequen = ctrled.intl;
                vacuum = sequen.string;
                ctrled = sizing[source];
                ctrled = echoed.bind(tangon)(ctrled);
                ctrled = ctrled.t;
                ctrled = ctrled.2L8NCA;
                ctrled = vacuum.bind(sequen)(ctrled);
                verify['label'] = ctrled;
                ctrled = !update;
                verify['disabled'] = ctrled;
                ctrled = sizing[result];
                config = echoed.bind(tangon)(ctrled);
                sequen = config.hasFlag;
                vacuum = output.systemChannelFlags;
                ctrled = foxtra.SUPPRESS_PREMIUM_SUBSCRIPTIONS;
                ctrled = sequen.bind(config)(vacuum, ctrled);
                ctrled = !ctrled;
                verify['value'] = ctrled;
                ctrled = kiloes.handleSystemPremiumSubscribe;
                verify['onValueChange'] = ctrled;
                verify = romeon.bind(tangon)(offset, verify);
                report[6] = verify;
                verify = sizing[yankee];
                verify = echoed.bind(tangon)(verify);
                offset = verify.FormDivider;
                verify = {};
                verify = romeon.bind(tangon)(offset, verify);
                report[7] = verify;
                verify = sizing[yankee];
                verify = echoed.bind(tangon)(verify);
                offset = verify.FormSwitchRow;
                verify = {};
                ctrled = sizing[source];
                ctrled = echoed.bind(tangon)(ctrled);
                sequen = ctrled.intl;
                vacuum = sequen.string;
                ctrled = sizing[source];
                ctrled = echoed.bind(tangon)(ctrled);
                ctrled = ctrled.t;
                ctrled = ctrled.NvnW+f;
                ctrled = vacuum.bind(sequen)(ctrled);
                verify['label'] = ctrled;
                ctrled = !update;
                verify['disabled'] = ctrled;
                sizing = sizing[result];
                ctrled = echoed.bind(tangon)(sizing);
                echoed = ctrled.hasFlag;
                sizing = output.systemChannelFlags;
                foxtra = foxtra.SUPPRESS_GUILD_REMINDER_NOTIFICATIONS;
                foxtra = echoed.bind(ctrled)(sizing, foxtra);
                foxtra = !foxtra;
                verify['value'] = foxtra;
                foxtra = kiloes.handleSystemReminderNotifications;
                verify['onValueChange'] = foxtra;
                verify = romeon.bind(tangon)(offset, verify);
                report[8] = verify;
                if(!option) { _fun00024_ip = 1453; continue _fun00023 }
 1251:
                romeon = _closure1_slot27;
                offset = _closure1_slot28;
                verify = {};
                ctrled = _closure1_slot26;
                sequen = _closure1_slot0;
                vacuum = _closure1_slot2;
                foxtra = vacuum[yankee];
                foxtra = sequen.bind(tangon)(foxtra);
                sizing = foxtra.FormDivider;
                foxtra = {};
                sizing = ctrled.bind(tangon)(sizing, foxtra);
                foxtra = new Array(2);
                foxtra[0] = sizing;
                sizing = vacuum[yankee];
                sizing = sequen.bind(tangon)(sizing);
                echoed = sizing.FormSwitchRow;
                sizing = {};
                config = vacuum[source];
                config = sequen.bind(tangon)(config);
                cntext = config.intl;
                record = cntext.string;
                config = vacuum[source];
                config = sequen.bind(tangon)(config);
                config = config.t;
                config = config.54n19f;
                config = record.bind(cntext)(config);
                sizing['label'] = config;
                config = !update;
                sizing['disabled'] = config;
                vacuum = vacuum[result];
                record = sequen.bind(tangon)(vacuum);
                config = record.hasFlag;
                sequen = output.systemChannelFlags;
                vacuum = _closure1_slot22;
                vacuum = vacuum.SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATIONS;
                vacuum = config.bind(record)(sequen, vacuum);
                vacuum = !vacuum;
                sizing['value'] = vacuum;
                vacuum = kiloes.handleSystemGuildRoleSubscriptionPurchaseMessages;
                sizing['onValueChange'] = vacuum;
                sizing = ctrled.bind(tangon)(echoed, sizing);
                foxtra[1] = sizing;
                verify['children'] = foxtra;
                option = romeon.bind(tangon)(offset, verify);
 1453:
                report[9] = option;
                if(!golfie) { _fun00024_ip = 1665; continue _fun00023 }
 1463:
                offset = _closure1_slot27;
                verify = _closure1_slot28;
                option = {};
                echoed = _closure1_slot26;
                vacuum = _closure1_slot0;
                ctrled = _closure1_slot2;
                romeon = ctrled[yankee];
                romeon = vacuum.bind(tangon)(romeon);
                foxtra = romeon.FormDivider;
                romeon = {};
                foxtra = echoed.bind(tangon)(foxtra, romeon);
                romeon = new Array(2);
                romeon[0] = foxtra;
                foxtra = ctrled[yankee];
                foxtra = vacuum.bind(tangon)(foxtra);
                sizing = foxtra.FormSwitchRow;
                foxtra = {};
                sequen = ctrled[source];
                sequen = vacuum.bind(tangon)(sequen);
                record = sequen.intl;
                config = record.string;
                sequen = ctrled[source];
                sequen = vacuum.bind(tangon)(sequen);
                sequen = sequen.t;
                sequen = sequen.IhF5d3;
                sequen = config.bind(record)(sequen);
                foxtra['label'] = sequen;
                sequen = !update;
                foxtra['disabled'] = sequen;
                ctrled = ctrled[result];
                config = vacuum.bind(tangon)(ctrled);
                sequen = config.hasFlag;
                vacuum = output.systemChannelFlags;
                ctrled = _closure1_slot22;
                ctrled = ctrled.SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATION_REPLIES;
                ctrled = sequen.bind(config)(vacuum, ctrled);
                ctrled = !ctrled;
                foxtra['value'] = ctrled;
                ctrled = kiloes.handleSystemGuildRoleSubscriptionPurchaseMessageReplies;
                foxtra['onValueChange'] = ctrled;
                foxtra = echoed.bind(tangon)(sizing, foxtra);
                romeon[1] = foxtra;
                option['children'] = romeon;
                golfie = offset.bind(tangon)(verify, option);
 1665:
                report[10] = golfie;
                if(!oscard) { _fun00024_ip = 1906; continue _fun00023 }
 1675:
                verify = _closure1_slot27;
                option = _closure1_slot28;
                golfie = {};
                foxtra = _closure1_slot26;
                echoed = _closure1_slot0;
                sizing = _closure1_slot2;
                offset = sizing[yankee];
                offset = echoed.bind(tangon)(offset);
                romeon = offset.FormDivider;
                offset = {};
                romeon = foxtra.bind(tangon)(romeon, offset);
                offset = new Array(2);
                offset[0] = romeon;
                yankee = sizing[yankee];
                yankee = echoed.bind(tangon)(yankee);
                romeon = yankee.FormSwitchRow;
                yankee = {};
                ctrled = sizing[source];
                ctrled = echoed.bind(tangon)(ctrled);
                vacuum = ctrled.intl;
                ctrled = vacuum.string;
                source = sizing[source];
                source = echoed.bind(tangon)(source);
                source = source.t;
                source = source.3yOX19;
                source = ctrled.bind(vacuum)(source);
                yankee['label'] = source;
                update = !update;
                yankee['disabled'] = update;
                result = sizing[result];
                update = echoed.bind(tangon)(result);
                echoed = update.hasFlag;
                result = output.systemChannelFlags;
                output = _closure1_slot22;
                output = output.SUPPRESS_CHANNEL_PROMPT_DEADCHAT;
                output = echoed.bind(update)(result, output);
                output = !output;
                yankee['value'] = output;
                kiloes = kiloes.handleSystemGuildChannelPromptDeadchatMessages;
                yankee['onValueChange'] = kiloes;
                kiloes = _closure1_slot1;
                backup = 33;
                backup = sizing[backup];
                kiloes = kiloes.bind(tangon)(backup);
                backup = {};
                backup = foxtra.bind(tangon)(kiloes, backup);
                yankee['trailing'] = backup;
                yankee = foxtra.bind(tangon)(romeon, yankee);
                offset[1] = yankee;
                golfie['children'] = offset;
                oscard = verify.bind(tangon)(option, golfie);
 1906:
                report[11] = oscard;
                entity['children'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            }
        };
        report['value'] = golfie;
        entity[9] = report;
        report = {};
        golfie = 'renderDefaultNotificationSettings';
        report['key'] = golfie;
        golfie = function() { // Original name: value
            _fun00025: for(var _fun00026_ip = 0; ; ) switch(_fun00026_ip) {
 0:
                entity = this;
                var _closure3_slot0 = entity;
                entity = entity.props;
                option = entity.guild;
                yankee = entity.canManage;
                kiloes = entity.guildMemberCount;
                tangon = _closure1_slot26;
                output = _closure1_slot0;
                romeon = _closure1_slot2;
                report = 29;
                entity = romeon[report];
                zuuluu = undefined;
                entity = output.bind(zuuluu)(entity);
                michal = entity.FormSection;
                entity = {};
                backup = 19;
                oscard = romeon[backup];
                oscard = output.bind(zuuluu)(oscard);
                foxtra = oscard.intl;
                offset = foxtra.string;
                oscard = romeon[backup];
                oscard = output.bind(zuuluu)(oscard);
                oscard = oscard.t;
                oscard = oscard.23TVho;
                oscard = offset.bind(foxtra)(oscard);
                entity['title'] = oscard;
                report = romeon[report];
                report = output.bind(zuuluu)(report);
                oscard = report.FormHint;
                report = {};
                offset = romeon[backup];
                offset = output.bind(zuuluu)(offset);
                sizing = offset.intl;
                foxtra = sizing.string;
                offset = romeon[backup];
                offset = output.bind(zuuluu)(offset);
                offset = offset.t;
                offset = offset.PA2MZm;
                offset = foxtra.bind(sizing)(offset);
                report['children'] = offset;
                report = tangon.bind(zuuluu)(oscard, report);
                entity['hint'] = report;
                oscard = _closure1_slot1;
                offset = 34;
                report = romeon[offset];
                oscard = oscard.bind(zuuluu)(report);
                report = {};
                option = option.defaultMessageNotifications;
                report['value'] = option;
                option = {};
                foxtra = _closure1_slot17;
                foxtra = foxtra.ALL_MESSAGES;
                option['value'] = foxtra;
                foxtra = romeon[backup];
                foxtra = output.bind(zuuluu)(foxtra);
                sizing = foxtra.intl;
                foxtra = sizing.string;
                romeon = romeon[backup];
                romeon = output.bind(zuuluu)(romeon);
                romeon = romeon.t;
                romeon = romeon.n/bTaW;
                romeon = foxtra.bind(sizing)(romeon);
                option['name'] = romeon;
                romeon = null;
                foxtra = romeon != kiloes;
                romeon = undefined;
                if(!foxtra) { _fun00026_ip = 369; continue _fun00025 }
 302:
                foxtra = _closure1_slot23;
                foxtra = kiloes >= foxtra;
                romeon = undefined;
                if(!foxtra) { _fun00026_ip = 369; continue _fun00025 }
 315:
                output = _closure1_slot0;
                foxtra = _closure1_slot2;
                kiloes = foxtra[backup];
                kiloes = output.bind(zuuluu)(kiloes);
                sizing = kiloes.intl;
                kiloes = sizing.string;
                foxtra = foxtra[backup];
                foxtra = output.bind(zuuluu)(foxtra);
                foxtra = foxtra.t;
                foxtra = foxtra.L+P4t7;
                romeon = kiloes.bind(sizing)(foxtra);
 369:
                option['desc'] = romeon;
                romeon = new Array(2);
                romeon[0] = option;
                foxtra = {};
                option = _closure1_slot17;
                option = option.ONLY_MENTIONS;
                foxtra['value'] = option;
                kiloes = _closure1_slot0;
                option = _closure1_slot2;
                sizing = option[backup];
                sizing = kiloes.bind(zuuluu)(sizing);
                output = sizing.intl;
                sizing = output.format;
                backup = option[backup];
                backup = kiloes.bind(zuuluu)(backup);
                backup = backup.t;
                kiloes = backup.L2hmY2;
                backup = {};
                backup = sizing.bind(output)(kiloes, backup);
                foxtra['name'] = backup;
                romeon[1] = foxtra;
                report['options'] = romeon;
                yankee = !yankee;
                report['disabled'] = yankee;
                verify = _closure1_slot1;
                option = option[offset];
                option = verify.bind(zuuluu)(option);
                option = option.Sizes;
                option = option.LARGE;
                report['size'] = option;
                golfie = function(argFoo) { // Original name: onChange
                    entity = argFoo;
                    zuuluu = entity.value;
                    michal = _closure3_slot0;
                    entity = michal.handleDefaultNotificationsChange;
                    entity = entity.bind(michal)(zuuluu);
                    return entity;
                };
                report['onChange'] = golfie;
                report = tangon.bind(zuuluu)(oscard, report);
                entity['children'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            }
        };
        report['value'] = golfie;
        entity[10] = report;
        report = {};
        golfie = 'renderSplash';
        report['key'] = golfie;
        golfie = function() { // Original name: value
            _fun00027: for(var _fun00028_ip = 0; ; ) switch(_fun00028_ip) {
 0:
                foxtra = this;
                michal = _closure1_slot29;
                entity = foxtra.context;
                report = undefined;
                romeon = michal.bind(report)(entity);
                entity = foxtra.props;
                kiloes = entity.guild;
                result = entity.canManage;
                michal = kiloes.hasFeature;
                entity = _closure1_slot20;
                entity = entity.INVITE_SPLASH;
                michal = michal.bind(kiloes)(entity);
                entity = null;
                if(!michal) { _fun00028_ip = 507; continue _fun00027 }
 67:
                tangon = _closure1_slot27;
                zuuluu = _closure1_slot8;
                michal = {};
                oscard = romeon.redesignHorizontalPadding;
                michal['style'] = oscard;
                verify = _closure1_slot26;
                yankee = _closure1_slot0;
                output = _closure1_slot2;
                oscard = 35;
                oscard = output[oscard];
                oscard = yankee.bind(report)(oscard);
                golfie = oscard.TableRowGroupTitle;
                oscard = {};
                offset = 19;
                option = output[offset];
                option = yankee.bind(report)(option);
                echoed = option.intl;
                sizing = echoed.string;
                option = output[offset];
                option = yankee.bind(report)(option);
                option = option.t;
                option = option.tzGY0t;
                option = sizing.bind(echoed)(option);
                oscard['title'] = option;
                golfie = verify.bind(report)(golfie, oscard);
                oscard = new Array(4);
                oscard[0] = golfie;
                sizing = _closure1_slot1;
                golfie = 36;
                golfie = output[golfie];
                option = sizing.bind(report)(golfie);
                golfie = {};
                result = !result;
                golfie['disabled'] = result;
                golfie['guild'] = kiloes;
                kiloes = kiloes.splash;
                golfie['rawSource'] = kiloes;
                kiloes = function(argFoo, argBar) { // Original name: getSource
                    tangon = argFoo;
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 37;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.getGuildSplashSource;
                    entity = {};
                    report = tangon.id;
                    entity['id'] = report;
                    tangon = tangon.splash;
                    entity['splash'] = tangon;
                    tangon = argBar;
                    entity['size'] = tangon;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                golfie['getSource'] = kiloes;
                foxtra = foxtra.handleSplashChange;
                golfie['onChooseAsset'] = foxtra;
                foxtra = {'width': 1920, 'height': 1080};
                golfie['size'] = foxtra;
                golfie = verify.bind(report)(option, golfie);
                oscard[1] = golfie;
                golfie = 29;
                option = output[golfie];
                option = yankee.bind(report)(option);
                foxtra = option.FormHint;
                option = {};
                romeon = romeon.hint;
                option['style'] = romeon;
                romeon = true;
                option['inset'] = romeon;
                kiloes = output[offset];
                kiloes = yankee.bind(report)(kiloes);
                echoed = kiloes.intl;
                result = echoed.string;
                kiloes = output[offset];
                kiloes = yankee.bind(report)(kiloes);
                kiloes = kiloes.t;
                kiloes = kiloes.FEFkkJ;
                kiloes = result.bind(echoed)(kiloes);
                option['children'] = kiloes;
                option = verify.bind(report)(foxtra, option);
                oscard[2] = option;
                golfie = output[golfie];
                golfie = yankee.bind(report)(golfie);
                option = golfie.FormHint;
                golfie = {};
                golfie['inset'] = romeon;
                romeon = output[offset];
                romeon = yankee.bind(report)(romeon);
                foxtra = romeon.intl;
                romeon = foxtra.format;
                offset = output[offset];
                offset = yankee.bind(report)(offset);
                offset = offset.t;
                yankee = offset.ZYA9PT;
                offset = {};
                kiloes = 38;
                kiloes = output[kiloes];
                sizing = sizing.bind(report)(kiloes);
                kiloes = sizing.getArticleURL;
                backup = _closure1_slot21;
                backup = backup.GUILD_INVITE_SPLASH;
                backup = kiloes.bind(sizing)(backup);
                offset['articleURL'] = backup;
                offset = romeon.bind(foxtra)(yankee, offset);
                golfie['children'] = offset;
                golfie = verify.bind(report)(option, golfie);
                oscard[3] = golfie;
                michal['children'] = oscard;
                entity = tangon.bind(report)(zuuluu, michal);
 507:
                return entity;
            }
        };
        report['value'] = golfie;
        entity[11] = report;
        report = {};
        golfie = 'renderSummaries';
        report['key'] = golfie;
        golfie = function() { // Original name: value
            _fun00029: for(var _fun00030_ip = 0; ; ) switch(_fun00030_ip) {
 0:
                golfie = this;
                entity = golfie.props;
                foxtra = entity.guild;
                offset = entity.canManage;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 39;
                entity = zuuluu[entity];
                tangon = undefined;
                zuuluu = michal.bind(tangon)(entity);
                michal = zuuluu.canGuildUseConversationSummaries;
                entity = false;
                entity = michal.bind(zuuluu)(foxtra, entity);
                if(entity) { _fun00030_ip = 65; continue _fun00029 }
 61:
                entity = null;
                return entity;
 65:
                sizing = _closure1_slot0;
                verify = _closure1_slot2;
                romeon = 19;
                entity = verify[romeon];
                entity = sizing.bind(tangon)(entity);
                report = entity.intl;
                zuuluu = report.format;
                entity = verify[romeon];
                entity = sizing.bind(tangon)(entity);
                entity = entity.t;
                michal = entity.c6Cy/v;
                entity = {};
                option = _closure1_slot1;
                oscard = 38;
                oscard = verify[oscard];
                kiloes = option.bind(tangon)(oscard);
                backup = kiloes.getArticleURL;
                oscard = _closure1_slot21;
                oscard = oscard.CONVERSATION_SUMMARIES;
                oscard = backup.bind(kiloes)(oscard);
                entity['helpdeskArticle'] = oscard;
                kiloes = zuuluu.bind(report)(michal, entity);
                zuuluu = _closure1_slot26;
                report = 29;
                entity = verify[report];
                entity = sizing.bind(tangon)(entity);
                michal = entity.FormSection;
                entity = {};
                oscard = verify[romeon];
                oscard = sizing.bind(tangon)(oscard);
                output = oscard.intl;
                backup = output.string;
                oscard = verify[romeon];
                oscard = sizing.bind(tangon)(oscard);
                oscard = oscard.t;
                oscard = oscard.XPDhcX;
                oscard = backup.bind(output)(oscard);
                entity['title'] = oscard;
                oscard = verify[report];
                oscard = sizing.bind(tangon)(oscard);
                backup = oscard.FormHint;
                oscard = {};
                oscard['children'] = kiloes;
                oscard = zuuluu.bind(tangon)(backup, oscard);
                entity['hint'] = oscard;
                report = verify[report];
                report = sizing.bind(tangon)(report);
                oscard = report.FormSwitchRow;
                report = {};
                backup = verify[romeon];
                backup = sizing.bind(tangon)(backup);
                kiloes = backup.intl;
                backup = kiloes.string;
                romeon = verify[romeon];
                romeon = sizing.bind(tangon)(romeon);
                romeon = romeon.t;
                romeon = romeon.vmEDQk;
                romeon = backup.bind(kiloes)(romeon);
                report['label'] = romeon;
                romeon = foxtra.hasFeature;
                yankee = _closure1_slot20;
                yankee = yankee.SUMMARIES_ENABLED_BY_USER;
                yankee = romeon.bind(foxtra)(yankee);
                report['value'] = yankee;
                offset = !offset;
                report['disabled'] = offset;
                golfie = golfie.handleSummariesToggle;
                report['onValueChange'] = golfie;
                golfie = 33;
                golfie = verify[golfie];
                option = option.bind(tangon)(golfie);
                golfie = {};
                golfie = zuuluu.bind(tangon)(option, golfie);
                report['trailing'] = golfie;
                report = zuuluu.bind(tangon)(oscard, report);
                entity['children'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            }
        };
        report['value'] = golfie;
        entity[12] = report;
        report = {};
        golfie = 'renderDescription';
        report['key'] = golfie;
        golfie = function() { // Original name: value
            _fun00031: for(var _fun00032_ip = 0; ; ) switch(_fun00032_ip) {
 0:
                verify = this;
                entity = verify.props;
                foxtra = entity.guild;
                offset = entity.canManage;
                zuuluu = foxtra.hasFeature;
                entity = _closure1_slot20;
                entity = entity.VERIFIED;
                entity = zuuluu.bind(foxtra)(entity);
                if(entity) { _fun00032_ip = 75; continue _fun00031 }
 46:
                zuuluu = foxtra.hasFeature;
                entity = _closure1_slot20;
                entity = entity.DISCOVERABLE;
                zuuluu = zuuluu.bind(foxtra)(entity);
                entity = null;
                if(!zuuluu) { _fun00032_ip = 368; continue _fun00031 }
 75:
                report = _closure1_slot26;
                yankee = _closure1_slot0;
                romeon = _closure1_slot2;
                oscard = 29;
                michal = romeon[oscard];
                tangon = undefined;
                michal = yankee.bind(tangon)(michal);
                zuuluu = michal.FormSection;
                michal = {};
                option = 19;
                golfie = romeon[option];
                golfie = yankee.bind(tangon)(golfie);
                kiloes = golfie.intl;
                backup = kiloes.string;
                golfie = romeon[option];
                golfie = yankee.bind(tangon)(golfie);
                golfie = golfie.t;
                golfie = golfie.RSfm+v;
                golfie = backup.bind(kiloes)(golfie);
                michal['title'] = golfie;
                golfie = romeon[oscard];
                golfie = yankee.bind(tangon)(golfie);
                backup = golfie.FormHint;
                golfie = {};
                kiloes = romeon[option];
                kiloes = yankee.bind(tangon)(kiloes);
                output = kiloes.intl;
                sizing = output.string;
                kiloes = romeon[option];
                kiloes = yankee.bind(tangon)(kiloes);
                kiloes = kiloes.t;
                kiloes = kiloes./B6PR0;
                kiloes = sizing.bind(output)(kiloes);
                golfie['children'] = kiloes;
                golfie = report.bind(tangon)(backup, golfie);
                michal['hint'] = golfie;
                oscard = romeon[oscard];
                oscard = yankee.bind(tangon)(oscard);
                golfie = oscard.FormInput;
                oscard = {'showCharactersRemaining': true, 'maxLength': 120, 'showTopContainer': false, 'value': null, 'multiline': true, 'disabled': null, 'numberOfLines': 4, 'onChange': null, 'autoCorrect': true};
                foxtra = foxtra.description;
                oscard['value'] = foxtra;
                offset = !offset;
                oscard['disabled'] = offset;
                verify = verify.handleDescriptionChange;
                oscard['onChange'] = verify;
                verify = romeon[option];
                verify = yankee.bind(tangon)(verify);
                offset = verify.intl;
                verify = offset.string;
                option = romeon[option];
                option = yankee.bind(tangon)(option);
                option = option.t;
                option = option.Nvfows;
                option = verify.bind(offset)(option);
                oscard['placeholder'] = option;
                oscard = report.bind(tangon)(golfie, oscard);
                michal['children'] = oscard;
                entity = report.bind(tangon)(zuuluu, michal);
 368:
                return entity;
            }
        };
        report['value'] = golfie;
        entity[13] = report;
        report = {};
        golfie = 'renderBanner';
        report['key'] = golfie;
        golfie = function() { // Original name: value
            _fun00033: for(var _fun00034_ip = 0; ; ) switch(_fun00034_ip) {
 0:
                romeon = this;
                michal = _closure1_slot29;
                entity = romeon.context;
                tangon = undefined;
                yankee = michal.bind(tangon)(entity);
                entity = romeon.props;
                backup = entity.guild;
                output = entity.canManage;
                michal = backup.hasFeature;
                entity = _closure1_slot20;
                entity = entity.BANNER;
                entity = michal.bind(backup)(entity);
                if(entity) { _fun00034_ip = 66; continue _fun00033 }
 62:
                entity = null;
                return entity;
 66:
                zuuluu = _closure1_slot27;
                michal = _closure1_slot8;
                entity = {};
                report = yankee.redesignHorizontalPadding;
                entity['style'] = report;
                option = _closure1_slot26;
                offset = _closure1_slot0;
                sizing = _closure1_slot2;
                report = 35;
                report = sizing[report];
                report = offset.bind(tangon)(report);
                oscard = report.TableRowGroupTitle;
                report = {};
                verify = 19;
                golfie = sizing[verify];
                golfie = offset.bind(tangon)(golfie);
                result = golfie.intl;
                kiloes = result.string;
                golfie = sizing[verify];
                golfie = offset.bind(tangon)(golfie);
                golfie = golfie.t;
                golfie = golfie.0r0AzM;
                golfie = kiloes.bind(result)(golfie);
                report['title'] = golfie;
                oscard = option.bind(tangon)(oscard, report);
                report = new Array(4);
                report[0] = oscard;
                kiloes = _closure1_slot1;
                oscard = 36;
                oscard = sizing[oscard];
                golfie = kiloes.bind(tangon)(oscard);
                oscard = {};
                output = !output;
                oscard['disabled'] = output;
                oscard['guild'] = backup;
                backup = backup.banner;
                oscard['rawSource'] = backup;
                backup = function(argFoo) { // Original name: getSource
                    tangon = argFoo;
                    zuuluu = tangon.hasFeature;
                    michal = _closure1_slot20;
                    michal = michal.ANIMATED_BANNER;
                    zuuluu = zuuluu.bind(tangon)(michal);
                    report = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 37;
                    michal = michal[entity];
                    entity = undefined;
                    michal = report.bind(entity)(michal);
                    entity = michal.getGuildBannerSource;
                    entity = entity.bind(michal)(tangon, zuuluu);
                    return entity;
                };
                oscard['getSource'] = backup;
                romeon = romeon.handleBannerChange;
                oscard['onChooseAsset'] = romeon;
                romeon = {'width': 960, 'height': 540};
                oscard['size'] = romeon;
                oscard = option.bind(tangon)(golfie, oscard);
                report[1] = oscard;
                oscard = 29;
                golfie = sizing[oscard];
                golfie = offset.bind(tangon)(golfie);
                romeon = golfie.FormHint;
                golfie = {};
                yankee = yankee.hint;
                golfie['style'] = yankee;
                yankee = true;
                golfie['inset'] = yankee;
                backup = sizing[verify];
                backup = offset.bind(tangon)(backup);
                result = backup.intl;
                output = result.string;
                backup = sizing[verify];
                backup = offset.bind(tangon)(backup);
                backup = backup.t;
                backup = backup.UfqmIS;
                backup = output.bind(result)(backup);
                golfie['children'] = backup;
                golfie = option.bind(tangon)(romeon, golfie);
                report[2] = golfie;
                oscard = sizing[oscard];
                oscard = offset.bind(tangon)(oscard);
                golfie = oscard.FormHint;
                oscard = {};
                oscard['inset'] = yankee;
                yankee = sizing[verify];
                yankee = offset.bind(tangon)(yankee);
                romeon = yankee.intl;
                yankee = romeon.format;
                verify = sizing[verify];
                verify = offset.bind(tangon)(verify);
                verify = verify.t;
                offset = verify.vBcWUl;
                verify = {};
                backup = 38;
                backup = sizing[backup];
                kiloes = kiloes.bind(tangon)(backup);
                backup = kiloes.getArticleURL;
                foxtra = _closure1_slot21;
                foxtra = foxtra.GUILD_BANNER_SPLASH;
                foxtra = backup.bind(kiloes)(foxtra);
                verify['articleURL'] = foxtra;
                verify = yankee.bind(romeon)(offset, verify);
                oscard['children'] = verify;
                oscard = option.bind(tangon)(golfie, oscard);
                report[3] = oscard;
                entity['children'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            }
        };
        report['value'] = golfie;
        entity[14] = report;
        report = {};
        golfie = 'renderDeleteGuild';
        report['key'] = golfie;
        golfie = function() { // Original name: value
            _fun00035: for(var _fun00036_ip = 0; ; ) switch(_fun00036_ip) {
 0:
                option = this;
                entity = option.props;
                oscard = entity.guild;
                zuuluu = _closure1_slot15;
                entity = zuuluu.getCurrentUser;
                report = entity.bind(zuuluu)();
                tangon = null;
                zuuluu = tangon != report;
                entity = null;
                if(!zuuluu) { _fun00036_ip = 201; continue _fun00035 }
 43:
                zuuluu = oscard.isOwnerWithRequiredMfaLevel;
                zuuluu = zuuluu.bind(oscard)(report);
                entity = null;
                if(!zuuluu) { _fun00036_ip = 201; continue _fun00035 }
 62:
                report = _closure1_slot26;
                romeon = _closure1_slot0;
                foxtra = _closure1_slot2;
                michal = 29;
                michal = foxtra[michal];
                tangon = undefined;
                michal = romeon.bind(tangon)(michal);
                zuuluu = michal.FormSection;
                michal = {};
                oscard = 40;
                oscard = foxtra[oscard];
                oscard = romeon.bind(tangon)(oscard);
                golfie = oscard.TableRow;
                oscard = {};
                verify = 'danger';
                oscard['variant'] = verify;
                verify = 19;
                offset = foxtra[verify];
                offset = romeon.bind(tangon)(offset);
                yankee = offset.intl;
                offset = yankee.string;
                verify = foxtra[verify];
                verify = romeon.bind(tangon)(verify);
                verify = verify.t;
                verify = verify.l3hWPz;
                verify = offset.bind(yankee)(verify);
                oscard['label'] = verify;
                option = option.handleDeleteServer;
                oscard['onPress'] = option;
                oscard = report.bind(tangon)(golfie, oscard);
                michal['children'] = oscard;
                entity = report.bind(tangon)(zuuluu, michal);
 201:
                return entity;
            }
        };
        report['value'] = golfie;
        entity[15] = report;
        report = {};
        golfie = 'render';
        report['key'] = golfie;
        oscard = function() { // Original name: value
            romeon = this;
            michal = _closure1_slot29;
            entity = romeon.context;
            tangon = undefined;
            offset = michal.bind(tangon)(entity);
            zuuluu = _closure1_slot27;
            michal = _closure1_slot28;
            entity = {};
            golfie = _closure1_slot0;
            verify = _closure1_slot2;
            report = 29;
            report = verify[report];
            report = golfie.bind(tangon)(report);
            option = report.Form;
            report = {};
            offset = offset.overview;
            report['style'] = offset;
            offset = romeon.props;
            offset = offset.contentContainerStyle;
            report['contentContainerStyle'] = offset;
            offset = romeon.renderGuildName;
            yankee = offset.bind(romeon)();
            offset = new Array(9);
            offset[0] = yankee;
            yankee = romeon.renderSummaries;
            yankee = yankee.bind(romeon)();
            offset[1] = yankee;
            yankee = romeon.renderAFKSettings;
            yankee = yankee.bind(romeon)();
            offset[2] = yankee;
            yankee = romeon.renderSystemMessageSettings;
            yankee = yankee.bind(romeon)();
            offset[3] = yankee;
            yankee = romeon.renderDefaultNotificationSettings;
            yankee = yankee.bind(romeon)();
            offset[4] = yankee;
            yankee = romeon.renderDescription;
            yankee = yankee.bind(romeon)();
            offset[5] = yankee;
            yankee = romeon.renderBanner;
            yankee = yankee.bind(romeon)();
            offset[6] = yankee;
            yankee = romeon.renderSplash;
            yankee = yankee.bind(romeon)();
            offset[7] = yankee;
            yankee = romeon.renderDeleteGuild;
            yankee = yankee.bind(romeon)();
            offset[8] = yankee;
            report['children'] = offset;
            option = zuuluu.bind(tangon)(option, report);
            report = new Array(2);
            report[0] = option;
            option = _closure1_slot26;
            oscard = 41;
            oscard = verify[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.NavScrim;
            oscard = {};
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        report['value'] = oscard;
        entity[16] = report;
        entity = michal.bind(zuuluu)(tangon, entity);
        return entity;
    };
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot31 = golfie;
    tangon = 42;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ThemeContext;
    golfie['contextType'] = tangon;
    tangon = 47;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_settings/native/GuildSettingsModalOverview.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ConnectedGuildSettingsModalOverview
        _fun00037: for(var _fun00038_ip = 0; ; ) switch(_fun00038_ip) {
 0:
            michal = argFoo;
            verify = michal.contentContainerStyle;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            tangon = 43;
            tangon = zuuluu[tangon];
            report = undefined;
            golfie = michal.bind(report)(tangon);
            tangon = golfie.useNavigation;
            result = tangon.bind(golfie)();
            tangon = 44;
            golfie = zuuluu[tangon];
            romeon = michal.bind(report)(golfie);
            yankee = romeon.useStateFromStoresObject;
            golfie = _closure1_slot16;
            offset = new Array(1);
            offset[0] = golfie;
            option = function() {
                entity = {};
                zuuluu = _closure1_slot16;
                michal = zuuluu.getGuild;
                michal = michal.bind(zuuluu)();
                entity['guild'] = michal;
                michal = zuuluu.isSubmitting;
                michal = michal.bind(zuuluu)();
                entity['submitting'] = michal;
                michal = zuuluu.hasChanges;
                michal = michal.bind(zuuluu)();
                entity['hasChanges'] = michal;
                michal = zuuluu.getErrors;
                michal = michal.bind(zuuluu)();
                entity['errors'] = michal;
                return entity;
            };
            golfie = new Array(0);
            golfie = yankee.bind(romeon)(offset, option, golfie);
            sizing = golfie.submitting;
            kiloes = golfie.hasChanges;
            offset = golfie.errors;
            output = golfie.guild;
            var _closure2_slot0 = output;
            golfie = zuuluu[tangon];
            foxtra = michal.bind(report)(golfie);
            romeon = foxtra.useStateFromStores;
            golfie = _closure1_slot13;
            yankee = new Array(1);
            yankee[0] = golfie;
            option = new Array(1);
            option[0] = output;
            golfie = function() {
                tangon = _closure1_slot13;
                zuuluu = tangon.can;
                entity = _closure1_slot19;
                michal = entity.MANAGE_GUILD;
                entity = _closure2_slot0;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            backup = romeon.bind(foxtra)(yankee, golfie, option);
            golfie = zuuluu[tangon];
            foxtra = michal.bind(report)(golfie);
            romeon = foxtra.useStateFromStores;
            golfie = _closure1_slot9;
            yankee = new Array(1);
            yankee[0] = golfie;
            option = function() {
                _fun00039: for(var _fun00040_ip = 0; ; ) switch(_fun00040_ip) {
 0:
                    zuuluu = _closure1_slot9;
                    michal = zuuluu.getChannel;
                    report = _closure2_slot0;
                    entity = null;
                    report = entity == report;
                    entity = undefined;
                    if(report) { _fun00040_ip = 40; continue _fun00039 }
 30:
                    tangon = _closure2_slot0;
                    entity = tangon.afkChannelId;
 40:
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                }
            };
            foxtra = romeon.bind(foxtra)(yankee, option);
            option = zuuluu[tangon];
            romeon = michal.bind(report)(option);
            yankee = romeon.useStateFromStores;
            option = new Array(1);
            option[0] = golfie;
            golfie = function() {
                _fun00041: for(var _fun00042_ip = 0; ; ) switch(_fun00042_ip) {
 0:
                    zuuluu = _closure1_slot9;
                    michal = zuuluu.getChannel;
                    report = _closure2_slot0;
                    entity = null;
                    report = entity == report;
                    entity = undefined;
                    if(report) { _fun00042_ip = 40; continue _fun00041 }
 30:
                    tangon = _closure2_slot0;
                    entity = tangon.systemChannelId;
 40:
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                }
            };
            romeon = yankee.bind(romeon)(option, golfie);
            tangon = zuuluu[tangon];
            option = michal.bind(report)(tangon);
            golfie = option.useStateFromStores;
            yankee = _closure1_slot12;
            tangon = new Array(1);
            tangon[0] = yankee;
            entity = function() {
                _fun00043: for(var _fun00044_ip = 0; ; ) switch(_fun00044_ip) {
 0:
                    zuuluu = _closure1_slot12;
                    michal = zuuluu.getMemberCount;
                    report = _closure2_slot0;
                    entity = null;
                    report = entity == report;
                    entity = undefined;
                    if(report) { _fun00044_ip = 40; continue _fun00043 }
 31:
                    tangon = _closure2_slot0;
                    entity = tangon.id;
 40:
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                }
            };
            yankee = golfie.bind(option)(tangon, entity);
            entity = 45;
            entity = zuuluu[entity];
            entity = michal.bind(report)(entity);
            golfie = entity.SimpleDeadchatPromptExperiment;
            tangon = golfie.useExperiment;
            zuuluu = {};
            entity = null;
            option = entity == output;
            michal = undefined;
            if(option) { _fun00038_ip = 324; continue _fun00037 }
 319:
            michal = output.id;
 324:
            if(!(entity == michal)) { _fun00038_ip = 332; continue _fun00037 }
 328:
            michal = _closure1_slot24;
 332:
            zuuluu['guildId'] = michal;
            michal = 'guild_settings_mobile';
            zuuluu['location'] = michal;
            michal = {};
            option = entity == output;
            michal['disable'] = option;
            option = true;
            michal['autoTrackExposure'] = option;
            michal = tangon.bind(golfie)(zuuluu, michal);
            option = michal.enableDeadchat;
            michal = entity != output;
            entity = null;
            if(!michal) { _fun00038_ip = 493; continue _fun00037 }
 385:
            tangon = _closure1_slot26;
            zuuluu = _closure1_slot0;
            golfie = _closure1_slot2;
            michal = 46;
            michal = golfie[michal];
            michal = zuuluu.bind(report)(michal);
            zuuluu = michal.RedesignCompat;
            michal = {};
            golfie = _closure1_slot31;
            oscard = {};
            oscard['navigation'] = result;
            oscard['guild'] = output;
            oscard['submitting'] = sizing;
            oscard['hasChanges'] = kiloes;
            oscard['canManage'] = backup;
            oscard['afkChannel'] = foxtra;
            oscard['systemChannel'] = romeon;
            oscard['guildMemberCount'] = yankee;
            oscard['errors'] = offset;
            oscard['contentContainerStyle'] = verify;
            oscard['enableDeadchatPrompt'] = option;
            oscard = tangon.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 493:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();