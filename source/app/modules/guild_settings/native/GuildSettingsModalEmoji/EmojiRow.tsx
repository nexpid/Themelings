// app/modules/guild_settings/native/GuildSettingsModalEmoji/EmojiRow.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
        report = argBar;
        romeo = argBaz;
        zulu = argFred;
        oscar = argPlugh;
        var _closure1_slot0 = report;
        var _closure1_slot1 = romeo;
        var _closure1_slot2 = oscar;
        entity = global;
        options = entity.Object;
        golf = options.defineProperty;
        tango = {};
        entity = true;
        tango['value'] = entity;
        entity = '__esModule';
        entity = golf.bind(options)(zulu, entity, tango);
        kilo = 0;
        tango = oscar[kilo];
        entity = undefined;
        tango = romeo.bind(entity)(tango);
        var _closure1_slot3 = tango;
        offset = 1;
        golf = oscar[offset];
        tango = argCorge;
        tango = tango.bind(entity)(golf);
        var _closure1_slot4 = tango;
        tango = 2;
        tango = oscar[tango];
        tango = report.bind(entity)(tango);
        golf = tango.View;
        var _closure1_slot5 = golf;
        golf = tango.TouchableWithoutFeedback;
        var _closure1_slot6 = golf;
        golf = tango.Image;
        var _closure1_slot7 = golf;
        tango = tango.Pressable;
        var _closure1_slot8 = tango;
        tango = 3;
        tango = oscar[tango];
        tango = romeo.bind(entity)(tango);
        var _closure1_slot9 = tango;
        foxtrot = 4;
        tango = oscar[foxtrot];
        tango = report.bind(entity)(tango);
        tango = tango.jsx;
        var _closure1_slot10 = tango;
        tango = oscar[foxtrot];
        tango = report.bind(entity)(tango);
        tango = tango.jsxs;
        var _closure1_slot11 = tango;
        tango = 5;
        tango = oscar[tango];
        options = report.bind(entity)(tango);
        golf = options.createStyles;
        tango = {};
        verify = {};
        verify['flex'] = offset;
        tango['flex'] = verify;
        offset = 'row';
        sizing = 'center';
        verify = {'flexDirection': 'row', 'alignItems': 'center'};
        tango['flexCenterRow'] = verify;
        verify = {'paddingVertical': 4, 'borderRadius': null, 'alignItems': 'center', 'flexDirection': 'row'};
        yankee = 6;
        backup = oscar[yankee];
        backup = romeo.bind(entity)(backup);
        backup = backup.radii;
        backup = backup.xs;
        verify['borderRadius'] = backup;
        tango['nameContainer'] = verify;
        verify = {};
        backup = 7;
        output = oscar[backup];
        result = report.bind(entity)(output);
        output = result.isAndroid;
        result = output.bind(result)();
        output = foxtrot;
        if(!result) { _fun00002_ip = 331; continue _fun00001 }
 329:
        output = 0;
 331:
        verify['padding'] = output;
        output = oscar[yankee];
        output = romeo.bind(entity)(output);
        output = output.radii;
        output = output.xs;
        verify['borderRadius'] = output;
        verify['alignItems'] = sizing;
        verify['flexDirection'] = offset;
        tango['activeNameContainer'] = verify;
        offset = 8;
        verify = {'marginRight': 8, 'maxWidth': 150, 'flexShrink': 1};
        tango['usernameContainer'] = verify;
        verify = {};
        sizing = 16;
        verify['fontSize'] = sizing;
        backup = oscar[backup];
        sizing = report.bind(entity)(backup);
        backup = sizing.isAndroid;
        sizing = backup.bind(sizing)();
        backup = undefined;
        if(!sizing) { _fun00002_ip = 429; continue _fun00001 }
 427:
        backup = 0;
 429:
        verify['padding'] = backup;
        backup = oscar[yankee];
        backup = romeo.bind(entity)(backup);
        backup = backup.colors;
        backup = backup.HEADER_PRIMARY;
        verify['color'] = backup;
        tango['emojiText'] = verify;
        verify = {};
        verify['width'] = foxtrot;
        tango['colon'] = verify;
        verify = {};
        foxtrot = 13;
        verify['fontSize'] = foxtrot;
        foxtrot = oscar[yankee];
        foxtrot = romeo.bind(entity)(foxtrot);
        foxtrot = foxtrot.colors;
        foxtrot = foxtrot.TEXT_MUTED;
        verify['color'] = foxtrot;
        tango['username'] = verify;
        verify = {'width': 30, 'height': 30, 'resizeMode': 'contain'};
        tango['emojiImage'] = verify;
        verify = {};
        yankee = oscar[yankee];
        yankee = romeo.bind(entity)(yankee);
        yankee = yankee.colors;
        yankee = yankee.BACKGROUND_MOBILE_SECONDARY;
        verify['backgroundColor'] = yankee;
        tango['rowBg'] = verify;
        verify = {};
        verify['marginLeft'] = offset;
        tango['overflowIcon'] = verify;
        verify = {};
        offset = 0.5;
        verify['opacity'] = offset;
        tango['disabled'] = verify;
        tango = golf.bind(options)(tango);
        var _closure1_slot12 = tango;
        tango = 24;
        tango = oscar[tango];
        oscar = report.bind(entity)(tango);
        report = oscar.fileFinishedImporting;
        tango = 'modules/guild_settings/native/GuildSettingsModalEmoji/EmojiRow.tsx';
        tango = report.bind(oscar)(tango);
        mike = function(argFoo) { // Original name: EmojiRow
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = argFoo;
                whiskey = entity.guildId;
                var _closure2_slot0 = whiskey;
                equality = entity.emoji;
                var _closure2_slot1 = equality;
                backup = entity.disabled;
                tango = undefined;
                if(!(backup === tango)) { _fun00004_ip = 37; continue _fun00003 }
 35:
                backup = false;
 37:
                var _closure2_slot2 = tango;
                var _closure2_slot3 = tango;
                var _closure2_slot4 = tango;
                entity = _closure1_slot12;
                source = entity.bind(tango)();
                golf = _closure1_slot4;
                mike = golf.useState;
                entity = equality.name;
                entity = mike.bind(golf)(entity);
                report = _closure1_slot3;
                zulu = 2;
                entity = report.bind(tango)(entity, zulu);
                mike = 0;
                config = entity[mike];
                _closure2_slot2 = config;
                status = 1;
                entity = entity[status];
                _closure2_slot3 = entity;
                oscar = golf.useState;
                entity = false;
                entity = oscar.bind(golf)(entity);
                entity = report.bind(tango)(entity, zulu);
                kilo = entity[mike];
                entity = entity[status];
                _closure2_slot4 = entity;
                mike = _closure1_slot0;
                report = _closure1_slot2;
                papa = 8;
                entity = report[papa];
                golf = mike.bind(tango)(entity);
                oscar = golf.useStateFromStores;
                entity = _closure1_slot9;
                zulu = new Array(1);
                zulu[0] = entity;
                entity = function() {
                    zulu = _closure1_slot9;
                    mike = zulu.getGuild;
                    entity = _closure2_slot0;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                zulu = oscar.bind(golf)(zulu, entity);
                entity = 9;
                entity = report[entity];
                mike = mike.bind(tango)(entity);
                entity = mike.useManageResourcePermissions;
                entity = entity.bind(mike)(zulu);
                entity = entity.canManageGuildExpression;
                foxtrot = entity.bind(tango)(equality);
                report = function() { // Original name: focus
                    zulu = _closure2_slot4;
                    mike = undefined;
                    entity = true;
                    entity = zulu.bind(mike)(entity);
                    return entity;
                };
                zulu = _closure1_slot10;
                mike = _closure1_slot6;
                entity = {};
                oscar = 'button';
                entity['accessibilityRole'] = oscar;
                entity['onLongPress'] = report;
                entity['onPress'] = report;
                golf = _closure1_slot11;
                oscar = _closure1_slot5;
                report = {};
                options = backup;
                if(!options) { _fun00004_ip = 282; continue _fun00003 }
 277:
                options = source.disabled;
 282:
                report['style'] = options;
                yankee = _closure1_slot10;
                output = _closure1_slot0;
                sizing = _closure1_slot2;
                romeo = 17;
                options = sizing[romeo];
                options = output.bind(tango)(options);
                offset = options.FormRow;
                options = {};
                context = 7;
                sizing = sizing[context];
                output = output.bind(tango)(sizing);
                sizing = output.isAndroid;
                output = sizing.bind(output)();
                sizing = undefined;
                if(output) { _fun00004_ip = 350; continue _fun00003 }
 344:
                sizing = source.rowBg;
 350:
                options['DEPRECATED_style'] = sizing;
                control = _closure1_slot10;
                update = _closure1_slot7;
                sizing = {};
                output = source.emojiImage;
                sizing['style'] = output;
                vacuum = {};
                output = _closure1_slot1;
                echo = _closure1_slot2;
                sequence = 18;
                sequence = echo[sequence];
                target = output.bind(tango)(sequence);
                record = target.getEmojiURL;
                sequence = {};
                sierra = equality.id;
                sequence['id'] = sierra;
                sierra = equality.animated;
                sequence['animated'] = sierra;
                sierra = 48;
                sequence['size'] = sierra;
                sequence = record.bind(target)(sequence);
                vacuum['uri'] = sequence;
                sizing['source'] = vacuum;
                sizing = control.bind(tango)(update, sizing);
                options['leading'] = sizing;
                sizing = 19;
                sizing = echo[sizing];
                echo = output.bind(tango)(sizing);
                output = echo.getNickname;
                sizing = equality.user;
                sierra = output.bind(echo)(whiskey, tango, sizing);
                update = _closure1_slot11;
                output = _closure1_slot5;
                sizing = {};
                echo = source.flexCenterRow;
                sizing['style'] = echo;
                control = {};
                echo = source.usernameContainer;
                control['style'] = echo;
                sequence = null;
                vacuum = sequence != sierra;
                echo = null;
                if(!vacuum) { _fun00004_ip = 586; continue _fun00003 }
 530:
                target = _closure1_slot10;
                record = _closure1_slot0;
                lima = _closure1_slot2;
                vacuum = 13;
                vacuum = lima[vacuum];
                vacuum = record.bind(tango)(vacuum);
                record = vacuum.LegacyText;
                vacuum = {};
                vacuum['numberOfLines'] = status;
                lima = source.username;
                vacuum['style'] = lima;
                vacuum['children'] = sierra;
                echo = target.bind(tango)(record, vacuum);
 586:
                target = new Array(2);
                target[0] = echo;
                sierra = _closure1_slot10;
                record = _closure1_slot0;
                vacuum = _closure1_slot2;
                echo = 13;
                lima = vacuum[echo];
                lima = record.bind(tango)(lima);
                quebec = lima.LegacyText;
                lima = {};
                lima['numberOfLines'] = status;
                status = source.username;
                lima['style'] = status;
                status = _closure1_slot1;
                variable36 = 20;
                variable36 = vacuum[variable36];
                variable38 = status.bind(tango)(variable36);
                variable37 = variable38.getUserTag;
                variable36 = equality.user;
                variable36 = variable37.bind(variable38)(variable36);
                lima['children'] = variable36;
                lima = sierra.bind(tango)(quebec, lima);
                target[1] = lima;
                control['children'] = target;
                target = update.bind(tango)(output, control);
                control = new Array(3);
                control[0] = target;
                lima = 21;
                target = vacuum[lima];
                status = status.bind(tango)(target);
                target = {};
                equality = equality.user;
                target['user'] = equality;
                target['guildId'] = whiskey;
                lima = vacuum[lima];
                lima = record.bind(tango)(lima);
                lima = lima.AvatarSizes;
                lima = lima.XSMALL;
                target['size'] = lima;
                target = sierra.bind(tango)(status, target);
                control[1] = target;
                vacuum = vacuum[context];
                record = record.bind(tango)(vacuum);
                vacuum = record.isAndroid;
                record = vacuum.bind(record)();
                vacuum = null;
                if(!record) { _fun00004_ip = 916; continue _fun00003 }
 792:
                vacuum = null;
                if(backup) { _fun00004_ip = 916; continue _fun00003 }
 797:
                context = _closure1_slot10;
                record = _closure1_slot8;
                sequence = {};
                target = source.overflowIcon;
                sequence['style'] = target;
                target = function() { // Original name: handleOverflow
                    verify = _closure2_slot0;
                    options = _closure2_slot1;
                    romeo = options.id;
                    entity = global;
                    entity = entity.HermesInternal;
                    tango = entity.concat;
                    kilo = '';
                    foxtrot = ':';
                    yankee = ':OverflowSheet';
                    backup = verify;
                    oscar = kilo[tango](backup, foxtrot, romeo, yankee, offset);
                    var _closure3_slot0 = oscar;
                    report = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 14;
                    tango = mike[entity];
                    entity = undefined;
                    report = report.bind(entity)(tango);
                    tango = report.openLazy;
                    offset = _closure1_slot0;
                    zulu = 16;
                    zulu = mike[zulu];
                    offset = offset.bind(entity)(zulu);
                    zulu = 15;
                    zulu = mike[zulu];
                    mike = mike.paths;
                    zulu = offset.bind(entity)(zulu, mike);
                    mike = {};
                    mike['guildId'] = verify;
                    mike['emoji'] = options;
                    golf = function() { // Original name: onClose
                        zulu = _closure1_slot1;
                        mike = _closure1_slot2;
                        entity = 14;
                        mike = mike[entity];
                        entity = undefined;
                        zulu = zulu.bind(entity)(mike);
                        mike = zulu.hideActionSheet;
                        entity = _closure3_slot0;
                        entity = mike.bind(zulu)(entity);
                        return entity;
                    };
                    mike['onClose'] = golf;
                    mike = tango.bind(report)(zulu, oscar, mike);
                    return entity;
                };
                sequence['onPress'] = target;
                sequence['hitSlop'] = papa;
                whiskey = _closure1_slot1;
                lima = _closure1_slot2;
                status = 22;
                papa = lima[status];
                target = whiskey.bind(tango)(papa);
                papa = {};
                sierra = 23;
                sierra = lima[sierra];
                sierra = whiskey.bind(tango)(sierra);
                papa['source'] = sierra;
                sierra = _closure1_slot0;
                status = lima[status];
                status = sierra.bind(tango)(status);
                status = status.IconSizes;
                status = status.REFRESH_SMALL_16;
                papa['size'] = status;
                papa = context.bind(tango)(target, papa);
                sequence['children'] = papa;
                vacuum = context.bind(tango)(record, sequence);
 916:
                control[2] = vacuum;
                sizing['children'] = control;
                sizing = update.bind(tango)(output, sizing);
                options['trailing'] = sizing;
                if(!kilo) { _fun00004_ip = 1086; continue _fun00003 }
 941:
                if(backup) { _fun00004_ip = 1086; continue _fun00003 }
 947:
                if(!foxtrot) { _fun00004_ip = 1086; continue _fun00003 }
 953:
                kilo = _closure1_slot10;
                backup = _closure1_slot5;
                foxtrot = {};
                sizing = source.activeNameContainer;
                foxtrot['style'] = sizing;
                output = _closure1_slot0;
                sizing = _closure1_slot2;
                sizing = sizing[echo];
                sizing = output.bind(tango)(sizing);
                output = sizing.TextInput;
                sizing = {'autoCorrect': false, 'numberOfLines': 1, 'returnKeyType': 'done', 'autoCapitalize': 'none', 'autoFocus': true};
                echo = function() { // Original name: handleNameBlur
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        zulu = _closure2_slot2;
                        mike = _closure2_slot1;
                        mike = mike.name;
                        if(!(zulu !== mike)) { _fun00006_ip = 115; continue _fun00005 }
 20:
                        zulu = _closure1_slot0;
                        options = _closure1_slot2;
                        mike = 10;
                        mike = options[mike];
                        golf = undefined;
                        tango = zulu.bind(golf)(mike);
                        zulu = tango.updateEmoji;
                        mike = {};
                        oscar = _closure2_slot0;
                        mike['guildId'] = oscar;
                        oscar = _closure2_slot1;
                        oscar = oscar.id;
                        mike['emojiId'] = oscar;
                        oscar = _closure1_slot1;
                        report = 11;
                        report = options[report];
                        golf = oscar.bind(golf)(report);
                        oscar = golf.sanitizeEmojiName;
                        report = _closure2_slot2;
                        report = oscar.bind(golf)(report);
                        mike['name'] = report;
                        mike = zulu.bind(tango)(mike);
 115:
                        zulu = _closure2_slot4;
                        entity = undefined;
                        mike = false;
                        mike = zulu.bind(entity)(mike);
                        return entity;
                    }
                };
                sizing['onBlur'] = echo;
                update = source.emojiText;
                echo = new Array(2);
                echo[0] = update;
                update = source.flex;
                echo[1] = update;
                sizing['style'] = echo;
                result = function(argFoo) { // Original name: updateName
                    zulu = _closure2_slot3;
                    entity = undefined;
                    mike = argFoo;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                };
                sizing['onChangeText'] = result;
                sizing['value'] = config;
                sizing = kilo.bind(tango)(output, sizing);
                foxtrot['children'] = sizing;
                foxtrot = kilo.bind(tango)(backup, foxtrot);
                _fun00004_ip = 1289; continue _fun00003;
 1086:
                sizing = _closure1_slot11;
                kilo = _closure1_slot5;
                backup = {};
                output = source.nameContainer;
                backup['style'] = output;
                update = _closure1_slot10;
                echo = _closure1_slot0;
                control = _closure1_slot2;
                result = 12;
                output = control[result];
                output = echo.bind(tango)(output);
                vacuum = output.Text;
                output = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted', 'children': ':'};
                sequence = source.colon;
                output['style'] = sequence;
                vacuum = update.bind(tango)(vacuum, output);
                output = new Array(3);
                output[0] = vacuum;
                vacuum = control[result];
                vacuum = echo.bind(tango)(vacuum);
                sequence = vacuum.Text;
                vacuum = {'lineClamp': 1, 'style': null, 'variant': 'text-md/medium', 'color': 'header-primary'};
                record = source.emojiText;
                vacuum['style'] = record;
                vacuum['children'] = config;
                vacuum = update.bind(tango)(sequence, vacuum);
                output[1] = vacuum;
                result = control[result];
                result = echo.bind(tango)(result);
                echo = result.Text;
                result = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted', 'children': ':'};
                source = source.colon;
                result['style'] = source;
                result = update.bind(tango)(echo, result);
                output[2] = result;
                backup['children'] = output;
                foxtrot = sizing.bind(tango)(kilo, backup);
 1289:
                options['label'] = foxtrot;
                offset = yankee.bind(tango)(offset, options);
                options = new Array(2);
                options[0] = offset;
                yankee = _closure1_slot10;
                offset = _closure1_slot0;
                verify = _closure1_slot2;
                verify = verify[romeo];
                verify = offset.bind(tango)(verify);
                offset = verify.FormDivider;
                verify = {'outer': false, 'iconPush': false};
                verify = yankee.bind(tango)(offset, verify);
                options[1] = verify;
                report['children'] = options;
                report = golf.bind(tango)(oscar, report);
                entity['children'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            }
        };
        zulu['EmojiRow'] = mike;
        return entity;
    }
})();