// app/modules/guild_settings/native/GuildSettingsModalEmoji/EmojiRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
        report = argBar;
        romeon = argBaz;
        zuuluu = argFre;
        oscard = argPlu;
        var _closure1_slot0 = report;
        var _closure1_slot1 = romeon;
        var _closure1_slot2 = oscard;
        entity = global;
        option = entity.Object;
        golfie = option.defineProperty;
        tangon = {};
        entity = true;
        tangon['value'] = entity;
        entity = '__esModule';
        entity = golfie.bind(option)(zuuluu, entity, tangon);
        kiloes = 0;
        tangon = oscard[kiloes];
        entity = undefined;
        tangon = romeon.bind(entity)(tangon);
        var _closure1_slot3 = tangon;
        offset = 1;
        golfie = oscard[offset];
        tangon = argCor;
        tangon = tangon.bind(entity)(golfie);
        var _closure1_slot4 = tangon;
        tangon = 2;
        tangon = oscard[tangon];
        tangon = report.bind(entity)(tangon);
        golfie = tangon.View;
        var _closure1_slot5 = golfie;
        golfie = tangon.TouchableWithoutFeedback;
        var _closure1_slot6 = golfie;
        golfie = tangon.Image;
        var _closure1_slot7 = golfie;
        tangon = tangon.Pressable;
        var _closure1_slot8 = tangon;
        tangon = 3;
        tangon = oscard[tangon];
        tangon = romeon.bind(entity)(tangon);
        var _closure1_slot9 = tangon;
        foxtra = 4;
        tangon = oscard[foxtra];
        tangon = report.bind(entity)(tangon);
        tangon = tangon.jsx;
        var _closure1_slot10 = tangon;
        tangon = oscard[foxtra];
        tangon = report.bind(entity)(tangon);
        tangon = tangon.jsxs;
        var _closure1_slot11 = tangon;
        tangon = 5;
        tangon = oscard[tangon];
        option = report.bind(entity)(tangon);
        golfie = option.createStyles;
        tangon = {};
        verify = {};
        verify['flex'] = offset;
        tangon['flex'] = verify;
        offset = 'row';
        sizing = 'center';
        verify = {'flexDirection': 'row', 'alignItems': 'center'};
        tangon['flexCenterRow'] = verify;
        verify = {'paddingVertical': 4, 'borderRadius': null, 'alignItems': 'center', 'flexDirection': 'row'};
        yankee = 6;
        backup = oscard[yankee];
        backup = romeon.bind(entity)(backup);
        backup = backup.radii;
        backup = backup.xs;
        verify['borderRadius'] = backup;
        tangon['nameContainer'] = verify;
        verify = {};
        backup = 7;
        output = oscard[backup];
        result = report.bind(entity)(output);
        output = result.isAndroid;
        result = output.bind(result)();
        output = foxtra;
        if(!result) { _fun00002_ip = 331; continue _fun00001 }
 329:
        output = 0;
 331:
        verify['padding'] = output;
        output = oscard[yankee];
        output = romeon.bind(entity)(output);
        output = output.radii;
        output = output.xs;
        verify['borderRadius'] = output;
        verify['alignItems'] = sizing;
        verify['flexDirection'] = offset;
        tangon['activeNameContainer'] = verify;
        offset = 8;
        verify = {'marginRight': 8, 'maxWidth': 150, 'flexShrink': 1};
        tangon['usernameContainer'] = verify;
        verify = {};
        sizing = 16;
        verify['fontSize'] = sizing;
        backup = oscard[backup];
        sizing = report.bind(entity)(backup);
        backup = sizing.isAndroid;
        sizing = backup.bind(sizing)();
        backup = undefined;
        if(!sizing) { _fun00002_ip = 429; continue _fun00001 }
 427:
        backup = 0;
 429:
        verify['padding'] = backup;
        backup = oscard[yankee];
        backup = romeon.bind(entity)(backup);
        backup = backup.colors;
        backup = backup.HEADER_PRIMARY;
        verify['color'] = backup;
        tangon['emojiText'] = verify;
        verify = {};
        verify['width'] = foxtra;
        tangon['colon'] = verify;
        verify = {};
        foxtra = 13;
        verify['fontSize'] = foxtra;
        foxtra = oscard[yankee];
        foxtra = romeon.bind(entity)(foxtra);
        foxtra = foxtra.colors;
        foxtra = foxtra.TEXT_MUTED;
        verify['color'] = foxtra;
        tangon['username'] = verify;
        verify = {'width': 30, 'height': 30, 'resizeMode': 'contain'};
        tangon['emojiImage'] = verify;
        verify = {};
        yankee = oscard[yankee];
        yankee = romeon.bind(entity)(yankee);
        yankee = yankee.colors;
        yankee = yankee.BACKGROUND_MOBILE_SECONDARY;
        verify['backgroundColor'] = yankee;
        tangon['rowBg'] = verify;
        verify = {};
        verify['marginLeft'] = offset;
        tangon['overflowIcon'] = verify;
        verify = {};
        offset = 0.5;
        verify['opacity'] = offset;
        tangon['disabled'] = verify;
        tangon = golfie.bind(option)(tangon);
        var _closure1_slot12 = tangon;
        tangon = 24;
        tangon = oscard[tangon];
        oscard = report.bind(entity)(tangon);
        report = oscard.fileFinishedImporting;
        tangon = 'modules/guild_settings/native/GuildSettingsModalEmoji/EmojiRow.tsx';
        tangon = report.bind(oscard)(tangon);
        michal = function(argFoo) { // Original name: EmojiRow
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = argFoo;
                whisks = entity.guildId;
                var _closure2_slot0 = whisks;
                equals = entity.emoji;
                var _closure2_slot1 = equals;
                backup = entity.disabled;
                tangon = undefined;
                if(!(backup === tangon)) { _fun00004_ip = 37; continue _fun00003 }
 35:
                backup = false;
 37:
                var _closure2_slot2 = tangon;
                var _closure2_slot3 = tangon;
                var _closure2_slot4 = tangon;
                entity = _closure1_slot12;
                source = entity.bind(tangon)();
                golfie = _closure1_slot4;
                michal = golfie.useState;
                entity = equals.name;
                entity = michal.bind(golfie)(entity);
                report = _closure1_slot3;
                zuuluu = 2;
                entity = report.bind(tangon)(entity, zuuluu);
                michal = 0;
                config = entity[michal];
                _closure2_slot2 = config;
                status = 1;
                entity = entity[status];
                _closure2_slot3 = entity;
                oscard = golfie.useState;
                entity = false;
                entity = oscard.bind(golfie)(entity);
                entity = report.bind(tangon)(entity, zuuluu);
                kiloes = entity[michal];
                entity = entity[status];
                _closure2_slot4 = entity;
                michal = _closure1_slot0;
                report = _closure1_slot2;
                papara = 8;
                entity = report[papara];
                golfie = michal.bind(tangon)(entity);
                oscard = golfie.useStateFromStores;
                entity = _closure1_slot9;
                zuuluu = new Array(1);
                zuuluu[0] = entity;
                entity = function() {
                    zuuluu = _closure1_slot9;
                    michal = zuuluu.getGuild;
                    entity = _closure2_slot0;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                zuuluu = oscard.bind(golfie)(zuuluu, entity);
                entity = 9;
                entity = report[entity];
                michal = michal.bind(tangon)(entity);
                entity = michal.useManageResourcePermissions;
                entity = entity.bind(michal)(zuuluu);
                entity = entity.canManageGuildExpression;
                foxtra = entity.bind(tangon)(equals);
                report = function() { // Original name: focus
                    zuuluu = _closure2_slot4;
                    michal = undefined;
                    entity = true;
                    entity = zuuluu.bind(michal)(entity);
                    return entity;
                };
                zuuluu = _closure1_slot10;
                michal = _closure1_slot6;
                entity = {};
                oscard = 'button';
                entity['accessibilityRole'] = oscard;
                entity['onLongPress'] = report;
                entity['onPress'] = report;
                golfie = _closure1_slot11;
                oscard = _closure1_slot5;
                report = {};
                option = backup;
                if(!option) { _fun00004_ip = 282; continue _fun00003 }
 277:
                option = source.disabled;
 282:
                report['style'] = option;
                yankee = _closure1_slot10;
                output = _closure1_slot0;
                sizing = _closure1_slot2;
                romeon = 17;
                option = sizing[romeon];
                option = output.bind(tangon)(option);
                offset = option.FormRow;
                option = {};
                cntext = 7;
                sizing = sizing[cntext];
                output = output.bind(tangon)(sizing);
                sizing = output.isAndroid;
                output = sizing.bind(output)();
                sizing = undefined;
                if(output) { _fun00004_ip = 350; continue _fun00003 }
 344:
                sizing = source.rowBg;
 350:
                option['DEPRECATED_style'] = sizing;
                ctrled = _closure1_slot10;
                update = _closure1_slot7;
                sizing = {};
                output = source.emojiImage;
                sizing['style'] = output;
                vacuum = {};
                output = _closure1_slot1;
                echoed = _closure1_slot2;
                sequen = 18;
                sequen = echoed[sequen];
                target = output.bind(tangon)(sequen);
                record = target.getEmojiURL;
                sequen = {};
                sierra = equals.id;
                sequen['id'] = sierra;
                sierra = equals.animated;
                sequen['animated'] = sierra;
                sierra = 48;
                sequen['size'] = sierra;
                sequen = record.bind(target)(sequen);
                vacuum['uri'] = sequen;
                sizing['source'] = vacuum;
                sizing = ctrled.bind(tangon)(update, sizing);
                option['leading'] = sizing;
                sizing = 19;
                sizing = echoed[sizing];
                echoed = output.bind(tangon)(sizing);
                output = echoed.getNickname;
                sizing = equals.user;
                sierra = output.bind(echoed)(whisks, tangon, sizing);
                update = _closure1_slot11;
                output = _closure1_slot5;
                sizing = {};
                echoed = source.flexCenterRow;
                sizing['style'] = echoed;
                ctrled = {};
                echoed = source.usernameContainer;
                ctrled['style'] = echoed;
                sequen = null;
                vacuum = sequen != sierra;
                echoed = null;
                if(!vacuum) { _fun00004_ip = 586; continue _fun00003 }
 530:
                target = _closure1_slot10;
                record = _closure1_slot0;
                limora = _closure1_slot2;
                vacuum = 13;
                vacuum = limora[vacuum];
                vacuum = record.bind(tangon)(vacuum);
                record = vacuum.LegacyText;
                vacuum = {};
                vacuum['numberOfLines'] = status;
                limora = source.username;
                vacuum['style'] = limora;
                vacuum['children'] = sierra;
                echoed = target.bind(tangon)(record, vacuum);
 586:
                target = new Array(2);
                target[0] = echoed;
                sierra = _closure1_slot10;
                record = _closure1_slot0;
                vacuum = _closure1_slot2;
                echoed = 13;
                limora = vacuum[echoed];
                limora = record.bind(tangon)(limora);
                quebec = limora.LegacyText;
                limora = {};
                limora['numberOfLines'] = status;
                status = source.username;
                limora['style'] = status;
                status = _closure1_slot1;
                variable36 = 20;
                variable36 = vacuum[variable36];
                variable38 = status.bind(tangon)(variable36);
                variable37 = variable38.getUserTag;
                variable36 = equals.user;
                variable36 = variable37.bind(variable38)(variable36);
                limora['children'] = variable36;
                limora = sierra.bind(tangon)(quebec, limora);
                target[1] = limora;
                ctrled['children'] = target;
                target = update.bind(tangon)(output, ctrled);
                ctrled = new Array(3);
                ctrled[0] = target;
                limora = 21;
                target = vacuum[limora];
                status = status.bind(tangon)(target);
                target = {};
                equals = equals.user;
                target['user'] = equals;
                target['guildId'] = whisks;
                limora = vacuum[limora];
                limora = record.bind(tangon)(limora);
                limora = limora.AvatarSizes;
                limora = limora.XSMALL;
                target['size'] = limora;
                target = sierra.bind(tangon)(status, target);
                ctrled[1] = target;
                vacuum = vacuum[cntext];
                record = record.bind(tangon)(vacuum);
                vacuum = record.isAndroid;
                record = vacuum.bind(record)();
                vacuum = null;
                if(!record) { _fun00004_ip = 916; continue _fun00003 }
 792:
                vacuum = null;
                if(backup) { _fun00004_ip = 916; continue _fun00003 }
 797:
                cntext = _closure1_slot10;
                record = _closure1_slot8;
                sequen = {};
                target = source.overflowIcon;
                sequen['style'] = target;
                target = function() { // Original name: handleOverflow
                    verify = _closure2_slot0;
                    option = _closure2_slot1;
                    romeon = option.id;
                    entity = global;
                    entity = entity.HermesInternal;
                    tangon = entity.concat;
                    kiloes = '';
                    foxtra = ':';
                    yankee = ':OverflowSheet';
                    backup = verify;
                    oscard = kiloes[tangon](backup, foxtra, romeon, yankee, offset);
                    var _closure3_slot0 = oscard;
                    report = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 14;
                    tangon = michal[entity];
                    entity = undefined;
                    report = report.bind(entity)(tangon);
                    tangon = report.openLazy;
                    offset = _closure1_slot0;
                    zuuluu = 16;
                    zuuluu = michal[zuuluu];
                    offset = offset.bind(entity)(zuuluu);
                    zuuluu = 15;
                    zuuluu = michal[zuuluu];
                    michal = michal.paths;
                    zuuluu = offset.bind(entity)(zuuluu, michal);
                    michal = {};
                    michal['guildId'] = verify;
                    michal['emoji'] = option;
                    golfie = function() { // Original name: onClose
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 14;
                        michal = michal[entity];
                        entity = undefined;
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = zuuluu.hideActionSheet;
                        entity = _closure3_slot0;
                        entity = michal.bind(zuuluu)(entity);
                        return entity;
                    };
                    michal['onClose'] = golfie;
                    michal = tangon.bind(report)(zuuluu, oscard, michal);
                    return entity;
                };
                sequen['onPress'] = target;
                sequen['hitSlop'] = papara;
                whisks = _closure1_slot1;
                limora = _closure1_slot2;
                status = 22;
                papara = limora[status];
                target = whisks.bind(tangon)(papara);
                papara = {};
                sierra = 23;
                sierra = limora[sierra];
                sierra = whisks.bind(tangon)(sierra);
                papara['source'] = sierra;
                sierra = _closure1_slot0;
                status = limora[status];
                status = sierra.bind(tangon)(status);
                status = status.IconSizes;
                status = status.REFRESH_SMALL_16;
                papara['size'] = status;
                papara = cntext.bind(tangon)(target, papara);
                sequen['children'] = papara;
                vacuum = cntext.bind(tangon)(record, sequen);
 916:
                ctrled[2] = vacuum;
                sizing['children'] = ctrled;
                sizing = update.bind(tangon)(output, sizing);
                option['trailing'] = sizing;
                if(!kiloes) { _fun00004_ip = 1082; continue _fun00003 }
 941:
                if(backup) { _fun00004_ip = 1082; continue _fun00003 }
 947:
                if(!foxtra) { _fun00004_ip = 1082; continue _fun00003 }
 953:
                kiloes = _closure1_slot10;
                backup = _closure1_slot5;
                foxtra = {};
                sizing = source.activeNameContainer;
                foxtra['style'] = sizing;
                output = _closure1_slot0;
                sizing = _closure1_slot2;
                sizing = sizing[echoed];
                sizing = output.bind(tangon)(sizing);
                output = sizing.TextInput;
                sizing = {'autoCorrect': false, 'numberOfLines': 1, 'returnKeyType': 'done', 'autoCapitalize': 'none', 'autoFocus': true};
                echoed = function() { // Original name: handleNameBlur
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        zuuluu = _closure2_slot2;
                        michal = _closure2_slot1;
                        michal = michal.name;
                        if(!(zuuluu !== michal)) { _fun00006_ip = 115; continue _fun00005 }
 20:
                        zuuluu = _closure1_slot0;
                        option = _closure1_slot2;
                        michal = 10;
                        michal = option[michal];
                        golfie = undefined;
                        tangon = zuuluu.bind(golfie)(michal);
                        zuuluu = tangon.updateEmoji;
                        michal = {};
                        oscard = _closure2_slot0;
                        michal['guildId'] = oscard;
                        oscard = _closure2_slot1;
                        oscard = oscard.id;
                        michal['emojiId'] = oscard;
                        oscard = _closure1_slot1;
                        report = 11;
                        report = option[report];
                        golfie = oscard.bind(golfie)(report);
                        oscard = golfie.sanitizeEmojiName;
                        report = _closure2_slot2;
                        report = oscard.bind(golfie)(report);
                        michal['name'] = report;
                        michal = zuuluu.bind(tangon)(michal);
 115:
                        zuuluu = _closure2_slot4;
                        entity = undefined;
                        michal = false;
                        michal = zuuluu.bind(entity)(michal);
                        return entity;
                    }
                };
                sizing['onBlur'] = echoed;
                update = source.emojiText;
                echoed = new Array(2);
                echoed[0] = update;
                update = source.flex;
                echoed[1] = update;
                sizing['style'] = echoed;
                result = function(argFoo) { // Original name: updateName
                    zuuluu = _closure2_slot3;
                    entity = undefined;
                    michal = argFoo;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                sizing['onChangeText'] = result;
                sizing['value'] = config;
                sizing = kiloes.bind(tangon)(output, sizing);
                foxtra['children'] = sizing;
                foxtra = kiloes.bind(tangon)(backup, foxtra);
                _fun00004_ip = 1285; continue _fun00003;
 1082:
                sizing = _closure1_slot11;
                kiloes = _closure1_slot5;
                backup = {};
                output = source.nameContainer;
                backup['style'] = output;
                update = _closure1_slot10;
                echoed = _closure1_slot0;
                ctrled = _closure1_slot2;
                result = 12;
                output = ctrled[result];
                output = echoed.bind(tangon)(output);
                vacuum = output.Text;
                output = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted', 'children': ':'};
                sequen = source.colon;
                output['style'] = sequen;
                vacuum = update.bind(tangon)(vacuum, output);
                output = new Array(3);
                output[0] = vacuum;
                vacuum = ctrled[result];
                vacuum = echoed.bind(tangon)(vacuum);
                sequen = vacuum.Text;
                vacuum = {'lineClamp': 1, 'style': null, 'variant': 'text-md/medium', 'color': 'header-primary'};
                record = source.emojiText;
                vacuum['style'] = record;
                vacuum['children'] = config;
                vacuum = update.bind(tangon)(sequen, vacuum);
                output[1] = vacuum;
                result = ctrled[result];
                result = echoed.bind(tangon)(result);
                echoed = result.Text;
                result = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted', 'children': ':'};
                source = source.colon;
                result['style'] = source;
                result = update.bind(tangon)(echoed, result);
                output[2] = result;
                backup['children'] = output;
                foxtra = sizing.bind(tangon)(kiloes, backup);
 1285:
                option['label'] = foxtra;
                offset = yankee.bind(tangon)(offset, option);
                option = new Array(2);
                option[0] = offset;
                yankee = _closure1_slot10;
                offset = _closure1_slot0;
                verify = _closure1_slot2;
                verify = verify[romeon];
                verify = offset.bind(tangon)(verify);
                offset = verify.FormDivider;
                verify = {'outer': false, 'iconPush': false};
                verify = yankee.bind(tangon)(offset, verify);
                option[1] = verify;
                report['children'] = option;
                report = golfie.bind(tangon)(oscard, report);
                entity['children'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            }
        };
        zuuluu['EmojiRow'] = michal;
        return entity;
    }
})();