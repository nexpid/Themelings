// app/modules/guild_settings/native/GuildSettingsModalEmoji/EmojiRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
        report = argBar;
        yankee = argBaz;
        zuuluu = argFre;
        oscard = argPlu;
        var _closure1_slot0 = report;
        var _closure1_slot1 = yankee;
        var _closure1_slot2 = oscard;
        entity = global;
        option = entity.Object;
        golfie = option.defineProperty;
        tangon = {};
        entity = true;
        tangon['value'] = entity;
        entity = '__esModule';
        entity = golfie.bind(option)(zuuluu, entity, tangon);
        kiloes = 0;
        tangon = oscard[kiloes];
        entity = undefined;
        tangon = yankee.bind(entity)(tangon);
        var _closure1_slot3 = tangon;
        offset = 1;
        golfie = oscard[offset];
        tangon = argCor;
        tangon = tangon.bind(entity)(golfie);
        var _closure1_slot4 = tangon;
        tangon = 2;
        tangon = oscard[tangon];
        tangon = report.bind(entity)(tangon);
        golfie = tangon.View;
        var _closure1_slot5 = golfie;
        golfie = tangon.TouchableWithoutFeedback;
        var _closure1_slot6 = golfie;
        golfie = tangon.Image;
        var _closure1_slot7 = golfie;
        tangon = tangon.Pressable;
        var _closure1_slot8 = tangon;
        tangon = 3;
        tangon = oscard[tangon];
        tangon = yankee.bind(entity)(tangon);
        var _closure1_slot9 = tangon;
        foxtra = 4;
        tangon = oscard[foxtra];
        tangon = report.bind(entity)(tangon);
        golfie = tangon.jsx;
        var _closure1_slot10 = golfie;
        tangon = tangon.jsxs;
        var _closure1_slot11 = tangon;
        tangon = 5;
        tangon = oscard[tangon];
        option = report.bind(entity)(tangon);
        golfie = option.createStyles;
        tangon = {};
        verify = {};
        verify['flex'] = offset;
        tangon['flex'] = verify;
        romeon = 'row';
        sizing = 'center';
        verify = {'flexDirection': 'row', 'alignItems': 'center'};
        tangon['flexCenterRow'] = verify;
        verify = {'paddingVertical': 4, 'borderRadius': null, 'alignItems': 'center', 'flexDirection': 'row'};
        offset = 6;
        backup = oscard[offset];
        backup = yankee.bind(entity)(backup);
        backup = backup.radii;
        backup = backup.xs;
        verify['borderRadius'] = backup;
        tangon['nameContainer'] = verify;
        verify = {};
        backup = 7;
        output = oscard[backup];
        result = report.bind(entity)(output);
        output = result.isAndroid;
        result = output.bind(result)();
        output = foxtra;
        if(!result) { _fun00002_ip = 326; continue _fun00001 }
 324:
        output = 0;
 326:
        verify['padding'] = output;
        output = oscard[offset];
        output = yankee.bind(entity)(output);
        output = output.radii;
        output = output.xs;
        verify['borderRadius'] = output;
        verify['alignItems'] = sizing;
        verify['flexDirection'] = romeon;
        tangon['activeNameContainer'] = verify;
        romeon = 8;
        verify = {'marginRight': 8, 'maxWidth': 150, 'flexShrink': 1};
        tangon['usernameContainer'] = verify;
        verify = {};
        sizing = 16;
        verify['fontSize'] = sizing;
        backup = oscard[backup];
        sizing = report.bind(entity)(backup);
        backup = sizing.isAndroid;
        sizing = backup.bind(sizing)();
        backup = undefined;
        if(!sizing) { _fun00002_ip = 424; continue _fun00001 }
 422:
        backup = 0;
 424:
        verify['padding'] = backup;
        backup = oscard[offset];
        backup = yankee.bind(entity)(backup);
        backup = backup.colors;
        backup = backup.HEADER_PRIMARY;
        verify['color'] = backup;
        tangon['emojiText'] = verify;
        verify = {};
        verify['width'] = foxtra;
        tangon['colon'] = verify;
        verify = {};
        foxtra = 13;
        verify['fontSize'] = foxtra;
        foxtra = oscard[offset];
        foxtra = yankee.bind(entity)(foxtra);
        foxtra = foxtra.colors;
        foxtra = foxtra.TEXT_MUTED;
        verify['color'] = foxtra;
        tangon['username'] = verify;
        verify = {'width': 30, 'height': 30, 'resizeMode': 'contain'};
        tangon['emojiImage'] = verify;
        verify = {};
        foxtra = oscard[offset];
        foxtra = yankee.bind(entity)(foxtra);
        foxtra = foxtra.colors;
        foxtra = foxtra.BACKGROUND_MOBILE_SECONDARY;
        verify['backgroundColor'] = foxtra;
        tangon['rowBg'] = verify;
        verify = {};
        verify['marginLeft'] = romeon;
        tangon['overflowIcon'] = verify;
        verify = {};
        offset = oscard[offset];
        offset = yankee.bind(entity)(offset);
        offset = offset.colors;
        offset = offset.BACKGROUND_MOBILE_SECONDARY;
        verify['backgroundColor'] = offset;
        tangon['container'] = verify;
        tangon = golfie.bind(option)(tangon);
        var _closure1_slot12 = tangon;
        tangon = 26;
        tangon = oscard[tangon];
        oscard = report.bind(entity)(tangon);
        report = oscard.fileFinishedImporting;
        tangon = 'modules/guild_settings/native/GuildSettingsModalEmoji/EmojiRow.tsx';
        tangon = report.bind(oscard)(tangon);
        michal = function(argFoo) { // Original name: EmojiRow
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = argFoo;
                limora = entity.guildId;
                var _closure2_slot0 = limora;
                whisks = entity.emoji;
                var _closure2_slot1 = whisks;
                yankee = entity.disabled;
                tangon = undefined;
                if(!(yankee === tangon)) { _fun00004_ip = 37; continue _fun00003 }
 35:
                yankee = false;
 37:
                var _closure2_slot2 = tangon;
                var _closure2_slot3 = tangon;
                var _closure2_slot4 = tangon;
                entity = _closure1_slot12;
                ctrled = entity.bind(tangon)();
                golfie = _closure1_slot4;
                michal = golfie.useState;
                entity = whisks.name;
                entity = michal.bind(golfie)(entity);
                report = _closure1_slot3;
                zuuluu = 2;
                entity = report.bind(tangon)(entity, zuuluu);
                michal = 0;
                echoed = entity[michal];
                _closure2_slot2 = echoed;
                target = 1;
                entity = entity[target];
                _closure2_slot3 = entity;
                oscard = golfie.useState;
                entity = false;
                entity = oscard.bind(golfie)(entity);
                entity = report.bind(tangon)(entity, zuuluu);
                backup = entity[michal];
                entity = entity[target];
                _closure2_slot4 = entity;
                sizing = _closure1_slot0;
                kiloes = _closure1_slot2;
                cntext = 8;
                entity = kiloes[cntext];
                report = sizing.bind(tangon)(entity);
                zuuluu = report.useStateFromStores;
                entity = _closure1_slot9;
                michal = new Array(1);
                michal[0] = entity;
                entity = function() {
                    zuuluu = _closure1_slot9;
                    michal = zuuluu.getGuild;
                    entity = _closure2_slot0;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                zuuluu = zuuluu.bind(report)(michal, entity);
                entity = 9;
                entity = kiloes[entity];
                michal = sizing.bind(tangon)(entity);
                entity = michal.useManageResourcePermissions;
                entity = entity.bind(michal)(zuuluu);
                entity = entity.canManageGuildExpression;
                foxtra = entity.bind(tangon)(whisks);
                report = function() { // Original name: focus
                    zuuluu = _closure2_slot4;
                    michal = undefined;
                    entity = true;
                    entity = zuuluu.bind(michal)(entity);
                    return entity;
                };
                zuuluu = _closure1_slot10;
                michal = _closure1_slot6;
                entity = {};
                oscard = 'button';
                entity['accessibilityRole'] = oscard;
                entity['onLongPress'] = report;
                entity['onPress'] = report;
                golfie = _closure1_slot11;
                oscard = _closure1_slot5;
                report = {};
                option = ctrled.container;
                report['style'] = option;
                romeon = 17;
                option = kiloes[romeon];
                option = sizing.bind(tangon)(option);
                offset = option.FormRow;
                option = {};
                record = 7;
                kiloes = kiloes[record];
                sizing = sizing.bind(tangon)(kiloes);
                kiloes = sizing.isAndroid;
                sizing = kiloes.bind(sizing)();
                kiloes = undefined;
                if(sizing) { _fun00004_ip = 332; continue _fun00003 }
 326:
                kiloes = ctrled.rowBg;
 332:
                option['DEPRECATED_style'] = kiloes;
                source = _closure1_slot10;
                result = _closure1_slot8;
                kiloes = {};
                sizing = function() { // Original name: onPress
                    zuuluu = _closure1_slot1;
                    verify = _closure1_slot2;
                    entity = 18;
                    michal = verify[entity];
                    entity = undefined;
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.open;
                    michal = {};
                    oscard = 'EMOJI_DISABLED';
                    michal['key'] = oscard;
                    option = _closure1_slot0;
                    report = 19;
                    oscard = verify[report];
                    oscard = option.bind(entity)(oscard);
                    golfie = oscard.intl;
                    oscard = golfie.string;
                    report = verify[report];
                    report = option.bind(entity)(report);
                    report = report.t;
                    report = report.KUzI7+;
                    report = oscard.bind(golfie)(report);
                    michal['content'] = report;
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                kiloes['onPress'] = sizing;
                sizing = whisks.available;
                kiloes['disabled'] = sizing;
                sequen = _closure1_slot7;
                vacuum = {};
                sizing = ctrled.emojiImage;
                vacuum['style'] = sizing;
                config = {};
                sizing = _closure1_slot1;
                output = _closure1_slot2;
                papara = 20;
                papara = output[papara];
                sierra = sizing.bind(tangon)(papara);
                status = sierra.getEmojiURL;
                papara = {};
                equals = whisks.id;
                papara['id'] = equals;
                equals = whisks.animated;
                papara['animated'] = equals;
                equals = 48;
                papara['size'] = equals;
                papara = status.bind(sierra)(papara);
                config['uri'] = papara;
                vacuum['source'] = config;
                vacuum = source.bind(tangon)(sequen, vacuum);
                kiloes['children'] = vacuum;
                kiloes = source.bind(tangon)(result, kiloes);
                option['leading'] = kiloes;
                kiloes = 21;
                kiloes = output[kiloes];
                output = sizing.bind(tangon)(kiloes);
                sizing = output.getNickname;
                kiloes = whisks.user;
                status = sizing.bind(output)(limora, tangon, kiloes);
                output = _closure1_slot11;
                sizing = _closure1_slot5;
                kiloes = {};
                result = ctrled.flexCenterRow;
                kiloes['style'] = result;
                result = {};
                source = ctrled.usernameContainer;
                result['style'] = source;
                sequen = null;
                vacuum = sequen != status;
                source = null;
                if(!vacuum) { _fun00004_ip = 605; continue _fun00003 }
 549:
                papara = _closure1_slot10;
                config = _closure1_slot0;
                sierra = _closure1_slot2;
                vacuum = 13;
                vacuum = sierra[vacuum];
                vacuum = config.bind(tangon)(vacuum);
                config = vacuum.LegacyText;
                vacuum = {};
                vacuum['numberOfLines'] = target;
                sierra = ctrled.username;
                vacuum['style'] = sierra;
                vacuum['children'] = status;
                source = papara.bind(tangon)(config, vacuum);
 605:
                papara = new Array(2);
                papara[0] = source;
                status = _closure1_slot10;
                config = _closure1_slot0;
                vacuum = _closure1_slot2;
                source = 13;
                sierra = vacuum[source];
                sierra = config.bind(tangon)(sierra);
                equals = sierra.LegacyText;
                sierra = {};
                sierra['numberOfLines'] = target;
                target = ctrled.username;
                sierra['style'] = target;
                target = _closure1_slot1;
                quebec = 22;
                quebec = vacuum[quebec];
                variable37 = target.bind(tangon)(quebec);
                variable36 = variable37.getUserTag;
                quebec = whisks.user;
                quebec = variable36.bind(variable37)(quebec);
                sierra['children'] = quebec;
                sierra = status.bind(tangon)(equals, sierra);
                papara[1] = sierra;
                result['children'] = papara;
                papara = output.bind(tangon)(sizing, result);
                result = new Array(3);
                result[0] = papara;
                sierra = 23;
                papara = vacuum[sierra];
                target = target.bind(tangon)(papara);
                papara = {};
                whisks = whisks.user;
                papara['user'] = whisks;
                papara['guildId'] = limora;
                sierra = vacuum[sierra];
                sierra = config.bind(tangon)(sierra);
                sierra = sierra.AvatarSizes;
                sierra = sierra.XSMALL;
                papara['size'] = sierra;
                papara = status.bind(tangon)(target, papara);
                result[1] = papara;
                vacuum = vacuum[record];
                config = config.bind(tangon)(vacuum);
                vacuum = config.isAndroid;
                config = vacuum.bind(config)();
                vacuum = null;
                if(!config) { _fun00004_ip = 935; continue _fun00003 }
 811:
                vacuum = null;
                if(yankee) { _fun00004_ip = 935; continue _fun00003 }
 816:
                record = _closure1_slot10;
                config = _closure1_slot8;
                sequen = {};
                papara = ctrled.overflowIcon;
                sequen['style'] = papara;
                papara = function() { // Original name: handleOverflow
                    verify = _closure2_slot0;
                    option = _closure2_slot1;
                    romeon = option.id;
                    entity = global;
                    entity = entity.HermesInternal;
                    tangon = entity.concat;
                    kiloes = '';
                    foxtra = ':';
                    yankee = ':OverflowSheet';
                    backup = verify;
                    oscard = kiloes[tangon](backup, foxtra, romeon, yankee, offset);
                    var _closure3_slot0 = oscard;
                    report = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 14;
                    tangon = michal[entity];
                    entity = undefined;
                    report = report.bind(entity)(tangon);
                    tangon = report.openLazy;
                    offset = _closure1_slot0;
                    zuuluu = 16;
                    zuuluu = michal[zuuluu];
                    offset = offset.bind(entity)(zuuluu);
                    zuuluu = 15;
                    zuuluu = michal[zuuluu];
                    michal = michal.paths;
                    zuuluu = offset.bind(entity)(zuuluu, michal);
                    michal = {};
                    michal['guildId'] = verify;
                    michal['emoji'] = option;
                    golfie = function() { // Original name: onClose
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 14;
                        michal = michal[entity];
                        entity = undefined;
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = zuuluu.hideActionSheet;
                        entity = _closure3_slot0;
                        entity = michal.bind(zuuluu)(entity);
                        return entity;
                    };
                    michal['onClose'] = golfie;
                    michal = tangon.bind(report)(zuuluu, oscard, michal);
                    return entity;
                };
                sequen['onPress'] = papara;
                sequen['hitSlop'] = cntext;
                limora = _closure1_slot1;
                sierra = _closure1_slot2;
                target = 24;
                cntext = sierra[target];
                papara = limora.bind(tangon)(cntext);
                cntext = {};
                status = 25;
                status = sierra[status];
                status = limora.bind(tangon)(status);
                cntext['source'] = status;
                status = _closure1_slot0;
                target = sierra[target];
                target = status.bind(tangon)(target);
                target = target.IconSizes;
                target = target.REFRESH_SMALL_16;
                cntext['size'] = target;
                cntext = record.bind(tangon)(papara, cntext);
                sequen['children'] = cntext;
                vacuum = record.bind(tangon)(config, sequen);
 935:
                result[2] = vacuum;
                kiloes['children'] = result;
                kiloes = output.bind(tangon)(sizing, kiloes);
                option['trailing'] = kiloes;
                if(!backup) { _fun00004_ip = 963; continue _fun00003 }
 957:
                if(foxtra) { _fun00004_ip = 1171; continue _fun00003 }
 963:
                kiloes = _closure1_slot11;
                backup = _closure1_slot5;
                foxtra = {};
                sizing = ctrled.nameContainer;
                foxtra['style'] = sizing;
                vacuum = _closure1_slot10;
                result = _closure1_slot0;
                sequen = _closure1_slot2;
                output = 12;
                sizing = sequen[output];
                sizing = result.bind(tangon)(sizing);
                config = sizing.Text;
                sizing = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted', 'children': ':'};
                record = ctrled.colon;
                sizing['style'] = record;
                config = vacuum.bind(tangon)(config, sizing);
                sizing = new Array(3);
                sizing[0] = config;
                config = sequen[output];
                config = result.bind(tangon)(config);
                record = config.Text;
                config = {'lineClamp': 1, 'style': null, 'variant': 'text-md/medium', 'color': 'header-primary'};
                cntext = ctrled.emojiText;
                config['style'] = cntext;
                config['children'] = echoed;
                config = vacuum.bind(tangon)(record, config);
                sizing[1] = config;
                output = sequen[output];
                output = result.bind(tangon)(output);
                result = output.Text;
                output = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted', 'children': ':'};
                sequen = ctrled.colon;
                output['style'] = sequen;
                output = vacuum.bind(tangon)(result, output);
                sizing[2] = output;
                foxtra['children'] = sizing;
                foxtra = kiloes.bind(tangon)(backup, foxtra);
                _fun00004_ip = 1299; continue _fun00003;
 1171:
                sizing = _closure1_slot10;
                kiloes = _closure1_slot5;
                backup = {};
                output = ctrled.activeNameContainer;
                backup['style'] = output;
                result = _closure1_slot0;
                output = _closure1_slot2;
                output = output[source];
                output = result.bind(tangon)(output);
                result = output.TextInput;
                output = {'autoCorrect': false, 'numberOfLines': 1, 'returnKeyType': 'done', 'autoCapitalize': 'none', 'autoFocus': true};
                source = function() { // Original name: handleNameBlur
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        zuuluu = _closure2_slot2;
                        michal = _closure2_slot1;
                        michal = michal.name;
                        if(!(zuuluu !== michal)) { _fun00006_ip = 115; continue _fun00005 }
 20:
                        zuuluu = _closure1_slot0;
                        option = _closure1_slot2;
                        michal = 10;
                        michal = option[michal];
                        golfie = undefined;
                        tangon = zuuluu.bind(golfie)(michal);
                        zuuluu = tangon.updateEmoji;
                        michal = {};
                        oscard = _closure2_slot0;
                        michal['guildId'] = oscard;
                        oscard = _closure2_slot1;
                        oscard = oscard.id;
                        michal['emojiId'] = oscard;
                        oscard = _closure1_slot1;
                        report = 11;
                        report = option[report];
                        golfie = oscard.bind(golfie)(report);
                        oscard = golfie.sanitizeEmojiName;
                        report = _closure2_slot2;
                        report = oscard.bind(golfie)(report);
                        michal['name'] = report;
                        michal = zuuluu.bind(tangon)(michal);
 115:
                        zuuluu = _closure2_slot4;
                        entity = undefined;
                        michal = false;
                        michal = zuuluu.bind(entity)(michal);
                        return entity;
                    }
                };
                output['onBlur'] = source;
                vacuum = ctrled.emojiText;
                source = new Array(2);
                source[0] = vacuum;
                ctrled = ctrled.flex;
                source[1] = ctrled;
                output['style'] = source;
                update = function(argFoo) { // Original name: updateName
                    zuuluu = _closure2_slot3;
                    entity = undefined;
                    michal = argFoo;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                output['onChangeText'] = update;
                output['value'] = echoed;
                output = sizing.bind(tangon)(result, output);
                backup['children'] = output;
                foxtra = sizing.bind(tangon)(kiloes, backup);
 1299:
                option['label'] = foxtra;
                option['disabled'] = yankee;
                offset = zuuluu.bind(tangon)(offset, option);
                option = new Array(2);
                option[0] = offset;
                yankee = _closure1_slot10;
                offset = _closure1_slot0;
                verify = _closure1_slot2;
                verify = verify[romeon];
                verify = offset.bind(tangon)(verify);
                offset = verify.FormDivider;
                verify = {'outer': false, 'iconPush': false};
                verify = yankee.bind(tangon)(offset, verify);
                option[1] = verify;
                report['children'] = option;
                report = golfie.bind(tangon)(oscard, report);
                entity['children'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            }
        };
        zuuluu['EmojiRow'] = michal;
        return entity;
    }
})();