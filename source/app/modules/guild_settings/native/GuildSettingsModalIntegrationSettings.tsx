// app/modules/guild_settings/native/GuildSettingsModalIntegrationSettings.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    options = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = options;
    var _closure1_slot2 = oscar;
    entity = function(argFoo, argBar, argBaz) { // Original name: _callSuper
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tango = argFoo;
            oscar = argBaz;
            mike = _closure1_slot6;
            zulu = undefined;
            entity = argBar;
            verify = mike.bind(zulu)(entity);
            mike = _closure1_slot5;
            entity = _closure1_slot19;
            entity = entity.bind(zulu)();
            if(entity) { _fun00002_ip = 51; continue _fun00001 }
 38:
            entity = verify.apply;
            entity = entity.bind(verify)(tango, oscar);
            _fun00002_ip = 92; continue _fun00001;
 51:
            golf = global;
            options = golf.Reflect;
            golf = options.construct;
            if(oscar) { _fun00002_ip = 71; continue _fun00001 }
 67:
            oscar = new Array(0);
 71:
            report = _closure1_slot6;
            report = report.bind(zulu)(tango);
            report = report.constructor;
            entity = golf.bind(options)(verify, oscar, report);
 92:
            entity = mike.bind(zulu)(tango, entity);
            return entity;
        }
    };
    var _closure1_slot18 = entity;
    entity = function() { // Original name: _isNativeReflectConstruct
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
 2: // try_start_0
            mike = global;
            zulu = mike.Boolean;
            zulu = zulu.prototype;
            tango = zulu.valueOf;
            zulu = tango.call;
            options = mike.Reflect;
            golf = options.construct;
            oscar = mike.Boolean;
            report = new Array(0);
            mike = function() {
                entity = undefined;
                return entity;
            };
            mike = golf.bind(options)(oscar, report, mike);
            mike = zulu.bind(tango)(mike);
            mike = !mike;
            var _closure2_slot0 = mike;
 72: // try_end0
            _fun00004_ip = 76; continue _fun00003;
 74: // catch_target0
            CatchBlockStart(arg_register=1);
 76:
            mike = function() { // Original name: _isNativeReflectConstruct
                entity = _closure2_slot0;
                entity = !entity;
                entity = !entity;
                return entity;
            };
            _closure1_slot19 = mike;
            entity = undefined;
            entity = mike.bind(entity)();
            return entity;
        }
    };
    var _closure1_slot19 = entity;
    entity = function(argFoo) { // Original name: GraceOption
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            kilo = entity.integration;
            backup = entity.option;
            var _closure2_slot0 = backup;
            options = entity.isLast;
            entity = entity.onPress;
            var _closure2_slot1 = entity;
            tango = _closure1_slot14;
            zulu = _closure1_slot8;
            mike = {};
            verify = _closure1_slot13;
            romeo = _closure1_slot0;
            yankee = _closure1_slot2;
            offset = 12;
            report = yankee[offset];
            entity = undefined;
            report = romeo.bind(entity)(report);
            oscar = report.FormRow;
            report = {};
            result = _closure1_slot13;
            sizing = yankee[offset];
            sizing = romeo.bind(entity)(sizing);
            sizing = sizing.FormRow;
            output = sizing.Label;
            sizing = {};
            echo = backup.label;
            sizing['text'] = echo;
            sizing = result.bind(entity)(output, sizing);
            report['label'] = sizing;
            foxtrot = function() { // Original name: onPress
                zulu = _closure2_slot1;
                entity = _closure2_slot0;
                mike = entity.value;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            report['onPress'] = foxtrot;
            foxtrot = _closure1_slot13;
            yankee = yankee[offset];
            yankee = romeo.bind(entity)(yankee);
            yankee = yankee.FormRow;
            romeo = yankee.Radio;
            yankee = {};
            kilo = kilo.expire_grace_period;
            backup = backup.value;
            backup = kilo === backup;
            yankee['selected'] = backup;
            yankee = foxtrot.bind(entity)(romeo, yankee);
            report['leading'] = yankee;
            oscar = verify.bind(entity)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            oscar = null;
            if(options) { _fun00006_ip = 259; continue _fun00005 }
 217:
            verify = _closure1_slot13;
            options = _closure1_slot0;
            golf = _closure1_slot2;
            golf = golf[offset];
            golf = options.bind(entity)(golf);
            options = golf.FormDivider;
            golf = {};
            offset = true;
            golf['iconPush'] = offset;
            oscar = verify.bind(entity)(options, golf);
 259:
            report[1] = oscar;
            mike['children'] = report;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        }
    };
    var _closure1_slot20 = entity;
    entity = function(argFoo) { // Original name: ForceSyncIcon
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            mike = argFoo;
            entity = mike.isSyncing;
            oscar = mike.onPress;
            tango = _closure1_slot0;
            report = _closure1_slot2;
            zulu = 11;
            zulu = report[zulu];
            report = undefined;
            golf = tango.bind(report)(zulu);
            tango = golf.useLegacyClassComponentStyles;
            zulu = _closure1_slot16;
            verify = tango.bind(golf)(zulu);
            tango = _closure1_slot13;
            if(entity) { _fun00008_ip = 260; continue _fun00007 }
 64:
            golf = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 13;
            entity = yankee[entity];
            entity = golf.bind(report)(entity);
            zulu = entity.PressableOpacity;
            entity = {};
            options = 'button';
            entity['accessibilityRole'] = options;
            options = 10;
            offset = yankee[options];
            offset = golf.bind(report)(offset);
            romeo = offset.intl;
            offset = romeo.string;
            options = yankee[options];
            options = golf.bind(report)(options);
            options = options.t;
            options = options.+Joso6;
            options = offset.bind(romeo)(options);
            entity['accessibilityLabel'] = options;
            entity['onPress'] = oscar;
            options = _closure1_slot13;
            oscar = 12;
            oscar = yankee[oscar];
            oscar = golf.bind(report)(oscar);
            oscar = oscar.FormRow;
            golf = oscar.Icon;
            oscar = {};
            verify = verify.forceSyncIcon;
            oscar['style'] = verify;
            offset = _closure1_slot1;
            verify = 14;
            verify = yankee[verify];
            verify = offset.bind(report)(verify);
            oscar['source'] = verify;
            verify = 15;
            verify = yankee[verify];
            verify = offset.bind(report)(verify);
            verify = verify.unsafe_rawColors;
            verify = verify.PRIMARY_500;
            oscar['color'] = verify;
            oscar = options.bind(report)(golf, oscar);
            entity['children'] = oscar;
            entity = tango.bind(report)(zulu, entity);
            _fun00008_ip = 284; continue _fun00007;
 260:
            zulu = _closure1_slot10;
            mike = {'animating': true, 'size': 'small'};
            entity = tango.bind(report)(zulu, mike);
 284:
            return entity;
        }
    };
    var _closure1_slot21 = entity;
    entity = function(argFoo) { // Original name: TwitchEmoticonsRow
        entity = argFoo;
        options = entity.integration;
        verify = entity.onPress;
        tango = _closure1_slot13;
        foxtrot = _closure1_slot0;
        backup = _closure1_slot2;
        report = 12;
        entity = backup[report];
        zulu = undefined;
        entity = foxtrot.bind(zulu)(entity);
        mike = entity.FormSection;
        entity = {};
        romeo = _closure1_slot13;
        golf = backup[report];
        golf = foxtrot.bind(zulu)(golf);
        yankee = golf.FormHint;
        golf = {};
        offset = 10;
        kilo = backup[offset];
        kilo = foxtrot.bind(zulu)(kilo);
        output = kilo.intl;
        sizing = output.string;
        kilo = backup[offset];
        kilo = foxtrot.bind(zulu)(kilo);
        kilo = kilo.t;
        kilo = kilo.7r4OKi;
        kilo = sizing.bind(output)(kilo);
        golf['children'] = kilo;
        golf = romeo.bind(zulu)(yankee, golf);
        entity['hint'] = golf;
        golf = _closure1_slot13;
        report = backup[report];
        report = foxtrot.bind(zulu)(report);
        oscar = report.FormSwitchRow;
        report = {};
        yankee = backup[offset];
        yankee = foxtrot.bind(zulu)(yankee);
        romeo = yankee.intl;
        yankee = romeo.string;
        offset = backup[offset];
        offset = foxtrot.bind(zulu)(offset);
        offset = offset.t;
        offset = offset.bZBLBg;
        offset = yankee.bind(romeo)(offset);
        report['label'] = offset;
        offset = options.enable_emoticons;
        report['value'] = offset;
        report['onValueChange'] = verify;
        options = options.syncing;
        report['disabled'] = options;
        report = golf.bind(zulu)(oscar, report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    var _closure1_slot22 = entity;
    entity = global;
    verify = entity.Object;
    golf = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = options.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = options.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = options.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = options.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = options.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 5;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    golf = 6;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    verify = golf.View;
    var _closure1_slot8 = verify;
    verify = golf.Image;
    var _closure1_slot9 = verify;
    golf = golf.ActivityIndicator;
    var _closure1_slot10 = golf;
    golf = 7;
    golf = oscar[golf];
    golf = options.bind(entity)(golf);
    var _closure1_slot11 = golf;
    golf = 8;
    golf = oscar[golf];
    golf = options.bind(entity)(golf);
    var _closure1_slot12 = golf;
    golf = 9;
    options = oscar[golf];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot13 = options;
    options = oscar[golf];
    options = report.bind(entity)(options);
    options = options.jsxs;
    var _closure1_slot14 = options;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot15 = golf;
    golf = 11;
    golf = oscar[golf];
    verify = report.bind(entity)(golf);
    options = verify.createLegacyClassComponentStyles;
    golf = {};
    offset = {};
    yankee = 24;
    offset['fontSize'] = yankee;
    golf['integrationLabel'] = offset;
    offset = {'width': 48, 'height': 48, 'marginRight': 16};
    golf['integrationIcon'] = offset;
    offset = {};
    yankee = 10;
    offset['marginLeft'] = yankee;
    golf['forceSyncIcon'] = offset;
    offset = {};
    yankee = 'right';
    offset['textAlign'] = yankee;
    golf['value'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot16 = golf;
    golf = tango.PureComponent;
    tango = function(argFoo) {
        tango = function(argFoo) { // Original name: GuildSettingsModalIntegrationSettings
            oscar = this;
            yankee = 0;
            golf = copyRestArgs(yankee);
            zulu = _closure1_slot3;
            report = _closure2_slot0;
            tango = undefined;
            zulu = zulu.bind(tango)(oscar, report);
            zulu = _closure1_slot18;
            entity = new Array(0);
            yankee = entity;
            offset = golf;
            verify = 0;
            golf = arraySpread(yankee, offset, verify);
            entity = zulu.bind(tango)(oscar, report, entity);
            var _closure3_slot0 = entity;
            zulu = function(argFoo) {
                entity = _closure3_slot0;
                entity = entity.props;
                options = entity.guildId;
                mike = entity.integration;
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 16;
                zulu = zulu[entity];
                entity = undefined;
                golf = tango.bind(entity)(zulu);
                oscar = golf.updateIntegration;
                romeo = mike.id;
                offset = mike.expire_grace_period;
                verify = mike.enable_emoticons;
                yankee = argFoo;
                backup = golf;
                foxtrot = options;
                mike = backup[oscar](foxtrot, romeo, yankee, offset, verify, options);
                return entity;
            };
            entity['handleExpireBehaviorChange'] = zulu;
            zulu = function(argFoo) {
                entity = _closure3_slot0;
                entity = entity.props;
                options = entity.guildId;
                mike = entity.integration;
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 16;
                zulu = zulu[entity];
                entity = undefined;
                golf = tango.bind(entity)(zulu);
                oscar = golf.updateIntegration;
                romeo = mike.id;
                yankee = mike.expire_behavior;
                verify = mike.enable_emoticons;
                offset = argFoo;
                backup = golf;
                foxtrot = options;
                mike = backup[oscar](foxtrot, romeo, yankee, offset, verify, options);
                return entity;
            };
            entity['handleExpireGracePeriodChange'] = zulu;
            zulu = function(argFoo) {
                entity = _closure3_slot0;
                entity = entity.props;
                options = entity.guildId;
                mike = entity.integration;
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 16;
                zulu = zulu[entity];
                entity = undefined;
                golf = tango.bind(entity)(zulu);
                oscar = golf.updateIntegration;
                romeo = mike.id;
                yankee = mike.expire_behavior;
                offset = mike.expire_grace_period;
                verify = argFoo;
                backup = golf;
                foxtrot = options;
                mike = backup[oscar](foxtrot, romeo, yankee, offset, verify, options);
                return entity;
            };
            entity['handleToggleEmotes'] = zulu;
            mike = function() {
                entity = _closure3_slot0;
                entity = entity.props;
                report = entity.guildId;
                mike = entity.integration;
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 16;
                zulu = zulu[entity];
                entity = undefined;
                tango = tango.bind(entity)(zulu);
                zulu = tango.syncIntegration;
                mike = mike.id;
                mike = zulu.bind(tango)(report, mike);
                return entity;
            };
            entity['handleSync'] = mike;
            return entity;
        };
        var _closure2_slot0 = tango;
        oscar = _closure1_slot7;
        zulu = undefined;
        report = argFoo;
        report = oscar.bind(zulu)(tango, report);
        mike = _closure1_slot4;
        report = {};
        oscar = 'render';
        report['key'] = oscar;
        entity = function() { // Original name: value
            _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                oscar = this;
                var _closure3_slot0 = oscar;
                mike = _closure1_slot16;
                entity = oscar.context;
                tango = undefined;
                target = mike.bind(tango)(entity);
                entity = oscar.props;
                mike = entity.guildRoles;
                context = entity.integration;
                var _closure3_slot1 = context;
                backup = entity.theme;
                entity = context.role_id;
                record = null;
                zulu = record != entity;
                sizing = null;
                if(!zulu) { _fun00010_ip = 76; continue _fun00009 }
 72:
                sizing = mike[entity];
 76:
                entity = record != sizing;
                result = undefined;
                if(!entity) { _fun00010_ip = 302; continue _fun00009 }
 88:
                zulu = _closure1_slot14;
                mike = _closure1_slot8;
                entity = {};
                verify = _closure1_slot13;
                romeo = _closure1_slot0;
                output = _closure1_slot2;
                golf = 12;
                report = output[golf];
                report = romeo.bind(tango)(report);
                options = report.FormDivider;
                report = {};
                options = verify.bind(tango)(options, report);
                report = new Array(2);
                report[0] = options;
                verify = _closure1_slot13;
                golf = output[golf];
                golf = romeo.bind(tango)(golf);
                options = golf.FormRow;
                golf = {};
                offset = 10;
                kilo = output[offset];
                kilo = romeo.bind(tango)(kilo);
                echo = kilo.intl;
                kilo = echo.string;
                offset = output[offset];
                offset = romeo.bind(tango)(offset);
                offset = offset.t;
                offset = offset.eBtNBQ;
                offset = kilo.bind(echo)(offset);
                golf['label'] = offset;
                kilo = _closure1_slot13;
                offset = 17;
                offset = output[offset];
                offset = romeo.bind(tango)(offset);
                romeo = offset.Text;
                offset = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted'};
                output = target.value;
                offset['style'] = output;
                sizing = sizing.name;
                offset['children'] = sizing;
                offset = kilo.bind(tango)(romeo, offset);
                golf['trailing'] = offset;
                golf = verify.bind(tango)(options, golf);
                report[1] = golf;
                entity['children'] = report;
                result = zulu.bind(tango)(mike, entity);
 302:
                mike = context.type;
                entity = 'youtube';
                if(!(entity !== mike)) { _fun00010_ip = 457; continue _fun00009 }
 320:
                zulu = context.name;
                entity = global;
                entity = entity.HermesInternal;
                mike = entity.concat;
                entity = 'twitch.tv/';
                control = mike.bind(entity)(zulu);
                report = _closure1_slot0;
                golf = _closure1_slot2;
                entity = 10;
                mike = golf[entity];
                mike = report.bind(tango)(mike);
                verify = mike.intl;
                options = verify.string;
                mike = golf[entity];
                mike = report.bind(tango)(mike);
                mike = mike.t;
                mike = mike.S/WCrK;
                update = options.bind(verify)(mike);
                entity = golf[entity];
                entity = report.bind(tango)(entity);
                entity = entity.t;
                status = entity.RdUTrq;
                golf = _closure1_slot13;
                report = _closure1_slot22;
                entity = {};
                entity['integration'] = context;
                options = oscar.handleToggleEmotes;
                entity['onPress'] = options;
                verify = golf.bind(tango)(report, entity);
                _fun00010_ip = 557; continue _fun00009;
 457:
                entity = context.account;
                mike = record == entity;
                zulu = undefined;
                if(mike) { _fun00010_ip = 477; continue _fun00009 }
 472:
                zulu = entity.name;
 477:
                report = _closure1_slot0;
                golf = _closure1_slot2;
                entity = 10;
                mike = golf[entity];
                mike = report.bind(tango)(mike);
                offset = mike.intl;
                options = offset.string;
                mike = golf[entity];
                mike = report.bind(tango)(mike);
                mike = mike.t;
                mike = mike.A5MiqK;
                update = options.bind(offset)(mike);
                entity = golf[entity];
                entity = report.bind(tango)(entity);
                entity = entity.t;
                status = entity.7lNtcX;
                control = zulu;
                verify = undefined;
 557:
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 18;
                entity = zulu[entity];
                zulu = mike.bind(tango)(entity);
                mike = zulu.get;
                entity = context.type;
                offset = mike.bind(zulu)(entity);
                entity = record != offset;
                source = null;
                if(!entity) { _fun00010_ip = 707; continue _fun00009 }
 601:
                zulu = _closure1_slot13;
                mike = _closure1_slot9;
                entity = {};
                romeo = _closure1_slot0;
                kilo = _closure1_slot2;
                report = 19;
                report = kilo[report];
                options = romeo.bind(tango)(report);
                golf = options.makeSource;
                report = 20;
                report = kilo[report];
                romeo = romeo.bind(tango)(report);
                report = romeo.isThemeDark;
                report = report.bind(romeo)(backup);
                offset = offset.icon;
                if(report) { _fun00010_ip = 676; continue _fun00009 }
 668:
                report = offset.lightPNG;
                _fun00010_ip = 682; continue _fun00009;
 676:
                report = offset.darkPNG;
 682:
                report = golf.bind(options)(report);
                entity['source'] = report;
                report = target.integrationIcon;
                entity['style'] = report;
                source = zulu.bind(tango)(mike, entity);
 707:
                entity = function() { // Original name: getSubGracePeriodOptions
                    zulu = [1, 3, 7, 14, 30];
                    mike = zulu.map;
                    entity = function(argFoo) {
                        oscar = argFoo;
                        entity = {};
                        entity['value'] = oscar;
                        golf = _closure1_slot0;
                        options = _closure1_slot2;
                        mike = 10;
                        tango = options[mike];
                        zulu = undefined;
                        tango = golf.bind(zulu)(tango);
                        report = tango.intl;
                        tango = report.formatToPlainString;
                        mike = options[mike];
                        mike = golf.bind(zulu)(mike);
                        mike = mike.t;
                        zulu = mike.eGjmy8;
                        mike = {};
                        mike['days'] = oscar;
                        mike = tango.bind(report)(zulu, mike);
                        entity['label'] = mike;
                        return entity;
                    };
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                kilo = entity.bind(tango)();
                var _closure3_slot2 = kilo;
                zulu = _closure1_slot14;
                mike = _closure1_slot15;
                entity = {};
                sequence = _closure1_slot0;
                vacuum = _closure1_slot2;
                offset = 12;
                report = vacuum[offset];
                report = sequence.bind(tango)(report);
                golf = report.Form;
                report = {};
                options = {};
                papa = 1;
                options['flex'] = papa;
                report['style'] = options;
                options = oscar.props;
                options = options.contentContainerStyle;
                report['contentContainerStyle'] = options;
                backup = _closure1_slot13;
                options = vacuum[offset];
                options = sequence.bind(tango)(options);
                romeo = options.FormSection;
                options = {};
                echo = _closure1_slot13;
                sizing = vacuum[offset];
                sizing = sequence.bind(tango)(sizing);
                output = sizing.FormRow;
                sizing = {};
                config = _closure1_slot13;
                vacuum = vacuum[offset];
                vacuum = sequence.bind(tango)(vacuum);
                vacuum = vacuum.FormRow;
                sequence = vacuum.Label;
                vacuum = {};
                target = target.integrationLabel;
                vacuum['style'] = target;
                lima = context.user;
                sierra = record == lima;
                target = undefined;
                if(sierra) { _fun00010_ip = 891; continue _fun00009 }
 882:
                sierra = lima.toString;
                target = sierra.bind(lima)();
 891:
                vacuum['text'] = target;
                vacuum = config.bind(tango)(sequence, vacuum);
                sizing['label'] = vacuum;
                sizing['subLabel'] = control;
                sizing['leading'] = source;
                sizing = echo.bind(tango)(output, sizing);
                options['children'] = sizing;
                romeo = backup.bind(tango)(romeo, options);
                options = new Array(5);
                options[0] = romeo;
                sizing = _closure1_slot14;
                sequence = _closure1_slot0;
                lima = _closure1_slot2;
                romeo = lima[offset];
                romeo = sequence.bind(tango)(romeo);
                backup = romeo.FormSection;
                romeo = {};
                echo = 10;
                output = lima[echo];
                output = sequence.bind(tango)(output);
                control = output.intl;
                source = control.string;
                output = lima[echo];
                output = sequence.bind(tango)(output);
                output = output.t;
                output = output.i17qFR;
                output = source.bind(control)(output);
                romeo['title'] = output;
                control = _closure1_slot13;
                output = lima[offset];
                output = sequence.bind(tango)(output);
                source = output.FormRow;
                output = {};
                vacuum = lima[echo];
                vacuum = sequence.bind(tango)(vacuum);
                target = vacuum.intl;
                config = target.format;
                vacuum = {};
                sierra = context.subscriber_count;
                vacuum['subscribers'] = sierra;
                vacuum = config.bind(target)(status, vacuum);
                output['label'] = vacuum;
                vacuum = lima[echo];
                vacuum = sequence.bind(tango)(vacuum);
                target = vacuum.intl;
                config = target.formatToPlainString;
                vacuum = lima[echo];
                vacuum = sequence.bind(tango)(vacuum);
                vacuum = vacuum.t;
                sequence = vacuum.+42M+v;
                vacuum = {};
                sierra = _closure1_slot1;
                status = 21;
                status = lima[status];
                sierra = sierra.bind(tango)(status);
                status = context.synced_at;
                sierra = sierra.bind(tango)(status);
                status = sierra.calendar;
                status = status.bind(sierra)();
                vacuum['datetime'] = status;
                vacuum = config.bind(target)(sequence, vacuum);
                output['subLabel'] = vacuum;
                config = _closure1_slot13;
                sequence = _closure1_slot21;
                vacuum = {};
                target = context.syncing;
                record = record != target;
                if(!record) { _fun00010_ip = 1204; continue _fun00009 }
 1201:
                record = target;
 1204:
                vacuum['isSyncing'] = record;
                record = oscar.handleSync;
                vacuum['onPress'] = record;
                vacuum = config.bind(tango)(sequence, vacuum);
                output['trailing'] = vacuum;
                source = control.bind(tango)(source, output);
                output = new Array(2);
                output[0] = source;
                output[1] = result;
                romeo['children'] = output;
                romeo = sizing.bind(tango)(backup, romeo);
                options[1] = romeo;
                output = _closure1_slot14;
                result = _closure1_slot0;
                backup = _closure1_slot2;
                romeo = backup[offset];
                romeo = result.bind(tango)(romeo);
                sizing = romeo.FormSection;
                romeo = {};
                romeo['title'] = update;
                control = _closure1_slot13;
                update = backup[offset];
                update = result.bind(tango)(update);
                source = update.FormRow;
                update = {};
                vacuum = backup[echo];
                vacuum = result.bind(tango)(vacuum);
                config = vacuum.intl;
                sequence = config.string;
                vacuum = backup[echo];
                vacuum = result.bind(tango)(vacuum);
                vacuum = vacuum.t;
                vacuum = vacuum.6kpw4u;
                vacuum = sequence.bind(config)(vacuum);
                update['label'] = vacuum;
                vacuum = function() { // Original name: onPress
                    zulu = _closure3_slot0;
                    mike = zulu.handleExpireBehaviorChange;
                    entity = 0;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                update['onPress'] = vacuum;
                config = _closure1_slot13;
                vacuum = backup[offset];
                vacuum = result.bind(tango)(vacuum);
                vacuum = vacuum.FormRow;
                sequence = vacuum.Radio;
                vacuum = {};
                target = context.expire_behavior;
                record = 0;
                record = record === target;
                vacuum['selected'] = record;
                vacuum = config.bind(tango)(sequence, vacuum);
                update['leading'] = vacuum;
                source = control.bind(tango)(source, update);
                update = new Array(3);
                update[0] = source;
                vacuum = _closure1_slot13;
                source = backup[offset];
                source = result.bind(tango)(source);
                control = source.FormDivider;
                source = {};
                sequence = true;
                source['iconPush'] = sequence;
                source = vacuum.bind(tango)(control, source);
                update[1] = source;
                vacuum = _closure1_slot13;
                source = backup[offset];
                source = result.bind(tango)(source);
                control = source.FormRow;
                source = {};
                sequence = backup[echo];
                sequence = result.bind(tango)(sequence);
                record = sequence.intl;
                config = record.string;
                sequence = backup[echo];
                sequence = result.bind(tango)(sequence);
                sequence = sequence.t;
                sequence = sequence.fQUQIC;
                sequence = config.bind(record)(sequence);
                source['label'] = sequence;
                sequence = function() { // Original name: onPress
                    zulu = _closure3_slot0;
                    mike = zulu.handleExpireBehaviorChange;
                    entity = 1;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                source['onPress'] = sequence;
                record = _closure1_slot13;
                sequence = backup[offset];
                sequence = result.bind(tango)(sequence);
                sequence = sequence.FormRow;
                config = sequence.Radio;
                sequence = {};
                context = context.expire_behavior;
                context = papa === context;
                sequence['selected'] = context;
                sequence = record.bind(tango)(config, sequence);
                source['leading'] = sequence;
                source = vacuum.bind(tango)(control, source);
                update[2] = source;
                romeo['children'] = update;
                romeo = output.bind(tango)(sizing, romeo);
                options[2] = romeo;
                romeo = _closure1_slot13;
                offset = backup[offset];
                offset = result.bind(tango)(offset);
                yankee = offset.FormSection;
                offset = {};
                sizing = backup[echo];
                sizing = result.bind(tango)(sizing);
                output = sizing.intl;
                sizing = output.string;
                backup = backup[echo];
                backup = result.bind(tango)(backup);
                backup = backup.t;
                backup = backup.uiXMo6;
                backup = sizing.bind(output)(backup);
                offset['title'] = backup;
                backup = kilo.map;
                foxtrot = function(argFoo, argBar) {
                    report = argBar;
                    tango = _closure1_slot13;
                    zulu = _closure1_slot20;
                    mike = {};
                    oscar = _closure3_slot1;
                    mike['integration'] = oscar;
                    oscar = argFoo;
                    mike['option'] = oscar;
                    oscar = _closure3_slot2;
                    golf = oscar.length;
                    oscar = 1;
                    oscar = golf - oscar;
                    oscar = report === oscar;
                    mike['isLast'] = oscar;
                    entity = _closure3_slot0;
                    entity = entity.handleExpireGracePeriodChange;
                    mike['onPress'] = entity;
                    entity = undefined;
                    entity = tango.bind(entity)(zulu, mike, report);
                    return entity;
                };
                foxtrot = backup.bind(kilo)(foxtrot);
                offset['children'] = foxtrot;
                offset = romeo.bind(tango)(yankee, offset);
                options[3] = offset;
                options[4] = verify;
                report['children'] = options;
                golf = zulu.bind(tango)(golf, report);
                report = new Array(2);
                report[0] = golf;
                oscar = oscar.props;
                oscar = oscar.navScrim;
                report[1] = oscar;
                entity['children'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            }
        };
        report['value'] = entity;
        entity = new Array(1);
        entity[0] = report;
        entity = mike.bind(zulu)(tango, entity);
        return entity;
    };
    golf = tango.bind(entity)(golf);
    var _closure1_slot17 = golf;
    tango = 22;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ThemeContext;
    golf['contextType'] = tango;
    tango = 26;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_settings/native/GuildSettingsModalIntegrationSettings.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ConnectedGuildSettingsModalIntegrationSettings
        _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
            entity = argFoo;
            zulu = entity.integrationId;
            golf = entity.contentContainerStyle;
            oscar = entity.navScrim;
            tango = _closure1_slot0;
            options = _closure1_slot2;
            entity = 23;
            offset = options[entity];
            report = undefined;
            foxtrot = tango.bind(report)(offset);
            romeo = foxtrot.useStateFromStores;
            offset = _closure1_slot12;
            yankee = new Array(1);
            yankee[0] = offset;
            offset = function() {
                mike = _closure1_slot12;
                entity = mike.getProps;
                entity = entity.bind(mike)();
                return entity;
            };
            offset = romeo.bind(foxtrot)(yankee, offset);
            yankee = offset.guild;
            var _closure2_slot0 = yankee;
            foxtrot = offset.integrations;
            entity = options[entity];
            romeo = tango.bind(report)(entity);
            offset = romeo.useStateFromStores;
            entity = _closure1_slot11;
            tango = new Array(1);
            tango[0] = entity;
            entity = function() {
                _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                    zulu = _closure2_slot0;
                    entity = null;
                    zulu = entity != zulu;
                    entity = undefined;
                    if(!zulu) { _fun00014_ip = 45; continue _fun00013 }
 18:
                    tango = _closure1_slot11;
                    zulu = tango.getRoles;
                    mike = _closure2_slot0;
                    mike = mike.id;
                    entity = zulu.bind(tango)(mike);
 45:
                    return entity;
                }
            };
            offset = offset.bind(romeo)(tango, entity);
            tango = _closure1_slot1;
            entity = 24;
            entity = options[entity];
            entity = tango.bind(report)(entity);
            options = entity.bind(report)();
            tango = null;
            romeo = tango == foxtrot;
            entity = undefined;
            if(romeo) { _fun00012_ip = 180; continue _fun00011 }
 163:
            romeo = foxtrot.filter;
            verify = function(argFoo) {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 25;
                mike = mike[entity];
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                zulu = entity.SUPPORTED_SETTINGS_INTEGRATION_PLATFORMS;
                mike = zulu.includes;
                entity = argFoo;
                entity = entity.type;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            entity = romeo.bind(foxtrot)(verify);
 180:
            romeo = tango == entity;
            verify = undefined;
            if(romeo) { _fun00012_ip = 193; continue _fun00011 }
 189:
            verify = entity[zulu];
 193:
            zulu = tango == yankee;
            entity = null;
            if(zulu) { _fun00012_ip = 270; continue _fun00011 }
 202:
            zulu = tango == verify;
            entity = null;
            if(zulu) { _fun00012_ip = 270; continue _fun00011 }
 211:
            zulu = tango == offset;
            entity = null;
            if(zulu) { _fun00012_ip = 270; continue _fun00011 }
 220:
            tango = _closure1_slot13;
            zulu = _closure1_slot17;
            mike = {};
            yankee = yankee.id;
            mike['guildId'] = yankee;
            mike['guildRoles'] = offset;
            mike['integration'] = verify;
            mike['theme'] = options;
            mike['contentContainerStyle'] = golf;
            mike['navScrim'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 270:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();