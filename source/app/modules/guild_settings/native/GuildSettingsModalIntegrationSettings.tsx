// app/modules/guild_settings/native/GuildSettingsModalIntegrationSettings.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    option = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = option;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: _isNativeReflectConstruct
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
 2: // try_start_0
            michal = global;
            zuuluu = michal.Boolean;
            zuuluu = zuuluu.prototype;
            tangon = zuuluu.valueOf;
            zuuluu = tangon.call;
            option = michal.Reflect;
            golfie = option.construct;
            oscard = michal.Boolean;
            report = new Array(0);
            michal = function() {
                entity = undefined;
                return entity;
            };
            michal = golfie.bind(option)(oscard, report, michal);
            michal = zuuluu.bind(tangon)(michal);
            michal = !michal;
            var _closure2_slot0 = michal;
 72: // try_end0
            _fun00002_ip = 76; continue _fun00001;
 74: // catch_target0
            CatchBlockStart(arg_register=1);
 76:
            michal = function() { // Original name: _isNativeReflectConstruct
                entity = _closure2_slot0;
                entity = !entity;
                entity = !entity;
                return entity;
            };
            _closure1_slot18 = michal;
            entity = undefined;
            entity = michal.bind(entity)();
            return entity;
        }
    };
    var _closure1_slot18 = entity;
    entity = function(argFoo) { // Original name: GraceOption
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            kiloes = entity.integration;
            backup = entity.option;
            var _closure2_slot0 = backup;
            option = entity.isLast;
            entity = entity.onPress;
            var _closure2_slot1 = entity;
            tangon = _closure1_slot14;
            zuuluu = _closure1_slot8;
            michal = {};
            verify = _closure1_slot13;
            romeon = _closure1_slot0;
            yankee = _closure1_slot2;
            offset = 12;
            report = yankee[offset];
            entity = undefined;
            report = romeon.bind(entity)(report);
            oscard = report.FormRow;
            report = {};
            result = _closure1_slot13;
            sizing = yankee[offset];
            sizing = romeon.bind(entity)(sizing);
            sizing = sizing.FormRow;
            output = sizing.Label;
            sizing = {};
            echoed = backup.label;
            sizing['text'] = echoed;
            sizing = result.bind(entity)(output, sizing);
            report['label'] = sizing;
            foxtra = function() { // Original name: onPress
                zuuluu = _closure2_slot1;
                entity = _closure2_slot0;
                michal = entity.value;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            report['onPress'] = foxtra;
            foxtra = _closure1_slot13;
            yankee = yankee[offset];
            yankee = romeon.bind(entity)(yankee);
            yankee = yankee.FormRow;
            romeon = yankee.Radio;
            yankee = {};
            kiloes = kiloes.expire_grace_period;
            backup = backup.value;
            backup = kiloes === backup;
            yankee['selected'] = backup;
            yankee = foxtra.bind(entity)(romeon, yankee);
            report['leading'] = yankee;
            oscard = verify.bind(entity)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = null;
            if(option) { _fun00004_ip = 259; continue _fun00003 }
 217:
            verify = _closure1_slot13;
            option = _closure1_slot0;
            golfie = _closure1_slot2;
            golfie = golfie[offset];
            golfie = option.bind(entity)(golfie);
            option = golfie.FormDivider;
            golfie = {};
            offset = true;
            golfie['iconPush'] = offset;
            oscard = verify.bind(entity)(option, golfie);
 259:
            report[1] = oscard;
            michal['children'] = report;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        }
    };
    var _closure1_slot19 = entity;
    entity = function(argFoo) { // Original name: ForceSyncIcon
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            michal = argFoo;
            entity = michal.isSyncing;
            oscard = michal.onPress;
            tangon = _closure1_slot0;
            report = _closure1_slot2;
            zuuluu = 11;
            zuuluu = report[zuuluu];
            report = undefined;
            golfie = tangon.bind(report)(zuuluu);
            tangon = golfie.useLegacyClassComponentStyles;
            zuuluu = _closure1_slot16;
            verify = tangon.bind(golfie)(zuuluu);
            tangon = _closure1_slot13;
            if(entity) { _fun00006_ip = 262; continue _fun00005 }
 64:
            golfie = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 13;
            entity = yankee[entity];
            entity = golfie.bind(report)(entity);
            zuuluu = entity.PressableOpacity;
            entity = {};
            option = 'button';
            entity['accessibilityRole'] = option;
            option = 10;
            offset = yankee[option];
            offset = golfie.bind(report)(offset);
            romeon = offset.intl;
            offset = romeon.string;
            option = yankee[option];
            option = golfie.bind(report)(option);
            option = option.t;
            option = option.+Joso6;
            option = offset.bind(romeon)(option);
            entity['accessibilityLabel'] = option;
            entity['onPress'] = oscard;
            option = _closure1_slot13;
            oscard = 12;
            oscard = yankee[oscard];
            oscard = golfie.bind(report)(oscard);
            oscard = oscard.FormRow;
            golfie = oscard.Icon;
            oscard = {};
            verify = verify.forceSyncIcon;
            oscard['style'] = verify;
            offset = _closure1_slot1;
            verify = 14;
            verify = yankee[verify];
            verify = offset.bind(report)(verify);
            oscard['source'] = verify;
            verify = 15;
            verify = yankee[verify];
            verify = offset.bind(report)(verify);
            verify = verify.unsafe_rawColors;
            verify = verify.PRIMARY_500;
            oscard['color'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            entity['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, entity);
            _fun00006_ip = 286; continue _fun00005;
 262:
            zuuluu = _closure1_slot10;
            michal = {'animating': true, 'size': 'small'};
            entity = tangon.bind(report)(zuuluu, michal);
 286:
            return entity;
        }
    };
    var _closure1_slot20 = entity;
    entity = function(argFoo) { // Original name: TwitchEmoticonsRow
        entity = argFoo;
        option = entity.integration;
        verify = entity.onPress;
        tangon = _closure1_slot13;
        foxtra = _closure1_slot0;
        backup = _closure1_slot2;
        report = 12;
        entity = backup[report];
        zuuluu = undefined;
        entity = foxtra.bind(zuuluu)(entity);
        michal = entity.FormSection;
        entity = {};
        romeon = _closure1_slot13;
        golfie = backup[report];
        golfie = foxtra.bind(zuuluu)(golfie);
        yankee = golfie.FormHint;
        golfie = {};
        offset = 10;
        kiloes = backup[offset];
        kiloes = foxtra.bind(zuuluu)(kiloes);
        output = kiloes.intl;
        sizing = output.string;
        kiloes = backup[offset];
        kiloes = foxtra.bind(zuuluu)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.7r4OKi;
        kiloes = sizing.bind(output)(kiloes);
        golfie['children'] = kiloes;
        golfie = romeon.bind(zuuluu)(yankee, golfie);
        entity['hint'] = golfie;
        golfie = _closure1_slot13;
        report = backup[report];
        report = foxtra.bind(zuuluu)(report);
        oscard = report.FormSwitchRow;
        report = {};
        yankee = backup[offset];
        yankee = foxtra.bind(zuuluu)(yankee);
        romeon = yankee.intl;
        yankee = romeon.string;
        offset = backup[offset];
        offset = foxtra.bind(zuuluu)(offset);
        offset = offset.t;
        offset = offset.bZBLBg;
        offset = yankee.bind(romeon)(offset);
        report['label'] = offset;
        offset = option.enable_emoticons;
        report['value'] = offset;
        report['onValueChange'] = verify;
        option = option.syncing;
        report['disabled'] = option;
        report = golfie.bind(zuuluu)(oscard, report);
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    var _closure1_slot21 = entity;
    entity = global;
    verify = entity.Object;
    golfie = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = option.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    golfie = 6;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    verify = golfie.View;
    var _closure1_slot8 = verify;
    verify = golfie.Image;
    var _closure1_slot9 = verify;
    golfie = golfie.ActivityIndicator;
    var _closure1_slot10 = golfie;
    golfie = 7;
    golfie = oscard[golfie];
    golfie = option.bind(entity)(golfie);
    var _closure1_slot11 = golfie;
    golfie = 8;
    golfie = oscard[golfie];
    golfie = option.bind(entity)(golfie);
    var _closure1_slot12 = golfie;
    golfie = 9;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    option = golfie.jsx;
    var _closure1_slot13 = option;
    option = golfie.jsxs;
    var _closure1_slot14 = option;
    golfie = golfie.Fragment;
    var _closure1_slot15 = golfie;
    golfie = 11;
    golfie = oscard[golfie];
    verify = report.bind(entity)(golfie);
    option = verify.createLegacyClassComponentStyles;
    golfie = {};
    offset = {};
    yankee = 24;
    offset['fontSize'] = yankee;
    golfie['integrationLabel'] = offset;
    offset = {'width': 48, 'height': 48, 'marginRight': 16};
    golfie['integrationIcon'] = offset;
    offset = {};
    yankee = 10;
    offset['marginLeft'] = yankee;
    golfie['forceSyncIcon'] = offset;
    offset = {};
    yankee = 'right';
    offset['textAlign'] = yankee;
    golfie['value'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot16 = golfie;
    golfie = tangon.PureComponent;
    tangon = function(argFoo) {
        tangon = function(argFoo) { // Original name: GuildSettingsModalIntegrationSettings
            _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                report = this;
                foxtra = 0;
                entity = copyRestArgs(foxtra);
                option = _closure1_slot3;
                zuuluu = _closure2_slot0;
                tangon = undefined;
                option = option.bind(tangon)(report, zuuluu);
                offset = new Array(0);
                foxtra = offset;
                romeon = entity;
                yankee = 0;
                entity = arraySpread(foxtra, romeon, yankee);
                entity = _closure1_slot6;
                verify = entity.bind(tangon)(zuuluu);
                zuuluu = _closure1_slot5;
                entity = _closure1_slot18;
                entity = entity.bind(tangon)();
                if(entity) { _fun00008_ip = 86; continue _fun00007 }
 73:
                entity = verify.apply;
                entity = entity.bind(verify)(report, offset);
                _fun00008_ip = 120; continue _fun00007;
 86:
                golfie = global;
                option = golfie.Reflect;
                golfie = option.construct;
                oscard = _closure1_slot6;
                oscard = oscard.bind(tangon)(report);
                oscard = oscard.constructor;
                entity = golfie.bind(option)(verify, offset, oscard);
 120:
                entity = zuuluu.bind(tangon)(report, entity);
                var _closure3_slot0 = entity;
                zuuluu = function(argFoo) {
                    entity = _closure3_slot0;
                    entity = entity.props;
                    option = entity.guildId;
                    michal = entity.integration;
                    tangon = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 16;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    golfie = tangon.bind(entity)(zuuluu);
                    oscard = golfie.updateIntegration;
                    romeon = michal.id;
                    offset = michal.expire_grace_period;
                    verify = michal.enable_emoticons;
                    yankee = argFoo;
                    backup = golfie;
                    foxtra = option;
                    michal = backup[oscard](foxtra, romeon, yankee, offset, verify, option);
                    return entity;
                };
                entity['handleExpireBehaviorChange'] = zuuluu;
                zuuluu = function(argFoo) {
                    entity = _closure3_slot0;
                    entity = entity.props;
                    option = entity.guildId;
                    michal = entity.integration;
                    tangon = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 16;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    golfie = tangon.bind(entity)(zuuluu);
                    oscard = golfie.updateIntegration;
                    romeon = michal.id;
                    yankee = michal.expire_behavior;
                    verify = michal.enable_emoticons;
                    offset = argFoo;
                    backup = golfie;
                    foxtra = option;
                    michal = backup[oscard](foxtra, romeon, yankee, offset, verify, option);
                    return entity;
                };
                entity['handleExpireGracePeriodChange'] = zuuluu;
                zuuluu = function(argFoo) {
                    entity = _closure3_slot0;
                    entity = entity.props;
                    option = entity.guildId;
                    michal = entity.integration;
                    tangon = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 16;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    golfie = tangon.bind(entity)(zuuluu);
                    oscard = golfie.updateIntegration;
                    romeon = michal.id;
                    yankee = michal.expire_behavior;
                    offset = michal.expire_grace_period;
                    verify = argFoo;
                    backup = golfie;
                    foxtra = option;
                    michal = backup[oscard](foxtra, romeon, yankee, offset, verify, option);
                    return entity;
                };
                entity['handleToggleEmotes'] = zuuluu;
                michal = function() {
                    entity = _closure3_slot0;
                    entity = entity.props;
                    report = entity.guildId;
                    michal = entity.integration;
                    tangon = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 16;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = tangon.syncIntegration;
                    michal = michal.id;
                    michal = zuuluu.bind(tangon)(report, michal);
                    return entity;
                };
                entity['handleSync'] = michal;
                return entity;
            }
        };
        var _closure2_slot0 = tangon;
        oscard = _closure1_slot7;
        zuuluu = undefined;
        report = argFoo;
        report = oscard.bind(zuuluu)(tangon, report);
        michal = _closure1_slot4;
        report = {};
        oscard = 'render';
        report['key'] = oscard;
        entity = function() { // Original name: value
            _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                config = this;
                var _closure3_slot0 = config;
                michal = _closure1_slot16;
                entity = config.context;
                tangon = undefined;
                target = michal.bind(tangon)(entity);
                entity = config.props;
                michal = entity.guildRoles;
                record = entity.integration;
                var _closure3_slot1 = record;
                romeon = entity.theme;
                entity = record.role_id;
                papara = null;
                zuuluu = papara != entity;
                backup = null;
                if(!zuuluu) { _fun00010_ip = 75; continue _fun00009 }
 71:
                backup = michal[entity];
 75:
                entity = papara != backup;
                result = undefined;
                if(!entity) { _fun00010_ip = 303; continue _fun00009 }
 87:
                zuuluu = _closure1_slot14;
                michal = _closure1_slot8;
                entity = {};
                verify = _closure1_slot13;
                yankee = _closure1_slot0;
                sizing = _closure1_slot2;
                golfie = 12;
                report = sizing[golfie];
                report = yankee.bind(tangon)(report);
                option = report.FormDivider;
                report = {};
                option = verify.bind(tangon)(option, report);
                report = new Array(2);
                report[0] = option;
                verify = _closure1_slot13;
                golfie = sizing[golfie];
                golfie = yankee.bind(tangon)(golfie);
                option = golfie.FormRow;
                golfie = {};
                offset = 10;
                foxtra = sizing[offset];
                foxtra = yankee.bind(tangon)(foxtra);
                output = foxtra.intl;
                foxtra = output.string;
                offset = sizing[offset];
                offset = yankee.bind(tangon)(offset);
                offset = offset.t;
                offset = offset.eBtNBQ;
                offset = foxtra.bind(output)(offset);
                golfie['label'] = offset;
                foxtra = _closure1_slot13;
                offset = 17;
                offset = sizing[offset];
                offset = yankee.bind(tangon)(offset);
                yankee = offset.Text;
                offset = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted'};
                sizing = target.value;
                offset['style'] = sizing;
                backup = backup.name;
                offset['children'] = backup;
                offset = foxtra.bind(tangon)(yankee, offset);
                golfie['trailing'] = offset;
                golfie = verify.bind(tangon)(option, golfie);
                report[1] = golfie;
                entity['children'] = report;
                result = zuuluu.bind(tangon)(michal, entity);
 303:
                michal = record.type;
                entity = 'youtube';
                if(!(entity !== michal)) { _fun00010_ip = 460; continue _fun00009 }
 319:
                zuuluu = record.name;
                entity = global;
                entity = entity.HermesInternal;
                michal = entity.concat;
                entity = 'twitch.tv/';
                source = michal.bind(entity)(zuuluu);
                report = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 10;
                michal = golfie[entity];
                michal = report.bind(tangon)(michal);
                verify = michal.intl;
                option = verify.string;
                michal = golfie[entity];
                michal = report.bind(tangon)(michal);
                michal = michal.t;
                michal = michal.S/WCrK;
                echoed = option.bind(verify)(michal);
                entity = golfie[entity];
                entity = report.bind(tangon)(entity);
                entity = entity.t;
                status = entity.RdUTrq;
                golfie = _closure1_slot13;
                report = _closure1_slot21;
                entity = {};
                entity['integration'] = record;
                option = config.handleToggleEmotes;
                entity['onPress'] = option;
                yankee = golfie.bind(tangon)(report, entity);
                _fun00010_ip = 564; continue _fun00009;
 460:
                entity = record.account;
                michal = papara == entity;
                zuuluu = undefined;
                if(michal) { _fun00010_ip = 480; continue _fun00009 }
 475:
                zuuluu = entity.name;
 480:
                report = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 10;
                michal = golfie[entity];
                michal = report.bind(tangon)(michal);
                verify = michal.intl;
                option = verify.string;
                michal = golfie[entity];
                michal = report.bind(tangon)(michal);
                michal = michal.t;
                michal = michal.A5MiqK;
                echoed = option.bind(verify)(michal);
                entity = golfie[entity];
                entity = report.bind(tangon)(entity);
                entity = entity.t;
                status = entity.7lNtcX;
                source = zuuluu;
                yankee = undefined;
 564:
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 18;
                entity = zuuluu[entity];
                zuuluu = michal.bind(tangon)(entity);
                michal = zuuluu.get;
                entity = record.type;
                verify = michal.bind(zuuluu)(entity);
                entity = papara != verify;
                update = null;
                if(!entity) { _fun00010_ip = 714; continue _fun00009 }
 608:
                zuuluu = _closure1_slot13;
                michal = _closure1_slot9;
                entity = {};
                offset = _closure1_slot0;
                foxtra = _closure1_slot2;
                report = 19;
                report = foxtra[report];
                option = offset.bind(tangon)(report);
                golfie = option.makeSource;
                report = 20;
                report = foxtra[report];
                offset = offset.bind(tangon)(report);
                report = offset.isThemeDark;
                report = report.bind(offset)(romeon);
                verify = verify.icon;
                if(report) { _fun00010_ip = 683; continue _fun00009 }
 675:
                report = verify.lightPNG;
                _fun00010_ip = 689; continue _fun00009;
 683:
                report = verify.darkPNG;
 689:
                report = golfie.bind(option)(report);
                entity['source'] = report;
                report = target.integrationIcon;
                entity['style'] = report;
                update = zuuluu.bind(tangon)(michal, entity);
 714:
                entity = function() { // Original name: getSubGracePeriodOptions
                    zuuluu = [1, 3, 7, 14, 30];
                    michal = zuuluu.map;
                    entity = function(argFoo) {
                        oscard = argFoo;
                        entity = {};
                        entity['value'] = oscard;
                        golfie = _closure1_slot0;
                        option = _closure1_slot2;
                        michal = 10;
                        tangon = option[michal];
                        zuuluu = undefined;
                        tangon = golfie.bind(zuuluu)(tangon);
                        report = tangon.intl;
                        tangon = report.formatToPlainString;
                        michal = option[michal];
                        michal = golfie.bind(zuuluu)(michal);
                        michal = michal.t;
                        zuuluu = michal.eGjmy8;
                        michal = {};
                        michal['days'] = oscard;
                        michal = tangon.bind(report)(zuuluu, michal);
                        entity['label'] = michal;
                        return entity;
                    };
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                output = entity.bind(tangon)();
                var _closure3_slot2 = output;
                zuuluu = _closure1_slot14;
                michal = _closure1_slot15;
                entity = {};
                vacuum = _closure1_slot0;
                ctrled = _closure1_slot2;
                romeon = 12;
                report = ctrled[romeon];
                report = vacuum.bind(tangon)(report);
                option = report.Form;
                report = {};
                golfie = {};
                cntext = 1;
                golfie['flex'] = cntext;
                report['style'] = golfie;
                golfie = config.props;
                golfie = golfie.contentContainerStyle;
                report['contentContainerStyle'] = golfie;
                offset = _closure1_slot13;
                golfie = ctrled[romeon];
                golfie = vacuum.bind(tangon)(golfie);
                verify = golfie.FormSection;
                golfie = {};
                sizing = _closure1_slot13;
                foxtra = ctrled[romeon];
                foxtra = vacuum.bind(tangon)(foxtra);
                backup = foxtra.FormRow;
                foxtra = {};
                sequen = _closure1_slot13;
                ctrled = ctrled[romeon];
                ctrled = vacuum.bind(tangon)(ctrled);
                ctrled = ctrled.FormRow;
                vacuum = ctrled.Label;
                ctrled = {};
                target = target.integrationLabel;
                ctrled['style'] = target;
                limora = record.user;
                sierra = papara == limora;
                target = undefined;
                if(sierra) { _fun00010_ip = 898; continue _fun00009 }
 889:
                sierra = limora.toString;
                target = sierra.bind(limora)();
 898:
                ctrled['text'] = target;
                ctrled = sequen.bind(tangon)(vacuum, ctrled);
                foxtra['label'] = ctrled;
                foxtra['subLabel'] = source;
                foxtra['leading'] = update;
                foxtra = sizing.bind(tangon)(backup, foxtra);
                golfie['children'] = foxtra;
                golfie = offset.bind(tangon)(verify, golfie);
                offset = new Array(5);
                offset[0] = golfie;
                foxtra = _closure1_slot14;
                vacuum = _closure1_slot0;
                limora = _closure1_slot2;
                golfie = limora[romeon];
                golfie = vacuum.bind(tangon)(golfie);
                verify = golfie.FormSection;
                golfie = {};
                sizing = 10;
                backup = limora[sizing];
                backup = vacuum.bind(tangon)(backup);
                source = backup.intl;
                update = source.string;
                backup = limora[sizing];
                backup = vacuum.bind(tangon)(backup);
                backup = backup.t;
                backup = backup.i17qFR;
                backup = update.bind(source)(backup);
                golfie['title'] = backup;
                source = _closure1_slot13;
                backup = limora[romeon];
                backup = vacuum.bind(tangon)(backup);
                update = backup.FormRow;
                backup = {};
                ctrled = limora[sizing];
                ctrled = vacuum.bind(tangon)(ctrled);
                target = ctrled.intl;
                sequen = target.format;
                ctrled = {};
                sierra = record.subscriber_count;
                ctrled['subscribers'] = sierra;
                ctrled = sequen.bind(target)(status, ctrled);
                backup['label'] = ctrled;
                ctrled = limora[sizing];
                ctrled = vacuum.bind(tangon)(ctrled);
                target = ctrled.intl;
                sequen = target.formatToPlainString;
                ctrled = limora[sizing];
                ctrled = vacuum.bind(tangon)(ctrled);
                ctrled = ctrled.t;
                vacuum = ctrled.+42M+v;
                ctrled = {};
                sierra = _closure1_slot1;
                status = 21;
                status = limora[status];
                sierra = sierra.bind(tangon)(status);
                status = record.synced_at;
                sierra = sierra.bind(tangon)(status);
                status = sierra.calendar;
                status = status.bind(sierra)();
                ctrled['datetime'] = status;
                ctrled = sequen.bind(target)(vacuum, ctrled);
                backup['subLabel'] = ctrled;
                sequen = _closure1_slot13;
                vacuum = _closure1_slot20;
                ctrled = {};
                target = record.syncing;
                papara = papara != target;
                if(!papara) { _fun00010_ip = 1215; continue _fun00009 }
 1212:
                papara = target;
 1215:
                ctrled['isSyncing'] = papara;
                config = config.handleSync;
                ctrled['onPress'] = config;
                ctrled = sequen.bind(tangon)(vacuum, ctrled);
                backup['trailing'] = ctrled;
                update = source.bind(tangon)(update, backup);
                backup = new Array(2);
                backup[0] = update;
                backup[1] = result;
                golfie['children'] = backup;
                golfie = foxtra.bind(tangon)(verify, golfie);
                offset[1] = golfie;
                result = _closure1_slot14;
                golfie = _closure1_slot0;
                verify = _closure1_slot2;
                foxtra = verify[romeon];
                foxtra = golfie.bind(tangon)(foxtra);
                backup = foxtra.FormSection;
                foxtra = {};
                foxtra['title'] = echoed;
                source = _closure1_slot13;
                echoed = verify[romeon];
                echoed = golfie.bind(tangon)(echoed);
                update = echoed.FormRow;
                echoed = {};
                ctrled = verify[sizing];
                ctrled = golfie.bind(tangon)(ctrled);
                sequen = ctrled.intl;
                vacuum = sequen.string;
                ctrled = verify[sizing];
                ctrled = golfie.bind(tangon)(ctrled);
                ctrled = ctrled.t;
                ctrled = ctrled.6kpw4u;
                ctrled = vacuum.bind(sequen)(ctrled);
                echoed['label'] = ctrled;
                ctrled = function() { // Original name: onPress
                    zuuluu = _closure3_slot0;
                    michal = zuuluu.handleExpireBehaviorChange;
                    entity = 0;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                echoed['onPress'] = ctrled;
                sequen = _closure1_slot13;
                ctrled = verify[romeon];
                ctrled = golfie.bind(tangon)(ctrled);
                ctrled = ctrled.FormRow;
                vacuum = ctrled.Radio;
                ctrled = {};
                papara = record.expire_behavior;
                config = 0;
                config = config === papara;
                ctrled['selected'] = config;
                ctrled = sequen.bind(tangon)(vacuum, ctrled);
                echoed['leading'] = ctrled;
                update = source.bind(tangon)(update, echoed);
                echoed = new Array(3);
                echoed[0] = update;
                ctrled = _closure1_slot13;
                update = verify[romeon];
                update = golfie.bind(tangon)(update);
                source = update.FormDivider;
                update = {};
                vacuum = true;
                update['iconPush'] = vacuum;
                update = ctrled.bind(tangon)(source, update);
                echoed[1] = update;
                ctrled = _closure1_slot13;
                update = verify[romeon];
                update = golfie.bind(tangon)(update);
                source = update.FormRow;
                update = {};
                vacuum = verify[sizing];
                vacuum = golfie.bind(tangon)(vacuum);
                config = vacuum.intl;
                sequen = config.string;
                vacuum = verify[sizing];
                vacuum = golfie.bind(tangon)(vacuum);
                vacuum = vacuum.t;
                vacuum = vacuum.fQUQIC;
                vacuum = sequen.bind(config)(vacuum);
                update['label'] = vacuum;
                vacuum = function() { // Original name: onPress
                    zuuluu = _closure3_slot0;
                    michal = zuuluu.handleExpireBehaviorChange;
                    entity = 1;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                update['onPress'] = vacuum;
                config = _closure1_slot13;
                vacuum = verify[romeon];
                vacuum = golfie.bind(tangon)(vacuum);
                vacuum = vacuum.FormRow;
                sequen = vacuum.Radio;
                vacuum = {};
                record = record.expire_behavior;
                record = cntext === record;
                vacuum['selected'] = record;
                vacuum = config.bind(tangon)(sequen, vacuum);
                update['leading'] = vacuum;
                update = ctrled.bind(tangon)(source, update);
                echoed[2] = update;
                foxtra['children'] = echoed;
                foxtra = result.bind(tangon)(backup, foxtra);
                offset[2] = foxtra;
                backup = _closure1_slot13;
                romeon = verify[romeon];
                romeon = golfie.bind(tangon)(romeon);
                foxtra = romeon.FormSection;
                romeon = {};
                result = verify[sizing];
                result = golfie.bind(tangon)(result);
                echoed = result.intl;
                result = echoed.string;
                sizing = verify[sizing];
                sizing = golfie.bind(tangon)(sizing);
                sizing = sizing.t;
                sizing = sizing.uiXMo6;
                sizing = result.bind(echoed)(sizing);
                romeon['title'] = sizing;
                sizing = output.map;
                kiloes = function(argFoo, argBar) {
                    report = argBar;
                    tangon = _closure1_slot13;
                    zuuluu = _closure1_slot19;
                    michal = {};
                    oscard = _closure3_slot1;
                    michal['integration'] = oscard;
                    oscard = argFoo;
                    michal['option'] = oscard;
                    oscard = _closure3_slot2;
                    golfie = oscard.length;
                    oscard = 1;
                    oscard = golfie - oscard;
                    oscard = report === oscard;
                    michal['isLast'] = oscard;
                    entity = _closure3_slot0;
                    entity = entity.handleExpireGracePeriodChange;
                    michal['onPress'] = entity;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal, report);
                    return entity;
                };
                kiloes = sizing.bind(output)(kiloes);
                romeon['children'] = kiloes;
                romeon = backup.bind(tangon)(foxtra, romeon);
                offset[3] = romeon;
                offset[4] = yankee;
                report['children'] = offset;
                option = zuuluu.bind(tangon)(option, report);
                report = new Array(2);
                report[0] = option;
                option = _closure1_slot13;
                oscard = 22;
                oscard = verify[oscard];
                oscard = golfie.bind(tangon)(oscard);
                golfie = oscard.NavScrim;
                oscard = {};
                oscard = option.bind(tangon)(golfie, oscard);
                report[1] = oscard;
                entity['children'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            }
        };
        report['value'] = entity;
        entity = new Array(1);
        entity[0] = report;
        entity = michal.bind(zuuluu)(tangon, entity);
        return entity;
    };
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot17 = golfie;
    tangon = 23;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ThemeContext;
    golfie['contextType'] = tangon;
    tangon = 27;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_settings/native/GuildSettingsModalIntegrationSettings.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ConnectedGuildSettingsModalIntegrationSettings
        _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.integrationId;
            oscard = entity.contentContainerStyle;
            tangon = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 24;
            verify = golfie[entity];
            report = undefined;
            romeon = tangon.bind(report)(verify);
            yankee = romeon.useStateFromStores;
            verify = _closure1_slot12;
            offset = new Array(1);
            offset[0] = verify;
            verify = function() {
                michal = _closure1_slot12;
                entity = michal.getProps;
                entity = entity.bind(michal)();
                return entity;
            };
            verify = yankee.bind(romeon)(offset, verify);
            offset = verify.guild;
            var _closure2_slot0 = offset;
            romeon = verify.integrations;
            entity = golfie[entity];
            yankee = tangon.bind(report)(entity);
            verify = yankee.useStateFromStores;
            entity = _closure1_slot11;
            tangon = new Array(1);
            tangon[0] = entity;
            entity = function() {
                _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                    zuuluu = _closure2_slot0;
                    entity = null;
                    zuuluu = entity != zuuluu;
                    entity = undefined;
                    if(!zuuluu) { _fun00014_ip = 45; continue _fun00013 }
 18:
                    tangon = _closure1_slot11;
                    zuuluu = tangon.getRoles;
                    michal = _closure2_slot0;
                    michal = michal.id;
                    entity = zuuluu.bind(tangon)(michal);
 45:
                    return entity;
                }
            };
            verify = verify.bind(yankee)(tangon, entity);
            tangon = _closure1_slot1;
            entity = 25;
            entity = golfie[entity];
            entity = tangon.bind(report)(entity);
            golfie = entity.bind(report)();
            tangon = null;
            yankee = tangon == romeon;
            entity = undefined;
            if(yankee) { _fun00012_ip = 174; continue _fun00011 }
 157:
            yankee = romeon.filter;
            option = function(argFoo) {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 26;
                michal = michal[entity];
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                zuuluu = entity.SUPPORTED_SETTINGS_INTEGRATION_PLATFORMS;
                michal = zuuluu.includes;
                entity = argFoo;
                entity = entity.type;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity = yankee.bind(romeon)(option);
 174:
            yankee = tangon == entity;
            option = undefined;
            if(yankee) { _fun00012_ip = 187; continue _fun00011 }
 183:
            option = entity[zuuluu];
 187:
            zuuluu = tangon == offset;
            entity = null;
            if(zuuluu) { _fun00012_ip = 258; continue _fun00011 }
 196:
            zuuluu = tangon == option;
            entity = null;
            if(zuuluu) { _fun00012_ip = 258; continue _fun00011 }
 205:
            zuuluu = tangon == verify;
            entity = null;
            if(zuuluu) { _fun00012_ip = 258; continue _fun00011 }
 214:
            tangon = _closure1_slot13;
            zuuluu = _closure1_slot17;
            michal = {};
            offset = offset.id;
            michal['guildId'] = offset;
            michal['guildRoles'] = verify;
            michal['integration'] = option;
            michal['theme'] = golfie;
            michal['contentContainerStyle'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 258:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();