// app/modules/guild_settings/native/TransferOwnership.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot3 = tango;
    offset = 1;
    tango = oscar[offset];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot6 = golf;
    golf = tango.Image;
    var _closure1_slot7 = golf;
    tango = tango.ScrollView;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.TransferOwnershipModalScenes;
    var _closure1_slot10 = golf;
    tango = tango.TransferOwnershipVerificationTypes;
    var _closure1_slot11 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.NOOP;
    var _closure1_slot12 = tango;
    tango = 7;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot13 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot14 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot15 = tango;
    yankee = 8;
    tango = oscar[yankee];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    romeo = 9;
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = backup;
    tango['background'] = verify;
    verify = {};
    verify['flex'] = offset;
    tango['body'] = verify;
    verify = {'alignItems': 'center', 'paddingVertical': 16};
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = backup;
    tango['header'] = verify;
    verify = {'width': 78, 'height': 15, 'paddingVertical': 1, 'marginBottom': 2};
    tango['arrow'] = verify;
    verify = {'flexDirection': 'row', 'justifyContent': 'flex-start', 'width': 160, 'height': 80, 'marginBottom': 30};
    tango['avatarsWrapper'] = verify;
    verify = {'position': 'absolute', 'left': 71, 'top': 4294967294, 'borderRadius': 44, 'width': 88, 'height': 88};
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = romeo;
    tango['avatarFauxBorder'] = verify;
    verify = {'top': 4, 'left': 4};
    tango['otherUserAvatar'] = verify;
    verify = {};
    verify['marginHorizontal'] = yankee;
    tango['transferButton'] = verify;
    verify = {};
    verify['flex'] = offset;
    tango['aka'] = verify;
    verify = {'marginRight': 4, 'justifyContent': 'center', 'alignContent': 'center'};
    tango['miniAvatar'] = verify;
    verify = {'paddingRight': 4, 'paddingLeft': 2, 'justifyContent': 'center', 'alignContent': 'center'};
    tango['miniGuildIcon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot16 = tango;
    tango = 25;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_settings/native/TransferOwnership.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: TransferOwnership
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            control = entity.guild;
            var _closure2_slot0 = control;
            config = entity.toUser;
            var _closure2_slot1 = config;
            tango = undefined;
            var _closure2_slot2 = tango;
            var _closure2_slot3 = tango;
            entity = function() { // Original name: _handleTransfer
                tango = undefined;
                entity = undefined;
                zulu = _closure1_slot3;
                mike = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(mike) { _fun00004_ip = 234; continue _fun00003 }
 10:
                            mike = _closure2_slot3;
                            mike = mike.mfaEnabled;
                            if(mike) { _fun00004_ip = 126; continue _fun00003 }
 26:
                            mike = _closure2_slot3;
                            tango = mike.email;
                            mike = null;
                            if(!(mike != tango)) { _fun00004_ip = 126; continue _fun00003 }
 42:
                            oscar = _closure1_slot1;
                            report = _closure1_slot2;
                            mike = 13;
                            report = report[mike];
                            mike = undefined;
                            oscar = oscar.bind(mike)(report);
                            report = oscar.sendTransferOwnershipPincode;
                            mike = _closure2_slot0;
                            mike = mike.id;
                            mike = report.bind(oscar)(mike);
                            SaveGenerator(address=91);
 89:
                            return mike;
 91:
                            ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                            if(report) { _fun00004_ip = 123; continue _fun00003 }
 97:
                            oscar = _closure2_slot2;
                            report = oscar.push;
                            tango = _closure1_slot10;
                            tango = tango.CONFIRM_EMAIL_CODE;
                            tango = report.bind(oscar)(tango);
                            _fun00004_ip = 229; continue _fun00003;
 123:
                            return mike;
 126:
                            oscar = _closure1_slot1;
                            report = _closure1_slot2;
                            tango = 13;
                            report = report[tango];
                            tango = undefined;
                            golf = oscar.bind(tango)(report);
                            oscar = golf.transferOwnership;
                            tango = _closure2_slot0;
                            report = tango.id;
                            tango = _closure2_slot1;
                            tango = tango.id;
                            zulu = _closure2_slot3;
                            options = zulu.mfaEnabled;
                            zulu = null;
                            if(!options) { _fun00004_ip = 200; continue _fun00003 }
 190:
                            options = _closure1_slot11;
                            zulu = options.MFA;
 200:
                            report = oscar.bind(golf)(report, tango, zulu);
                            tango = report.then;
                            zulu = _closure1_slot12;
                            mike = function() {
                                report = _closure1_slot1;
                                tango = _closure1_slot2;
                                entity = 14;
                                zulu = tango[entity];
                                entity = undefined;
                                oscar = report.bind(entity)(zulu);
                                zulu = oscar.close;
                                zulu = zulu.bind(oscar)();
                                zulu = 13;
                                zulu = tango[zulu];
                                report = report.bind(entity)(zulu);
                                zulu = report.close;
                                zulu = zulu.bind(report)();
                                zulu = _closure1_slot0;
                                mike = 15;
                                mike = tango[mike];
                                zulu = zulu.bind(entity)(mike);
                                mike = zulu.showTransferOwnershipSuccess;
                                mike = mike.bind(zulu)();
                                return entity;
                            };
                            mike = tango.bind(report)(mike, zulu);
 229:
                            mike = undefined;
                            return mike;
 234:
                            return entity;
                        }
                    };
                    return entity;
                };
                tango = zulu.bind(tango)(mike);
                _closure2_slot7 = tango;
                zulu = tango.apply;
                entity = arguments;
                mike = entity;
                entity = this;
                entity = zulu.bind(tango)(entity, mike);
                return entity;
            };
            var _closure2_slot7 = entity;
            entity = _closure1_slot16;
            sizing = entity.bind(tango)();
            yankee = _closure1_slot0;
            backup = _closure1_slot2;
            entity = 10;
            entity = backup[entity];
            mike = yankee.bind(tango)(entity);
            entity = mike.useNavigation;
            entity = entity.bind(mike)();
            _closure2_slot2 = entity;
            entity = 11;
            entity = backup[entity];
            report = yankee.bind(tango)(entity);
            zulu = report.useStateFromStores;
            entity = _closure1_slot9;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                zulu = _closure1_slot9;
                entity = zulu.getCurrentUser;
                entity = entity.bind(zulu)();
                zulu = _closure1_slot1;
                tango = _closure1_slot2;
                mike = 12;
                mike = tango[mike];
                report = undefined;
                tango = zulu.bind(report)(mike);
                mike = null;
                zulu = mike != entity;
                mike = 'TransferOwnership: currentUser cannot be undefined';
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            source = zulu.bind(report)(mike, entity);
            _closure2_slot3 = source;
            zulu = _closure1_slot5;
            mike = zulu.useState;
            entity = false;
            zulu = mike.bind(zulu)(entity);
            mike = _closure1_slot4;
            entity = 2;
            mike = mike.bind(tango)(zulu, entity);
            entity = 0;
            verify = mike[entity];
            entity = 1;
            entity = mike[entity];
            var _closure2_slot4 = entity;
            vacuum = _closure1_slot1;
            entity = 16;
            entity = backup[entity];
            zulu = vacuum.bind(tango)(entity);
            mike = zulu.getNickname;
            entity = control.id;
            output = mike.bind(zulu)(entity, tango, config);
            var _closure2_slot5 = output;
            mike = config.hasAvatarForGuild;
            entity = control.id;
            options = mike.bind(config)(entity);
            var _closure2_slot6 = options;
            update = function() { // Original name: GuildWithSmallIcon
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = _closure1_slot16;
                    tango = undefined;
                    yankee = entity.bind(tango)();
                    zulu = _closure1_slot15;
                    mike = _closure1_slot14;
                    entity = {};
                    report = _closure2_slot0;
                    report = report.icon;
                    golf = null;
                    report = golf != report;
                    if(!report) { _fun00006_ip = 139; continue _fun00005 }
 44:
                    offset = _closure1_slot13;
                    options = _closure1_slot6;
                    report = {};
                    yankee = yankee.miniGuildIcon;
                    report['style'] = yankee;
                    romeo = _closure1_slot1;
                    kilo = _closure1_slot2;
                    foxtrot = 17;
                    yankee = kilo[foxtrot];
                    romeo = romeo.bind(tango)(yankee);
                    yankee = {};
                    backup = _closure2_slot0;
                    yankee['guild'] = backup;
                    backup = _closure1_slot0;
                    foxtrot = kilo[foxtrot];
                    foxtrot = backup.bind(tango)(foxtrot);
                    foxtrot = foxtrot.GuildIconSizes;
                    foxtrot = foxtrot.XXSMALL;
                    yankee['size'] = foxtrot;
                    yankee = offset.bind(tango)(romeo, yankee);
                    report['children'] = yankee;
                    golf = offset.bind(tango)(options, report);
 139:
                    report = new Array(2);
                    report[0] = golf;
                    options = _closure1_slot13;
                    golf = _closure1_slot0;
                    offset = _closure1_slot2;
                    oscar = 18;
                    oscar = offset[oscar];
                    oscar = golf.bind(tango)(oscar);
                    golf = oscar.Text;
                    oscar = {};
                    offset = 'text-md/bold';
                    oscar['variant'] = offset;
                    offset = _closure2_slot0;
                    verify = offset.toString;
                    verify = verify.bind(offset)();
                    oscar['children'] = verify;
                    oscar = options.bind(tango)(golf, oscar);
                    report[1] = oscar;
                    entity['children'] = report;
                    entity = zulu.bind(tango)(mike, entity);
                    return entity;
                }
            };
            zulu = _closure1_slot15;
            mike = _closure1_slot8;
            entity = {'style': null, 'keyboardShouldPersistTaps': 'handled', 'alwaysBounceVertical': false};
            report = sizing.background;
            entity['style'] = report;
            oscar = _closure1_slot6;
            report = {};
            golf = sizing.header;
            report['style'] = golf;
            foxtrot = _closure1_slot13;
            offset = _closure1_slot7;
            golf = {};
            result = 19;
            result = backup[result];
            result = vacuum.bind(tango)(result);
            golf['source'] = result;
            result = sizing.arrow;
            golf['style'] = result;
            offset = foxtrot.bind(tango)(offset, golf);
            golf = new Array(4);
            golf[0] = offset;
            offset = {};
            result = sizing.avatarsWrapper;
            offset['style'] = result;
            sequence = 20;
            result = backup[sequence];
            echo = vacuum.bind(tango)(result);
            result = {};
            result['user'] = source;
            source = control.id;
            result['guildId'] = source;
            source = backup[sequence];
            source = yankee.bind(tango)(source);
            source = source.AvatarSizes;
            source = source.XXLARGE;
            result['size'] = source;
            echo = foxtrot.bind(tango)(echo, result);
            result = new Array(2);
            result[0] = echo;
            echo = {};
            source = sizing.avatarFauxBorder;
            echo['style'] = source;
            source = backup[sequence];
            vacuum = vacuum.bind(tango)(source);
            source = {};
            source['user'] = config;
            source['guildId'] = tango;
            sequence = backup[sequence];
            sequence = yankee.bind(tango)(sequence);
            sequence = sequence.AvatarSizes;
            sequence = sequence.XXLARGE;
            source['size'] = sequence;
            sequence = sizing.otherUserAvatar;
            source['style'] = sequence;
            source = foxtrot.bind(tango)(vacuum, source);
            echo['children'] = source;
            echo = foxtrot.bind(tango)(oscar, echo);
            result[1] = echo;
            offset['children'] = result;
            offset = zulu.bind(tango)(oscar, offset);
            golf[1] = offset;
            offset = 18;
            result = backup[offset];
            result = yankee.bind(tango)(result);
            echo = result.Text;
            result = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            source = control.toString;
            source = source.bind(control)();
            result['children'] = source;
            result = foxtrot.bind(tango)(echo, result);
            golf[2] = result;
            offset = backup[offset];
            offset = yankee.bind(tango)(offset);
            yankee = offset.Text;
            offset = {'variant': 'text-md/medium', 'color': 'header-secondary'};
            backup = null;
            if(!(backup == output)) { _fun00002_ip = 703; continue _fun00001 }
 602:
            if(options) { _fun00002_ip = 703; continue _fun00001 }
 605:
            backup = _closure1_slot0;
            control = _closure1_slot2;
            options = 21;
            output = control[options];
            output = backup.bind(tango)(output);
            result = output.intl;
            output = result.format;
            options = control[options];
            options = backup.bind(tango)(options);
            options = options.t;
            backup = options.2XLnGx;
            options = {};
            options['GuildHook'] = update;
            source = _closure1_slot1;
            echo = 22;
            echo = control[echo];
            source = source.bind(tango)(echo);
            echo = source.getUserTag;
            echo = echo.bind(source)(config);
            options['user'] = echo;
            options = output.bind(result)(backup, options);
            _fun00002_ip = 811; continue _fun00001;
 703:
            output = _closure1_slot0;
            control = _closure1_slot2;
            backup = 21;
            result = control[backup];
            result = output.bind(tango)(result);
            echo = result.intl;
            result = echo.format;
            backup = control[backup];
            backup = output.bind(tango)(backup);
            backup = backup.t;
            output = backup.E90vgo;
            backup = {};
            backup['GuildHook'] = update;
            source = _closure1_slot1;
            update = 22;
            update = control[update];
            source = source.bind(tango)(update);
            update = source.getUserTag;
            update = update.bind(source)(config);
            backup['user'] = update;
            update = function() { // Original name: NicknameAKA
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    entity = _closure1_slot16;
                    tango = undefined;
                    kilo = entity.bind(tango)();
                    zulu = _closure1_slot15;
                    mike = _closure1_slot14;
                    entity = {};
                    golf = _closure1_slot0;
                    report = _closure1_slot2;
                    verify = 18;
                    report = report[verify];
                    report = golf.bind(tango)(report);
                    golf = report.Text;
                    report = {'style': null, 'variant': 'text-sm/bold', 'color': 'header-secondary'};
                    options = kilo.aka;
                    report['style'] = options;
                    options = ['AKA', ' '];
                    report['children'] = options;
                    golf = zulu.bind(tango)(golf, report);
                    report = new Array(3);
                    report[0] = golf;
                    options = _closure2_slot6;
                    yankee = null;
                    golf = null;
                    if(!options) { _fun00008_ip = 208; continue _fun00007 }
 116:
                    foxtrot = _closure1_slot13;
                    romeo = _closure1_slot1;
                    sizing = _closure1_slot2;
                    backup = 20;
                    options = sizing[backup];
                    romeo = romeo.bind(tango)(options);
                    options = {};
                    kilo = kilo.miniAvatar;
                    options['style'] = kilo;
                    kilo = _closure2_slot1;
                    options['user'] = kilo;
                    kilo = _closure2_slot0;
                    kilo = kilo.id;
                    options['guildId'] = kilo;
                    kilo = _closure1_slot0;
                    backup = sizing[backup];
                    backup = kilo.bind(tango)(backup);
                    backup = backup.AvatarSizes;
                    backup = backup.XXSMALL;
                    options['size'] = backup;
                    golf = foxtrot.bind(tango)(romeo, options);
 208:
                    report[1] = golf;
                    options = _closure1_slot13;
                    golf = _closure1_slot0;
                    oscar = _closure1_slot2;
                    oscar = oscar[verify];
                    oscar = golf.bind(tango)(oscar);
                    golf = oscar.Text;
                    oscar = {};
                    verify = 'text-md/medium';
                    oscar['variant'] = verify;
                    verify = _closure2_slot5;
                    if(!(yankee == verify)) { _fun00008_ip = 271; continue _fun00007 }
 256:
                    yankee = _closure2_slot1;
                    verify = yankee.toString;
                    verify = verify.bind(yankee)();
                    _fun00008_ip = 275; continue _fun00007;
 271:
                    verify = _closure2_slot5;
 275:
                    oscar['children'] = verify;
                    oscar = options.bind(tango)(golf, oscar);
                    report[2] = oscar;
                    entity['children'] = report;
                    entity = zulu.bind(tango)(mike, entity);
                    return entity;
                }
            };
            backup['AKAHook'] = update;
            options = result.bind(echo)(output, backup);
 811:
            offset['children'] = options;
            options = 'transfer-ownership-details';
            options = foxtrot.bind(tango)(yankee, offset, options);
            golf[3] = options;
            report['children'] = golf;
            oscar = zulu.bind(tango)(oscar, report);
            report = new Array(3);
            report[0] = oscar;
            options = _closure1_slot13;
            foxtrot = _closure1_slot0;
            backup = _closure1_slot2;
            result = 23;
            oscar = backup[result];
            oscar = foxtrot.bind(tango)(oscar);
            golf = oscar.FormSection;
            oscar = {};
            offset = 21;
            yankee = backup[offset];
            yankee = foxtrot.bind(tango)(yankee);
            echo = yankee.intl;
            output = echo.string;
            yankee = backup[offset];
            yankee = foxtrot.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.Z5s7PD;
            yankee = output.bind(echo)(yankee);
            oscar['title'] = yankee;
            yankee = backup[result];
            yankee = foxtrot.bind(tango)(yankee);
            output = yankee.FormRow;
            yankee = {};
            echo = backup[offset];
            echo = foxtrot.bind(tango)(echo);
            control = echo.intl;
            source = control.format;
            echo = backup[offset];
            echo = foxtrot.bind(tango)(echo);
            echo = echo.t;
            update = echo.xm6ACA;
            echo = {};
            romeo = _closure1_slot1;
            vacuum = 22;
            vacuum = backup[vacuum];
            sequence = romeo.bind(tango)(vacuum);
            vacuum = sequence.getUserTag;
            vacuum = vacuum.bind(sequence)(config);
            echo['username'] = vacuum;
            echo = source.bind(control)(update, echo);
            yankee['label'] = echo;
            echo = function() { // Original name: handleConfirmToggle
                zulu = _closure2_slot4;
                entity = undefined;
                mike = function(argFoo) {
                    entity = argFoo;
                    entity = !entity;
                    return entity;
                };
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            yankee['onPress'] = echo;
            echo = 'checkbox';
            yankee['accessibilityRole'] = echo;
            echo = {};
            echo['selected'] = verify;
            yankee['accessibilityState'] = echo;
            result = backup[result];
            result = foxtrot.bind(tango)(result);
            result = result.FormRow;
            echo = result.Radio;
            result = {};
            result['selected'] = verify;
            result = options.bind(tango)(echo, result);
            yankee['leading'] = result;
            yankee = options.bind(tango)(output, yankee);
            oscar['children'] = yankee;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            yankee = 24;
            oscar = backup[yankee];
            golf = romeo.bind(tango)(oscar);
            oscar = {};
            sizing = sizing.transferButton;
            oscar['style'] = sizing;
            kilo = function() { // Original name: handleTransfer
                entity = undefined;
                tango = _closure2_slot7;
                zulu = tango.apply;
                entity = arguments;
                mike = entity;
                entity = this;
                entity = zulu.bind(tango)(entity, mike);
                return entity;
            };
            oscar['onPress'] = kilo;
            yankee = backup[yankee];
            yankee = romeo.bind(tango)(yankee);
            yankee = yankee.Colors;
            yankee = yankee.BRAND;
            oscar['color'] = yankee;
            yankee = backup[offset];
            yankee = foxtrot.bind(tango)(yankee);
            romeo = yankee.intl;
            yankee = romeo.string;
            offset = backup[offset];
            offset = foxtrot.bind(tango)(offset);
            offset = offset.t;
            offset = offset.jqqLb2;
            offset = yankee.bind(romeo)(offset);
            oscar['text'] = offset;
            verify = !verify;
            oscar['disabled'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();