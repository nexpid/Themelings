// app/modules/guild_settings/native/GuildSettingsModalCommunityIntro.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot4 = golf;
    golf = tango.Image;
    var _closure1_slot5 = golf;
    tango = tango.ScrollView;
    var _closure1_slot6 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.HelpdeskArticles;
    var _closure1_slot9 = golf;
    golf = tango.GuildFeatures;
    var _closure1_slot10 = golf;
    golf = tango.GuildSettingsSections;
    var _closure1_slot11 = golf;
    tango = tango.Permissions;
    var _closure1_slot12 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot13 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot14 = tango;
    tango = 6;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    tango = {};
    tango['flex'] = offset;
    golf['overview'] = tango;
    tango = {};
    offset = 14;
    tango['fontSize'] = offset;
    yankee = 7;
    offset = oscar[yankee];
    offset = romeo.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_SECONDARY;
    tango['color'] = offset;
    golf['formHint'] = tango;
    offset = '100%';
    tango = {'height': '100%', 'padding': 16};
    golf['container'] = tango;
    foxtrot = 'center';
    tango = {'textAlign': 'center', 'marginBottom': 8};
    golf['header'] = tango;
    tango = {};
    tango['textAlign'] = foxtrot;
    golf['body'] = tango;
    tango = {};
    tango['textAlign'] = foxtrot;
    golf['details'] = tango;
    tango = {};
    tango['width'] = offset;
    golf['headerImage'] = tango;
    tango = 24;
    offset = {'marginTop': 24, 'marginBottom': 24};
    golf['button'] = offset;
    offset = {'marginTop': 32, 'marginBottom': 32};
    golf['features'] = offset;
    offset = {'backgroundColor': null, 'flex': 1, 'flexDirection': 'row', 'padding': 16, 'borderRadius': null, 'marginTop': 8, 'alignItems': 'flex-start'};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.CARD_PRIMARY_BG;
    offset['backgroundColor'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    offset['borderRadius'] = foxtrot;
    golf['featureCard'] = offset;
    offset = {'backgroundColor': null, 'borderRadius': 40, 'marginRight': 16, 'padding': 8};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_MOD_STRONG;
    offset['backgroundColor'] = yankee;
    golf['featureIcon'] = offset;
    offset = {'overflow': 'hidden', 'flex': 1};
    golf['featureDescription'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot15 = golf;
    golf = function(argFoo) { // Original name: FeatureCard
        entity = argFoo;
        oscar = entity.icon;
        backup = entity.header;
        yankee = entity.body;
        entity = _closure1_slot15;
        tango = undefined;
        options = entity.bind(tango)();
        zulu = _closure1_slot14;
        mike = _closure1_slot4;
        entity = {};
        report = options.featureCard;
        entity['style'] = report;
        offset = _closure1_slot13;
        report = {};
        verify = options.featureIcon;
        report['style'] = verify;
        oscar = oscar.bind(tango)();
        report['children'] = oscar;
        oscar = offset.bind(tango)(mike, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = {};
        options = options.featureDescription;
        oscar['style'] = options;
        verify = _closure1_slot0;
        romeo = _closure1_slot2;
        options = 10;
        golf = romeo[options];
        golf = verify.bind(tango)(golf);
        foxtrot = golf.Text;
        golf = {'variant': 'text-md/semibold', 'color': 'header-primary'};
        golf['children'] = backup;
        foxtrot = offset.bind(tango)(foxtrot, golf);
        golf = new Array(2);
        golf[0] = foxtrot;
        options = romeo[options];
        options = verify.bind(tango)(options);
        verify = options.Text;
        options = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
        options['children'] = yankee;
        options = offset.bind(tango)(verify, options);
        golf[1] = options;
        oscar['children'] = golf;
        oscar = zulu.bind(tango)(mike, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot16 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_settings/native/GuildSettingsModalCommunityIntro.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildSettingsModalCommunityIntro
        mike = argFoo;
        entity = mike.guildId;
        var _closure2_slot0 = entity;
        entity = mike.onClose;
        var _closure2_slot1 = entity;
        options = mike.contentContainerStyle;
        oscar = mike.navScrim;
        mike = _closure1_slot15;
        tango = undefined;
        foxtrot = mike.bind(tango)();
        result = _closure1_slot0;
        echo = _closure1_slot2;
        mike = 13;
        mike = echo[mike];
        zulu = result.bind(tango)(mike);
        mike = zulu.useNavigation;
        golf = mike.bind(zulu)();
        var _closure2_slot2 = golf;
        mike = 14;
        zulu = echo[mike];
        yankee = result.bind(tango)(zulu);
        offset = yankee.useStateFromStores;
        zulu = _closure1_slot7;
        report = new Array(1);
        report[0] = zulu;
        zulu = function() {
            zulu = _closure1_slot7;
            mike = zulu.getGuild;
            entity = _closure2_slot0;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        offset = offset.bind(yankee)(report, zulu);
        var _closure2_slot3 = offset;
        mike = echo[mike];
        yankee = result.bind(tango)(mike);
        report = yankee.useStateFromStores;
        mike = _closure1_slot8;
        zulu = new Array(1);
        zulu[0] = mike;
        mike = function() {
            _fun126612: for(var _fun126612_ip = 0; ; ) switch(_fun126612_ip) {
 0:
                zulu = _closure2_slot3;
                entity = null;
                entity = entity != zulu;
                if(!entity) { _fun126612_ip = 49; continue _fun126612 }
 16:
                report = _closure1_slot8;
                tango = report.can;
                zulu = _closure1_slot12;
                zulu = zulu.ADMINISTRATOR;
                mike = _closure2_slot3;
                entity = tango.bind(report)(zulu, mike);
 49:
                return entity;
            }
        };
        output = report.bind(yankee)(zulu, mike);
        var _closure2_slot4 = output;
        report = _closure1_slot3;
        zulu = report.useEffect;
        mike = new Array(3);
        mike[0] = offset;
        mike[1] = golf;
        mike[2] = entity;
        entity = function() {
            _fun126613: for(var _fun126613_ip = 0; ; ) switch(_fun126613_ip) {
 0:
                mike = _closure2_slot3;
                entity = null;
                entity = entity != mike;
                if(!entity) { _fun126613_ip = 49; continue _fun126613 }
 16:
                mike = _closure2_slot3;
                tango = mike.features;
                zulu = tango.has;
                mike = _closure1_slot10;
                mike = mike.COMMUNITY;
                entity = zulu.bind(tango)(mike);
 49:
                if(!entity) { _fun126613_ip = 133; continue _fun126613 }
 52:
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                mike = 15;
                zulu = zulu[mike];
                mike = undefined;
                tango = tango.bind(mike)(zulu);
                zulu = tango.wait;
                mike = function() {
                    tango = _closure1_slot1;
                    zulu = _closure1_slot2;
                    mike = 16;
                    zulu = zulu[mike];
                    mike = undefined;
                    zulu = tango.bind(mike)(zulu);
                    mike = zulu.setSection;
                    entity = _closure1_slot11;
                    entity = entity.COMMUNITY;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                mike = zulu.bind(tango)(mike);
                tango = _closure2_slot2;
                zulu = tango.replace;
                entity = _closure1_slot11;
                mike = entity.COMMUNITY;
                entity = {};
                report = _closure2_slot1;
                entity['onClose'] = report;
                entity = zulu.bind(tango)(mike, entity);
 133:
                entity = undefined;
                return entity;
            }
        };
        entity = zulu.bind(report)(entity, mike);
        entity = 17;
        entity = echo[entity];
        mike = result.bind(tango)(entity);
        entity = mike.useIntroHeaderSource;
        backup = entity.bind(mike)();
        zulu = _closure1_slot14;
        entity = 18;
        entity = echo[entity];
        entity = result.bind(tango)(entity);
        mike = entity.RedesignCompat;
        entity = {};
        golf = _closure1_slot6;
        report = {};
        offset = foxtrot.container;
        report['style'] = offset;
        report['contentContainerStyle'] = options;
        yankee = _closure1_slot13;
        offset = _closure1_slot5;
        options = {};
        kilo = 'contain';
        options['resizeMode'] = kilo;
        options['source'] = backup;
        backup = foxtrot.headerImage;
        options['style'] = backup;
        offset = yankee.bind(tango)(offset, options);
        options = new Array(6);
        options[0] = offset;
        offset = 10;
        backup = echo[offset];
        backup = result.bind(tango)(backup);
        sizing = backup.Text;
        backup = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        kilo = foxtrot.header;
        backup['style'] = kilo;
        kilo = 9;
        update = echo[kilo];
        update = result.bind(tango)(update);
        control = update.intl;
        source = control.string;
        update = echo[kilo];
        update = result.bind(tango)(update);
        update = update.t;
        update = update.M/gBcH;
        update = source.bind(control)(update);
        backup['children'] = update;
        backup = yankee.bind(tango)(sizing, backup);
        options[1] = backup;
        backup = 19;
        backup = echo[backup];
        backup = result.bind(tango)(backup);
        sizing = backup.TextWithIOSLinkWorkaround;
        backup = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
        update = foxtrot.body;
        backup['style'] = update;
        update = echo[kilo];
        update = result.bind(tango)(update);
        sequence = update.intl;
        vacuum = sequence.format;
        update = echo[kilo];
        update = result.bind(tango)(update);
        update = update.t;
        control = update.52EgsL;
        update = {};
        source = _closure1_slot1;
        config = 20;
        config = echo[config];
        context = source.bind(tango)(config);
        record = context.getArticleURL;
        config = _closure1_slot9;
        config = config.FRIEND_COMMUNITY_DISCOVERABLE_GUILD_TYPES;
        config = record.bind(context)(config);
        update['helpdeskArticle'] = config;
        update = vacuum.bind(sequence)(control, update);
        backup['children'] = update;
        backup = yankee.bind(tango)(sizing, backup);
        options[2] = backup;
        update = 21;
        backup = echo[update];
        sizing = source.bind(tango)(backup);
        backup = {};
        control = echo[kilo];
        control = result.bind(tango)(control);
        sequence = control.intl;
        vacuum = sequence.string;
        control = echo[kilo];
        control = result.bind(tango)(control);
        control = control.t;
        control = control.LhlgY2;
        control = vacuum.bind(sequence)(control);
        backup['text'] = control;
        update = echo[update];
        update = source.bind(tango)(update);
        update = update.Colors;
        update = update.BRAND;
        backup['color'] = update;
        update = function() { // Original name: onPress
            _fun126615: for(var _fun126615_ip = 0; ; ) switch(_fun126615_ip) {
 0:
                mike = _closure2_slot4;
                if(mike) { _fun126615_ip = 47; continue _fun126615 }
 13:
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                mike = 23;
                zulu = zulu[mike];
                mike = undefined;
                zulu = tango.bind(mike)(zulu);
                mike = zulu.communityAdminOnly;
                mike = mike.bind(zulu)();
                _fun126615_ip = 79; continue _fun126615;
 47:
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 22;
                mike = mike[entity];
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                entity = mike.open;
                entity = entity.bind(mike)();
 79:
                entity = undefined;
                return entity;
            }
        };
        backup['onPress'] = update;
        update = foxtrot.button;
        backup['style'] = update;
        output = !output;
        backup['disabled'] = output;
        backup = yankee.bind(tango)(sizing, backup);
        options[3] = backup;
        offset = echo[offset];
        offset = result.bind(tango)(offset);
        backup = offset.Text;
        offset = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        sizing = foxtrot.details;
        offset['style'] = sizing;
        sizing = echo[kilo];
        sizing = result.bind(tango)(sizing);
        update = sizing.intl;
        output = update.string;
        sizing = echo[kilo];
        sizing = result.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.HgTI2N;
        sizing = output.bind(update)(sizing);
        offset['children'] = sizing;
        offset = yankee.bind(tango)(backup, offset);
        options[4] = offset;
        offset = _closure1_slot4;
        verify = {};
        foxtrot = foxtrot.features;
        verify['style'] = foxtrot;
        foxtrot = {};
        backup = function() { // Original name: icon
            tango = _closure1_slot13;
            mike = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 8;
            entity = golf[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.AnalyticsIcon;
            entity = {};
            oscar = _closure1_slot1;
            report = 7;
            report = golf[report];
            report = oscar.bind(zulu)(report);
            report = report.unsafe_rawColors;
            report = report.GREEN_360;
            entity['color'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        foxtrot['icon'] = backup;
        backup = echo[kilo];
        backup = result.bind(tango)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = echo[kilo];
        backup = result.bind(tango)(backup);
        backup = backup.t;
        backup = backup.oVQF29;
        backup = sizing.bind(output)(backup);
        foxtrot['header'] = backup;
        backup = echo[kilo];
        backup = result.bind(tango)(backup);
        update = backup.intl;
        output = update.format;
        backup = echo[kilo];
        backup = result.bind(tango)(backup);
        backup = backup.t;
        sizing = backup.A6G7am;
        backup = {};
        source = function(argFoo) { // Original name: featureHook
            tango = _closure1_slot13;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 10;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.Text;
            entity = {'variant': 'text-sm/semibold', 'color': 'header-primary'};
            report = argFoo;
            entity['children'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        backup['featureHook'] = source;
        backup = output.bind(update)(sizing, backup);
        foxtrot['body'] = backup;
        backup = new Array(3);
        backup[0] = foxtrot;
        foxtrot = {};
        sizing = function() { // Original name: icon
            tango = _closure1_slot13;
            mike = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 11;
            entity = golf[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.LightbulbIcon;
            entity = {};
            oscar = _closure1_slot1;
            report = 7;
            report = golf[report];
            report = oscar.bind(zulu)(report);
            report = report.unsafe_rawColors;
            report = report.YELLOW_300;
            entity['color'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        foxtrot['icon'] = sizing;
        sizing = echo[kilo];
        sizing = result.bind(tango)(sizing);
        update = sizing.intl;
        output = update.string;
        sizing = echo[kilo];
        sizing = result.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.0rJl9/;
        sizing = output.bind(update)(sizing);
        foxtrot['header'] = sizing;
        sizing = echo[kilo];
        sizing = result.bind(tango)(sizing);
        source = sizing.intl;
        update = source.format;
        sizing = echo[kilo];
        sizing = result.bind(tango)(sizing);
        sizing = sizing.t;
        output = sizing.XsCNk5;
        sizing = {};
        control = function() { // Original name: infoHook
            entity = null;
            return entity;
        };
        sizing['infoHook'] = control;
        control = function(argFoo) { // Original name: featureHook
            tango = _closure1_slot13;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 10;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.Text;
            entity = {'variant': 'text-sm/semibold', 'color': 'header-primary'};
            report = argFoo;
            entity['children'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        sizing['featureHook'] = control;
        sizing = update.bind(source)(output, sizing);
        foxtrot['body'] = sizing;
        backup[1] = foxtrot;
        foxtrot = {};
        sizing = function() { // Original name: icon
            tango = _closure1_slot13;
            mike = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 12;
            entity = golf[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.CircleInformationIcon;
            entity = {};
            oscar = _closure1_slot1;
            report = 7;
            report = golf[report];
            report = oscar.bind(zulu)(report);
            report = report.unsafe_rawColors;
            report = report.PARTNER;
            entity['color'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        foxtrot['icon'] = sizing;
        sizing = echo[kilo];
        sizing = result.bind(tango)(sizing);
        update = sizing.intl;
        output = update.string;
        sizing = echo[kilo];
        sizing = result.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.W2kLJC;
        sizing = output.bind(update)(sizing);
        foxtrot['header'] = sizing;
        sizing = echo[kilo];
        sizing = result.bind(tango)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kilo = echo[kilo];
        kilo = result.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.hyNkHx;
        kilo = sizing.bind(output)(kilo);
        foxtrot['body'] = kilo;
        backup[2] = foxtrot;
        foxtrot = backup.map;
        romeo = function(argFoo, argBar) {
            report = _closure1_slot13;
            tango = _closure1_slot16;
            zulu = {};
            golf = argFoo;
            options = zulu;
            entity = copyDataProperties(options, golf);
            mike = undefined;
            entity = argBar;
            entity = report.bind(mike)(tango, zulu, entity);
            return entity;
        };
        romeo = foxtrot.bind(backup)(romeo);
        verify['children'] = romeo;
        verify = yankee.bind(tango)(offset, verify);
        options[5] = verify;
        report['children'] = options;
        golf = zulu.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();