// app/modules/guild_settings/native/GuildSettingsModalCommunityIntro.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    golfie = tangon.Image;
    var _closure1_slot5 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot6 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.HelpdeskArticles;
    var _closure1_slot9 = golfie;
    golfie = tangon.GuildFeatures;
    var _closure1_slot10 = golfie;
    golfie = tangon.GuildSettingsSections;
    var _closure1_slot11 = golfie;
    tangon = tangon.Permissions;
    var _closure1_slot12 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot13 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot14 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    tangon = {};
    tangon['flex'] = offset;
    golfie['overview'] = tangon;
    tangon = {};
    offset = 14;
    tangon['fontSize'] = offset;
    yankee = 7;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_SECONDARY;
    tangon['color'] = offset;
    golfie['formHint'] = tangon;
    offset = '100%';
    tangon = {'height': '100%', 'padding': 16};
    golfie['container'] = tangon;
    foxtra = 'center';
    tangon = {'textAlign': 'center', 'marginBottom': 8};
    golfie['header'] = tangon;
    tangon = {};
    tangon['textAlign'] = foxtra;
    golfie['body'] = tangon;
    tangon = {};
    tangon['textAlign'] = foxtra;
    golfie['details'] = tangon;
    tangon = {};
    tangon['width'] = offset;
    golfie['headerImage'] = tangon;
    tangon = 24;
    offset = {'marginTop': 24, 'marginBottom': 24};
    golfie['button'] = offset;
    offset = {'marginTop': 32, 'marginBottom': 32};
    golfie['features'] = offset;
    offset = {'backgroundColor': null, 'flex': 1, 'flexDirection': 'row', 'padding': 16, 'borderRadius': null, 'marginTop': 8, 'alignItems': 'flex-start'};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.CARD_PRIMARY_BG;
    offset['backgroundColor'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    offset['borderRadius'] = foxtra;
    golfie['featureCard'] = offset;
    offset = {'backgroundColor': null, 'borderRadius': 40, 'marginRight': 16, 'padding': 8};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_MOD_STRONG;
    offset['backgroundColor'] = yankee;
    golfie['featureIcon'] = offset;
    offset = {'overflow': 'hidden', 'flex': 1};
    golfie['featureDescription'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot15 = golfie;
    golfie = function(argFoo) { // Original name: FeatureCard
        entity = argFoo;
        oscard = entity.icon;
        backup = entity.header;
        yankee = entity.body;
        entity = _closure1_slot15;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot14;
        michal = _closure1_slot4;
        entity = {};
        report = option.featureCard;
        entity['style'] = report;
        offset = _closure1_slot13;
        report = {};
        verify = option.featureIcon;
        report['style'] = verify;
        oscard = oscard.bind(tangon)();
        report['children'] = oscard;
        oscard = offset.bind(tangon)(michal, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = {};
        option = option.featureDescription;
        oscard['style'] = option;
        verify = _closure1_slot0;
        romeon = _closure1_slot2;
        option = 10;
        golfie = romeon[option];
        golfie = verify.bind(tangon)(golfie);
        foxtra = golfie.Text;
        golfie = {'variant': 'text-md/semibold', 'color': 'header-primary'};
        golfie['children'] = backup;
        foxtra = offset.bind(tangon)(foxtra, golfie);
        golfie = new Array(2);
        golfie[0] = foxtra;
        option = romeon[option];
        option = verify.bind(tangon)(option);
        verify = option.Text;
        option = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
        option['children'] = yankee;
        option = offset.bind(tangon)(verify, option);
        golfie[1] = option;
        oscard['children'] = golfie;
        oscard = zuuluu.bind(tangon)(michal, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot16 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_settings/native/GuildSettingsModalCommunityIntro.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildSettingsModalCommunityIntro
        michal = argFoo;
        entity = michal.guildId;
        var _closure2_slot0 = entity;
        entity = michal.onClose;
        var _closure2_slot1 = entity;
        option = michal.contentContainerStyle;
        oscard = michal.navScrim;
        michal = _closure1_slot15;
        tangon = undefined;
        foxtra = michal.bind(tangon)();
        result = _closure1_slot0;
        echoed = _closure1_slot2;
        michal = 13;
        michal = echoed[michal];
        zuuluu = result.bind(tangon)(michal);
        michal = zuuluu.useNavigation;
        golfie = michal.bind(zuuluu)();
        var _closure2_slot2 = golfie;
        michal = 14;
        zuuluu = echoed[michal];
        yankee = result.bind(tangon)(zuuluu);
        offset = yankee.useStateFromStores;
        zuuluu = _closure1_slot7;
        report = new Array(1);
        report[0] = zuuluu;
        zuuluu = function() {
            zuuluu = _closure1_slot7;
            michal = zuuluu.getGuild;
            entity = _closure2_slot0;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        offset = offset.bind(yankee)(report, zuuluu);
        var _closure2_slot3 = offset;
        michal = echoed[michal];
        yankee = result.bind(tangon)(michal);
        report = yankee.useStateFromStores;
        michal = _closure1_slot8;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zuuluu = _closure2_slot3;
                entity = null;
                entity = entity != zuuluu;
                if(!entity) { _fun00002_ip = 49; continue _fun00001 }
 16:
                report = _closure1_slot8;
                tangon = report.can;
                zuuluu = _closure1_slot12;
                zuuluu = zuuluu.ADMINISTRATOR;
                michal = _closure2_slot3;
                entity = tangon.bind(report)(zuuluu, michal);
 49:
                return entity;
            }
        };
        output = report.bind(yankee)(zuuluu, michal);
        var _closure2_slot4 = output;
        report = _closure1_slot3;
        zuuluu = report.useEffect;
        michal = new Array(3);
        michal[0] = offset;
        michal[1] = golfie;
        michal[2] = entity;
        entity = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                michal = _closure2_slot3;
                entity = null;
                entity = entity != michal;
                if(!entity) { _fun00004_ip = 49; continue _fun00003 }
 16:
                michal = _closure2_slot3;
                tangon = michal.features;
                zuuluu = tangon.has;
                michal = _closure1_slot10;
                michal = michal.COMMUNITY;
                entity = zuuluu.bind(tangon)(michal);
 49:
                if(!entity) { _fun00004_ip = 133; continue _fun00003 }
 52:
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                michal = 15;
                zuuluu = zuuluu[michal];
                michal = undefined;
                tangon = tangon.bind(michal)(zuuluu);
                zuuluu = tangon.wait;
                michal = function() {
                    tangon = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    michal = 16;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    zuuluu = tangon.bind(michal)(zuuluu);
                    michal = zuuluu.setSection;
                    entity = _closure1_slot11;
                    entity = entity.COMMUNITY;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                michal = zuuluu.bind(tangon)(michal);
                tangon = _closure2_slot2;
                zuuluu = tangon.replace;
                entity = _closure1_slot11;
                michal = entity.COMMUNITY;
                entity = {};
                report = _closure2_slot1;
                entity['onClose'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
 133:
                entity = undefined;
                return entity;
            }
        };
        entity = zuuluu.bind(report)(entity, michal);
        entity = 17;
        entity = echoed[entity];
        michal = result.bind(tangon)(entity);
        entity = michal.useIntroHeaderSource;
        backup = entity.bind(michal)();
        zuuluu = _closure1_slot14;
        entity = 18;
        entity = echoed[entity];
        entity = result.bind(tangon)(entity);
        michal = entity.RedesignCompat;
        entity = {};
        golfie = _closure1_slot6;
        report = {};
        offset = foxtra.container;
        report['style'] = offset;
        report['contentContainerStyle'] = option;
        yankee = _closure1_slot13;
        offset = _closure1_slot5;
        option = {};
        kiloes = 'contain';
        option['resizeMode'] = kiloes;
        option['source'] = backup;
        backup = foxtra.headerImage;
        option['style'] = backup;
        offset = yankee.bind(tangon)(offset, option);
        option = new Array(6);
        option[0] = offset;
        offset = 10;
        backup = echoed[offset];
        backup = result.bind(tangon)(backup);
        sizing = backup.Text;
        backup = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        kiloes = foxtra.header;
        backup['style'] = kiloes;
        kiloes = 9;
        update = echoed[kiloes];
        update = result.bind(tangon)(update);
        ctrled = update.intl;
        source = ctrled.string;
        update = echoed[kiloes];
        update = result.bind(tangon)(update);
        update = update.t;
        update = update.M/gBcH;
        update = source.bind(ctrled)(update);
        backup['children'] = update;
        backup = yankee.bind(tangon)(sizing, backup);
        option[1] = backup;
        backup = 19;
        backup = echoed[backup];
        backup = result.bind(tangon)(backup);
        sizing = backup.TextWithIOSLinkWorkaround;
        backup = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
        update = foxtra.body;
        backup['style'] = update;
        update = echoed[kiloes];
        update = result.bind(tangon)(update);
        sequen = update.intl;
        vacuum = sequen.format;
        update = echoed[kiloes];
        update = result.bind(tangon)(update);
        update = update.t;
        ctrled = update.52EgsL;
        update = {};
        source = _closure1_slot1;
        config = 20;
        config = echoed[config];
        cntext = source.bind(tangon)(config);
        record = cntext.getArticleURL;
        config = _closure1_slot9;
        config = config.FRIEND_COMMUNITY_DISCOVERABLE_GUILD_TYPES;
        config = record.bind(cntext)(config);
        update['helpdeskArticle'] = config;
        update = vacuum.bind(sequen)(ctrled, update);
        backup['children'] = update;
        backup = yankee.bind(tangon)(sizing, backup);
        option[2] = backup;
        update = 21;
        backup = echoed[update];
        sizing = source.bind(tangon)(backup);
        backup = {};
        ctrled = echoed[kiloes];
        ctrled = result.bind(tangon)(ctrled);
        sequen = ctrled.intl;
        vacuum = sequen.string;
        ctrled = echoed[kiloes];
        ctrled = result.bind(tangon)(ctrled);
        ctrled = ctrled.t;
        ctrled = ctrled.LhlgY2;
        ctrled = vacuum.bind(sequen)(ctrled);
        backup['text'] = ctrled;
        update = echoed[update];
        update = source.bind(tangon)(update);
        update = update.Colors;
        update = update.BRAND;
        backup['color'] = update;
        update = function() { // Original name: onPress
            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                michal = _closure2_slot4;
                if(michal) { _fun00006_ip = 47; continue _fun00005 }
 13:
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                michal = 23;
                zuuluu = zuuluu[michal];
                michal = undefined;
                zuuluu = tangon.bind(michal)(zuuluu);
                michal = zuuluu.communityAdminOnly;
                michal = michal.bind(zuuluu)();
                _fun00006_ip = 79; continue _fun00005;
 47:
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 22;
                michal = michal[entity];
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                entity = michal.open;
                entity = entity.bind(michal)();
 79:
                entity = undefined;
                return entity;
            }
        };
        backup['onPress'] = update;
        update = foxtra.button;
        backup['style'] = update;
        output = !output;
        backup['disabled'] = output;
        backup = yankee.bind(tangon)(sizing, backup);
        option[3] = backup;
        offset = echoed[offset];
        offset = result.bind(tangon)(offset);
        backup = offset.Text;
        offset = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        sizing = foxtra.details;
        offset['style'] = sizing;
        sizing = echoed[kiloes];
        sizing = result.bind(tangon)(sizing);
        update = sizing.intl;
        output = update.string;
        sizing = echoed[kiloes];
        sizing = result.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.HgTI2N;
        sizing = output.bind(update)(sizing);
        offset['children'] = sizing;
        offset = yankee.bind(tangon)(backup, offset);
        option[4] = offset;
        offset = _closure1_slot4;
        verify = {};
        foxtra = foxtra.features;
        verify['style'] = foxtra;
        foxtra = {};
        backup = function() { // Original name: icon
            tangon = _closure1_slot13;
            michal = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 8;
            entity = golfie[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.AnalyticsIcon;
            entity = {};
            oscard = _closure1_slot1;
            report = 7;
            report = golfie[report];
            report = oscard.bind(zuuluu)(report);
            report = report.unsafe_rawColors;
            report = report.GREEN_360;
            entity['color'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        foxtra['icon'] = backup;
        backup = echoed[kiloes];
        backup = result.bind(tangon)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = echoed[kiloes];
        backup = result.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.oVQF29;
        backup = sizing.bind(output)(backup);
        foxtra['header'] = backup;
        backup = echoed[kiloes];
        backup = result.bind(tangon)(backup);
        update = backup.intl;
        output = update.format;
        backup = echoed[kiloes];
        backup = result.bind(tangon)(backup);
        backup = backup.t;
        sizing = backup.A6G7am;
        backup = {};
        source = function(argFoo) { // Original name: featureHook
            tangon = _closure1_slot13;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 10;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.Text;
            entity = {'variant': 'text-sm/semibold', 'color': 'header-primary'};
            report = argFoo;
            entity['children'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        backup['featureHook'] = source;
        backup = output.bind(update)(sizing, backup);
        foxtra['body'] = backup;
        backup = new Array(3);
        backup[0] = foxtra;
        foxtra = {};
        sizing = function() { // Original name: icon
            tangon = _closure1_slot13;
            michal = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 11;
            entity = golfie[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.LightbulbIcon;
            entity = {};
            oscard = _closure1_slot1;
            report = 7;
            report = golfie[report];
            report = oscard.bind(zuuluu)(report);
            report = report.unsafe_rawColors;
            report = report.YELLOW_300;
            entity['color'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        foxtra['icon'] = sizing;
        sizing = echoed[kiloes];
        sizing = result.bind(tangon)(sizing);
        update = sizing.intl;
        output = update.string;
        sizing = echoed[kiloes];
        sizing = result.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.0rJl9/;
        sizing = output.bind(update)(sizing);
        foxtra['header'] = sizing;
        sizing = echoed[kiloes];
        sizing = result.bind(tangon)(sizing);
        source = sizing.intl;
        update = source.format;
        sizing = echoed[kiloes];
        sizing = result.bind(tangon)(sizing);
        sizing = sizing.t;
        output = sizing.XsCNk5;
        sizing = {};
        ctrled = function() { // Original name: infoHook
            entity = null;
            return entity;
        };
        sizing['infoHook'] = ctrled;
        ctrled = function(argFoo) { // Original name: featureHook
            tangon = _closure1_slot13;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 10;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.Text;
            entity = {'variant': 'text-sm/semibold', 'color': 'header-primary'};
            report = argFoo;
            entity['children'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        sizing['featureHook'] = ctrled;
        sizing = update.bind(source)(output, sizing);
        foxtra['body'] = sizing;
        backup[1] = foxtra;
        foxtra = {};
        sizing = function() { // Original name: icon
            tangon = _closure1_slot13;
            michal = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 12;
            entity = golfie[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.CircleInformationIcon;
            entity = {};
            oscard = _closure1_slot1;
            report = 7;
            report = golfie[report];
            report = oscard.bind(zuuluu)(report);
            report = report.unsafe_rawColors;
            report = report.PARTNER;
            entity['color'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        foxtra['icon'] = sizing;
        sizing = echoed[kiloes];
        sizing = result.bind(tangon)(sizing);
        update = sizing.intl;
        output = update.string;
        sizing = echoed[kiloes];
        sizing = result.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.W2kLJC;
        sizing = output.bind(update)(sizing);
        foxtra['header'] = sizing;
        sizing = echoed[kiloes];
        sizing = result.bind(tangon)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kiloes = echoed[kiloes];
        kiloes = result.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.hyNkHx;
        kiloes = sizing.bind(output)(kiloes);
        foxtra['body'] = kiloes;
        backup[2] = foxtra;
        foxtra = backup.map;
        romeon = function(argFoo, argBar) {
            report = _closure1_slot13;
            tangon = _closure1_slot16;
            zuuluu = {};
            golfie = argFoo;
            option = zuuluu;
            entity = copyDataProperties(option, golfie);
            michal = undefined;
            entity = argBar;
            entity = report.bind(michal)(tangon, zuuluu, entity);
            return entity;
        };
        romeon = foxtra.bind(backup)(romeon);
        verify['children'] = romeon;
        verify = yankee.bind(tangon)(offset, verify);
        option[5] = verify;
        report['children'] = option;
        golfie = zuuluu.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();