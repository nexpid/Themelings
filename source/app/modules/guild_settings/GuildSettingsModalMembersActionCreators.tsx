// app/modules/guild_settings/GuildSettingsModalMembersActionCreators.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var1 = metroImportDefault;
    var _closure1_slot1 = var1;
    var _closure1_slot2 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var2 = {};
    var1 = true;
    var2['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var2);
    var1 = 0;
    var2 = var6[var1];
    var1 = undefined;
    var2 = var5.bind(var1)(var2);
    var7 = var2.Endpoints;
    var _closure1_slot3 = var7;
    var2 = var2.ME;
    var _closure1_slot4 = var2;
    var2 = {};
    var7 = function startEditingRoles(arg1, arg2) {
        var3 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 1;
        var2 = var2[var1];
        var1 = undefined;
        var4 = var3.bind(var1)(var2);
        var3 = var4.dispatch;
        var2 = {};
        var5 = 'GUILD_SETTINGS_MODAL_MEMBERS_START_EDITING';
        var2['type'] = var5;
        var5 = arg1;
        var2['guildId'] = var5;
        var5 = arg2;
        var2['userId'] = var5;
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var2['startEditingRoles'] = var7;
    var7 = function stopEditingRoles() {
        var3 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 1;
        var2 = var2[var1];
        var1 = undefined;
        var4 = var3.bind(var1)(var2);
        var3 = var4.dispatch;
        var2 = {};
        var5 = 'GUILD_SETTINGS_MODAL_MEMBERS_STOP_EDITING';
        var2['type'] = var5;
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var2['stopEditingRoles'] = var7;
    var7 = function toggleRole(arg1, arg2) {
        var3 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 1;
        var2 = var2[var1];
        var1 = undefined;
        var4 = var3.bind(var1)(var2);
        var3 = var4.dispatch;
        var2 = {};
        var5 = 'GUILD_SETTINGS_MODAL_MEMBERS_TOGGLE_ROLE';
        var2['type'] = var5;
        var5 = arg1;
        var2['roleId'] = var5;
        var5 = arg2;
        var2['state'] = var5;
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var2['toggleRole'] = var7;
    var7 = function updateMemberRoles(arg1, arg2, arg3) {
        var3 = _closure1_slot1;
        var5 = _closure1_slot2;
        var1 = 1;
        var2 = var5[var1];
        var1 = undefined;
        var4 = var3.bind(var1)(var2);
        var3 = var4.dispatch;
        var2 = {};
        var7 = 'GUILD_SETTINGS_MODAL_MEMBERS_ROLES_SAVE';
        var2['type'] = var7;
        var2 = var3.bind(var4)(var2);
        var4 = function onEnd() {
            var3 = _closure1_slot1;
            var2 = _closure1_slot2;
            var1 = 1;
            var2 = var2[var1];
            var1 = undefined;
            var3 = var3.bind(var1)(var2);
            var2 = var3.dispatch;
            var1 = {};
            var4 = 'GUILD_SETTINGS_MODAL_MEMBERS_ROLES_SAVE_COMPLETE';
            var1['type'] = var4;
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var3 = _closure1_slot0;
        var2 = 2;
        var2 = var5[var2];
        var2 = var3.bind(var1)(var2);
        var5 = var2.HTTP;
        var3 = var5.patch;
        var2 = {};
        var9 = _closure1_slot3;
        var8 = var9.GUILD_MEMBER;
        var7 = arg1;
        var6 = arg2;
        var6 = var8.bind(var9)(var7, var6);
        var2['url'] = var6;
        var6 = {};
        var7 = arg3;
        var6['roles'] = var7;
        var2['body'] = var6;
        var6 = true;
        var2['oldFormErrors'] = var6;
        var2['rejectWithError'] = var6;
        var3 = var3.bind(var5)(var2);
        var2 = var3.then;
        var2 = var2.bind(var3)(var4, var4);
        return var1;
    };
    var2['updateMemberRoles'] = var7;
    var7 = function startEditingNickname() {
        var3 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 1;
        var2 = var2[var1];
        var1 = undefined;
        var4 = var3.bind(var1)(var2);
        var3 = var4.dispatch;
        var2 = {};
        var5 = 'GUILD_SETTINGS_MODAL_MEMBERS_START_EDITING_NICKNAME';
        var2['type'] = var5;
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var2['startEditingNickname'] = var7;
    var4 = function changeNickname(arg1, arg2, arg3) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
            var5 = arg1;
            var4 = arg2;
            var _closure2_slot0 = var4;
            var1 = null;
            if(!(var1 != var4)) { _fun0001_ip = 2; continue _fun0001 }
case 3:
            var3 = _closure1_slot3;
            var1 = var3.GUILD_MEMBER;
            var6 = var1.bind(var3)(var5, var4);
            _fun0001_ip = 4; continue _fun0001;
case 2:
            var4 = _closure1_slot3;
            var3 = var4.GUILD_MEMBER_NICK;
            var1 = _closure1_slot4;
            var6 = var3.bind(var4)(var5, var1);
case 4:
            var7 = _closure1_slot1;
            var5 = _closure1_slot2;
            var1 = 1;
            var4 = var5[var1];
            var1 = undefined;
            var8 = var7.bind(var1)(var4);
            var7 = var8.dispatch;
            var4 = {};
            var9 = 'GUILD_SETTINGS_MODAL_MEMBERS_CHANGE_NICKNAME';
            var4['type'] = var9;
            var4 = var7.bind(var8)(var4);
            var4 = _closure1_slot0;
            var3 = 2;
            var3 = var5[var3];
            var3 = var4.bind(var1)(var3);
            var5 = var3.HTTP;
            var4 = var5.patch;
            var3 = {};
            var3['url'] = var6;
            var6 = {};
            var7 = arg3;
            var6['nick'] = var7;
            var3['body'] = var6;
            var6 = true;
            var3['oldFormErrors'] = var6;
            var6 = false;
            var3['rejectWithError'] = var6;
            var5 = var4.bind(var5)(var3);
            var4 = var5.then;
            var3 = function() {
                var3 = _closure1_slot1;
                var2 = _closure1_slot2;
                var1 = 1;
                var2 = var2[var1];
                var1 = undefined;
                var4 = var3.bind(var1)(var2);
                var3 = var4.dispatch;
                var2 = {};
                var5 = 'GUILD_SETTINGS_MODAL_MEMBERS_CHANGE_NICKNAME_SUCCESS';
                var2['type'] = var5;
                var2 = var3.bind(var4)(var2);
                return var1;
            };
            var2 = function(arg1) {
                _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
case 0:
                    var6 = _closure1_slot0;
                    var3 = _closure1_slot2;
                    var8 = 3;
                    var4 = var3[var8];
                    var1 = undefined;
                    var4 = var6.bind(var1)(var4);
                    var5 = var4.intl;
                    var4 = var5.string;
                    var3 = var3[var8];
                    var3 = var6.bind(var1)(var3);
                    var3 = var3.t;
                    var3 = var3.5LO/Sk;
                    var5 = var4.bind(var5)(var3);
                    var4 = _closure2_slot0;
                    var3 = null;
                    if(!(var3 != var4)) { _fun0002_ip = 5; continue _fun0002 }
case 6:
                    var7 = _closure1_slot0;
                    var3 = _closure1_slot2;
                    var4 = var3[var8];
                    var4 = var7.bind(var1)(var4);
                    var6 = var4.intl;
                    var4 = var6.string;
                    var3 = var3[var8];
                    var3 = var7.bind(var1)(var3);
                    var3 = var3.t;
                    var3 = var3.rJfW6e;
                    var5 = var4.bind(var6)(var3);
case 5:
                    var3 = arg1;
                    var4 = var3.status;
                    var3 = 403;
                    if(!(var3 === var4)) { _fun0002_ip = 7; continue _fun0002 }
case 8:
                    var4 = _closure1_slot0;
                    var3 = _closure1_slot2;
                    var6 = var3[var8];
                    var6 = var4.bind(var1)(var6);
                    var7 = var6.intl;
                    var6 = var7.formatToMarkdownString;
                    var3 = var3[var8];
                    var3 = var4.bind(var1)(var3);
                    var3 = var3.t;
                    var4 = var3.Izf9jI;
                    var3 = {};
                    var5 = var6.bind(var7)(var4, var3);
case 7:
                    var3 = _closure1_slot1;
                    var4 = _closure1_slot2;
                    var2 = 1;
                    var2 = var4[var2];
                    var4 = var3.bind(var1)(var2);
                    var3 = var4.dispatch;
                    var2 = {};
                    var6 = 'GUILD_SETTINGS_MODAL_MEMBERS_CHANGE_NICKNAME_FAILURE';
                    var2['type'] = var6;
                    var2['error'] = var5;
                    var2 = var3.bind(var4)(var2);
                    return var1;
                }
            };
            var2 = var4.bind(var5)(var3, var2);
            return var1;
        }
    };
    var2['changeNickname'] = var4;
    var4 = 4;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/guild_settings/GuildSettingsModalMembersActionCreators.tsx';
    var4 = var5.bind(var6)(var4);
    var3['default'] = var2;
    return var1;
})();