// app/modules/explicit_media_redaction/native/ExplicitMediaLearnMoreActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    golfie = tangon.Image;
    var _closure1_slot5 = golfie;
    tangon = tangon.Linking;
    var _closure1_slot6 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.EXPLICIT_MEDIA_FALSE_POSITIVE_ACTION_SHEET_KEY;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.HelpdeskArticles;
    var _closure1_slot8 = golfie;
    tangon = tangon.UserSettingsSections;
    var _closure1_slot9 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot11 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['paddingVertical'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['paddingHorizontal'] = romeon;
    romeon = 'center';
    verify['justifyContent'] = romeon;
    tangon['container'] = verify;
    verify = {};
    verify['alignSelf'] = romeon;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['marginBottom'] = foxtra;
    tangon['art'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['marginBottom'] = foxtra;
    tangon['header'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['marginBottom'] = foxtra;
    verify['alignItems'] = romeon;
    tangon['infoHeader'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    verify['marginBottom'] = foxtra;
    verify['alignItems'] = romeon;
    tangon['info'] = verify;
    verify = {};
    verify['textAlign'] = romeon;
    tangon['infoDesc'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['gap'] = foxtra;
    tangon['buttonsContainer'] = verify;
    verify = {};
    verify['textAlign'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['marginBottom'] = offset;
    tangon['falsePositive'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/explicit_media_redaction/native/ExplicitMediaLearnMoreActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ExplicitMediaLearnMoreActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            oscard = michal.channelId;
            var _closure2_slot0 = oscard;
            entity = michal.messageId;
            var _closure2_slot1 = entity;
            zuuluu = michal.attachmentId;
            var _closure2_slot2 = zuuluu;
            michal = michal.embedId;
            var _closure2_slot3 = michal;
            michal = _closure1_slot12;
            tangon = undefined;
            result = michal.bind(tangon)();
            sizing = _closure1_slot1;
            kiloes = _closure1_slot2;
            michal = 7;
            michal = kiloes[michal];
            michal = sizing.bind(tangon)(michal);
            romeon = michal.bind(tangon)();
            report = _closure1_slot3;
            golfie = report.useCallback;
            zuuluu = new Array(2);
            zuuluu[0] = oscard;
            zuuluu[1] = entity;
            michal = function(argFoo) {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 8;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.trackMediaRedactionAction;
                michal = {};
                report = argFoo;
                michal['action'] = report;
                oscard = _closure2_slot0;
                michal['channelId'] = oscard;
                report = _closure2_slot1;
                michal['messageId'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            michal = golfie.bind(report)(michal, zuuluu);
            var _closure2_slot4 = michal;
            zuuluu = report.useEffect;
            michal = new Array(2);
            michal[0] = oscard;
            michal[1] = entity;
            entity = function() {
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                report = 8;
                michal = golfie[report];
                entity = undefined;
                tangon = oscard.bind(entity)(michal);
                zuuluu = tangon.trackMediaRedactionAction;
                michal = {};
                report = golfie[report];
                report = oscard.bind(entity)(report);
                report = report.TrackMediaRedactionActionType;
                report = report.EXPLICIT_MEDIA_LEARN_MORE_VIEWED;
                michal['action'] = report;
                oscard = _closure2_slot0;
                michal['channelId'] = oscard;
                report = _closure2_slot1;
                michal['messageId'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot10;
            foxtra = _closure1_slot0;
            entity = 9;
            entity = kiloes[entity];
            entity = foxtra.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {};
            report = true;
            entity['startExpanded'] = report;
            golfie = _closure1_slot11;
            oscard = _closure1_slot4;
            report = {};
            option = result.container;
            report['style'] = option;
            option = {};
            verify = result.header;
            option['style'] = verify;
            offset = _closure1_slot5;
            verify = {};
            yankee = result.art;
            verify['style'] = yankee;
            yankee = 10;
            yankee = kiloes[yankee];
            yankee = sizing.bind(tangon)(yankee);
            verify['source'] = yankee;
            yankee = 86;
            verify['height'] = yankee;
            verify = zuuluu.bind(tangon)(offset, verify);
            option['children'] = verify;
            verify = zuuluu.bind(tangon)(oscard, option);
            option = new Array(3);
            option[0] = verify;
            verify = {};
            offset = result.info;
            verify['style'] = offset;
            yankee = 11;
            offset = kiloes[yankee];
            offset = foxtra.bind(tangon)(offset);
            sizing = offset.Text;
            offset = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/bold', 'color': 'header-primary'};
            output = result.infoHeader;
            offset['style'] = output;
            source = 12;
            output = kiloes[source];
            output = foxtra.bind(tangon)(output);
            ctrled = output.intl;
            echoed = ctrled.string;
            output = kiloes[source];
            output = foxtra.bind(tangon)(output);
            output = output.t;
            output = output.sGW77u;
            output = echoed.bind(ctrled)(output);
            offset['children'] = output;
            sizing = zuuluu.bind(tangon)(sizing, offset);
            offset = new Array(2);
            offset[0] = sizing;
            yankee = kiloes[yankee];
            yankee = foxtra.bind(tangon)(yankee);
            foxtra = yankee.Text;
            yankee = {'style': null, 'variant': 'text-md/normal', 'color': 'header-secondary'};
            kiloes = result.infoDesc;
            yankee['style'] = kiloes;
            sizing = _closure1_slot0;
            kiloes = _closure1_slot2;
            output = kiloes[source];
            output = sizing.bind(tangon)(output);
            echoed = output.intl;
            output = echoed.string;
            kiloes = kiloes[source];
            kiloes = sizing.bind(tangon)(kiloes);
            sizing = kiloes.t;
            if(romeon) { _fun00002_ip = 497; continue _fun00001 }
 482:
            kiloes = sizing.i4daNj;
            kiloes = output.bind(echoed)(kiloes);
            _fun00002_ip = 510; continue _fun00001;
 497:
            sizing = sizing.XW3vjo;
            kiloes = output.bind(echoed)(sizing);
 510:
            yankee['children'] = kiloes;
            yankee = zuuluu.bind(tangon)(foxtra, yankee);
            offset[1] = yankee;
            verify['children'] = offset;
            verify = golfie.bind(tangon)(oscard, verify);
            option[1] = verify;
            yankee = _closure1_slot11;
            offset = _closure1_slot4;
            verify = {};
            foxtra = result.buttonsContainer;
            verify['style'] = foxtra;
            sizing = _closure1_slot10;
            output = _closure1_slot0;
            kiloes = _closure1_slot2;
            foxtra = 13;
            kiloes = kiloes[foxtra];
            kiloes = output.bind(tangon)(kiloes);
            kiloes = kiloes.Button;
            output = {'variant': 'primary', 'size': 'md'};
            sequen = _closure1_slot0;
            echoed = _closure1_slot2;
            ctrled = echoed[source];
            ctrled = sequen.bind(tangon)(ctrled);
            vacuum = ctrled.intl;
            ctrled = vacuum.string;
            echoed = echoed[source];
            echoed = sequen.bind(tangon)(echoed);
            echoed = echoed.t;
            if(romeon) { _fun00002_ip = 677; continue _fun00001 }
 646:
            romeon = echoed.hvVgAQ;
            romeon = ctrled.bind(vacuum)(romeon);
            output['text'] = romeon;
            romeon = function() { // Original name: onPress
                tangon = _closure1_slot6;
                zuuluu = tangon.openURL;
                oscard = _closure1_slot1;
                report = _closure1_slot2;
                entity = 16;
                report = report[entity];
                entity = undefined;
                oscard = oscard.bind(entity)(report);
                report = oscard.getArticleURL;
                michal = _closure1_slot8;
                michal = michal.EXPLICIT_MEDIA_REDACTION;
                michal = report.bind(oscard)(michal);
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            output['onPress'] = romeon;
            romeon = output;
            _fun00002_ip = 708; continue _fun00001;
 677:
            echoed = echoed.9D+zGR;
            echoed = ctrled.bind(vacuum)(echoed);
            output['text'] = echoed;
            echoed = function() { // Original name: onPress
                oscard = _closure2_slot4;
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 8;
                zuuluu = tangon[entity];
                entity = undefined;
                zuuluu = report.bind(entity)(zuuluu);
                zuuluu = zuuluu.TrackMediaRedactionActionType;
                zuuluu = zuuluu.EXPLICIT_MEDIA_LEARN_MORE_CLICK_SETTINGS;
                zuuluu = oscard.bind(entity)(zuuluu);
                zuuluu = 14;
                zuuluu = tangon[zuuluu];
                oscard = report.bind(entity)(zuuluu);
                report = oscard.openUserSettings;
                zuuluu = {};
                golfie = _closure1_slot9;
                golfie = golfie.CONTENT_AND_SOCIAL;
                zuuluu['screen'] = golfie;
                zuuluu = report.bind(oscard)(zuuluu);
                zuuluu = _closure1_slot1;
                michal = 15;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            output['onPress'] = echoed;
            romeon = output;
 708:
            kiloes = sizing.bind(tangon)(kiloes, romeon);
            romeon = new Array(3);
            romeon[0] = kiloes;
            kiloes = _closure1_slot10;
            output = _closure1_slot0;
            sizing = _closure1_slot2;
            foxtra = sizing[foxtra];
            foxtra = output.bind(tangon)(foxtra);
            backup = foxtra.Button;
            foxtra = {'variant': 'secondary', 'size': 'md'};
            echoed = sizing[source];
            echoed = output.bind(tangon)(echoed);
            vacuum = echoed.intl;
            ctrled = vacuum.string;
            echoed = sizing[source];
            echoed = output.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.bmbHPD;
            echoed = ctrled.bind(vacuum)(echoed);
            foxtra['text'] = echoed;
            echoed = function() { // Original name: onPress
                report = _closure2_slot4;
                oscard = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 8;
                zuuluu = tangon[entity];
                entity = undefined;
                zuuluu = oscard.bind(entity)(zuuluu);
                zuuluu = zuuluu.TrackMediaRedactionActionType;
                zuuluu = zuuluu.EXPLICIT_MEDIA_LEARN_MORE_CLICK_DISMISS;
                zuuluu = report.bind(entity)(zuuluu);
                zuuluu = _closure1_slot1;
                michal = 15;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            foxtra['onPress'] = echoed;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            romeon[1] = foxtra;
            foxtra = 17;
            foxtra = sizing[foxtra];
            foxtra = output.bind(tangon)(foxtra);
            backup = foxtra.TextWithIOSLinkWorkaround;
            foxtra = {'style': null, 'variant': 'text-sm/medium', 'color': 'text-muted'};
            result = result.falsePositive;
            foxtra['style'] = result;
            result = sizing[source];
            result = output.bind(tangon)(result);
            echoed = result.intl;
            result = echoed.format;
            sizing = sizing[source];
            sizing = output.bind(tangon)(sizing);
            sizing = sizing.t;
            output = sizing.Ge0HUl;
            sizing = {};
            update = function() { // Original name: handleFalsePositiveHook
                report = _closure1_slot1;
                zuuluu = _closure1_slot2;
                tangon = 15;
                oscard = zuuluu[tangon];
                entity = undefined;
                golfie = report.bind(entity)(oscard);
                oscard = golfie.hideActionSheet;
                oscard = oscard.bind(golfie)();
                verify = _closure2_slot4;
                option = _closure1_slot0;
                oscard = 8;
                oscard = zuuluu[oscard];
                oscard = option.bind(entity)(oscard);
                oscard = oscard.TrackMediaRedactionActionType;
                oscard = oscard.EXPLICIT_MEDIA_LEARN_MORE_CLICK_FALSE_POSITIVE;
                oscard = verify.bind(entity)(oscard);
                tangon = zuuluu[tangon];
                oscard = report.bind(entity)(tangon);
                report = oscard.openLazy;
                tangon = 19;
                tangon = zuuluu[tangon];
                option = option.bind(entity)(tangon);
                tangon = 18;
                tangon = zuuluu[tangon];
                zuuluu = zuuluu.paths;
                tangon = option.bind(entity)(tangon, zuuluu);
                zuuluu = _closure1_slot7;
                michal = {};
                option = _closure2_slot0;
                michal['channelId'] = option;
                option = _closure2_slot1;
                michal['messageId'] = option;
                option = _closure2_slot2;
                michal['attachmentId'] = option;
                golfie = _closure2_slot3;
                michal['embedId'] = golfie;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            sizing['handleFalsePositiveHook'] = update;
            sizing = result.bind(echoed)(output, sizing);
            foxtra['children'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            romeon[2] = foxtra;
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[2] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();