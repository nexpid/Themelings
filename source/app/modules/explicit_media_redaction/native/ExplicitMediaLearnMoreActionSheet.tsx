// app/modules/explicit_media_redaction/native/ExplicitMediaLearnMoreActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    tangon = tangon.Image;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.EXPLICIT_MEDIA_FALSE_POSITIVE_ACTION_SHEET_KEY;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.HelpdeskArticles;
    var _closure1_slot7 = golfie;
    tangon = tangon.UserSettingsSections;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot9 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['paddingVertical'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['paddingHorizontal'] = romeon;
    romeon = 'center';
    verify['justifyContent'] = romeon;
    tangon['container'] = verify;
    verify = {};
    verify['alignSelf'] = romeon;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['marginBottom'] = foxtra;
    tangon['art'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['marginBottom'] = foxtra;
    tangon['header'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['marginBottom'] = foxtra;
    verify['alignItems'] = romeon;
    tangon['infoHeader'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    verify['marginBottom'] = foxtra;
    verify['alignItems'] = romeon;
    tangon['info'] = verify;
    verify = {};
    verify['textAlign'] = romeon;
    tangon['infoDesc'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['gap'] = foxtra;
    tangon['buttonsContainer'] = verify;
    verify = {};
    verify['textAlign'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['marginBottom'] = offset;
    tangon['linkSubtext'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 24;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/explicit_media_redaction/native/ExplicitMediaLearnMoreActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ExplicitMediaLearnMoreActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            oscard = michal.channelId;
            var _closure2_slot0 = oscard;
            entity = michal.messageId;
            var _closure2_slot1 = entity;
            zuuluu = michal.attachmentId;
            var _closure2_slot2 = zuuluu;
            michal = michal.embedId;
            var _closure2_slot3 = michal;
            tangon = undefined;
            var _closure2_slot6 = tangon;
            michal = _closure1_slot11;
            result = michal.bind(tangon)();
            kiloes = _closure1_slot1;
            backup = _closure1_slot2;
            michal = 7;
            michal = backup[michal];
            michal = kiloes.bind(tangon)(michal);
            romeon = michal.bind(tangon)();
            foxtra = _closure1_slot0;
            michal = 8;
            michal = backup[michal];
            zuuluu = foxtra.bind(tangon)(michal);
            michal = zuuluu.useIsVerifiedTeen;
            option = michal.bind(zuuluu)();
            var _closure2_slot4 = option;
            michal = 9;
            michal = backup[michal];
            zuuluu = foxtra.bind(tangon)(michal);
            michal = zuuluu.useShouldAgeVerifyForExplicitMedia;
            michal = michal.bind(zuuluu)();
            var _closure2_slot5 = michal;
            report = _closure1_slot3;
            golfie = report.useMemo;
            zuuluu = new Array(2);
            zuuluu[0] = option;
            zuuluu[1] = michal;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure2_slot4;
                    if(!entity) { _fun00004_ip = 14; continue _fun00003 }
 10:
                    entity = _closure2_slot5;
 14:
                    return entity;
                }
            };
            sizing = golfie.bind(report)(michal, zuuluu);
            golfie = report.useCallback;
            zuuluu = new Array(2);
            zuuluu[0] = oscard;
            zuuluu[1] = entity;
            michal = function(argFoo) {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 9;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.trackMediaRedactionAction;
                michal = {};
                report = argFoo;
                michal['action'] = report;
                oscard = _closure2_slot0;
                michal['channelId'] = oscard;
                report = _closure2_slot1;
                michal['messageId'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            michal = golfie.bind(report)(michal, zuuluu);
            _closure2_slot6 = michal;
            zuuluu = report.useEffect;
            michal = new Array(2);
            michal[0] = oscard;
            michal[1] = entity;
            entity = function() {
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                report = 9;
                michal = golfie[report];
                entity = undefined;
                tangon = oscard.bind(entity)(michal);
                zuuluu = tangon.trackMediaRedactionAction;
                michal = {};
                report = golfie[report];
                report = oscard.bind(entity)(report);
                report = report.TrackMediaRedactionActionType;
                report = report.EXPLICIT_MEDIA_LEARN_MORE_VIEWED;
                michal['action'] = report;
                oscard = _closure2_slot0;
                michal['channelId'] = oscard;
                report = _closure2_slot1;
                michal['messageId'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot9;
            entity = 16;
            entity = backup[entity];
            entity = foxtra.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {};
            report = true;
            entity['startExpanded'] = report;
            golfie = _closure1_slot10;
            oscard = _closure1_slot4;
            report = {};
            option = result.container;
            report['style'] = option;
            option = {};
            verify = result.header;
            option['style'] = verify;
            offset = _closure1_slot5;
            verify = {};
            yankee = result.art;
            verify['style'] = yankee;
            yankee = 17;
            yankee = backup[yankee];
            yankee = kiloes.bind(tangon)(yankee);
            verify['source'] = yankee;
            yankee = 86;
            verify['height'] = yankee;
            verify = zuuluu.bind(tangon)(offset, verify);
            option['children'] = verify;
            verify = zuuluu.bind(tangon)(oscard, option);
            option = new Array(3);
            option[0] = verify;
            verify = {};
            offset = result.info;
            verify['style'] = offset;
            yankee = 18;
            offset = backup[yankee];
            offset = foxtra.bind(tangon)(offset);
            kiloes = offset.Text;
            offset = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/bold', 'color': 'header-primary'};
            echoed = result.infoHeader;
            offset['style'] = echoed;
            ctrled = 19;
            echoed = backup[ctrled];
            echoed = foxtra.bind(tangon)(echoed);
            vacuum = echoed.intl;
            update = vacuum.string;
            echoed = backup[ctrled];
            echoed = foxtra.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.sGW77u;
            echoed = update.bind(vacuum)(echoed);
            offset['children'] = echoed;
            kiloes = zuuluu.bind(tangon)(kiloes, offset);
            offset = new Array(2);
            offset[0] = kiloes;
            yankee = backup[yankee];
            yankee = foxtra.bind(tangon)(yankee);
            foxtra = yankee.Text;
            yankee = {'style': null, 'variant': 'text-md/medium', 'color': 'text-normal'};
            backup = result.infoDesc;
            yankee['style'] = backup;
            kiloes = _closure1_slot0;
            backup = _closure1_slot2;
            echoed = backup[ctrled];
            echoed = kiloes.bind(tangon)(echoed);
            update = echoed.intl;
            echoed = update.string;
            backup = backup[ctrled];
            backup = kiloes.bind(tangon)(backup);
            kiloes = backup.t;
            if(sizing) { _fun00002_ip = 601; continue _fun00001 }
 568:
            if(romeon) { _fun00002_ip = 586; continue _fun00001 }
 571:
            backup = kiloes.i4daNj;
            backup = echoed.bind(update)(backup);
            _fun00002_ip = 599; continue _fun00001;
 586:
            vacuum = kiloes.XW3vjo;
            backup = echoed.bind(update)(vacuum);
 599:
            _fun00002_ip = 614; continue _fun00001;
 601:
            kiloes = kiloes.H2kKw8;
            backup = echoed.bind(update)(kiloes);
 614:
            yankee['children'] = backup;
            yankee = zuuluu.bind(tangon)(foxtra, yankee);
            offset[1] = yankee;
            verify['children'] = offset;
            verify = golfie.bind(tangon)(oscard, verify);
            option[1] = verify;
            yankee = _closure1_slot10;
            offset = _closure1_slot4;
            verify = {};
            foxtra = result.buttonsContainer;
            verify['style'] = foxtra;
            kiloes = _closure1_slot9;
            echoed = _closure1_slot0;
            backup = _closure1_slot2;
            foxtra = 20;
            backup = backup[foxtra];
            backup = echoed.bind(tangon)(backup);
            backup = backup.Button;
            echoed = {'variant': 'primary', 'size': 'md'};
            config = _closure1_slot0;
            update = _closure1_slot2;
            vacuum = update[ctrled];
            vacuum = config.bind(tangon)(vacuum);
            sequen = vacuum.intl;
            vacuum = sequen.string;
            update = update[ctrled];
            update = config.bind(tangon)(update);
            update = update.t;
            if(sizing) { _fun00002_ip = 817; continue _fun00001 }
 750:
            if(romeon) { _fun00002_ip = 784; continue _fun00001 }
 753:
            romeon = update.hvVgAQ;
            romeon = vacuum.bind(sequen)(romeon);
            echoed['text'] = romeon;
            romeon = function() { // Original name: handleNavigateToHelpCenterLearnMore
                oscard = _closure1_slot1;
                golfie = _closure1_slot2;
                entity = 12;
                zuuluu = golfie[entity];
                entity = undefined;
                tangon = oscard.bind(entity)(zuuluu);
                zuuluu = tangon.openURL;
                report = 13;
                report = golfie[report];
                oscard = oscard.bind(entity)(report);
                report = oscard.getArticleURL;
                michal = _closure1_slot7;
                michal = michal.EXPLICIT_MEDIA_REDACTION;
                michal = report.bind(oscard)(michal);
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            echoed['onPress'] = romeon;
            romeon = echoed;
            _fun00002_ip = 815; continue _fun00001;
 784:
            config = update.9D+zGR;
            config = vacuum.bind(sequen)(config);
            echoed['text'] = config;
            config = function() { // Original name: handleNavigateToSettingsButtonPress
                oscard = _closure2_slot6;
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 9;
                zuuluu = tangon[entity];
                entity = undefined;
                zuuluu = report.bind(entity)(zuuluu);
                zuuluu = zuuluu.TrackMediaRedactionActionType;
                zuuluu = zuuluu.EXPLICIT_MEDIA_LEARN_MORE_CLICK_SETTINGS;
                zuuluu = oscard.bind(entity)(zuuluu);
                zuuluu = 10;
                zuuluu = tangon[zuuluu];
                oscard = report.bind(entity)(zuuluu);
                report = oscard.openUserSettings;
                zuuluu = {};
                golfie = _closure1_slot8;
                golfie = golfie.CONTENT_AND_SOCIAL;
                zuuluu['screen'] = golfie;
                zuuluu = report.bind(oscard)(zuuluu);
                zuuluu = _closure1_slot1;
                michal = 11;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            echoed['onPress'] = config;
            romeon = echoed;
 815:
            _fun00002_ip = 846; continue _fun00001;
 817:
            update = update.+2/AhI;
            update = vacuum.bind(sequen)(update);
            echoed['text'] = update;
            update = function() { // Original name: handleAgeVerifyButtonPress
                report = _closure2_slot6;
                golfie = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 9;
                zuuluu = tangon[entity];
                entity = undefined;
                zuuluu = golfie.bind(entity)(zuuluu);
                zuuluu = zuuluu.TrackMediaRedactionActionType;
                zuuluu = zuuluu.EXPLICIT_MEDIA_LEARN_MORE_CLICK_AGE_VERIFY_REVERIFY;
                zuuluu = report.bind(entity)(zuuluu);
                zuuluu = _closure1_slot1;
                michal = 14;
                michal = tangon[michal];
                oscard = zuuluu.bind(entity)(michal);
                report = oscard.showAgeVerificationGetStartedModal;
                michal = 15;
                michal = tangon[michal];
                michal = golfie.bind(entity)(michal);
                michal = michal.AgeVerificationModalEntryPoint;
                michal = michal.SENSITIVE_MEDIA_LEARN_MORE;
                michal = report.bind(oscard)(michal);
                michal = 11;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            echoed['onPress'] = update;
            romeon = echoed;
 846:
            backup = kiloes.bind(tangon)(backup, romeon);
            romeon = new Array(3);
            romeon[0] = backup;
            kiloes = _closure1_slot9;
            backup = _closure1_slot0;
            echoed = _closure1_slot2;
            foxtra = echoed[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            update = foxtra.Button;
            foxtra = {'variant': 'secondary', 'size': 'md'};
            vacuum = echoed[ctrled];
            vacuum = backup.bind(tangon)(vacuum);
            config = vacuum.intl;
            sequen = config.string;
            vacuum = echoed[ctrled];
            vacuum = backup.bind(tangon)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.bmbHPD;
            vacuum = sequen.bind(config)(vacuum);
            foxtra['text'] = vacuum;
            vacuum = function() { // Original name: onPress
                report = _closure2_slot6;
                oscard = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 9;
                zuuluu = tangon[entity];
                entity = undefined;
                zuuluu = oscard.bind(entity)(zuuluu);
                zuuluu = zuuluu.TrackMediaRedactionActionType;
                zuuluu = zuuluu.EXPLICIT_MEDIA_LEARN_MORE_CLICK_DISMISS;
                zuuluu = report.bind(entity)(zuuluu);
                zuuluu = _closure1_slot1;
                michal = 11;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            foxtra['onPress'] = vacuum;
            foxtra = kiloes.bind(tangon)(update, foxtra);
            romeon[1] = foxtra;
            foxtra = 21;
            foxtra = echoed[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            backup = foxtra.TextWithIOSLinkWorkaround;
            foxtra = {'style': null, 'variant': 'text-sm/medium', 'color': 'text-muted'};
            result = result.linkSubtext;
            foxtra['style'] = result;
            result = _closure1_slot0;
            output = _closure1_slot2;
            echoed = output[ctrled];
            echoed = result.bind(tangon)(echoed);
            update = echoed.intl;
            echoed = update.format;
            output = output[ctrled];
            output = result.bind(tangon)(output);
            output = output.t;
            if(sizing) { _fun00002_ip = 1086; continue _fun00001 }
 1056:
            result = output.Ge0HUl;
            sizing = {};
            ctrled = function() { // Original name: handleFalsePositiveHook
                report = _closure1_slot1;
                zuuluu = _closure1_slot2;
                tangon = 11;
                oscard = zuuluu[tangon];
                entity = undefined;
                golfie = report.bind(entity)(oscard);
                oscard = golfie.hideActionSheet;
                oscard = oscard.bind(golfie)();
                verify = _closure2_slot6;
                option = _closure1_slot0;
                oscard = 9;
                oscard = zuuluu[oscard];
                oscard = option.bind(entity)(oscard);
                oscard = oscard.TrackMediaRedactionActionType;
                oscard = oscard.EXPLICIT_MEDIA_LEARN_MORE_CLICK_FALSE_POSITIVE;
                oscard = verify.bind(entity)(oscard);
                tangon = zuuluu[tangon];
                oscard = report.bind(entity)(tangon);
                report = oscard.openLazy;
                tangon = 23;
                tangon = zuuluu[tangon];
                option = option.bind(entity)(tangon);
                tangon = 22;
                tangon = zuuluu[tangon];
                zuuluu = zuuluu.paths;
                tangon = option.bind(entity)(tangon, zuuluu);
                zuuluu = _closure1_slot6;
                michal = {};
                option = _closure2_slot0;
                michal['channelId'] = option;
                option = _closure2_slot1;
                michal['messageId'] = option;
                option = _closure2_slot2;
                michal['attachmentId'] = option;
                golfie = _closure2_slot3;
                michal['embedId'] = golfie;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            sizing['handleFalsePositiveHook'] = ctrled;
            sizing = echoed.bind(update)(result, sizing);
            _fun00002_ip = 1114; continue _fun00001;
 1086:
            result = output.3HvI8P;
            output = {};
            source = function() { // Original name: handleOnHelpUrlHook
                golfie = _closure1_slot1;
                report = _closure1_slot2;
                entity = 14;
                zuuluu = report[entity];
                entity = undefined;
                oscard = golfie.bind(entity)(zuuluu);
                tangon = oscard.openUrl;
                zuuluu = 13;
                zuuluu = report[zuuluu];
                option = golfie.bind(entity)(zuuluu);
                golfie = option.getArticleURL;
                zuuluu = _closure1_slot7;
                zuuluu = zuuluu.TIGGER_PAWTECT_UK_AND_AUS_ONLY_LEARN_MORE;
                zuuluu = golfie.bind(option)(zuuluu);
                zuuluu = tangon.bind(oscard)(zuuluu);
                zuuluu = _closure2_slot6;
                tangon = _closure1_slot0;
                michal = 9;
                michal = report[michal];
                michal = tangon.bind(entity)(michal);
                michal = michal.TrackMediaRedactionActionType;
                michal = michal.EXPLICIT_MEDIA_LEARN_MORE_CLICK_AGE_VERIFY_LEARN_MORE;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            output['handleOnHelpUrlHook'] = source;
            sizing = echoed.bind(update)(result, output);
 1114:
            foxtra['children'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            romeon[2] = foxtra;
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[2] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();