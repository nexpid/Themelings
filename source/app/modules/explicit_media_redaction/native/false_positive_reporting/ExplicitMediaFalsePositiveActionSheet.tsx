// app/modules/explicit_media_redaction/native/false_positive_reporting/ExplicitMediaFalsePositiveActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    romeo = 1;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot4 = golf;
    golf = tango.Image;
    var _closure1_slot5 = golf;
    tango = tango.ScrollView;
    var _closure1_slot6 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = function(argFoo) { // Original name: ExplicitMediaFalsePositivePreviewEmbed
        _fun87458: for(var _fun87458_ip = 0; ; ) switch(_fun87458_ip) {
 0:
            entity = argFoo;
            entity = entity.embed;
            mike = entity.video;
            report = undefined;
            if(!(report !== mike)) { _fun87458_ip = 36; continue _fun87458 }
 21:
            zulu = entity.type;
            mike = 'gifv';
            if(!(mike === zulu)) { _fun87458_ip = 60; continue _fun87458 }
 36:
            mike = entity.thumbnail;
            zulu = null;
            zulu = zulu == mike;
            oscar = undefined;
            if(zulu) { _fun87458_ip = 58; continue _fun87458 }
 53:
            oscar = mike.url;
 58:
            _fun87458_ip = 71; continue _fun87458;
 60:
            entity = entity.video;
            oscar = entity.url;
 71:
            entity = null;
            mike = entity == oscar;
            if(mike) { _fun87458_ip = 103; continue _fun87458 }
 80:
            tango = _closure1_slot7;
            zulu = _closure1_slot11;
            mike = {};
            mike['url'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 103:
            return entity;
        }
    };
    var _closure1_slot9 = tango;
    tango = function(argFoo) { // Original name: ExplicitMediaFalsePositivePreviewAttachment
        _fun87459: for(var _fun87459_ip = 0; ; ) switch(_fun87459_ip) {
 0:
            entity = argFoo;
            entity = entity.attachment;
            mike = entity.url;
            entity = null;
            zulu = entity == mike;
            if(zulu) { _fun87459_ip = 48; continue _fun87459 }
 23:
            report = _closure1_slot7;
            tango = _closure1_slot11;
            zulu = {};
            zulu['url'] = mike;
            mike = undefined;
            entity = report.bind(mike)(tango, zulu);
 48:
            return entity;
        }
    };
    var _closure1_slot10 = tango;
    tango = function(argFoo) { // Original name: ExplicitMediaFalsePositivePreview
        _fun87460: for(var _fun87460_ip = 0; ; ) switch(_fun87460_ip) {
 0:
            entity = argFoo;
            offset = entity.url;
            entity = _closure1_slot12;
            tango = undefined;
            verify = entity.bind(tango)();
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 3;
            entity = zulu[entity];
            mike = mike.bind(tango)(entity);
            entity = mike.isVideo;
            report = entity.bind(mike)(offset);
            zulu = _closure1_slot7;
            mike = _closure1_slot4;
            entity = {};
            options = verify.mediaContainer;
            golf = new Array(2);
            golf[0] = options;
            options = verify.elevationShadow;
            golf[1] = options;
            entity['style'] = golf;
            options = _closure1_slot7;
            if(report) { _fun87460_ip = 150; continue _fun87460 }
 97:
            golf = _closure1_slot5;
            report = {};
            romeo = verify.media;
            yankee = new Array(2);
            yankee[0] = romeo;
            romeo = verify.image;
            yankee[1] = romeo;
            report['style'] = yankee;
            yankee = {};
            yankee['uri'] = offset;
            report['source'] = yankee;
            report = options.bind(tango)(golf, report);
            _fun87460_ip = 215; continue _fun87460;
 150:
            golf = _closure1_slot1;
            yankee = _closure1_slot2;
            oscar = 4;
            oscar = yankee[oscar];
            golf = golf.bind(tango)(oscar);
            oscar = {'volume': 0, 'resizeMode': 'cover', 'repeat': true, 'style': null, 'source': null, 'controls': true, 'paused': true};
            verify = verify.media;
            oscar['style'] = verify;
            verify = {};
            verify['uri'] = offset;
            oscar['source'] = verify;
            report = options.bind(tango)(golf, oscar);
 215:
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot11 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 6;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['padding'] = foxtrot;
    tango['content'] = verify;
    verify = {'justifyContent': 'center', 'textAlign': 'center', 'alignItems': 'center'};
    tango['contentContainer'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['marginBottom'] = foxtrot;
    tango['heading'] = verify;
    verify = {};
    foxtrot = '100%';
    verify['width'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['padding'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xs;
    verify['borderRadius'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['marginTop'] = foxtrot;
    foxtrot = '4 / 3';
    verify['aspectRatio'] = foxtrot;
    tango['mediaContainer'] = verify;
    verify = 7;
    foxtrot = oscar[verify];
    backup = report.bind(entity)(foxtrot);
    foxtrot = backup.generateBoxShadowStyle;
    verify = oscar[verify];
    verify = report.bind(entity)(verify);
    verify = verify.FOUR_DP_ELEVATION_SHADOW_PARAMS;
    verify = foxtrot.bind(backup)(verify);
    tango['elevationShadow'] = verify;
    verify = {};
    foxtrot = 'contain';
    verify['resizeMode'] = foxtrot;
    tango['image'] = verify;
    verify = {};
    verify['flex'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.xs;
    verify['borderRadius'] = romeo;
    tango['media'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.ACTION_SHEET_GRADIENT_BG;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_12;
    verify['paddingVertical'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['paddingHorizontal'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_8;
    verify['gap'] = romeo;
    tango['footer'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_4;
    verify['marginBottom'] = offset;
    tango['firstButton'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot12 = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/explicit_media_redaction/native/false_positive_reporting/ExplicitMediaFalsePositiveActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: handleSuccess
        golf = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 8;
        mike = verify[entity];
        entity = undefined;
        tango = golf.bind(entity)(mike);
        zulu = tango.hideActionSheet;
        mike = argFoo;
        mike = zulu.bind(tango)(mike);
        mike = 9;
        mike = verify[mike];
        tango = golf.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        oscar = 'explicit_media_report_false_positive_success';
        mike['key'] = oscar;
        oscar = 10;
        oscar = verify[oscar];
        oscar = golf.bind(entity)(oscar);
        mike['icon'] = oscar;
        options = _closure1_slot0;
        report = 11;
        report = verify[report];
        report = options.bind(entity)(report);
        report = report.ShieldIcon;
        mike['IconComponent'] = report;
        report = 'text-brand';
        mike['iconColor'] = report;
        report = 12;
        oscar = verify[report];
        oscar = options.bind(entity)(oscar);
        golf = oscar.intl;
        oscar = golf.string;
        report = verify[report];
        report = options.bind(entity)(report);
        report = report.t;
        report = report.gFsTKi;
        report = oscar.bind(golf)(report);
        mike['content'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['handleSuccess'] = tango;
    tango = function() { // Original name: handleError
        golf = _closure1_slot0;
        options = _closure1_slot2;
        entity = 13;
        mike = options[entity];
        entity = undefined;
        tango = golf.bind(entity)(mike);
        zulu = tango.presentError;
        mike = 12;
        report = options[mike];
        report = golf.bind(entity)(report);
        oscar = report.intl;
        report = oscar.string;
        mike = options[mike];
        mike = golf.bind(entity)(mike);
        mike = mike.t;
        mike = mike.R0RpRU;
        mike = report.bind(oscar)(mike);
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['handleError'] = tango;
    mike = function(argFoo) { // Original name: ExplicitMediaFalsePositiveActionSheet
        _fun87463: for(var _fun87463_ip = 0; ; ) switch(_fun87463_ip) {
 0:
            zulu = argFoo;
            options = zulu.channelId;
            var _closure2_slot0 = options;
            golf = zulu.messageId;
            var _closure2_slot1 = golf;
            echo = zulu.isReportFalsePositiveLoading;
            vacuum = zulu.attachmentPreview;
            update = zulu.embedPreview;
            mike = zulu.onConfirmPress;
            var _closure2_slot2 = mike;
            oscar = zulu.analyticsContext;
            var _closure2_slot3 = oscar;
            zulu = _closure1_slot12;
            tango = undefined;
            foxtrot = zulu.bind(tango)();
            report = _closure1_slot3;
            offset = report.useCallback;
            verify = new Array(3);
            verify[0] = options;
            verify[1] = golf;
            verify[2] = oscar;
            zulu = function() {
                options = _closure1_slot0;
                tango = _closure1_slot2;
                golf = 14;
                zulu = tango[golf];
                entity = undefined;
                oscar = options.bind(entity)(zulu);
                report = oscar.trackMediaRedactionAction;
                zulu = {};
                golf = tango[golf];
                golf = options.bind(entity)(golf);
                golf = golf.TrackMediaRedactionActionType;
                golf = golf.EXPLICIT_MEDIA_FALSE_POSITIVE_CLICK_CANCEL;
                zulu['action'] = golf;
                options = _closure2_slot0;
                zulu['channelId'] = options;
                options = _closure2_slot1;
                zulu['messageId'] = options;
                golf = _closure2_slot3;
                zulu['context'] = golf;
                zulu = report.bind(oscar)(zulu);
                zulu = _closure1_slot1;
                mike = 8;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.hideActionSheet;
                mike = mike.bind(zulu)();
                return entity;
            };
            sizing = offset.bind(report)(zulu, verify);
            verify = report.useCallback;
            zulu = new Array(4);
            zulu[0] = options;
            zulu[1] = golf;
            zulu[2] = oscar;
            zulu[3] = mike;
            mike = function() {
                _fun87465: for(var _fun87465_ip = 0; ; ) switch(_fun87465_ip) {
 0:
                    mike = _closure2_slot2;
                    entity = null;
                    if(!(entity != mike)) { _fun87465_ip = 23; continue _fun87465 }
 13:
                    mike = _closure2_slot2;
                    entity = undefined;
                    entity = mike.bind(entity)();
 23:
                    golf = _closure1_slot0;
                    options = _closure1_slot2;
                    oscar = 14;
                    mike = options[oscar];
                    entity = undefined;
                    tango = golf.bind(entity)(mike);
                    zulu = tango.trackMediaRedactionAction;
                    mike = {};
                    oscar = options[oscar];
                    oscar = golf.bind(entity)(oscar);
                    oscar = oscar.TrackMediaRedactionActionType;
                    oscar = oscar.EXPLICIT_MEDIA_FALSE_POSITIVE_CLICK_CONFIRM;
                    mike['action'] = oscar;
                    oscar = _closure2_slot0;
                    mike['channelId'] = oscar;
                    oscar = _closure2_slot1;
                    mike['messageId'] = oscar;
                    report = _closure2_slot3;
                    mike['context'] = report;
                    mike = zulu.bind(tango)(mike);
                    return entity;
                }
            };
            result = verify.bind(report)(mike, zulu);
            zulu = report.useEffect;
            mike = new Array(3);
            mike[0] = options;
            mike[1] = golf;
            mike[2] = oscar;
            entity = function() {
                oscar = _closure1_slot0;
                golf = _closure1_slot2;
                report = 14;
                mike = golf[report];
                entity = undefined;
                tango = oscar.bind(entity)(mike);
                zulu = tango.trackMediaRedactionAction;
                mike = {};
                report = golf[report];
                report = oscar.bind(entity)(report);
                report = report.TrackMediaRedactionActionType;
                report = report.EXPLICIT_MEDIA_FALSE_POSITIVE_VIEWED;
                mike['action'] = report;
                oscar = _closure2_slot0;
                mike['channelId'] = oscar;
                oscar = _closure2_slot1;
                mike['messageId'] = oscar;
                report = _closure2_slot3;
                mike['context'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot7;
            sequence = _closure1_slot0;
            kilo = _closure1_slot2;
            entity = 15;
            entity = kilo[entity];
            entity = sequence.bind(tango)(entity);
            mike = entity.BottomSheet;
            entity = {};
            report = true;
            entity['startExpanded'] = report;
            golf = _closure1_slot8;
            oscar = _closure1_slot4;
            report = {};
            verify = _closure1_slot6;
            options = {};
            offset = foxtrot.content;
            options['style'] = offset;
            offset = foxtrot.contentContainer;
            options['contentContainerStyle'] = offset;
            yankee = 16;
            offset = kilo[yankee];
            offset = sequence.bind(tango)(offset);
            backup = offset.Text;
            offset = {};
            output = foxtrot.heading;
            offset['style'] = output;
            output = 'heading-lg/bold';
            offset['variant'] = output;
            source = 12;
            output = kilo[source];
            output = sequence.bind(tango)(output);
            config = output.intl;
            control = config.string;
            output = kilo[source];
            output = sequence.bind(tango)(output);
            output = output.t;
            output = output.TPpVkJ;
            output = control.bind(config)(output);
            offset['children'] = output;
            backup = zulu.bind(tango)(backup, offset);
            offset = new Array(4);
            offset[0] = backup;
            yankee = kilo[yankee];
            yankee = sequence.bind(tango)(yankee);
            backup = yankee.Text;
            yankee = {};
            output = 'text-sm/normal';
            yankee['variant'] = output;
            output = kilo[source];
            output = sequence.bind(tango)(output);
            control = output.intl;
            output = control.string;
            kilo = kilo[source];
            kilo = sequence.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.gg5Dp6;
            kilo = output.bind(control)(kilo);
            yankee['children'] = kilo;
            yankee = zulu.bind(tango)(backup, yankee);
            offset[1] = yankee;
            yankee = null;
            backup = yankee != vacuum;
            if(!backup) { _fun87463_ip = 477; continue _fun87463 }
 456:
            control = _closure1_slot7;
            output = _closure1_slot10;
            kilo = {};
            kilo['attachment'] = vacuum;
            backup = control.bind(tango)(output, kilo);
 477:
            offset[2] = backup;
            yankee = yankee != update;
            if(!yankee) { _fun87463_ip = 509; continue _fun87463 }
 488:
            output = _closure1_slot7;
            kilo = _closure1_slot9;
            backup = {};
            backup['embed'] = update;
            yankee = output.bind(tango)(kilo, backup);
 509:
            offset[3] = yankee;
            options['children'] = offset;
            verify = golf.bind(tango)(verify, options);
            options = new Array(2);
            options[0] = verify;
            yankee = _closure1_slot8;
            offset = _closure1_slot4;
            verify = {};
            foxtrot = foxtrot.footer;
            verify['style'] = foxtrot;
            kilo = _closure1_slot7;
            update = _closure1_slot0;
            output = _closure1_slot2;
            foxtrot = 17;
            romeo = output[foxtrot];
            romeo = update.bind(tango)(romeo);
            backup = romeo.Button;
            romeo = {'variant': 'primary', 'size': 'md'};
            romeo['disabled'] = echo;
            romeo['loading'] = echo;
            echo = output[source];
            echo = update.bind(tango)(echo);
            vacuum = echo.intl;
            control = vacuum.string;
            echo = output[source];
            echo = update.bind(tango)(echo);
            echo = echo.t;
            echo = echo.cY+Ooa;
            echo = control.bind(vacuum)(echo);
            romeo['text'] = echo;
            romeo['onPress'] = result;
            backup = kilo.bind(tango)(backup, romeo);
            romeo = new Array(2);
            romeo[0] = backup;
            foxtrot = output[foxtrot];
            foxtrot = update.bind(tango)(foxtrot);
            backup = foxtrot.Button;
            foxtrot = {'variant': 'secondary', 'size': 'md'};
            result = output[source];
            result = update.bind(tango)(result);
            echo = result.intl;
            result = echo.string;
            output = output[source];
            output = update.bind(tango)(output);
            output = output.t;
            output = output.ETE/oK;
            output = result.bind(echo)(output);
            foxtrot['text'] = output;
            foxtrot['onPress'] = sizing;
            foxtrot = kilo.bind(tango)(backup, foxtrot);
            romeo[1] = foxtrot;
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[1] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['ExplicitMediaFalsePositiveActionSheet'] = mike;
    return entity;
})();