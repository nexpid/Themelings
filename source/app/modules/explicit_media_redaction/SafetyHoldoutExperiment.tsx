// app/modules/explicit_media_redaction/SafetyHoldoutExperiment.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    oscar = argBar;
    zulu = argFred;
    golf = argPlugh;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    tango = {};
    romeo = true;
    tango['value'] = romeo;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = golf[entity];
    entity = undefined;
    verify = oscar.bind(entity)(tango);
    options = verify.createExperiment;
    tango = {'kind': 'user', 'id': '2024-09_test_child_2_safety_xp_holdout', 'label': 'Holdout experiment'};
    report = {};
    offset = false;
    report['enabled'] = offset;
    tango['defaultConfig'] = report;
    yankee = {'id': 1, 'label': 'Enables the holdout experiment'};
    report = 1;
    offset = {};
    offset['enabled'] = romeo;
    yankee['config'] = offset;
    offset = new Array(1);
    offset[0] = yankee;
    tango['treatments'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot0 = tango;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/explicit_media_redaction/SafetyHoldoutExperiment.tsx';
    report = oscar.bind(golf)(report);
    zulu['SafetyXPHoldoutExperiment'] = tango;
    mike = function() { // Original name: isEligibleForSafetyXPHoldoutExperiment
        tango = _closure1_slot0;
        zulu = tango.getCurrentConfig;
        mike = {};
        entity = '686da2_1';
        mike['location'] = entity;
        entity = {};
        report = true;
        entity['autoTrackExposure'] = report;
        entity = zulu.bind(tango)(mike, entity);
        entity = entity.enabled;
        return entity;
    };
    zulu['isEligibleForSafetyXPHoldoutExperiment'] = mike;
    return entity;
})();