// app/modules/explicit_media_redaction/ExplicitMediaActionCreators.native.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.EXPLICIT_MEDIA_SENDER_FALSE_POSITIVE_ACTION_SHEET_KEY;
    var _closure1_slot4 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/explicit_media_redaction/ExplicitMediaActionCreators.native.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo, argBar) { // Original name: handleSenderFalsePositiveFlow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            option = argFoo;
            golfie = argBar;
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            oscard = 2;
            zuuluu = offset[oscard];
            entity = undefined;
            report = verify.bind(entity)(zuuluu);
            tangon = report.trackMediaRedactionAction;
            zuuluu = {};
            oscard = offset[oscard];
            oscard = verify.bind(entity)(oscard);
            oscard = oscard.TrackMediaRedactionActionType;
            oscard = oscard.EXPLICIT_MEDIA_SENDER_FALSE_POSITIVE_BUTTON_CLICKED;
            zuuluu['action'] = oscard;
            zuuluu['messageId'] = golfie;
            zuuluu['channelId'] = option;
            zuuluu = tangon.bind(report)(zuuluu);
            tangon = _closure1_slot3;
            zuuluu = tangon.canSubmitFpReport;
            tangon = zuuluu.bind(tangon)(golfie);
            report = _closure1_slot1;
            zuuluu = _closure1_slot2;
            if(tangon) { _fun00002_ip = 315; continue _fun00001 }
 106:
            tangon = 3;
            tangon = zuuluu[tangon];
            verify = report.bind(entity)(tangon);
            oscard = verify.show;
            tangon = {};
            foxtra = _closure1_slot0;
            offset = 4;
            yankee = zuuluu[offset];
            yankee = foxtra.bind(entity)(yankee);
            backup = yankee.intl;
            romeon = backup.string;
            yankee = zuuluu[offset];
            yankee = foxtra.bind(entity)(yankee);
            yankee = yankee.t;
            yankee = yankee.iS/eFB;
            yankee = romeon.bind(backup)(yankee);
            tangon['title'] = yankee;
            yankee = zuuluu[offset];
            yankee = foxtra.bind(entity)(yankee);
            backup = yankee.intl;
            romeon = backup.string;
            yankee = zuuluu[offset];
            yankee = foxtra.bind(entity)(yankee);
            yankee = yankee.t;
            yankee = yankee.YrjcgY;
            yankee = romeon.bind(backup)(yankee);
            tangon['body'] = yankee;
            yankee = zuuluu[offset];
            yankee = foxtra.bind(entity)(yankee);
            romeon = yankee.intl;
            yankee = romeon.string;
            offset = zuuluu[offset];
            offset = foxtra.bind(entity)(offset);
            offset = offset.t;
            offset = offset.BddRzc;
            offset = yankee.bind(romeon)(offset);
            tangon['confirmText'] = offset;
            tangon = oscard.bind(verify)(tangon);
            tangon = 5;
            tangon = zuuluu[tangon];
            oscard = report.bind(entity)(tangon);
            tangon = oscard.disableFalsePositiveButton;
            tangon = tangon.bind(oscard)(option, golfie);
            tangon = undefined;
            return tangon;
 315:
            tangon = 6;
            tangon = zuuluu[tangon];
            oscard = report.bind(entity)(tangon);
            report = oscard.openLazy;
            verify = _closure1_slot0;
            tangon = 8;
            tangon = zuuluu[tangon];
            verify = verify.bind(entity)(tangon);
            tangon = 7;
            tangon = zuuluu[tangon];
            zuuluu = zuuluu.paths;
            tangon = verify.bind(entity)(tangon, zuuluu);
            zuuluu = _closure1_slot4;
            michal = {};
            michal['channelId'] = option;
            michal['messageId'] = golfie;
            michal = report.bind(oscard)(tangon, zuuluu, michal);
            return entity;
        }
    };
    zuuluu['handleSenderFalsePositiveFlow'] = michal;
    return entity;
})();