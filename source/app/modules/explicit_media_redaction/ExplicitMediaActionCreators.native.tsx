// app/modules/explicit_media_redaction/ExplicitMediaActionCreators.native.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var7 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var7;
    var _closure1_slot2 = var6;
    var1 = global;
    var9 = var1.Object;
    var8 = var9.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var8.bind(var9)(var3, var1, var4);
    var1 = 0;
    var4 = var6[var1];
    var1 = undefined;
    var4 = var7.bind(var1)(var4);
    var _closure1_slot3 = var4;
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.EXPLICIT_MEDIA_SENDER_FALSE_POSITIVE_ACTION_SHEET_KEY;
    var _closure1_slot4 = var4;
    var4 = 9;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/explicit_media_redaction/ExplicitMediaActionCreators.native.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function handleSenderFalsePositiveFlow(arg1, arg2) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
            var8 = arg1;
            var7 = arg2;
            var9 = _closure1_slot0;
            var10 = _closure1_slot2;
            var6 = 2;
            var3 = var10[var6];
            var1 = undefined;
            var5 = var9.bind(var1)(var3);
            var4 = var5.trackMediaRedactionAction;
            var3 = {};
            var6 = var10[var6];
            var6 = var9.bind(var1)(var6);
            var6 = var6.TrackMediaRedactionActionType;
            var6 = var6.EXPLICIT_MEDIA_SENDER_FALSE_POSITIVE_BUTTON_CLICKED;
            var3['action'] = var6;
            var3['messageId'] = var7;
            var3['channelId'] = var8;
            var3 = var4.bind(var5)(var3);
            var4 = _closure1_slot3;
            var3 = var4.canSubmitFpReport;
            var4 = var3.bind(var4)(var7);
            var5 = _closure1_slot1;
            var3 = _closure1_slot2;
            if(var4) { _fun0001_ip = 2; continue _fun0001 }
case 3:
            var4 = 3;
            var4 = var3[var4];
            var9 = var5.bind(var1)(var4);
            var6 = var9.show;
            var4 = {};
            var13 = _closure1_slot0;
            var10 = 4;
            var11 = var3[var10];
            var11 = var13.bind(var1)(var11);
            var14 = var11.intl;
            var12 = var14.string;
            var11 = var3[var10];
            var11 = var13.bind(var1)(var11);
            var11 = var11.t;
            var11 = var11.iS/eFB;
            var11 = var12.bind(var14)(var11);
            var4['title'] = var11;
            var11 = var3[var10];
            var11 = var13.bind(var1)(var11);
            var14 = var11.intl;
            var12 = var14.string;
            var11 = var3[var10];
            var11 = var13.bind(var1)(var11);
            var11 = var11.t;
            var11 = var11.YrjcgY;
            var11 = var12.bind(var14)(var11);
            var4['body'] = var11;
            var11 = var3[var10];
            var11 = var13.bind(var1)(var11);
            var12 = var11.intl;
            var11 = var12.string;
            var10 = var3[var10];
            var10 = var13.bind(var1)(var10);
            var10 = var10.t;
            var10 = var10.BddRzc;
            var10 = var11.bind(var12)(var10);
            var4['confirmText'] = var10;
            var4 = var6.bind(var9)(var4);
            var4 = 5;
            var4 = var3[var4];
            var6 = var5.bind(var1)(var4);
            var4 = var6.disableFalsePositiveButton;
            var4 = var4.bind(var6)(var8, var7);
            var4 = undefined;
            return var4;
case 2:
            var4 = 6;
            var4 = var3[var4];
            var6 = var5.bind(var1)(var4);
            var5 = var6.openLazy;
            var9 = _closure1_slot0;
            var4 = 8;
            var4 = var3[var4];
            var9 = var9.bind(var1)(var4);
            var4 = 7;
            var4 = var3[var4];
            var3 = var3.paths;
            var4 = var9.bind(var1)(var4, var3);
            var3 = _closure1_slot4;
            var2 = {};
            var2['channelId'] = var8;
            var2['messageId'] = var7;
            var2 = var5.bind(var6)(var4, var3, var2);
            return var1;
        }
    };
    var3['handleSenderFalsePositiveFlow'] = var2;
    return var1;
})();