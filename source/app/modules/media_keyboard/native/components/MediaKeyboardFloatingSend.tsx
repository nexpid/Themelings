// app/modules/media_keyboard/native/components/MediaKeyboardFloatingSend.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    yankee = tangon.StyleSheet;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot5 = option;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    kiloes = yankee.absoluteFillObject;
    sizing = offset;
    foxtra = copyDataProperties(sizing, kiloes);
    foxtra = 'top';
    offset[foxtra] = entity;
    tangon['sendContainer'] = offset;
    offset = {};
    kiloes = yankee.absoluteFillObject;
    sizing = offset;
    yankee = copyDataProperties(sizing, kiloes);
    yankee = 5;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    romeon = yankee.BACKGROUND_SECONDARY;
    yankee = 'color';
    offset[yankee] = romeon;
    tangon['gradient'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot7 = tangon;
    tangon = {};
    option = 'function MediaKeyboardFloatingSendTsx1(){const{animatedSheetIndex,INDEX_HEADER_CHANGE_THRESHOLD,isLandscape,hasUploads}=this.__closure;const isSheetOpenOrLandscape=animatedSheetIndex.get()>INDEX_HEADER_CHANGE_THRESHOLD||isLandscape;return isSheetOpenOrLandscape&&hasUploads;}';
    tangon['code'] = option;
    var _closure1_slot8 = tangon;
    tangon = {};
    option = 'function MediaKeyboardFloatingSendTsx2(visible){const{isSendVisibleSharedValue}=this.__closure;isSendVisibleSharedValue.set(visible);}';
    tangon['code'] = option;
    var _closure1_slot9 = tangon;
    tangon = {};
    option = 'function MediaKeyboardFloatingSendTsx3(){const{insetFab,tokens,withSpring,sendVisibleSharedValue}=this.__closure;return{height:insetFab+tokens.spacing.PX_64+tokens.spacing.PX_32,opacity:withSpring(sendVisibleSharedValue.get()?1:0)};}';
    tangon['code'] = option;
    var _closure1_slot10 = tangon;
    tangon = {};
    option = "function MediaKeyboardFloatingSendTsx4(){const{sendVisibleSharedValue}=this.__closure;return{pointerEvents:sendVisibleSharedValue.get()?'box-none':'none'};}";
    tangon['code'] = option;
    var _closure1_slot11 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: MediaKeyboardFloatingSend
        entity = argFoo;
        golfie = entity.channelId;
        zuuluu = entity.draftType;
        offset = entity.onSend;
        entity = _closure1_slot7;
        tangon = undefined;
        yankee = entity.bind(tangon)();
        var _closure2_slot0 = yankee;
        oscard = _closure1_slot1;
        foxtra = _closure1_slot2;
        entity = 10;
        entity = foxtra[entity];
        entity = oscard.bind(tangon)(entity);
        entity = entity.bind(tangon)();
        option = entity.bottom;
        kiloes = 5;
        entity = foxtra[kiloes];
        entity = oscard.bind(tangon)(entity);
        entity = entity.spacing;
        entity = entity.PX_16;
        verify = option + entity;
        var _closure2_slot1 = verify;
        entity = function(argFoo, argBar) { // Original name: useSendVisibleSharedValue
            romeon = argFoo;
            entity = argBar;
            var _closure3_slot0 = romeon;
            var _closure3_slot1 = entity;
            verify = _closure1_slot3;
            option = verify.useContext;
            report = _closure1_slot0;
            golfie = _closure1_slot2;
            zuuluu = 6;
            zuuluu = golfie[zuuluu];
            tangon = undefined;
            zuuluu = report.bind(tangon)(zuuluu);
            zuuluu = zuuluu.PortalKeyboardContext;
            zuuluu = option.bind(verify)(zuuluu);
            offset = zuuluu.animatedSheetIndex;
            var _closure3_slot2 = offset;
            zuuluu = 7;
            zuuluu = golfie[zuuluu];
            yankee = report.bind(tangon)(zuuluu);
            verify = yankee.useStateFromStores;
            zuuluu = _closure1_slot4;
            option = new Array(1);
            option[0] = zuuluu;
            zuuluu = new Array(2);
            zuuluu[0] = romeon;
            zuuluu[1] = entity;
            entity = function() {
                tangon = _closure1_slot4;
                zuuluu = tangon.getUploadCount;
                michal = _closure3_slot0;
                entity = _closure3_slot1;
                michal = zuuluu.bind(tangon)(michal, entity);
                entity = 0;
                entity = michal > entity;
                return entity;
            };
            option = verify.bind(yankee)(option, entity, zuuluu);
            var _closure3_slot3 = option;
            zuuluu = 8;
            entity = golfie[zuuluu];
            yankee = report.bind(tangon)(entity);
            verify = yankee.useSharedValue;
            entity = false;
            entity = verify.bind(yankee)(entity);
            var _closure3_slot4 = entity;
            verify = 9;
            yankee = golfie[verify];
            romeon = report.bind(tangon)(yankee);
            yankee = romeon.useOrientation;
            yankee = yankee.bind(romeon)();
            verify = golfie[verify];
            verify = report.bind(tangon)(verify);
            verify = verify.OrientationType;
            verify = verify.LANDSCAPE;
            verify = yankee === verify;
            var _closure3_slot5 = verify;
            zuuluu = golfie[zuuluu];
            report = report.bind(tangon)(zuuluu);
            tangon = report.useAnimatedReaction;
            zuuluu = function() { // Original name: c
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    zuuluu = _closure3_slot2;
                    entity = zuuluu.get;
                    zuuluu = entity.bind(zuuluu)();
                    entity = 0.7;
                    entity = zuuluu > entity;
                    if(entity) { _fun00002_ip = 37; continue _fun00001 }
 33:
                    entity = _closure3_slot5;
 37:
                    if(!entity) { _fun00002_ip = 44; continue _fun00001 }
 40:
                    entity = _closure3_slot3;
 44:
                    return entity;
                }
            };
            golfie = {};
            golfie['animatedSheetIndex'] = offset;
            offset = 0.7;
            golfie['INDEX_HEADER_CHANGE_THRESHOLD'] = offset;
            golfie['isLandscape'] = verify;
            golfie['hasUploads'] = option;
            zuuluu['__closure'] = golfie;
            golfie = 16820822469932.0;
            zuuluu['__workletHash'] = golfie;
            golfie = _closure1_slot8;
            zuuluu['__initData'] = golfie;
            michal = function(argFoo) { // Original name: l
                zuuluu = _closure3_slot4;
                michal = zuuluu.set;
                entity = argFoo;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            golfie = {};
            golfie['isSendVisibleSharedValue'] = entity;
            michal['__closure'] = golfie;
            golfie = 10753585819648.0;
            michal['__workletHash'] = golfie;
            oscard = _closure1_slot9;
            michal['__initData'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        sizing = entity.bind(tangon)(golfie, zuuluu);
        var _closure2_slot2 = sizing;
        romeon = _closure1_slot0;
        entity = 8;
        zuuluu = foxtra[entity];
        option = romeon.bind(tangon)(zuuluu);
        golfie = option.useAnimatedStyle;
        zuuluu = function() { // Original name: x
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = {};
                verify = _closure2_slot1;
                option = _closure1_slot1;
                oscard = _closure1_slot2;
                tangon = 5;
                golfie = oscard[tangon];
                report = undefined;
                golfie = option.bind(report)(golfie);
                golfie = golfie.spacing;
                golfie = golfie.PX_64;
                golfie = verify + golfie;
                tangon = oscard[tangon];
                tangon = option.bind(report)(tangon);
                tangon = tangon.spacing;
                tangon = tangon.PX_32;
                tangon = golfie + tangon;
                entity['height'] = tangon;
                tangon = _closure1_slot0;
                zuuluu = 11;
                zuuluu = oscard[zuuluu];
                tangon = tangon.bind(report)(zuuluu);
                zuuluu = tangon.withSpring;
                report = _closure2_slot2;
                michal = report.get;
                report = michal.bind(report)();
                michal = 0;
                if(!report) { _fun00004_ip = 119; continue _fun00003 }
 116:
                michal = 1;
 119:
                michal = zuuluu.bind(tangon)(michal);
                entity['opacity'] = michal;
                return entity;
            }
        };
        backup = {};
        backup['insetFab'] = verify;
        kiloes = foxtra[kiloes];
        kiloes = oscard.bind(tangon)(kiloes);
        backup['tokens'] = kiloes;
        kiloes = 11;
        kiloes = foxtra[kiloes];
        kiloes = romeon.bind(tangon)(kiloes);
        kiloes = kiloes.withSpring;
        backup['withSpring'] = kiloes;
        backup['sendVisibleSharedValue'] = sizing;
        zuuluu['__closure'] = backup;
        backup = 6460157053585.0;
        zuuluu['__workletHash'] = backup;
        backup = _closure1_slot10;
        zuuluu['__initData'] = backup;
        kiloes = golfie.bind(option)(zuuluu);
        zuuluu = foxtra[entity];
        option = romeon.bind(tangon)(zuuluu);
        golfie = option.useAnimatedProps;
        zuuluu = function() { // Original name: V
            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                entity = {};
                zuuluu = _closure2_slot2;
                michal = zuuluu.get;
                zuuluu = michal.bind(zuuluu)();
                michal = 'none';
                if(!zuuluu) { _fun00006_ip = 31; continue _fun00005 }
 25:
                michal = 'box-none';
 31:
                entity['pointerEvents'] = michal;
                return entity;
            }
        };
        backup = {};
        backup['sendVisibleSharedValue'] = sizing;
        zuuluu['__closure'] = backup;
        backup = 1097586248797.0;
        zuuluu['__workletHash'] = backup;
        backup = _closure1_slot11;
        zuuluu['__initData'] = backup;
        option = golfie.bind(option)(zuuluu);
        backup = _closure1_slot3;
        golfie = backup.useMemo;
        zuuluu = yankee.gradient;
        sizing = zuuluu.color;
        zuuluu = new Array(1);
        zuuluu[0] = sizing;
        michal = function() {
            entity = {};
            verify = 0;
            michal = {'x': 0, 'y': 0};
            entity['start'] = michal;
            michal = {'x': 0, 'y': 1};
            entity['end'] = michal;
            oscard = _closure1_slot1;
            golfie = _closure1_slot2;
            tangon = 12;
            michal = golfie[tangon];
            report = undefined;
            option = oscard.bind(report)(michal);
            zuuluu = _closure2_slot0;
            michal = zuuluu.gradient;
            michal = michal.color;
            option = option.bind(report)(michal);
            michal = option.alpha;
            option = michal.bind(option)(verify);
            michal = option.hex;
            option = michal.bind(option)();
            michal = new Array(2);
            michal[0] = option;
            tangon = golfie[tangon];
            tangon = oscard.bind(report)(tangon);
            zuuluu = zuuluu.gradient;
            zuuluu = zuuluu.color;
            tangon = tangon.bind(report)(zuuluu);
            zuuluu = tangon.hex;
            zuuluu = zuuluu.bind(tangon)();
            michal[1] = zuuluu;
            entity['colors'] = michal;
            return entity;
        };
        result = golfie.bind(backup)(michal, zuuluu);
        zuuluu = _closure1_slot6;
        entity = foxtra[entity];
        entity = oscard.bind(tangon)(entity);
        michal = entity.View;
        entity = {};
        backup = new Array(2);
        backup[0] = kiloes;
        kiloes = yankee.sendContainer;
        backup[1] = kiloes;
        entity['style'] = backup;
        entity['animatedProps'] = option;
        option = _closure1_slot5;
        report = 13;
        report = foxtra[report];
        oscard = oscard.bind(tangon)(report);
        report = {};
        yankee = yankee.gradient;
        report['style'] = yankee;
        echoed = report;
        golfie = copyDataProperties(echoed, result);
        yankee = 'none';
        golfie = 'pointerEvents';
        report[golfie] = yankee;
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = 14;
        oscard = foxtra[oscard];
        oscard = romeon.bind(tangon)(oscard);
        golfie = oscard.FloatingActionButton;
        oscard = {};
        yankee = 15;
        backup = foxtra[yankee];
        backup = romeon.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        yankee = foxtra[yankee];
        yankee = romeon.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.TXNS7e;
        yankee = backup.bind(kiloes)(yankee);
        oscard['accessibilityLabel'] = yankee;
        yankee = 16;
        yankee = foxtra[yankee];
        yankee = romeon.bind(tangon)(yankee);
        romeon = yankee.SendMessageIcon;
        yankee = {};
        yankee = option.bind(tangon)(romeon, yankee);
        oscard['icon'] = yankee;
        oscard['onPress'] = offset;
        oscard['positionBottom'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/media_keyboard/native/components/MediaKeyboardFloatingSend.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();