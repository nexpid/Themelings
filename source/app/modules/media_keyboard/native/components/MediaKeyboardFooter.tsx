// app/modules/media_keyboard/native/components/MediaKeyboardFooter.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golf;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    entity = 0;
    report = golf[entity];
    mike = argCorge;
    entity = undefined;
    options = mike.bind(entity)(report);
    mike = 1;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    report = mike.View;
    var _closure1_slot3 = report;
    mike = mike.Image;
    var _closure1_slot4 = mike;
    mike = 2;
    report = golf[mike];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot5 = report;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot6 = mike;
    mike = 3;
    mike = golf[mike];
    offset = oscar.bind(entity)(mike);
    verify = offset.createStyles;
    report = {};
    mike = 280;
    yankee = {'height': 280, 'alignItems': 'center', 'paddingHorizontal': 16, 'paddingVertical': 16};
    report['container'] = yankee;
    yankee = {'marginBottom': 16, 'textAlign': 'center'};
    report['label'] = yankee;
    yankee = {'marginBottom': 32, 'height': 48};
    report['buttonWrapper'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot7 = report;
    report = options.memo;
    tango = function(argFoo) {
        entity = argFoo;
        romeo = entity.disabled;
        backup = entity.onViewAll;
        entity = _closure1_slot7;
        tango = undefined;
        golf = entity.bind(tango)();
        zulu = _closure1_slot6;
        mike = _closure1_slot3;
        entity = {};
        report = golf.container;
        entity['style'] = report;
        options = _closure1_slot5;
        sizing = _closure1_slot0;
        yankee = _closure1_slot2;
        report = 4;
        report = yankee[report];
        report = sizing.bind(tango)(report);
        oscar = report.Text;
        report = {};
        offset = 'text-sm/normal';
        report['variant'] = offset;
        offset = golf.label;
        report['style'] = offset;
        foxtrot = 5;
        offset = yankee[foxtrot];
        offset = sizing.bind(tango)(offset);
        output = offset.intl;
        kilo = output.string;
        offset = yankee[foxtrot];
        offset = sizing.bind(tango)(offset);
        offset = offset.t;
        offset = offset.mKSwAQ;
        offset = kilo.bind(output)(offset);
        report['children'] = offset;
        oscar = options.bind(tango)(oscar, report);
        report = new Array(3);
        report[0] = oscar;
        oscar = {};
        golf = golf.buttonWrapper;
        oscar['style'] = golf;
        golf = 6;
        golf = yankee[golf];
        golf = sizing.bind(tango)(golf);
        offset = golf.Button;
        golf = {'variant': 'primary', 'size': 'sm'};
        golf['onPress'] = backup;
        backup = yankee[foxtrot];
        backup = sizing.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = yankee[foxtrot];
        foxtrot = sizing.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.ZT24Ii;
        foxtrot = backup.bind(kilo)(foxtrot);
        golf['text'] = foxtrot;
        golf['disabled'] = romeo;
        golf = options.bind(tango)(offset, golf);
        oscar['children'] = golf;
        oscar = options.bind(tango)(mike, oscar);
        report[1] = oscar;
        golf = _closure1_slot4;
        oscar = {};
        offset = _closure1_slot1;
        verify = 7;
        verify = yankee[verify];
        verify = offset.bind(tango)(verify);
        oscar['source'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    tango = report.bind(options)(tango);
    report = 8;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/media_keyboard/native/components/MediaKeyboardFooter.tsx';
    report = oscar.bind(golf)(report);
    zulu['default'] = tango;
    zulu['FOOTER_HEIGHT'] = mike;
    return entity;
})();