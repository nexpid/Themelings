// app/modules/media_keyboard/native/components/MediaKeyboardFooter.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    report = golfie[entity];
    michal = argCor;
    entity = undefined;
    option = michal.bind(entity)(report);
    michal = 1;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.View;
    var _closure1_slot3 = report;
    michal = michal.Image;
    var _closure1_slot4 = michal;
    michal = 2;
    report = golfie[michal];
    report = oscard.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot5 = report;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.jsxs;
    var _closure1_slot6 = michal;
    michal = 3;
    michal = golfie[michal];
    offset = oscard.bind(entity)(michal);
    verify = offset.createStyles;
    report = {};
    michal = 280;
    yankee = {'height': 280, 'alignItems': 'center', 'paddingHorizontal': 16, 'paddingVertical': 16};
    report['container'] = yankee;
    yankee = {'marginBottom': 16, 'textAlign': 'center'};
    report['label'] = yankee;
    yankee = {'marginBottom': 32, 'height': 48};
    report['buttonWrapper'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot7 = report;
    report = option.memo;
    tangon = function(argFoo) {
        entity = argFoo;
        romeon = entity.disabled;
        backup = entity.onViewAll;
        entity = _closure1_slot7;
        tangon = undefined;
        golfie = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        michal = _closure1_slot3;
        entity = {};
        report = golfie.container;
        entity['style'] = report;
        option = _closure1_slot5;
        sizing = _closure1_slot0;
        yankee = _closure1_slot2;
        report = 4;
        report = yankee[report];
        report = sizing.bind(tangon)(report);
        oscard = report.Text;
        report = {};
        offset = 'text-sm/normal';
        report['variant'] = offset;
        offset = golfie.label;
        report['style'] = offset;
        foxtra = 5;
        offset = yankee[foxtra];
        offset = sizing.bind(tangon)(offset);
        output = offset.intl;
        kiloes = output.string;
        offset = yankee[foxtra];
        offset = sizing.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.mKSwAQ;
        offset = kiloes.bind(output)(offset);
        report['children'] = offset;
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(3);
        report[0] = oscard;
        oscard = {};
        golfie = golfie.buttonWrapper;
        oscard['style'] = golfie;
        golfie = 6;
        golfie = yankee[golfie];
        golfie = sizing.bind(tangon)(golfie);
        offset = golfie.Button;
        golfie = {'variant': 'primary', 'size': 'sm'};
        golfie['onPress'] = backup;
        backup = yankee[foxtra];
        backup = sizing.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = yankee[foxtra];
        foxtra = sizing.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.ZT24Ii;
        foxtra = backup.bind(kiloes)(foxtra);
        golfie['text'] = foxtra;
        golfie['disabled'] = romeon;
        golfie = option.bind(tangon)(offset, golfie);
        oscard['children'] = golfie;
        oscard = option.bind(tangon)(michal, oscard);
        report[1] = oscard;
        golfie = _closure1_slot4;
        oscard = {};
        offset = _closure1_slot1;
        verify = 7;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        oscard['source'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    tangon = report.bind(option)(tangon);
    report = 8;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/media_keyboard/native/components/MediaKeyboardFooter.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    zuuluu['FOOTER_HEIGHT'] = michal;
    return entity;
})();