// app/modules/applications/native/AppInteractionInfoActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flexDirection': 'row', 'paddingVertical': 12, 'paddingHorizontal': 16, 'alignItems': 'center'};
    tango['itemContainer'] = verify;
    verify = {'flexDirection': 'column', 'alignItems': 'flex-start', 'paddingLeft': 12};
    tango['itemLabel'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 19;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/applications/native/AppInteractionInfoActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: AppInteractionInfoActionSheet
        _fun91113: for(var _fun91113_ip = 0; ; ) switch(_fun91113_ip) {
 0:
            entity = argFoo;
            sequence = entity.message;
            var _closure2_slot0 = sequence;
            sizing = entity.guildId;
            entity = entity.onBack;
            var _closure2_slot1 = entity;
            tango = undefined;
            var _closure2_slot2 = tango;
            var _closure2_slot3 = tango;
            var _closure2_slot4 = tango;
            var _closure2_slot5 = tango;
            var _closure2_slot6 = tango;
            mike = _closure1_slot10;
            kilo = mike.bind(tango)();
            zulu = _closure1_slot1;
            report = _closure1_slot2;
            mike = 7;
            mike = report[mike];
            mike = zulu.bind(tango)(mike);
            mike = mike.bind(tango)();
            options = mike.bottom;
            report = _closure1_slot3;
            zulu = report.useMemo;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                tango = _closure1_slot8;
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 8;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                report = _closure2_slot1;
                entity['onBack'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            report = zulu.bind(report)(entity, mike);
            entity = sequence.interactionMetadata;
            oscar = null;
            zulu = oscar == entity;
            mike = undefined;
            if(zulu) { _fun91113_ip = 180; continue _fun91113 }
 138:
            zulu = entity.authorizing_integration_owners;
            golf = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 9;
            entity = verify[entity];
            entity = golf.bind(tango)(entity);
            entity = entity.ApplicationIntegrationType;
            entity = entity.USER_INSTALL;
            mike = zulu[entity];
 180:
            _closure2_slot2 = mike;
            zulu = sequence.interactionMetadata;
            golf = oscar == zulu;
            entity = undefined;
            if(golf) { _fun91113_ip = 241; continue _fun91113 }
 199:
            golf = zulu.authorizing_integration_owners;
            verify = _closure1_slot0;
            yankee = _closure1_slot2;
            zulu = 9;
            zulu = yankee[zulu];
            zulu = verify.bind(tango)(zulu);
            zulu = zulu.ApplicationIntegrationType;
            zulu = zulu.GUILD_INSTALL;
            entity = golf[zulu];
 241:
            _closure2_slot3 = entity;
            zulu = sequence.interactionMetadata;
            golf = oscar == zulu;
            entity = undefined;
            if(golf) { _fun91113_ip = 270; continue _fun91113 }
 260:
            zulu = zulu.user;
            entity = zulu.id;
 270:
            _closure2_slot4 = entity;
            golf = _closure1_slot0;
            verify = _closure1_slot2;
            zulu = 10;
            entity = verify[zulu];
            output = golf.bind(tango)(entity);
            backup = output.useStateFromStores;
            entity = _closure1_slot7;
            romeo = new Array(1);
            romeo[0] = entity;
            yankee = function() {
                zulu = _closure1_slot7;
                mike = zulu.getUser;
                entity = _closure2_slot2;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            vacuum = backup.bind(output)(romeo, yankee);
            _closure2_slot5 = vacuum;
            yankee = verify[zulu];
            output = golf.bind(tango)(yankee);
            backup = output.useStateFromStores;
            yankee = _closure1_slot6;
            romeo = new Array(1);
            romeo[0] = yankee;
            yankee = function() {
                zulu = _closure1_slot6;
                mike = zulu.getGuild;
                entity = _closure2_slot3;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            update = backup.bind(output)(romeo, yankee);
            zulu = verify[zulu];
            verify = golf.bind(tango)(zulu);
            golf = verify.useStateFromStores;
            zulu = new Array(1);
            zulu[0] = entity;
            entity = function() {
                zulu = _closure1_slot7;
                mike = zulu.getUser;
                entity = _closure2_slot4;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            entity = golf.bind(verify)(zulu, entity);
            _closure2_slot6 = entity;
            verify = _closure1_slot3;
            golf = verify.useEffect;
            zulu = new Array(2);
            zulu[0] = vacuum;
            zulu[1] = mike;
            mike = function() {
                _fun91118: for(var _fun91118_ip = 0; ; ) switch(_fun91118_ip) {
 0:
                    mike = _closure2_slot5;
                    tango = null;
                    mike = tango == mike;
                    if(!mike) { _fun91118_ip = 24; continue _fun91118 }
 16:
                    zulu = _closure2_slot2;
                    mike = tango != zulu;
 24:
                    if(!mike) { _fun91118_ip = 67; continue _fun91118 }
 27:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    mike = 11;
                    zulu = zulu[mike];
                    mike = undefined;
                    zulu = tango.bind(mike)(zulu);
                    mike = zulu.getUser;
                    entity = _closure2_slot2;
                    entity = mike.bind(zulu)(entity);
 67:
                    entity = undefined;
                    return entity;
                }
            };
            mike = golf.bind(verify)(mike, zulu);
            result = entity;
            if(!(oscar == result)) { _fun91113_ip = 501; continue _fun91113 }
 447:
            zulu = _closure1_slot5;
            mike = sequence.interactionMetadata;
            golf = oscar == mike;
            entity = undefined;
            if(golf) { _fun91113_ip = 471; continue _fun91113 }
 466:
            entity = mike.user;
 471:
            mike = zulu.prototype;
            mike = Object.create(mike, {constructor: {value: zulu}});
            sierra = mike;
            status = entity;
            entity = new sierra[zulu](status, target);
            entity = entity instanceof Object ? entity : mike;
            _closure2_slot6 = entity;
            result = entity;
 501:
            if(!(oscar == update)) { _fun91113_ip = 856; continue _fun91113 }
 508:
            entity = oscar != vacuum;
            golf = null;
            if(!entity) { _fun91113_ip = 1142; continue _fun91113 }
 520:
            zulu = _closure1_slot8;
            config = _closure1_slot0;
            papa = _closure1_slot2;
            entity = 15;
            entity = papa[entity];
            entity = config.bind(tango)(entity);
            mike = entity.PressableOpacity;
            entity = {};
            verify = function() { // Original name: onPress
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 16;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                report = _closure2_slot5;
                report = report.id;
                entity['userId'] = report;
                tango = _closure2_slot0;
                tango = tango.channel_id;
                entity['channelId'] = tango;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            entity['onPress'] = verify;
            romeo = _closure1_slot9;
            yankee = _closure1_slot4;
            verify = {};
            backup = kilo.itemContainer;
            verify['style'] = backup;
            output = _closure1_slot1;
            echo = 17;
            backup = papa[echo];
            output = output.bind(tango)(backup);
            backup = {};
            backup['user'] = vacuum;
            echo = papa[echo];
            echo = config.bind(tango)(echo);
            echo = echo.AvatarSizes;
            echo = echo.REFRESH_MEDIUM_32;
            backup['size'] = echo;
            backup['guildId'] = sizing;
            output = zulu.bind(tango)(output, backup);
            backup = new Array(2);
            backup[0] = output;
            output = {};
            echo = kilo.itemLabel;
            output['style'] = echo;
            source = 13;
            echo = papa[source];
            echo = config.bind(tango)(echo);
            control = echo.Text;
            echo = {'variant': 'text-md/semibold', 'color': 'header-primary'};
            vacuum = vacuum.username;
            echo['children'] = vacuum;
            control = zulu.bind(tango)(control, echo);
            echo = new Array(2);
            echo[0] = control;
            source = papa[source];
            source = config.bind(tango)(source);
            control = source.Text;
            source = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
            vacuum = 14;
            record = papa[vacuum];
            record = config.bind(tango)(record);
            context = record.intl;
            record = context.format;
            vacuum = papa[vacuum];
            vacuum = config.bind(tango)(vacuum);
            vacuum = vacuum.t;
            config = vacuum.ShLXXF;
            vacuum = {};
            papa = sequence.author;
            papa = papa.username;
            vacuum['application'] = papa;
            vacuum = record.bind(context)(config, vacuum);
            source['children'] = vacuum;
            source = zulu.bind(tango)(control, source);
            echo[1] = source;
            output['children'] = echo;
            output = romeo.bind(tango)(yankee, output);
            backup[1] = output;
            verify['children'] = backup;
            verify = romeo.bind(tango)(yankee, verify);
            entity['children'] = verify;
            golf = zulu.bind(tango)(mike, entity);
            _fun91113_ip = 1142; continue _fun91113;
 856:
            zulu = _closure1_slot9;
            mike = _closure1_slot4;
            entity = {};
            verify = kilo.itemContainer;
            entity['style'] = verify;
            echo = _closure1_slot8;
            yankee = _closure1_slot1;
            config = _closure1_slot2;
            romeo = 12;
            verify = config[romeo];
            yankee = yankee.bind(tango)(verify);
            verify = {};
            verify['guild'] = update;
            source = _closure1_slot0;
            romeo = config[romeo];
            romeo = source.bind(tango)(romeo);
            romeo = romeo.GuildIconSizes;
            romeo = romeo.SMALL_32;
            verify['size'] = romeo;
            yankee = echo.bind(tango)(yankee, verify);
            verify = new Array(2);
            verify[0] = yankee;
            yankee = {};
            romeo = kilo.itemLabel;
            yankee['style'] = romeo;
            backup = 13;
            romeo = config[backup];
            romeo = source.bind(tango)(romeo);
            output = romeo.Text;
            romeo = {'variant': 'text-md/semibold', 'color': 'header-primary'};
            update = update.name;
            romeo['children'] = update;
            output = echo.bind(tango)(output, romeo);
            romeo = new Array(2);
            romeo[0] = output;
            backup = config[backup];
            backup = source.bind(tango)(backup);
            output = backup.Text;
            backup = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
            update = 14;
            control = config[update];
            control = source.bind(tango)(control);
            vacuum = control.intl;
            control = vacuum.format;
            update = config[update];
            update = source.bind(tango)(update);
            update = update.t;
            source = update.ShLXXF;
            update = {};
            sequence = sequence.author;
            sequence = sequence.username;
            update['application'] = sequence;
            update = control.bind(vacuum)(source, update);
            backup['children'] = update;
            backup = echo.bind(tango)(output, backup);
            romeo[1] = backup;
            yankee['children'] = romeo;
            yankee = zulu.bind(tango)(mike, yankee);
            verify[1] = yankee;
            entity['children'] = verify;
            golf = zulu.bind(tango)(mike, entity);
 1142:
            zulu = _closure1_slot9;
            mike = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 18;
            entity = verify[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.BottomSheet;
            entity = {};
            entity['header'] = report;
            report = {};
            report['paddingBottom'] = options;
            entity['bodyStyles'] = report;
            report = new Array(2);
            report[0] = golf;
            golf = oscar != result;
            oscar = null;
            if(!golf) { _fun91113_ip = 1523; continue _fun91113 }
 1210:
            verify = _closure1_slot8;
            source = _closure1_slot0;
            control = _closure1_slot2;
            golf = 15;
            golf = control[golf];
            golf = source.bind(tango)(golf);
            options = golf.PressableOpacity;
            golf = {};
            offset = function() { // Original name: onPress
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 16;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                report = _closure2_slot6;
                report = report.id;
                entity['userId'] = report;
                tango = _closure2_slot0;
                tango = tango.channel_id;
                entity['channelId'] = tango;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            golf['onPress'] = offset;
            romeo = _closure1_slot9;
            yankee = _closure1_slot4;
            offset = {};
            backup = kilo.itemContainer;
            offset['style'] = backup;
            backup = _closure1_slot1;
            output = 17;
            foxtrot = control[output];
            backup = backup.bind(tango)(foxtrot);
            foxtrot = {};
            foxtrot['user'] = result;
            output = control[output];
            output = source.bind(tango)(output);
            output = output.AvatarSizes;
            output = output.REFRESH_MEDIUM_32;
            foxtrot['size'] = output;
            foxtrot['guildId'] = sizing;
            backup = verify.bind(tango)(backup, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = backup;
            backup = {};
            kilo = kilo.itemLabel;
            backup['style'] = kilo;
            sizing = 13;
            kilo = control[sizing];
            kilo = source.bind(tango)(kilo);
            output = kilo.Text;
            kilo = {'variant': 'text-md/semibold', 'color': 'header-primary'};
            result = result.username;
            kilo['children'] = result;
            output = verify.bind(tango)(output, kilo);
            kilo = new Array(2);
            kilo[0] = output;
            sizing = control[sizing];
            sizing = source.bind(tango)(sizing);
            output = sizing.Text;
            sizing = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
            result = 14;
            echo = control[result];
            echo = source.bind(tango)(echo);
            update = echo.intl;
            echo = update.string;
            result = control[result];
            result = source.bind(tango)(result);
            result = result.t;
            result = result.04gxNj;
            result = echo.bind(update)(result);
            sizing['children'] = result;
            sizing = verify.bind(tango)(output, sizing);
            kilo[1] = sizing;
            backup['children'] = kilo;
            backup = romeo.bind(tango)(yankee, backup);
            foxtrot[1] = backup;
            offset['children'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            golf['children'] = offset;
            oscar = verify.bind(tango)(options, golf);
 1523:
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();