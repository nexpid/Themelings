// app/modules/applications/native/AppInteractionInfoActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flexDirection': 'row', 'paddingVertical': 12, 'paddingHorizontal': 16, 'alignItems': 'center'};
    tangon['itemContainer'] = verify;
    verify = {'flexDirection': 'column', 'alignItems': 'flex-start', 'paddingLeft': 12};
    tangon['itemLabel'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 19;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/applications/native/AppInteractionInfoActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AppInteractionInfoActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            sequen = entity.message;
            var _closure2_slot0 = sequen;
            sizing = entity.guildId;
            entity = entity.onBack;
            var _closure2_slot1 = entity;
            tangon = undefined;
            var _closure2_slot2 = tangon;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            var _closure2_slot5 = tangon;
            var _closure2_slot6 = tangon;
            michal = _closure1_slot10;
            kiloes = michal.bind(tangon)();
            zuuluu = _closure1_slot1;
            report = _closure1_slot2;
            michal = 7;
            michal = report[michal];
            michal = zuuluu.bind(tangon)(michal);
            michal = michal.bind(tangon)();
            option = michal.bottom;
            report = _closure1_slot3;
            zuuluu = report.useMemo;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                tangon = _closure1_slot8;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 8;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                report = _closure2_slot1;
                entity['onBack'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            report = zuuluu.bind(report)(entity, michal);
            entity = sequen.interactionMetadata;
            oscard = null;
            zuuluu = oscard == entity;
            michal = undefined;
            if(zuuluu) { _fun00002_ip = 180; continue _fun00001 }
 138:
            zuuluu = entity.authorizing_integration_owners;
            golfie = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 9;
            entity = verify[entity];
            entity = golfie.bind(tangon)(entity);
            entity = entity.ApplicationIntegrationType;
            entity = entity.USER_INSTALL;
            michal = zuuluu[entity];
 180:
            _closure2_slot2 = michal;
            zuuluu = sequen.interactionMetadata;
            golfie = oscard == zuuluu;
            entity = undefined;
            if(golfie) { _fun00002_ip = 241; continue _fun00001 }
 199:
            golfie = zuuluu.authorizing_integration_owners;
            verify = _closure1_slot0;
            yankee = _closure1_slot2;
            zuuluu = 9;
            zuuluu = yankee[zuuluu];
            zuuluu = verify.bind(tangon)(zuuluu);
            zuuluu = zuuluu.ApplicationIntegrationType;
            zuuluu = zuuluu.GUILD_INSTALL;
            entity = golfie[zuuluu];
 241:
            _closure2_slot3 = entity;
            zuuluu = sequen.interactionMetadata;
            golfie = oscard == zuuluu;
            entity = undefined;
            if(golfie) { _fun00002_ip = 270; continue _fun00001 }
 260:
            zuuluu = zuuluu.user;
            entity = zuuluu.id;
 270:
            _closure2_slot4 = entity;
            golfie = _closure1_slot0;
            verify = _closure1_slot2;
            zuuluu = 10;
            entity = verify[zuuluu];
            output = golfie.bind(tangon)(entity);
            backup = output.useStateFromStores;
            entity = _closure1_slot7;
            romeon = new Array(1);
            romeon[0] = entity;
            yankee = function() {
                zuuluu = _closure1_slot7;
                michal = zuuluu.getUser;
                entity = _closure2_slot2;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            vacuum = backup.bind(output)(romeon, yankee);
            _closure2_slot5 = vacuum;
            yankee = verify[zuuluu];
            output = golfie.bind(tangon)(yankee);
            backup = output.useStateFromStores;
            yankee = _closure1_slot6;
            romeon = new Array(1);
            romeon[0] = yankee;
            yankee = function() {
                zuuluu = _closure1_slot6;
                michal = zuuluu.getGuild;
                entity = _closure2_slot3;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            update = backup.bind(output)(romeon, yankee);
            zuuluu = verify[zuuluu];
            verify = golfie.bind(tangon)(zuuluu);
            golfie = verify.useStateFromStores;
            zuuluu = new Array(1);
            zuuluu[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot7;
                michal = zuuluu.getUser;
                entity = _closure2_slot4;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity = golfie.bind(verify)(zuuluu, entity);
            _closure2_slot6 = entity;
            verify = _closure1_slot3;
            golfie = verify.useEffect;
            zuuluu = new Array(2);
            zuuluu[0] = vacuum;
            zuuluu[1] = michal;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = _closure2_slot5;
                    tangon = null;
                    michal = tangon == michal;
                    if(!michal) { _fun00004_ip = 24; continue _fun00003 }
 16:
                    zuuluu = _closure2_slot2;
                    michal = tangon != zuuluu;
 24:
                    if(!michal) { _fun00004_ip = 67; continue _fun00003 }
 27:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 11;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    zuuluu = tangon.bind(michal)(zuuluu);
                    michal = zuuluu.getUser;
                    entity = _closure2_slot2;
                    entity = michal.bind(zuuluu)(entity);
 67:
                    entity = undefined;
                    return entity;
                }
            };
            michal = golfie.bind(verify)(michal, zuuluu);
            result = entity;
            if(!(oscard == result)) { _fun00002_ip = 501; continue _fun00001 }
 447:
            zuuluu = _closure1_slot5;
            michal = sequen.interactionMetadata;
            golfie = oscard == michal;
            entity = undefined;
            if(golfie) { _fun00002_ip = 471; continue _fun00001 }
 466:
            entity = michal.user;
 471:
            michal = zuuluu.prototype;
            michal = Object.create(michal, {constructor: {value: zuuluu}});
            sierra = michal;
            status = entity;
            entity = new sierra[zuuluu](status, target);
            entity = entity instanceof Object ? entity : michal;
            _closure2_slot6 = entity;
            result = entity;
 501:
            if(!(oscard == update)) { _fun00002_ip = 860; continue _fun00001 }
 508:
            entity = oscard != vacuum;
            golfie = null;
            if(!entity) { _fun00002_ip = 1150; continue _fun00001 }
 520:
            zuuluu = _closure1_slot8;
            config = _closure1_slot0;
            papara = _closure1_slot2;
            entity = 15;
            entity = papara[entity];
            entity = config.bind(tangon)(entity);
            michal = entity.PressableOpacity;
            entity = {};
            verify = function() { // Original name: onPress
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 16;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                report = _closure2_slot5;
                report = report.id;
                entity['userId'] = report;
                tangon = _closure2_slot0;
                tangon = tangon.channel_id;
                entity['channelId'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity['onPress'] = verify;
            romeon = _closure1_slot9;
            yankee = _closure1_slot4;
            verify = {};
            backup = kiloes.itemContainer;
            verify['style'] = backup;
            output = _closure1_slot1;
            echoed = 17;
            backup = papara[echoed];
            output = output.bind(tangon)(backup);
            backup = {};
            backup['user'] = vacuum;
            echoed = papara[echoed];
            echoed = config.bind(tangon)(echoed);
            echoed = echoed.AvatarSizes;
            echoed = echoed.REFRESH_MEDIUM_32;
            backup['size'] = echoed;
            backup['guildId'] = sizing;
            output = zuuluu.bind(tangon)(output, backup);
            backup = new Array(2);
            backup[0] = output;
            output = {};
            echoed = kiloes.itemLabel;
            output['style'] = echoed;
            source = 13;
            echoed = papara[source];
            echoed = config.bind(tangon)(echoed);
            ctrled = echoed.Text;
            echoed = {'variant': 'text-md/semibold', 'color': 'header-primary'};
            vacuum = vacuum.username;
            echoed['children'] = vacuum;
            ctrled = zuuluu.bind(tangon)(ctrled, echoed);
            echoed = new Array(2);
            echoed[0] = ctrled;
            source = papara[source];
            source = config.bind(tangon)(source);
            ctrled = source.Text;
            source = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
            vacuum = 14;
            record = papara[vacuum];
            record = config.bind(tangon)(record);
            cntext = record.intl;
            record = cntext.format;
            vacuum = papara[vacuum];
            vacuum = config.bind(tangon)(vacuum);
            vacuum = vacuum.t;
            config = vacuum.ShLXXF;
            vacuum = {};
            papara = sequen.author;
            papara = papara.username;
            vacuum['application'] = papara;
            vacuum = record.bind(cntext)(config, vacuum);
            source['children'] = vacuum;
            source = zuuluu.bind(tangon)(ctrled, source);
            echoed[1] = source;
            output['children'] = echoed;
            output = romeon.bind(tangon)(yankee, output);
            backup[1] = output;
            verify['children'] = backup;
            verify = romeon.bind(tangon)(yankee, verify);
            entity['children'] = verify;
            golfie = zuuluu.bind(tangon)(michal, entity);
            _fun00002_ip = 1150; continue _fun00001;
 860:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot4;
            entity = {};
            verify = kiloes.itemContainer;
            entity['style'] = verify;
            echoed = _closure1_slot8;
            yankee = _closure1_slot1;
            config = _closure1_slot2;
            romeon = 12;
            verify = config[romeon];
            yankee = yankee.bind(tangon)(verify);
            verify = {};
            verify['guild'] = update;
            source = _closure1_slot0;
            romeon = config[romeon];
            romeon = source.bind(tangon)(romeon);
            romeon = romeon.GuildIconSizes;
            romeon = romeon.SMALL_32;
            verify['size'] = romeon;
            yankee = echoed.bind(tangon)(yankee, verify);
            verify = new Array(2);
            verify[0] = yankee;
            yankee = {};
            romeon = kiloes.itemLabel;
            yankee['style'] = romeon;
            backup = 13;
            romeon = config[backup];
            romeon = source.bind(tangon)(romeon);
            output = romeon.Text;
            romeon = {'variant': 'text-md/semibold', 'color': 'header-primary'};
            update = update.name;
            romeon['children'] = update;
            output = echoed.bind(tangon)(output, romeon);
            romeon = new Array(2);
            romeon[0] = output;
            backup = config[backup];
            backup = source.bind(tangon)(backup);
            output = backup.Text;
            backup = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
            update = 14;
            ctrled = config[update];
            ctrled = source.bind(tangon)(ctrled);
            vacuum = ctrled.intl;
            ctrled = vacuum.format;
            update = config[update];
            update = source.bind(tangon)(update);
            update = update.t;
            source = update.ShLXXF;
            update = {};
            sequen = sequen.author;
            sequen = sequen.username;
            update['application'] = sequen;
            update = ctrled.bind(vacuum)(source, update);
            backup['children'] = update;
            backup = echoed.bind(tangon)(output, backup);
            romeon[1] = backup;
            yankee['children'] = romeon;
            yankee = zuuluu.bind(tangon)(michal, yankee);
            verify[1] = yankee;
            entity['children'] = verify;
            golfie = zuuluu.bind(tangon)(michal, entity);
 1150:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 18;
            entity = verify[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {};
            entity['header'] = report;
            report = {};
            report['paddingBottom'] = option;
            entity['bodyStyles'] = report;
            report = new Array(2);
            report[0] = golfie;
            golfie = oscard != result;
            oscard = null;
            if(!golfie) { _fun00002_ip = 1537; continue _fun00001 }
 1218:
            verify = _closure1_slot8;
            source = _closure1_slot0;
            ctrled = _closure1_slot2;
            golfie = 15;
            golfie = ctrled[golfie];
            golfie = source.bind(tangon)(golfie);
            option = golfie.PressableOpacity;
            golfie = {};
            offset = function() { // Original name: onPress
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 16;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                report = _closure2_slot6;
                report = report.id;
                entity['userId'] = report;
                tangon = _closure2_slot0;
                tangon = tangon.channel_id;
                entity['channelId'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            golfie['onPress'] = offset;
            romeon = _closure1_slot9;
            yankee = _closure1_slot4;
            offset = {};
            backup = kiloes.itemContainer;
            offset['style'] = backup;
            backup = _closure1_slot1;
            output = 17;
            foxtra = ctrled[output];
            backup = backup.bind(tangon)(foxtra);
            foxtra = {};
            foxtra['user'] = result;
            output = ctrled[output];
            output = source.bind(tangon)(output);
            output = output.AvatarSizes;
            output = output.REFRESH_MEDIUM_32;
            foxtra['size'] = output;
            foxtra['guildId'] = sizing;
            backup = verify.bind(tangon)(backup, foxtra);
            foxtra = new Array(2);
            foxtra[0] = backup;
            backup = {};
            kiloes = kiloes.itemLabel;
            backup['style'] = kiloes;
            sizing = 13;
            kiloes = ctrled[sizing];
            kiloes = source.bind(tangon)(kiloes);
            output = kiloes.Text;
            kiloes = {'variant': 'text-md/semibold', 'color': 'header-primary'};
            result = result.username;
            kiloes['children'] = result;
            output = verify.bind(tangon)(output, kiloes);
            kiloes = new Array(2);
            kiloes[0] = output;
            sizing = ctrled[sizing];
            sizing = source.bind(tangon)(sizing);
            output = sizing.Text;
            sizing = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
            result = 14;
            echoed = ctrled[result];
            echoed = source.bind(tangon)(echoed);
            update = echoed.intl;
            echoed = update.string;
            result = ctrled[result];
            result = source.bind(tangon)(result);
            result = result.t;
            result = result.04gxNj;
            result = echoed.bind(update)(result);
            sizing['children'] = result;
            sizing = verify.bind(tangon)(output, sizing);
            kiloes[1] = sizing;
            backup['children'] = kiloes;
            backup = romeon.bind(tangon)(yankee, backup);
            foxtra[1] = backup;
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 1537:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();