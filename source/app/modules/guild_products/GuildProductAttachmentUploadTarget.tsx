// app/modules/guild_products/GuildProductAttachmentUploadTarget.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot0 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot1 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.MAX_ATTACHMENT_UPLOAD_COUNT;
    var _closure1_slot2 = golf;
    golf = tango.MAX_ATTACHMENT_UPLOAD_FILESIZE_BYTES;
    var _closure1_slot3 = golf;
    tango = tango.MAX_ATTACHMENT_UPLOAD_TOTAL_FILESIZE_BYTES;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Endpoints;
    var _closure1_slot5 = tango;
    mike = function() {
        tango = _closure1_slot1;
        zulu = function() { // Original name: GuildProductAttachmentUploadTarget
            tango = _closure1_slot0;
            zulu = _closure2_slot0;
            entity = undefined;
            mike = this;
            mike = tango.bind(entity)(mike, zulu);
            return entity;
        };
        var _closure2_slot0 = zulu;
        entity = {};
        mike = 'getCreateAttachmentURL';
        entity['key'] = mike;
        mike = function(argFoo) { // Original name: value
            zulu = _closure1_slot5;
            mike = zulu.GUILD_PRODUCT_CREATE_ATTACHMENT_UPLOAD;
            entity = argFoo;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        entity['value'] = mike;
        mike = new Array(6);
        mike[0] = entity;
        entity = {};
        oscar = 'getDeleteUploadURL';
        entity['key'] = oscar;
        oscar = function(argFoo) { // Original name: value
            zulu = _closure1_slot5;
            mike = zulu.MESSAGE_DELETE_UPLOAD;
            entity = argFoo;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        entity['value'] = oscar;
        mike[1] = entity;
        entity = {};
        oscar = 'getMaxFileSize';
        entity['key'] = oscar;
        oscar = function() { // Original name: value
            entity = _closure1_slot3;
            return entity;
        };
        entity['value'] = oscar;
        mike[2] = entity;
        entity = {};
        oscar = 'getMaxAttachmentsCount';
        entity['key'] = oscar;
        oscar = function() { // Original name: value
            entity = _closure1_slot2;
            return entity;
        };
        entity['value'] = oscar;
        mike[3] = entity;
        entity = {};
        oscar = 'getMaxTotalAttachmentSize';
        entity['key'] = oscar;
        oscar = function() { // Original name: value
            entity = _closure1_slot4;
            return entity;
        };
        entity['value'] = oscar;
        mike[4] = entity;
        entity = {};
        oscar = 'shouldReactNativeCompressUploads';
        entity['key'] = oscar;
        report = function() { // Original name: get
            entity = false;
            return entity;
        };
        entity['get'] = report;
        mike[5] = entity;
        entity = undefined;
        entity = tango.bind(entity)(zulu, mike);
        return entity;
    };
    mike = mike.bind(entity)();
    tango = 4;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_products/GuildProductAttachmentUploadTarget.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();