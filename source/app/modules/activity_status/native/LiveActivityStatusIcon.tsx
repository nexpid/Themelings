// app/modules/activity_status/native/LiveActivityStatusIcon.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    offset = 0;
    golf = oscar[offset];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot0 = tango;
    tango = 2;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flexShrink'] = offset;
    tango['icon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot1 = tango;
    tango = 3;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/activity_status/native/LiveActivityStatusIcon.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: LiveActivityStatusIcon
        zulu = argFoo;
        tango = zulu.icon;
        golf = zulu.style;
        entity = null;
        mike = Object.create(entity);
        entity = 0;
        mike['icon'] = entity;
        mike['style'] = entity;
        yankee = {};
        offset = zulu;
        verify = mike;
        offset = copyDataProperties(yankee, offset, verify);
        mike = _closure1_slot1;
        zulu = undefined;
        oscar = mike.bind(zulu)();
        mike = _closure1_slot0;
        entity = {'size': 'xxs', 'style': null, 'color': 'status-positive'};
        options = oscar.icon;
        oscar = new Array(2);
        oscar[0] = options;
        oscar[1] = golf;
        entity['style'] = oscar;
        yankee = entity;
        report = copyDataProperties(yankee, offset);
        entity = mike.bind(zulu)(tango, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();