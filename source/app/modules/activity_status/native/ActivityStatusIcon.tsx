// app/modules/activity_status/native/ActivityStatusIcon.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    offset = 0;
    golfie = oscard[offset];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot0 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flexShrink'] = offset;
    tangon['icon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot1 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/activity_status/native/ActivityStatusIcon.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ActivityStatusIcon
        zuuluu = argFoo;
        tangon = zuuluu.icon;
        golfie = zuuluu.style;
        entity = null;
        michal = Object.create(entity);
        entity = 0;
        michal['icon'] = entity;
        michal['style'] = entity;
        yankee = {};
        offset = zuuluu;
        verify = michal;
        offset = copyDataProperties(yankee, offset, verify);
        michal = _closure1_slot1;
        zuuluu = undefined;
        oscard = michal.bind(zuuluu)();
        michal = _closure1_slot0;
        entity = {'size': 'xxs', 'style': null, 'color': 'status-positive'};
        option = oscard.icon;
        oscard = new Array(2);
        oscard[0] = option;
        oscard[1] = golfie;
        entity['style'] = oscard;
        yankee = entity;
        report = copyDataProperties(yankee, offset);
        entity = michal.bind(zuuluu)(tangon, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();