// app/modules/creator_monetization_eligibility/CreatorMonetizationEligibilityExperiments.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    verify = argBar;
    zulu = argFred;
    offset = argPlugh;
    entity = global;
    report = entity.Object;
    tango = report.defineProperty;
    mike = {};
    kilo = true;
    mike['value'] = kilo;
    entity = '__esModule';
    entity = tango.bind(report)(zulu, entity, mike);
    mike = 0;
    tango = offset[mike];
    entity = undefined;
    oscar = verify.bind(entity)(tango);
    report = oscar.createExperiment;
    tango = {'kind': 'user', 'id': '2022-04_creator_monetization_country_allowlist', 'label': 'Creator Monetization Available in Country'};
    golf = {};
    backup = false;
    golf['isUserEligibleForCreatorMonetization'] = backup;
    tango['defaultConfig'] = golf;
    yankee = {'id': 1, 'label': 'Enables users to view Creator Monetization entrypoints'};
    options = 1;
    golf = {};
    golf['isUserEligibleForCreatorMonetization'] = kilo;
    yankee['config'] = golf;
    golf = new Array(1);
    golf[0] = yankee;
    tango['treatments'] = golf;
    golf = report.bind(oscar)(tango);
    tango = offset[mike];
    oscar = verify.bind(entity)(tango);
    report = oscar.createExperiment;
    tango = {'kind': 'guild', 'id': '2022-09_creator_monetization_raven', 'label': 'Creator Monetization Onboarding v2'};
    yankee = {};
    yankee['enableFastMonetizationOnboardingForGuild'] = backup;
    tango['defaultConfig'] = yankee;
    romeo = {'id': 1, 'label': 'Enables guild to create Guild Role Subscriptions quickly'};
    yankee = {};
    yankee['enableFastMonetizationOnboardingForGuild'] = kilo;
    romeo['config'] = yankee;
    yankee = new Array(1);
    yankee[0] = romeo;
    tango['treatments'] = yankee;
    oscar = report.bind(oscar)(tango);
    tango = offset[mike];
    yankee = verify.bind(entity)(tango);
    report = yankee.createExperiment;
    tango = {'kind': 'user', 'id': '2022-09_creator_monetization_raven_users', 'label': 'Creator Monetization Onboarding v2 Users'};
    romeo = {};
    romeo['enableFastMonetizationOnboardingForUser'] = backup;
    tango['defaultConfig'] = romeo;
    foxtrot = {'id': 1, 'label': 'Enables users to create Guild Role Subscriptions quickly'};
    romeo = {};
    romeo['enableFastMonetizationOnboardingForUser'] = kilo;
    foxtrot['config'] = romeo;
    romeo = new Array(1);
    romeo[0] = foxtrot;
    tango['treatments'] = romeo;
    report = report.bind(yankee)(tango);
    tango = offset[mike];
    romeo = verify.bind(entity)(tango);
    yankee = romeo.createExperiment;
    tango = {'kind': 'guild', 'id': '2022-11_creator_monetization_onboarding_waitlist', 'label': 'Creator Monetization Onboarding Waitlist'};
    foxtrot = {};
    foxtrot['enableWaitlist'] = backup;
    tango['defaultConfig'] = foxtrot;
    sizing = {'id': 1, 'label': 'Enables Guilds to (possibly) see the waitlist'};
    foxtrot = {};
    foxtrot['enableWaitlist'] = kilo;
    sizing['config'] = foxtrot;
    foxtrot = new Array(1);
    foxtrot[0] = sizing;
    tango['treatments'] = foxtrot;
    tango = yankee.bind(romeo)(tango);
    mike = offset[mike];
    romeo = verify.bind(entity)(mike);
    yankee = romeo.createExperiment;
    mike = {'kind': 'user', 'id': '2023-01_creator_monetization_nag_activate_users', 'label': 'Creator Monetization Nag Activate Users'};
    foxtrot = {};
    foxtrot['enableCreatorMonetizationNagActivateForUser'] = backup;
    mike['defaultConfig'] = foxtrot;
    backup = {'id': 1, 'label': 'Enables users to see nag bar to activate server subscriptions'};
    foxtrot = {};
    foxtrot['enableCreatorMonetizationNagActivateForUser'] = kilo;
    backup['config'] = foxtrot;
    foxtrot = new Array(1);
    foxtrot[0] = backup;
    mike['treatments'] = foxtrot;
    mike = yankee.bind(romeo)(mike);
    options = offset[options];
    offset = verify.bind(entity)(options);
    verify = offset.fileFinishedImporting;
    options = 'modules/creator_monetization_eligibility/CreatorMonetizationEligibilityExperiments.tsx';
    options = verify.bind(offset)(options);
    zulu['CreatorMonetizationCountryAllowlistExperiment'] = golf;
    zulu['CreatorMonetizationRavenOnboardingGuildExperiment'] = oscar;
    zulu['CreatorMonetizationRavenOnboardingUserExperiment'] = report;
    zulu['CreatorMonetizationOnboardingWaitlistExperiment'] = tango;
    zulu['CreatorMonetizationNagActivateExperiment'] = mike;
    return entity;
})();