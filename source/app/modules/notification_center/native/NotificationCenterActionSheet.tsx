// app/modules/notification_center/native/NotificationCenterActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UserSettingsSections;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 27;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/notification_center/native/NotificationCenterActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            golfie = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 4;
            entity = oscard[entity];
            tangon = undefined;
            report = golfie.bind(tangon)(entity);
            zuuluu = report.useStateFromStoresObject;
            entity = _closure1_slot4;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                entity = {};
                michal = _closure1_slot4;
                zuuluu = michal.everyoneFilter;
                entity['everyoneFilter'] = zuuluu;
                michal = michal.roleFilter;
                entity['roleFilter'] = michal;
                return entity;
            };
            entity = zuuluu.bind(report)(michal, entity);
            sizing = entity.roleFilter;
            var _closure2_slot0 = sizing;
            update = entity.everyoneFilter;
            var _closure2_slot1 = update;
            report = _closure1_slot3;
            zuuluu = report.useCallback;
            michal = new Array(2);
            michal[0] = update;
            michal[1] = sizing;
            entity = function(argFoo) {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 5;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.setGuildFilter;
                michal = {};
                oscard = _closure2_slot0;
                michal['roleFilter'] = oscard;
                report = _closure2_slot1;
                michal['everyoneFilter'] = report;
                golfie = argFoo;
                option = michal;
                report = copyDataProperties(option, golfie);
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            var _closure2_slot2 = entity;
            vacuum = _closure1_slot1;
            entity = 6;
            entity = oscard[entity];
            zuuluu = vacuum.bind(tangon)(entity);
            michal = zuuluu.useExperiment;
            entity = {};
            option = 'NotificationCenterActionSheet';
            entity['location'] = option;
            entity = michal.bind(zuuluu)(entity);
            yankee = entity.enabled;
            zuuluu = report.useCallback;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = _closure1_slot1;
                    report = _closure1_slot2;
                    entity = 7;
                    michal = report[entity];
                    entity = undefined;
                    oscard = tangon.bind(entity)(michal);
                    michal = oscard.hideActionSheet;
                    michal = michal.bind(oscard)();
                    michal = 8;
                    michal = report[michal];
                    michal = tangon.bind(entity)(michal);
                    tangon = michal.bind(entity)();
                    report = _closure1_slot1;
                    michal = _closure1_slot2;
                    if(tangon) { _fun00004_ip = 109; continue _fun00003 }
 62:
                    tangon = 9;
                    tangon = michal[tangon];
                    oscard = report.bind(entity)(tangon);
                    golfie = _closure1_slot0;
                    tangon = 10;
                    tangon = michal[tangon];
                    tangon = golfie.bind(entity)(tangon);
                    tangon = tangon.EntitlementFeatureNames;
                    tangon = tangon.SAVED_MESSAGES;
                    tangon = oscard.bind(entity)(tangon);
                    _fun00004_ip = 190; continue _fun00003;
 109:
                    tangon = 11;
                    tangon = michal[tangon];
                    golfie = report.bind(entity)(tangon);
                    oscard = golfie.pushLazy;
                    tangon = _closure1_slot0;
                    zuuluu = 13;
                    zuuluu = michal[zuuluu];
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = 12;
                    zuuluu = michal[zuuluu];
                    michal = michal.paths;
                    yankee = tangon.bind(entity)(zuuluu, michal);
                    tangon = {};
                    michal = 'modal';
                    tangon['presentation'] = michal;
                    offset = {};
                    verify = 'for-later-modal';
                    romeon = golfie;
                    option = tangon;
                    michal = romeon[oscard](yankee, offset, verify, option, golfie);
 190:
                    return entity;
                }
            };
            entity = new Array(0);
            option = zuuluu.bind(report)(michal, entity);
            zuuluu = report.useCallback;
            michal = function() {
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 7;
                michal = tangon[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                zuuluu = _closure1_slot0;
                michal = 14;
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.openUserSettings;
                michal = {};
                report = _closure1_slot5;
                report = report.NOTIFICATIONS;
                michal['screen'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity = new Array(0);
            foxtra = zuuluu.bind(report)(michal, entity);
            zuuluu = _closure1_slot7;
            entity = 15;
            entity = oscard[entity];
            entity = golfie.bind(tangon)(entity);
            michal = entity.ActionSheet;
            entity = {};
            verify = true;
            entity['showGradient'] = verify;
            output = _closure1_slot6;
            report = 16;
            report = oscard[report];
            report = golfie.bind(tangon)(report);
            offset = report.BottomSheetTitleHeader;
            report = {};
            result = 17;
            romeon = oscard[result];
            romeon = golfie.bind(tangon)(romeon);
            kiloes = romeon.intl;
            backup = kiloes.string;
            romeon = oscard[result];
            romeon = golfie.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.HcoRu7;
            romeon = backup.bind(kiloes)(romeon);
            report['title'] = romeon;
            report = output.bind(tangon)(offset, report);
            entity['header'] = report;
            kiloes = 18;
            report = oscard[kiloes];
            report = golfie.bind(tangon)(report);
            report = report.ActionSheetRow;
            offset = report.Group;
            report = {};
            romeon = oscard[kiloes];
            romeon = golfie.bind(tangon)(romeon);
            backup = romeon.ActionSheetSwitchRow;
            romeon = {};
            ctrled = function() { // Original name: onValueChange
                zuuluu = _closure2_slot2;
                michal = {};
                entity = _closure2_slot0;
                entity = !entity;
                michal['roleFilter'] = entity;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            romeon['onValueChange'] = ctrled;
            romeon['value'] = sizing;
            sizing = oscard[result];
            sizing = golfie.bind(tangon)(sizing);
            sequen = sizing.intl;
            ctrled = sequen.string;
            sizing = oscard[result];
            sizing = golfie.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.asInfn;
            sizing = ctrled.bind(sequen)(sizing);
            romeon['label'] = sizing;
            sizing = oscard[kiloes];
            sizing = golfie.bind(tangon)(sizing);
            sizing = sizing.ActionSheetRow;
            ctrled = sizing.Icon;
            sizing = {};
            sequen = 19;
            sequen = oscard[sequen];
            sequen = golfie.bind(tangon)(sequen);
            sequen = sequen.AtIcon;
            sizing['IconComponent'] = sequen;
            sequen = 20;
            sequen = oscard[sequen];
            sequen = vacuum.bind(tangon)(sequen);
            sizing['source'] = sequen;
            sizing = output.bind(tangon)(ctrled, sizing);
            romeon['icon'] = sizing;
            backup = output.bind(tangon)(backup, romeon);
            romeon = new Array(2);
            romeon[0] = backup;
            backup = oscard[kiloes];
            backup = golfie.bind(tangon)(backup);
            sizing = backup.ActionSheetSwitchRow;
            backup = {};
            source = function() { // Original name: onValueChange
                zuuluu = _closure2_slot2;
                michal = {};
                entity = _closure2_slot1;
                entity = !entity;
                michal['everyoneFilter'] = entity;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            backup['onValueChange'] = source;
            backup['value'] = update;
            update = oscard[result];
            update = golfie.bind(tangon)(update);
            ctrled = update.intl;
            source = ctrled.string;
            update = oscard[result];
            update = golfie.bind(tangon)(update);
            update = update.t;
            update = update.S9GLtr;
            update = source.bind(ctrled)(update);
            backup['label'] = update;
            update = oscard[result];
            update = golfie.bind(tangon)(update);
            ctrled = update.intl;
            source = ctrled.string;
            update = oscard[result];
            update = golfie.bind(tangon)(update);
            update = update.t;
            update = update.jYgZa2;
            update = source.bind(ctrled)(update);
            backup['subLabel'] = update;
            update = oscard[kiloes];
            update = golfie.bind(tangon)(update);
            update = update.ActionSheetRow;
            source = update.Icon;
            update = {};
            ctrled = 21;
            ctrled = oscard[ctrled];
            ctrled = golfie.bind(tangon)(ctrled);
            ctrled = ctrled.BellIcon;
            update['IconComponent'] = ctrled;
            ctrled = 22;
            ctrled = oscard[ctrled];
            ctrled = vacuum.bind(tangon)(ctrled);
            update['source'] = ctrled;
            update = output.bind(tangon)(source, update);
            backup['icon'] = update;
            backup = output.bind(tangon)(sizing, backup);
            romeon[1] = backup;
            report['children'] = romeon;
            offset = zuuluu.bind(tangon)(offset, report);
            report = new Array(2);
            report[0] = offset;
            oscard = oscard[kiloes];
            oscard = golfie.bind(tangon)(oscard);
            oscard = oscard.ActionSheetRow;
            golfie = oscard.Group;
            oscard = {};
            offset = null;
            if(!yankee) { _fun00002_ip = 949; continue _fun00001 }
 774:
            backup = _closure1_slot6;
            source = _closure1_slot0;
            sizing = _closure1_slot2;
            yankee = sizing[kiloes];
            yankee = source.bind(tangon)(yankee);
            romeon = yankee.ActionSheetRow;
            yankee = {};
            output = sizing[kiloes];
            output = source.bind(tangon)(output);
            output = output.ActionSheetRow;
            update = output.Icon;
            output = {};
            ctrled = 23;
            ctrled = sizing[ctrled];
            ctrled = source.bind(tangon)(ctrled);
            ctrled = ctrled.BookmarkIcon;
            output['IconComponent'] = ctrled;
            vacuum = _closure1_slot1;
            ctrled = 24;
            ctrled = sizing[ctrled];
            ctrled = vacuum.bind(tangon)(ctrled);
            output['source'] = ctrled;
            output = backup.bind(tangon)(update, output);
            yankee['icon'] = output;
            output = sizing[result];
            output = source.bind(tangon)(output);
            update = output.intl;
            output = update.string;
            sizing = sizing[result];
            sizing = source.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.2pAkDA;
            sizing = output.bind(update)(sizing);
            yankee['label'] = sizing;
            yankee['onPress'] = option;
            yankee['arrow'] = verify;
            option = 'for-later';
            offset = backup.bind(tangon)(romeon, yankee, option);
 949:
            option = new Array(2);
            option[0] = offset;
            romeon = _closure1_slot6;
            output = _closure1_slot0;
            backup = _closure1_slot2;
            offset = backup[kiloes];
            offset = output.bind(tangon)(offset);
            yankee = offset.ActionSheetRow;
            offset = {};
            kiloes = backup[kiloes];
            kiloes = output.bind(tangon)(kiloes);
            kiloes = kiloes.ActionSheetRow;
            sizing = kiloes.Icon;
            kiloes = {};
            update = 25;
            update = backup[update];
            update = output.bind(tangon)(update);
            update = update.SettingsIcon;
            kiloes['IconComponent'] = update;
            update = _closure1_slot1;
            echoed = 26;
            echoed = backup[echoed];
            echoed = update.bind(tangon)(echoed);
            kiloes['source'] = echoed;
            kiloes = romeon.bind(tangon)(sizing, kiloes);
            offset['icon'] = kiloes;
            kiloes = backup[result];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = backup[result];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.h850Sk;
            backup = kiloes.bind(sizing)(backup);
            offset['label'] = backup;
            offset['onPress'] = foxtra;
            offset['arrow'] = verify;
            verify = 'settings';
            verify = romeon.bind(tangon)(yankee, offset, verify);
            option[1] = verify;
            oscard['children'] = option;
            oscard = zuuluu.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();