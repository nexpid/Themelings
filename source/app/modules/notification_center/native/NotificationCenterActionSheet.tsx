// app/modules/notification_center/native/NotificationCenterActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.UserSettingsSections;
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 27;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/notification_center/native/NotificationCenterActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            golf = _closure1_slot0;
            oscar = _closure1_slot2;
            entity = 4;
            entity = oscar[entity];
            tango = undefined;
            report = golf.bind(tango)(entity);
            zulu = report.useStateFromStoresObject;
            entity = _closure1_slot4;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                entity = {};
                mike = _closure1_slot4;
                zulu = mike.everyoneFilter;
                entity['everyoneFilter'] = zulu;
                mike = mike.roleFilter;
                entity['roleFilter'] = mike;
                return entity;
            };
            entity = zulu.bind(report)(mike, entity);
            sizing = entity.roleFilter;
            var _closure2_slot0 = sizing;
            update = entity.everyoneFilter;
            var _closure2_slot1 = update;
            report = _closure1_slot3;
            zulu = report.useCallback;
            mike = new Array(2);
            mike[0] = update;
            mike[1] = sizing;
            entity = function(argFoo) {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 5;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.setGuildFilter;
                mike = {};
                oscar = _closure2_slot0;
                mike['roleFilter'] = oscar;
                report = _closure2_slot1;
                mike['everyoneFilter'] = report;
                golf = argFoo;
                options = mike;
                report = copyDataProperties(options, golf);
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity = zulu.bind(report)(entity, mike);
            var _closure2_slot2 = entity;
            vacuum = _closure1_slot1;
            entity = 6;
            entity = oscar[entity];
            zulu = vacuum.bind(tango)(entity);
            mike = zulu.useExperiment;
            entity = {};
            options = 'NotificationCenterActionSheet';
            entity['location'] = options;
            entity = mike.bind(zulu)(entity);
            yankee = entity.enabled;
            zulu = report.useCallback;
            mike = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tango = _closure1_slot1;
                    report = _closure1_slot2;
                    entity = 7;
                    mike = report[entity];
                    entity = undefined;
                    oscar = tango.bind(entity)(mike);
                    mike = oscar.hideActionSheet;
                    mike = mike.bind(oscar)();
                    mike = 8;
                    mike = report[mike];
                    mike = tango.bind(entity)(mike);
                    tango = mike.bind(entity)();
                    report = _closure1_slot1;
                    mike = _closure1_slot2;
                    if(tango) { _fun00004_ip = 109; continue _fun00003 }
 62:
                    tango = 9;
                    tango = mike[tango];
                    oscar = report.bind(entity)(tango);
                    golf = _closure1_slot0;
                    tango = 10;
                    tango = mike[tango];
                    tango = golf.bind(entity)(tango);
                    tango = tango.EntitlementFeatureNames;
                    tango = tango.SAVED_MESSAGES;
                    tango = oscar.bind(entity)(tango);
                    _fun00004_ip = 190; continue _fun00003;
 109:
                    tango = 11;
                    tango = mike[tango];
                    golf = report.bind(entity)(tango);
                    oscar = golf.pushLazy;
                    tango = _closure1_slot0;
                    zulu = 13;
                    zulu = mike[zulu];
                    tango = tango.bind(entity)(zulu);
                    zulu = 12;
                    zulu = mike[zulu];
                    mike = mike.paths;
                    yankee = tango.bind(entity)(zulu, mike);
                    tango = {};
                    mike = 'modal';
                    tango['presentation'] = mike;
                    offset = {};
                    verify = 'for-later-modal';
                    romeo = golf;
                    options = tango;
                    mike = romeo[oscar](yankee, offset, verify, options, golf);
 190:
                    return entity;
                }
            };
            entity = new Array(0);
            options = zulu.bind(report)(mike, entity);
            zulu = report.useCallback;
            mike = function() {
                zulu = _closure1_slot1;
                tango = _closure1_slot2;
                entity = 7;
                mike = tango[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.hideActionSheet;
                mike = mike.bind(zulu)();
                zulu = _closure1_slot0;
                mike = 14;
                mike = tango[mike];
                tango = zulu.bind(entity)(mike);
                zulu = tango.openUserSettings;
                mike = {};
                report = _closure1_slot5;
                report = report.NOTIFICATIONS;
                mike['screen'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity = new Array(0);
            foxtrot = zulu.bind(report)(mike, entity);
            zulu = _closure1_slot7;
            entity = 15;
            entity = oscar[entity];
            entity = golf.bind(tango)(entity);
            mike = entity.ActionSheet;
            entity = {};
            verify = true;
            entity['showGradient'] = verify;
            output = _closure1_slot6;
            report = 16;
            report = oscar[report];
            report = golf.bind(tango)(report);
            offset = report.BottomSheetTitleHeader;
            report = {};
            result = 17;
            romeo = oscar[result];
            romeo = golf.bind(tango)(romeo);
            kilo = romeo.intl;
            backup = kilo.string;
            romeo = oscar[result];
            romeo = golf.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.HcoRu7;
            romeo = backup.bind(kilo)(romeo);
            report['title'] = romeo;
            report = output.bind(tango)(offset, report);
            entity['header'] = report;
            kilo = 18;
            report = oscar[kilo];
            report = golf.bind(tango)(report);
            report = report.ActionSheetRow;
            offset = report.Group;
            report = {};
            romeo = oscar[kilo];
            romeo = golf.bind(tango)(romeo);
            backup = romeo.ActionSheetSwitchRow;
            romeo = {};
            control = function() { // Original name: onValueChange
                zulu = _closure2_slot2;
                mike = {};
                entity = _closure2_slot0;
                entity = !entity;
                mike['roleFilter'] = entity;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            romeo['onValueChange'] = control;
            romeo['value'] = sizing;
            sizing = oscar[result];
            sizing = golf.bind(tango)(sizing);
            sequence = sizing.intl;
            control = sequence.string;
            sizing = oscar[result];
            sizing = golf.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.asInfn;
            sizing = control.bind(sequence)(sizing);
            romeo['label'] = sizing;
            sizing = oscar[kilo];
            sizing = golf.bind(tango)(sizing);
            sizing = sizing.ActionSheetRow;
            control = sizing.Icon;
            sizing = {};
            sequence = 19;
            sequence = oscar[sequence];
            sequence = golf.bind(tango)(sequence);
            sequence = sequence.AtIcon;
            sizing['IconComponent'] = sequence;
            sequence = 20;
            sequence = oscar[sequence];
            sequence = vacuum.bind(tango)(sequence);
            sizing['source'] = sequence;
            sizing = output.bind(tango)(control, sizing);
            romeo['icon'] = sizing;
            backup = output.bind(tango)(backup, romeo);
            romeo = new Array(2);
            romeo[0] = backup;
            backup = oscar[kilo];
            backup = golf.bind(tango)(backup);
            sizing = backup.ActionSheetSwitchRow;
            backup = {};
            source = function() { // Original name: onValueChange
                zulu = _closure2_slot2;
                mike = {};
                entity = _closure2_slot1;
                entity = !entity;
                mike['everyoneFilter'] = entity;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            backup['onValueChange'] = source;
            backup['value'] = update;
            update = oscar[result];
            update = golf.bind(tango)(update);
            control = update.intl;
            source = control.string;
            update = oscar[result];
            update = golf.bind(tango)(update);
            update = update.t;
            update = update.S9GLtr;
            update = source.bind(control)(update);
            backup['label'] = update;
            update = oscar[result];
            update = golf.bind(tango)(update);
            control = update.intl;
            source = control.string;
            update = oscar[result];
            update = golf.bind(tango)(update);
            update = update.t;
            update = update.jYgZa2;
            update = source.bind(control)(update);
            backup['subLabel'] = update;
            update = oscar[kilo];
            update = golf.bind(tango)(update);
            update = update.ActionSheetRow;
            source = update.Icon;
            update = {};
            control = 21;
            control = oscar[control];
            control = golf.bind(tango)(control);
            control = control.BellIcon;
            update['IconComponent'] = control;
            control = 22;
            control = oscar[control];
            control = vacuum.bind(tango)(control);
            update['source'] = control;
            update = output.bind(tango)(source, update);
            backup['icon'] = update;
            backup = output.bind(tango)(sizing, backup);
            romeo[1] = backup;
            report['children'] = romeo;
            offset = zulu.bind(tango)(offset, report);
            report = new Array(2);
            report[0] = offset;
            oscar = oscar[kilo];
            oscar = golf.bind(tango)(oscar);
            oscar = oscar.ActionSheetRow;
            golf = oscar.Group;
            oscar = {};
            offset = null;
            if(!yankee) { _fun00002_ip = 949; continue _fun00001 }
 774:
            backup = _closure1_slot6;
            source = _closure1_slot0;
            sizing = _closure1_slot2;
            yankee = sizing[kilo];
            yankee = source.bind(tango)(yankee);
            romeo = yankee.ActionSheetRow;
            yankee = {};
            output = sizing[kilo];
            output = source.bind(tango)(output);
            output = output.ActionSheetRow;
            update = output.Icon;
            output = {};
            control = 23;
            control = sizing[control];
            control = source.bind(tango)(control);
            control = control.BookmarkIcon;
            output['IconComponent'] = control;
            vacuum = _closure1_slot1;
            control = 24;
            control = sizing[control];
            control = vacuum.bind(tango)(control);
            output['source'] = control;
            output = backup.bind(tango)(update, output);
            yankee['icon'] = output;
            output = sizing[result];
            output = source.bind(tango)(output);
            update = output.intl;
            output = update.string;
            sizing = sizing[result];
            sizing = source.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.2pAkDA;
            sizing = output.bind(update)(sizing);
            yankee['label'] = sizing;
            yankee['onPress'] = options;
            yankee['arrow'] = verify;
            options = 'for-later';
            offset = backup.bind(tango)(romeo, yankee, options);
 949:
            options = new Array(2);
            options[0] = offset;
            romeo = _closure1_slot6;
            output = _closure1_slot0;
            backup = _closure1_slot2;
            offset = backup[kilo];
            offset = output.bind(tango)(offset);
            yankee = offset.ActionSheetRow;
            offset = {};
            kilo = backup[kilo];
            kilo = output.bind(tango)(kilo);
            kilo = kilo.ActionSheetRow;
            sizing = kilo.Icon;
            kilo = {};
            update = 25;
            update = backup[update];
            update = output.bind(tango)(update);
            update = update.SettingsIcon;
            kilo['IconComponent'] = update;
            update = _closure1_slot1;
            echo = 26;
            echo = backup[echo];
            echo = update.bind(tango)(echo);
            kilo['source'] = echo;
            kilo = romeo.bind(tango)(sizing, kilo);
            offset['icon'] = kilo;
            kilo = backup[result];
            kilo = output.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = backup[result];
            backup = output.bind(tango)(backup);
            backup = backup.t;
            backup = backup.h850Sk;
            backup = kilo.bind(sizing)(backup);
            offset['label'] = backup;
            offset['onPress'] = foxtrot;
            offset['arrow'] = verify;
            verify = 'settings';
            verify = romeo.bind(tango)(yankee, offset, verify);
            options[1] = verify;
            oscar['children'] = options;
            oscar = zulu.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();