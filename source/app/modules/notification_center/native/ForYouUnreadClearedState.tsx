// app/modules/notification_center/native/ForYouUnreadClearedState.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    offset = 2;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    yankee = 4;
    verify = {'marginBottom': 4, 'marginHorizontal': 24, 'alignItems': 'center', 'flexDirection': 'row'};
    tangon['container'] = verify;
    verify = {'width': 48, 'height': 48, 'backgroundColor': null, 'opacity': 0.16, 'borderRadius': null, 'marginRight': 16, 'justifyContent': 'center', 'alignItems': 'center'};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.unsafe_rawColors;
    foxtra = foxtra.GREEN_400;
    verify['backgroundColor'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.xl;
    verify['borderRadius'] = foxtra;
    tangon['imageContainer'] = verify;
    verify = {'margin': 12, 'position': 'absolute'};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    yankee = yankee.GREEN_400;
    verify['color'] = yankee;
    tangon['icon'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tangon['headerText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/notification_center/native/ForYouUnreadClearedState.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() {
        entity = _closure1_slot6;
        tangon = undefined;
        yankee = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        michal = _closure1_slot3;
        entity = {};
        report = yankee.container;
        entity['style'] = report;
        offset = _closure1_slot4;
        report = {};
        oscard = yankee.imageContainer;
        report['style'] = oscard;
        oscard = offset.bind(tangon)(michal, report);
        report = new Array(3);
        report[0] = oscard;
        romeon = _closure1_slot1;
        kiloes = _closure1_slot2;
        oscard = 5;
        oscard = kiloes[oscard];
        option = romeon.bind(tangon)(oscard);
        oscard = {};
        verify = 6;
        verify = kiloes[verify];
        verify = romeon.bind(tangon)(verify);
        oscard['source'] = verify;
        verify = yankee.icon;
        oscard['style'] = verify;
        verify = yankee.icon;
        verify = verify.color;
        oscard['color'] = verify;
        oscard = offset.bind(tangon)(option, oscard);
        report[1] = oscard;
        oscard = {};
        backup = _closure1_slot0;
        option = 7;
        golfie = kiloes[option];
        golfie = backup.bind(tangon)(golfie);
        verify = golfie.Text;
        golfie = {'color': 'header-primary', 'variant': 'text-md/semibold'};
        yankee = yankee.headerText;
        golfie['style'] = yankee;
        yankee = 8;
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        sizing = romeon.intl;
        foxtra = sizing.string;
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.DonStr;
        romeon = foxtra.bind(sizing)(romeon);
        golfie['children'] = romeon;
        verify = offset.bind(tangon)(verify, golfie);
        golfie = new Array(2);
        golfie[0] = verify;
        option = kiloes[option];
        option = backup.bind(tangon)(option);
        verify = option.Text;
        option = {'color': 'header-secondary', 'variant': 'text-md/medium'};
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        yankee = kiloes[yankee];
        yankee = backup.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.jXFsam;
        yankee = romeon.bind(foxtra)(yankee);
        option['children'] = yankee;
        option = offset.bind(tangon)(verify, option);
        golfie[1] = option;
        oscard['children'] = golfie;
        oscard = zuuluu.bind(tangon)(michal, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['ForYouUnreadClearedState'] = michal;
    return entity;
})();