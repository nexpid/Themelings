// app/modules/notification_center/native/ForYouUnreadClearedState.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    offset = 2;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    yankee = 4;
    verify = {'marginBottom': 4, 'marginHorizontal': 24, 'alignItems': 'center', 'flexDirection': 'row'};
    tango['container'] = verify;
    verify = {'width': 48, 'height': 48, 'backgroundColor': null, 'opacity': 0.16, 'borderRadius': null, 'marginRight': 16, 'justifyContent': 'center', 'alignItems': 'center'};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.unsafe_rawColors;
    foxtrot = foxtrot.GREEN_400;
    verify['backgroundColor'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xl;
    verify['borderRadius'] = foxtrot;
    tango['imageContainer'] = verify;
    verify = {'margin': 12, 'position': 'absolute'};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    yankee = yankee.GREEN_400;
    verify['color'] = yankee;
    tango['icon'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tango['headerText'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/notification_center/native/ForYouUnreadClearedState.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() {
        entity = _closure1_slot6;
        tango = undefined;
        yankee = entity.bind(tango)();
        zulu = _closure1_slot5;
        mike = _closure1_slot3;
        entity = {};
        report = yankee.container;
        entity['style'] = report;
        offset = _closure1_slot4;
        report = {};
        oscar = yankee.imageContainer;
        report['style'] = oscar;
        oscar = offset.bind(tango)(mike, report);
        report = new Array(3);
        report[0] = oscar;
        romeo = _closure1_slot1;
        kilo = _closure1_slot2;
        oscar = 5;
        oscar = kilo[oscar];
        options = romeo.bind(tango)(oscar);
        oscar = {};
        verify = 6;
        verify = kilo[verify];
        verify = romeo.bind(tango)(verify);
        oscar['source'] = verify;
        verify = yankee.icon;
        oscar['style'] = verify;
        verify = yankee.icon;
        verify = verify.color;
        oscar['color'] = verify;
        oscar = offset.bind(tango)(options, oscar);
        report[1] = oscar;
        oscar = {};
        backup = _closure1_slot0;
        options = 7;
        golf = kilo[options];
        golf = backup.bind(tango)(golf);
        verify = golf.Text;
        golf = {'color': 'header-primary', 'variant': 'text-md/semibold'};
        yankee = yankee.headerText;
        golf['style'] = yankee;
        yankee = 8;
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        sizing = romeo.intl;
        foxtrot = sizing.string;
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.DonStr;
        romeo = foxtrot.bind(sizing)(romeo);
        golf['children'] = romeo;
        verify = offset.bind(tango)(verify, golf);
        golf = new Array(2);
        golf[0] = verify;
        options = kilo[options];
        options = backup.bind(tango)(options);
        verify = options.Text;
        options = {'color': 'header-secondary', 'variant': 'text-md/medium'};
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        yankee = kilo[yankee];
        yankee = backup.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.jXFsam;
        yankee = romeo.bind(foxtrot)(yankee);
        options['children'] = yankee;
        options = offset.bind(tango)(verify, options);
        golf[1] = options;
        oscar['children'] = golf;
        oscar = zulu.bind(tango)(mike, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['ForYouUnreadClearedState'] = mike;
    return entity;
})();