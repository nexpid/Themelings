// app/modules/notification_center/native/ForYouMentionPlaceholder.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    offset = 4;
    tango = oscar[offset];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flexDirection': 'row', 'marginBottom': 16, 'marginHorizontal': 24};
    tango['placeholder'] = verify;
    verify = {'backgroundColor': null, 'height': 52, 'width': 52, 'borderRadius': 26, 'marginEnd': 12};
    yankee = 5;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_MOD_STRONG;
    verify['backgroundColor'] = foxtrot;
    tango['placeholderImage'] = verify;
    verify = {'backgroundColor': null, 'height': 15, 'borderRadius': null, 'marginRight': 12, 'marginBottom': 4};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_MOD_STRONG;
    verify['backgroundColor'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    verify['borderRadius'] = foxtrot;
    tango['placeholderText'] = verify;
    verify = {'flexDirection': 'row', 'flexWrap': 'wrap'};
    tango['placeholderTextContainer'] = verify;
    verify = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_MOD_STRONG;
    verify['backgroundColor'] = foxtrot;
    foxtrot = 40;
    verify['height'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.sm;
    verify['borderRadius'] = yankee;
    verify['marginTop'] = offset;
    tango['placeholderBody'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = [70, 50];
    var _closure1_slot8 = tango;
    tango = {};
    golf = 'function ForYouMentionPlaceholderTsx1(){const{reducedMotion,opacity}=this.__closure;return{opacity:reducedMotion?0.7:opacity.get()};}';
    tango['code'] = golf;
    var _closure1_slot9 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/notification_center/native/ForYouMentionPlaceholder.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() {
        entity = _closure1_slot7;
        tango = undefined;
        yankee = entity.bind(tango)();
        var _closure2_slot0 = yankee;
        zulu = _closure1_slot0;
        report = _closure1_slot2;
        entity = 6;
        entity = report[entity];
        golf = zulu.bind(tango)(entity);
        oscar = golf.useStateFromStores;
        entity = _closure1_slot4;
        mike = new Array(1);
        mike[0] = entity;
        entity = function() {
            entity = _closure1_slot4;
            entity = entity.useReducedMotion;
            return entity;
        };
        offset = oscar.bind(golf)(mike, entity);
        var _closure2_slot1 = offset;
        entity = 7;
        mike = report[entity];
        golf = zulu.bind(tango)(mike);
        oscar = golf.useSharedValue;
        mike = 0.3;
        options = oscar.bind(golf)(mike);
        var _closure2_slot2 = options;
        oscar = options.set;
        mike = report[entity];
        kilo = zulu.bind(tango)(mike);
        backup = kilo.withRepeat;
        mike = 8;
        mike = report[mike];
        sizing = zulu.bind(tango)(mike);
        foxtrot = sizing.withTiming;
        golf = {};
        mike = 1000;
        golf['duration'] = mike;
        mike = report[entity];
        mike = zulu.bind(tango)(mike);
        result = mike.Easing;
        output = result.inOut;
        mike = report[entity];
        mike = zulu.bind(tango)(mike);
        mike = mike.Easing;
        mike = mike.ease;
        mike = output.bind(result)(mike);
        golf['easing'] = mike;
        mike = 0.7;
        foxtrot = foxtrot.bind(sizing)(mike, golf);
        golf = -1;
        mike = true;
        mike = backup.bind(kilo)(foxtrot, golf, mike);
        mike = oscar.bind(options)(mike);
        mike = report[entity];
        oscar = zulu.bind(tango)(mike);
        zulu = oscar.useAnimatedStyle;
        mike = function() { // Original name: y
            _fun116444: for(var _fun116444_ip = 0; ; ) switch(_fun116444_ip) {
 0:
                entity = {};
                tango = _closure2_slot1;
                mike = 0.7;
                if(tango) { _fun116444_ip = 35; continue _fun116444 }
 22:
                tango = _closure2_slot2;
                zulu = tango.get;
                mike = zulu.bind(tango)();
 35:
                entity['opacity'] = mike;
                return entity;
            }
        };
        golf = {};
        golf['reducedMotion'] = offset;
        golf['opacity'] = options;
        mike['__closure'] = golf;
        golf = 8828208724188.0;
        mike['__workletHash'] = golf;
        golf = _closure1_slot9;
        mike['__initData'] = golf;
        oscar = zulu.bind(oscar)(mike);
        zulu = _closure1_slot6;
        mike = _closure1_slot1;
        entity = report[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.View;
        entity = {};
        golf = yankee.placeholder;
        report = new Array(2);
        report[0] = golf;
        report[1] = oscar;
        entity['style'] = report;
        offset = _closure1_slot5;
        golf = _closure1_slot3;
        report = {};
        oscar = yankee.placeholderImage;
        report['style'] = oscar;
        oscar = offset.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = {};
        options = {};
        foxtrot = yankee.placeholderTextContainer;
        options['style'] = foxtrot;
        foxtrot = _closure1_slot8;
        romeo = foxtrot.map;
        verify = function(argFoo, argBar) {
            report = _closure1_slot5;
            tango = _closure1_slot3;
            zulu = {};
            entity = _closure2_slot0;
            mike = entity.placeholderText;
            entity = new Array(2);
            entity[0] = mike;
            mike = {};
            oscar = global;
            oscar = oscar.HermesInternal;
            verify = oscar.concat;
            options = '';
            golf = argFoo;
            oscar = '%';
            oscar = verify.bind(options)(golf, oscar);
            mike['width'] = oscar;
            entity[1] = mike;
            zulu['style'] = entity;
            mike = undefined;
            entity = argBar;
            entity = report.bind(mike)(tango, zulu, entity);
            return entity;
        };
        verify = romeo.bind(foxtrot)(verify);
        options['children'] = verify;
        verify = offset.bind(tango)(golf, options);
        options = new Array(2);
        options[0] = verify;
        verify = {};
        romeo = yankee.placeholderBody;
        yankee = new Array(2);
        yankee[0] = romeo;
        romeo = {};
        foxtrot = '85%';
        romeo['width'] = foxtrot;
        yankee[1] = romeo;
        verify['style'] = yankee;
        verify = offset.bind(tango)(golf, verify);
        options[1] = verify;
        oscar['children'] = options;
        oscar = zulu.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['ForYouMentionPlaceholder'] = mike;
    return entity;
})();