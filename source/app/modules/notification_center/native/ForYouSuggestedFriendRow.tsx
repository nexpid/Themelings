// app/modules/notification_center/native/ForYouSuggestedFriendRow.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticEvents;
    var _closure1_slot7 = golf;
    tango = tango.RelationshipTypes;
    var _closure1_slot8 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot9 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot10 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot11 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = function(argFoo) {
        _fun116548: for(var _fun116548_ip = 0; ; ) switch(_fun116548_ip) {
 0:
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 7;
            mike = yankee[entity];
            golf = undefined;
            tango = offset.bind(golf)(mike);
            zulu = tango.getLayoutStyles;
            mike = argFoo;
            zulu = zulu.bind(tango)(mike);
            entity = yankee[entity];
            tango = offset.bind(golf)(entity);
            mike = tango.makeSizeStyle;
            entity = zulu.icon;
            entity = entity.wrapper;
            entity = entity.size;
            tango = mike.bind(tango)(entity);
            entity = {};
            mike = {};
            foxtrot = _closure1_slot1;
            options = 8;
            oscar = yankee[options];
            oscar = foxtrot.bind(golf)(oscar);
            oscar = oscar.colors;
            oscar = oscar.BG_MOD_FAINT;
            mike['backgroundColor'] = oscar;
            entity['rowActive'] = mike;
            mike = {};
            oscar = 1;
            mike['flex'] = oscar;
            entity['pressable'] = mike;
            mike = {'flexDirection': 'column', 'flexGrow': 2, 'flexShrink': 2, 'alignSelf': 'center', 'overflow': 'hidden', 'marginTop': 4294967294};
            verify = 2;
            romeo = yankee[options];
            romeo = foxtrot.bind(golf)(romeo);
            romeo = romeo.spacing;
            romeo = romeo.PX_8;
            mike['marginRight'] = romeo;
            entity['textContainer'] = mike;
            mike = {};
            mike['flexShrink'] = oscar;
            oscar = 9;
            oscar = yankee[oscar];
            offset = offset.bind(golf)(oscar);
            oscar = offset.isAndroid;
            offset = oscar.bind(offset)();
            oscar = 0;
            if(!offset) { _fun116548_ip = 212; continue _fun116548 }
 209:
            oscar = verify;
 212:
            mike['marginBottom'] = oscar;
            entity['nameText'] = mike;
            mike = {'position': 'relative', 'borderRadius': null, 'justifyContent': 'center', 'alignItems': 'center', 'flexShrink': 0, 'flexGrow': 0};
            oscar = _closure1_slot1;
            report = _closure1_slot2;
            report = report[options];
            report = oscar.bind(golf)(report);
            report = report.radii;
            report = report.round;
            mike['borderRadius'] = report;
            kilo = mike;
            backup = tango;
            tango = copyDataProperties(kilo, backup);
            zulu = zulu.icon;
            zulu = zulu.margin;
            tango = zulu.marginRight;
            zulu = 4;
            tango = tango + zulu;
            zulu = 'marginRight';
            mike[zulu] = tango;
            entity['avatar'] = mike;
            mike = {};
            zulu = 0.8;
            mike['opacity'] = zulu;
            entity['subtitle'] = mike;
            return entity;
        }
    };
    tango = golf.bind(options)(tango);
    var _closure1_slot12 = tango;
    tango = 27;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/notification_center/native/ForYouSuggestedFriendRow.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ForYouSuggestedFriendRow
        _fun116549: for(var _fun116549_ip = 0; ; ) switch(_fun116549_ip) {
 0:
            entity = argFoo;
            config = entity.suggestedFriend;
            var _closure2_slot0 = config;
            mike = entity.onAddSuggestion;
            var _closure2_slot1 = mike;
            mike = entity.onAddSuggestionAnimationFinish;
            var _closure2_slot2 = mike;
            tango = entity.panelVariant;
            options = undefined;
            if(!(tango === options)) { _fun116549_ip = 49; continue _fun116549 }
 47:
            tango = false;
 49:
            var _closure2_slot3 = options;
            var _closure2_slot4 = options;
            var _closure2_slot5 = options;
            report = _closure1_slot0;
            zulu = _closure1_slot2;
            vacuum = 7;
            entity = zulu[vacuum];
            mike = report.bind(options)(entity);
            entity = mike.useMessagesTabLayout;
            oscar = entity.bind(mike)(tango);
            entity = _closure1_slot12;
            whiskey = entity.bind(options)(oscar);
            mike = _closure1_slot1;
            entity = 10;
            entity = zulu[entity];
            entity = mike.bind(options)(entity);
            entity = entity.bind(options)();
            mike = entity.analyticsLocations;
            _closure2_slot3 = mike;
            entity = zulu[vacuum];
            golf = report.bind(options)(entity);
            entity = golf.getLayoutStyles;
            source = entity.bind(golf)(oscar);
            entity = 11;
            entity = zulu[entity];
            golf = report.bind(options)(entity);
            entity = golf.useFontScale;
            foxtrot = entity.bind(golf)();
            entity = 12;
            zulu = zulu[entity];
            verify = report.bind(options)(zulu);
            golf = verify.useStateFromStoresObject;
            zulu = _closure1_slot5;
            report = new Array(1);
            report[0] = zulu;
            zulu = function() {
                entity = _closure1_slot5;
                entity = entity.useReducedMotion;
                return entity;
            };
            echo = golf.bind(verify)(report, zulu);
            golf = _closure1_slot3;
            report = golf.useCallback;
            zulu = new Array(2);
            zulu[0] = config;
            zulu[1] = mike;
            mike = function() {
                tango = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 14;
                zulu = mike[entity];
                entity = undefined;
                tango = tango.bind(entity)(zulu);
                zulu = 13;
                zulu = mike[zulu];
                mike = mike.paths;
                tango = tango.bind(entity)(zulu, mike);
                zulu = tango.then;
                mike = function(argFoo) {
                    entity = argFoo;
                    zulu = entity.default;
                    mike = {};
                    tango = _closure2_slot0;
                    report = tango.user;
                    report = report.id;
                    mike['userId'] = report;
                    tango = tango.user;
                    mike['localUser'] = tango;
                    entity = _closure2_slot3;
                    mike['sourceAnalyticsLocations'] = entity;
                    entity = 'Notifications Tab User Profile';
                    mike['location'] = entity;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
                    return entity;
                };
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            verify = report.bind(golf)(mike, zulu);
            mike = config.friendSuggestionName;
            zulu = null;
            report = tango;
            if(!(zulu != mike)) { _fun116549_ip = 285; continue _fun116549 }
 268:
            mike = config.friendSuggestionName;
            tango = mike.length;
            mike = 0;
            if(!(!(tango > mike))) { _fun116549_ip = 323; continue _fun116549 }
 285:
            tango = _closure1_slot1;
            golf = _closure1_slot2;
            mike = 15;
            mike = golf[mike];
            golf = tango.bind(options)(mike);
            tango = golf.getName;
            mike = config.user;
            tango = tango.bind(golf)(mike);
            _fun116549_ip = 329; continue _fun116549;
 323:
            tango = config.friendSuggestionName;
 329:
            golf = _closure1_slot0;
            offset = _closure1_slot2;
            mike = 16;
            mike = offset[mike];
            golf = golf.bind(options)(mike);
            mike = golf.getSuggestedContactNameForSuggestion;
            golf = mike.bind(golf)(tango, config);
            mike = zulu != golf;
            lima = '';
            papa = tango;
            sierra = lima;
            if(!mike) { _fun116549_ip = 402; continue _fun116549 }
 378:
            mike = global;
            mike = mike.HermesInternal;
            tango = mike.concat;
            mike = ' · ';
            sierra = tango.bind(mike)(golf);
 402:
            mike = config.mutualFriendsCount;
            if(!(zulu != mike)) { _fun116549_ip = 424; continue _fun116549 }
 412:
            zulu = config.mutualFriendsCount;
            mike = 0;
            if(!(!(zulu > mike))) { _fun116549_ip = 462; continue _fun116549 }
 424:
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            mike = 15;
            mike = tango[mike];
            tango = zulu.bind(options)(mike);
            zulu = tango.getName;
            mike = config.user;
            control = zulu.bind(tango)(mike);
            _fun116549_ip = 530; continue _fun116549;
 462:
            zulu = _closure1_slot0;
            offset = _closure1_slot2;
            mike = 17;
            tango = offset[mike];
            tango = zulu.bind(options)(tango);
            golf = tango.intl;
            tango = golf.formatToPlainString;
            mike = offset[mike];
            mike = zulu.bind(options)(mike);
            mike = mike.t;
            zulu = mike.z7y34e;
            mike = {};
            offset = config.mutualFriendsCount;
            mike['count'] = offset;
            control = tango.bind(golf)(zulu, mike);
 530:
            status = _closure1_slot0;
            target = _closure1_slot2;
            mike = 18;
            mike = target[mike];
            tango = status.bind(options)(mike);
            zulu = tango.useSharedValue;
            mike = false;
            sequence = zulu.bind(tango)(mike);
            _closure2_slot4 = sequence;
            entity = target[entity];
            tango = status.bind(options)(entity);
            zulu = tango.useStateFromStores;
            entity = _closure1_slot6;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                tango = _closure1_slot6;
                zulu = tango.getRelationshipType;
                mike = _closure2_slot0;
                mike = mike.user;
                mike = mike.id;
                mike = zulu.bind(tango)(mike);
                entity = _closure1_slot8;
                entity = entity.PENDING_OUTGOING;
                entity = mike === entity;
                return entity;
            };
            entity = zulu.bind(tango)(mike, entity);
            _closure2_slot5 = entity;
            tango = _closure1_slot3;
            zulu = tango.useEffect;
            mike = new Array(2);
            mike[0] = sequence;
            mike[1] = entity;
            entity = function() {
                _fun116554: for(var _fun116554_ip = 0; ; ) switch(_fun116554_ip) {
 0:
                    mike = _closure2_slot5;
                    if(mike) { _fun116554_ip = 26; continue _fun116554 }
 10:
                    zulu = _closure2_slot4;
                    mike = zulu.set;
                    entity = false;
                    entity = mike.bind(zulu)(entity);
 26:
                    entity = undefined;
                    return entity;
                }
            };
            entity = zulu.bind(tango)(entity, mike);
            entity = 19;
            entity = target[entity];
            tango = status.bind(options)(entity);
            zulu = tango.renderChannelPressableWrapper;
            golf = _closure1_slot9;
            entity = 20;
            entity = target[entity];
            entity = status.bind(options)(entity);
            mike = entity.PressableHighlight;
            entity = {};
            offset = 'button';
            entity['accessibilityRole'] = offset;
            offset = whiskey.rowActive;
            offset = offset.backgroundColor;
            entity['underlayColor'] = offset;
            entity['onPress'] = verify;
            offset = whiskey.pressable;
            verify = new Array(2);
            verify[0] = offset;
            offset = {};
            yankee = source.container;
            yankee = yankee.borderRadius;
            offset['borderRadius'] = yankee;
            verify[1] = offset;
            entity['style'] = verify;
            verify = 21;
            verify = target[verify];
            romeo = status.bind(options)(verify);
            yankee = romeo.renderChannelWrapper;
            backup = _closure1_slot10;
            offset = _closure1_slot11;
            verify = {};
            result = _closure1_slot4;
            kilo = {};
            output = whiskey.avatar;
            kilo['style'] = output;
            record = _closure1_slot1;
            output = 22;
            output = target[output];
            record = record.bind(options)(output);
            output = {};
            context = config.user;
            output['user'] = context;
            output['guildId'] = options;
            context = source.icon;
            context = context.avatarSize;
            output['size'] = context;
            context = !echo;
            output['animate'] = context;
            output = golf.bind(options)(record, output);
            kilo['children'] = output;
            output = golf.bind(options)(result, kilo);
            kilo = new Array(3);
            kilo[0] = output;
            output = {};
            record = whiskey.textContainer;
            output['style'] = record;
            record = 23;
            record = target[record];
            record = status.bind(options)(record);
            context = record.Text;
            record = {'lineClamp': 1, 'variant': null, 'color': 'text-normal'};
            equality = source.channelName;
            equality = equality.text;
            equality = equality.variant;
            record['variant'] = equality;
            whiskey = whiskey.nameText;
            record['style'] = whiskey;
            record['children'] = papa;
            context = golf.bind(options)(context, record);
            record = new Array(2);
            record[0] = context;
            context = {};
            papa = {};
            variable37 = 9;
            target = target[variable37];
            status = status.bind(options)(target);
            target = status.isAndroid;
            status = target.bind(status)();
            target = 0;
            if(!status) { _fun116549_ip = 1002; continue _fun116549 }
 996:
            target = -2;
 1002:
            papa['marginTop'] = target;
            context['style'] = papa;
            status = _closure1_slot9;
            variable36 = _closure1_slot0;
            quebec = _closure1_slot2;
            papa = 24;
            papa = quebec[papa];
            papa = variable36.bind(options)(papa);
            target = papa.ActionStatusSubLabel;
            papa = {};
            whiskey = source.messagePreview;
            whiskey = whiskey.height;
            quebec = quebec[variable37];
            variable36 = variable36.bind(options)(quebec);
            quebec = variable36.isAndroid;
            quebec = quebec.bind(variable36)();
            equality = 0;
            if(!quebec) { _fun116549_ip = 1079; continue _fun116549 }
 1076:
            equality = 2;
 1079:
            whiskey = whiskey + equality;
            papa['lineHeight'] = whiskey;
            source = source.messagePreview;
            source = source.text;
            source = source.variant;
            papa['textVariant'] = source;
            papa['actioned'] = sequence;
            source = 1.75;
            papa['maxFontSizeMultiplier'] = source;
            source = global;
            source = source.HermesInternal;
            source = source.concat;
            source = source.bind(lima)(control, sierra);
            papa['label'] = source;
            control = _closure1_slot0;
            source = _closure1_slot2;
            sierra = 17;
            lima = source[sierra];
            lima = control.bind(options)(lima);
            whiskey = lima.intl;
            lima = whiskey.string;
            sierra = source[sierra];
            sierra = control.bind(options)(sierra);
            sierra = sierra.t;
            sierra = sierra.Kzyxm5;
            sierra = lima.bind(whiskey)(sierra);
            papa['actionStatus'] = sierra;
            sierra = !echo;
            papa['animate'] = sierra;
            papa = status.bind(options)(target, papa);
            context['children'] = papa;
            context = golf.bind(options)(result, context);
            record[1] = context;
            output['children'] = record;
            output = backup.bind(options)(result, output);
            kilo[1] = output;
            result = _closure1_slot9;
            sizing = 25;
            sizing = source[sizing];
            sizing = control.bind(options)(sizing);
            output = sizing.ContactSuggestionActions;
            sizing = {};
            config = config.user;
            sizing['user'] = config;
            sizing['added'] = sequence;
            source = source[vacuum];
            control = control.bind(options)(source);
            source = control.isLayoutCozy;
            control = source.bind(control)(oscar);
            source = 'sm';
            if(!control) { _fun116549_ip = 1323; continue _fun116549 }
 1319:
            source = 'md';
 1323:
            sizing['size'] = source;
            source = function(argFoo) { // Original name: onAddSuggestion
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 26;
                zulu = zulu[entity];
                entity = undefined;
                golf = tango.bind(entity)(zulu);
                oscar = golf.track;
                mike = _closure1_slot7;
                report = mike.FRIEND_SUGGESTION_ADDED;
                tango = {};
                mike = argFoo;
                mike = mike.id;
                tango['suggested_user_id'] = mike;
                zulu = _closure2_slot0;
                options = zulu.source;
                tango['suggestion_source'] = options;
                options = 'Notifications Tab';
                tango['location'] = options;
                tango = oscar.bind(golf)(report, tango);
                mike = _closure2_slot1;
                mike = mike.bind(entity)(zulu);
                return entity;
            };
            sizing['onAddSuggestion'] = source;
            update = function() { // Original name: onFinishAnimation
                zulu = _closure2_slot2;
                mike = _closure2_slot0;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            sizing['onFinishAnimation'] = update;
            echo = !echo;
            sizing['animate'] = echo;
            sizing = result.bind(options)(output, sizing);
            kilo[2] = sizing;
            verify['children'] = kilo;
            offset = backup.bind(options)(offset, verify);
            verify = {};
            verify['layout'] = oscar;
            verify['fontScale'] = foxtrot;
            verify['panelVariant'] = report;
            verify = yankee.bind(romeo)(offset, verify);
            entity['children'] = verify;
            mike = golf.bind(options)(mike, entity);
            entity = {};
            entity['layout'] = oscar;
            entity['panelVariant'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();