// app/modules/notification_center/native/ForYouSuggestedFriendRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticEvents;
    var _closure1_slot7 = golfie;
    tangon = tangon.RelationshipTypes;
    var _closure1_slot8 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot9 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot11 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 7;
            michal = yankee[entity];
            golfie = undefined;
            tangon = offset.bind(golfie)(michal);
            zuuluu = tangon.getLayoutStyles;
            michal = argFoo;
            zuuluu = zuuluu.bind(tangon)(michal);
            entity = yankee[entity];
            tangon = offset.bind(golfie)(entity);
            michal = tangon.makeSizeStyle;
            entity = zuuluu.icon;
            entity = entity.wrapper;
            entity = entity.size;
            tangon = michal.bind(tangon)(entity);
            entity = {};
            michal = {};
            foxtra = _closure1_slot1;
            option = 8;
            oscard = yankee[option];
            oscard = foxtra.bind(golfie)(oscard);
            oscard = oscard.colors;
            oscard = oscard.BG_MOD_FAINT;
            michal['backgroundColor'] = oscard;
            entity['rowActive'] = michal;
            michal = {};
            oscard = 1;
            michal['flex'] = oscard;
            entity['pressable'] = michal;
            michal = {'flexDirection': 'column', 'flexGrow': 2, 'flexShrink': 2, 'alignSelf': 'center', 'overflow': 'hidden', 'marginTop': 4294967294};
            verify = 2;
            romeon = yankee[option];
            romeon = foxtra.bind(golfie)(romeon);
            romeon = romeon.spacing;
            romeon = romeon.PX_8;
            michal['marginRight'] = romeon;
            entity['textContainer'] = michal;
            michal = {};
            michal['flexShrink'] = oscard;
            oscard = 9;
            oscard = yankee[oscard];
            offset = offset.bind(golfie)(oscard);
            oscard = offset.isAndroid;
            offset = oscard.bind(offset)();
            oscard = 0;
            if(!offset) { _fun00002_ip = 212; continue _fun00001 }
 209:
            oscard = verify;
 212:
            michal['marginBottom'] = oscard;
            entity['nameText'] = michal;
            michal = {'position': 'relative', 'borderRadius': null, 'justifyContent': 'center', 'alignItems': 'center', 'flexShrink': 0, 'flexGrow': 0};
            oscard = _closure1_slot1;
            report = _closure1_slot2;
            report = report[option];
            report = oscard.bind(golfie)(report);
            report = report.radii;
            report = report.round;
            michal['borderRadius'] = report;
            kiloes = michal;
            backup = tangon;
            tangon = copyDataProperties(kiloes, backup);
            zuuluu = zuuluu.icon;
            zuuluu = zuuluu.margin;
            tangon = zuuluu.marginRight;
            zuuluu = 4;
            tangon = tangon + zuuluu;
            zuuluu = 'marginRight';
            michal[zuuluu] = tangon;
            entity['avatar'] = michal;
            michal = {};
            zuuluu = 0.8;
            michal['opacity'] = zuuluu;
            entity['subtitle'] = michal;
            return entity;
        }
    };
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 27;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/notification_center/native/ForYouSuggestedFriendRow.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ForYouSuggestedFriendRow
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            config = entity.suggestedFriend;
            var _closure2_slot0 = config;
            michal = entity.onAddSuggestion;
            var _closure2_slot1 = michal;
            michal = entity.onAddSuggestionAnimationFinish;
            var _closure2_slot2 = michal;
            tangon = entity.panelVariant;
            option = undefined;
            if(!(tangon === option)) { _fun00004_ip = 49; continue _fun00003 }
 47:
            tangon = false;
 49:
            var _closure2_slot3 = option;
            var _closure2_slot4 = option;
            var _closure2_slot5 = option;
            report = _closure1_slot0;
            zuuluu = _closure1_slot2;
            vacuum = 7;
            entity = zuuluu[vacuum];
            michal = report.bind(option)(entity);
            entity = michal.useMessagesTabLayout;
            oscard = entity.bind(michal)(tangon);
            entity = _closure1_slot12;
            whisks = entity.bind(option)(oscard);
            michal = _closure1_slot1;
            entity = 10;
            entity = zuuluu[entity];
            entity = michal.bind(option)(entity);
            entity = entity.bind(option)();
            michal = entity.analyticsLocations;
            _closure2_slot3 = michal;
            entity = zuuluu[vacuum];
            golfie = report.bind(option)(entity);
            entity = golfie.getLayoutStyles;
            source = entity.bind(golfie)(oscard);
            entity = 11;
            entity = zuuluu[entity];
            golfie = report.bind(option)(entity);
            entity = golfie.useFontScale;
            foxtra = entity.bind(golfie)();
            entity = 12;
            zuuluu = zuuluu[entity];
            verify = report.bind(option)(zuuluu);
            golfie = verify.useStateFromStoresObject;
            zuuluu = _closure1_slot5;
            report = new Array(1);
            report[0] = zuuluu;
            zuuluu = function() {
                entity = _closure1_slot5;
                entity = entity.useReducedMotion;
                return entity;
            };
            echoed = golfie.bind(verify)(report, zuuluu);
            golfie = _closure1_slot3;
            report = golfie.useCallback;
            zuuluu = new Array(2);
            zuuluu[0] = config;
            zuuluu[1] = michal;
            michal = function() {
                tangon = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 14;
                zuuluu = michal[entity];
                entity = undefined;
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = 13;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                tangon = tangon.bind(entity)(zuuluu, michal);
                zuuluu = tangon.then;
                michal = function(argFoo) {
                    entity = argFoo;
                    zuuluu = entity.default;
                    michal = {};
                    tangon = _closure2_slot0;
                    report = tangon.user;
                    report = report.id;
                    michal['userId'] = report;
                    tangon = tangon.user;
                    michal['localUser'] = tangon;
                    entity = _closure2_slot3;
                    michal['sourceAnalyticsLocations'] = entity;
                    entity = 'Notifications Tab User Profile';
                    michal['location'] = entity;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            verify = report.bind(golfie)(michal, zuuluu);
            michal = config.friendSuggestionName;
            zuuluu = null;
            report = tangon;
            if(!(zuuluu != michal)) { _fun00004_ip = 285; continue _fun00003 }
 268:
            michal = config.friendSuggestionName;
            tangon = michal.length;
            michal = 0;
            if(!(!(tangon > michal))) { _fun00004_ip = 323; continue _fun00003 }
 285:
            tangon = _closure1_slot1;
            golfie = _closure1_slot2;
            michal = 15;
            michal = golfie[michal];
            golfie = tangon.bind(option)(michal);
            tangon = golfie.getName;
            michal = config.user;
            tangon = tangon.bind(golfie)(michal);
            _fun00004_ip = 329; continue _fun00003;
 323:
            tangon = config.friendSuggestionName;
 329:
            golfie = _closure1_slot0;
            offset = _closure1_slot2;
            michal = 16;
            michal = offset[michal];
            golfie = golfie.bind(option)(michal);
            michal = golfie.getSuggestedContactNameForSuggestion;
            golfie = michal.bind(golfie)(tangon, config);
            michal = zuuluu != golfie;
            limora = '';
            papara = tangon;
            sierra = limora;
            if(!michal) { _fun00004_ip = 402; continue _fun00003 }
 378:
            michal = global;
            michal = michal.HermesInternal;
            tangon = michal.concat;
            michal = ' · ';
            sierra = tangon.bind(michal)(golfie);
 402:
            michal = config.mutualFriendsCount;
            if(!(zuuluu != michal)) { _fun00004_ip = 424; continue _fun00003 }
 412:
            zuuluu = config.mutualFriendsCount;
            michal = 0;
            if(!(!(zuuluu > michal))) { _fun00004_ip = 462; continue _fun00003 }
 424:
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            michal = 15;
            michal = tangon[michal];
            tangon = zuuluu.bind(option)(michal);
            zuuluu = tangon.getName;
            michal = config.user;
            ctrled = zuuluu.bind(tangon)(michal);
            _fun00004_ip = 530; continue _fun00003;
 462:
            zuuluu = _closure1_slot0;
            offset = _closure1_slot2;
            michal = 17;
            tangon = offset[michal];
            tangon = zuuluu.bind(option)(tangon);
            golfie = tangon.intl;
            tangon = golfie.formatToPlainString;
            michal = offset[michal];
            michal = zuuluu.bind(option)(michal);
            michal = michal.t;
            zuuluu = michal.z7y34e;
            michal = {};
            offset = config.mutualFriendsCount;
            michal['count'] = offset;
            ctrled = tangon.bind(golfie)(zuuluu, michal);
 530:
            status = _closure1_slot0;
            target = _closure1_slot2;
            michal = 18;
            michal = target[michal];
            tangon = status.bind(option)(michal);
            zuuluu = tangon.useSharedValue;
            michal = false;
            sequen = zuuluu.bind(tangon)(michal);
            _closure2_slot4 = sequen;
            entity = target[entity];
            tangon = status.bind(option)(entity);
            zuuluu = tangon.useStateFromStores;
            entity = _closure1_slot6;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                tangon = _closure1_slot6;
                zuuluu = tangon.getRelationshipType;
                michal = _closure2_slot0;
                michal = michal.user;
                michal = michal.id;
                michal = zuuluu.bind(tangon)(michal);
                entity = _closure1_slot8;
                entity = entity.PENDING_OUTGOING;
                entity = michal === entity;
                return entity;
            };
            entity = zuuluu.bind(tangon)(michal, entity);
            _closure2_slot5 = entity;
            tangon = _closure1_slot3;
            zuuluu = tangon.useEffect;
            michal = new Array(2);
            michal[0] = sequen;
            michal[1] = entity;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    michal = _closure2_slot5;
                    if(michal) { _fun00006_ip = 26; continue _fun00005 }
 10:
                    zuuluu = _closure2_slot4;
                    michal = zuuluu.set;
                    entity = false;
                    entity = michal.bind(zuuluu)(entity);
 26:
                    entity = undefined;
                    return entity;
                }
            };
            entity = zuuluu.bind(tangon)(entity, michal);
            entity = 19;
            entity = target[entity];
            tangon = status.bind(option)(entity);
            zuuluu = tangon.renderChannelPressableWrapper;
            golfie = _closure1_slot9;
            entity = 20;
            entity = target[entity];
            entity = status.bind(option)(entity);
            michal = entity.PressableHighlight;
            entity = {};
            offset = 'button';
            entity['accessibilityRole'] = offset;
            offset = whisks.rowActive;
            offset = offset.backgroundColor;
            entity['underlayColor'] = offset;
            entity['onPress'] = verify;
            offset = whisks.pressable;
            verify = new Array(2);
            verify[0] = offset;
            offset = {};
            yankee = source.container;
            yankee = yankee.borderRadius;
            offset['borderRadius'] = yankee;
            verify[1] = offset;
            entity['style'] = verify;
            verify = 21;
            verify = target[verify];
            romeon = status.bind(option)(verify);
            yankee = romeon.renderChannelWrapper;
            backup = _closure1_slot10;
            offset = _closure1_slot11;
            verify = {};
            result = _closure1_slot4;
            kiloes = {};
            output = whisks.avatar;
            kiloes['style'] = output;
            record = _closure1_slot1;
            output = 22;
            output = target[output];
            record = record.bind(option)(output);
            output = {};
            cntext = config.user;
            output['user'] = cntext;
            output['guildId'] = option;
            cntext = source.icon;
            cntext = cntext.avatarSize;
            output['size'] = cntext;
            cntext = !echoed;
            output['animate'] = cntext;
            output = golfie.bind(option)(record, output);
            kiloes['children'] = output;
            output = golfie.bind(option)(result, kiloes);
            kiloes = new Array(3);
            kiloes[0] = output;
            output = {};
            record = whisks.textContainer;
            output['style'] = record;
            record = 23;
            record = target[record];
            record = status.bind(option)(record);
            cntext = record.Text;
            record = {'lineClamp': 1, 'variant': null, 'color': 'text-normal'};
            equals = source.channelName;
            equals = equals.text;
            equals = equals.variant;
            record['variant'] = equals;
            whisks = whisks.nameText;
            record['style'] = whisks;
            record['children'] = papara;
            cntext = golfie.bind(option)(cntext, record);
            record = new Array(2);
            record[0] = cntext;
            cntext = {};
            papara = {};
            variable37 = 9;
            target = target[variable37];
            status = status.bind(option)(target);
            target = status.isAndroid;
            status = target.bind(status)();
            target = 0;
            if(!status) { _fun00004_ip = 1002; continue _fun00003 }
 996:
            target = -2;
 1002:
            papara['marginTop'] = target;
            cntext['style'] = papara;
            status = _closure1_slot9;
            variable36 = _closure1_slot0;
            quebec = _closure1_slot2;
            papara = 24;
            papara = quebec[papara];
            papara = variable36.bind(option)(papara);
            target = papara.ActionStatusSubLabel;
            papara = {};
            whisks = source.messagePreview;
            whisks = whisks.height;
            quebec = quebec[variable37];
            variable36 = variable36.bind(option)(quebec);
            quebec = variable36.isAndroid;
            quebec = quebec.bind(variable36)();
            equals = 0;
            if(!quebec) { _fun00004_ip = 1079; continue _fun00003 }
 1076:
            equals = 2;
 1079:
            whisks = whisks + equals;
            papara['lineHeight'] = whisks;
            source = source.messagePreview;
            source = source.text;
            source = source.variant;
            papara['textVariant'] = source;
            papara['actioned'] = sequen;
            source = 1.75;
            papara['maxFontSizeMultiplier'] = source;
            source = global;
            source = source.HermesInternal;
            source = source.concat;
            source = source.bind(limora)(ctrled, sierra);
            papara['label'] = source;
            ctrled = _closure1_slot0;
            source = _closure1_slot2;
            sierra = 17;
            limora = source[sierra];
            limora = ctrled.bind(option)(limora);
            whisks = limora.intl;
            limora = whisks.string;
            sierra = source[sierra];
            sierra = ctrled.bind(option)(sierra);
            sierra = sierra.t;
            sierra = sierra.Kzyxm5;
            sierra = limora.bind(whisks)(sierra);
            papara['actionStatus'] = sierra;
            sierra = !echoed;
            papara['animate'] = sierra;
            papara = status.bind(option)(target, papara);
            cntext['children'] = papara;
            cntext = golfie.bind(option)(result, cntext);
            record[1] = cntext;
            output['children'] = record;
            output = backup.bind(option)(result, output);
            kiloes[1] = output;
            result = _closure1_slot9;
            sizing = 25;
            sizing = source[sizing];
            sizing = ctrled.bind(option)(sizing);
            output = sizing.ContactSuggestionActions;
            sizing = {};
            config = config.user;
            sizing['user'] = config;
            sizing['added'] = sequen;
            source = source[vacuum];
            ctrled = ctrled.bind(option)(source);
            source = ctrled.isLayoutCozy;
            ctrled = source.bind(ctrled)(oscard);
            source = 'sm';
            if(!ctrled) { _fun00004_ip = 1323; continue _fun00003 }
 1319:
            source = 'md';
 1323:
            sizing['size'] = source;
            source = function(argFoo) { // Original name: onAddSuggestion
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 26;
                zuuluu = zuuluu[entity];
                entity = undefined;
                golfie = tangon.bind(entity)(zuuluu);
                oscard = golfie.track;
                michal = _closure1_slot7;
                report = michal.FRIEND_SUGGESTION_ADDED;
                tangon = {};
                michal = argFoo;
                michal = michal.id;
                tangon['suggested_user_id'] = michal;
                zuuluu = _closure2_slot0;
                option = zuuluu.source;
                tangon['suggestion_source'] = option;
                option = 'Notifications Tab';
                tangon['location'] = option;
                tangon = oscard.bind(golfie)(report, tangon);
                michal = _closure2_slot1;
                michal = michal.bind(entity)(zuuluu);
                return entity;
            };
            sizing['onAddSuggestion'] = source;
            update = function() { // Original name: onFinishAnimation
                zuuluu = _closure2_slot2;
                michal = _closure2_slot0;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            sizing['onFinishAnimation'] = update;
            echoed = !echoed;
            sizing['animate'] = echoed;
            sizing = result.bind(option)(output, sizing);
            kiloes[2] = sizing;
            verify['children'] = kiloes;
            offset = backup.bind(option)(offset, verify);
            verify = {};
            verify['layout'] = oscard;
            verify['fontScale'] = foxtra;
            verify['panelVariant'] = report;
            verify = yankee.bind(romeon)(offset, verify);
            entity['children'] = verify;
            michal = golfie.bind(option)(michal, entity);
            entity = {};
            entity['layout'] = oscard;
            entity['panelVariant'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();