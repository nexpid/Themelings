// app/modules/notification_center/native/ForYouShowAllRow.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: ForYouShowAllRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            vacuum = entity.children;
            status = entity.count;
            verify = entity.onPress;
            report = entity.panelVariant;
            options = undefined;
            if(!(report === options)) { _fun00002_ip = 32; continue _fun00001 }
 30:
            report = false;
 32:
            config = _closure1_slot0;
            context = _closure1_slot2;
            sequence = 6;
            entity = context[sequence];
            mike = config.bind(options)(entity);
            entity = mike.useMessagesTabLayout;
            oscar = entity.bind(mike)(report);
            entity = _closure1_slot10;
            control = entity.bind(options)(oscar);
            entity = context[sequence];
            mike = config.bind(options)(entity);
            entity = mike.getLayoutStyles;
            record = entity.bind(mike)(oscar);
            entity = 12;
            entity = context[entity];
            mike = config.bind(options)(entity);
            entity = mike.useFontScale;
            foxtrot = entity.bind(mike)();
            entity = 13;
            entity = context[entity];
            tango = config.bind(options)(entity);
            zulu = tango.renderChannelPressableWrapper;
            golf = _closure1_slot7;
            entity = 14;
            entity = context[entity];
            entity = config.bind(options)(entity);
            mike = entity.PressableHighlight;
            entity = {};
            offset = 'button';
            entity['accessibilityRole'] = offset;
            offset = control.rowActive;
            offset = offset.backgroundColor;
            entity['underlayColor'] = offset;
            entity['onPress'] = verify;
            offset = control.pressable;
            verify = new Array(2);
            verify[0] = offset;
            offset = {};
            yankee = record.container;
            yankee = yankee.borderRadius;
            offset['borderRadius'] = yankee;
            verify[1] = offset;
            entity['style'] = verify;
            verify = 15;
            verify = context[verify];
            romeo = config.bind(options)(verify);
            yankee = romeo.renderChannelWrapper;
            backup = _closure1_slot9;
            offset = _closure1_slot8;
            verify = {};
            result = _closure1_slot7;
            output = _closure1_slot4;
            kilo = {};
            echo = control.avatar;
            kilo['style'] = echo;
            source = _closure1_slot7;
            echo = 16;
            echo = context[echo];
            echo = config.bind(options)(echo);
            update = echo.AvatarDuoPile;
            echo = {};
            sequence = context[sequence];
            config = config.bind(options)(sequence);
            sequence = config.isLayoutCompact;
            sequence = sequence.bind(config)(oscar);
            context = _closure1_slot0;
            papa = _closure1_slot2;
            config = 11;
            config = papa[config];
            config = context.bind(options)(config);
            config = config.AvatarSizes;
            if(sequence) { _fun00002_ip = 354; continue _fun00001 }
 346:
            sequence = config.SMALL;
            _fun00002_ip = 360; continue _fun00001;
 354:
            sequence = config.XSMALL_20;
 360:
            echo['size'] = sequence;
            sequence = '';
            echo['aria-label'] = sequence;
            echo['children'] = vacuum;
            echo = source.bind(options)(update, echo);
            kilo['children'] = echo;
            output = result.bind(options)(output, kilo);
            kilo = new Array(3);
            kilo[0] = output;
            echo = _closure1_slot7;
            result = _closure1_slot4;
            output = {};
            update = control.textContainer;
            output['style'] = update;
            config = _closure1_slot7;
            update = _closure1_slot0;
            source = _closure1_slot2;
            vacuum = 17;
            vacuum = source[vacuum];
            vacuum = update.bind(options)(vacuum);
            sequence = vacuum.Text;
            vacuum = {'lineClamp': 1, 'variant': null, 'color': 'text-brand'};
            record = record.channelName;
            record = record.text;
            record = record.variant;
            vacuum['variant'] = record;
            record = control.nameText;
            vacuum['style'] = record;
            record = 18;
            context = source[record];
            context = update.bind(options)(context);
            target = context.intl;
            papa = target.format;
            record = source[record];
            record = update.bind(options)(record);
            record = record.t;
            context = record.Nrzztb;
            record = {};
            record['count'] = status;
            record = papa.bind(target)(context, record);
            vacuum['children'] = record;
            vacuum = config.bind(options)(sequence, vacuum);
            output['children'] = vacuum;
            output = echo.bind(options)(result, output);
            kilo[1] = output;
            result = _closure1_slot7;
            vacuum = _closure1_slot1;
            echo = 19;
            sizing = source[echo];
            output = vacuum.bind(options)(sizing);
            sizing = {};
            sequence = control.icon;
            sizing['style'] = sequence;
            control = control.iconColor;
            control = control.color;
            sizing['color'] = control;
            control = 20;
            control = source[control];
            control = vacuum.bind(options)(control);
            sizing['source'] = control;
            echo = source[echo];
            echo = update.bind(options)(echo);
            echo = echo.IconSizes;
            echo = echo.CUSTOM;
            sizing['size'] = echo;
            sizing = result.bind(options)(output, sizing);
            kilo[2] = sizing;
            verify['children'] = kilo;
            offset = backup.bind(options)(offset, verify);
            verify = {};
            verify['layout'] = oscar;
            verify['fontScale'] = foxtrot;
            verify['panelVariant'] = report;
            verify = yankee.bind(romeo)(offset, verify);
            entity['children'] = verify;
            mike = golf.bind(options)(mike, entity);
            entity = {};
            entity['layout'] = oscar;
            entity['panelVariant'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot11 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Sections;
    var _closure1_slot6 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = function(argFoo) {
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 6;
            mike = yankee[entity];
            report = undefined;
            oscar = offset.bind(report)(mike);
            tango = oscar.getLayoutStyles;
            mike = argFoo;
            golf = tango.bind(oscar)(mike);
            entity = yankee[entity];
            tango = offset.bind(report)(entity);
            mike = tango.makeSizeStyle;
            entity = golf.icon;
            entity = entity.wrapper;
            entity = entity.size;
            options = mike.bind(tango)(entity);
            entity = {};
            mike = {};
            foxtrot = _closure1_slot1;
            oscar = 7;
            tango = yankee[oscar];
            tango = foxtrot.bind(report)(tango);
            tango = tango.colors;
            tango = tango.BG_MOD_FAINT;
            mike['backgroundColor'] = tango;
            entity['rowActive'] = mike;
            mike = {};
            tango = 1;
            mike['flex'] = tango;
            entity['pressable'] = mike;
            mike = {'flexDirection': 'column', 'flexGrow': 2, 'flexShrink': 2, 'alignSelf': 'center', 'overflow': 'hidden', 'marginTop': 4294967294};
            verify = 2;
            romeo = yankee[oscar];
            romeo = foxtrot.bind(report)(romeo);
            romeo = romeo.spacing;
            romeo = romeo.PX_8;
            mike['marginRight'] = romeo;
            entity['textContainer'] = mike;
            mike = {};
            mike['flexShrink'] = tango;
            tango = 8;
            tango = yankee[tango];
            offset = offset.bind(report)(tango);
            tango = offset.isAndroid;
            offset = tango.bind(offset)();
            tango = 0;
            if(!offset) { _fun00004_ip = 212; continue _fun00003 }
 209:
            tango = verify;
 212:
            mike['marginBottom'] = tango;
            entity['nameText'] = mike;
            mike = {'position': 'relative', 'borderRadius': null, 'justifyContent': 'center', 'alignItems': 'center', 'flexShrink': 0, 'flexGrow': 0};
            tango = _closure1_slot1;
            zulu = _closure1_slot2;
            verify = zulu[oscar];
            verify = tango.bind(report)(verify);
            verify = verify.radii;
            verify = verify.round;
            mike['borderRadius'] = verify;
            kilo = mike;
            backup = options;
            options = copyDataProperties(kilo, backup);
            golf = golf.icon;
            golf = golf.margin;
            options = golf.marginRight;
            golf = 4;
            options = options + golf;
            golf = 'marginRight';
            mike[golf] = options;
            entity['avatar'] = mike;
            mike = {'width': 8, 'height': 32};
            golf = zulu[oscar];
            golf = tango.bind(report)(golf);
            golf = golf.spacing;
            golf = golf.PX_24;
            mike['paddingRight'] = golf;
            entity['icon'] = mike;
            mike = {};
            zulu = zulu[oscar];
            zulu = tango.bind(report)(zulu);
            zulu = zulu.colors;
            zulu = zulu.INTERACTIVE_NORMAL;
            mike['color'] = zulu;
            entity['iconColor'] = mike;
            return entity;
        }
    };
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/notification_center/native/ForYouShowAllRow.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ForYouSuggestedFriendShowAllRow
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            golf = entity.suggestedFriends;
            var _closure2_slot0 = golf;
            report = entity.panelVariant;
            tango = undefined;
            if(!(report === tango)) { _fun00006_ip = 29; continue _fun00005 }
 27:
            report = false;
 29:
            var _closure2_slot1 = tango;
            var _closure2_slot2 = tango;
            options = _closure1_slot0;
            verify = _closure1_slot2;
            zulu = 9;
            zulu = verify[zulu];
            oscar = options.bind(tango)(zulu);
            zulu = oscar.useNavigation;
            zulu = zulu.bind(oscar)();
            _closure2_slot1 = zulu;
            oscar = 6;
            oscar = verify[oscar];
            options = options.bind(tango)(oscar);
            oscar = options.useMessagesTabLayout;
            offset = oscar.bind(options)(report);
            _closure2_slot2 = offset;
            verify = _closure1_slot3;
            options = verify.useCallback;
            oscar = new Array(2);
            oscar[0] = zulu;
            oscar[1] = golf;
            zulu = function() {
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 10;
                zulu = zulu[entity];
                entity = undefined;
                oscar = tango.bind(entity)(zulu);
                report = oscar.track;
                zulu = _closure1_slot5;
                tango = zulu.FRIEND_FINDER_SECTION_EXPANDED;
                zulu = {};
                mike = _closure1_slot6;
                mike = mike.FRIEND_SUGGESTIONS;
                zulu['section_id'] = mike;
                mike = 2;
                zulu['truncated_count'] = mike;
                golf = _closure2_slot0;
                golf = golf.length;
                zulu['expanded_count'] = golf;
                golf = 'NotificationsTab';
                zulu['location'] = golf;
                zulu = report.bind(oscar)(tango, zulu);
                report = _closure2_slot1;
                tango = report.navigate;
                zulu = {};
                mike = 'suggested-friends';
                zulu['screen'] = mike;
                mike = {};
                oscar = 'card';
                mike['presentation'] = oscar;
                zulu['params'] = mike;
                mike = 'friends';
                mike = tango.bind(report)(mike, zulu);
                return entity;
            };
            oscar = options.bind(verify)(zulu, oscar);
            options = verify.useMemo;
            zulu = new Array(2);
            zulu[0] = offset;
            zulu[1] = golf;
            mike = function() {
                tango = _closure2_slot0;
                zulu = tango.slice;
                mike = 2;
                entity = 4;
                zulu = zulu.bind(tango)(mike, entity);
                mike = zulu.map;
                entity = function(argFoo) {
                    _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                        entity = argFoo;
                        report = _closure1_slot7;
                        zulu = _closure1_slot1;
                        offset = _closure1_slot2;
                        verify = 11;
                        mike = offset[verify];
                        tango = undefined;
                        zulu = zulu.bind(tango)(mike);
                        mike = {};
                        oscar = entity.user;
                        mike['user'] = oscar;
                        mike['guildId'] = tango;
                        options = _closure1_slot0;
                        oscar = 6;
                        oscar = offset[oscar];
                        offset = options.bind(tango)(oscar);
                        options = offset.isLayoutCompact;
                        oscar = _closure2_slot2;
                        oscar = options.bind(offset)(oscar);
                        options = _closure1_slot0;
                        golf = _closure1_slot2;
                        golf = golf[verify];
                        golf = options.bind(tango)(golf);
                        golf = golf.AvatarSizes;
                        if(oscar) { _fun00008_ip = 115; continue _fun00007 }
 107:
                        oscar = golf.SMALL;
                        _fun00008_ip = 121; continue _fun00007;
 115:
                        oscar = golf.XSMALL_20;
 121:
                        mike['size'] = oscar;
                        entity = entity.user;
                        entity = entity.id;
                        entity = report.bind(tango)(zulu, mike, entity);
                        return entity;
                    }
                };
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            options = options.bind(verify)(mike, zulu);
            zulu = _closure1_slot7;
            mike = _closure1_slot11;
            entity = {};
            entity['children'] = options;
            golf = golf.length;
            entity['count'] = golf;
            entity['onPress'] = oscar;
            entity['panelVariant'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['ForYouSuggestedFriendShowAllRow'] = mike;
    return entity;
})();