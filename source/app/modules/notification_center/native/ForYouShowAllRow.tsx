// app/modules/notification_center/native/ForYouShowAllRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: ForYouShowAllRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            vacuum = entity.children;
            status = entity.count;
            verify = entity.onPress;
            report = entity.panelVariant;
            option = undefined;
            if(!(report === option)) { _fun00002_ip = 32; continue _fun00001 }
 30:
            report = false;
 32:
            config = _closure1_slot0;
            cntext = _closure1_slot2;
            sequen = 6;
            entity = cntext[sequen];
            michal = config.bind(option)(entity);
            entity = michal.useMessagesTabLayout;
            oscard = entity.bind(michal)(report);
            entity = _closure1_slot10;
            ctrled = entity.bind(option)(oscard);
            entity = cntext[sequen];
            michal = config.bind(option)(entity);
            entity = michal.getLayoutStyles;
            record = entity.bind(michal)(oscard);
            entity = 12;
            entity = cntext[entity];
            michal = config.bind(option)(entity);
            entity = michal.useFontScale;
            foxtra = entity.bind(michal)();
            entity = 13;
            entity = cntext[entity];
            tangon = config.bind(option)(entity);
            zuuluu = tangon.renderChannelPressableWrapper;
            golfie = _closure1_slot7;
            entity = 14;
            entity = cntext[entity];
            entity = config.bind(option)(entity);
            michal = entity.PressableHighlight;
            entity = {};
            offset = 'button';
            entity['accessibilityRole'] = offset;
            offset = ctrled.rowActive;
            offset = offset.backgroundColor;
            entity['underlayColor'] = offset;
            entity['onPress'] = verify;
            offset = ctrled.pressable;
            verify = new Array(2);
            verify[0] = offset;
            offset = {};
            yankee = record.container;
            yankee = yankee.borderRadius;
            offset['borderRadius'] = yankee;
            verify[1] = offset;
            entity['style'] = verify;
            verify = 15;
            verify = cntext[verify];
            romeon = config.bind(option)(verify);
            yankee = romeon.renderChannelWrapper;
            backup = _closure1_slot9;
            offset = _closure1_slot8;
            verify = {};
            result = _closure1_slot7;
            output = _closure1_slot4;
            kiloes = {};
            echoed = ctrled.avatar;
            kiloes['style'] = echoed;
            source = _closure1_slot7;
            echoed = 16;
            echoed = cntext[echoed];
            echoed = config.bind(option)(echoed);
            update = echoed.AvatarDuoPile;
            echoed = {};
            sequen = cntext[sequen];
            config = config.bind(option)(sequen);
            sequen = config.isLayoutCompact;
            sequen = sequen.bind(config)(oscard);
            cntext = _closure1_slot0;
            papara = _closure1_slot2;
            config = 11;
            config = papara[config];
            config = cntext.bind(option)(config);
            config = config.AvatarSizes;
            if(sequen) { _fun00002_ip = 354; continue _fun00001 }
 346:
            sequen = config.SMALL;
            _fun00002_ip = 360; continue _fun00001;
 354:
            sequen = config.XSMALL_20;
 360:
            echoed['size'] = sequen;
            sequen = '';
            echoed['aria-label'] = sequen;
            echoed['children'] = vacuum;
            echoed = source.bind(option)(update, echoed);
            kiloes['children'] = echoed;
            output = result.bind(option)(output, kiloes);
            kiloes = new Array(3);
            kiloes[0] = output;
            echoed = _closure1_slot7;
            result = _closure1_slot4;
            output = {};
            update = ctrled.textContainer;
            output['style'] = update;
            config = _closure1_slot7;
            update = _closure1_slot0;
            source = _closure1_slot2;
            vacuum = 17;
            vacuum = source[vacuum];
            vacuum = update.bind(option)(vacuum);
            sequen = vacuum.Text;
            vacuum = {'lineClamp': 1, 'variant': null, 'color': 'text-brand'};
            record = record.channelName;
            record = record.text;
            record = record.variant;
            vacuum['variant'] = record;
            record = ctrled.nameText;
            vacuum['style'] = record;
            record = 18;
            cntext = source[record];
            cntext = update.bind(option)(cntext);
            target = cntext.intl;
            papara = target.format;
            record = source[record];
            record = update.bind(option)(record);
            record = record.t;
            cntext = record.Nrzztb;
            record = {};
            record['count'] = status;
            record = papara.bind(target)(cntext, record);
            vacuum['children'] = record;
            vacuum = config.bind(option)(sequen, vacuum);
            output['children'] = vacuum;
            output = echoed.bind(option)(result, output);
            kiloes[1] = output;
            result = _closure1_slot7;
            vacuum = _closure1_slot1;
            echoed = 19;
            sizing = source[echoed];
            output = vacuum.bind(option)(sizing);
            sizing = {};
            sequen = ctrled.icon;
            sizing['style'] = sequen;
            ctrled = ctrled.iconColor;
            ctrled = ctrled.color;
            sizing['color'] = ctrled;
            ctrled = 20;
            ctrled = source[ctrled];
            ctrled = vacuum.bind(option)(ctrled);
            sizing['source'] = ctrled;
            echoed = source[echoed];
            echoed = update.bind(option)(echoed);
            echoed = echoed.IconSizes;
            echoed = echoed.CUSTOM;
            sizing['size'] = echoed;
            sizing = result.bind(option)(output, sizing);
            kiloes[2] = sizing;
            verify['children'] = kiloes;
            offset = backup.bind(option)(offset, verify);
            verify = {};
            verify['layout'] = oscard;
            verify['fontScale'] = foxtra;
            verify['panelVariant'] = report;
            verify = yankee.bind(romeon)(offset, verify);
            entity['children'] = verify;
            michal = golfie.bind(option)(michal, entity);
            entity = {};
            entity['layout'] = oscard;
            entity['panelVariant'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot11 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Sections;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    golfie = tangon.Fragment;
    var _closure1_slot8 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = function(argFoo) {
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 6;
            michal = yankee[entity];
            report = undefined;
            oscard = offset.bind(report)(michal);
            tangon = oscard.getLayoutStyles;
            michal = argFoo;
            golfie = tangon.bind(oscard)(michal);
            entity = yankee[entity];
            tangon = offset.bind(report)(entity);
            michal = tangon.makeSizeStyle;
            entity = golfie.icon;
            entity = entity.wrapper;
            entity = entity.size;
            option = michal.bind(tangon)(entity);
            entity = {};
            michal = {};
            foxtra = _closure1_slot1;
            oscard = 7;
            tangon = yankee[oscard];
            tangon = foxtra.bind(report)(tangon);
            tangon = tangon.colors;
            tangon = tangon.BG_MOD_FAINT;
            michal['backgroundColor'] = tangon;
            entity['rowActive'] = michal;
            michal = {};
            tangon = 1;
            michal['flex'] = tangon;
            entity['pressable'] = michal;
            michal = {'flexDirection': 'column', 'flexGrow': 2, 'flexShrink': 2, 'alignSelf': 'center', 'overflow': 'hidden', 'marginTop': 4294967294};
            verify = 2;
            romeon = yankee[oscard];
            romeon = foxtra.bind(report)(romeon);
            romeon = romeon.spacing;
            romeon = romeon.PX_8;
            michal['marginRight'] = romeon;
            entity['textContainer'] = michal;
            michal = {};
            michal['flexShrink'] = tangon;
            tangon = 8;
            tangon = yankee[tangon];
            offset = offset.bind(report)(tangon);
            tangon = offset.isAndroid;
            offset = tangon.bind(offset)();
            tangon = 0;
            if(!offset) { _fun00004_ip = 212; continue _fun00003 }
 209:
            tangon = verify;
 212:
            michal['marginBottom'] = tangon;
            entity['nameText'] = michal;
            michal = {'position': 'relative', 'borderRadius': null, 'justifyContent': 'center', 'alignItems': 'center', 'flexShrink': 0, 'flexGrow': 0};
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            verify = zuuluu[oscard];
            verify = tangon.bind(report)(verify);
            verify = verify.radii;
            verify = verify.round;
            michal['borderRadius'] = verify;
            kiloes = michal;
            backup = option;
            option = copyDataProperties(kiloes, backup);
            golfie = golfie.icon;
            golfie = golfie.margin;
            option = golfie.marginRight;
            golfie = 4;
            option = option + golfie;
            golfie = 'marginRight';
            michal[golfie] = option;
            entity['avatar'] = michal;
            michal = {'width': 8, 'height': 32};
            golfie = zuuluu[oscard];
            golfie = tangon.bind(report)(golfie);
            golfie = golfie.spacing;
            golfie = golfie.PX_24;
            michal['paddingRight'] = golfie;
            entity['icon'] = michal;
            michal = {};
            zuuluu = zuuluu[oscard];
            zuuluu = tangon.bind(report)(zuuluu);
            zuuluu = zuuluu.colors;
            zuuluu = zuuluu.INTERACTIVE_NORMAL;
            michal['color'] = zuuluu;
            entity['iconColor'] = michal;
            return entity;
        }
    };
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/notification_center/native/ForYouShowAllRow.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ForYouSuggestedFriendShowAllRow
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            golfie = entity.suggestedFriends;
            var _closure2_slot0 = golfie;
            report = entity.panelVariant;
            tangon = undefined;
            if(!(report === tangon)) { _fun00006_ip = 29; continue _fun00005 }
 27:
            report = false;
 29:
            var _closure2_slot1 = tangon;
            var _closure2_slot2 = tangon;
            option = _closure1_slot0;
            verify = _closure1_slot2;
            zuuluu = 9;
            zuuluu = verify[zuuluu];
            oscard = option.bind(tangon)(zuuluu);
            zuuluu = oscard.useNavigation;
            zuuluu = zuuluu.bind(oscard)();
            _closure2_slot1 = zuuluu;
            oscard = 6;
            oscard = verify[oscard];
            option = option.bind(tangon)(oscard);
            oscard = option.useMessagesTabLayout;
            offset = oscard.bind(option)(report);
            _closure2_slot2 = offset;
            verify = _closure1_slot3;
            option = verify.useCallback;
            oscard = new Array(2);
            oscard[0] = zuuluu;
            oscard[1] = golfie;
            zuuluu = function() {
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 10;
                zuuluu = zuuluu[entity];
                entity = undefined;
                oscard = tangon.bind(entity)(zuuluu);
                report = oscard.track;
                zuuluu = _closure1_slot5;
                tangon = zuuluu.FRIEND_FINDER_SECTION_EXPANDED;
                zuuluu = {};
                michal = _closure1_slot6;
                michal = michal.FRIEND_SUGGESTIONS;
                zuuluu['section_id'] = michal;
                michal = 2;
                zuuluu['truncated_count'] = michal;
                golfie = _closure2_slot0;
                golfie = golfie.length;
                zuuluu['expanded_count'] = golfie;
                golfie = 'NotificationsTab';
                zuuluu['location'] = golfie;
                zuuluu = report.bind(oscard)(tangon, zuuluu);
                report = _closure2_slot1;
                tangon = report.navigate;
                zuuluu = {};
                michal = 'suggested-friends';
                zuuluu['screen'] = michal;
                michal = {};
                oscard = 'card';
                michal['presentation'] = oscard;
                zuuluu['params'] = michal;
                michal = 'friends';
                michal = tangon.bind(report)(michal, zuuluu);
                return entity;
            };
            oscard = option.bind(verify)(zuuluu, oscard);
            option = verify.useMemo;
            zuuluu = new Array(2);
            zuuluu[0] = offset;
            zuuluu[1] = golfie;
            michal = function() {
                tangon = _closure2_slot0;
                zuuluu = tangon.slice;
                michal = 2;
                entity = 4;
                zuuluu = zuuluu.bind(tangon)(michal, entity);
                michal = zuuluu.map;
                entity = function(argFoo) {
                    _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                        entity = argFoo;
                        report = _closure1_slot7;
                        zuuluu = _closure1_slot1;
                        offset = _closure1_slot2;
                        verify = 11;
                        michal = offset[verify];
                        tangon = undefined;
                        zuuluu = zuuluu.bind(tangon)(michal);
                        michal = {};
                        oscard = entity.user;
                        michal['user'] = oscard;
                        michal['guildId'] = tangon;
                        option = _closure1_slot0;
                        oscard = 6;
                        oscard = offset[oscard];
                        offset = option.bind(tangon)(oscard);
                        option = offset.isLayoutCompact;
                        oscard = _closure2_slot2;
                        oscard = option.bind(offset)(oscard);
                        option = _closure1_slot0;
                        golfie = _closure1_slot2;
                        golfie = golfie[verify];
                        golfie = option.bind(tangon)(golfie);
                        golfie = golfie.AvatarSizes;
                        if(oscard) { _fun00008_ip = 115; continue _fun00007 }
 107:
                        oscard = golfie.SMALL;
                        _fun00008_ip = 121; continue _fun00007;
 115:
                        oscard = golfie.XSMALL_20;
 121:
                        michal['size'] = oscard;
                        entity = entity.user;
                        entity = entity.id;
                        entity = report.bind(tangon)(zuuluu, michal, entity);
                        return entity;
                    }
                };
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            option = option.bind(verify)(michal, zuuluu);
            zuuluu = _closure1_slot7;
            michal = _closure1_slot11;
            entity = {};
            entity['children'] = option;
            golfie = golfie.length;
            entity['count'] = golfie;
            entity['onPress'] = oscard;
            entity['panelVariant'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['ForYouSuggestedFriendShowAllRow'] = michal;
    return entity;
})();