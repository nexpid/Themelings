// app/modules/gesture_handlers/native/NonCollapsableGestureDetector.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = ['children'];
    var _closure1_slot2 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argBaz;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    golfie = 1;
    option = oscard[golfie];
    tangon = argCor;
    tangon = tangon.bind(entity)(option);
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = {};
    tangon['flex'] = golfie;
    var _closure1_slot6 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/gesture_handlers/native/NonCollapsableGestureDetector.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: NonCollapsableGestureDetector
        zuuluu = argFoo;
        golfie = zuuluu.children;
        michal = _closure1_slot3;
        entity = _closure1_slot2;
        tangon = undefined;
        verify = michal.bind(tangon)(zuuluu, entity);
        zuuluu = _closure1_slot5;
        michal = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 4;
        entity = oscard[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.GestureDetector;
        entity = {};
        offset = entity;
        report = copyDataProperties(offset, verify);
        oscard = _closure1_slot4;
        report = {};
        option = _closure1_slot6;
        report['style'] = option;
        option = false;
        report['collapsable'] = option;
        report['children'] = golfie;
        oscard = zuuluu.bind(tangon)(oscard, report);
        report = 'children';
        entity[report] = oscard;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['NonCollapsableGestureDetector'] = michal;
    return entity;
})();