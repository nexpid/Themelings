// app/modules/interaction_components/native/InteractionModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = golfie;
    tangon = function(argFoo) { // Original name: InteractionModal
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            offset = argFoo;
            entity = _closure1_slot8;
            tangon = undefined;
            verify = entity.bind(tangon)();
            sequen = offset.title;
            config = _closure1_slot0;
            ctrled = _closure1_slot2;
            entity = 7;
            entity = ctrled[entity];
            zuuluu = config.bind(tangon)(entity);
            michal = zuuluu.useModalState;
            entity = _closure1_slot9;
            entity = michal.bind(zuuluu)(offset, entity);
            foxtra = entity.components;
            source = entity.applicationIconURL;
            cntext = entity.applicationName;
            output = entity.submissionState;
            vacuum = entity.error;
            romeon = entity.onSubmit;
            update = _closure1_slot1;
            entity = 8;
            entity = ctrled[entity];
            michal = update.bind(tangon)(entity);
            entity = {};
            zuuluu = true;
            entity['includeKeyboardHeightIOS'] = zuuluu;
            entity = michal.bind(tangon)(entity);
            golfie = entity.insets;
            zuuluu = _closure1_slot7;
            michal = _closure1_slot4;
            entity = {};
            report = verify.modal;
            entity['style'] = report;
            oscard = verify.modalContent;
            report = new Array(2);
            report[0] = oscard;
            oscard = {};
            option = golfie.top;
            oscard['paddingTop'] = option;
            option = golfie.bottom;
            golfie = verify.modalContent;
            golfie = golfie.padding;
            golfie = option + golfie;
            oscard['paddingBottom'] = golfie;
            report[1] = oscard;
            entity['contentContainerStyle'] = report;
            golfie = _closure1_slot7;
            oscard = _closure1_slot3;
            report = {};
            option = verify.header;
            report['style'] = option;
            backup = _closure1_slot6;
            kiloes = 9;
            option = ctrled[kiloes];
            yankee = update.bind(tangon)(option);
            option = {};
            result = verify.icon;
            option['style'] = result;
            result = 10;
            result = ctrled[result];
            echoed = update.bind(tangon)(result);
            result = echoed.makeSource;
            result = result.bind(echoed)(source);
            option['source'] = result;
            kiloes = ctrled[kiloes];
            kiloes = config.bind(tangon)(kiloes);
            kiloes = kiloes.AvatarSizes;
            kiloes = kiloes.SMALL;
            option['size'] = kiloes;
            yankee = backup.bind(tangon)(yankee, option);
            option = new Array(3);
            option[0] = yankee;
            kiloes = _closure1_slot6;
            backup = _closure1_slot3;
            yankee = {};
            result = verify.titleView;
            yankee['style'] = result;
            source = _closure1_slot6;
            result = 11;
            result = ctrled[result];
            result = config.bind(tangon)(result);
            echoed = result.Text;
            result = {'variant': 'heading-xl/semibold', 'color': 'header-primary'};
            result['children'] = sequen;
            result = source.bind(tangon)(echoed, result);
            yankee['children'] = result;
            yankee = kiloes.bind(tangon)(backup, yankee);
            option[1] = yankee;
            kiloes = _closure1_slot6;
            yankee = 12;
            yankee = ctrled[yankee];
            yankee = config.bind(tangon)(yankee);
            backup = yankee.PressableOpacity;
            yankee = {};
            result = 'button';
            yankee['accessibilityRole'] = result;
            result = 13;
            echoed = ctrled[result];
            echoed = config.bind(tangon)(echoed);
            sequen = echoed.intl;
            source = sequen.string;
            echoed = ctrled[result];
            echoed = config.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.cpT0Cg;
            echoed = source.bind(sequen)(echoed);
            yankee['accessibilityLabel'] = echoed;
            echoed = _closure1_slot9;
            yankee['onPress'] = echoed;
            echoed = verify.closeButton;
            yankee['style'] = echoed;
            source = _closure1_slot6;
            echoed = 14;
            echoed = ctrled[echoed];
            update = update.bind(tangon)(echoed);
            echoed = {};
            ctrled = verify.closeIcon;
            ctrled = ctrled.color;
            echoed['color'] = ctrled;
            echoed = source.bind(tangon)(update, echoed);
            yankee['children'] = echoed;
            yankee = kiloes.bind(tangon)(backup, yankee);
            option[2] = yankee;
            report['children'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(4);
            report[0] = oscard;
            option = _closure1_slot7;
            golfie = _closure1_slot3;
            oscard = {};
            kiloes = null;
            yankee = kiloes != vacuum;
            backup = null;
            if(!yankee) { _fun00002_ip = 697; continue _fun00001 }
 592:
            yankee = '';
            backup = null;
            if(!(yankee !== vacuum)) { _fun00002_ip = 697; continue _fun00001 }
 602:
            echoed = _closure1_slot6;
            kiloes = _closure1_slot3;
            yankee = {};
            update = verify.error;
            yankee['style'] = update;
            ctrled = _closure1_slot6;
            source = _closure1_slot1;
            record = _closure1_slot2;
            sequen = 15;
            update = record[sequen];
            source = source.bind(tangon)(update);
            update = {};
            config = _closure1_slot0;
            sequen = record[sequen];
            sequen = config.bind(tangon)(sequen);
            sequen = sequen.HelpMessageTypes;
            sequen = sequen.ERROR;
            update['messageType'] = sequen;
            update['children'] = vacuum;
            update = ctrled.bind(tangon)(source, update);
            yankee['children'] = update;
            backup = echoed.bind(tangon)(kiloes, yankee);
 697:
            yankee = new Array(2);
            yankee[0] = backup;
            ctrled = _closure1_slot6;
            backup = _closure1_slot1;
            kiloes = _closure1_slot2;
            vacuum = 15;
            echoed = kiloes[vacuum];
            update = backup.bind(tangon)(echoed);
            echoed = {};
            source = _closure1_slot0;
            vacuum = kiloes[vacuum];
            vacuum = source.bind(tangon)(vacuum);
            vacuum = vacuum.HelpMessageTypes;
            vacuum = vacuum.WARNING;
            echoed['messageType'] = vacuum;
            vacuum = kiloes[result];
            vacuum = source.bind(tangon)(vacuum);
            record = vacuum.intl;
            config = record.format;
            vacuum = kiloes[result];
            vacuum = source.bind(tangon)(vacuum);
            vacuum = vacuum.t;
            sequen = vacuum.dSTy//;
            vacuum = {};
            vacuum['applicationName'] = cntext;
            vacuum = config.bind(record)(sequen, vacuum);
            echoed['children'] = vacuum;
            echoed = ctrled.bind(tangon)(update, echoed);
            yankee[1] = echoed;
            oscard['children'] = yankee;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            option = _closure1_slot6;
            oscard = 16;
            oscard = kiloes[oscard];
            oscard = source.bind(tangon)(oscard);
            golfie = oscard.ComponentStateContextProvider;
            oscard = {};
            oscard['modal'] = offset;
            offset = 17;
            offset = kiloes[offset];
            yankee = source.bind(tangon)(offset);
            offset = yankee.renderComponents;
            offset = offset.bind(yankee)(foxtra);
            oscard['children'] = offset;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            option = _closure1_slot6;
            golfie = _closure1_slot3;
            oscard = {};
            verify = verify.footer;
            oscard['style'] = verify;
            yankee = _closure1_slot6;
            foxtra = 18;
            verify = kiloes[foxtra];
            offset = backup.bind(tangon)(verify);
            verify = {};
            echoed = kiloes[result];
            echoed = source.bind(tangon)(echoed);
            update = echoed.intl;
            echoed = update.string;
            result = kiloes[result];
            result = source.bind(tangon)(result);
            result = result.t;
            result = result.geKm7u;
            result = echoed.bind(update)(result);
            verify['text'] = result;
            sizing = _closure1_slot5;
            sizing = sizing.IN_FLIGHT;
            sizing = output === sizing;
            verify['loading'] = sizing;
            sizing = kiloes[foxtra];
            sizing = backup.bind(tangon)(sizing);
            sizing = sizing.Colors;
            sizing = sizing.BRAND;
            verify['color'] = sizing;
            foxtra = kiloes[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            foxtra = foxtra.Sizes;
            foxtra = foxtra.MEDIUM;
            verify['size'] = foxtra;
            verify['onPress'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot10 = tangon;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    entity = 0;
    option = golfie[entity];
    report = argCor;
    entity = undefined;
    report = report.bind(entity)(option);
    backup = 1;
    report = golfie[backup];
    report = oscard.bind(entity)(report);
    option = report.View;
    var _closure1_slot3 = option;
    report = report.ScrollView;
    var _closure1_slot4 = report;
    report = 2;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.InteractionModalState;
    var _closure1_slot5 = report;
    report = 3;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.jsx;
    var _closure1_slot6 = option;
    report = report.jsxs;
    var _closure1_slot7 = report;
    report = 4;
    report = golfie[report];
    verify = oscard.bind(entity)(report);
    option = verify.createStyles;
    report = {};
    offset = {};
    romeon = 5;
    yankee = golfie[romeon];
    yankee = foxtra.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = yankee;
    offset['flex'] = backup;
    report['modal'] = offset;
    yankee = 16;
    offset = {'flexGrow': 1, 'padding': 16};
    report['modalContent'] = offset;
    offset = {'flexDirection': 'row', 'marginBottom': 16};
    report['header'] = offset;
    offset = {};
    offset['flex'] = backup;
    report['titleView'] = offset;
    offset = {};
    backup = 8;
    offset['marginRight'] = backup;
    report['icon'] = offset;
    offset = {};
    backup = 'auto';
    offset['marginTop'] = backup;
    report['footer'] = offset;
    offset = {};
    offset['marginLeft'] = backup;
    report['closeButton'] = offset;
    offset = {};
    romeon = golfie[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.TEXT_MUTED;
    offset['color'] = romeon;
    report['closeIcon'] = offset;
    offset = {};
    offset['marginBottom'] = yankee;
    report['error'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot8 = report;
    report = function() { // Original name: onClose
        zuuluu = _closure1_slot1;
        michal = _closure1_slot2;
        entity = 6;
        michal = michal[entity];
        entity = undefined;
        zuuluu = zuuluu.bind(entity)(michal);
        michal = zuuluu.popWithKey;
        entity = 'interaction_modal';
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    var _closure1_slot9 = report;
    report = 19;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/interaction_components/native/InteractionModal.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    michal = function(argFoo) { // Original name: openInteractionModal
        tangon = _closure1_slot1;
        zuuluu = _closure1_slot2;
        entity = 6;
        zuuluu = zuuluu[entity];
        entity = undefined;
        oscard = tangon.bind(entity)(zuuluu);
        report = oscard.push;
        tangon = _closure1_slot10;
        zuuluu = argFoo;
        michal = 'interaction_modal';
        michal = report.bind(oscard)(tangon, zuuluu, michal);
        return entity;
    };
    zuuluu['openInteractionModal'] = michal;
    return entity;
})();