// app/modules/interaction_components/native/InteractionIframeModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    backup = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = backup.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    romeon = 1;
    golfie = oscard[romeon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = backup.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    offset = 4;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.APPLICATIONS_WITH_NO_REFFERER;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.BotTagTypes;
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot9 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    yankee = 8;
    foxtra = oscard[yankee];
    foxtra = backup.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = foxtra;
    verify['flex'] = romeon;
    tangon['wrapper'] = verify;
    verify = {'flexDirection': 'row', 'padding': 16, 'justifyContent': 'space-between', 'alignItems': 'center'};
    tangon['header'] = verify;
    verify = {'flexDirection': 'column', 'alignItems': 'center'};
    tangon['headerCenterContainer'] = verify;
    verify = {'flexDirection': 'row', 'marginBottom': 2};
    tangon['headerTitleContainer'] = verify;
    verify = {};
    verify['marginEnd'] = yankee;
    tangon['closeButton'] = verify;
    verify = {'marginStart': 8, 'width': 32};
    tangon['spacerView'] = verify;
    verify = {};
    verify['marginStart'] = offset;
    tangon['botTag'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 25;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/interaction_components/native/InteractionIframeModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: InteractionIframeModal
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            oscard = argFoo;
            entity = _closure1_slot11;
            tangon = undefined;
            kiloes = entity.bind(tangon)();
            ctrled = oscard.application;
            echoed = oscard.title;
            michal = ctrled.id;
            var _closure2_slot0 = michal;
            report = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 9;
            entity = yankee[entity];
            zuuluu = report.bind(tangon)(entity);
            entity = zuuluu.useIframeModalState;
            entity = entity.bind(zuuluu)(oscard);
            offset = entity.queryParams;
            foxtra = entity.iframeUrl;
            sizing = _closure1_slot4;
            entity = sizing.useState;
            golfie = false;
            oscard = entity.bind(sizing)(golfie);
            zuuluu = _closure1_slot3;
            entity = 2;
            verify = zuuluu.bind(tangon)(oscard, entity);
            oscard = 0;
            entity = verify[oscard];
            zuuluu = 1;
            zuuluu = verify[zuuluu];
            var _closure2_slot1 = zuuluu;
            zuuluu = 10;
            zuuluu = yankee[zuuluu];
            backup = report.bind(tangon)(zuuluu);
            verify = backup.useStateFromStores;
            zuuluu = _closure1_slot6;
            report = new Array(1);
            report[0] = zuuluu;
            zuuluu = function() {
                entity = _closure1_slot6;
                entity = entity.keyboardHeight;
                return entity;
            };
            report = verify.bind(backup)(report, zuuluu);
            backup = sizing.useLayoutEffect;
            verify = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 11;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.lockOrientation;
                entity = 'PORTRAIT';
                entity = michal.bind(zuuluu)(entity);
                entity = function() {
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 11;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.restoreDefaultOrientation;
                    michal = michal.bind(zuuluu)();
                    return entity;
                };
                return entity;
            };
            zuuluu = new Array(0);
            zuuluu = backup.bind(sizing)(verify, zuuluu);
            verify = sizing.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 12;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = _closure2_slot0;
                michal = zuuluu.bind(entity)(michal, entity);
                return entity;
            };
            backup = verify.bind(sizing)(michal, zuuluu);
            var _closure2_slot2 = backup;
            verify = sizing.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = backup;
            michal = function() {
                michal = _closure2_slot2;
                entity = undefined;
                entity = michal.bind(entity)();
                entity = true;
                return entity;
            };
            zuuluu = verify.bind(sizing)(michal, zuuluu);
            verify = _closure1_slot1;
            michal = 13;
            michal = yankee[michal];
            michal = verify.bind(tangon)(michal);
            michal = michal.bind(tangon)(zuuluu);
            source = null;
            verify = null;
            if(entity) { _fun00002_ip = 466; continue _fun00001 }
 278:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot1;
            yankee = _closure1_slot2;
            entity = 16;
            entity = yankee[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            sizing = function() { // Original name: onActivityCrash
                zuuluu = _closure2_slot1;
                entity = undefined;
                michal = true;
                michal = zuuluu.bind(entity)(michal);
                michal = global;
                tangon = michal.setTimeout;
                zuuluu = function() {
                    zuuluu = _closure2_slot1;
                    michal = undefined;
                    entity = false;
                    entity = zuuluu.bind(michal)(entity);
                    return entity;
                };
                michal = 0;
                michal = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            entity['onActivityCrash'] = sizing;
            sizing = ctrled.id;
            entity['applicationId'] = sizing;
            sizing = offset.channel_id;
            entity['channelId'] = sizing;
            sizing = offset.guild_id;
            entity['guildId'] = sizing;
            entity['activityUrl'] = foxtra;
            foxtra = offset.instance_id;
            entity['activitySessionId'] = foxtra;
            entity['queryParams'] = offset;
            option = function() { // Original name: onLoadError
                zuuluu = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 14;
                michal = verify[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.open;
                michal = {};
                oscard = 'interaction_iframe_modal';
                michal['key'] = oscard;
                option = _closure1_slot0;
                report = 15;
                oscard = verify[report];
                oscard = option.bind(entity)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = verify[report];
                report = option.bind(entity)(report);
                report = report.t;
                report = report.HehpFR;
                report = oscard.bind(golfie)(report);
                michal['content'] = report;
                michal = zuuluu.bind(tangon)(michal);
                michal = _closure2_slot2;
                michal = michal.bind(entity)();
                return entity;
            };
            entity['onLoadError'] = option;
            offset = _closure1_slot0;
            option = 17;
            option = yankee[option];
            offset = offset.bind(tangon)(option);
            option = offset.allowPopups;
            option = option.bind(offset)(ctrled);
            entity['allowPopups'] = option;
            yankee = _closure1_slot7;
            offset = yankee.has;
            option = ctrled.id;
            offset = offset.bind(yankee)(option);
            option = 'origin';
            if(!offset) { _fun00002_ip = 440; continue _fun00001 }
 434:
            option = 'no-referrer';
 440:
            entity['referrerPolicy'] = option;
            entity['isPipOrGridMode'] = golfie;
            entity['webViewKey'] = tangon;
            entity['ignoreSilentHardwareSwitch'] = golfie;
            verify = zuuluu.bind(tangon)(michal, entity);
 466:
            zuuluu = _closure1_slot9;
            output = _closure1_slot0;
            vacuum = _closure1_slot2;
            entity = 18;
            entity = vacuum[entity];
            entity = output.bind(tangon)(entity);
            michal = entity.SafeAreaPaddingView;
            entity = {};
            golfie = kiloes.wrapper;
            entity['style'] = golfie;
            golfie = true;
            entity['top'] = golfie;
            report = oscard === report;
            entity['bottom'] = report;
            golfie = _closure1_slot10;
            result = _closure1_slot1;
            report = 19;
            report = vacuum[report];
            oscard = result.bind(tangon)(report);
            report = {};
            option = kiloes.wrapper;
            report['style'] = option;
            offset = _closure1_slot5;
            option = {};
            yankee = kiloes.header;
            option['style'] = yankee;
            yankee = 20;
            yankee = vacuum[yankee];
            yankee = output.bind(tangon)(yankee);
            foxtra = yankee.PressableOpacity;
            yankee = {};
            sizing = 'button';
            yankee['accessibilityRole'] = sizing;
            sizing = 15;
            update = vacuum[sizing];
            update = output.bind(tangon)(update);
            sequen = update.intl;
            update = sequen.string;
            sizing = vacuum[sizing];
            sizing = output.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.cpT0Cg;
            sizing = update.bind(sequen)(sizing);
            yankee['accessibilityLabel'] = sizing;
            yankee['onPress'] = backup;
            backup = kiloes.closeButton;
            yankee['style'] = backup;
            update = 21;
            backup = vacuum[update];
            sizing = result.bind(tangon)(backup);
            backup = {};
            sequen = 22;
            sequen = vacuum[sequen];
            sequen = result.bind(tangon)(sequen);
            backup['source'] = sequen;
            update = vacuum[update];
            update = result.bind(tangon)(update);
            update = update.Sizes;
            update = update.LARGE;
            backup['size'] = update;
            backup = zuuluu.bind(tangon)(sizing, backup);
            yankee['children'] = backup;
            foxtra = zuuluu.bind(tangon)(foxtra, yankee);
            yankee = new Array(3);
            yankee[0] = foxtra;
            foxtra = {};
            backup = kiloes.headerCenterContainer;
            foxtra['style'] = backup;
            backup = {};
            sizing = kiloes.headerTitleContainer;
            backup['style'] = sizing;
            update = 23;
            sizing = vacuum[update];
            sizing = output.bind(tangon)(sizing);
            output = sizing.Text;
            sizing = {'variant': 'heading-sm/bold', 'color': 'header-primary'};
            sequen = ctrled.name;
            sizing['children'] = sequen;
            output = zuuluu.bind(tangon)(output, sizing);
            sizing = new Array(2);
            sizing[0] = output;
            output = 24;
            output = vacuum[output];
            result = result.bind(tangon)(output);
            output = {};
            vacuum = _closure1_slot8;
            vacuum = vacuum.BOT;
            output['type'] = vacuum;
            ctrled = ctrled.bot;
            vacuum = source == ctrled;
            source = undefined;
            if(vacuum) { _fun00002_ip = 868; continue _fun00001 }
 862:
            source = ctrled.verified;
 868:
            output['verified'] = source;
            source = kiloes.botTag;
            output['style'] = source;
            output = zuuluu.bind(tangon)(result, output);
            sizing[1] = output;
            backup['children'] = sizing;
            backup = golfie.bind(tangon)(offset, backup);
            sizing = new Array(2);
            sizing[0] = backup;
            backup = _closure1_slot9;
            result = _closure1_slot0;
            output = _closure1_slot2;
            output = output[update];
            output = result.bind(tangon)(output);
            result = output.Text;
            output = {'variant': 'text-xs/medium', 'color': 'interactive-normal'};
            output['children'] = echoed;
            output = backup.bind(tangon)(result, output);
            sizing[1] = output;
            foxtra['children'] = sizing;
            foxtra = golfie.bind(tangon)(offset, foxtra);
            yankee[1] = foxtra;
            foxtra = _closure1_slot5;
            romeon = {};
            kiloes = kiloes.spacerView;
            romeon['style'] = kiloes;
            romeon = backup.bind(tangon)(foxtra, romeon);
            yankee[2] = romeon;
            option['children'] = yankee;
            offset = golfie.bind(tangon)(offset, option);
            option = new Array(2);
            option[0] = offset;
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    michal = 'interaction_iframe_modal';
    zuuluu['INTERACTION_IFRAME_MODAL_KEY'] = michal;
    return entity;
})();