// app/modules/interaction_components/native/InteractionIframeModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    yankee = 1;
    golfie = oscard[yankee];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.APPLICATIONS_WITH_NO_REFFERER;
    var _closure1_slot6 = tangon;
    offset = 4;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.BotTagTypes;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot8 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    romeon = 7;
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeon;
    verify['flex'] = yankee;
    tangon['wrapper'] = verify;
    verify = {'flexDirection': 'row', 'padding': 16, 'justifyContent': 'space-between', 'alignItems': 'center'};
    tangon['header'] = verify;
    verify = {'flexDirection': 'column', 'alignItems': 'center'};
    tangon['headerCenterContainer'] = verify;
    verify = {'flexDirection': 'row', 'marginBottom': 2};
    tangon['headerTitleContainer'] = verify;
    verify = {};
    yankee = 8;
    verify['marginEnd'] = yankee;
    tangon['closeButton'] = verify;
    verify = {'marginStart': 8, 'width': 32};
    tangon['spacerView'] = verify;
    verify = {};
    verify['marginStart'] = offset;
    tangon['botTag'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/interaction_components/native/InteractionIframeModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: InteractionIframeModal
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            report = argFoo;
            entity = _closure1_slot10;
            tangon = undefined;
            yankee = entity.bind(tangon)();
            echoed = report.application;
            kiloes = report.title;
            michal = echoed.id;
            var _closure2_slot0 = michal;
            zuuluu = _closure1_slot0;
            foxtra = _closure1_slot2;
            entity = 8;
            entity = foxtra[entity];
            zuuluu = zuuluu.bind(tangon)(entity);
            entity = zuuluu.useIframeModalState;
            entity = entity.bind(zuuluu)(report);
            romeon = entity.queryParams;
            backup = entity.iframeUrl;
            output = _closure1_slot4;
            entity = output.useState;
            report = false;
            oscard = entity.bind(output)(report);
            zuuluu = _closure1_slot3;
            entity = 2;
            oscard = zuuluu.bind(tangon)(oscard, entity);
            entity = 0;
            entity = oscard[entity];
            zuuluu = 1;
            zuuluu = oscard[zuuluu];
            var _closure2_slot1 = zuuluu;
            oscard = _closure1_slot1;
            zuuluu = 9;
            zuuluu = foxtra[zuuluu];
            verify = oscard.bind(tangon)(zuuluu);
            zuuluu = {};
            offset = true;
            zuuluu['includeKeyboardHeightIOS'] = offset;
            zuuluu = verify.bind(tangon)(zuuluu);
            verify = zuuluu.insets;
            sizing = output.useLayoutEffect;
            offset = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 10;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.lockOrientation;
                entity = 'PORTRAIT';
                entity = michal.bind(zuuluu)(entity);
                entity = function() {
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 10;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.restoreDefaultOrientation;
                    michal = michal.bind(zuuluu)();
                    return entity;
                };
                return entity;
            };
            zuuluu = new Array(0);
            zuuluu = sizing.bind(output)(offset, zuuluu);
            offset = output.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 11;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = _closure2_slot0;
                michal = zuuluu.bind(entity)(michal, entity);
                return entity;
            };
            offset = offset.bind(output)(michal, zuuluu);
            var _closure2_slot2 = offset;
            sizing = output.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = offset;
            michal = function() {
                michal = _closure2_slot2;
                entity = undefined;
                entity = michal.bind(entity)();
                entity = true;
                return entity;
            };
            zuuluu = sizing.bind(output)(michal, zuuluu);
            michal = 12;
            michal = foxtra[michal];
            michal = oscard.bind(tangon)(michal);
            michal = michal.bind(tangon)(zuuluu);
            result = null;
            oscard = null;
            if(entity) { _fun00002_ip = 456; continue _fun00001 }
 268:
            zuuluu = _closure1_slot8;
            michal = _closure1_slot1;
            foxtra = _closure1_slot2;
            entity = 15;
            entity = foxtra[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            sizing = function() { // Original name: onActivityCrash
                zuuluu = _closure2_slot1;
                entity = undefined;
                michal = true;
                michal = zuuluu.bind(entity)(michal);
                michal = global;
                tangon = michal.setTimeout;
                zuuluu = function() {
                    zuuluu = _closure2_slot1;
                    michal = undefined;
                    entity = false;
                    entity = zuuluu.bind(michal)(entity);
                    return entity;
                };
                michal = 0;
                michal = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            entity['onActivityCrash'] = sizing;
            sizing = echoed.id;
            entity['applicationId'] = sizing;
            sizing = romeon.channel_id;
            entity['channelId'] = sizing;
            sizing = romeon.guild_id;
            entity['guildId'] = sizing;
            entity['activityUrl'] = backup;
            backup = romeon.instance_id;
            entity['activitySessionId'] = backup;
            entity['queryParams'] = romeon;
            golfie = function() { // Original name: onLoadError
                zuuluu = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 13;
                michal = verify[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.open;
                michal = {};
                oscard = 'interaction_iframe_modal';
                michal['key'] = oscard;
                option = _closure1_slot0;
                report = 14;
                oscard = verify[report];
                oscard = option.bind(entity)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = verify[report];
                report = option.bind(entity)(report);
                report = report.t;
                report = report.HehpFR;
                report = oscard.bind(golfie)(report);
                michal['content'] = report;
                michal = zuuluu.bind(tangon)(michal);
                michal = _closure2_slot2;
                michal = michal.bind(entity)();
                return entity;
            };
            entity['onLoadError'] = golfie;
            romeon = _closure1_slot0;
            golfie = 16;
            golfie = foxtra[golfie];
            romeon = romeon.bind(tangon)(golfie);
            golfie = romeon.allowPopups;
            golfie = golfie.bind(romeon)(echoed);
            entity['allowPopups'] = golfie;
            foxtra = _closure1_slot6;
            romeon = foxtra.has;
            golfie = echoed.id;
            romeon = romeon.bind(foxtra)(golfie);
            golfie = 'origin';
            if(!romeon) { _fun00002_ip = 430; continue _fun00001 }
 424:
            golfie = 'no-referrer';
 430:
            entity['referrerPolicy'] = golfie;
            entity['isPipOrGridMode'] = report;
            entity['webViewKey'] = tangon;
            entity['ignoreSilentHardwareSwitch'] = report;
            oscard = zuuluu.bind(tangon)(michal, entity);
 456:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot5;
            entity = {};
            golfie = yankee.wrapper;
            report = new Array(2);
            report[0] = golfie;
            golfie = {};
            romeon = verify.top;
            golfie['paddingTop'] = romeon;
            verify = verify.bottom;
            golfie['paddingBottom'] = verify;
            report[1] = golfie;
            entity['style'] = report;
            report = {};
            golfie = yankee.header;
            report['style'] = golfie;
            output = _closure1_slot8;
            foxtra = _closure1_slot0;
            update = _closure1_slot2;
            golfie = 17;
            golfie = update[golfie];
            golfie = foxtra.bind(tangon)(golfie);
            verify = golfie.PressableOpacity;
            golfie = {};
            romeon = 'button';
            golfie['accessibilityRole'] = romeon;
            romeon = 14;
            backup = update[romeon];
            backup = foxtra.bind(tangon)(backup);
            sizing = backup.intl;
            backup = sizing.string;
            romeon = update[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.cpT0Cg;
            romeon = backup.bind(sizing)(romeon);
            golfie['accessibilityLabel'] = romeon;
            golfie['onPress'] = offset;
            offset = yankee.closeButton;
            golfie['style'] = offset;
            offset = 18;
            offset = update[offset];
            offset = foxtra.bind(tangon)(offset);
            romeon = offset.XLargeIcon;
            offset = {};
            offset = output.bind(tangon)(romeon, offset);
            golfie['children'] = offset;
            verify = output.bind(tangon)(verify, golfie);
            golfie = new Array(3);
            golfie[0] = verify;
            verify = {};
            offset = yankee.headerCenterContainer;
            verify['style'] = offset;
            offset = {};
            romeon = yankee.headerTitleContainer;
            offset['style'] = romeon;
            sizing = 19;
            romeon = update[sizing];
            romeon = foxtra.bind(tangon)(romeon);
            foxtra = romeon.Text;
            romeon = {'variant': 'heading-sm/bold', 'color': 'header-primary'};
            backup = echoed.name;
            romeon['children'] = backup;
            foxtra = output.bind(tangon)(foxtra, romeon);
            romeon = new Array(2);
            romeon[0] = foxtra;
            backup = _closure1_slot1;
            foxtra = 20;
            foxtra = update[foxtra];
            backup = backup.bind(tangon)(foxtra);
            foxtra = {};
            update = _closure1_slot7;
            update = update.BOT;
            foxtra['type'] = update;
            echoed = echoed.bot;
            update = result == echoed;
            result = undefined;
            if(update) { _fun00002_ip = 801; continue _fun00001 }
 795:
            result = echoed.verified;
 801:
            foxtra['verified'] = result;
            result = yankee.botTag;
            foxtra['style'] = result;
            foxtra = output.bind(tangon)(backup, foxtra);
            romeon[1] = foxtra;
            offset['children'] = romeon;
            offset = zuuluu.bind(tangon)(michal, offset);
            romeon = new Array(2);
            romeon[0] = offset;
            offset = _closure1_slot8;
            backup = _closure1_slot0;
            foxtra = _closure1_slot2;
            foxtra = foxtra[sizing];
            foxtra = backup.bind(tangon)(foxtra);
            backup = foxtra.Text;
            foxtra = {'variant': 'text-xs/medium', 'color': 'interactive-normal'};
            foxtra['children'] = kiloes;
            foxtra = offset.bind(tangon)(backup, foxtra);
            romeon[1] = foxtra;
            verify['children'] = romeon;
            verify = zuuluu.bind(tangon)(michal, verify);
            golfie[1] = verify;
            verify = _closure1_slot5;
            option = {};
            yankee = yankee.spacerView;
            option['style'] = yankee;
            option = offset.bind(tangon)(verify, option);
            golfie[2] = option;
            report['children'] = golfie;
            golfie = zuuluu.bind(tangon)(michal, report);
            report = new Array(2);
            report[0] = golfie;
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();