// app/modules/interaction_components/native/InteractionIframeModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    backup = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = backup.bind(entity)(tango);
    var _closure1_slot3 = tango;
    romeo = 1;
    golf = oscar[romeo];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = backup.bind(entity)(tango);
    var _closure1_slot6 = tango;
    offset = 4;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.APPLICATIONS_WITH_NO_REFFERER;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.BotTagTypes;
    var _closure1_slot8 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot10 = tango;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    yankee = 8;
    foxtrot = oscar[yankee];
    foxtrot = backup.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = foxtrot;
    verify['flex'] = romeo;
    tango['wrapper'] = verify;
    verify = {'flexDirection': 'row', 'padding': 16, 'justifyContent': 'space-between', 'alignItems': 'center'};
    tango['header'] = verify;
    verify = {'flexDirection': 'column', 'alignItems': 'center'};
    tango['headerCenterContainer'] = verify;
    verify = {'flexDirection': 'row', 'marginBottom': 2};
    tango['headerTitleContainer'] = verify;
    verify = {};
    verify['marginEnd'] = yankee;
    tango['closeButton'] = verify;
    verify = {'marginStart': 8, 'width': 32};
    tango['spacerView'] = verify;
    verify = {};
    verify['marginStart'] = offset;
    tango['botTag'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = 25;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/interaction_components/native/InteractionIframeModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: InteractionIframeModal
        _fun123855: for(var _fun123855_ip = 0; ; ) switch(_fun123855_ip) {
 0:
            oscar = argFoo;
            entity = _closure1_slot11;
            tango = undefined;
            kilo = entity.bind(tango)();
            control = oscar.application;
            echo = oscar.title;
            mike = control.id;
            var _closure2_slot0 = mike;
            report = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 9;
            entity = yankee[entity];
            zulu = report.bind(tango)(entity);
            entity = zulu.useIframeModalState;
            entity = entity.bind(zulu)(oscar);
            offset = entity.queryParams;
            foxtrot = entity.iframeUrl;
            sizing = _closure1_slot4;
            entity = sizing.useState;
            golf = false;
            oscar = entity.bind(sizing)(golf);
            zulu = _closure1_slot3;
            entity = 2;
            verify = zulu.bind(tango)(oscar, entity);
            oscar = 0;
            entity = verify[oscar];
            zulu = 1;
            zulu = verify[zulu];
            var _closure2_slot1 = zulu;
            zulu = 10;
            zulu = yankee[zulu];
            backup = report.bind(tango)(zulu);
            verify = backup.useStateFromStores;
            zulu = _closure1_slot6;
            report = new Array(1);
            report[0] = zulu;
            zulu = function() {
                entity = _closure1_slot6;
                entity = entity.keyboardHeight;
                return entity;
            };
            report = verify.bind(backup)(report, zulu);
            backup = sizing.useLayoutEffect;
            verify = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 11;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.lockOrientation;
                entity = 'PORTRAIT';
                entity = mike.bind(zulu)(entity);
                entity = function() {
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 11;
                    mike = mike[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.restoreDefaultOrientation;
                    mike = mike.bind(zulu)();
                    return entity;
                };
                return entity;
            };
            zulu = new Array(0);
            zulu = backup.bind(sizing)(verify, zulu);
            verify = sizing.useCallback;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 12;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = _closure2_slot0;
                mike = zulu.bind(entity)(mike, entity);
                return entity;
            };
            backup = verify.bind(sizing)(mike, zulu);
            var _closure2_slot2 = backup;
            verify = sizing.useCallback;
            zulu = new Array(1);
            zulu[0] = backup;
            mike = function() {
                mike = _closure2_slot2;
                entity = undefined;
                entity = mike.bind(entity)();
                entity = true;
                return entity;
            };
            zulu = verify.bind(sizing)(mike, zulu);
            verify = _closure1_slot1;
            mike = 13;
            mike = yankee[mike];
            mike = verify.bind(tango)(mike);
            mike = mike.bind(tango)(zulu);
            source = null;
            verify = null;
            if(entity) { _fun123855_ip = 466; continue _fun123855 }
 278:
            zulu = _closure1_slot9;
            mike = _closure1_slot1;
            yankee = _closure1_slot2;
            entity = 16;
            entity = yankee[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            sizing = function() { // Original name: onActivityCrash
                zulu = _closure2_slot1;
                entity = undefined;
                mike = true;
                mike = zulu.bind(entity)(mike);
                mike = global;
                tango = mike.setTimeout;
                zulu = function() {
                    zulu = _closure2_slot1;
                    mike = undefined;
                    entity = false;
                    entity = zulu.bind(mike)(entity);
                    return entity;
                };
                mike = 0;
                mike = tango.bind(entity)(zulu, mike);
                return entity;
            };
            entity['onActivityCrash'] = sizing;
            sizing = control.id;
            entity['applicationId'] = sizing;
            sizing = offset.channel_id;
            entity['channelId'] = sizing;
            sizing = offset.guild_id;
            entity['guildId'] = sizing;
            entity['activityUrl'] = foxtrot;
            foxtrot = offset.instance_id;
            entity['activitySessionId'] = foxtrot;
            entity['queryParams'] = offset;
            options = function() { // Original name: onLoadError
                zulu = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 14;
                mike = verify[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.open;
                mike = {};
                oscar = 'interaction_iframe_modal';
                mike['key'] = oscar;
                options = _closure1_slot0;
                report = 15;
                oscar = verify[report];
                oscar = options.bind(entity)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = verify[report];
                report = options.bind(entity)(report);
                report = report.t;
                report = report.HehpFR;
                report = oscar.bind(golf)(report);
                mike['content'] = report;
                mike = zulu.bind(tango)(mike);
                mike = _closure2_slot2;
                mike = mike.bind(entity)();
                return entity;
            };
            entity['onLoadError'] = options;
            offset = _closure1_slot0;
            options = 17;
            options = yankee[options];
            offset = offset.bind(tango)(options);
            options = offset.allowPopups;
            options = options.bind(offset)(control);
            entity['allowPopups'] = options;
            yankee = _closure1_slot7;
            offset = yankee.has;
            options = control.id;
            offset = offset.bind(yankee)(options);
            options = 'origin';
            if(!offset) { _fun123855_ip = 440; continue _fun123855 }
 434:
            options = 'no-referrer';
 440:
            entity['referrerPolicy'] = options;
            entity['isPipOrGridMode'] = golf;
            entity['webViewKey'] = tango;
            entity['ignoreSilentHardwareSwitch'] = golf;
            verify = zulu.bind(tango)(mike, entity);
 466:
            zulu = _closure1_slot9;
            output = _closure1_slot0;
            vacuum = _closure1_slot2;
            entity = 18;
            entity = vacuum[entity];
            entity = output.bind(tango)(entity);
            mike = entity.SafeAreaPaddingView;
            entity = {};
            golf = kilo.wrapper;
            entity['style'] = golf;
            golf = true;
            entity['top'] = golf;
            report = oscar === report;
            entity['bottom'] = report;
            golf = _closure1_slot10;
            result = _closure1_slot1;
            report = 19;
            report = vacuum[report];
            oscar = result.bind(tango)(report);
            report = {};
            options = kilo.wrapper;
            report['style'] = options;
            offset = _closure1_slot5;
            options = {};
            yankee = kilo.header;
            options['style'] = yankee;
            yankee = 20;
            yankee = vacuum[yankee];
            yankee = output.bind(tango)(yankee);
            foxtrot = yankee.PressableOpacity;
            yankee = {};
            sizing = 'button';
            yankee['accessibilityRole'] = sizing;
            sizing = 15;
            update = vacuum[sizing];
            update = output.bind(tango)(update);
            sequence = update.intl;
            update = sequence.string;
            sizing = vacuum[sizing];
            sizing = output.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.cpT0Cg;
            sizing = update.bind(sequence)(sizing);
            yankee['accessibilityLabel'] = sizing;
            yankee['onPress'] = backup;
            backup = kilo.closeButton;
            yankee['style'] = backup;
            update = 21;
            backup = vacuum[update];
            sizing = result.bind(tango)(backup);
            backup = {};
            sequence = 22;
            sequence = vacuum[sequence];
            sequence = result.bind(tango)(sequence);
            backup['source'] = sequence;
            update = vacuum[update];
            update = result.bind(tango)(update);
            update = update.Sizes;
            update = update.LARGE;
            backup['size'] = update;
            backup = zulu.bind(tango)(sizing, backup);
            yankee['children'] = backup;
            foxtrot = zulu.bind(tango)(foxtrot, yankee);
            yankee = new Array(3);
            yankee[0] = foxtrot;
            foxtrot = {};
            backup = kilo.headerCenterContainer;
            foxtrot['style'] = backup;
            backup = {};
            sizing = kilo.headerTitleContainer;
            backup['style'] = sizing;
            update = 23;
            sizing = vacuum[update];
            sizing = output.bind(tango)(sizing);
            output = sizing.Text;
            sizing = {'variant': 'heading-sm/bold', 'color': 'header-primary'};
            sequence = control.name;
            sizing['children'] = sequence;
            output = zulu.bind(tango)(output, sizing);
            sizing = new Array(2);
            sizing[0] = output;
            output = 24;
            output = vacuum[output];
            result = result.bind(tango)(output);
            output = {};
            vacuum = _closure1_slot8;
            vacuum = vacuum.BOT;
            output['type'] = vacuum;
            control = control.bot;
            vacuum = source == control;
            source = undefined;
            if(vacuum) { _fun123855_ip = 868; continue _fun123855 }
 862:
            source = control.verified;
 868:
            output['verified'] = source;
            source = kilo.botTag;
            output['style'] = source;
            output = zulu.bind(tango)(result, output);
            sizing[1] = output;
            backup['children'] = sizing;
            backup = golf.bind(tango)(offset, backup);
            sizing = new Array(2);
            sizing[0] = backup;
            backup = _closure1_slot9;
            result = _closure1_slot0;
            output = _closure1_slot2;
            output = output[update];
            output = result.bind(tango)(output);
            result = output.Text;
            output = {'variant': 'text-xs/medium', 'color': 'interactive-normal'};
            output['children'] = echo;
            output = backup.bind(tango)(result, output);
            sizing[1] = output;
            foxtrot['children'] = sizing;
            foxtrot = golf.bind(tango)(offset, foxtrot);
            yankee[1] = foxtrot;
            foxtrot = _closure1_slot5;
            romeo = {};
            kilo = kilo.spacerView;
            romeo['style'] = kilo;
            romeo = backup.bind(tango)(foxtrot, romeo);
            yankee[2] = romeo;
            options['children'] = yankee;
            offset = golf.bind(tango)(offset, options);
            options = new Array(2);
            options[0] = offset;
            options[1] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    mike = 'interaction_iframe_modal';
    zulu['INTERACTION_IFRAME_MODAL_KEY'] = mike;
    return entity;
})();