// app/modules/interaction_components/native/display/TextDisplayComponent.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
        var5 = require;
        var8 = metroImportDefault;
        var3 = exports;
        var6 = dependencyMap;
        var _closure1_slot0 = var5;
        var _closure1_slot1 = var8;
        var _closure1_slot2 = var6;
        var1 = global;
        var9 = var1.Object;
        var7 = var9.defineProperty;
        var4 = {};
        var1 = true;
        var4['value'] = var1;
        var1 = '__esModule';
        var1 = var7.bind(var9)(var3, var1, var4);
        var1 = 0;
        var4 = var6[var1];
        var1 = undefined;
        var4 = var8.bind(var1)(var4);
        var _closure1_slot3 = var4;
        var4 = 1;
        var7 = var6[var4];
        var4 = metroImportAll;
        var4 = var4.bind(var1)(var7);
        var _closure1_slot4 = var4;
        var4 = 2;
        var4 = var6[var4];
        var4 = var5.bind(var1)(var4);
        var7 = var4.requireNativeComponent;
        var4 = 3;
        var4 = var6[var4];
        var4 = var8.bind(var1)(var4);
        var _closure1_slot5 = var4;
        var4 = 4;
        var4 = var6[var4];
        var4 = var8.bind(var1)(var4);
        var _closure1_slot6 = var4;
        var4 = 5;
        var4 = var6[var4];
        var4 = var5.bind(var1)(var4);
        var4 = var4.TEXT_DISPLAY_COMPONENT_MARKDOWN_RENDER_OPTIONS;
        var _closure1_slot7 = var4;
        var4 = 6;
        var4 = var6[var4];
        var4 = var5.bind(var1)(var4);
        var4 = var4.jsx;
        var _closure1_slot8 = var4;
        var4 = 7;
        var4 = var6[var4];
        var9 = var5.bind(var1)(var4);
        var4 = var9.isAndroid;
        var4 = var4.bind(var9)();
        if(var4) { _fun0001_ip = 224; continue _fun0001 }
 211:
        var4 = 'DCDTextDisplayComponentView';
        var4 = var7.bind(var1)(var4);
        _fun0001_ip = 236; continue _fun0001;
 224:
        var7 = 8;
        var7 = var6[var7];
        var4 = var8.bind(var1)(var7);
 236:
        var _closure1_slot9 = var4;
        var4 = 18;
        var4 = var6[var4];
        var6 = var5.bind(var1)(var4);
        var5 = var6.fileFinishedImporting;
        var4 = 'modules/interaction_components/native/display/TextDisplayComponent.tsx';
        var4 = var5.bind(var6)(var4);
        var2 = function TextDisplayComponent(arg1) {
            _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
 0:
                var16 = arg1;
                var3 = _closure1_slot0;
                var4 = _closure1_slot2;
                var1 = 9;
                var1 = var4[var1];
                var5 = undefined;
                var6 = var3.bind(var5)(var1);
                var1 = var6.useComponentContainerId;
                var15 = var1.bind(var6)();
                var14 = _closure1_slot4;
                var1 = var14.useState;
                var1 = var1.bind(var14)();
                var12 = _closure1_slot3;
                var11 = 2;
                var1 = var12.bind(var5)(var1, var11);
                var8 = 0;
                var10 = var1[var8];
                var6 = 1;
                var1 = var1[var6];
                var _closure2_slot0 = var1;
                var13 = var14.useCallback;
                var7 = function(arg1) {
                    var1 = arg1;
                    var1 = var1.nativeEvent;
                    var3 = _closure2_slot0;
                    var1 = var1.layout;
                    var2 = var1.height;
                    var1 = undefined;
                    var2 = var3.bind(var1)(var2);
                    return var1;
                };
                var1 = new Array(0);
                var7 = var13.bind(var14)(var7, var1);
                var13 = _closure1_slot6;
                var1 = var13.getChannelId;
                var20 = var1.bind(var13)();
                var _closure2_slot1 = var20;
                var13 = _closure1_slot1;
                var1 = 10;
                var1 = var4[var1];
                var14 = var13.bind(var5)(var1);
                var1 = 'channelId not available in TextDisplayComponent';
                var1 = var14.bind(var5)(var20, var1);
                var1 = 11;
                var1 = var4[var1];
                var18 = var13.bind(var5)(var1);
                var17 = var18.parseToAST;
                var14 = var16.content;
                var1 = 12;
                var1 = var4[var1];
                var19 = var3.bind(var5)(var1);
                var13 = var19.getInitialParserState;
                var1 = {};
                var1['channelId'] = var20;
                var20 = _closure1_slot7;
                var1['renderOptions'] = var20;
                var13 = var13.bind(var19)(var1);
                var1 = true;
                var17 = var17.bind(var18)(var14, var1, var13);
                var1 = 13;
                var1 = var4[var1];
                var18 = var3.bind(var5)(var1);
                var14 = var18.useStateFromStoresArray;
                var1 = _closure1_slot5;
                var13 = new Array(1);
                var13[0] = var1;
                var1 = function() {
                    var2 = _closure1_slot5;
                    var3 = var2.roleStyle;
                    var1 = new Array(2);
                    var1[0] = var3;
                    var2 = var2.alwaysShowLinkDecorations;
                    var1[1] = var2;
                    return var1;
                };
                var1 = var14.bind(var18)(var13, var1);
                var1 = var12.bind(var5)(var1, var11);
                var13 = var1[var8];
                var12 = var1[var6];
                var1 = 14;
                var1 = var4[var1];
                var1 = var3.bind(var5)(var1);
                var6 = var1.AnimateEmoji;
                var1 = var6.useSetting;
                var14 = var1.bind(var6)();
                var8 = _closure1_slot8;
                var6 = _closure1_slot9;
                var1 = {};
                var11 = {};
                var23 = var11;
                var22 = var16;
                var16 = copyDataProperties(var23, var22);
                var16 = 'content';
                var11[var16] = var17;
                var1['model'] = var11;
                var11 = {};
                var11['containerId'] = var15;
                var11['shouldAnimateEmoji'] = var14;
                var11['shouldShowLinkDecorations'] = var12;
                var12 = 'dot';
                var12 = var12 === var13;
                var11['shouldShowRoleDot'] = var12;
                var12 = 'username';
                var12 = var12 === var13;
                var11['shouldShowRoleOnName'] = var12;
                var1['markdownTextRenderOptions'] = var11;
                var9 = function onTapLink(arg1) {
                    var1 = arg1;
                    var1 = var1.nativeEvent;
                    var5 = var1.data;
                    var3 = _closure1_slot0;
                    var2 = _closure1_slot2;
                    var1 = 15;
                    var2 = var2[var1];
                    var1 = undefined;
                    var4 = var3.bind(var1)(var2);
                    var3 = var4.handleMessagesTapURLLink;
                    var2 = _closure2_slot1;
                    var2 = var3.bind(var4)(var5, var2);
                    return var1;
                };
                var1['onTapLink'] = var9;
                var9 = 16;
                var11 = var4[var9];
                var11 = var3.bind(var5)(var11);
                var11 = var11.contentHandlers;
                var11 = var11.onLongPressLink;
                var1['onLongPressLink'] = var11;
                var11 = var4[var9];
                var11 = var3.bind(var5)(var11);
                var11 = var11.contentHandlers;
                var11 = var11.onTapAttachmentLink;
                var1['onTapAttachmentLink'] = var11;
                var11 = var4[var9];
                var11 = var3.bind(var5)(var11);
                var11 = var11.contentHandlers;
                var11 = var11.onLongPressAttachmentLink;
                var1['onLongPressAttachmentLink'] = var11;
                var11 = var4[var9];
                var11 = var3.bind(var5)(var11);
                var11 = var11.contentHandlers;
                var11 = var11.onTapMention;
                var1['onTapMention'] = var11;
                var11 = var4[var9];
                var11 = var3.bind(var5)(var11);
                var11 = var11.contentHandlers;
                var11 = var11.onTapTimestamp;
                var1['onTapTimestamp'] = var11;
                var11 = var4[var9];
                var11 = var3.bind(var5)(var11);
                var11 = var11.contentHandlers;
                var11 = var11.onTapInlineCode;
                var1['onTapInlineCode'] = var11;
                var9 = var4[var9];
                var9 = var3.bind(var5)(var9);
                var9 = var9.contentHandlers;
                var9 = var9.onTapEmoji;
                var1['onTapEmoji'] = var9;
                var9 = {};
                var11 = '100%';
                var9['width'] = var11;
                var9['height'] = var10;
                var1['style'] = var9;
                var6 = var8.bind(var5)(var6, var1);
                var1 = 7;
                var1 = var4[var1];
                var3 = var3.bind(var5)(var1);
                var1 = var3.isAndroid;
                var3 = var1.bind(var3)();
                var1 = var6;
                if(!var3) { _fun0002_ip = 685; continue _fun0002 }
 644:
                var4 = _closure1_slot8;
                var3 = _closure1_slot1;
                var8 = _closure1_slot2;
                var2 = 17;
                var2 = var8[var2];
                var3 = var3.bind(var5)(var2);
                var2 = {};
                var2['onLayout'] = var7;
                var2['children'] = var6;
                var1 = var4.bind(var5)(var3, var2);
 685:
                return var1;
            }
        };
        var3['default'] = var2;
        return var1;
    }
})();