// app/modules/global_discovery_servers/native/components/GlobalDiscoveryServersCard.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    golf = argBar;
    romeo = argBaz;
    zulu = argFred;
    options = argPlugh;
    var _closure1_slot0 = golf;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = options;
    entity = function(argFoo) { // Original name: GlobalDiscoveryServersCard
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zulu = argFoo;
            config = zulu.guild;
            var _closure2_slot0 = config;
            mike = zulu.width;
            report = zulu.onPress;
            var _closure2_slot1 = report;
            options = zulu.style;
            zulu = _closure1_slot17;
            tango = undefined;
            foxtrot = zulu.bind(tango)();
            verify = _closure1_slot5;
            golf = verify.useMemo;
            zulu = config.banner;
            oscar = new Array(2);
            oscar[0] = zulu;
            zulu = config.id;
            oscar[1] = zulu;
            zulu = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 14;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.getGuildBannerSource;
                entity = {};
                tango = _closure2_slot0;
                report = tango.id;
                entity['id'] = report;
                tango = tango.banner;
                entity['banner'] = tango;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            sizing = golf.bind(verify)(zulu, oscar);
            verify = _closure1_slot5;
            golf = verify.useMemo;
            oscar = new Array(1);
            oscar[0] = config;
            zulu = function() {
                zulu = _closure1_slot8;
                tango = _closure2_slot0;
                mike = zulu.prototype;
                mike = Object.create(mike, {constructor: {value: zulu}});
                report = mike;
                entity = new report[zulu](tango, zulu);
                entity = entity instanceof Object ? entity : mike;
                return entity;
            };
            update = golf.bind(verify)(zulu, oscar);
            var _closure2_slot2 = mike;
            zulu = 0.5625;
            verify = zulu * mike;
            var _closure2_slot3 = verify;
            golf = _closure1_slot5;
            oscar = golf.useMemo;
            zulu = new Array(2);
            zulu[0] = verify;
            zulu[1] = mike;
            mike = function() {
                entity = {};
                zulu = _closure2_slot3;
                entity['height'] = zulu;
                mike = _closure2_slot2;
                entity['width'] = mike;
                return entity;
            };
            output = oscar.bind(golf)(mike, zulu);
            golf = _closure1_slot5;
            oscar = golf.useMemo;
            zulu = new Array(1);
            zulu[0] = config;
            mike = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 15;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.getGuildBadgeSource;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            record = oscar.bind(golf)(mike, zulu);
            mike = _closure1_slot1;
            verify = _closure1_slot2;
            zulu = 16;
            zulu = verify[zulu];
            zulu = mike.bind(tango)(zulu);
            zulu = zulu.bind(tango)();
            var _closure2_slot4 = zulu;
            yankee = _closure1_slot5;
            golf = yankee.useMemo;
            oscar = new Array(1);
            oscar[0] = zulu;
            zulu = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zulu = _closure2_slot4;
                    entity = _closure1_slot13;
                    entity = entity.LIGHT;
                    if(!(zulu !== entity)) { _fun00004_ip = 107; continue _fun00003 }
 24:
                    report = _closure1_slot1;
                    oscar = _closure1_slot2;
                    entity = 17;
                    entity = oscar[entity];
                    tango = undefined;
                    zulu = report.bind(tango)(entity);
                    entity = 13;
                    entity = oscar[entity];
                    entity = report.bind(tango)(entity);
                    entity = entity.unsafe_rawColors;
                    entity = entity.BLACK_500;
                    tango = zulu.bind(tango)(entity);
                    zulu = tango.alpha;
                    entity = 0.5;
                    zulu = zulu.bind(tango)(entity);
                    entity = zulu.css;
                    entity = entity.bind(zulu)();
                    _fun00004_ip = 188; continue _fun00003;
 107:
                    report = _closure1_slot1;
                    oscar = _closure1_slot2;
                    mike = 17;
                    mike = oscar[mike];
                    tango = undefined;
                    zulu = report.bind(tango)(mike);
                    mike = 13;
                    mike = oscar[mike];
                    mike = report.bind(tango)(mike);
                    mike = mike.unsafe_rawColors;
                    mike = mike.BLACK_300;
                    tango = zulu.bind(tango)(mike);
                    zulu = tango.alpha;
                    mike = 0.2;
                    zulu = zulu.bind(tango)(mike);
                    mike = zulu.css;
                    entity = mike.bind(zulu)();
 188:
                    return entity;
                }
            };
            backup = golf.bind(yankee)(zulu, oscar);
            oscar = _closure1_slot0;
            zulu = 18;
            zulu = verify[zulu];
            yankee = oscar.bind(tango)(zulu);
            golf = yankee.useStateFromStores;
            zulu = _closure1_slot10;
            oscar = new Array(2);
            oscar[0] = zulu;
            zulu = _closure1_slot9;
            oscar[1] = zulu;
            zulu = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    oscar = _closure1_slot10;
                    report = oscar.isMember;
                    entity = _closure2_slot0;
                    tango = entity.id;
                    golf = _closure1_slot9;
                    entity = golf.getId;
                    entity = entity.bind(golf)();
                    entity = report.bind(oscar)(tango, entity);
                    if(!entity) { _fun00006_ip = 90; continue _fun00005 }
 48:
                    report = _closure1_slot10;
                    tango = report.isGuestOrLurker;
                    zulu = _closure2_slot0;
                    zulu = zulu.id;
                    oscar = _closure1_slot9;
                    mike = oscar.getId;
                    mike = mike.bind(oscar)();
                    mike = tango.bind(report)(zulu, mike);
                    entity = !mike;
 90:
                    return entity;
                }
            };
            yankee = golf.bind(yankee)(oscar, zulu);
            golf = _closure1_slot5;
            oscar = golf.useState;
            zulu = false;
            golf = oscar.bind(golf)(zulu);
            oscar = _closure1_slot4;
            zulu = 2;
            golf = oscar.bind(tango)(golf, zulu);
            zulu = 0;
            oscar = golf[zulu];
            zulu = 1;
            zulu = golf[zulu];
            var _closure2_slot5 = zulu;
            romeo = _closure1_slot5;
            golf = romeo.useCallback;
            zulu = _closure1_slot3;
            entity = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=2);
                        if(zulu) { _fun00008_ip = 358; continue _fun00007 }
 10:
                        report = undefined;
                        options = undefined;
                        oscar = _closure2_slot5;
                        tango = true;
                        tango = oscar.bind(report)(tango);
 28: // try_start_0 // try_start_1
                        oscar = _closure2_slot1;
                        tango = null;
                        oscar = tango == oscar;
                        tango = undefined;
                        if(oscar) { _fun00008_ip = 51; continue _fun00007 }
 43:
                        oscar = _closure2_slot1;
                        tango = oscar.bind(report)();
 51:
                        SaveGenerator(address=55);
 53:
                        return tango;
 55:
                        ResumeGenerator(result_out_reg=3, return_bool_out_reg=5);
                        if(oscar) { _fun00008_ip = 66; continue _fun00007 }
 61: // try_end0
                        _fun00008_ip = 315; continue _fun00007;
 66: // try_end1
                        golf = _closure2_slot5;
                        oscar = false;
                        oscar = golf.bind(report)(oscar);
                        return tango;
 80: // try_start_2 // catch_target0
                        CatchBlockStart(arg_register=1);
                        oscar = _closure1_slot11;
                        tango = oscar.getAlert;
                        tango = tango.bind(oscar)();
                        offset = null;
                        if(!(offset == tango)) { _fun00008_ip = 329; continue _fun00007 }
 108:
                        kilo = _closure1_slot0;
                        verify = _closure1_slot2;
                        tango = 19;
                        tango = verify[tango];
                        tango = kilo.bind(report)(tango);
                        oscar = tango.APIError;
                        sizing = mike;
                        tango = oscar.prototype;
                        tango = Object.create(tango, {constructor: {value: oscar}});
                        output = tango;
                        mike = new output[oscar](sizing, kilo);
                        yankee = mike instanceof Object ? mike : tango;
                        tango = _closure1_slot1;
                        mike = 20;
                        mike = verify[mike];
                        oscar = tango.bind(report)(mike);
                        tango = oscar.show;
                        mike = {};
                        romeo = 21;
                        foxtrot = verify[romeo];
                        foxtrot = kilo.bind(report)(foxtrot);
                        backup = foxtrot.intl;
                        foxtrot = backup.string;
                        verify = verify[romeo];
                        verify = kilo.bind(report)(verify);
                        verify = verify.t;
                        verify = verify.iufib2;
                        verify = foxtrot.bind(backup)(verify);
                        mike['title'] = verify;
                        verify = yankee.getAnyErrorMessage;
                        verify = verify.bind(yankee)();
                        options = verify;
                        if(!(offset == verify)) { _fun00008_ip = 303; continue _fun00007 }
 249:
                        yankee = _closure1_slot0;
                        golf = _closure1_slot2;
                        verify = golf[romeo];
                        verify = yankee.bind(report)(verify);
                        offset = verify.intl;
                        verify = offset.string;
                        golf = golf[romeo];
                        golf = yankee.bind(report)(golf);
                        golf = golf.t;
                        golf = golf.eAn6z8;
                        golf = verify.bind(offset)(golf);
                        _fun00008_ip = 306; continue _fun00007;
 303:
                        golf = options;
 306:
                        mike['body'] = golf;
                        mike = tango.bind(oscar)(mike);
 315: // try_end2
                        tango = _closure2_slot5;
                        mike = false;
                        mike = tango.bind(report)(mike);
                        return report;
 329:
                        tango = _closure2_slot5;
                        mike = false;
                        mike = tango.bind(report)(mike);
                        return report;
 343: // catch_target1 // catch_target2
                        CatchBlockStart(arg_register=1);
                        tango = _closure2_slot5;
                        zulu = false;
                        zulu = tango.bind(report)(zulu);
                        throw mike;
 358:
                        return entity;
                    }
                };
                return entity;
            };
            zulu = zulu.bind(tango)(entity);
            entity = new Array(1);
            entity[0] = report;
            golf = golf.bind(romeo)(zulu, entity);
            zulu = _closure1_slot15;
            entity = 22;
            entity = verify[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            entity['disabled'] = oscar;
            entity['style'] = options;
            source = null;
            options = source != report;
            report = undefined;
            if(!options) { _fun00002_ip = 444; continue _fun00001 }
 441:
            report = golf;
 444:
            entity['onPress'] = report;
            options = _closure1_slot15;
            golf = _closure1_slot7;
            report = {};
            verify = foxtrot.bannerContainer;
            report['style'] = verify;
            kilo = _closure1_slot14;
            romeo = _closure1_slot1;
            result = _closure1_slot2;
            verify = 23;
            verify = result[verify];
            romeo = romeo.bind(tango)(verify);
            verify = {};
            verify['style'] = output;
            verify['source'] = sizing;
            sizing = 'cover';
            verify['resizeMode'] = sizing;
            romeo = kilo.bind(tango)(romeo, verify);
            verify = new Array(2);
            verify[0] = romeo;
            if(!yankee) { _fun00002_ip = 742; continue _fun00001 }
 531:
            sizing = _closure1_slot15;
            kilo = _closure1_slot7;
            romeo = {};
            output = foxtrot.joinBadge;
            romeo['style'] = output;
            echo = _closure1_slot14;
            papa = _closure1_slot0;
            target = _closure1_slot2;
            output = 24;
            output = target[output];
            output = papa.bind(tango)(output);
            result = output.CircleCheckIcon;
            output = {};
            control = 'xxs';
            output['size'] = control;
            vacuum = _closure1_slot1;
            control = 13;
            control = target[control];
            control = vacuum.bind(tango)(control);
            control = control.colors;
            control = control.STATUS_POSITIVE;
            output['color'] = control;
            result = echo.bind(tango)(result, output);
            output = new Array(2);
            output[0] = result;
            control = _closure1_slot14;
            result = 25;
            result = target[result];
            result = papa.bind(tango)(result);
            echo = result.Text;
            result = {'variant': 'text-xs/medium', 'color': 'header-primary'};
            vacuum = 21;
            sequence = target[vacuum];
            sequence = papa.bind(tango)(sequence);
            context = sequence.intl;
            sequence = context.string;
            vacuum = target[vacuum];
            vacuum = papa.bind(tango)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.cEnaW1;
            vacuum = sequence.bind(context)(vacuum);
            result['children'] = vacuum;
            result = control.bind(tango)(echo, result);
            output[1] = result;
            romeo['children'] = output;
            yankee = sizing.bind(tango)(kilo, romeo);
 742:
            verify[1] = yankee;
            report['children'] = verify;
            golf = options.bind(tango)(golf, report);
            report = new Array(3);
            report[0] = golf;
            verify = _closure1_slot15;
            options = _closure1_slot7;
            golf = {};
            yankee = foxtrot.content;
            golf['style'] = yankee;
            kilo = _closure1_slot14;
            romeo = _closure1_slot7;
            yankee = {};
            sizing = foxtrot.iconContainer;
            yankee['style'] = sizing;
            echo = _closure1_slot14;
            result = _closure1_slot1;
            output = _closure1_slot2;
            sizing = 11;
            sizing = output[sizing];
            result = result.bind(tango)(sizing);
            sizing = {};
            control = foxtrot.icon;
            sizing['style'] = control;
            sizing['guild'] = update;
            update = _closure1_slot16;
            update = update.ICON_SIZE;
            sizing['size'] = update;
            sizing = echo.bind(tango)(result, sizing);
            yankee['children'] = sizing;
            romeo = kilo.bind(tango)(romeo, yankee);
            yankee = new Array(3);
            yankee[0] = romeo;
            sizing = _closure1_slot15;
            kilo = _closure1_slot7;
            romeo = {};
            result = foxtrot.details;
            romeo['style'] = result;
            update = _closure1_slot15;
            echo = _closure1_slot0;
            result = 25;
            output = output[result];
            output = echo.bind(tango)(output);
            echo = output.Text;
            output = {'variant': 'text-md/semibold', 'color': 'header-primary'};
            control = source != record;
            if(!control) { _fun00002_ip = 1024; continue _fun00001 }
 946:
            sequence = _closure1_slot14;
            papa = _closure1_slot1;
            target = _closure1_slot2;
            context = 26;
            source = target[context];
            vacuum = papa.bind(tango)(source);
            source = {};
            status = foxtrot.badge;
            source['style'] = status;
            context = target[context];
            context = papa.bind(tango)(context);
            context = context.Sizes;
            context = context.REFRESH_SMALL_16;
            source['size'] = context;
            source['source'] = record;
            record = true;
            source['disableColor'] = record;
            control = sequence.bind(tango)(vacuum, source);
 1024:
            source = new Array(2);
            source[0] = control;
            control = config.name;
            source[1] = control;
            output['children'] = source;
            echo = update.bind(tango)(echo, output);
            output = new Array(2);
            output[0] = echo;
            source = _closure1_slot14;
            control = _closure1_slot0;
            record = _closure1_slot2;
            echo = record[result];
            echo = control.bind(tango)(echo);
            update = echo.Text;
            echo = {'variant': 'text-sm/medium', 'color': 'header-primary'};
            vacuum = config.description;
            echo['children'] = vacuum;
            echo = source.bind(tango)(update, echo);
            output[1] = echo;
            romeo['children'] = output;
            romeo = sizing.bind(tango)(kilo, romeo);
            yankee[1] = romeo;
            sizing = _closure1_slot15;
            kilo = _closure1_slot7;
            romeo = {};
            output = foxtrot.metrics;
            romeo['style'] = output;
            update = _closure1_slot14;
            echo = _closure1_slot7;
            output = {};
            vacuum = foxtrot.dot;
            source = new Array(2);
            source[0] = vacuum;
            vacuum = foxtrot.presenceDot;
            source[1] = vacuum;
            output['style'] = source;
            echo = update.bind(tango)(echo, output);
            output = new Array(4);
            output[0] = echo;
            vacuum = _closure1_slot14;
            echo = record[result];
            echo = control.bind(tango)(echo);
            update = echo.Text;
            echo = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            source = foxtrot.presenceCount;
            echo['style'] = source;
            source = 21;
            sequence = record[source];
            sequence = control.bind(tango)(sequence);
            target = sequence.intl;
            papa = target.format;
            sequence = record[source];
            sequence = control.bind(tango)(sequence);
            sequence = sequence.t;
            context = sequence.LC+S+v;
            sequence = {};
            status = config.presenceCount;
            sequence['membersOnline'] = status;
            sequence = papa.bind(target)(context, sequence);
            echo['children'] = sequence;
            echo = vacuum.bind(tango)(update, echo);
            output[1] = echo;
            vacuum = _closure1_slot14;
            update = _closure1_slot7;
            echo = {};
            context = foxtrot.dot;
            sequence = new Array(2);
            sequence[0] = context;
            context = foxtrot.membersDot;
            sequence[1] = context;
            echo['style'] = sequence;
            echo = vacuum.bind(tango)(update, echo);
            output[2] = echo;
            update = _closure1_slot14;
            result = record[result];
            result = control.bind(tango)(result);
            echo = result.Text;
            result = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            vacuum = record[source];
            vacuum = control.bind(tango)(vacuum);
            sequence = vacuum.intl;
            vacuum = sequence.format;
            source = record[source];
            source = control.bind(tango)(source);
            source = source.t;
            control = source.zRl6XV;
            source = {};
            config = config.memberCount;
            source['count'] = config;
            source = vacuum.bind(sequence)(control, source);
            result['children'] = source;
            result = update.bind(tango)(echo, result);
            output[3] = result;
            romeo['children'] = output;
            romeo = sizing.bind(tango)(kilo, romeo);
            yankee[2] = romeo;
            golf['children'] = yankee;
            golf = verify.bind(tango)(options, golf);
            report[1] = golf;
            if(!oscar) { _fun00002_ip = 1577; continue _fun00001 }
 1503:
            verify = _closure1_slot14;
            options = _closure1_slot7;
            golf = {};
            romeo = foxtrot.loading;
            yankee = new Array(2);
            yankee[0] = romeo;
            romeo = {};
            romeo['backgroundColor'] = backup;
            yankee[1] = romeo;
            golf['style'] = yankee;
            romeo = _closure1_slot14;
            yankee = _closure1_slot6;
            offset = {};
            foxtrot = foxtrot.indicator;
            offset['style'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            golf['children'] = offset;
            oscar = verify.bind(tango)(options, golf);
 1577:
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot18 = entity;
    entity = global;
    oscar = entity.Object;
    tango = oscar.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(oscar)(zulu, entity, mike);
    entity = 0;
    mike = options[entity];
    entity = undefined;
    mike = romeo.bind(entity)(mike);
    var _closure1_slot3 = mike;
    mike = 1;
    mike = options[mike];
    mike = romeo.bind(entity)(mike);
    var _closure1_slot4 = mike;
    mike = 2;
    tango = options[mike];
    mike = argCorge;
    mike = mike.bind(entity)(tango);
    var _closure1_slot5 = mike;
    mike = 3;
    mike = options[mike];
    mike = golf.bind(entity)(mike);
    tango = mike.ActivityIndicator;
    var _closure1_slot6 = tango;
    mike = mike.View;
    var _closure1_slot7 = mike;
    kilo = 4;
    mike = options[kilo];
    mike = romeo.bind(entity)(mike);
    var _closure1_slot8 = mike;
    mike = 5;
    mike = options[mike];
    mike = romeo.bind(entity)(mike);
    var _closure1_slot9 = mike;
    mike = 6;
    mike = options[mike];
    mike = romeo.bind(entity)(mike);
    var _closure1_slot10 = mike;
    mike = 7;
    mike = options[mike];
    mike = romeo.bind(entity)(mike);
    var _closure1_slot11 = mike;
    mike = 8;
    mike = options[mike];
    mike = romeo.bind(entity)(mike);
    var _closure1_slot12 = mike;
    mike = 9;
    mike = options[mike];
    mike = golf.bind(entity)(mike);
    mike = mike.ThemeTypes;
    var _closure1_slot13 = mike;
    mike = 10;
    tango = options[mike];
    tango = golf.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot14 = tango;
    mike = options[mike];
    mike = golf.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot15 = mike;
    tango = {'CARD_HEIGHT': 316, 'IMAGE_HEIGHT': 160};
    mike = 11;
    mike = options[mike];
    mike = golf.bind(entity)(mike);
    mike = mike.GuildIconSizes;
    mike = mike.LARGE;
    tango['ICON_SIZE'] = mike;
    var _closure1_slot16 = tango;
    foxtrot = 12;
    mike = options[foxtrot];
    verify = golf.bind(entity)(mike);
    oscar = verify.createStyles;
    mike = {};
    offset = {};
    yankee = tango.IMAGE_HEIGHT;
    offset['height'] = yankee;
    yankee = 'hidden';
    offset['overflow'] = yankee;
    mike['bannerContainer'] = offset;
    offset = {'position': 'absolute', 'top': 0, 'left': 0, 'right': 0};
    mike['banner'] = offset;
    backup = 16;
    offset = {'margin': 16, 'marginTop': 38};
    mike['content'] = offset;
    offset = {'position': 'absolute', 'top': 4294967232, 'padding': 2};
    yankee = 13;
    sizing = options[yankee];
    sizing = romeo.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.sm;
    offset['borderRadius'] = sizing;
    sizing = options[yankee];
    sizing = romeo.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.CARD_PRIMARY_BG;
    offset['backgroundColor'] = sizing;
    mike['iconContainer'] = offset;
    offset = {};
    sizing = options[yankee];
    sizing = romeo.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.sm;
    offset['borderRadius'] = sizing;
    mike['icon'] = offset;
    offset = {};
    offset['marginRight'] = kilo;
    mike['badge'] = offset;
    offset = {'gap': 8, 'marginBottom': 16};
    mike['details'] = offset;
    offset = {'flexDirection': 'row', 'alignItems': 'center'};
    mike['metrics'] = offset;
    offset = {'height': 6, 'width': 6, 'borderRadius': null, 'marginEnd': 4};
    kilo = options[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.sm;
    offset['borderRadius'] = kilo;
    mike['dot'] = offset;
    offset = {};
    kilo = options[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.unsafe_rawColors;
    kilo = kilo.GREEN_360;
    offset['backgroundColor'] = kilo;
    mike['presenceDot'] = offset;
    offset = {};
    offset['marginEnd'] = backup;
    mike['presenceCount'] = offset;
    offset = {};
    backup = options[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.TEXT_MUTED;
    offset['backgroundColor'] = backup;
    mike['membersDot'] = offset;
    offset = {'position': 'absolute', 'left': 0, 'right': 0, 'top': 0, 'bottom': 0, 'alignItems': 'center', 'justifyContent': 'center'};
    mike['loading'] = offset;
    offset = {};
    backup = options[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.CARD_PRIMARY_BG;
    offset['backgroundColor'] = backup;
    offset['padding'] = foxtrot;
    foxtrot = options[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xs;
    offset['borderRadius'] = foxtrot;
    mike['indicator'] = offset;
    offset = {'backgroundColor': null, 'gap': 4, 'borderRadius': null, 'paddingHorizontal': 8, 'paddingVertical': 4, 'flexDirection': 'row', 'alignItems': 'center', 'position': 'absolute', 'right': 16, 'top': 16};
    foxtrot = options[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.CARD_PRIMARY_BG;
    offset['backgroundColor'] = foxtrot;
    yankee = options[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.round;
    offset['borderRadius'] = yankee;
    mike['joinBadge'] = offset;
    mike = oscar.bind(verify)(mike);
    var _closure1_slot17 = mike;
    oscar = 27;
    oscar = options[oscar];
    options = golf.bind(entity)(oscar);
    golf = options.fileFinishedImporting;
    oscar = 'modules/global_discovery_servers/native/components/GlobalDiscoveryServersCard.tsx';
    oscar = golf.bind(options)(oscar);
    report = function(argFoo) { // Original name: ConnectedGlobalDiscoveryServerCard
        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
            oscar = argFoo;
            var _closure2_slot0 = oscar;
            tango = _closure1_slot0;
            report = _closure1_slot2;
            zulu = 18;
            zulu = report[zulu];
            report = undefined;
            golf = tango.bind(report)(zulu);
            tango = golf.useStateFromStores;
            options = _closure1_slot12;
            zulu = new Array(1);
            zulu[0] = options;
            entity = function() {
                zulu = _closure1_slot12;
                mike = zulu.getGuild;
                entity = _closure2_slot0;
                entity = entity.guildId;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            golf = tango.bind(golf)(zulu, entity);
            entity = null;
            zulu = entity == golf;
            if(zulu) { _fun00010_ip = 108; continue _fun00009 }
 73:
            tango = _closure1_slot14;
            zulu = _closure1_slot18;
            mike = {};
            offset = mike;
            verify = oscar;
            oscar = copyDataProperties(offset, verify);
            oscar = 'guild';
            mike[oscar] = golf;
            entity = tango.bind(report)(zulu, mike);
 108:
            return entity;
        }
    };
    zulu['default'] = report;
    zulu['CardDimensions'] = tango;
    zulu['useStyles'] = mike;
    return entity;
})();