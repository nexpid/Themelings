// app/modules/global_discovery_servers/native/components/GlobalDiscoveryServersCard.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    golfie = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    option = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = option;
    entity = function(argFoo) { // Original name: GlobalDiscoveryServersCard
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            config = zuuluu.guild;
            var _closure2_slot0 = config;
            michal = zuuluu.width;
            report = zuuluu.onPress;
            var _closure2_slot1 = report;
            option = zuuluu.style;
            zuuluu = _closure1_slot17;
            tangon = undefined;
            foxtra = zuuluu.bind(tangon)();
            verify = _closure1_slot5;
            golfie = verify.useMemo;
            zuuluu = config.banner;
            oscard = new Array(2);
            oscard[0] = zuuluu;
            zuuluu = config.id;
            oscard[1] = zuuluu;
            zuuluu = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 14;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.getGuildBannerSource;
                entity = {};
                tangon = _closure2_slot0;
                report = tangon.id;
                entity['id'] = report;
                tangon = tangon.banner;
                entity['banner'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            sizing = golfie.bind(verify)(zuuluu, oscard);
            verify = _closure1_slot5;
            golfie = verify.useMemo;
            oscard = new Array(1);
            oscard[0] = config;
            zuuluu = function() {
                zuuluu = _closure1_slot8;
                tangon = _closure2_slot0;
                michal = zuuluu.prototype;
                michal = Object.create(michal, {constructor: {value: zuuluu}});
                report = michal;
                entity = new report[zuuluu](tangon, zuuluu);
                entity = entity instanceof Object ? entity : michal;
                return entity;
            };
            update = golfie.bind(verify)(zuuluu, oscard);
            var _closure2_slot2 = michal;
            zuuluu = 0.5625;
            verify = zuuluu * michal;
            var _closure2_slot3 = verify;
            golfie = _closure1_slot5;
            oscard = golfie.useMemo;
            zuuluu = new Array(2);
            zuuluu[0] = verify;
            zuuluu[1] = michal;
            michal = function() {
                entity = {};
                zuuluu = _closure2_slot3;
                entity['height'] = zuuluu;
                michal = _closure2_slot2;
                entity['width'] = michal;
                return entity;
            };
            output = oscard.bind(golfie)(michal, zuuluu);
            golfie = _closure1_slot5;
            oscard = golfie.useMemo;
            zuuluu = new Array(1);
            zuuluu[0] = config;
            michal = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 15;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.getGuildBadgeSource;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            record = oscard.bind(golfie)(michal, zuuluu);
            michal = _closure1_slot1;
            verify = _closure1_slot2;
            zuuluu = 16;
            zuuluu = verify[zuuluu];
            zuuluu = michal.bind(tangon)(zuuluu);
            zuuluu = zuuluu.bind(tangon)();
            var _closure2_slot4 = zuuluu;
            yankee = _closure1_slot5;
            golfie = yankee.useMemo;
            oscard = new Array(1);
            oscard[0] = zuuluu;
            zuuluu = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot4;
                    entity = _closure1_slot13;
                    entity = entity.LIGHT;
                    if(!(zuuluu !== entity)) { _fun00004_ip = 107; continue _fun00003 }
 24:
                    report = _closure1_slot1;
                    oscard = _closure1_slot2;
                    entity = 17;
                    entity = oscard[entity];
                    tangon = undefined;
                    zuuluu = report.bind(tangon)(entity);
                    entity = 13;
                    entity = oscard[entity];
                    entity = report.bind(tangon)(entity);
                    entity = entity.unsafe_rawColors;
                    entity = entity.BLACK_500;
                    tangon = zuuluu.bind(tangon)(entity);
                    zuuluu = tangon.alpha;
                    entity = 0.5;
                    zuuluu = zuuluu.bind(tangon)(entity);
                    entity = zuuluu.css;
                    entity = entity.bind(zuuluu)();
                    _fun00004_ip = 188; continue _fun00003;
 107:
                    report = _closure1_slot1;
                    oscard = _closure1_slot2;
                    michal = 17;
                    michal = oscard[michal];
                    tangon = undefined;
                    zuuluu = report.bind(tangon)(michal);
                    michal = 13;
                    michal = oscard[michal];
                    michal = report.bind(tangon)(michal);
                    michal = michal.unsafe_rawColors;
                    michal = michal.BLACK_300;
                    tangon = zuuluu.bind(tangon)(michal);
                    zuuluu = tangon.alpha;
                    michal = 0.2;
                    zuuluu = zuuluu.bind(tangon)(michal);
                    michal = zuuluu.css;
                    entity = michal.bind(zuuluu)();
 188:
                    return entity;
                }
            };
            backup = golfie.bind(yankee)(zuuluu, oscard);
            oscard = _closure1_slot0;
            zuuluu = 18;
            zuuluu = verify[zuuluu];
            yankee = oscard.bind(tangon)(zuuluu);
            golfie = yankee.useStateFromStores;
            zuuluu = _closure1_slot10;
            oscard = new Array(2);
            oscard[0] = zuuluu;
            zuuluu = _closure1_slot9;
            oscard[1] = zuuluu;
            zuuluu = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    oscard = _closure1_slot10;
                    report = oscard.isMember;
                    entity = _closure2_slot0;
                    tangon = entity.id;
                    golfie = _closure1_slot9;
                    entity = golfie.getId;
                    entity = entity.bind(golfie)();
                    entity = report.bind(oscard)(tangon, entity);
                    if(!entity) { _fun00006_ip = 90; continue _fun00005 }
 48:
                    report = _closure1_slot10;
                    tangon = report.isGuestOrLurker;
                    zuuluu = _closure2_slot0;
                    zuuluu = zuuluu.id;
                    oscard = _closure1_slot9;
                    michal = oscard.getId;
                    michal = michal.bind(oscard)();
                    michal = tangon.bind(report)(zuuluu, michal);
                    entity = !michal;
 90:
                    return entity;
                }
            };
            yankee = golfie.bind(yankee)(oscard, zuuluu);
            golfie = _closure1_slot5;
            oscard = golfie.useState;
            zuuluu = false;
            golfie = oscard.bind(golfie)(zuuluu);
            oscard = _closure1_slot4;
            zuuluu = 2;
            golfie = oscard.bind(tangon)(golfie, zuuluu);
            zuuluu = 0;
            oscard = golfie[zuuluu];
            zuuluu = 1;
            zuuluu = golfie[zuuluu];
            var _closure2_slot5 = zuuluu;
            romeon = _closure1_slot5;
            golfie = romeon.useCallback;
            zuuluu = _closure1_slot3;
            entity = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=2);
                        if(zuuluu) { _fun00008_ip = 358; continue _fun00007 }
 10:
                        report = undefined;
                        option = undefined;
                        oscard = _closure2_slot5;
                        tangon = true;
                        tangon = oscard.bind(report)(tangon);
 28: // try_start_0 // try_start_1
                        oscard = _closure2_slot1;
                        tangon = null;
                        oscard = tangon == oscard;
                        tangon = undefined;
                        if(oscard) { _fun00008_ip = 51; continue _fun00007 }
 43:
                        oscard = _closure2_slot1;
                        tangon = oscard.bind(report)();
 51:
                        SaveGenerator(address=55);
 53:
                        return tangon;
 55:
                        ResumeGenerator(result_out_reg=3, return_bool_out_reg=5);
                        if(oscard) { _fun00008_ip = 66; continue _fun00007 }
 61: // try_end0
                        _fun00008_ip = 315; continue _fun00007;
 66: // try_end1
                        golfie = _closure2_slot5;
                        oscard = false;
                        oscard = golfie.bind(report)(oscard);
                        return tangon;
 80: // try_start_2 // catch_target0
                        CatchBlockStart(arg_register=1);
                        oscard = _closure1_slot11;
                        tangon = oscard.getAlert;
                        tangon = tangon.bind(oscard)();
                        offset = null;
                        if(!(offset == tangon)) { _fun00008_ip = 329; continue _fun00007 }
 108:
                        kiloes = _closure1_slot0;
                        verify = _closure1_slot2;
                        tangon = 19;
                        tangon = verify[tangon];
                        tangon = kiloes.bind(report)(tangon);
                        oscard = tangon.APIError;
                        sizing = michal;
                        tangon = oscard.prototype;
                        tangon = Object.create(tangon, {constructor: {value: oscard}});
                        output = tangon;
                        michal = new output[oscard](sizing, kiloes);
                        yankee = michal instanceof Object ? michal : tangon;
                        tangon = _closure1_slot1;
                        michal = 20;
                        michal = verify[michal];
                        oscard = tangon.bind(report)(michal);
                        tangon = oscard.show;
                        michal = {};
                        romeon = 21;
                        foxtra = verify[romeon];
                        foxtra = kiloes.bind(report)(foxtra);
                        backup = foxtra.intl;
                        foxtra = backup.string;
                        verify = verify[romeon];
                        verify = kiloes.bind(report)(verify);
                        verify = verify.t;
                        verify = verify.iufib2;
                        verify = foxtra.bind(backup)(verify);
                        michal['title'] = verify;
                        verify = yankee.getAnyErrorMessage;
                        verify = verify.bind(yankee)();
                        option = verify;
                        if(!(offset == verify)) { _fun00008_ip = 303; continue _fun00007 }
 249:
                        yankee = _closure1_slot0;
                        golfie = _closure1_slot2;
                        verify = golfie[romeon];
                        verify = yankee.bind(report)(verify);
                        offset = verify.intl;
                        verify = offset.string;
                        golfie = golfie[romeon];
                        golfie = yankee.bind(report)(golfie);
                        golfie = golfie.t;
                        golfie = golfie.eAn6z8;
                        golfie = verify.bind(offset)(golfie);
                        _fun00008_ip = 306; continue _fun00007;
 303:
                        golfie = option;
 306:
                        michal['body'] = golfie;
                        michal = tangon.bind(oscard)(michal);
 315: // try_end2
                        tangon = _closure2_slot5;
                        michal = false;
                        michal = tangon.bind(report)(michal);
                        return report;
 329:
                        tangon = _closure2_slot5;
                        michal = false;
                        michal = tangon.bind(report)(michal);
                        return report;
 343: // catch_target1 // catch_target2
                        CatchBlockStart(arg_register=1);
                        tangon = _closure2_slot5;
                        zuuluu = false;
                        zuuluu = tangon.bind(report)(zuuluu);
                        throw michal;
 358:
                        return entity;
                    }
                };
                return entity;
            };
            zuuluu = zuuluu.bind(tangon)(entity);
            entity = new Array(1);
            entity[0] = report;
            golfie = golfie.bind(romeon)(zuuluu, entity);
            zuuluu = _closure1_slot15;
            entity = 22;
            entity = verify[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['disabled'] = oscard;
            entity['style'] = option;
            source = null;
            option = source != report;
            report = undefined;
            if(!option) { _fun00002_ip = 444; continue _fun00001 }
 441:
            report = golfie;
 444:
            entity['onPress'] = report;
            option = _closure1_slot15;
            golfie = _closure1_slot7;
            report = {};
            verify = foxtra.bannerContainer;
            report['style'] = verify;
            kiloes = _closure1_slot14;
            romeon = _closure1_slot1;
            result = _closure1_slot2;
            verify = 23;
            verify = result[verify];
            romeon = romeon.bind(tangon)(verify);
            verify = {};
            verify['style'] = output;
            verify['source'] = sizing;
            sizing = 'cover';
            verify['resizeMode'] = sizing;
            romeon = kiloes.bind(tangon)(romeon, verify);
            verify = new Array(2);
            verify[0] = romeon;
            if(!yankee) { _fun00002_ip = 742; continue _fun00001 }
 531:
            sizing = _closure1_slot15;
            kiloes = _closure1_slot7;
            romeon = {};
            output = foxtra.joinBadge;
            romeon['style'] = output;
            echoed = _closure1_slot14;
            papara = _closure1_slot0;
            target = _closure1_slot2;
            output = 24;
            output = target[output];
            output = papara.bind(tangon)(output);
            result = output.CircleCheckIcon;
            output = {};
            ctrled = 'xxs';
            output['size'] = ctrled;
            vacuum = _closure1_slot1;
            ctrled = 13;
            ctrled = target[ctrled];
            ctrled = vacuum.bind(tangon)(ctrled);
            ctrled = ctrled.colors;
            ctrled = ctrled.STATUS_POSITIVE;
            output['color'] = ctrled;
            result = echoed.bind(tangon)(result, output);
            output = new Array(2);
            output[0] = result;
            ctrled = _closure1_slot14;
            result = 25;
            result = target[result];
            result = papara.bind(tangon)(result);
            echoed = result.Text;
            result = {'variant': 'text-xs/medium', 'color': 'header-primary'};
            vacuum = 21;
            sequen = target[vacuum];
            sequen = papara.bind(tangon)(sequen);
            cntext = sequen.intl;
            sequen = cntext.string;
            vacuum = target[vacuum];
            vacuum = papara.bind(tangon)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.cEnaW1;
            vacuum = sequen.bind(cntext)(vacuum);
            result['children'] = vacuum;
            result = ctrled.bind(tangon)(echoed, result);
            output[1] = result;
            romeon['children'] = output;
            yankee = sizing.bind(tangon)(kiloes, romeon);
 742:
            verify[1] = yankee;
            report['children'] = verify;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(3);
            report[0] = golfie;
            verify = _closure1_slot15;
            option = _closure1_slot7;
            golfie = {};
            yankee = foxtra.content;
            golfie['style'] = yankee;
            kiloes = _closure1_slot14;
            romeon = _closure1_slot7;
            yankee = {};
            sizing = foxtra.iconContainer;
            yankee['style'] = sizing;
            echoed = _closure1_slot14;
            result = _closure1_slot1;
            output = _closure1_slot2;
            sizing = 11;
            sizing = output[sizing];
            result = result.bind(tangon)(sizing);
            sizing = {};
            ctrled = foxtra.icon;
            sizing['style'] = ctrled;
            sizing['guild'] = update;
            update = _closure1_slot16;
            update = update.ICON_SIZE;
            sizing['size'] = update;
            sizing = echoed.bind(tangon)(result, sizing);
            yankee['children'] = sizing;
            romeon = kiloes.bind(tangon)(romeon, yankee);
            yankee = new Array(3);
            yankee[0] = romeon;
            sizing = _closure1_slot15;
            kiloes = _closure1_slot7;
            romeon = {};
            result = foxtra.details;
            romeon['style'] = result;
            update = _closure1_slot15;
            echoed = _closure1_slot0;
            result = 25;
            output = output[result];
            output = echoed.bind(tangon)(output);
            echoed = output.Text;
            output = {'variant': 'text-md/semibold', 'color': 'header-primary'};
            ctrled = source != record;
            if(!ctrled) { _fun00002_ip = 1024; continue _fun00001 }
 946:
            sequen = _closure1_slot14;
            papara = _closure1_slot1;
            target = _closure1_slot2;
            cntext = 26;
            source = target[cntext];
            vacuum = papara.bind(tangon)(source);
            source = {};
            status = foxtra.badge;
            source['style'] = status;
            cntext = target[cntext];
            cntext = papara.bind(tangon)(cntext);
            cntext = cntext.Sizes;
            cntext = cntext.REFRESH_SMALL_16;
            source['size'] = cntext;
            source['source'] = record;
            record = true;
            source['disableColor'] = record;
            ctrled = sequen.bind(tangon)(vacuum, source);
 1024:
            source = new Array(2);
            source[0] = ctrled;
            ctrled = config.name;
            source[1] = ctrled;
            output['children'] = source;
            echoed = update.bind(tangon)(echoed, output);
            output = new Array(2);
            output[0] = echoed;
            source = _closure1_slot14;
            ctrled = _closure1_slot0;
            record = _closure1_slot2;
            echoed = record[result];
            echoed = ctrled.bind(tangon)(echoed);
            update = echoed.Text;
            echoed = {'variant': 'text-sm/medium', 'color': 'header-primary'};
            vacuum = config.description;
            echoed['children'] = vacuum;
            echoed = source.bind(tangon)(update, echoed);
            output[1] = echoed;
            romeon['children'] = output;
            romeon = sizing.bind(tangon)(kiloes, romeon);
            yankee[1] = romeon;
            sizing = _closure1_slot15;
            kiloes = _closure1_slot7;
            romeon = {};
            output = foxtra.metrics;
            romeon['style'] = output;
            update = _closure1_slot14;
            echoed = _closure1_slot7;
            output = {};
            vacuum = foxtra.dot;
            source = new Array(2);
            source[0] = vacuum;
            vacuum = foxtra.presenceDot;
            source[1] = vacuum;
            output['style'] = source;
            echoed = update.bind(tangon)(echoed, output);
            output = new Array(4);
            output[0] = echoed;
            vacuum = _closure1_slot14;
            echoed = record[result];
            echoed = ctrled.bind(tangon)(echoed);
            update = echoed.Text;
            echoed = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            source = foxtra.presenceCount;
            echoed['style'] = source;
            source = 21;
            sequen = record[source];
            sequen = ctrled.bind(tangon)(sequen);
            target = sequen.intl;
            papara = target.format;
            sequen = record[source];
            sequen = ctrled.bind(tangon)(sequen);
            sequen = sequen.t;
            cntext = sequen.LC+S+v;
            sequen = {};
            status = config.presenceCount;
            sequen['membersOnline'] = status;
            sequen = papara.bind(target)(cntext, sequen);
            echoed['children'] = sequen;
            echoed = vacuum.bind(tangon)(update, echoed);
            output[1] = echoed;
            vacuum = _closure1_slot14;
            update = _closure1_slot7;
            echoed = {};
            cntext = foxtra.dot;
            sequen = new Array(2);
            sequen[0] = cntext;
            cntext = foxtra.membersDot;
            sequen[1] = cntext;
            echoed['style'] = sequen;
            echoed = vacuum.bind(tangon)(update, echoed);
            output[2] = echoed;
            update = _closure1_slot14;
            result = record[result];
            result = ctrled.bind(tangon)(result);
            echoed = result.Text;
            result = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            vacuum = record[source];
            vacuum = ctrled.bind(tangon)(vacuum);
            sequen = vacuum.intl;
            vacuum = sequen.format;
            source = record[source];
            source = ctrled.bind(tangon)(source);
            source = source.t;
            ctrled = source.zRl6XV;
            source = {};
            config = config.memberCount;
            source['count'] = config;
            source = vacuum.bind(sequen)(ctrled, source);
            result['children'] = source;
            result = update.bind(tangon)(echoed, result);
            output[3] = result;
            romeon['children'] = output;
            romeon = sizing.bind(tangon)(kiloes, romeon);
            yankee[2] = romeon;
            golfie['children'] = yankee;
            golfie = verify.bind(tangon)(option, golfie);
            report[1] = golfie;
            if(!oscard) { _fun00002_ip = 1569; continue _fun00001 }
 1495:
            verify = _closure1_slot14;
            option = _closure1_slot7;
            golfie = {};
            romeon = foxtra.loading;
            yankee = new Array(2);
            yankee[0] = romeon;
            romeon = {};
            romeon['backgroundColor'] = backup;
            yankee[1] = romeon;
            golfie['style'] = yankee;
            romeon = _closure1_slot14;
            yankee = _closure1_slot6;
            offset = {};
            foxtra = foxtra.indicator;
            offset['style'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 1569:
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot18 = entity;
    entity = global;
    oscard = entity.Object;
    tangon = oscard.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(oscard)(zuuluu, entity, michal);
    entity = 0;
    michal = option[entity];
    entity = undefined;
    michal = romeon.bind(entity)(michal);
    var _closure1_slot3 = michal;
    michal = 1;
    michal = option[michal];
    michal = romeon.bind(entity)(michal);
    var _closure1_slot4 = michal;
    michal = 2;
    tangon = option[michal];
    michal = argCor;
    michal = michal.bind(entity)(tangon);
    var _closure1_slot5 = michal;
    michal = 3;
    michal = option[michal];
    michal = golfie.bind(entity)(michal);
    tangon = michal.ActivityIndicator;
    var _closure1_slot6 = tangon;
    michal = michal.View;
    var _closure1_slot7 = michal;
    kiloes = 4;
    michal = option[kiloes];
    michal = romeon.bind(entity)(michal);
    var _closure1_slot8 = michal;
    michal = 5;
    michal = option[michal];
    michal = romeon.bind(entity)(michal);
    var _closure1_slot9 = michal;
    michal = 6;
    michal = option[michal];
    michal = romeon.bind(entity)(michal);
    var _closure1_slot10 = michal;
    michal = 7;
    michal = option[michal];
    michal = romeon.bind(entity)(michal);
    var _closure1_slot11 = michal;
    michal = 8;
    michal = option[michal];
    michal = romeon.bind(entity)(michal);
    var _closure1_slot12 = michal;
    michal = 9;
    michal = option[michal];
    michal = golfie.bind(entity)(michal);
    michal = michal.ThemeTypes;
    var _closure1_slot13 = michal;
    michal = 10;
    tangon = option[michal];
    tangon = golfie.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot14 = tangon;
    michal = option[michal];
    michal = golfie.bind(entity)(michal);
    michal = michal.jsxs;
    var _closure1_slot15 = michal;
    tangon = {'CARD_HEIGHT': 316, 'IMAGE_HEIGHT': 160};
    michal = 11;
    michal = option[michal];
    michal = golfie.bind(entity)(michal);
    michal = michal.GuildIconSizes;
    michal = michal.LARGE;
    tangon['ICON_SIZE'] = michal;
    var _closure1_slot16 = tangon;
    foxtra = 12;
    michal = option[foxtra];
    verify = golfie.bind(entity)(michal);
    oscard = verify.createStyles;
    michal = {};
    offset = {};
    yankee = tangon.IMAGE_HEIGHT;
    offset['height'] = yankee;
    yankee = 'hidden';
    offset['overflow'] = yankee;
    michal['bannerContainer'] = offset;
    offset = {'position': 'absolute', 'top': 0, 'left': 0, 'right': 0};
    michal['banner'] = offset;
    backup = 16;
    offset = {'margin': 16, 'marginTop': 38};
    michal['content'] = offset;
    offset = {'position': 'absolute', 'top': 4294967232, 'padding': 2};
    yankee = 13;
    sizing = option[yankee];
    sizing = romeon.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.sm;
    offset['borderRadius'] = sizing;
    sizing = option[yankee];
    sizing = romeon.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.CARD_PRIMARY_BG;
    offset['backgroundColor'] = sizing;
    michal['iconContainer'] = offset;
    offset = {};
    sizing = option[yankee];
    sizing = romeon.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.sm;
    offset['borderRadius'] = sizing;
    michal['icon'] = offset;
    offset = {};
    offset['marginRight'] = kiloes;
    michal['badge'] = offset;
    offset = {'gap': 8, 'marginBottom': 16};
    michal['details'] = offset;
    offset = {'flexDirection': 'row', 'alignItems': 'center'};
    michal['metrics'] = offset;
    offset = {'height': 6, 'width': 6, 'borderRadius': null, 'marginEnd': 4};
    kiloes = option[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.sm;
    offset['borderRadius'] = kiloes;
    michal['dot'] = offset;
    offset = {};
    kiloes = option[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.unsafe_rawColors;
    kiloes = kiloes.GREEN_360;
    offset['backgroundColor'] = kiloes;
    michal['presenceDot'] = offset;
    offset = {};
    offset['marginEnd'] = backup;
    michal['presenceCount'] = offset;
    offset = {};
    backup = option[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.TEXT_MUTED;
    offset['backgroundColor'] = backup;
    michal['membersDot'] = offset;
    offset = {'position': 'absolute', 'left': 0, 'right': 0, 'top': 0, 'bottom': 0, 'alignItems': 'center', 'justifyContent': 'center'};
    michal['loading'] = offset;
    offset = {};
    backup = option[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.CARD_PRIMARY_BG;
    offset['backgroundColor'] = backup;
    offset['padding'] = foxtra;
    foxtra = option[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.xs;
    offset['borderRadius'] = foxtra;
    michal['indicator'] = offset;
    offset = {'backgroundColor': null, 'gap': 4, 'borderRadius': null, 'paddingHorizontal': 8, 'paddingVertical': 4, 'flexDirection': 'row', 'alignItems': 'center', 'position': 'absolute', 'right': 16, 'top': 16};
    foxtra = option[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.CARD_PRIMARY_BG;
    offset['backgroundColor'] = foxtra;
    yankee = option[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.round;
    offset['borderRadius'] = yankee;
    michal['joinBadge'] = offset;
    michal = oscard.bind(verify)(michal);
    var _closure1_slot17 = michal;
    oscard = 27;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/global_discovery_servers/native/components/GlobalDiscoveryServersCard.tsx';
    oscard = golfie.bind(option)(oscard);
    report = function(argFoo) { // Original name: ConnectedGlobalDiscoveryServerCard
        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
            oscard = argFoo;
            var _closure2_slot0 = oscard;
            tangon = _closure1_slot0;
            report = _closure1_slot2;
            zuuluu = 18;
            zuuluu = report[zuuluu];
            report = undefined;
            golfie = tangon.bind(report)(zuuluu);
            tangon = golfie.useStateFromStores;
            option = _closure1_slot12;
            zuuluu = new Array(1);
            zuuluu[0] = option;
            entity = function() {
                zuuluu = _closure1_slot12;
                michal = zuuluu.getGuild;
                entity = _closure2_slot0;
                entity = entity.guildId;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            golfie = tangon.bind(golfie)(zuuluu, entity);
            entity = null;
            zuuluu = entity == golfie;
            if(zuuluu) { _fun00010_ip = 108; continue _fun00009 }
 73:
            tangon = _closure1_slot14;
            zuuluu = _closure1_slot18;
            michal = {};
            offset = michal;
            verify = oscard;
            oscard = copyDataProperties(offset, verify);
            oscard = 'guild';
            michal[oscard] = golfie;
            entity = tangon.bind(report)(zuuluu, michal);
 108:
            return entity;
        }
    };
    zuuluu['default'] = report;
    zuuluu['CardDimensions'] = tangon;
    zuuluu['useStyles'] = michal;
    return entity;
})();