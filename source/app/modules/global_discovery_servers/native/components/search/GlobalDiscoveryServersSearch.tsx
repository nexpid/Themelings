// app/modules/global_discovery_servers/native/components/search/GlobalDiscoveryServersSearch.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    offset = 1;
    tango = oscar[offset];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flex'] = offset;
    tango['container'] = verify;
    verify = {};
    offset = 16;
    verify['marginBottom'] = offset;
    tango['search'] = verify;
    verify = {};
    verify['paddingTop'] = offset;
    tango['searchResults'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/global_discovery_servers/native/components/search/GlobalDiscoveryServersSearch.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: GlobalDiscoveryServersSearch
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = _closure1_slot7;
            tango = undefined;
            yankee = mike.bind(tango)();
            options = _closure1_slot4;
            oscar = options.useState;
            mike = _closure1_slot0;
            offset = _closure1_slot2;
            zulu = 4;
            zulu = offset[zulu];
            zulu = mike.bind(tango)(zulu);
            report = zulu.shallow;
            zulu = function(argFoo) {
                entity = argFoo;
                mike = entity.resultsQuery;
                entity = mike.trim;
                mike = entity.bind(mike)();
                entity = '';
                entity = entity === mike;
                return entity;
            };
            oscar = oscar.bind(options)(zulu, report);
            options = _closure1_slot1;
            zulu = 5;
            zulu = offset[zulu];
            report = options.bind(tango)(zulu);
            zulu = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 6;
                mike = mike[entity];
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                entity = mike.makeAnalyticsID;
                entity = entity.bind(mike)();
                return entity;
            };
            romeo = report.bind(tango)(zulu);
            verify = _closure1_slot3;
            report = verify.useEffect;
            zulu = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 7;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.maybeFetchGuildDiscoveryCategories;
                mike = mike.bind(zulu)();
                return entity;
            };
            entity = new Array(0);
            entity = report.bind(verify)(zulu, entity);
            zulu = _closure1_slot6;
            entity = 8;
            entity = offset[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.SafeAreaPaddingView;
            entity = {'top': true, 'bottom': true};
            report = yankee.container;
            entity['style'] = report;
            verify = _closure1_slot5;
            report = 9;
            report = offset[report];
            options = options.bind(tango)(report);
            report = {};
            report['loadId'] = romeo;
            offset = yankee.search;
            report['style'] = offset;
            options = verify.bind(tango)(options, report);
            report = new Array(2);
            report[0] = options;
            verify = _closure1_slot5;
            options = _closure1_slot1;
            offset = _closure1_slot2;
            if(oscar) { _fun00002_ip = 258; continue _fun00001 }
 220:
            oscar = 11;
            oscar = offset[oscar];
            golf = options.bind(tango)(oscar);
            oscar = {};
            oscar['loadId'] = romeo;
            yankee = yankee.searchResults;
            oscar['contentContainerStyle'] = yankee;
            oscar = verify.bind(tango)(golf, oscar);
            _fun00002_ip = 278; continue _fun00001;
 258:
            golf = 10;
            golf = offset[golf];
            options = options.bind(tango)(golf);
            golf = {};
            oscar = verify.bind(tango)(options, golf);
 278:
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();