// app/modules/global_discovery_servers/native/components/search/GlobalDiscoveryServersSearch.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    offset = 1;
    tangon = oscard[offset];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = offset;
    tangon['container'] = verify;
    verify = {};
    offset = 16;
    verify['marginBottom'] = offset;
    tangon['search'] = verify;
    verify = {};
    verify['paddingTop'] = offset;
    tangon['searchResults'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/global_discovery_servers/native/components/search/GlobalDiscoveryServersSearch.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: GlobalDiscoveryServersSearch
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = _closure1_slot7;
            tangon = undefined;
            yankee = michal.bind(tangon)();
            option = _closure1_slot4;
            oscard = option.useState;
            michal = _closure1_slot0;
            offset = _closure1_slot2;
            zuuluu = 4;
            zuuluu = offset[zuuluu];
            zuuluu = michal.bind(tangon)(zuuluu);
            report = zuuluu.shallow;
            zuuluu = function(argFoo) {
                entity = argFoo;
                michal = entity.resultsQuery;
                entity = michal.trim;
                michal = entity.bind(michal)();
                entity = '';
                entity = entity === michal;
                return entity;
            };
            oscard = oscard.bind(option)(zuuluu, report);
            option = _closure1_slot1;
            zuuluu = 5;
            zuuluu = offset[zuuluu];
            report = option.bind(tangon)(zuuluu);
            zuuluu = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 6;
                michal = michal[entity];
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                entity = michal.makeAnalyticsID;
                entity = entity.bind(michal)();
                return entity;
            };
            romeon = report.bind(tangon)(zuuluu);
            verify = _closure1_slot3;
            report = verify.useEffect;
            zuuluu = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 7;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.maybeFetchGuildDiscoveryCategories;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            entity = new Array(0);
            entity = report.bind(verify)(zuuluu, entity);
            zuuluu = _closure1_slot6;
            entity = 8;
            entity = offset[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.SafeAreaPaddingView;
            entity = {'top': true, 'bottom': true};
            report = yankee.container;
            entity['style'] = report;
            verify = _closure1_slot5;
            report = 9;
            report = offset[report];
            option = option.bind(tangon)(report);
            report = {};
            report['loadId'] = romeon;
            offset = yankee.search;
            report['style'] = offset;
            option = verify.bind(tangon)(option, report);
            report = new Array(2);
            report[0] = option;
            verify = _closure1_slot5;
            option = _closure1_slot1;
            offset = _closure1_slot2;
            if(oscard) { _fun00002_ip = 258; continue _fun00001 }
 220:
            oscard = 11;
            oscard = offset[oscard];
            golfie = option.bind(tangon)(oscard);
            oscard = {};
            oscard['loadId'] = romeon;
            yankee = yankee.searchResults;
            oscard['contentContainerStyle'] = yankee;
            oscard = verify.bind(tangon)(golfie, oscard);
            _fun00002_ip = 278; continue _fun00001;
 258:
            golfie = 10;
            golfie = offset[golfie];
            option = option.bind(tangon)(golfie);
            golfie = {};
            oscard = verify.bind(tangon)(option, golfie);
 278:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();