// app/modules/global_discovery_servers/native/components/GlobalDiscoveryServersCategories.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = function(argFoo, argBar) { // Original name: getOnPressHandler
        michal = argFoo;
        var _closure2_slot0 = michal;
        michal = argBar;
        var _closure2_slot1 = michal;
        entity = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 5;
                zuuluu = zuuluu[entity];
                entity = undefined;
                report = tangon.bind(entity)(zuuluu);
                tangon = report.getCategoryIdFromServerTab;
                zuuluu = _closure2_slot1;
                golfie = tangon.bind(report)(zuuluu);
                report = _closure1_slot4;
                tangon = report.getError;
                zuuluu = {};
                zuuluu['categoryId'] = golfie;
                report = tangon.bind(report)(zuuluu);
                option = _closure1_slot4;
                tangon = option.getIsFetching;
                zuuluu = {};
                zuuluu['categoryId'] = golfie;
                tangon = tangon.bind(option)(zuuluu);
                verify = _closure1_slot4;
                option = verify.getIsInitialFetchComplete;
                zuuluu = {};
                zuuluu['categoryId'] = golfie;
                zuuluu = option.bind(verify)(zuuluu);
                if(zuuluu) { _fun00002_ip = 155; continue _fun00001 }
 112:
                if(tangon) { _fun00002_ip = 155; continue _fun00001 }
 115:
                verify = _closure1_slot1;
                offset = _closure1_slot2;
                option = 6;
                option = offset[option];
                offset = verify.bind(entity)(option);
                verify = offset.fetchCategoryFeaturedGuilds;
                option = {};
                option['categoryId'] = golfie;
                option = verify.bind(offset)(option);
                _fun00002_ip = 218; continue _fun00001;
 155:
                if(!zuuluu) { _fun00002_ip = 161; continue _fun00001 }
 158:
                zuuluu = !tangon;
 161:
                if(!zuuluu) { _fun00002_ip = 170; continue _fun00001 }
 164:
                tangon = null;
                zuuluu = tangon != report;
 170:
                if(!zuuluu) { _fun00002_ip = 218; continue _fun00001 }
 173:
                tangon = _closure1_slot1;
                report = _closure1_slot2;
                zuuluu = 6;
                zuuluu = report[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                tangon = report.fetchCategoryFeaturedGuilds;
                zuuluu = {};
                zuuluu['categoryId'] = golfie;
                option = true;
                zuuluu['forceRefresh'] = option;
                zuuluu = tangon.bind(report)(zuuluu);
 218:
                tangon = _closure1_slot0;
                report = _closure1_slot2;
                zuuluu = 7;
                zuuluu = report[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                tangon = report.trackGlobalDiscoveryServersViewed;
                zuuluu = {};
                zuuluu['selectedCategoryId'] = golfie;
                zuuluu = tangon.bind(report)(zuuluu);
                report = _closure2_slot0;
                tangon = report.navigate;
                michal = _closure1_slot6;
                zuuluu = michal.SERVERS_CATEGORY;
                michal = {};
                oscard = _closure2_slot1;
                michal['tab'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            }
        };
        return entity;
    };
    var _closure1_slot8 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.GlobalDiscoveryServerTab;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.GlobalDiscoveryRoutes;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot7 = tangon;
    tangon = 16;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/global_discovery_servers/native/components/GlobalDiscoveryServersCategories.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GlobalDiscoveryServersCategories
        entity = argFoo;
        report = entity.containerStyle;
        oscard = _closure1_slot0;
        golfie = _closure1_slot2;
        zuuluu = 14;
        zuuluu = golfie[zuuluu];
        tangon = undefined;
        oscard = oscard.bind(tangon)(zuuluu);
        zuuluu = oscard.useStackNavigation;
        verify = zuuluu.bind(oscard)();
        var _closure2_slot0 = verify;
        option = _closure1_slot3;
        oscard = option.useMemo;
        zuuluu = new Array(1);
        zuuluu[0] = verify;
        michal = function() {
            oscard = _closure2_slot0;
            michal = {};
            option = _closure1_slot0;
            verify = _closure1_slot2;
            golfie = 8;
            zuuluu = verify[golfie];
            report = undefined;
            zuuluu = option.bind(report)(zuuluu);
            offset = zuuluu.intl;
            tangon = offset.string;
            zuuluu = verify[golfie];
            zuuluu = option.bind(report)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu.CD/USE;
            zuuluu = tangon.bind(offset)(zuuluu);
            michal['title'] = zuuluu;
            zuuluu = 9;
            zuuluu = verify[zuuluu];
            zuuluu = option.bind(report)(zuuluu);
            zuuluu = zuuluu.GameControllerIcon;
            michal['icon'] = zuuluu;
            tangon = _closure1_slot8;
            zuuluu = _closure1_slot5;
            entity = zuuluu.GAMING;
            entity = tangon.bind(report)(oscard, entity);
            michal['onPress'] = entity;
            entity = new Array(5);
            entity[0] = michal;
            michal = {};
            offset = verify[golfie];
            offset = option.bind(report)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = verify[golfie];
            offset = option.bind(report)(offset);
            offset = offset.t;
            offset = offset.nt9PLy;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = 10;
            offset = verify[offset];
            offset = option.bind(report)(offset);
            offset = offset.MusicIcon;
            michal['icon'] = offset;
            offset = zuuluu.MUSIC;
            offset = tangon.bind(report)(oscard, offset);
            michal['onPress'] = offset;
            entity[1] = michal;
            michal = {};
            offset = verify[golfie];
            offset = option.bind(report)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = verify[golfie];
            offset = option.bind(report)(offset);
            offset = offset.t;
            offset = offset.gSbmdn;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = 11;
            offset = verify[offset];
            offset = option.bind(report)(offset);
            offset = offset.TvIcon;
            michal['icon'] = offset;
            offset = zuuluu.ENTERTAINMENT;
            offset = tangon.bind(report)(oscard, offset);
            michal['onPress'] = offset;
            entity[2] = michal;
            michal = {};
            offset = verify[golfie];
            offset = option.bind(report)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = verify[golfie];
            offset = option.bind(report)(offset);
            offset = offset.t;
            offset = offset.0A0By8;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = 12;
            offset = verify[offset];
            offset = option.bind(report)(offset);
            offset = offset.ScienceIcon;
            michal['icon'] = offset;
            offset = zuuluu.TECH;
            offset = tangon.bind(report)(oscard, offset);
            michal['onPress'] = offset;
            entity[3] = michal;
            michal = {};
            offset = verify[golfie];
            offset = option.bind(report)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            golfie = verify[golfie];
            golfie = option.bind(report)(golfie);
            golfie = golfie.t;
            golfie = golfie.Gy9woq;
            golfie = offset.bind(yankee)(golfie);
            michal['title'] = golfie;
            golfie = 13;
            golfie = verify[golfie];
            golfie = option.bind(report)(golfie);
            golfie = golfie.EducationIcon;
            michal['icon'] = golfie;
            zuuluu = zuuluu.EDUCATION;
            zuuluu = tangon.bind(report)(oscard, zuuluu);
            michal['onPress'] = zuuluu;
            entity[4] = michal;
            return entity;
        };
        oscard = oscard.bind(option)(michal, zuuluu);
        zuuluu = _closure1_slot7;
        michal = _closure1_slot1;
        entity = 15;
        entity = golfie[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        entity['items'] = oscard;
        entity['containerStyle'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();