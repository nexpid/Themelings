// app/modules/global_discovery_servers/native/components/GlobalDiscoveryServersCardPlaceholder.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    romeo = 5;
    offset = oscar[romeo];
    offset = report.bind(entity)(offset);
    offset = offset.CardDimensions;
    offset = offset.CARD_HEIGHT;
    verify['height'] = offset;
    offset = 6;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.CARD_PRIMARY_BG;
    verify['backgroundColor'] = foxtrot;
    tango['placeholder'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_ACCENT;
    verify['backgroundColor'] = foxtrot;
    foxtrot = oscar[romeo];
    foxtrot = report.bind(entity)(foxtrot);
    foxtrot = foxtrot.CardDimensions;
    foxtrot = foxtrot.IMAGE_HEIGHT;
    verify['height'] = foxtrot;
    tango['banner'] = verify;
    verify = {};
    foxtrot = 7;
    backup = oscar[foxtrot];
    backup = report.bind(entity)(backup);
    kilo = backup.ImageSizes;
    backup = oscar[romeo];
    backup = report.bind(entity)(backup);
    backup = backup.CardDimensions;
    backup = backup.ICON_SIZE;
    backup = kilo[backup];
    verify['height'] = backup;
    foxtrot = oscar[foxtrot];
    foxtrot = report.bind(entity)(foxtrot);
    foxtrot = foxtrot.ImageSizes;
    romeo = oscar[romeo];
    romeo = report.bind(entity)(romeo);
    romeo = romeo.CardDimensions;
    romeo = romeo.ICON_SIZE;
    romeo = foxtrot[romeo];
    verify['width'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_ACCENT;
    verify['backgroundColor'] = romeo;
    tango['icon'] = verify;
    verify = {'flex': 1, 'gap': 8};
    tango['textContainer'] = verify;
    verify = {};
    romeo = 20;
    verify['height'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_ACCENT;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.xs;
    verify['borderRadius'] = romeo;
    tango['title'] = verify;
    verify = {'height': 54, 'backgroundColor': null, 'width': '100%'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_ACCENT;
    verify['backgroundColor'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.xs;
    verify['borderRadius'] = offset;
    tango['description'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = {};
    golf = 'function GlobalDiscoveryServersCardPlaceholderTsx1(){const{withRepeat,withSequence,withTiming,STANDARD_EASING}=this.__closure;return{opacity:withRepeat(withSequence(withTiming(0.4,{duration:0}),withTiming(0.8,{duration:1000,easing:STANDARD_EASING}),withTiming(0.4,{duration:1000,easing:STANDARD_EASING})),-1)};}';
    tango['code'] = golf;
    var _closure1_slot8 = tango;
    tango = 15;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/global_discovery_servers/native/components/GlobalDiscoveryServersCardPlaceholder.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GlobalDiscoveryServersCardPlaceholder
        _fun118019: for(var _fun118019_ip = 0; ; ) switch(_fun118019_ip) {
 0:
            mike = argFoo;
            romeo = mike.style;
            mike = _closure1_slot7;
            tango = undefined;
            output = mike.bind(tango)();
            backup = _closure1_slot0;
            offset = _closure1_slot2;
            mike = 5;
            mike = offset[mike];
            zulu = backup.bind(tango)(mike);
            mike = zulu.useStyles;
            kilo = mike.bind(zulu)();
            oscar = _closure1_slot1;
            mike = 8;
            mike = offset[mike];
            mike = oscar.bind(tango)(mike);
            mike = mike.bind(tango)();
            zulu = mike.width;
            mike = 64;
            foxtrot = zulu - mike;
            mike = 9;
            mike = offset[mike];
            golf = backup.bind(tango)(mike);
            report = golf.useStateFromStores;
            mike = _closure1_slot4;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                entity = _closure1_slot4;
                entity = entity.useReducedMotion;
                return entity;
            };
            yankee = report.bind(golf)(zulu, mike);
            report = 10;
            mike = offset[report];
            zulu = backup.bind(tango)(mike);
            mike = zulu.useAnimatedStyle;
            entity = function() { // Original name: u
                entity = {};
                backup = _closure1_slot0;
                kilo = _closure1_slot2;
                mike = 10;
                zulu = kilo[mike];
                foxtrot = undefined;
                report = backup.bind(foxtrot)(zulu);
                tango = report.withRepeat;
                mike = kilo[mike];
                options = backup.bind(foxtrot)(mike);
                golf = options.withSequence;
                mike = 11;
                zulu = kilo[mike];
                verify = backup.bind(foxtrot)(zulu);
                oscar = verify.withTiming;
                zulu = {};
                offset = 0;
                zulu['duration'] = offset;
                yankee = 0.4;
                oscar = oscar.bind(verify)(yankee, zulu);
                zulu = kilo[mike];
                output = backup.bind(foxtrot)(zulu);
                offset = output.withTiming;
                verify = {};
                sizing = 1000;
                verify['duration'] = sizing;
                romeo = 12;
                zulu = kilo[romeo];
                zulu = backup.bind(foxtrot)(zulu);
                zulu = zulu.STANDARD_EASING;
                verify['easing'] = zulu;
                zulu = 0.8;
                zulu = offset.bind(output)(zulu, verify);
                mike = kilo[mike];
                offset = backup.bind(foxtrot)(mike);
                verify = offset.withTiming;
                mike = {};
                mike['duration'] = sizing;
                romeo = kilo[romeo];
                romeo = backup.bind(foxtrot)(romeo);
                romeo = romeo.STANDARD_EASING;
                mike['easing'] = romeo;
                mike = verify.bind(offset)(yankee, mike);
                zulu = golf.bind(options)(oscar, zulu, mike);
                mike = -1;
                mike = tango.bind(report)(zulu, mike);
                entity['opacity'] = mike;
                return entity;
            };
            golf = {};
            options = offset[report];
            options = backup.bind(tango)(options);
            options = options.withRepeat;
            golf['withRepeat'] = options;
            options = offset[report];
            options = backup.bind(tango)(options);
            options = options.withSequence;
            golf['withSequence'] = options;
            options = 11;
            options = offset[options];
            options = backup.bind(tango)(options);
            options = options.withTiming;
            golf['withTiming'] = options;
            options = 12;
            options = offset[options];
            options = backup.bind(tango)(options);
            options = options.STANDARD_EASING;
            golf['STANDARD_EASING'] = options;
            entity['__closure'] = golf;
            golf = 9739160309298.0;
            entity['__workletHash'] = golf;
            golf = _closure1_slot8;
            entity['__initData'] = golf;
            options = mike.bind(zulu)(entity);
            entity = 0.2;
            zulu = entity * foxtrot;
            entity = 13;
            entity = offset[entity];
            mike = oscar.bind(tango)(entity);
            entity = global;
            golf = entity.Math;
            entity = golf.random;
            golf = entity.bind(golf)();
            entity = 0.8;
            entity = entity * foxtrot;
            entity = entity - zulu;
            entity = golf * entity;
            entity = entity + zulu;
            echo = mike.bind(tango)(entity);
            zulu = _closure1_slot5;
            entity = 14;
            entity = offset[entity];
            mike = oscar.bind(tango)(entity);
            entity = {};
            golf = new Array(2);
            golf[0] = romeo;
            romeo = output.placeholder;
            golf[1] = romeo;
            entity['style'] = golf;
            golf = _closure1_slot6;
            report = offset[report];
            report = oscar.bind(tango)(report);
            oscar = report.View;
            report = {};
            offset = undefined;
            if(yankee) { _fun118019_ip = 418; continue _fun118019 }
 415:
            offset = options;
 418:
            options = new Array(1);
            options[0] = offset;
            report['style'] = options;
            sizing = _closure1_slot5;
            yankee = _closure1_slot3;
            options = {};
            offset = output.banner;
            options['style'] = offset;
            offset = sizing.bind(tango)(yankee, options);
            options = new Array(2);
            options[0] = offset;
            offset = _closure1_slot6;
            verify = {};
            romeo = kilo.content;
            verify['style'] = romeo;
            romeo = {};
            foxtrot = kilo.iconContainer;
            romeo['style'] = foxtrot;
            foxtrot = {};
            result = output.icon;
            backup = new Array(2);
            backup[0] = result;
            kilo = kilo.icon;
            backup[1] = kilo;
            foxtrot['style'] = backup;
            foxtrot = sizing.bind(tango)(yankee, foxtrot);
            romeo['children'] = foxtrot;
            foxtrot = sizing.bind(tango)(yankee, romeo);
            romeo = new Array(2);
            romeo[0] = foxtrot;
            foxtrot = {};
            backup = output.textContainer;
            foxtrot['style'] = backup;
            backup = {};
            result = output.title;
            kilo = new Array(2);
            kilo[0] = result;
            result = {};
            result['width'] = echo;
            kilo[1] = result;
            backup['style'] = kilo;
            kilo = sizing.bind(tango)(yankee, backup);
            backup = new Array(2);
            backup[0] = kilo;
            kilo = {};
            output = output.description;
            kilo['style'] = output;
            kilo = sizing.bind(tango)(yankee, kilo);
            backup[1] = kilo;
            foxtrot['children'] = backup;
            foxtrot = offset.bind(tango)(yankee, foxtrot);
            romeo[1] = foxtrot;
            verify['children'] = romeo;
            verify = offset.bind(tango)(yankee, verify);
            options[1] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();