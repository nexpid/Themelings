// app/modules/global_discovery_servers/native/components/GlobalDiscoveryServersCardPlaceholder.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    romeon = 5;
    offset = oscard[romeon];
    offset = report.bind(entity)(offset);
    offset = offset.CardDimensions;
    offset = offset.CARD_HEIGHT;
    verify['height'] = offset;
    offset = 6;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.CARD_PRIMARY_BG;
    verify['backgroundColor'] = foxtra;
    tangon['placeholder'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_ACCENT;
    verify['backgroundColor'] = foxtra;
    foxtra = oscard[romeon];
    foxtra = report.bind(entity)(foxtra);
    foxtra = foxtra.CardDimensions;
    foxtra = foxtra.IMAGE_HEIGHT;
    verify['height'] = foxtra;
    tangon['banner'] = verify;
    verify = {};
    foxtra = 7;
    backup = oscard[foxtra];
    backup = report.bind(entity)(backup);
    kiloes = backup.ImageSizes;
    backup = oscard[romeon];
    backup = report.bind(entity)(backup);
    backup = backup.CardDimensions;
    backup = backup.ICON_SIZE;
    backup = kiloes[backup];
    verify['height'] = backup;
    foxtra = oscard[foxtra];
    foxtra = report.bind(entity)(foxtra);
    foxtra = foxtra.ImageSizes;
    romeon = oscard[romeon];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.CardDimensions;
    romeon = romeon.ICON_SIZE;
    romeon = foxtra[romeon];
    verify['width'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_ACCENT;
    verify['backgroundColor'] = romeon;
    tangon['icon'] = verify;
    verify = {'flex': 1, 'gap': 8};
    tangon['textContainer'] = verify;
    verify = {};
    romeon = 20;
    verify['height'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_ACCENT;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.xs;
    verify['borderRadius'] = romeon;
    tangon['title'] = verify;
    verify = {'height': 54, 'backgroundColor': null, 'width': '100%'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_ACCENT;
    verify['backgroundColor'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.xs;
    verify['borderRadius'] = offset;
    tangon['description'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = {};
    golfie = 'function GlobalDiscoveryServersCardPlaceholderTsx1(){const{withRepeat,withSequence,withTiming,STANDARD_EASING}=this.__closure;return{opacity:withRepeat(withSequence(withTiming(0.4,{duration:0}),withTiming(0.8,{duration:1000,easing:STANDARD_EASING}),withTiming(0.4,{duration:1000,easing:STANDARD_EASING})),-1)};}';
    tangon['code'] = golfie;
    var _closure1_slot8 = tangon;
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/global_discovery_servers/native/components/GlobalDiscoveryServersCardPlaceholder.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GlobalDiscoveryServersCardPlaceholder
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            romeon = michal.style;
            michal = _closure1_slot7;
            tangon = undefined;
            output = michal.bind(tangon)();
            backup = _closure1_slot0;
            offset = _closure1_slot2;
            michal = 5;
            michal = offset[michal];
            zuuluu = backup.bind(tangon)(michal);
            michal = zuuluu.useStyles;
            kiloes = michal.bind(zuuluu)();
            oscard = _closure1_slot1;
            michal = 8;
            michal = offset[michal];
            michal = oscard.bind(tangon)(michal);
            michal = michal.bind(tangon)();
            zuuluu = michal.width;
            michal = 64;
            foxtra = zuuluu - michal;
            michal = 9;
            michal = offset[michal];
            golfie = backup.bind(tangon)(michal);
            report = golfie.useStateFromStores;
            michal = _closure1_slot4;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                entity = _closure1_slot4;
                entity = entity.useReducedMotion;
                return entity;
            };
            yankee = report.bind(golfie)(zuuluu, michal);
            report = 10;
            michal = offset[report];
            zuuluu = backup.bind(tangon)(michal);
            michal = zuuluu.useAnimatedStyle;
            entity = function() { // Original name: u
                entity = {};
                backup = _closure1_slot0;
                kiloes = _closure1_slot2;
                michal = 10;
                zuuluu = kiloes[michal];
                foxtra = undefined;
                report = backup.bind(foxtra)(zuuluu);
                tangon = report.withRepeat;
                michal = kiloes[michal];
                option = backup.bind(foxtra)(michal);
                golfie = option.withSequence;
                michal = 11;
                zuuluu = kiloes[michal];
                verify = backup.bind(foxtra)(zuuluu);
                oscard = verify.withTiming;
                zuuluu = {};
                offset = 0;
                zuuluu['duration'] = offset;
                yankee = 0.4;
                oscard = oscard.bind(verify)(yankee, zuuluu);
                zuuluu = kiloes[michal];
                output = backup.bind(foxtra)(zuuluu);
                offset = output.withTiming;
                verify = {};
                sizing = 1000;
                verify['duration'] = sizing;
                romeon = 12;
                zuuluu = kiloes[romeon];
                zuuluu = backup.bind(foxtra)(zuuluu);
                zuuluu = zuuluu.STANDARD_EASING;
                verify['easing'] = zuuluu;
                zuuluu = 0.8;
                zuuluu = offset.bind(output)(zuuluu, verify);
                michal = kiloes[michal];
                offset = backup.bind(foxtra)(michal);
                verify = offset.withTiming;
                michal = {};
                michal['duration'] = sizing;
                romeon = kiloes[romeon];
                romeon = backup.bind(foxtra)(romeon);
                romeon = romeon.STANDARD_EASING;
                michal['easing'] = romeon;
                michal = verify.bind(offset)(yankee, michal);
                zuuluu = golfie.bind(option)(oscard, zuuluu, michal);
                michal = -1;
                michal = tangon.bind(report)(zuuluu, michal);
                entity['opacity'] = michal;
                return entity;
            };
            golfie = {};
            option = offset[report];
            option = backup.bind(tangon)(option);
            option = option.withRepeat;
            golfie['withRepeat'] = option;
            option = offset[report];
            option = backup.bind(tangon)(option);
            option = option.withSequence;
            golfie['withSequence'] = option;
            option = 11;
            option = offset[option];
            option = backup.bind(tangon)(option);
            option = option.withTiming;
            golfie['withTiming'] = option;
            option = 12;
            option = offset[option];
            option = backup.bind(tangon)(option);
            option = option.STANDARD_EASING;
            golfie['STANDARD_EASING'] = option;
            entity['__closure'] = golfie;
            golfie = 9739160309298.0;
            entity['__workletHash'] = golfie;
            golfie = _closure1_slot8;
            entity['__initData'] = golfie;
            option = michal.bind(zuuluu)(entity);
            entity = 0.2;
            zuuluu = entity * foxtra;
            entity = 13;
            entity = offset[entity];
            michal = oscard.bind(tangon)(entity);
            entity = global;
            golfie = entity.Math;
            entity = golfie.random;
            golfie = entity.bind(golfie)();
            entity = 0.8;
            entity = entity * foxtra;
            entity = entity - zuuluu;
            entity = golfie * entity;
            entity = entity + zuuluu;
            echoed = michal.bind(tangon)(entity);
            zuuluu = _closure1_slot5;
            entity = 14;
            entity = offset[entity];
            michal = oscard.bind(tangon)(entity);
            entity = {};
            golfie = new Array(2);
            golfie[0] = romeon;
            romeon = output.placeholder;
            golfie[1] = romeon;
            entity['style'] = golfie;
            golfie = _closure1_slot6;
            report = offset[report];
            report = oscard.bind(tangon)(report);
            oscard = report.View;
            report = {};
            offset = undefined;
            if(yankee) { _fun00002_ip = 418; continue _fun00001 }
 415:
            offset = option;
 418:
            option = new Array(1);
            option[0] = offset;
            report['style'] = option;
            sizing = _closure1_slot5;
            yankee = _closure1_slot3;
            option = {};
            offset = output.banner;
            option['style'] = offset;
            offset = sizing.bind(tangon)(yankee, option);
            option = new Array(2);
            option[0] = offset;
            offset = _closure1_slot6;
            verify = {};
            romeon = kiloes.content;
            verify['style'] = romeon;
            romeon = {};
            foxtra = kiloes.iconContainer;
            romeon['style'] = foxtra;
            foxtra = {};
            result = output.icon;
            backup = new Array(2);
            backup[0] = result;
            kiloes = kiloes.icon;
            backup[1] = kiloes;
            foxtra['style'] = backup;
            foxtra = sizing.bind(tangon)(yankee, foxtra);
            romeon['children'] = foxtra;
            foxtra = sizing.bind(tangon)(yankee, romeon);
            romeon = new Array(2);
            romeon[0] = foxtra;
            foxtra = {};
            backup = output.textContainer;
            foxtra['style'] = backup;
            backup = {};
            result = output.title;
            kiloes = new Array(2);
            kiloes[0] = result;
            result = {};
            result['width'] = echoed;
            kiloes[1] = result;
            backup['style'] = kiloes;
            kiloes = sizing.bind(tangon)(yankee, backup);
            backup = new Array(2);
            backup[0] = kiloes;
            kiloes = {};
            output = output.description;
            kiloes['style'] = output;
            kiloes = sizing.bind(tangon)(yankee, kiloes);
            backup[1] = kiloes;
            foxtra['children'] = backup;
            foxtra = offset.bind(tangon)(yankee, foxtra);
            romeon[1] = foxtra;
            verify['children'] = romeon;
            verify = offset.bind(tangon)(yankee, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();