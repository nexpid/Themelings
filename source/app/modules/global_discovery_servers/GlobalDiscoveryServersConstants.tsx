// app/modules/global_discovery_servers/GlobalDiscoveryServersConstants.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var16 = require;
    var3 = exports;
    var17 = dependencyMap;
    var _closure1_slot0 = var16;
    var _closure1_slot1 = var17;
    var1 = global;
    var7 = var1.Object;
    var6 = var7.defineProperty;
    var5 = {};
    var4 = true;
    var5['value'] = var4;
    var4 = '__esModule';
    var4 = var6.bind(var7)(var3, var4, var5);
    var10 = {};
    var4 = 'featured';
    var10['FEATURED'] = var4;
    var4 = 'gaming';
    var10['GAMING'] = var4;
    var4 = 'music';
    var10['MUSIC'] = var4;
    var4 = 'entertainment';
    var10['ENTERTAINMENT'] = var4;
    var4 = 'tech';
    var10['TECH'] = var4;
    var4 = 'education';
    var10['EDUCATION'] = var4;
    var4 = 'hubs';
    var10['HUBS'] = var4;
    var9 = {};
    var4 = 'unknown';
    var9['UNKNOWN'] = var4;
    var4 = 'guilds_bar';
    var9['GUILDS_BAR'] = var4;
    var4 = 'rtc_panel';
    var9['RTC_PANEL'] = var4;
    var4 = 'profile';
    var9['PROFILE'] = var4;
    var4 = 'game_link';
    var9['GAME_LINK'] = var4;
    var4 = 'embed';
    var9['EMBED'] = var4;
    var5 = var1.Set;
    var4 = var10.HUBS;
    var1 = new Array(1);
    var1[0] = var4;
    var4 = var5.prototype;
    var4 = Object.create(var4, {constructor: {value: var5}});
    var22 = var4;
    var21 = var1;
    var1 = new var22[var5](var21, var20);
    var8 = var1 instanceof Object ? var1 : var4;
    var14 = 0;
    var5 = var17[var14];
    var4 = metroImportDefault;
    var1 = undefined;
    var4 = var4.bind(var1)(var5);
    var4 = var4.Millis;
    var5 = var4.MINUTE;
    var4 = 10;
    var7 = var4 * var5;
    var6 = {};
    var13 = -1;
    var6['categoryId'] = var13;
    var5 = {};
    var11 = -3;
    var5['Clans'] = var11;
    var4 = 'Clans';
    var5[var11] = var4;
    var12 = -2;
    var5['Hub'] = var12;
    var4 = 'Hub';
    var5[var12] = var4;
    var5['Communities'] = var13;
    var4 = 'Communities';
    var5[var13] = var4;
    var15 = 1;
    var5['Activity'] = var15;
    var4 = 'Activity';
    var5[var15] = var4;
    var15 = 2;
    var5['Music'] = var15;
    var4 = 'Music';
    var5[var15] = var4;
    var18 = 3;
    var5['Television'] = var18;
    var4 = 'Television';
    var5[var18] = var4;
    var18 = 5;
    var5['Science'] = var18;
    var4 = 'Science';
    var5[var18] = var4;
    var18 = 6;
    var5['Education'] = var18;
    var4 = 'Education';
    var5[var18] = var4;
    var18 = var5.Activity;
    var4 = new Array(5);
    var4[0] = var18;
    var18 = var5.Music;
    var4[1] = var18;
    var18 = var5.Television;
    var4[2] = var18;
    var18 = var5.Science;
    var4[3] = var18;
    var18 = var5.Education;
    var4[4] = var18;
    var18 = ['en-GB'];
    var _closure1_slot2 = var18;
    var15 = var17[var15];
    var17 = var16.bind(var1)(var15);
    var16 = var17.fileFinishedImporting;
    var15 = 'modules/global_discovery_servers/GlobalDiscoveryServersConstants.tsx';
    var15 = var16.bind(var17)(var15);
    var3['DEFAULT_DISCOVERY_CATEGORY_ID'] = var14;
    var14 = 13;
    var3['OTHER_DISCOVERY_CATEGORY_ID'] = var14;
    var3['DISCOVERY_ALL_CATEGORIES_ID'] = var13;
    var3['HUBS_CATEGORY_ID'] = var12;
    var3['RAPIDASH_GUILDS_CATEGORY_ID'] = var11;
    var3['GlobalDiscoveryServerTab'] = var10;
    var3['GlobalDiscoveryServerEntrypoint'] = var9;
    var3['SEARCH_DISABLED_SERVER_TABS'] = var8;
    var8 = new Array(0);
    var3['EMPTY_GUILD_IDS'] = var8;
    var8 = 'f';
    var3['SEARCH_RESULTS_FEATURED_PREFIX'] = var8;
    var8 = 'q';
    var3['SEARCH_RESULTS_QUERY_PREFIX'] = var8;
    var8 = 'c';
    var3['SEARCH_RESULTS_CATEGORY_PREFIX'] = var8;
    var8 = 'l';
    var3['SEARCH_RESULTS_LANGUAGE_CODE_PREFIX'] = var8;
    var3['FEATURED_GUILDS_CACHE_DURATION'] = var7;
    var3['FEATURED_GUILDS_SEARCH_OPTIONS'] = var6;
    var3['CategoryId'] = var5;
    var3['DISCOVERY_SIDEBAR_CATEGORIES'] = var4;
    var2 = function getLanguageOptions() {
        var4 = _closure1_slot0;
        var3 = _closure1_slot1;
        var2 = 1;
        var3 = var3[var2];
        var2 = undefined;
        var3 = var4.bind(var2)(var3);
        var2 = var3.getLanguages;
        var4 = var2.bind(var3)();
        var3 = var4.filter;
        var2 = function(arg1) {
            var3 = _closure1_slot2;
            var2 = var3.includes;
            var1 = arg1;
            var1 = var1.code;
            var1 = var2.bind(var3)(var1);
            var1 = !var1;
            return var1;
        };
        var3 = var3.bind(var4)(var2);
        var2 = var3.map;
        var1 = function(arg1) {
            _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
                var3 = arg1;
                var4 = var3.code;
                var2 = 'en-US';
                var1 = var3;
                if(!(var2 === var4)) { _fun0001_ip = 2; continue _fun0001 }
case 3:
                var2 = {};
                var10 = var2;
                var9 = var3;
                var3 = copyDataProperties(var10, var9);
                var7 = _closure1_slot0;
                var8 = _closure1_slot1;
                var3 = 1;
                var4 = var8[var3];
                var6 = undefined;
                var4 = var7.bind(var6)(var4);
                var5 = var4.intl;
                var4 = var5.string;
                var3 = var8[var3];
                var3 = var7.bind(var6)(var3);
                var3 = var3.t;
                var3 = var3.LQLMGB;
                var4 = var4.bind(var5)(var3);
                var3 = 'name';
                var2[var3] = var4;
                var1 = var2;
case 2:
                return var1;
            }
        };
        var1 = var2.bind(var3)(var1);
        return var1;
    };
    var3['getLanguageOptions'] = var2;
    return var1;
})();