// app/modules/guild_profile/native/components/GuildProfileEmojiSection.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    foxtra = 4;
    tangon = oscard[foxtra];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.UpsellTypes;
    var _closure1_slot10 = golfie;
    golfie = tangon.AnalyticsSections;
    var _closure1_slot11 = golfie;
    offset = tangon.Fonts;
    yankee = 8;
    tangon = oscard[yankee];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot12 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot13 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'flexWrap': 'wrap'};
    tangon['header'] = verify;
    verify = {};
    verify['marginBottom'] = yankee;
    tangon['sectionHeader'] = verify;
    verify = {'width': 4, 'height': 4, 'borderRadius': null, 'marginRight': 8, 'marginLeft': 8};
    yankee = 10;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xs;
    verify['borderRadius'] = backup;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_SECONDARY;
    verify['backgroundColor'] = backup;
    tangon['dotSeparator'] = verify;
    verify = {};
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.unsafe_rawColors;
    backup = backup.PREMIUM_TIER_2_PURPLE;
    verify['color'] = backup;
    verify['marginLeft'] = foxtra;
    foxtra = offset.PRIMARY_BOLD;
    verify['fontFamily'] = foxtra;
    foxtra = 12;
    verify['fontSize'] = foxtra;
    tangon['premiumTitle'] = verify;
    verify = {'flexDirection': 'row', 'flexWrap': 'wrap', 'alignItems': 'center', 'padding': 4};
    tangon['emojiContainer'] = verify;
    verify = {'width': 24, 'height': 24};
    tangon['emoji'] = verify;
    verify = {'color': null, 'fontSize': 12, 'fontFamily': null, 'textAlign': 'center', 'textAlignVertical': 'center'};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.HEADER_SECONDARY;
    verify['color'] = yankee;
    offset = offset.PRIMARY_BOLD;
    verify['fontFamily'] = offset;
    tangon['emojiCount'] = verify;
    verify = {'paddingTop': 0, 'paddingHorizontal': 0};
    tangon['cardSection'] = verify;
    verify = {};
    offset = 'transparent';
    verify['backgroundColor'] = offset;
    tangon['card'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot14 = tangon;
    tangon = 33;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_profile/native/components/GuildProfileEmojiSection.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.guildId;
            var _closure2_slot0 = zuuluu;
            report = undefined;
            var _closure2_slot5 = report;
            var _closure2_slot6 = report;
            var _closure2_slot7 = report;
            entity = _closure1_slot14;
            echoed = entity.bind(report)();
            var _closure2_slot1 = echoed;
            tangon = _closure1_slot4;
            michal = tangon.useState;
            entity = false;
            tangon = michal.bind(tangon)(entity);
            entity = _closure1_slot3;
            michal = 2;
            entity = entity.bind(report)(tangon, michal);
            foxtra = 0;
            tangon = entity[foxtra];
            var _closure2_slot2 = tangon;
            oscard = 1;
            entity = entity[oscard];
            var _closure2_slot3 = entity;
            verify = _closure1_slot0;
            entity = _closure1_slot2;
            option = 11;
            golfie = entity[option];
            kiloes = verify.bind(report)(golfie);
            backup = kiloes.useStateFromStoresArray;
            golfie = _closure1_slot6;
            offset = new Array(1);
            offset[0] = golfie;
            golfie = new Array(1);
            golfie[0] = zuuluu;
            zuuluu = function() {
                zuuluu = _closure1_slot6;
                michal = zuuluu.getGuildEmoji;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            zuuluu = backup.bind(kiloes)(offset, zuuluu, golfie);
            golfie = entity[option];
            kiloes = verify.bind(report)(golfie);
            backup = kiloes.useStateFromStores;
            golfie = _closure1_slot9;
            offset = new Array(1);
            offset[0] = golfie;
            golfie = function() {
                michal = _closure1_slot9;
                entity = michal.getWidth;
                entity = entity.bind(michal)();
                return entity;
            };
            golfie = backup.bind(kiloes)(offset, golfie);
            option = entity[option];
            kiloes = verify.bind(report)(option);
            backup = kiloes.useStateFromStores;
            option = _closure1_slot8;
            offset = new Array(1);
            offset[0] = option;
            verify = function() {
                michal = _closure1_slot8;
                entity = michal.getCurrentUser;
                entity = entity.bind(michal)();
                return entity;
            };
            option = new Array(0);
            offset = backup.bind(kiloes)(offset, verify, option);
            var _closure2_slot4 = offset;
            verify = _closure1_slot1;
            option = 12;
            entity = entity[option];
            verify = verify.bind(report)(entity);
            entity = verify.canUseEmojisEverywhere;
            entity = entity.bind(verify)(offset);
            output = !entity;
            if(!output) { _fun00002_ip = 298; continue _fun00001 }
 267:
            verify = _closure1_slot1;
            entity = _closure1_slot2;
            entity = entity[option];
            verify = verify.bind(report)(entity);
            entity = verify.isPremium;
            entity = entity.bind(verify)(offset);
            output = !entity;
 298:
            entity = 26;
            backup = golfie - entity;
            sizing = global;
            verify = sizing.Math;
            golfie = verify.floor;
            entity = 32;
            entity = backup / entity;
            entity = golfie.bind(verify)(entity);
            verify = 24;
            golfie = verify * entity;
            offset = michal * entity;
            golfie = backup - golfie;
            golfie = golfie / offset;
            offset = 4;
            update = offset;
            if(!(golfie >= offset)) { _fun00002_ip = 370; continue _fun00001 }
 360:
            update = offset;
            if(!(golfie < option)) { _fun00002_ip = 370; continue _fun00001 }
 367:
            update = golfie;
 370:
            _closure2_slot5 = update;
            if(tangon) { _fun00002_ip = 392; continue _fun00001 }
 377:
            tangon = michal * entity;
            entity = zuuluu.length;
            entity = entity - tangon;
            _fun00002_ip = 399; continue _fun00001;
 392:
            tangon = zuuluu.length;
            entity = 0;
 399:
            michal = tangon;
            result = entity;
            if(!(result > foxtra)) { _fun00002_ip = 437; continue _fun00001 }
 409:
            michal = tangon - oscard;
            option = sizing.Math;
            golfie = option.min;
            oscard = entity + oscard;
            entity = 99;
            result = golfie.bind(option)(oscard, entity);
 437:
            entity = zuuluu.slice;
            kiloes = entity.bind(zuuluu)(foxtra, michal);
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            entity = 13;
            entity = tangon[entity];
            michal = zuuluu.bind(report)(entity);
            entity = 14;
            entity = tangon[entity];
            entity = zuuluu.bind(report)(entity);
            entity = entity.EMOJI_PICKER;
            entity = michal.bind(report)(entity);
            entity = entity.analyticsLocations;
            _closure2_slot6 = entity;
            tangon = _closure1_slot4;
            zuuluu = tangon.useCallback;
            michal = new Array(1);
            michal[0] = entity;
            entity = function(argFoo, argBar) {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = argBar;
                    entity = null;
                    entity = entity == tangon;
                    if(entity) { _fun00004_ip = 48; continue _fun00003 }
 12:
                    report = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    michal = 12;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    zuuluu = report.bind(michal)(zuuluu);
                    michal = zuuluu.canUseEmojisEverywhere;
                    entity = michal.bind(zuuluu)(tangon);
 48:
                    if(entity) { _fun00004_ip = 190; continue _fun00003 }
 54:
                    zuuluu = _closure1_slot1;
                    tangon = _closure1_slot2;
                    entity = 15;
                    entity = tangon[entity];
                    michal = undefined;
                    golfie = zuuluu.bind(michal)(entity);
                    oscard = golfie.hideActionSheet;
                    entity = global;
                    entity = entity.HermesInternal;
                    verify = entity.concat;
                    option = 'GuildProfile:';
                    entity = argFoo;
                    entity = verify.bind(option)(entity);
                    entity = oscard.bind(golfie)(entity);
                    entity = 16;
                    entity = tangon[entity];
                    zuuluu = zuuluu.bind(michal)(entity);
                    michal = zuuluu.handleShowUpsellAlert;
                    entity = {};
                    tangon = _closure1_slot10;
                    tangon = tangon.GLOBAL_EMOJI;
                    entity['initialUpsellKey'] = tangon;
                    tangon = {};
                    report = _closure1_slot11;
                    report = report.EMOJI_PICKER_POPOUT;
                    tangon['section'] = report;
                    entity['analyticsLocation'] = tangon;
                    tangon = _closure2_slot6;
                    entity['analyticsLocations'] = tangon;
                    entity = michal.bind(zuuluu)(entity);
 190:
                    entity = undefined;
                    return entity;
                }
            };
            entity = zuuluu.bind(tangon)(entity, michal);
            _closure2_slot7 = entity;
            entity = kiloes.length;
            michal = entity > foxtra;
            entity = null;
            if(!michal) { _fun00002_ip = 1342; continue _fun00001 }
 550:
            tangon = _closure1_slot12;
            zuuluu = _closure1_slot1;
            vacuum = _closure1_slot2;
            michal = 17;
            michal = vacuum[michal];
            zuuluu = zuuluu.bind(report)(michal);
            michal = {};
            oscard = echoed.cardSection;
            michal['style'] = oscard;
            oscard = echoed.card;
            michal['cardStyle'] = oscard;
            option = _closure1_slot13;
            golfie = _closure1_slot5;
            oscard = {};
            source = echoed.header;
            backup = new Array(2);
            backup[0] = source;
            source = echoed.sectionHeader;
            backup[1] = source;
            oscard['style'] = backup;
            record = _closure1_slot0;
            backup = 18;
            backup = vacuum[backup];
            backup = record.bind(report)(backup);
            ctrled = backup.Text;
            backup = {'variant': 'eyebrow', 'color': 'header-secondary'};
            source = 19;
            sequen = vacuum[source];
            sequen = record.bind(report)(sequen);
            config = sequen.intl;
            sequen = config.string;
            vacuum = vacuum[source];
            vacuum = record.bind(report)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.Q60n1N;
            vacuum = sequen.bind(config)(vacuum);
            backup['children'] = vacuum;
            ctrled = tangon.bind(report)(ctrled, backup);
            backup = new Array(2);
            backup[0] = ctrled;
            if(!output) { _fun00002_ip = 1022; continue _fun00001 }
 742:
            sequen = _closure1_slot12;
            equals = _closure1_slot0;
            sierra = _closure1_slot2;
            ctrled = 20;
            ctrled = sierra[ctrled];
            ctrled = equals.bind(report)(ctrled);
            vacuum = ctrled.PressableOpacity;
            ctrled = {};
            config = 'button';
            ctrled['accessibilityRole'] = config;
            config = function() { // Original name: onPress
                tangon = _closure2_slot7;
                zuuluu = _closure2_slot0;
                michal = _closure2_slot4;
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            ctrled['onPress'] = config;
            cntext = _closure1_slot13;
            record = _closure1_slot5;
            config = {};
            papara = echoed.header;
            config['style'] = papara;
            papara = {};
            target = echoed.dotSeparator;
            papara['style'] = target;
            target = sequen.bind(report)(record, papara);
            papara = new Array(3);
            papara[0] = target;
            whisks = _closure1_slot1;
            limora = 21;
            target = sierra[limora];
            status = whisks.bind(report)(target);
            target = {};
            quebec = 22;
            quebec = sierra[quebec];
            quebec = whisks.bind(report)(quebec);
            target['source'] = quebec;
            quebec = true;
            target['disableColor'] = quebec;
            limora = sierra[limora];
            limora = whisks.bind(report)(limora);
            limora = limora.Sizes;
            limora = limora.SMALL;
            target['size'] = limora;
            target = sequen.bind(report)(status, target);
            papara[1] = target;
            target = 23;
            target = sierra[target];
            target = equals.bind(report)(target);
            status = target.LegacyText;
            target = {};
            limora = echoed.premiumTitle;
            target['style'] = limora;
            limora = sierra[source];
            limora = equals.bind(report)(limora);
            whisks = limora.intl;
            limora = whisks.string;
            sierra = sierra[source];
            sierra = equals.bind(report)(sierra);
            sierra = sierra.t;
            sierra = sierra.p1j56u;
            sierra = limora.bind(whisks)(sierra);
            target['children'] = sierra;
            target = sequen.bind(report)(status, target);
            papara[2] = target;
            config['children'] = papara;
            config = cntext.bind(report)(record, config);
            ctrled['children'] = config;
            output = sequen.bind(report)(vacuum, ctrled);
 1022:
            backup[1] = output;
            oscard['children'] = backup;
            oscard = option.bind(report)(golfie, oscard);
            michal['headerComponent'] = oscard;
            option = _closure1_slot13;
            golfie = _closure1_slot0;
            oscard = _closure1_slot2;
            oscard = oscard[verify];
            oscard = golfie.bind(report)(oscard);
            golfie = oscard.Card;
            oscard = {};
            verify = echoed.emojiContainer;
            oscard['style'] = verify;
            backup = kiloes.map;
            verify = function(argFoo) {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = argFoo;
                    var _closure3_slot0 = entity;
                    report = _closure1_slot12;
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    michal = 20;
                    michal = yankee[michal];
                    tangon = undefined;
                    michal = offset.bind(tangon)(michal);
                    zuuluu = michal.PressableOpacity;
                    michal = {};
                    golfie = 'imagebutton';
                    michal['accessibilityRole'] = golfie;
                    golfie = entity.name;
                    michal['accessibilityLabel'] = golfie;
                    oscard = function() { // Original name: onPress
                        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                            zuuluu = _closure1_slot0;
                            tangon = _closure1_slot2;
                            entity = 25;
                            report = tangon[entity];
                            entity = undefined;
                            oscard = zuuluu.bind(entity)(report);
                            report = oscard.triggerHapticFeedback;
                            golfie = _closure1_slot1;
                            michal = 26;
                            michal = tangon[michal];
                            michal = golfie.bind(entity)(michal);
                            michal = michal.IMPACT_LIGHT;
                            michal = report.bind(oscard)(michal);
                            michal = 27;
                            michal = tangon[michal];
                            tangon = zuuluu.bind(entity)(michal);
                            zuuluu = tangon.presentEmoji;
                            michal = _closure3_slot0;
                            michal = zuuluu.bind(tangon)(michal);
                            zuuluu = _closure2_slot2;
                            if(zuuluu) { _fun00008_ip = 109; continue _fun00007 }
 98:
                            zuuluu = _closure2_slot3;
                            michal = true;
                            michal = zuuluu.bind(entity)(michal);
 109:
                            return entity;
                        }
                    };
                    michal['onPress'] = oscard;
                    golfie = _closure1_slot1;
                    oscard = 28;
                    oscard = yankee[oscard];
                    golfie = golfie.bind(tangon)(oscard);
                    oscard = {};
                    option = 'contain';
                    oscard['resizeMode'] = option;
                    option = _closure2_slot1;
                    romeon = option.emoji;
                    option = new Array(2);
                    option[0] = romeon;
                    romeon = {};
                    foxtra = _closure2_slot5;
                    romeon['margin'] = foxtra;
                    option[1] = romeon;
                    oscard['style'] = option;
                    option = 29;
                    option = yankee[option];
                    yankee = offset.bind(tangon)(option);
                    offset = yankee.isThemeDark;
                    option = _closure1_slot7;
                    option = option.theme;
                    option = offset.bind(yankee)(option);
                    yankee = _closure1_slot1;
                    romeon = _closure1_slot2;
                    if(option) { _fun00006_ip = 199; continue _fun00005 }
 185:
                    option = 31;
                    option = romeon[option];
                    option = yankee.bind(tangon)(option);
                    _fun00006_ip = 211; continue _fun00005;
 199:
                    offset = 30;
                    offset = romeon[offset];
                    option = yankee.bind(tangon)(offset);
 211:
                    oscard['placeholder'] = option;
                    option = {};
                    offset = _closure1_slot1;
                    yankee = _closure1_slot2;
                    verify = 32;
                    verify = yankee[verify];
                    yankee = offset.bind(tangon)(verify);
                    offset = yankee.getEmojiURL;
                    verify = {};
                    romeon = entity.id;
                    verify['id'] = romeon;
                    romeon = entity.animated;
                    verify['animated'] = romeon;
                    romeon = 48;
                    verify['size'] = romeon;
                    verify = offset.bind(yankee)(verify);
                    option['uri'] = verify;
                    oscard['source'] = option;
                    oscard = report.bind(tangon)(golfie, oscard);
                    michal['children'] = oscard;
                    entity = entity.id;
                    entity = report.bind(tangon)(zuuluu, michal, entity);
                    return entity;
                }
            };
            backup = backup.bind(kiloes)(verify);
            verify = new Array(2);
            verify[0] = backup;
            foxtra = result > foxtra;
            offset = null;
            if(!foxtra) { _fun00002_ip = 1318; continue _fun00001 }
 1115:
            backup = _closure1_slot12;
            kiloes = _closure1_slot0;
            output = _closure1_slot2;
            romeon = 20;
            romeon = output[romeon];
            romeon = kiloes.bind(report)(romeon);
            foxtra = romeon.PressableOpacity;
            romeon = {};
            ctrled = 'button';
            romeon['accessibilityRole'] = ctrled;
            ctrled = output[source];
            ctrled = kiloes.bind(report)(ctrled);
            vacuum = ctrled.intl;
            ctrled = vacuum.string;
            source = output[source];
            source = kiloes.bind(report)(source);
            source = source.t;
            source = source.UKOtz8;
            source = ctrled.bind(vacuum)(source);
            romeon['accessibilityLabel'] = source;
            yankee = function() { // Original name: onPress
                tangon = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 25;
                zuuluu = oscard[entity];
                entity = undefined;
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.triggerHapticFeedback;
                report = _closure1_slot1;
                michal = 26;
                michal = oscard[michal];
                michal = report.bind(entity)(michal);
                michal = michal.IMPACT_LIGHT;
                michal = zuuluu.bind(tangon)(michal);
                zuuluu = _closure2_slot3;
                michal = true;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            romeon['onPress'] = yankee;
            yankee = 23;
            yankee = output[yankee];
            yankee = kiloes.bind(report)(yankee);
            kiloes = yankee.LegacyText;
            yankee = {};
            source = echoed.emoji;
            output = new Array(3);
            output[0] = source;
            echoed = echoed.emojiCount;
            output[1] = echoed;
            echoed = {};
            echoed['margin'] = update;
            output[2] = echoed;
            yankee['style'] = output;
            sizing = sizing.HermesInternal;
            output = sizing.concat;
            sizing = '+';
            sizing = output.bind(sizing)(result);
            yankee['children'] = sizing;
            yankee = backup.bind(report)(kiloes, yankee);
            romeon['children'] = yankee;
            yankee = -1;
            offset = backup.bind(report)(foxtra, romeon, yankee);
 1318:
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 1342:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();