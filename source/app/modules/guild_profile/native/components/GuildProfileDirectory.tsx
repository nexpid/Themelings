// app/modules/guild_profile/native/components/GuildProfileDirectory.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot3 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = offset;
    offset = 3;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = offset;
    tangon['container'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_profile/native/components/GuildProfileDirectory.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        entity = argFoo;
        yankee = entity.guild;
        entity = _closure1_slot5;
        tangon = undefined;
        option = entity.bind(tangon)();
        verify = _closure1_slot1;
        romeon = _closure1_slot2;
        entity = 4;
        entity = romeon[entity];
        entity = verify.bind(tangon)(entity);
        entity = entity.bind(tangon)();
        foxtra = entity.bottom;
        zuuluu = _closure1_slot3;
        offset = _closure1_slot0;
        entity = 5;
        entity = romeon[entity];
        entity = offset.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        oscard = true;
        entity['scrollable'] = oscard;
        golfie = _closure1_slot4;
        report = 6;
        report = romeon[report];
        report = offset.bind(tangon)(report);
        oscard = report.BottomSheetScrollView;
        report = {};
        backup = false;
        report['scrollsToTop'] = backup;
        option = option.container;
        report['style'] = option;
        option = {};
        option['paddingBottom'] = foxtra;
        report['contentContainerStyle'] = option;
        option = 7;
        option = romeon[option];
        verify = verify.bind(tangon)(option);
        option = {};
        option['guild'] = yankee;
        verify = zuuluu.bind(tangon)(verify, option);
        option = new Array(3);
        option[0] = verify;
        verify = 8;
        foxtra = romeon[verify];
        foxtra = offset.bind(tangon)(foxtra);
        backup = foxtra.GuildProfileDirectoryActions;
        foxtra = {};
        foxtra['guild'] = yankee;
        foxtra = zuuluu.bind(tangon)(backup, foxtra);
        option[1] = foxtra;
        verify = romeon[verify];
        verify = offset.bind(tangon)(verify);
        offset = verify.GuildDeveloperOptionAction;
        verify = {};
        verify['guild'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[2] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();