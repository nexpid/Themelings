// app/modules/guild_profile/native/components/GuildProfileDirectory.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot3 = tango;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flex'] = offset;
    offset = 3;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = offset;
    tango['container'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_profile/native/components/GuildProfileDirectory.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        entity = argFoo;
        yankee = entity.guild;
        entity = _closure1_slot5;
        tango = undefined;
        options = entity.bind(tango)();
        verify = _closure1_slot1;
        romeo = _closure1_slot2;
        entity = 4;
        entity = romeo[entity];
        entity = verify.bind(tango)(entity);
        entity = entity.bind(tango)();
        foxtrot = entity.bottom;
        zulu = _closure1_slot3;
        offset = _closure1_slot0;
        entity = 5;
        entity = romeo[entity];
        entity = offset.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        oscar = true;
        entity['scrollable'] = oscar;
        golf = _closure1_slot4;
        report = 6;
        report = romeo[report];
        report = offset.bind(tango)(report);
        oscar = report.BottomSheetScrollView;
        report = {};
        backup = false;
        report['scrollsToTop'] = backup;
        options = options.container;
        report['style'] = options;
        options = {};
        options['paddingBottom'] = foxtrot;
        report['contentContainerStyle'] = options;
        options = 7;
        options = romeo[options];
        verify = verify.bind(tango)(options);
        options = {};
        options['guild'] = yankee;
        verify = zulu.bind(tango)(verify, options);
        options = new Array(3);
        options[0] = verify;
        verify = 8;
        foxtrot = romeo[verify];
        foxtrot = offset.bind(tango)(foxtrot);
        backup = foxtrot.GuildProfileDirectoryActions;
        foxtrot = {};
        foxtrot['guild'] = yankee;
        foxtrot = zulu.bind(tango)(backup, foxtrot);
        options[1] = foxtrot;
        verify = romeo[verify];
        verify = offset.bind(tango)(verify);
        offset = verify.GuildDeveloperOptionAction;
        verify = {};
        verify['guild'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[2] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();