// app/modules/guild_profile/native/components/GuildProfile.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    yankee = 1;
    tangon = oscard[yankee];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot4 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    offset['flex'] = yankee;
    yankee = 4;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_BASE_SECONDARY;
    offset['backgroundColor'] = yankee;
    tangon['container'] = offset;
    offset = {'paddingHorizontal': 16, 'gap': 24};
    tangon['actions'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot6 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            source = entity.guild;
            golfie = entity.expanded;
            tangon = undefined;
            if(!(golfie === tangon)) { _fun00002_ip = 22; continue _fun00001 }
 20:
            golfie = false;
 22:
            entity = _closure1_slot6;
            result = entity.bind(tangon)();
            michal = _closure1_slot1;
            kiloes = _closure1_slot2;
            entity = 5;
            entity = kiloes[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            romeon = entity.bottom;
            foxtra = _closure1_slot0;
            entity = 6;
            entity = kiloes[entity];
            michal = foxtra.bind(tangon)(entity);
            entity = michal.useBottomSheetRef;
            entity = entity.bind(michal)();
            option = entity.bottomSheetRef;
            backup = entity.bottomSheetClose;
            zuuluu = _closure1_slot4;
            entity = 7;
            entity = kiloes[entity];
            entity = foxtra.bind(tangon)(entity);
            michal = entity.RedesignCompat;
            entity = {};
            report = 8;
            report = kiloes[report];
            report = foxtra.bind(tangon)(report);
            oscard = report.BottomSheet;
            report = {'ref': null, 'handleDisabled': true, 'showGradient': true, 'scrollable': true};
            report['ref'] = option;
            report['startExpanded'] = golfie;
            verify = _closure1_slot5;
            golfie = 9;
            golfie = kiloes[golfie];
            golfie = foxtra.bind(tangon)(golfie);
            option = golfie.BottomSheetScrollView;
            golfie = {};
            offset = false;
            golfie['scrollsToTop'] = offset;
            offset = result.container;
            golfie['style'] = offset;
            offset = {};
            yankee = 10;
            yankee = kiloes[yankee];
            foxtra = foxtra.bind(tangon)(yankee);
            yankee = foxtra.isAndroid;
            foxtra = yankee.bind(foxtra)();
            yankee = 0;
            if(!foxtra) { _fun00002_ip = 238; continue _fun00001 }
 235:
            yankee = 16;
 238:
            yankee = romeon + yankee;
            offset['paddingBottom'] = yankee;
            golfie['contentContainerStyle'] = offset;
            foxtra = _closure1_slot4;
            update = _closure1_slot1;
            output = _closure1_slot2;
            offset = 11;
            offset = output[offset];
            yankee = update.bind(tangon)(offset);
            offset = {};
            offset['guild'] = source;
            yankee = foxtra.bind(tangon)(yankee, offset);
            offset = new Array(4);
            offset[0] = yankee;
            yankee = 12;
            yankee = output[yankee];
            romeon = update.bind(tangon)(yankee);
            yankee = {};
            yankee['guild'] = source;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            offset[1] = yankee;
            kiloes = _closure1_slot5;
            romeon = _closure1_slot3;
            yankee = {};
            result = result.actions;
            yankee['style'] = result;
            sizing = _closure1_slot0;
            echoed = 13;
            result = output[echoed];
            result = sizing.bind(tangon)(result);
            ctrled = result.GuildUnreadAction;
            result = {};
            result['guild'] = source;
            ctrled = foxtra.bind(tangon)(ctrled, result);
            result = new Array(6);
            result[0] = ctrled;
            ctrled = 14;
            ctrled = output[ctrled];
            vacuum = update.bind(tangon)(ctrled);
            ctrled = {};
            ctrled['guild'] = source;
            ctrled = foxtra.bind(tangon)(vacuum, ctrled);
            result[1] = ctrled;
            ctrled = output[echoed];
            ctrled = sizing.bind(tangon)(ctrled);
            vacuum = ctrled.GuildProfilePrimaryActions;
            ctrled = {};
            ctrled['guild'] = source;
            ctrled = foxtra.bind(tangon)(vacuum, ctrled);
            result[2] = ctrled;
            ctrled = output[echoed];
            ctrled = sizing.bind(tangon)(ctrled);
            vacuum = ctrled.GuildProfileSecondaryActions;
            ctrled = {};
            ctrled['guild'] = source;
            ctrled = foxtra.bind(tangon)(vacuum, ctrled);
            result[3] = ctrled;
            echoed = output[echoed];
            echoed = sizing.bind(tangon)(echoed);
            ctrled = echoed.GuildDeveloperOptionAction;
            echoed = {};
            echoed['guild'] = source;
            echoed = foxtra.bind(tangon)(ctrled, echoed);
            result[4] = echoed;
            echoed = 15;
            echoed = output[echoed];
            update = update.bind(tangon)(echoed);
            echoed = {};
            source = source.id;
            echoed['guildId'] = source;
            echoed = foxtra.bind(tangon)(update, echoed);
            result[5] = echoed;
            yankee['children'] = result;
            yankee = kiloes.bind(tangon)(romeon, yankee);
            offset[2] = yankee;
            yankee = 16;
            yankee = output[yankee];
            yankee = sizing.bind(tangon)(yankee);
            romeon = yankee.ActionSheetHeaderBar;
            yankee = {};
            kiloes = 17;
            kiloes = output[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            kiloes = kiloes.ActionSheetHeaderBarVariants;
            kiloes = kiloes.FLOATING;
            yankee['variant'] = kiloes;
            yankee['onPress'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            offset[3] = yankee;
            golfie['children'] = offset;
            golfie = verify.bind(tangon)(option, golfie);
            report['children'] = golfie;
            report = zuuluu.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 18;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_profile/native/components/GuildProfile.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();