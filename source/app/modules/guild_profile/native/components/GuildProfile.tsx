// app/modules/guild_profile/native/components/GuildProfile.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    yankee = 1;
    tango = oscar[yankee];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot4 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {};
    offset['flex'] = yankee;
    yankee = 4;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_BASE_SECONDARY;
    offset['backgroundColor'] = yankee;
    tango['container'] = offset;
    offset = {'paddingHorizontal': 16, 'gap': 24};
    tango['actions'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot6 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        _fun114272: for(var _fun114272_ip = 0; ; ) switch(_fun114272_ip) {
 0:
            entity = argFoo;
            source = entity.guild;
            golf = entity.expanded;
            tango = undefined;
            if(!(golf === tango)) { _fun114272_ip = 22; continue _fun114272 }
 20:
            golf = false;
 22:
            entity = _closure1_slot6;
            result = entity.bind(tango)();
            mike = _closure1_slot1;
            kilo = _closure1_slot2;
            entity = 5;
            entity = kilo[entity];
            entity = mike.bind(tango)(entity);
            entity = entity.bind(tango)();
            romeo = entity.bottom;
            foxtrot = _closure1_slot0;
            entity = 6;
            entity = kilo[entity];
            mike = foxtrot.bind(tango)(entity);
            entity = mike.useBottomSheetRef;
            entity = entity.bind(mike)();
            options = entity.bottomSheetRef;
            backup = entity.bottomSheetClose;
            zulu = _closure1_slot4;
            entity = 7;
            entity = kilo[entity];
            entity = foxtrot.bind(tango)(entity);
            mike = entity.RedesignCompat;
            entity = {};
            report = 8;
            report = kilo[report];
            report = foxtrot.bind(tango)(report);
            oscar = report.BottomSheet;
            report = {'ref': null, 'handleDisabled': true, 'showGradient': true, 'scrollable': true};
            report['ref'] = options;
            report['startExpanded'] = golf;
            verify = _closure1_slot5;
            golf = 9;
            golf = kilo[golf];
            golf = foxtrot.bind(tango)(golf);
            options = golf.BottomSheetScrollView;
            golf = {};
            offset = false;
            golf['scrollsToTop'] = offset;
            offset = result.container;
            golf['style'] = offset;
            offset = {};
            yankee = 10;
            yankee = kilo[yankee];
            foxtrot = foxtrot.bind(tango)(yankee);
            yankee = foxtrot.isAndroid;
            foxtrot = yankee.bind(foxtrot)();
            yankee = 0;
            if(!foxtrot) { _fun114272_ip = 238; continue _fun114272 }
 235:
            yankee = 16;
 238:
            yankee = romeo + yankee;
            offset['paddingBottom'] = yankee;
            golf['contentContainerStyle'] = offset;
            foxtrot = _closure1_slot4;
            update = _closure1_slot1;
            output = _closure1_slot2;
            offset = 11;
            offset = output[offset];
            yankee = update.bind(tango)(offset);
            offset = {};
            offset['guild'] = source;
            yankee = foxtrot.bind(tango)(yankee, offset);
            offset = new Array(4);
            offset[0] = yankee;
            yankee = 12;
            yankee = output[yankee];
            romeo = update.bind(tango)(yankee);
            yankee = {};
            yankee['guild'] = source;
            yankee = foxtrot.bind(tango)(romeo, yankee);
            offset[1] = yankee;
            kilo = _closure1_slot5;
            romeo = _closure1_slot3;
            yankee = {};
            result = result.actions;
            yankee['style'] = result;
            sizing = _closure1_slot0;
            echo = 13;
            result = output[echo];
            result = sizing.bind(tango)(result);
            control = result.GuildUnreadAction;
            result = {};
            result['guild'] = source;
            control = foxtrot.bind(tango)(control, result);
            result = new Array(6);
            result[0] = control;
            control = 14;
            control = output[control];
            vacuum = update.bind(tango)(control);
            control = {};
            control['guild'] = source;
            control = foxtrot.bind(tango)(vacuum, control);
            result[1] = control;
            control = output[echo];
            control = sizing.bind(tango)(control);
            vacuum = control.GuildProfilePrimaryActions;
            control = {};
            control['guild'] = source;
            control = foxtrot.bind(tango)(vacuum, control);
            result[2] = control;
            control = output[echo];
            control = sizing.bind(tango)(control);
            vacuum = control.GuildProfileSecondaryActions;
            control = {};
            control['guild'] = source;
            control = foxtrot.bind(tango)(vacuum, control);
            result[3] = control;
            echo = output[echo];
            echo = sizing.bind(tango)(echo);
            control = echo.GuildDeveloperOptionAction;
            echo = {};
            echo['guild'] = source;
            echo = foxtrot.bind(tango)(control, echo);
            result[4] = echo;
            echo = 15;
            echo = output[echo];
            update = update.bind(tango)(echo);
            echo = {};
            source = source.id;
            echo['guildId'] = source;
            echo = foxtrot.bind(tango)(update, echo);
            result[5] = echo;
            yankee['children'] = result;
            yankee = kilo.bind(tango)(romeo, yankee);
            offset[2] = yankee;
            yankee = 16;
            yankee = output[yankee];
            yankee = sizing.bind(tango)(yankee);
            romeo = yankee.ActionSheetHeaderBar;
            yankee = {};
            kilo = 17;
            kilo = output[kilo];
            kilo = sizing.bind(tango)(kilo);
            kilo = kilo.ActionSheetHeaderBarVariants;
            kilo = kilo.FLOATING;
            yankee['variant'] = kilo;
            yankee['onPress'] = backup;
            yankee = foxtrot.bind(tango)(romeo, yankee);
            offset[3] = yankee;
            golf['children'] = offset;
            golf = verify.bind(tango)(options, golf);
            report['children'] = golf;
            report = zulu.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_profile/native/components/GuildProfile.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();