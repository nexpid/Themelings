// app/modules/guild_profile/native/components/GuildProfileActions.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    option = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    verify = argPlu;
    var _closure1_slot0 = option;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = verify;
    entity = function(argFoo) { // Original name: ChangeIdentityOption
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            echoed = entity.guild;
            sizing = entity.user;
            entity = _closure1_slot20;
            tangon = undefined;
            backup = entity.bind(tangon)();
            michal = _closure1_slot1;
            oscard = _closure1_slot2;
            entity = 28;
            entity = oscard[entity];
            golfie = michal.bind(tangon)(entity);
            zuuluu = golfie.getNickname;
            entity = echoed.id;
            kiloes = zuuluu.bind(golfie)(entity, tangon, sizing);
            golfie = {};
            entity = _closure1_slot14;
            entity = entity.GUILD_CHANNEL;
            golfie['page'] = entity;
            entity = _closure1_slot15;
            entity = entity.GUILD_BOTTOM_SHEET;
            golfie['section'] = entity;
            entity = 29;
            entity = oscard[entity];
            zuuluu = michal.bind(tangon)(entity);
            entity = 30;
            entity = oscard[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.GUILD_SETTINGS;
            entity = zuuluu.bind(tangon)(entity);
            zuuluu = entity.analyticsLocations;
            entity = 31;
            entity = oscard[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['guild'] = echoed;
            entity['analyticsLocation'] = golfie;
            entity['analyticsLocations'] = zuuluu;
            zuuluu = true;
            entity['openWithoutBackstack'] = zuuluu;
            entity = michal.bind(tangon)(entity);
            var _closure2_slot0 = entity;
            zuuluu = _closure1_slot18;
            golfie = _closure1_slot0;
            entity = 16;
            entity = oscard[entity];
            entity = golfie.bind(tangon)(entity);
            michal = entity.ActionSheetRow;
            entity = {};
            romeon = 17;
            oscard = oscard[romeon];
            oscard = golfie.bind(tangon)(oscard);
            option = oscard.intl;
            golfie = option.string;
            offset = echoed.features;
            verify = offset.has;
            oscard = _closure1_slot13;
            oscard = oscard.HUB;
            oscard = verify.bind(offset)(oscard);
            offset = _closure1_slot0;
            verify = _closure1_slot2;
            verify = verify[romeon];
            verify = offset.bind(tangon)(verify);
            verify = verify.t;
            if(oscard) { _fun00002_ip = 291; continue _fun00001 }
 283:
            oscard = verify.PKQB/P;
            _fun00002_ip = 299; continue _fun00001;
 291:
            oscard = verify.+MWrWl;
 299:
            oscard = golfie.bind(option)(oscard);
            entity['label'] = oscard;
            golfie = null;
            oscard = kiloes;
            if(!(golfie != sizing)) { _fun00002_ip = 537; continue _fun00001 }
 320:
            option = sizing.hasAvatarForGuild;
            golfie = echoed.id;
            golfie = option.bind(sizing)(golfie);
            oscard = kiloes;
            if(!golfie) { _fun00002_ip = 537; continue _fun00001 }
 345:
            verify = _closure1_slot19;
            option = _closure1_slot4;
            golfie = {};
            offset = backup.identitySublabel;
            golfie['style'] = offset;
            result = _closure1_slot18;
            romeon = _closure1_slot1;
            output = _closure1_slot2;
            update = 32;
            offset = output[update];
            foxtra = romeon.bind(tangon)(offset);
            offset = {};
            source = _closure1_slot0;
            update = output[update];
            update = source.bind(tangon)(update);
            update = update.AvatarSizes;
            update = update.SIZE_16;
            offset['size'] = update;
            update = backup.guildServerAvatar;
            offset['style'] = update;
            offset['user'] = sizing;
            echoed = echoed.id;
            offset['guildId'] = echoed;
            foxtra = result.bind(tangon)(foxtra, offset);
            offset = new Array(2);
            offset[0] = foxtra;
            foxtra = _closure1_slot18;
            yankee = 33;
            yankee = output[yankee];
            romeon = romeon.bind(tangon)(yankee);
            yankee = {};
            yankee['user'] = sizing;
            yankee['nick'] = kiloes;
            kiloes = backup.identityName;
            yankee['usernameStyle'] = kiloes;
            kiloes = backup.identityName;
            yankee['discriminatorStyle'] = kiloes;
            backup = backup.identityName;
            yankee['nicknameStyle'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            offset[1] = yankee;
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 537:
            entity['subLabel'] = oscard;
            report = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 23;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                michal = _closure2_slot0;
                michal = michal.bind(entity)();
                return entity;
            };
            entity['onPress'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot26 = entity;
    entity = global;
    oscard = entity.Object;
    report = oscard.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscard)(zuuluu, entity, tangon);
    entity = 0;
    report = verify[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(report);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = verify[tangon];
    tangon = option.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = verify[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = verify[tangon];
    tangon = option.bind(entity)(tangon);
    tangon = tangon.isGuildOwner;
    var _closure1_slot6 = tangon;
    romeon = 4;
    tangon = verify[romeon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = verify[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = verify[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 7;
    tangon = verify[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 8;
    tangon = verify[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 9;
    tangon = verify[tangon];
    tangon = option.bind(entity)(tangon);
    report = tangon.ChannelTypes;
    var _closure1_slot12 = report;
    report = tangon.GuildFeatures;
    var _closure1_slot13 = report;
    yankee = tangon.Fonts;
    report = tangon.AnalyticsPages;
    var _closure1_slot14 = report;
    tangon = tangon.AnalyticsSections;
    var _closure1_slot15 = tangon;
    tangon = 10;
    tangon = verify[tangon];
    tangon = option.bind(entity)(tangon);
    tangon = tangon.CHANNELS_AND_ROLES_MODAL_KEY;
    var _closure1_slot16 = tangon;
    tangon = 11;
    tangon = verify[tangon];
    tangon = option.bind(entity)(tangon);
    tangon = tangon.ReadStateTypes;
    var _closure1_slot17 = tangon;
    offset = 12;
    tangon = verify[offset];
    tangon = option.bind(entity)(tangon);
    report = tangon.jsx;
    var _closure1_slot18 = report;
    tangon = tangon.jsxs;
    var _closure1_slot19 = tangon;
    tangon = 13;
    tangon = verify[tangon];
    oscard = option.bind(entity)(tangon);
    report = oscard.createStyles;
    tangon = {};
    golfie = {};
    golfie['marginRight'] = romeon;
    tangon['guildServerAvatar'] = golfie;
    golfie = {};
    romeon = 14;
    romeon = verify[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INTERACTIVE_NORMAL;
    golfie['color'] = romeon;
    yankee = yankee.PRIMARY_MEDIUM;
    golfie['fontFamily'] = yankee;
    golfie['fontSize'] = offset;
    tangon['identityName'] = golfie;
    golfie = {};
    offset = 'row';
    golfie['flexDirection'] = offset;
    tangon['identitySublabel'] = golfie;
    tangon = report.bind(oscard)(tangon);
    var _closure1_slot20 = tangon;
    tangon = function(argFoo) { // Original name: HideMutedChannelsOption
        entity = argFoo;
        entity = entity.guild;
        var _closure2_slot0 = entity;
        offset = _closure1_slot0;
        yankee = _closure1_slot2;
        michal = 15;
        michal = yankee[michal];
        tangon = undefined;
        golfie = offset.bind(tangon)(michal);
        oscard = golfie.useStateFromStores;
        michal = _closure1_slot10;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            zuuluu = _closure1_slot10;
            michal = zuuluu.isGuildCollapsed;
            entity = _closure2_slot0;
            entity = entity.id;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        oscard = oscard.bind(golfie)(zuuluu, michal);
        zuuluu = _closure1_slot18;
        entity = 16;
        entity = yankee[entity];
        entity = offset.bind(tangon)(entity);
        michal = entity.ActionSheetSwitchRow;
        entity = {};
        golfie = 17;
        option = yankee[golfie];
        option = offset.bind(tangon)(option);
        verify = option.intl;
        option = verify.string;
        golfie = yankee[golfie];
        golfie = offset.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.UwOLJC;
        golfie = option.bind(verify)(golfie);
        entity['label'] = golfie;
        entity['value'] = oscard;
        report = function() { // Original name: onValueChange
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 18;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.toggleCollapseGuild;
            entity = _closure2_slot0;
            entity = entity.id;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        entity['onValueChange'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot21 = tangon;
    tangon = function(argFoo) { // Original name: BrowseChannelsOption
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            entity = entity.guild;
            var _closure2_slot0 = entity;
            tangon = _closure1_slot1;
            option = _closure1_slot2;
            zuuluu = 19;
            zuuluu = option[zuuluu];
            report = undefined;
            zuuluu = tangon.bind(report)(zuuluu);
            oscard = zuuluu.bind(report)(entity);
            tangon = _closure1_slot0;
            zuuluu = 20;
            zuuluu = option[zuuluu];
            offset = tangon.bind(report)(zuuluu);
            verify = offset.UNSAFE_useIsDismissibleContentDismissed;
            zuuluu = 21;
            zuuluu = option[zuuluu];
            zuuluu = tangon.bind(report)(zuuluu);
            zuuluu = zuuluu.DismissibleContent;
            zuuluu = zuuluu.CHANNEL_BROWSER_NEW_BADGE_NUX;
            romeon = verify.bind(offset)(zuuluu);
            zuuluu = 15;
            verify = option[zuuluu];
            foxtra = tangon.bind(report)(verify);
            yankee = foxtra.useStateFromStores;
            verify = _closure1_slot9;
            offset = new Array(1);
            offset[0] = verify;
            verify = function() {
                tangon = _closure1_slot9;
                zuuluu = tangon.hasUnread;
                michal = _closure2_slot0;
                michal = michal.id;
                entity = _closure1_slot17;
                entity = entity.GUILD_ONBOARDING_QUESTION;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            yankee = yankee.bind(foxtra)(offset, verify);
            zuuluu = option[zuuluu];
            verify = tangon.bind(report)(zuuluu);
            option = verify.useStateFromStores;
            zuuluu = _closure1_slot5;
            tangon = new Array(1);
            tangon[0] = zuuluu;
            zuuluu = function() {
                tangon = _closure1_slot5;
                zuuluu = tangon.getNewChannelIds;
                michal = _closure2_slot0;
                michal = michal.id;
                michal = zuuluu.bind(tangon)(michal);
                michal = michal.size;
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 22;
                zuuluu = zuuluu[entity];
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu);
                entity = entity.MAX_NEW_CHANNELS_TO_SHOW;
                entity = michal > entity;
                return entity;
            };
            offset = option.bind(verify)(tangon, zuuluu);
            option = _closure1_slot3;
            tangon = option.useCallback;
            verify = entity.id;
            zuuluu = new Array(1);
            zuuluu[0] = verify;
            michal = function() {
                report = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 23;
                tangon = zuuluu[entity];
                entity = undefined;
                oscard = report.bind(entity)(tangon);
                tangon = oscard.hideActionSheet;
                tangon = tangon.bind(oscard)();
                tangon = 24;
                tangon = zuuluu[tangon];
                oscard = report.bind(entity)(tangon);
                report = oscard.pushLazy;
                golfie = _closure1_slot0;
                tangon = 26;
                tangon = zuuluu[tangon];
                golfie = golfie.bind(entity)(tangon);
                tangon = 25;
                tangon = zuuluu[tangon];
                zuuluu = zuuluu.paths;
                tangon = golfie.bind(entity)(tangon, zuuluu);
                zuuluu = {};
                golfie = _closure2_slot0;
                golfie = golfie.id;
                zuuluu['guildId'] = golfie;
                michal = _closure1_slot16;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            option = tangon.bind(option)(michal, zuuluu);
            zuuluu = entity.features;
            michal = zuuluu.has;
            entity = _closure1_slot13;
            entity = entity.COMMUNITY;
            michal = michal.bind(zuuluu)(entity);
            entity = null;
            if(!michal) { _fun00004_ip = 416; continue _fun00003 }
 245:
            tangon = _closure1_slot18;
            zuuluu = _closure1_slot0;
            foxtra = _closure1_slot2;
            michal = 16;
            michal = foxtra[michal];
            michal = zuuluu.bind(report)(michal);
            zuuluu = michal.ActionSheetRow;
            michal = {};
            if(!romeon) { _fun00004_ip = 288; continue _fun00003 }
 280:
            if(yankee) { _fun00004_ip = 288; continue _fun00003 }
 283:
            verify = null;
            if(!offset) { _fun00004_ip = 326; continue _fun00003 }
 288:
            romeon = _closure1_slot18;
            yankee = _closure1_slot0;
            foxtra = _closure1_slot2;
            offset = 27;
            offset = foxtra[offset];
            offset = yankee.bind(report)(offset);
            yankee = offset.NewBadge;
            offset = {};
            verify = romeon.bind(report)(yankee, offset);
 326:
            michal['trailing'] = verify;
            michal['onPress'] = option;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            golfie = 17;
            option = yankee[golfie];
            option = offset.bind(report)(option);
            verify = option.intl;
            option = verify.string;
            golfie = yankee[golfie];
            golfie = offset.bind(report)(golfie);
            golfie = golfie.t;
            if(oscard) { _fun00004_ip = 395; continue _fun00003 }
 382:
            oscard = golfie.et6wam;
            oscard = option.bind(verify)(oscard);
            _fun00004_ip = 406; continue _fun00003;
 395:
            golfie = golfie.h9mGOD;
            oscard = option.bind(verify)(golfie);
 406:
            michal['label'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 416:
            return entity;
        }
    };
    var _closure1_slot22 = tangon;
    oscard = function(argFoo) { // Original name: RestrictedGuildPrivacyOption
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            golfie = entity.guild;
            var _closure2_slot0 = golfie;
            foxtra = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 34;
            entity = verify[entity];
            tangon = undefined;
            entity = foxtra.bind(tangon)(entity);
            michal = entity.RestrictedGuildIds;
            entity = michal.useSetting;
            zuuluu = entity.bind(michal)();
            michal = zuuluu.includes;
            entity = golfie.id;
            oscard = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot18;
            entity = 16;
            entity = verify[entity];
            entity = foxtra.bind(tangon)(entity);
            michal = entity.ActionSheetSwitchRow;
            entity = {};
            romeon = 17;
            offset = verify[romeon];
            offset = foxtra.bind(tangon)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = verify[romeon];
            verify = foxtra.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.KXNTgY;
            verify = offset.bind(yankee)(verify);
            entity['label'] = verify;
            offset = golfie.features;
            verify = offset.has;
            golfie = _closure1_slot13;
            golfie = golfie.HUB;
            golfie = verify.bind(offset)(golfie);
            yankee = _closure1_slot0;
            option = _closure1_slot2;
            verify = option[romeon];
            verify = yankee.bind(tangon)(verify);
            offset = verify.intl;
            verify = offset.string;
            option = option[romeon];
            option = yankee.bind(tangon)(option);
            option = option.t;
            if(golfie) { _fun00006_ip = 232; continue _fun00005 }
 217:
            golfie = option.jMFSQU;
            golfie = verify.bind(offset)(golfie);
            _fun00006_ip = 245; continue _fun00005;
 232:
            option = option.2YwzGh;
            golfie = verify.bind(offset)(option);
 245:
            entity['subLabel'] = golfie;
            oscard = !oscard;
            entity['value'] = oscard;
            report = function(argFoo) { // Original name: onValueChange
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    entity = 35;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = tangon.getSanitizedRestrictedGuilds;
                    oscard = zuuluu.bind(tangon)();
                    zuuluu = argFoo;
                    if(zuuluu) { _fun00008_ip = 65; continue _fun00007 }
 41:
                    tangon = oscard.add;
                    zuuluu = _closure2_slot0;
                    zuuluu = zuuluu.id;
                    zuuluu = tangon.bind(oscard)(zuuluu);
                    _fun00008_ip = 87; continue _fun00007;
 65:
                    tangon = oscard.delete;
                    zuuluu = _closure2_slot0;
                    zuuluu = zuuluu.id;
                    zuuluu = tangon.bind(oscard)(zuuluu);
 87:
                    zuuluu = _closure1_slot0;
                    tangon = _closure1_slot2;
                    michal = 34;
                    michal = tangon[michal];
                    michal = zuuluu.bind(entity)(michal);
                    tangon = michal.RestrictedGuildIds;
                    zuuluu = tangon.updateSetting;
                    michal = global;
                    report = michal.Array;
                    michal = report.from;
                    michal = michal.bind(report)(oscard);
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                }
            };
            entity['onValueChange'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot23 = oscard;
    report = function(argFoo) { // Original name: NotificationAction
        entity = argFoo;
        entity = entity.guild;
        var _closure2_slot0 = entity;
        tangon = _closure1_slot18;
        verify = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 16;
        entity = offset[entity];
        zuuluu = undefined;
        entity = verify.bind(zuuluu)(entity);
        michal = entity.ActionSheetRow;
        entity = {};
        oscard = 17;
        golfie = offset[oscard];
        golfie = verify.bind(zuuluu)(golfie);
        option = golfie.intl;
        golfie = option.string;
        oscard = offset[oscard];
        oscard = verify.bind(zuuluu)(oscard);
        oscard = oscard.t;
        oscard = oscard.HcoRu7;
        oscard = golfie.bind(option)(oscard);
        entity['label'] = oscard;
        report = function() { // Original name: onPress
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            entity = 23;
            michal = tangon[entity];
            entity = undefined;
            report = zuuluu.bind(entity)(michal);
            michal = report.hideActionSheet;
            michal = michal.bind(report)();
            michal = 36;
            michal = tangon[michal];
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.open;
            michal = _closure2_slot0;
            michal = michal.id;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity['onPress'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    var _closure1_slot24 = report;
    tangon = function(argFoo) { // Original name: handleLeaveServer
        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
            backup = argFoo;
            var _closure2_slot0 = backup;
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            entity = 23;
            michal = tangon[entity];
            entity = undefined;
            golfie = zuuluu.bind(entity)(michal);
            michal = golfie.hideActionSheet;
            michal = michal.bind(golfie)();
            michal = 47;
            michal = tangon[michal];
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.show;
            michal = {};
            verify = backup.features;
            option = verify.has;
            golfie = _closure1_slot13;
            golfie = golfie.HUB;
            golfie = option.bind(verify)(golfie);
            romeon = _closure1_slot0;
            verify = _closure1_slot2;
            option = 17;
            offset = verify[option];
            offset = romeon.bind(entity)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = verify[option];
            verify = romeon.bind(entity)(verify);
            verify = verify.t;
            if(golfie) { _fun00010_ip = 150; continue _fun00009 }
 137:
            golfie = verify.J2TBi4;
            golfie = offset.bind(yankee)(golfie);
            _fun00010_ip = 161; continue _fun00009;
 150:
            verify = verify.Dv8gFR;
            golfie = offset.bind(yankee)(verify);
 161:
            michal['title'] = golfie;
            yankee = _closure1_slot0;
            golfie = _closure1_slot2;
            verify = golfie[option];
            verify = yankee.bind(entity)(verify);
            foxtra = verify.intl;
            romeon = foxtra.formatToPlainString;
            verify = golfie[option];
            verify = yankee.bind(entity)(verify);
            verify = verify.t;
            offset = verify.TB1og4;
            verify = {};
            backup = backup.name;
            verify['name'] = backup;
            verify = romeon.bind(foxtra)(offset, verify);
            michal['body'] = verify;
            verify = golfie[option];
            verify = yankee.bind(entity)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = golfie[option];
            verify = yankee.bind(entity)(verify);
            verify = verify.t;
            verify = verify.p89ACg;
            verify = offset.bind(romeon)(verify);
            michal['confirmText'] = verify;
            verify = golfie[option];
            verify = yankee.bind(entity)(verify);
            offset = verify.intl;
            verify = offset.string;
            option = golfie[option];
            option = yankee.bind(entity)(option);
            option = option.t;
            option = option.gm1Ven;
            option = verify.bind(offset)(option);
            michal['cancelText'] = option;
            oscard = function() { // Original name: onConfirm
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 48;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.leaveGuild;
                entity = _closure2_slot0;
                entity = entity.id;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            michal['onConfirm'] = oscard;
            oscard = _closure1_slot1;
            report = 49;
            report = golfie[report];
            report = oscard.bind(entity)(report);
            report = report.Colors;
            report = report.RED;
            michal['confirmColor'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        }
    };
    var _closure1_slot25 = tangon;
    golfie = 62;
    golfie = verify[golfie];
    verify = option.bind(entity)(golfie);
    option = verify.fileFinishedImporting;
    golfie = 'modules/guild_profile/native/components/GuildProfileActions.tsx';
    golfie = option.bind(verify)(golfie);
    zuuluu['RestrictedGuildPrivacyOption'] = oscard;
    zuuluu['NotificationAction'] = report;
    report = function(argFoo) {
        _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
            entity = argFoo;
            offset = entity.guild;
            var _closure2_slot0 = offset;
            echoed = _closure1_slot0;
            kiloes = _closure1_slot2;
            entity = 15;
            michal = kiloes[entity];
            tangon = undefined;
            option = echoed.bind(tangon)(michal);
            oscard = option.useStateFromStores;
            michal = _closure1_slot7;
            report = new Array(1);
            report[0] = michal;
            zuuluu = new Array(1);
            zuuluu[0] = offset;
            michal = function() {
                zuuluu = _closure1_slot7;
                michal = zuuluu.getGuildHasUnreadIgnoreMuted;
                entity = _closure2_slot0;
                entity = entity.id;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            yankee = oscard.bind(option)(report, michal, zuuluu);
            michal = 37;
            michal = kiloes[michal];
            report = echoed.bind(tangon)(michal);
            zuuluu = report.useShouldUseNewNotificationSystem;
            michal = 'GuildUnreadAction';
            oscard = zuuluu.bind(report)(michal);
            option = _closure1_slot3;
            report = option.useCallback;
            michal = offset.id;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                tangon = _closure1_slot1;
                option = _closure1_slot2;
                entity = 36;
                zuuluu = option[entity];
                entity = undefined;
                oscard = tangon.bind(entity)(zuuluu);
                report = oscard.updateGuildNotificationSettings;
                zuuluu = _closure2_slot0;
                tangon = zuuluu.id;
                zuuluu = {};
                golfie = false;
                zuuluu['muted'] = golfie;
                golfie = _closure1_slot0;
                michal = 38;
                michal = option[michal];
                michal = golfie.bind(entity)(michal);
                michal = michal.NotificationLabels;
                michal = michal.Unmuted;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            michal = report.bind(option)(michal, zuuluu);
            var _closure2_slot1 = michal;
            entity = kiloes[entity];
            report = echoed.bind(tangon)(entity);
            zuuluu = report.useStateFromStores;
            entity = _closure1_slot10;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot10;
                michal = zuuluu.isMuted;
                entity = _closure2_slot0;
                entity = entity.id;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            foxtra = zuuluu.bind(report)(michal, entity);
            var _closure2_slot2 = foxtra;
            zuuluu = _closure1_slot19;
            backup = 16;
            entity = kiloes[backup];
            entity = echoed.bind(tangon)(entity);
            entity = entity.ActionSheetRow;
            michal = entity.Group;
            entity = {};
            report = false;
            entity['hasIcons'] = report;
            verify = _closure1_slot18;
            report = kiloes[backup];
            report = echoed.bind(tangon)(report);
            option = report.ActionSheetRow;
            report = {};
            result = 17;
            sizing = kiloes[result];
            sizing = echoed.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = kiloes[result];
            kiloes = echoed.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.e6RscX;
            kiloes = sizing.bind(output)(kiloes);
            report['label'] = kiloes;
            kiloes = function() { // Original name: onPress
                tangon = _closure1_slot1;
                report = _closure1_slot2;
                entity = 23;
                zuuluu = report[entity];
                entity = undefined;
                oscard = tangon.bind(entity)(zuuluu);
                zuuluu = oscard.hideActionSheet;
                zuuluu = zuuluu.bind(oscard)();
                zuuluu = 39;
                zuuluu = report[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = _closure2_slot0;
                report = zuuluu.id;
                zuuluu = new Array(1);
                zuuluu[0] = report;
                michal = _closure1_slot15;
                michal = michal.GUILD_POPOUT;
                michal = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            report['onPress'] = kiloes;
            yankee = !yankee;
            report['disabled'] = yankee;
            option = verify.bind(tangon)(option, report);
            report = new Array(3);
            report[0] = option;
            if(!oscard) { _fun00012_ip = 449; continue _fun00011 }
 331:
            yankee = _closure1_slot18;
            verify = _closure1_slot0;
            option = _closure1_slot2;
            option = option[backup];
            option = verify.bind(tangon)(option);
            verify = option.ActionSheetRow;
            option = {};
            output = _closure1_slot0;
            backup = _closure1_slot2;
            kiloes = backup[result];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = backup[result];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            if(foxtra) { _fun00012_ip = 417; continue _fun00011 }
 404:
            foxtra = backup.vRzp7O;
            foxtra = kiloes.bind(sizing)(foxtra);
            _fun00012_ip = 428; continue _fun00011;
 417:
            backup = backup.De0BTE;
            foxtra = kiloes.bind(sizing)(backup);
 428:
            option['label'] = foxtra;
            romeon = function() { // Original name: onPress
                _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                    michal = _closure2_slot2;
                    if(michal) { _fun00014_ip = 150; continue _fun00013 }
 13:
                    report = _closure1_slot1;
                    michal = _closure1_slot2;
                    tangon = 23;
                    oscard = michal[tangon];
                    golfie = undefined;
                    option = report.bind(golfie)(oscard);
                    oscard = option.hideActionSheet;
                    oscard = oscard.bind(option)();
                    tangon = michal[tangon];
                    oscard = report.bind(golfie)(tangon);
                    report = oscard.openLazy;
                    tangon = _closure1_slot0;
                    zuuluu = 26;
                    zuuluu = michal[zuuluu];
                    tangon = tangon.bind(golfie)(zuuluu);
                    zuuluu = 40;
                    zuuluu = michal[zuuluu];
                    michal = michal.paths;
                    tangon = tangon.bind(golfie)(zuuluu, michal);
                    golfie = _closure2_slot0;
                    option = golfie.id;
                    michal = global;
                    michal = michal.HermesInternal;
                    zuuluu = michal.concat;
                    michal = 'muteSettings';
                    zuuluu = zuuluu.bind(michal)(option);
                    michal = {};
                    golfie = golfie.id;
                    michal['guildId'] = golfie;
                    michal = report.bind(oscard)(tangon, zuuluu, michal);
                    _fun00014_ip = 160; continue _fun00013;
 150:
                    michal = _closure2_slot1;
                    entity = undefined;
                    entity = michal.bind(entity)();
 160:
                    entity = undefined;
                    return entity;
                }
            };
            option['onPress'] = romeon;
            oscard = yankee.bind(tangon)(verify, option);
 449:
            report[1] = oscard;
            verify = offset.features;
            option = verify.has;
            oscard = _closure1_slot13;
            oscard = oscard.COMMUNITY;
            option = option.bind(verify)(oscard);
            oscard = null;
            if(!option) { _fun00012_ip = 504; continue _fun00011 }
 484:
            verify = _closure1_slot18;
            option = _closure1_slot22;
            golfie = {};
            golfie['guild'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 504:
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['GuildUnreadAction'] = report;
    report = function(argFoo) { // Original name: GuildProfilePrimaryActions
        _fun00015: for(var _fun00016_ip = 0; ; ) switch(_fun00016_ip) {
 0:
            entity = argFoo;
            entity = entity.guild;
            var _closure2_slot0 = entity;
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            zuuluu = 41;
            zuuluu = option[zuuluu];
            report = undefined;
            tangon = golfie.bind(report)(zuuluu);
            zuuluu = tangon.useGuildProfilePermissions;
            zuuluu = zuuluu.bind(tangon)(entity);
            tangon = zuuluu.canManageChannels;
            verify = _closure1_slot1;
            zuuluu = 42;
            zuuluu = option[zuuluu];
            zuuluu = verify.bind(report)(zuuluu);
            entity = entity.id;
            zuuluu = zuuluu.bind(report)(entity);
            entity = 15;
            entity = option[entity];
            verify = golfie.bind(report)(entity);
            option = verify.useStateFromStores;
            entity = _closure1_slot8;
            golfie = new Array(1);
            golfie[0] = entity;
            entity = function() {
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                michal = 43;
                zuuluu = zuuluu[michal];
                michal = undefined;
                tangon = tangon.bind(michal)(zuuluu);
                zuuluu = tangon.isVerifiedRolesChannelVisible;
                michal = _closure2_slot0;
                oscard = _closure1_slot8;
                report = oscard.getRoles;
                entity = michal.id;
                entity = report.bind(oscard)(entity);
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            entity = option.bind(verify)(golfie, entity);
            option = new Array(0);
            if(!tangon) { _fun00016_ip = 340; continue _fun00015 }
 134:
            verify = option.push;
            romeon = _closure1_slot18;
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            tangon = 16;
            golfie = kiloes[tangon];
            golfie = backup.bind(report)(golfie);
            offset = golfie.ActionSheetRow;
            golfie = {};
            yankee = 17;
            foxtra = kiloes[yankee];
            foxtra = backup.bind(report)(foxtra);
            output = foxtra.intl;
            sizing = output.string;
            foxtra = kiloes[yankee];
            foxtra = backup.bind(report)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.fUYU+v;
            foxtra = sizing.bind(output)(foxtra);
            golfie['label'] = foxtra;
            foxtra = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 23;
                michal = tangon[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                michal = report.hideActionSheet;
                michal = michal.bind(report)();
                michal = 44;
                michal = tangon[michal];
                report = zuuluu.bind(entity)(michal);
                tangon = report.open;
                michal = _closure2_slot0;
                option = michal.id;
                offset = report;
                verify = null;
                golfie = null;
                oscard = null;
                michal = offset[tangon](verify, option, golfie, oscard, report);
                return entity;
            };
            golfie['onPress'] = foxtra;
            golfie = romeon.bind(report)(offset, golfie);
            golfie = verify.bind(option)(golfie);
            golfie = option.push;
            offset = _closure1_slot18;
            tangon = kiloes[tangon];
            tangon = backup.bind(report)(tangon);
            verify = tangon.ActionSheetRow;
            tangon = {};
            romeon = kiloes[yankee];
            romeon = backup.bind(report)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            yankee = kiloes[yankee];
            yankee = backup.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee.ISN+ND;
            yankee = romeon.bind(foxtra)(yankee);
            tangon['label'] = yankee;
            yankee = function() { // Original name: onPress
                tangon = _closure1_slot1;
                report = _closure1_slot2;
                entity = 23;
                zuuluu = report[entity];
                entity = undefined;
                oscard = tangon.bind(entity)(zuuluu);
                zuuluu = oscard.hideActionSheet;
                zuuluu = zuuluu.bind(oscard)();
                zuuluu = 44;
                zuuluu = report[zuuluu];
                oscard = tangon.bind(entity)(zuuluu);
                report = oscard.open;
                michal = _closure1_slot12;
                offset = michal.GUILD_CATEGORY;
                michal = _closure2_slot0;
                verify = michal.id;
                yankee = oscard;
                option = null;
                golfie = null;
                michal = yankee[report](offset, verify, option, golfie, oscard);
                return entity;
            };
            tangon['onPress'] = yankee;
            tangon = offset.bind(report)(verify, tangon);
            tangon = golfie.bind(option)(tangon);
 340:
            if(!zuuluu) { _fun00016_ip = 453; continue _fun00015 }
 343:
            tangon = option.push;
            verify = _closure1_slot18;
            foxtra = _closure1_slot0;
            backup = _closure1_slot2;
            zuuluu = 16;
            zuuluu = backup[zuuluu];
            zuuluu = foxtra.bind(report)(zuuluu);
            golfie = zuuluu.ActionSheetRow;
            zuuluu = {};
            offset = 17;
            yankee = backup[offset];
            yankee = foxtra.bind(report)(yankee);
            romeon = yankee.intl;
            yankee = romeon.string;
            offset = backup[offset];
            offset = foxtra.bind(report)(offset);
            offset = offset.t;
            offset = offset.60lJ0N;
            offset = yankee.bind(romeon)(offset);
            zuuluu['label'] = offset;
            offset = function() { // Original name: onPress
                report = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 23;
                zuuluu = tangon[entity];
                entity = undefined;
                report = report.bind(entity)(zuuluu);
                zuuluu = report.hideActionSheet;
                zuuluu = zuuluu.bind(report)();
                zuuluu = _closure1_slot0;
                michal = 45;
                michal = tangon[michal];
                report = zuuluu.bind(entity)(michal);
                tangon = report.openCreateOrEditGuildEventModal;
                zuuluu = _closure2_slot0;
                michal = {};
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            zuuluu['onPress'] = offset;
            zuuluu = verify.bind(report)(golfie, zuuluu);
            zuuluu = tangon.bind(option)(zuuluu);
 453:
            if(!entity) { _fun00016_ip = 566; continue _fun00015 }
 456:
            zuuluu = option.push;
            golfie = _closure1_slot18;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            entity = 16;
            entity = foxtra[entity];
            entity = romeon.bind(report)(entity);
            tangon = entity.ActionSheetRow;
            entity = {};
            verify = 17;
            offset = foxtra[verify];
            offset = romeon.bind(report)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = foxtra[verify];
            verify = romeon.bind(report)(verify);
            verify = verify.t;
            verify = verify.ghtnsr;
            verify = offset.bind(yankee)(verify);
            entity['label'] = verify;
            verify = function() { // Original name: onPress
                report = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 23;
                zuuluu = tangon[entity];
                entity = undefined;
                report = report.bind(entity)(zuuluu);
                zuuluu = report.hideActionSheet;
                zuuluu = zuuluu.bind(report)();
                zuuluu = _closure1_slot0;
                michal = 46;
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.openGuildRoleConnectionsModal;
                michal = {};
                report = _closure2_slot0;
                report = report.id;
                michal['guildId'] = report;
                report = function() { // Original name: onClose
                    entity = undefined;
                    return entity;
                };
                michal['onClose'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity['onPress'] = verify;
            entity = golfie.bind(report)(tangon, entity);
            entity = zuuluu.bind(option)(entity);
 566:
            tangon = option.length;
            zuuluu = 0;
            entity = null;
            if(!(zuuluu !== tangon)) { _fun00016_ip = 651; continue _fun00015 }
 579:
            tangon = _closure1_slot18;
            zuuluu = _closure1_slot0;
            golfie = _closure1_slot2;
            michal = 16;
            michal = golfie[michal];
            michal = zuuluu.bind(report)(michal);
            michal = michal.ActionSheetRow;
            zuuluu = michal.Group;
            michal = {};
            golfie = false;
            michal['hasIcons'] = golfie;
            golfie = option.map;
            oscard = function(argFoo, argBar) {
                report = _closure1_slot18;
                entity = _closure1_slot3;
                tangon = entity.Fragment;
                zuuluu = {};
                entity = argFoo;
                zuuluu['children'] = entity;
                michal = undefined;
                entity = argBar;
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            };
            oscard = golfie.bind(option)(oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 651:
            return entity;
        }
    };
    zuuluu['GuildProfilePrimaryActions'] = report;
    zuuluu['handleLeaveServer'] = tangon;
    tangon = function(argFoo) {
        _fun00017: for(var _fun00018_ip = 0; ; ) switch(_fun00018_ip) {
 0:
            entity = argFoo;
            offset = entity.guild;
            var _closure2_slot0 = offset;
            zuuluu = _closure1_slot11;
            entity = zuuluu.getCurrentUser;
            foxtra = entity.bind(zuuluu)();
            zuuluu = _closure1_slot1;
            verify = _closure1_slot2;
            entity = 50;
            entity = verify[entity];
            report = undefined;
            golfie = zuuluu.bind(report)(entity);
            entity = null;
            tangon = entity != foxtra;
            zuuluu = 'GuildProfileDirectoryActions: user cannot be undefined';
            zuuluu = golfie.bind(report)(tangon, zuuluu);
            option = new Array(0);
            zuuluu = _closure1_slot6;
            zuuluu = zuuluu.bind(report)(offset, foxtra);
            golfie = option.push;
            romeon = _closure1_slot18;
            yankee = _closure1_slot24;
            tangon = {};
            tangon['guild'] = offset;
            tangon = romeon.bind(report)(yankee, tangon);
            tangon = golfie.bind(option)(tangon);
            golfie = option.push;
            romeon = _closure1_slot18;
            yankee = _closure1_slot26;
            tangon = {};
            tangon['guild'] = offset;
            tangon['user'] = foxtra;
            tangon = romeon.bind(report)(yankee, tangon);
            tangon = golfie.bind(option)(tangon);
            golfie = option.push;
            romeon = _closure1_slot18;
            yankee = _closure1_slot23;
            tangon = {};
            tangon['guild'] = offset;
            tangon = romeon.bind(report)(yankee, tangon);
            tangon = golfie.bind(option)(tangon);
            golfie = _closure1_slot0;
            tangon = 51;
            tangon = verify[tangon];
            verify = golfie.bind(report)(tangon);
            golfie = verify.useMessageRequestPrivacyOption;
            tangon = {};
            tangon['guild'] = offset;
            golfie = golfie.bind(verify)(tangon);
            if(!(entity != golfie)) { _fun00018_ip = 225; continue _fun00017 }
 215:
            tangon = option.push;
            tangon = tangon.bind(option)(golfie);
 225:
            if(zuuluu) { _fun00018_ip = 399; continue _fun00017 }
 231:
            tangon = option.push;
            verify = _closure1_slot18;
            golfie = _closure1_slot0;
            yankee = _closure1_slot2;
            zuuluu = 16;
            zuuluu = yankee[zuuluu];
            zuuluu = golfie.bind(report)(zuuluu);
            golfie = zuuluu.ActionSheetRow;
            zuuluu = {};
            romeon = offset.features;
            yankee = romeon.has;
            offset = _closure1_slot13;
            offset = offset.HUB;
            offset = yankee.bind(romeon)(offset);
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            yankee = 17;
            romeon = kiloes[yankee];
            romeon = backup.bind(report)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            yankee = kiloes[yankee];
            yankee = backup.bind(report)(yankee);
            yankee = yankee.t;
            if(offset) { _fun00018_ip = 354; continue _fun00017 }
 341:
            offset = yankee.J2TBi4;
            offset = romeon.bind(foxtra)(offset);
            _fun00018_ip = 365; continue _fun00017;
 354:
            yankee = yankee.Dv8gFR;
            offset = romeon.bind(foxtra)(yankee);
 365:
            zuuluu['label'] = offset;
            offset = 'danger';
            zuuluu['variant'] = offset;
            offset = function() { // Original name: onPress
                zuuluu = _closure1_slot25;
                michal = _closure2_slot0;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            zuuluu['onPress'] = offset;
            zuuluu = verify.bind(report)(golfie, zuuluu);
            zuuluu = tangon.bind(option)(zuuluu);
 399:
            tangon = option.length;
            zuuluu = 0;
            entity = null;
            if(!(zuuluu !== tangon)) { _fun00018_ip = 484; continue _fun00017 }
 412:
            tangon = _closure1_slot18;
            zuuluu = _closure1_slot0;
            golfie = _closure1_slot2;
            michal = 16;
            michal = golfie[michal];
            michal = zuuluu.bind(report)(michal);
            michal = michal.ActionSheetRow;
            zuuluu = michal.Group;
            michal = {};
            golfie = false;
            michal['hasIcons'] = golfie;
            golfie = option.map;
            oscard = function(argFoo, argBar) {
                report = _closure1_slot18;
                entity = _closure1_slot3;
                tangon = entity.Fragment;
                zuuluu = {};
                entity = argFoo;
                zuuluu['children'] = entity;
                michal = undefined;
                entity = argBar;
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            };
            oscard = golfie.bind(option)(oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 484:
            return entity;
        }
    };
    zuuluu['GuildProfileDirectoryActions'] = tangon;
    tangon = function(argFoo) {
        _fun00019: for(var _fun00020_ip = 0; ; ) switch(_fun00020_ip) {
 0:
            entity = argFoo;
            yankee = entity.guild;
            var _closure2_slot0 = yankee;
            zuuluu = _closure1_slot11;
            entity = zuuluu.getCurrentUser;
            kiloes = entity.bind(zuuluu)();
            entity = _closure1_slot6;
            report = undefined;
            zuuluu = entity.bind(report)(yankee, kiloes);
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 52;
            entity = offset[entity];
            tangon = verify.bind(report)(entity);
            entity = tangon.useCanReportRaid;
            golfie = entity.bind(tangon)(yankee);
            entity = 53;
            entity = offset[entity];
            option = verify.bind(report)(entity);
            tangon = option.useGuildIncidentsState;
            entity = yankee.id;
            entity = tangon.bind(option)(entity);
            tangon = entity.shouldShowIncidentActions;
            foxtra = entity.isUnderLockdown;
            option = new Array(0);
            entity = 54;
            entity = offset[entity];
            offset = verify.bind(report)(entity);
            verify = offset.useOptInEnabledForGuild;
            entity = yankee.id;
            backup = verify.bind(offset)(entity);
            verify = option.push;
            romeon = _closure1_slot18;
            offset = _closure1_slot26;
            entity = {};
            entity['guild'] = yankee;
            entity['user'] = kiloes;
            entity = romeon.bind(report)(offset, entity);
            entity = verify.bind(option)(entity);
            offset = yankee.features;
            verify = offset.has;
            entity = _closure1_slot13;
            entity = entity.COMMUNITY;
            entity = verify.bind(offset)(entity);
            if(!entity) { _fun00020_ip = 328; continue _fun00019 }
 208:
            verify = option.push;
            romeon = _closure1_slot18;
            result = _closure1_slot0;
            echoed = _closure1_slot2;
            entity = 16;
            entity = echoed[entity];
            entity = result.bind(report)(entity);
            offset = entity.ActionSheetSwitchRow;
            entity = {};
            kiloes = 17;
            sizing = echoed[kiloes];
            sizing = result.bind(report)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = echoed[kiloes];
            kiloes = result.bind(report)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.FB2ZZW;
            kiloes = sizing.bind(output)(kiloes);
            entity['label'] = kiloes;
            backup = !backup;
            entity['value'] = backup;
            backup = function() { // Original name: onValueChange
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 55;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.toggleShowAllChannels;
                entity = _closure2_slot0;
                entity = entity.id;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity['onValueChange'] = backup;
            entity = romeon.bind(report)(offset, entity);
            entity = verify.bind(option)(entity);
 328:
            verify = option.push;
            romeon = _closure1_slot18;
            offset = _closure1_slot21;
            entity = {};
            entity['guild'] = yankee;
            entity = romeon.bind(report)(offset, entity);
            entity = verify.bind(option)(entity);
            verify = option.push;
            romeon = _closure1_slot18;
            offset = _closure1_slot23;
            entity = {};
            entity['guild'] = yankee;
            entity = romeon.bind(report)(offset, entity);
            entity = verify.bind(option)(entity);
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 51;
            entity = offset[entity];
            offset = verify.bind(report)(entity);
            verify = offset.useMessageRequestPrivacyOption;
            entity = {};
            entity['guild'] = yankee;
            offset = verify.bind(offset)(entity);
            entity = null;
            if(!(entity != offset)) { _fun00020_ip = 441; continue _fun00019 }
 431:
            verify = option.push;
            verify = verify.bind(option)(offset);
 441:
            if(!golfie) { _fun00020_ip = 556; continue _fun00019 }
 444:
            verify = option.push;
            romeon = _closure1_slot18;
            output = _closure1_slot0;
            result = _closure1_slot2;
            golfie = 16;
            golfie = result[golfie];
            golfie = output.bind(report)(golfie);
            offset = golfie.ActionSheetRow;
            golfie = {};
            backup = 17;
            kiloes = result[backup];
            kiloes = output.bind(report)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = result[backup];
            backup = output.bind(report)(backup);
            backup = backup.t;
            backup = backup.cswId3;
            backup = kiloes.bind(sizing)(backup);
            golfie['label'] = backup;
            backup = function() { // Original name: onPress
                report = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 23;
                zuuluu = tangon[entity];
                entity = undefined;
                report = report.bind(entity)(zuuluu);
                zuuluu = report.hideActionSheet;
                zuuluu = zuuluu.bind(report)();
                zuuluu = _closure1_slot0;
                michal = 56;
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.openReportRaidModal;
                michal = _closure2_slot0;
                michal = michal.id;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            golfie['onPress'] = backup;
            golfie = romeon.bind(report)(offset, golfie);
            golfie = verify.bind(option)(golfie);
 556:
            offset = option.push;
            backup = _closure1_slot18;
            echoed = _closure1_slot0;
            kiloes = _closure1_slot2;
            golfie = 16;
            verify = kiloes[golfie];
            verify = echoed.bind(report)(verify);
            romeon = verify.ActionSheetRow;
            verify = {};
            sizing = 17;
            output = kiloes[sizing];
            output = echoed.bind(report)(output);
            result = output.intl;
            output = result.string;
            kiloes = kiloes[sizing];
            kiloes = echoed.bind(report)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.Aen9en;
            kiloes = output.bind(result)(kiloes);
            verify['label'] = kiloes;
            kiloes = function() { // Original name: onPress
                report = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 23;
                zuuluu = tangon[entity];
                entity = undefined;
                report = report.bind(entity)(zuuluu);
                zuuluu = report.hideActionSheet;
                zuuluu = zuuluu.bind(report)();
                zuuluu = _closure1_slot0;
                michal = 57;
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.showReportModalForGuild;
                michal = _closure2_slot0;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            verify['onPress'] = kiloes;
            verify = backup.bind(report)(romeon, verify);
            verify = offset.bind(option)(verify);
            if(!tangon) { _fun00020_ip = 812; continue _fun00019 }
 672:
            verify = option.push;
            romeon = _closure1_slot18;
            offset = _closure1_slot0;
            tangon = _closure1_slot2;
            tangon = tangon[golfie];
            tangon = offset.bind(report)(tangon);
            offset = tangon.ActionSheetRow;
            tangon = {};
            result = _closure1_slot0;
            backup = _closure1_slot2;
            kiloes = backup[sizing];
            kiloes = result.bind(report)(kiloes);
            output = kiloes.intl;
            kiloes = output.string;
            backup = backup[sizing];
            backup = result.bind(report)(backup);
            backup = backup.t;
            if(foxtra) { _fun00020_ip = 765; continue _fun00019 }
 750:
            foxtra = backup.EPlEdn;
            foxtra = kiloes.bind(output)(foxtra);
            _fun00020_ip = 778; continue _fun00019;
 765:
            backup = backup.+tSVi4;
            foxtra = kiloes.bind(output)(backup);
 778:
            tangon['label'] = foxtra;
            foxtra = 'danger';
            tangon['variant'] = foxtra;
            foxtra = function() { // Original name: onPress
                report = _closure1_slot1;
                zuuluu = _closure1_slot2;
                tangon = 23;
                michal = zuuluu[tangon];
                entity = undefined;
                golfie = report.bind(entity)(michal);
                michal = golfie.hideActionSheet;
                michal = michal.bind(golfie)();
                michal = {};
                golfie = _closure1_slot0;
                oscard = 58;
                oscard = zuuluu[oscard];
                oscard = golfie.bind(entity)(oscard);
                oscard = oscard.GuildIncidentActionSources;
                oscard = oscard.GUILD_PROFILE;
                michal['source'] = oscard;
                tangon = zuuluu[tangon];
                oscard = report.bind(entity)(tangon);
                report = oscard.openLazy;
                tangon = 26;
                tangon = zuuluu[tangon];
                golfie = golfie.bind(entity)(tangon);
                tangon = 59;
                tangon = zuuluu[tangon];
                zuuluu = zuuluu.paths;
                tangon = golfie.bind(entity)(tangon, zuuluu);
                zuuluu = {};
                golfie = _closure2_slot0;
                zuuluu['guild'] = golfie;
                zuuluu['analyticsData'] = michal;
                michal = 'GuildIncidentActionsActionSheet';
                michal = report.bind(oscard)(tangon, michal, zuuluu);
                return entity;
            };
            tangon['onPress'] = foxtra;
            tangon = romeon.bind(report)(offset, tangon);
            tangon = verify.bind(option)(tangon);
 812:
            if(zuuluu) { _fun00020_ip = 980; continue _fun00019 }
 818:
            tangon = option.push;
            offset = _closure1_slot18;
            verify = _closure1_slot0;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu[golfie];
            zuuluu = verify.bind(report)(zuuluu);
            verify = zuuluu.ActionSheetRow;
            zuuluu = {};
            foxtra = yankee.features;
            romeon = foxtra.has;
            yankee = _closure1_slot13;
            yankee = yankee.HUB;
            yankee = romeon.bind(foxtra)(yankee);
            kiloes = _closure1_slot0;
            romeon = _closure1_slot2;
            foxtra = romeon[sizing];
            foxtra = kiloes.bind(report)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            romeon = romeon[sizing];
            romeon = kiloes.bind(report)(romeon);
            romeon = romeon.t;
            if(yankee) { _fun00020_ip = 935; continue _fun00019 }
 922:
            yankee = romeon.J2TBi4;
            yankee = foxtra.bind(backup)(yankee);
            _fun00020_ip = 946; continue _fun00019;
 935:
            romeon = romeon.Dv8gFR;
            yankee = foxtra.bind(backup)(romeon);
 946:
            zuuluu['label'] = yankee;
            yankee = 'danger';
            zuuluu['variant'] = yankee;
            yankee = function() { // Original name: onPress
                zuuluu = _closure1_slot25;
                michal = _closure2_slot0;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            zuuluu['onPress'] = yankee;
            zuuluu = offset.bind(report)(verify, zuuluu);
            zuuluu = tangon.bind(option)(zuuluu);
 980:
            tangon = option.length;
            zuuluu = 0;
            entity = null;
            if(!(zuuluu !== tangon)) { _fun00020_ip = 1062; continue _fun00019 }
 993:
            tangon = _closure1_slot18;
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            michal = michal[golfie];
            michal = zuuluu.bind(report)(michal);
            michal = michal.ActionSheetRow;
            zuuluu = michal.Group;
            michal = {};
            golfie = false;
            michal['hasIcons'] = golfie;
            golfie = option.map;
            oscard = function(argFoo, argBar) {
                report = _closure1_slot18;
                entity = _closure1_slot3;
                tangon = entity.Fragment;
                zuuluu = {};
                entity = argFoo;
                zuuluu['children'] = entity;
                michal = undefined;
                entity = argBar;
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            };
            oscard = golfie.bind(option)(oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 1062:
            return entity;
        }
    };
    zuuluu['GuildProfileSecondaryActions'] = tangon;
    michal = function(argFoo) {
        _fun00021: for(var _fun00022_ip = 0; ; ) switch(_fun00022_ip) {
 0:
            entity = argFoo;
            entity = entity.guild;
            var _closure2_slot0 = entity;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 34;
            entity = zuuluu[entity];
            report = undefined;
            entity = michal.bind(report)(entity);
            michal = entity.DeveloperMode;
            entity = michal.useSetting;
            michal = entity.bind(michal)();
            entity = null;
            if(!michal) { _fun00022_ip = 257; continue _fun00021 }
 63:
            tangon = _closure1_slot18;
            foxtra = _closure1_slot0;
            backup = _closure1_slot2;
            oscard = 16;
            michal = backup[oscard];
            michal = foxtra.bind(report)(michal);
            michal = michal.ActionSheetRow;
            zuuluu = michal.Group;
            michal = {};
            option = false;
            michal['hasIcons'] = option;
            offset = 17;
            option = backup[offset];
            option = foxtra.bind(report)(option);
            romeon = option.intl;
            yankee = romeon.string;
            option = backup[offset];
            option = foxtra.bind(report)(option);
            option = option.t;
            option = option.ObIb1d;
            option = yankee.bind(romeon)(option);
            michal['title'] = option;
            option = _closure1_slot18;
            oscard = backup[oscard];
            oscard = foxtra.bind(report)(oscard);
            golfie = oscard.ActionSheetRow;
            oscard = {};
            yankee = backup[offset];
            yankee = foxtra.bind(report)(yankee);
            romeon = yankee.intl;
            yankee = romeon.string;
            offset = backup[offset];
            offset = foxtra.bind(report)(offset);
            offset = offset.t;
            offset = offset.94lLDw;
            offset = yankee.bind(romeon)(offset);
            oscard['label'] = offset;
            verify = function() { // Original name: onPress
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 60;
                michal = tangon[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                michal = report.presentIdCopied;
                michal = michal.bind(report)();
                michal = 61;
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.copy;
                michal = _closure2_slot0;
                michal = michal.id;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            oscard['onPress'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 257:
            return entity;
        }
    };
    zuuluu['GuildDeveloperOptionAction'] = michal;
    return entity;
})();