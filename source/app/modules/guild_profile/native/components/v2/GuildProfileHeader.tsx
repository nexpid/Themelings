// app/modules/guild_profile/native/components/v2/GuildProfileHeader.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    report = golfie[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(report);
    offset = 1;
    michal = golfie[offset];
    michal = oscard.bind(entity)(michal);
    michal = michal.View;
    var _closure1_slot3 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = foxtra.bind(entity)(michal);
    var _closure1_slot4 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = foxtra.bind(entity)(michal);
    var _closure1_slot5 = michal;
    michal = 4;
    report = golfie[michal];
    report = oscard.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot6 = report;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.jsxs;
    var _closure1_slot7 = michal;
    michal = 5;
    michal = golfie[michal];
    option = oscard.bind(entity)(michal);
    report = option.createStyles;
    michal = {};
    yankee = 'flex';
    verify = {'paddingHorizontal': 16, 'marginTop': 4294967264, 'display': 'flex', 'flexDirection': 'column', 'gap': 0};
    michal['header'] = verify;
    verify = {'width': 86, 'height': 86, 'borderRadius': 28.666666666666668, 'backgroundColor': null, 'display': 'flex', 'justifyContent': 'center', 'alignItems': 'center', 'overflow': 'hidden'};
    romeon = 6;
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_BASE_PRIMARY;
    verify['backgroundColor'] = backup;
    michal['avatarBackground'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'gap': 8};
    michal['members'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'gap': 4};
    michal['memberCount'] = verify;
    verify = {'width': 8, 'height': 8, 'borderRadius': 4};
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.STATUS_OFFLINE;
    verify['backgroundColor'] = backup;
    michal['dot'] = verify;
    verify = {'width': 8, 'height': 8, 'borderRadius': 4};
    romeon = golfie[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.STATUS_ONLINE;
    verify['backgroundColor'] = romeon;
    michal['dotOnline'] = verify;
    verify = {};
    verify['display'] = yankee;
    michal['established'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    michal['nameRow'] = verify;
    verify = {};
    verify['flexShrink'] = offset;
    michal['guildName'] = verify;
    verify = {'marginLeft': 8, 'height': 24, 'width': 24};
    michal['guildIcon'] = verify;
    michal = report.bind(option)(michal);
    var _closure1_slot8 = michal;
    report = 14;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/guild_profile/native/components/v2/GuildProfileHeader.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: GuildProfileHeader
        entity = argFoo;
        vacuum = entity.profile;
        romeon = entity.guildIconSource;
        entity = _closure1_slot8;
        tangon = undefined;
        verify = entity.bind(tangon)();
        yankee = _closure1_slot0;
        kiloes = _closure1_slot2;
        entity = 7;
        entity = kiloes[entity];
        oscard = yankee.bind(tangon)(entity);
        zuuluu = oscard.useStateFromStores;
        entity = _closure1_slot4;
        michal = new Array(1);
        michal[0] = entity;
        entity = function() {
            entity = _closure1_slot4;
            entity = entity.locale;
            return entity;
        };
        oscard = zuuluu.bind(oscard)(michal, entity);
        entity = 8;
        entity = kiloes[entity];
        zuuluu = yankee.bind(tangon)(entity);
        michal = zuuluu.getEstablishedDate;
        foxtra = _closure1_slot1;
        entity = 9;
        entity = kiloes[entity];
        option = foxtra.bind(tangon)(entity);
        golfie = option.extractTimestamp;
        entity = vacuum.id;
        entity = golfie.bind(option)(entity);
        backup = michal.bind(zuuluu)(entity, oscard);
        entity = _closure1_slot5;
        michal = entity.prototype;
        michal = Object.create(michal, {constructor: {value: entity}});
        record = michal;
        config = vacuum;
        entity = new record[entity](config, sequen);
        sizing = entity instanceof Object ? entity : michal;
        zuuluu = _closure1_slot7;
        michal = _closure1_slot3;
        entity = {};
        oscard = verify.header;
        entity['style'] = oscard;
        golfie = _closure1_slot6;
        report = {};
        oscard = verify.avatarBackground;
        report['style'] = oscard;
        offset = 10;
        oscard = kiloes[offset];
        option = foxtra.bind(tangon)(oscard);
        oscard = {};
        oscard['icon'] = romeon;
        offset = kiloes[offset];
        offset = yankee.bind(tangon)(offset);
        offset = offset.GuildIconSizes;
        offset = offset.XXLARGE;
        oscard['size'] = offset;
        offset = true;
        oscard['animate'] = offset;
        offset = vacuum.name;
        oscard['value'] = offset;
        offset = false;
        oscard['selected'] = offset;
        oscard = golfie.bind(tangon)(option, oscard);
        report['children'] = oscard;
        oscard = golfie.bind(tangon)(michal, report);
        report = new Array(4);
        report[0] = oscard;
        oscard = {};
        option = verify.nameRow;
        oscard['style'] = option;
        option = 11;
        offset = kiloes[option];
        offset = yankee.bind(tangon)(offset);
        romeon = offset.Text;
        offset = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/semibold', 'color': 'header-primary', 'lineClamp': 1};
        output = verify.guildName;
        offset['style'] = output;
        output = vacuum.name;
        offset['children'] = output;
        romeon = golfie.bind(tangon)(romeon, offset);
        offset = new Array(2);
        offset[0] = romeon;
        romeon = 12;
        romeon = kiloes[romeon];
        foxtra = foxtra.bind(tangon)(romeon);
        romeon = {};
        romeon['guild'] = sizing;
        sizing = verify.guildIcon;
        romeon['style'] = sizing;
        romeon = golfie.bind(tangon)(foxtra, romeon);
        offset[1] = romeon;
        oscard['children'] = offset;
        oscard = zuuluu.bind(tangon)(michal, oscard);
        report[1] = oscard;
        oscard = {};
        offset = verify.members;
        oscard['style'] = offset;
        romeon = {};
        offset = verify.memberCount;
        romeon['style'] = offset;
        offset = {};
        foxtra = verify.dot;
        offset['style'] = foxtra;
        offset = golfie.bind(tangon)(michal, offset);
        foxtra = new Array(2);
        foxtra[0] = offset;
        offset = kiloes[option];
        offset = yankee.bind(tangon)(offset);
        output = offset.Text;
        sizing = {'variant': 'text-md/medium', 'color': 'text-secondary'};
        offset = 13;
        result = kiloes[offset];
        result = yankee.bind(tangon)(result);
        source = result.intl;
        update = source.format;
        result = kiloes[offset];
        result = yankee.bind(tangon)(result);
        result = result.t;
        echoed = result.zRl6XV;
        result = {};
        ctrled = vacuum.memberCount;
        result['count'] = ctrled;
        result = update.bind(source)(echoed, result);
        sizing['children'] = result;
        sizing = golfie.bind(tangon)(output, sizing);
        foxtra[1] = sizing;
        romeon['children'] = foxtra;
        foxtra = zuuluu.bind(tangon)(michal, romeon);
        romeon = new Array(2);
        romeon[0] = foxtra;
        foxtra = {};
        sizing = verify.memberCount;
        foxtra['style'] = sizing;
        sizing = {};
        output = verify.dotOnline;
        sizing['style'] = output;
        output = golfie.bind(tangon)(michal, sizing);
        sizing = new Array(2);
        sizing[0] = output;
        output = kiloes[option];
        output = yankee.bind(tangon)(output);
        result = output.Text;
        output = {'variant': 'text-md/medium', 'color': 'text-secondary'};
        echoed = kiloes[offset];
        echoed = yankee.bind(tangon)(echoed);
        ctrled = echoed.intl;
        source = ctrled.format;
        echoed = kiloes[offset];
        echoed = yankee.bind(tangon)(echoed);
        echoed = echoed.t;
        update = echoed.LC+S+v;
        echoed = {};
        vacuum = vacuum.onlineCount;
        echoed['membersOnline'] = vacuum;
        echoed = source.bind(ctrled)(update, echoed);
        output['children'] = echoed;
        output = golfie.bind(tangon)(result, output);
        sizing[1] = output;
        foxtra['children'] = sizing;
        foxtra = zuuluu.bind(tangon)(michal, foxtra);
        romeon[1] = foxtra;
        oscard['children'] = romeon;
        oscard = zuuluu.bind(tangon)(michal, oscard);
        report[2] = oscard;
        oscard = {};
        verify = verify.established;
        oscard['style'] = verify;
        option = kiloes[option];
        option = yankee.bind(tangon)(option);
        verify = option.Text;
        option = {'variant': 'text-md/medium', 'color': 'text-secondary'};
        romeon = kiloes[offset];
        romeon = yankee.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.format;
        offset = kiloes[offset];
        offset = yankee.bind(tangon)(offset);
        offset = offset.t;
        yankee = offset.zb2Q5+;
        offset = {};
        offset['createdAtDate'] = backup;
        offset = romeon.bind(foxtra)(yankee, offset);
        option['children'] = offset;
        option = golfie.bind(tangon)(verify, option);
        oscard['children'] = option;
        oscard = golfie.bind(tangon)(michal, oscard);
        report[3] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    zuuluu['useStyles'] = michal;
    return entity;
})();