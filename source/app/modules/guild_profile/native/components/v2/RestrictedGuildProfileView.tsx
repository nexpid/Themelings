// app/modules/guild_profile/native/components/v2/RestrictedGuildProfileView.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_profile/native/components/v2/RestrictedGuildProfileView.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: RestrictedGuildProfileView
        backup = _closure1_slot0;
        kiloes = _closure1_slot2;
        option = 3;
        entity = kiloes[option];
        tangon = undefined;
        michal = backup.bind(tangon)(entity);
        entity = michal.useStyles;
        golfie = entity.bind(michal)();
        foxtra = _closure1_slot1;
        entity = 4;
        entity = kiloes[entity];
        entity = foxtra.bind(tangon)(entity);
        sizing = entity.bind(tangon)();
        entity = 5;
        entity = kiloes[entity];
        zuuluu = backup.bind(tangon)(entity);
        michal = zuuluu.useToken;
        romeon = 6;
        entity = kiloes[romeon];
        entity = foxtra.bind(tangon)(entity);
        entity = entity.colors;
        entity = entity.BG_BASE_TERTIARY;
        yankee = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot5;
        michal = _closure1_slot3;
        entity = {};
        oscard = golfie.container;
        entity['style'] = oscard;
        offset = _closure1_slot4;
        report = 7;
        report = kiloes[report];
        oscard = foxtra.bind(tangon)(report);
        report = {};
        verify = golfie.colorBanner;
        report['style'] = verify;
        verify = kiloes[option];
        verify = backup.bind(tangon)(verify);
        verify = verify.DiagonalGradient;
        verify = verify.START;
        report['start'] = verify;
        verify = kiloes[option];
        verify = backup.bind(tangon)(verify);
        verify = verify.DiagonalGradient;
        verify = verify.END;
        report['end'] = verify;
        option = kiloes[option];
        verify = backup.bind(tangon)(option);
        option = verify.getBackgroundForProfile;
        option = option.bind(verify)(sizing, yankee);
        report['colors'] = option;
        oscard = offset.bind(tangon)(oscard, report);
        report = new Array(3);
        report[0] = oscard;
        oscard = {};
        option = golfie.header;
        oscard['style'] = option;
        option = {};
        verify = golfie.avatarBackground;
        option['style'] = verify;
        verify = 8;
        verify = kiloes[verify];
        verify = backup.bind(tangon)(verify);
        yankee = verify.WarningIcon;
        verify = {};
        sizing = 'lg';
        verify['size'] = sizing;
        romeon = kiloes[romeon];
        romeon = foxtra.bind(tangon)(romeon);
        romeon = romeon.colors;
        romeon = romeon.TEXT_WARNING;
        verify['color'] = romeon;
        verify = offset.bind(tangon)(yankee, verify);
        option['children'] = verify;
        option = offset.bind(tangon)(michal, option);
        oscard['children'] = option;
        oscard = offset.bind(tangon)(michal, oscard);
        report[1] = oscard;
        oscard = {};
        golfie = golfie.body;
        oscard['style'] = golfie;
        option = 9;
        golfie = kiloes[option];
        golfie = backup.bind(tangon)(golfie);
        verify = golfie.Text;
        golfie = {'variant': 'heading-lg/semibold', 'color': 'header-primary'};
        yankee = 10;
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        sizing = romeon.intl;
        foxtra = sizing.string;
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.DmIUGB;
        romeon = foxtra.bind(sizing)(romeon);
        golfie['children'] = romeon;
        verify = offset.bind(tangon)(verify, golfie);
        golfie = new Array(2);
        golfie[0] = verify;
        option = kiloes[option];
        option = backup.bind(tangon)(option);
        verify = option.Text;
        option = {'variant': 'text-md/medium', 'color': 'text-secondary'};
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        yankee = kiloes[yankee];
        yankee = backup.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.8mfCqa;
        yankee = romeon.bind(foxtra)(yankee);
        option['children'] = yankee;
        option = offset.bind(tangon)(verify, option);
        golfie[1] = option;
        oscard['children'] = golfie;
        oscard = zuuluu.bind(tangon)(michal, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();