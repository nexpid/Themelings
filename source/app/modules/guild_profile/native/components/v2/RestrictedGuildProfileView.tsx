// app/modules/guild_profile/native/components/v2/RestrictedGuildProfileView.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_profile/native/components/v2/RestrictedGuildProfileView.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: RestrictedGuildProfileView
        backup = _closure1_slot0;
        kilo = _closure1_slot2;
        options = 3;
        entity = kilo[options];
        tango = undefined;
        mike = backup.bind(tango)(entity);
        entity = mike.useStyles;
        golf = entity.bind(mike)();
        foxtrot = _closure1_slot1;
        entity = 4;
        entity = kilo[entity];
        entity = foxtrot.bind(tango)(entity);
        sizing = entity.bind(tango)();
        entity = 5;
        entity = kilo[entity];
        zulu = backup.bind(tango)(entity);
        mike = zulu.useToken;
        romeo = 6;
        entity = kilo[romeo];
        entity = foxtrot.bind(tango)(entity);
        entity = entity.colors;
        entity = entity.BG_BASE_TERTIARY;
        yankee = mike.bind(zulu)(entity);
        zulu = _closure1_slot5;
        mike = _closure1_slot3;
        entity = {};
        oscar = golf.container;
        entity['style'] = oscar;
        offset = _closure1_slot4;
        report = 7;
        report = kilo[report];
        oscar = foxtrot.bind(tango)(report);
        report = {};
        verify = golf.colorBanner;
        report['style'] = verify;
        verify = kilo[options];
        verify = backup.bind(tango)(verify);
        verify = verify.DiagonalGradient;
        verify = verify.START;
        report['start'] = verify;
        verify = kilo[options];
        verify = backup.bind(tango)(verify);
        verify = verify.DiagonalGradient;
        verify = verify.END;
        report['end'] = verify;
        options = kilo[options];
        verify = backup.bind(tango)(options);
        options = verify.getBackgroundForProfile;
        options = options.bind(verify)(sizing, yankee);
        report['colors'] = options;
        oscar = offset.bind(tango)(oscar, report);
        report = new Array(3);
        report[0] = oscar;
        oscar = {};
        options = golf.header;
        oscar['style'] = options;
        options = {};
        verify = golf.avatarBackground;
        options['style'] = verify;
        verify = 8;
        verify = kilo[verify];
        verify = backup.bind(tango)(verify);
        yankee = verify.WarningIcon;
        verify = {};
        sizing = 'lg';
        verify['size'] = sizing;
        romeo = kilo[romeo];
        romeo = foxtrot.bind(tango)(romeo);
        romeo = romeo.colors;
        romeo = romeo.TEXT_WARNING;
        verify['color'] = romeo;
        verify = offset.bind(tango)(yankee, verify);
        options['children'] = verify;
        options = offset.bind(tango)(mike, options);
        oscar['children'] = options;
        oscar = offset.bind(tango)(mike, oscar);
        report[1] = oscar;
        oscar = {};
        golf = golf.body;
        oscar['style'] = golf;
        options = 9;
        golf = kilo[options];
        golf = backup.bind(tango)(golf);
        verify = golf.Text;
        golf = {'variant': 'heading-lg/semibold', 'color': 'header-primary'};
        yankee = 10;
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        sizing = romeo.intl;
        foxtrot = sizing.string;
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.DmIUGB;
        romeo = foxtrot.bind(sizing)(romeo);
        golf['children'] = romeo;
        verify = offset.bind(tango)(verify, golf);
        golf = new Array(2);
        golf[0] = verify;
        options = kilo[options];
        options = backup.bind(tango)(options);
        verify = options.Text;
        options = {'variant': 'text-md/medium', 'color': 'text-secondary'};
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        yankee = kilo[yankee];
        yankee = backup.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.8mfCqa;
        yankee = romeo.bind(foxtrot)(yankee);
        options['children'] = yankee;
        options = offset.bind(tango)(verify, options);
        golf[1] = options;
        oscar['children'] = golf;
        oscar = zulu.bind(tango)(mike, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();