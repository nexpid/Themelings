// app/modules/guild_profile/native/components/v2/GuildProfileView.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    option = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    verify = argPlu;
    var _closure1_slot0 = option;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = verify;
    report = function(argFoo, argBar) { // Original name: getBackgroundForProfile
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            oscard = argBar;
            entity = new Array(2);
            entity[0] = oscard;
            michal = _closure1_slot5;
            tangon = michal.DARK;
            michal = argFoo;
            if(!(michal !== tangon)) { _fun00002_ip = 77; continue _fun00001 }
 31:
            report = _closure1_slot0;
            tangon = _closure1_slot2;
            michal = 5;
            tangon = tangon[michal];
            michal = undefined;
            report = report.bind(michal)(tangon);
            tangon = report.darkenColor;
            michal = 0.8;
            michal = tangon.bind(report)(oscard, michal);
            _fun00002_ip = 121; continue _fun00001;
 77:
            report = _closure1_slot0;
            tangon = _closure1_slot2;
            zuuluu = 4;
            tangon = tangon[zuuluu];
            zuuluu = undefined;
            report = report.bind(zuuluu)(tangon);
            tangon = report.brightenColor;
            zuuluu = 0.8;
            michal = tangon.bind(report)(oscard, zuuluu);
 121:
            entity[1] = michal;
            return entity;
        }
    };
    var _closure1_slot10 = report;
    michal = global;
    offset = michal.Object;
    golfie = offset.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(offset)(zuuluu, entity, tangon);
    entity = 0;
    golfie = verify[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = verify[tangon];
    tangon = option.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = verify[tangon];
    tangon = option.bind(entity)(tangon);
    tangon = tangon.ThemeTypes;
    var _closure1_slot5 = tangon;
    tangon = 3;
    golfie = verify[tangon];
    golfie = option.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot6 = golfie;
    tangon = verify[tangon];
    tangon = option.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 8;
    tangon = verify[tangon];
    offset = option.bind(entity)(tangon);
    golfie = offset.createStyles;
    tangon = {};
    yankee = {};
    romeon = 9;
    backup = verify[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_BASE_PRIMARY;
    yankee['backgroundColor'] = backup;
    tangon['container'] = yankee;
    yankee = {'height': 140, 'width': '100%'};
    tangon['colorBanner'] = yankee;
    yankee = {'marginTop': 12, 'paddingHorizontal': 16, 'gap': 16};
    tangon['body'] = yankee;
    yankee = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'gap': 8};
    tangon['error'] = yankee;
    yankee = {};
    backup = 160;
    yankee['marginTop'] = backup;
    tangon['buttonContainer'] = yankee;
    yankee = {'paddingHorizontal': 16, 'marginTop': 4294967264, 'display': 'flex', 'flexDirection': 'column', 'gap': 0};
    tangon['header'] = yankee;
    yankee = {'width': 86, 'height': 86, 'borderRadius': 28.666666666666668, 'backgroundColor': null, 'display': 'flex', 'justifyContent': 'center', 'alignItems': 'center', 'overflow': 'hidden'};
    romeon = verify[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_BASE_PRIMARY;
    yankee['backgroundColor'] = romeon;
    tangon['avatarBackground'] = yankee;
    tangon = golfie.bind(offset)(tangon);
    var _closure1_slot8 = tangon;
    offset = michal.Object;
    golfie = offset.freeze;
    michal = {};
    yankee = {'x': 0, 'y': 1};
    michal['START'] = yankee;
    yankee = {'x': 1.5, 'y': 0};
    michal['END'] = yankee;
    michal = golfie.bind(offset)(michal);
    var _closure1_slot9 = michal;
    golfie = 17;
    golfie = verify[golfie];
    verify = option.bind(entity)(golfie);
    option = verify.fileFinishedImporting;
    golfie = 'modules/guild_profile/native/components/v2/GuildProfileView.tsx';
    golfie = option.bind(verify)(golfie);
    oscard = function(argFoo) { // Original name: GuildProfileView
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            michal = argFoo;
            yankee = michal.guildProfile;
            var _closure2_slot0 = yankee;
            michal = _closure1_slot8;
            tangon = undefined;
            golfie = michal.bind(tangon)();
            verify = _closure1_slot1;
            romeon = _closure1_slot2;
            michal = 10;
            michal = romeon[michal];
            michal = verify.bind(tangon)(michal);
            sizing = michal.bind(tangon)();
            report = _closure1_slot3;
            zuuluu = report.useMemo;
            michal = new Array(1);
            michal[0] = yankee;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    michal = _closure2_slot0;
                    entity = null;
                    if(!(entity != michal)) { _fun00006_ip = 107; continue _fun00005 }
 13:
                    tangon = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    michal = 6;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    tangon = tangon.bind(michal)(zuuluu);
                    zuuluu = tangon.getGuildIconSource;
                    michal = {};
                    report = _closure2_slot0;
                    oscard = report.id;
                    michal['id'] = oscard;
                    report = report.icon;
                    michal['icon'] = report;
                    report = 96;
                    michal['size'] = report;
                    report = true;
                    michal['canAnimate'] = report;
                    zuuluu = zuuluu.bind(tangon)(michal);
                    report = 'number';
                    tangon = typeof zuuluu;
                    michal = null;
                    if(!(report !== tangon)) { _fun00006_ip = 105; continue _fun00005 }
 100:
                    michal = zuuluu.uri;
 105:
                    return michal;
 107:
                    return entity;
                }
            };
            backup = zuuluu.bind(report)(entity, michal);
            option = _closure1_slot0;
            entity = 11;
            entity = romeon[entity];
            zuuluu = option.bind(tangon)(entity);
            michal = zuuluu.useToken;
            entity = 9;
            entity = romeon[entity];
            entity = verify.bind(tangon)(entity);
            entity = entity.colors;
            entity = entity.BG_BASE_TERTIARY;
            zuuluu = michal.bind(zuuluu)(entity);
            entity = 6;
            entity = romeon[entity];
            report = verify.bind(tangon)(entity);
            michal = report.getGuildIconURL;
            entity = {};
            oscard = yankee.id;
            entity['id'] = oscard;
            oscard = yankee.icon;
            entity['icon'] = oscard;
            oscard = 64;
            entity['size'] = oscard;
            michal = michal.bind(report)(entity);
            entity = 7;
            entity = romeon[entity];
            entity = verify.bind(tangon)(entity);
            kiloes = entity.bind(tangon)(michal, zuuluu);
            michal = yankee.brandColorPrimary;
            entity = null;
            if(!(entity != michal)) { _fun00004_ip = 218; continue _fun00003 }
 212:
            kiloes = yankee.brandColorPrimary;
 218:
            zuuluu = _closure1_slot7;
            michal = _closure1_slot4;
            entity = {};
            report = golfie.container;
            entity['style'] = report;
            offset = _closure1_slot6;
            report = 12;
            report = romeon[report];
            oscard = verify.bind(tangon)(report);
            report = {};
            output = golfie.colorBanner;
            report['style'] = output;
            output = _closure1_slot9;
            result = output.START;
            report['start'] = result;
            output = output.END;
            report['end'] = output;
            foxtra = _closure1_slot10;
            foxtra = foxtra.bind(tangon)(sizing, kiloes);
            report['colors'] = foxtra;
            oscard = offset.bind(tangon)(oscard, report);
            report = new Array(3);
            report[0] = oscard;
            oscard = 13;
            oscard = romeon[oscard];
            foxtra = verify.bind(tangon)(oscard);
            oscard = {};
            oscard['profile'] = yankee;
            oscard['guildIconSource'] = backup;
            oscard = offset.bind(tangon)(foxtra, oscard);
            report[1] = oscard;
            oscard = {};
            golfie = golfie.body;
            oscard['style'] = golfie;
            golfie = 14;
            golfie = romeon[golfie];
            golfie = option.bind(tangon)(golfie);
            option = golfie.Text;
            golfie = {'variant': 'text-md/medium', 'color': 'text-secondary'};
            foxtra = yankee.description;
            golfie['children'] = foxtra;
            option = offset.bind(tangon)(option, golfie);
            golfie = new Array(3);
            golfie[0] = option;
            option = 15;
            option = romeon[option];
            foxtra = verify.bind(tangon)(option);
            option = {};
            option['profile'] = yankee;
            option = offset.bind(tangon)(foxtra, option);
            golfie[1] = option;
            option = 16;
            option = romeon[option];
            verify = verify.bind(tangon)(option);
            option = {};
            option['profile'] = yankee;
            option = offset.bind(tangon)(verify, option);
            golfie[2] = option;
            oscard['children'] = golfie;
            oscard = zuuluu.bind(tangon)(michal, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = oscard;
    zuuluu['getBackgroundForProfile'] = report;
    zuuluu['useStyles'] = tangon;
    zuuluu['DiagonalGradient'] = michal;
    return entity;
})();