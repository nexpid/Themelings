// app/modules/guild_profile/native/components/v2/GuildProfileView.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    option = argBar;
    backup = argBaz;
    zuuluu = argFre;
    verify = argPlu;
    var _closure1_slot0 = option;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = verify;
    report = function(argFoo, argBar) { // Original name: getBackgroundForProfile
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            oscard = argBar;
            entity = new Array(2);
            entity[0] = oscard;
            michal = _closure1_slot6;
            tangon = michal.DARK;
            michal = argFoo;
            if(!(michal !== tangon)) { _fun00002_ip = 77; continue _fun00001 }
 31:
            report = _closure1_slot0;
            tangon = _closure1_slot2;
            michal = 6;
            tangon = tangon[michal];
            michal = undefined;
            report = report.bind(michal)(tangon);
            tangon = report.darkenColor;
            michal = 0.8;
            michal = tangon.bind(report)(oscard, michal);
            _fun00002_ip = 121; continue _fun00001;
 77:
            report = _closure1_slot0;
            tangon = _closure1_slot2;
            zuuluu = 5;
            tangon = tangon[zuuluu];
            zuuluu = undefined;
            report = report.bind(zuuluu)(tangon);
            tangon = report.brightenColor;
            zuuluu = 0.8;
            michal = tangon.bind(report)(oscard, zuuluu);
 121:
            entity[1] = michal;
            return entity;
        }
    };
    var _closure1_slot11 = report;
    michal = global;
    offset = michal.Object;
    golfie = offset.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(offset)(zuuluu, entity, tangon);
    entity = 0;
    golfie = verify[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = verify[tangon];
    tangon = option.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = verify[tangon];
    tangon = backup.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = verify[tangon];
    tangon = option.bind(entity)(tangon);
    tangon = tangon.ThemeTypes;
    var _closure1_slot6 = tangon;
    tangon = 4;
    golfie = verify[tangon];
    golfie = option.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    tangon = verify[tangon];
    tangon = option.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 7;
    tangon = verify[tangon];
    offset = option.bind(entity)(tangon);
    golfie = offset.createStyles;
    tangon = {};
    yankee = {};
    foxtra = 8;
    romeon = verify[foxtra];
    romeon = backup.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_BASE_PRIMARY;
    yankee['backgroundColor'] = romeon;
    tangon['container'] = yankee;
    yankee = {'height': 140, 'width': '100%'};
    tangon['colorBanner'] = yankee;
    romeon = 'flex';
    yankee = {'paddingHorizontal': 16, 'marginTop': 4294967264, 'display': 'flex', 'flexDirection': 'column', 'gap': 0};
    tangon['header'] = yankee;
    yankee = {'width': 86, 'height': 86, 'borderRadius': 28.666666666666668, 'backgroundColor': null, 'display': 'flex', 'justifyContent': 'center', 'alignItems': 'center', 'overflow': 'hidden'};
    kiloes = verify[foxtra];
    kiloes = backup.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BG_BASE_PRIMARY;
    yankee['backgroundColor'] = kiloes;
    tangon['avatarBackground'] = yankee;
    yankee = {'display': 'flex', 'flexDirection': 'row', 'gap': 8};
    tangon['members'] = yankee;
    yankee = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'gap': 4};
    tangon['memberCount'] = yankee;
    yankee = {'width': 8, 'height': 8, 'borderRadius': 4};
    kiloes = verify[foxtra];
    kiloes = backup.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.STATUS_OFFLINE;
    yankee['backgroundColor'] = kiloes;
    tangon['dot'] = yankee;
    yankee = {'width': 8, 'height': 8, 'borderRadius': 4};
    foxtra = verify[foxtra];
    foxtra = backup.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.STATUS_ONLINE;
    yankee['backgroundColor'] = foxtra;
    tangon['dotOnline'] = yankee;
    yankee = {};
    yankee['display'] = romeon;
    tangon['established'] = yankee;
    yankee = {'marginTop': 12, 'paddingHorizontal': 16};
    tangon['body'] = yankee;
    yankee = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'gap': 8};
    tangon['error'] = yankee;
    yankee = {};
    romeon = 160;
    yankee['marginTop'] = romeon;
    tangon['buttonContainer'] = yankee;
    tangon = golfie.bind(offset)(tangon);
    var _closure1_slot9 = tangon;
    offset = michal.Object;
    golfie = offset.freeze;
    michal = {};
    yankee = {'x': 0, 'y': 1};
    michal['START'] = yankee;
    yankee = {'x': 1.5, 'y': 0};
    michal['END'] = yankee;
    michal = golfie.bind(offset)(michal);
    var _closure1_slot10 = michal;
    golfie = 20;
    golfie = verify[golfie];
    verify = option.bind(entity)(golfie);
    option = verify.fileFinishedImporting;
    golfie = 'modules/guild_profile/native/components/v2/GuildProfileView.tsx';
    golfie = option.bind(verify)(golfie);
    oscard = function(argFoo) { // Original name: GuildProfileView
        michal = argFoo;
        offset = michal.guildProfile;
        var _closure2_slot0 = offset;
        michal = _closure1_slot9;
        tangon = undefined;
        romeon = michal.bind(tangon)();
        backup = _closure1_slot1;
        yankee = _closure1_slot2;
        michal = 9;
        michal = yankee[michal];
        michal = backup.bind(tangon)(michal);
        kiloes = michal.bind(tangon)();
        verify = _closure1_slot0;
        michal = 10;
        michal = yankee[michal];
        oscard = verify.bind(tangon)(michal);
        report = oscard.useStateFromStores;
        michal = _closure1_slot5;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            entity = _closure1_slot5;
            entity = entity.locale;
            return entity;
        };
        report = report.bind(oscard)(zuuluu, michal);
        oscard = _closure1_slot3;
        zuuluu = oscard.useMemo;
        michal = new Array(1);
        michal[0] = offset;
        entity = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                michal = _closure2_slot0;
                entity = null;
                if(!(entity != michal)) { _fun00004_ip = 108; continue _fun00003 }
 13:
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                michal = 11;
                zuuluu = zuuluu[michal];
                michal = undefined;
                tangon = tangon.bind(michal)(zuuluu);
                zuuluu = tangon.getGuildIconSource;
                michal = {};
                report = _closure2_slot0;
                oscard = report.id;
                michal['id'] = oscard;
                report = report.icon;
                michal['icon'] = report;
                report = 96;
                michal['size'] = report;
                report = true;
                michal['canAnimate'] = report;
                zuuluu = zuuluu.bind(tangon)(michal);
                report = 'number';
                tangon = typeof zuuluu;
                michal = null;
                if(!(report !== tangon)) { _fun00004_ip = 106; continue _fun00003 }
 100:
                michal = zuuluu.uri;
 106:
                return michal;
 108:
                return entity;
            }
        };
        sizing = zuuluu.bind(oscard)(entity, michal);
        entity = 12;
        entity = yankee[entity];
        zuuluu = verify.bind(tangon)(entity);
        michal = zuuluu.useToken;
        entity = 8;
        entity = yankee[entity];
        entity = backup.bind(tangon)(entity);
        entity = entity.colors;
        entity = entity.BG_BASE_TERTIARY;
        michal = michal.bind(zuuluu)(entity);
        entity = 13;
        entity = yankee[entity];
        entity = backup.bind(tangon)(entity);
        foxtra = entity.bind(tangon)(sizing, michal);
        entity = 14;
        entity = yankee[entity];
        zuuluu = verify.bind(tangon)(entity);
        michal = zuuluu.getEstablishedDate;
        entity = 15;
        entity = yankee[entity];
        golfie = backup.bind(tangon)(entity);
        oscard = golfie.extractTimestamp;
        entity = offset.id;
        entity = oscard.bind(golfie)(entity);
        source = michal.bind(zuuluu)(entity, report);
        zuuluu = _closure1_slot8;
        michal = _closure1_slot4;
        entity = {};
        report = romeon.container;
        entity['style'] = report;
        golfie = _closure1_slot7;
        report = 16;
        report = yankee[report];
        oscard = backup.bind(tangon)(report);
        report = {};
        output = romeon.colorBanner;
        report['style'] = output;
        output = _closure1_slot10;
        result = output.START;
        report['start'] = result;
        output = output.END;
        report['end'] = output;
        option = _closure1_slot11;
        option = option.bind(tangon)(kiloes, foxtra);
        report['colors'] = option;
        oscard = golfie.bind(tangon)(oscard, report);
        report = new Array(3);
        report[0] = oscard;
        oscard = {};
        option = romeon.header;
        oscard['style'] = option;
        option = {};
        foxtra = romeon.avatarBackground;
        option['style'] = foxtra;
        kiloes = 17;
        foxtra = yankee[kiloes];
        backup = backup.bind(tangon)(foxtra);
        foxtra = {};
        foxtra['icon'] = sizing;
        kiloes = yankee[kiloes];
        kiloes = verify.bind(tangon)(kiloes);
        kiloes = kiloes.GuildIconSizes;
        kiloes = kiloes.XXLARGE;
        foxtra['size'] = kiloes;
        kiloes = true;
        foxtra['animate'] = kiloes;
        kiloes = offset.name;
        foxtra['value'] = kiloes;
        kiloes = false;
        foxtra['selected'] = kiloes;
        foxtra = golfie.bind(tangon)(backup, foxtra);
        option['children'] = foxtra;
        option = golfie.bind(tangon)(michal, option);
        foxtra = new Array(4);
        foxtra[0] = option;
        option = 18;
        backup = yankee[option];
        backup = verify.bind(tangon)(backup);
        kiloes = backup.Text;
        backup = {'accessibilityRole': 'header', 'variant': 'heading-xl/semibold', 'color': 'header-primary'};
        sizing = offset.name;
        backup['children'] = sizing;
        backup = golfie.bind(tangon)(kiloes, backup);
        foxtra[1] = backup;
        backup = {};
        kiloes = romeon.members;
        backup['style'] = kiloes;
        kiloes = {};
        sizing = romeon.memberCount;
        kiloes['style'] = sizing;
        sizing = {};
        output = romeon.dot;
        sizing['style'] = output;
        output = golfie.bind(tangon)(michal, sizing);
        sizing = new Array(2);
        sizing[0] = output;
        output = yankee[option];
        output = verify.bind(tangon)(output);
        echoed = output.Text;
        result = {'variant': 'text-md/medium', 'color': 'text-secondary'};
        output = 19;
        update = yankee[output];
        update = verify.bind(tangon)(update);
        sequen = update.intl;
        vacuum = sequen.format;
        update = yankee[output];
        update = verify.bind(tangon)(update);
        update = update.t;
        ctrled = update.zRl6XV;
        update = {};
        config = offset.memberCount;
        update['count'] = config;
        update = vacuum.bind(sequen)(ctrled, update);
        result['children'] = update;
        result = golfie.bind(tangon)(echoed, result);
        sizing[1] = result;
        kiloes['children'] = sizing;
        sizing = zuuluu.bind(tangon)(michal, kiloes);
        kiloes = new Array(2);
        kiloes[0] = sizing;
        sizing = {};
        result = romeon.memberCount;
        sizing['style'] = result;
        result = {};
        echoed = romeon.dotOnline;
        result['style'] = echoed;
        echoed = golfie.bind(tangon)(michal, result);
        result = new Array(2);
        result[0] = echoed;
        echoed = yankee[option];
        echoed = verify.bind(tangon)(echoed);
        update = echoed.Text;
        echoed = {'variant': 'text-md/medium', 'color': 'text-secondary'};
        ctrled = yankee[output];
        ctrled = verify.bind(tangon)(ctrled);
        config = ctrled.intl;
        sequen = config.format;
        ctrled = yankee[output];
        ctrled = verify.bind(tangon)(ctrled);
        ctrled = ctrled.t;
        vacuum = ctrled.LC+S+v;
        ctrled = {};
        record = offset.onlineCount;
        ctrled['membersOnline'] = record;
        ctrled = sequen.bind(config)(vacuum, ctrled);
        echoed['children'] = ctrled;
        echoed = golfie.bind(tangon)(update, echoed);
        result[1] = echoed;
        sizing['children'] = result;
        sizing = zuuluu.bind(tangon)(michal, sizing);
        kiloes[1] = sizing;
        backup['children'] = kiloes;
        backup = zuuluu.bind(tangon)(michal, backup);
        foxtra[2] = backup;
        backup = {};
        kiloes = romeon.established;
        backup['style'] = kiloes;
        kiloes = yankee[option];
        kiloes = verify.bind(tangon)(kiloes);
        sizing = kiloes.Text;
        kiloes = {'variant': 'text-md/medium', 'color': 'text-secondary'};
        result = yankee[output];
        result = verify.bind(tangon)(result);
        update = result.intl;
        echoed = update.format;
        output = yankee[output];
        output = verify.bind(tangon)(output);
        output = output.t;
        result = output.zb2Q5+;
        output = {};
        output['createdAtDate'] = source;
        output = echoed.bind(update)(result, output);
        kiloes['children'] = output;
        kiloes = golfie.bind(tangon)(sizing, kiloes);
        backup['children'] = kiloes;
        backup = golfie.bind(tangon)(michal, backup);
        foxtra[3] = backup;
        oscard['children'] = foxtra;
        oscard = zuuluu.bind(tangon)(michal, oscard);
        report[1] = oscard;
        oscard = {};
        romeon = romeon.body;
        oscard['style'] = romeon;
        option = yankee[option];
        option = verify.bind(tangon)(option);
        verify = option.Text;
        option = {'variant': 'text-md/medium', 'color': 'text-secondary'};
        offset = offset.description;
        option['children'] = offset;
        option = golfie.bind(tangon)(verify, option);
        oscard['children'] = option;
        oscard = golfie.bind(tangon)(michal, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = oscard;
    zuuluu['getBackgroundForProfile'] = report;
    zuuluu['useStyles'] = tangon;
    zuuluu['DiagonalGradient'] = michal;
    return entity;
})();