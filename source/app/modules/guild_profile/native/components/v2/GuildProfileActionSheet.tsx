// app/modules/guild_profile/native/components/v2/GuildProfileActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.View;
    var _closure1_slot4 = option;
    tangon = tangon.ActivityIndicator;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.INVALID_ACCESS_ERROR_CODE;
    var _closure1_slot7 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 40;
    verify['paddingTop'] = offset;
    tangon['loadingContainer'] = verify;
    verify = {'padding': 16, 'paddingBottom': 40};
    tangon['footerContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_profile/native/components/v2/GuildProfileActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildProfileActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.guildId;
            var _closure2_slot0 = oscard;
            entity = _closure1_slot10;
            tangon = undefined;
            offset = entity.bind(tangon)();
            backup = _closure1_slot1;
            verify = _closure1_slot2;
            entity = 6;
            entity = verify[entity];
            entity = backup.bind(tangon)(entity);
            foxtra = entity.bind(tangon)();
            option = _closure1_slot0;
            entity = 7;
            entity = verify[entity];
            zuuluu = option.bind(tangon)(entity);
            entity = zuuluu.useGuildProfile;
            entity = entity.bind(zuuluu)(oscard);
            oscard = entity.guildProfile;
            kiloes = entity.fetchGuildProfile;
            var _closure2_slot1 = kiloes;
            entity = entity.isFetching;
            zuuluu = 8;
            zuuluu = verify[zuuluu];
            romeon = option.bind(tangon)(zuuluu);
            yankee = romeon.useStateFromStores;
            zuuluu = _closure1_slot6;
            golfie = new Array(1);
            golfie[0] = zuuluu;
            zuuluu = function() {
                zuuluu = _closure1_slot6;
                michal = zuuluu.getErrorCode;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            zuuluu = yankee.bind(romeon)(golfie, zuuluu);
            golfie = 9;
            golfie = verify[golfie];
            romeon = option.bind(tangon)(golfie);
            yankee = romeon.useToken;
            golfie = 10;
            golfie = verify[golfie];
            golfie = backup.bind(tangon)(golfie);
            golfie = golfie.colors;
            golfie = golfie.INTERACTIVE_HOVER;
            yankee = yankee.bind(romeon)(golfie, foxtra);
            golfie = 11;
            golfie = verify[golfie];
            option = option.bind(tangon)(golfie);
            golfie = option.useBottomSheetRef;
            golfie = golfie.bind(option)();
            option = golfie.bottomSheetRef;
            verify = golfie.bottomSheetClose;
            backup = _closure1_slot3;
            foxtra = backup.useCallback;
            romeon = new Array(1);
            romeon[0] = kiloes;
            golfie = function() {
                zuuluu = _closure2_slot1;
                entity = undefined;
                michal = true;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            romeon = foxtra.bind(backup)(golfie, romeon);
            foxtra = backup.useEffect;
            golfie = new Array(1);
            golfie[0] = kiloes;
            michal = function() {
                michal = _closure2_slot1;
                entity = undefined;
                michal = michal.bind(entity)();
                return entity;
            };
            michal = foxtra.bind(backup)(michal, golfie);
            if(entity) { _fun00002_ip = 424; continue _fun00001 }
 285:
            entity = null;
            if(!(entity == oscard)) { _fun00002_ip = 299; continue _fun00001 }
 291:
            michal = _closure1_slot7;
            if(!(zuuluu !== michal)) { _fun00002_ip = 388; continue _fun00001 }
 299:
            if(!(entity != oscard)) { _fun00002_ip = 347; continue _fun00001 }
 303:
            zuuluu = _closure1_slot8;
            michal = _closure1_slot1;
            golfie = _closure1_slot2;
            entity = 14;
            entity = golfie[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['guildProfile'] = oscard;
            golfie = zuuluu.bind(tangon)(michal, entity);
            entity = false;
            _fun00002_ip = 480; continue _fun00001;
 347:
            oscard = _closure1_slot8;
            zuuluu = _closure1_slot1;
            foxtra = _closure1_slot2;
            michal = 13;
            michal = foxtra[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = {};
            michal['onRetry'] = romeon;
            golfie = oscard.bind(tangon)(zuuluu, michal);
            entity = true;
            _fun00002_ip = 480; continue _fun00001;
 388:
            oscard = _closure1_slot8;
            zuuluu = _closure1_slot1;
            romeon = _closure1_slot2;
            michal = 12;
            michal = romeon[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = {};
            golfie = oscard.bind(tangon)(zuuluu, michal);
            entity = true;
            _fun00002_ip = 480; continue _fun00001;
 424:
            oscard = _closure1_slot8;
            zuuluu = _closure1_slot4;
            michal = {};
            romeon = offset.loadingContainer;
            michal['style'] = romeon;
            foxtra = _closure1_slot5;
            romeon = {'animating': true, 'size': 'large'};
            romeon = oscard.bind(tangon)(foxtra, romeon);
            michal['children'] = romeon;
            golfie = oscard.bind(tangon)(zuuluu, michal);
            entity = false;
 480:
            oscard = undefined;
            if(!entity) { _fun00002_ip = 615; continue _fun00001 }
 488:
            zuuluu = _closure1_slot8;
            michal = _closure1_slot4;
            entity = {};
            offset = offset.footerContainer;
            entity['style'] = offset;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            offset = 15;
            offset = output[offset];
            offset = sizing.bind(tangon)(offset);
            romeon = offset.Button;
            offset = {};
            foxtra = 'lg';
            offset['size'] = foxtra;
            foxtra = 16;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = output[foxtra];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.cpT0Cg;
            foxtra = backup.bind(kiloes)(foxtra);
            offset['text'] = foxtra;
            offset['onPress'] = verify;
            offset = zuuluu.bind(tangon)(romeon, offset);
            entity['children'] = offset;
            oscard = zuuluu.bind(tangon)(michal, entity);
 615:
            zuuluu = _closure1_slot9;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            entity = 17;
            entity = foxtra[entity];
            entity = romeon.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {'ref': null, 'scrollable': true, 'handleDisabled': true};
            entity['ref'] = option;
            entity['footer'] = oscard;
            option = _closure1_slot8;
            report = 18;
            report = foxtra[report];
            report = romeon.bind(tangon)(report);
            oscard = report.BottomSheetScrollView;
            report = {};
            report['children'] = golfie;
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = 19;
            oscard = foxtra[oscard];
            oscard = romeon.bind(tangon)(oscard);
            golfie = oscard.ActionSheetHeaderBar;
            oscard = {};
            offset = 20;
            offset = foxtra[offset];
            offset = romeon.bind(tangon)(offset);
            offset = offset.ActionSheetHeaderBarVariants;
            offset = offset.FLOATING;
            oscard['variant'] = offset;
            offset = {};
            offset['backgroundColor'] = yankee;
            oscard['tabStyle'] = offset;
            oscard['onPress'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();