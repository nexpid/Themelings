// app/modules/guild_profile/native/components/v2/GuildProfileActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.View;
    var _closure1_slot4 = options;
    tango = tango.ActivityIndicator;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.INVALID_ACCESS_ERROR_CODE;
    var _closure1_slot7 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 40;
    verify['paddingTop'] = offset;
    tango['loadingContainer'] = verify;
    verify = {'padding': 16, 'paddingBottom': 40};
    tango['footerContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_profile/native/components/v2/GuildProfileActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildProfileActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscar = entity.guildId;
            var _closure2_slot0 = oscar;
            entity = _closure1_slot10;
            tango = undefined;
            offset = entity.bind(tango)();
            backup = _closure1_slot1;
            verify = _closure1_slot2;
            entity = 6;
            entity = verify[entity];
            entity = backup.bind(tango)(entity);
            foxtrot = entity.bind(tango)();
            options = _closure1_slot0;
            entity = 7;
            entity = verify[entity];
            zulu = options.bind(tango)(entity);
            entity = zulu.useGuildProfile;
            entity = entity.bind(zulu)(oscar);
            oscar = entity.guildProfile;
            kilo = entity.fetchGuildProfile;
            var _closure2_slot1 = kilo;
            entity = entity.isFetching;
            zulu = 8;
            zulu = verify[zulu];
            romeo = options.bind(tango)(zulu);
            yankee = romeo.useStateFromStores;
            zulu = _closure1_slot6;
            golf = new Array(1);
            golf[0] = zulu;
            zulu = function() {
                zulu = _closure1_slot6;
                mike = zulu.getErrorCode;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            zulu = yankee.bind(romeo)(golf, zulu);
            golf = 9;
            golf = verify[golf];
            romeo = options.bind(tango)(golf);
            yankee = romeo.useToken;
            golf = 10;
            golf = verify[golf];
            golf = backup.bind(tango)(golf);
            golf = golf.colors;
            golf = golf.INTERACTIVE_HOVER;
            yankee = yankee.bind(romeo)(golf, foxtrot);
            golf = 11;
            golf = verify[golf];
            options = options.bind(tango)(golf);
            golf = options.useBottomSheetRef;
            golf = golf.bind(options)();
            options = golf.bottomSheetRef;
            verify = golf.bottomSheetClose;
            backup = _closure1_slot3;
            foxtrot = backup.useCallback;
            romeo = new Array(1);
            romeo[0] = kilo;
            golf = function() {
                zulu = _closure2_slot1;
                entity = undefined;
                mike = true;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            romeo = foxtrot.bind(backup)(golf, romeo);
            foxtrot = backup.useEffect;
            golf = new Array(1);
            golf[0] = kilo;
            mike = function() {
                mike = _closure2_slot1;
                entity = undefined;
                mike = mike.bind(entity)();
                return entity;
            };
            mike = foxtrot.bind(backup)(mike, golf);
            if(entity) { _fun00002_ip = 424; continue _fun00001 }
 285:
            entity = null;
            if(!(entity == oscar)) { _fun00002_ip = 299; continue _fun00001 }
 291:
            mike = _closure1_slot7;
            if(!(zulu !== mike)) { _fun00002_ip = 388; continue _fun00001 }
 299:
            if(!(entity != oscar)) { _fun00002_ip = 347; continue _fun00001 }
 303:
            zulu = _closure1_slot8;
            mike = _closure1_slot1;
            golf = _closure1_slot2;
            entity = 14;
            entity = golf[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            entity['guildProfile'] = oscar;
            golf = zulu.bind(tango)(mike, entity);
            entity = false;
            _fun00002_ip = 480; continue _fun00001;
 347:
            oscar = _closure1_slot8;
            zulu = _closure1_slot1;
            foxtrot = _closure1_slot2;
            mike = 13;
            mike = foxtrot[mike];
            zulu = zulu.bind(tango)(mike);
            mike = {};
            mike['onRetry'] = romeo;
            golf = oscar.bind(tango)(zulu, mike);
            entity = true;
            _fun00002_ip = 480; continue _fun00001;
 388:
            oscar = _closure1_slot8;
            zulu = _closure1_slot1;
            romeo = _closure1_slot2;
            mike = 12;
            mike = romeo[mike];
            zulu = zulu.bind(tango)(mike);
            mike = {};
            golf = oscar.bind(tango)(zulu, mike);
            entity = true;
            _fun00002_ip = 480; continue _fun00001;
 424:
            oscar = _closure1_slot8;
            zulu = _closure1_slot4;
            mike = {};
            romeo = offset.loadingContainer;
            mike['style'] = romeo;
            foxtrot = _closure1_slot5;
            romeo = {'animating': true, 'size': 'large'};
            romeo = oscar.bind(tango)(foxtrot, romeo);
            mike['children'] = romeo;
            golf = oscar.bind(tango)(zulu, mike);
            entity = false;
 480:
            oscar = undefined;
            if(!entity) { _fun00002_ip = 615; continue _fun00001 }
 488:
            zulu = _closure1_slot8;
            mike = _closure1_slot4;
            entity = {};
            offset = offset.footerContainer;
            entity['style'] = offset;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            offset = 15;
            offset = output[offset];
            offset = sizing.bind(tango)(offset);
            romeo = offset.Button;
            offset = {};
            foxtrot = 'lg';
            offset['size'] = foxtrot;
            foxtrot = 16;
            backup = output[foxtrot];
            backup = sizing.bind(tango)(backup);
            kilo = backup.intl;
            backup = kilo.string;
            foxtrot = output[foxtrot];
            foxtrot = sizing.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.cpT0Cg;
            foxtrot = backup.bind(kilo)(foxtrot);
            offset['text'] = foxtrot;
            offset['onPress'] = verify;
            offset = zulu.bind(tango)(romeo, offset);
            entity['children'] = offset;
            oscar = zulu.bind(tango)(mike, entity);
 615:
            zulu = _closure1_slot9;
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            entity = 17;
            entity = foxtrot[entity];
            entity = romeo.bind(tango)(entity);
            mike = entity.BottomSheet;
            entity = {'ref': null, 'scrollable': true, 'handleDisabled': true};
            entity['ref'] = options;
            entity['footer'] = oscar;
            options = _closure1_slot8;
            report = 18;
            report = foxtrot[report];
            report = romeo.bind(tango)(report);
            oscar = report.BottomSheetScrollView;
            report = {};
            report['children'] = golf;
            oscar = options.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            oscar = 19;
            oscar = foxtrot[oscar];
            oscar = romeo.bind(tango)(oscar);
            golf = oscar.ActionSheetHeaderBar;
            oscar = {};
            offset = 20;
            offset = foxtrot[offset];
            offset = romeo.bind(tango)(offset);
            offset = offset.ActionSheetHeaderBarVariants;
            offset = offset.FLOATING;
            oscar['variant'] = offset;
            offset = {};
            offset['backgroundColor'] = yankee;
            oscar['tabStyle'] = offset;
            oscar['onPress'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();