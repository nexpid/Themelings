// app/modules/guild_profile/native/components/v2/GuildProfileActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_profile/native/components/v2/GuildProfileActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildProfileActionSheet
        _fun90595: for(var _fun90595_ip = 0; ; ) switch(_fun90595_ip) {
 0:
            mike = argFoo;
            golf = mike.guildId;
            yankee = _closure1_slot1;
            tango = _closure1_slot2;
            mike = 2;
            mike = tango[mike];
            report = undefined;
            mike = yankee.bind(report)(mike);
            offset = mike.bind(report)();
            zulu = _closure1_slot0;
            mike = 3;
            mike = tango[mike];
            oscar = zulu.bind(report)(mike);
            mike = oscar.useGuildProfile;
            mike = mike.bind(oscar)(golf);
            kilo = mike.guildProfile;
            golf = mike.fetchGuildProfile;
            var _closure2_slot0 = golf;
            mike = 4;
            mike = tango[mike];
            verify = zulu.bind(report)(mike);
            oscar = verify.useToken;
            mike = 5;
            mike = tango[mike];
            mike = yankee.bind(report)(mike);
            mike = mike.colors;
            mike = mike.INTERACTIVE_HOVER;
            romeo = oscar.bind(verify)(mike, offset);
            mike = 6;
            mike = tango[mike];
            zulu = zulu.bind(report)(mike);
            mike = zulu.useBottomSheetRef;
            mike = mike.bind(zulu)();
            oscar = mike.bottomSheetRef;
            offset = mike.bottomSheetClose;
            tango = _closure1_slot3;
            zulu = tango.useEffect;
            mike = new Array(1);
            mike[0] = golf;
            entity = function() {
                mike = _closure2_slot0;
                entity = undefined;
                mike = mike.bind(entity)();
                return entity;
            };
            entity = zulu.bind(tango)(entity, mike);
            entity = null;
            mike = entity == kilo;
            if(mike) { _fun90595_ip = 405; continue _fun90595 }
 205:
            tango = _closure1_slot5;
            foxtrot = _closure1_slot0;
            backup = _closure1_slot2;
            mike = 7;
            mike = backup[mike];
            mike = foxtrot.bind(report)(mike);
            zulu = mike.BottomSheet;
            mike = {'ref': null, 'scrollable': true, 'handleDisabled': true};
            mike['ref'] = oscar;
            verify = _closure1_slot4;
            oscar = 8;
            oscar = backup[oscar];
            oscar = foxtrot.bind(report)(oscar);
            golf = oscar.BottomSheetScrollView;
            oscar = {};
            yankee = _closure1_slot1;
            options = 9;
            options = backup[options];
            yankee = yankee.bind(report)(options);
            options = {};
            options['guildProfile'] = kilo;
            options = verify.bind(report)(yankee, options);
            oscar['children'] = options;
            golf = verify.bind(report)(golf, oscar);
            oscar = new Array(2);
            oscar[0] = golf;
            golf = 10;
            golf = backup[golf];
            golf = foxtrot.bind(report)(golf);
            options = golf.ActionSheetHeaderBar;
            golf = {};
            yankee = 11;
            yankee = backup[yankee];
            yankee = foxtrot.bind(report)(yankee);
            yankee = yankee.ActionSheetHeaderBarVariants;
            yankee = yankee.FLOATING;
            golf['variant'] = yankee;
            yankee = {};
            yankee['backgroundColor'] = romeo;
            golf['tabStyle'] = yankee;
            golf['onPress'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 405:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();