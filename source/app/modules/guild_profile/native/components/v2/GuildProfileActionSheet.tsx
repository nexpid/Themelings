// app/modules/guild_profile/native/components/v2/GuildProfileActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    tangon = tangon.ActivityIndicator;
    var _closure1_slot5 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = yankee.bind(entity)(golfie);
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.GuildProfileFetchStatus;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.INVALID_ACCESS_ERROR_CODE;
    var _closure1_slot8 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot9 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 40;
    verify['paddingTop'] = offset;
    tangon['loadingContainer'] = verify;
    verify = {'padding': 16, 'paddingBottom': 40};
    tangon['footerContainer'] = verify;
    verify = {};
    offset = 6;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_BASE_PRIMARY;
    verify['backgroundColor'] = offset;
    tangon['scrollView'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 22;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_profile/native/components/v2/GuildProfileActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildProfileActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            golfie = michal.guildId;
            var _closure2_slot0 = golfie;
            michal = _closure1_slot11;
            tangon = undefined;
            offset = michal.bind(tangon)();
            backup = _closure1_slot1;
            option = _closure1_slot2;
            michal = 7;
            michal = option[michal];
            michal = backup.bind(tangon)(michal);
            foxtra = michal.bind(tangon)();
            oscard = _closure1_slot0;
            michal = 8;
            michal = option[michal];
            zuuluu = oscard.bind(tangon)(michal);
            michal = zuuluu.useGuildProfile;
            michal = michal.bind(zuuluu)(golfie);
            romeon = michal.guildProfile;
            kiloes = michal.fetchGuildProfile;
            var _closure2_slot1 = kiloes;
            michal = michal.fetchStatus;
            zuuluu = 9;
            zuuluu = option[zuuluu];
            yankee = oscard.bind(tangon)(zuuluu);
            verify = yankee.useStateFromStores;
            zuuluu = _closure1_slot6;
            golfie = new Array(1);
            golfie[0] = zuuluu;
            zuuluu = function() {
                zuuluu = _closure1_slot6;
                michal = zuuluu.getErrorCode;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            golfie = verify.bind(yankee)(golfie, zuuluu);
            zuuluu = 10;
            zuuluu = option[zuuluu];
            yankee = oscard.bind(tangon)(zuuluu);
            verify = yankee.useToken;
            zuuluu = 6;
            zuuluu = option[zuuluu];
            zuuluu = backup.bind(tangon)(zuuluu);
            zuuluu = zuuluu.colors;
            zuuluu = zuuluu.INTERACTIVE_HOVER;
            yankee = verify.bind(yankee)(zuuluu, foxtra);
            zuuluu = 11;
            zuuluu = option[zuuluu];
            oscard = oscard.bind(tangon)(zuuluu);
            zuuluu = oscard.useBottomSheetRef;
            zuuluu = zuuluu.bind(oscard)();
            oscard = zuuluu.bottomSheetRef;
            verify = zuuluu.bottomSheetClose;
            backup = _closure1_slot3;
            foxtra = backup.useCallback;
            option = new Array(1);
            option[0] = kiloes;
            zuuluu = function() {
                zuuluu = _closure2_slot1;
                entity = undefined;
                michal = true;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            zuuluu = foxtra.bind(backup)(zuuluu, option);
            foxtra = backup.useEffect;
            option = new Array(1);
            option[0] = kiloes;
            entity = function() {
                michal = _closure2_slot1;
                entity = undefined;
                michal = michal.bind(entity)();
                return entity;
            };
            entity = foxtra.bind(backup)(entity, option);
            entity = _closure1_slot7;
            entity = entity.NOT_FETCHED;
            if(!(michal !== entity)) { _fun00002_ip = 666; continue _fun00001 }
 296:
            entity = _closure1_slot7;
            entity = entity.FETCHING;
            if(!(michal !== entity)) { _fun00002_ip = 666; continue _fun00001 }
 313:
            entity = null;
            if(!(entity == romeon)) { _fun00002_ip = 330; continue _fun00001 }
 319:
            michal = _closure1_slot8;
            if(!(golfie !== michal)) { _fun00002_ip = 539; continue _fun00001 }
 330:
            if(!(entity != romeon)) { _fun00002_ip = 404; continue _fun00001 }
 334:
            option = _closure1_slot9;
            golfie = _closure1_slot1;
            foxtra = _closure1_slot2;
            entity = 16;
            entity = foxtra[entity];
            michal = golfie.bind(tangon)(entity);
            entity = {};
            entity['guildProfile'] = romeon;
            michal = option.bind(tangon)(michal, entity);
            entity = 17;
            entity = foxtra[entity];
            golfie = golfie.bind(tangon)(entity);
            entity = {};
            entity['profile'] = romeon;
            backup = option.bind(tangon)(golfie, entity);
            golfie = michal;
            _fun00002_ip = 722; continue _fun00001;
 404:
            option = _closure1_slot9;
            michal = _closure1_slot1;
            output = _closure1_slot2;
            entity = 15;
            entity = output[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['onRetry'] = zuuluu;
            golfie = option.bind(tangon)(michal, entity);
            sizing = _closure1_slot0;
            entity = 13;
            entity = output[entity];
            entity = sizing.bind(tangon)(entity);
            zuuluu = entity.Button;
            entity = {};
            romeon = 'lg';
            entity['size'] = romeon;
            romeon = 14;
            foxtra = output[romeon];
            foxtra = sizing.bind(tangon)(foxtra);
            kiloes = foxtra.intl;
            foxtra = kiloes.string;
            romeon = output[romeon];
            romeon = sizing.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.cpT0Cg;
            romeon = foxtra.bind(kiloes)(romeon);
            entity['text'] = romeon;
            entity['onPress'] = verify;
            backup = option.bind(tangon)(zuuluu, entity);
            _fun00002_ip = 722; continue _fun00001;
 539:
            option = _closure1_slot9;
            michal = _closure1_slot1;
            output = _closure1_slot2;
            entity = 12;
            entity = output[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            golfie = option.bind(tangon)(michal, entity);
            sizing = _closure1_slot0;
            entity = 13;
            entity = output[entity];
            entity = sizing.bind(tangon)(entity);
            zuuluu = entity.Button;
            entity = {};
            romeon = 'lg';
            entity['size'] = romeon;
            romeon = 14;
            foxtra = output[romeon];
            foxtra = sizing.bind(tangon)(foxtra);
            kiloes = foxtra.intl;
            foxtra = kiloes.string;
            romeon = output[romeon];
            romeon = sizing.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.cpT0Cg;
            romeon = foxtra.bind(kiloes)(romeon);
            entity['text'] = romeon;
            entity['onPress'] = verify;
            backup = option.bind(tangon)(zuuluu, entity);
            _fun00002_ip = 722; continue _fun00001;
 666:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot4;
            entity = {};
            option = offset.loadingContainer;
            entity['style'] = option;
            romeon = _closure1_slot5;
            option = {'animating': true, 'size': 'large'};
            option = zuuluu.bind(tangon)(romeon, option);
            entity['children'] = option;
            golfie = zuuluu.bind(tangon)(michal, entity);
            backup = null;
 722:
            zuuluu = _closure1_slot10;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            entity = 18;
            entity = foxtra[entity];
            entity = romeon.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {'ref': null, 'scrollable': true, 'handleDisabled': true};
            entity['ref'] = oscard;
            option = _closure1_slot9;
            oscard = _closure1_slot4;
            report = {};
            kiloes = offset.footerContainer;
            report['style'] = kiloes;
            report['children'] = backup;
            report = option.bind(tangon)(oscard, report);
            entity['footer'] = report;
            report = 19;
            report = foxtra[report];
            report = romeon.bind(tangon)(report);
            oscard = report.BottomSheetScrollView;
            report = {};
            offset = offset.scrollView;
            report['style'] = offset;
            report['children'] = golfie;
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = 20;
            oscard = foxtra[oscard];
            oscard = romeon.bind(tangon)(oscard);
            golfie = oscard.ActionSheetHeaderBar;
            oscard = {};
            offset = 21;
            offset = foxtra[offset];
            offset = romeon.bind(tangon)(offset);
            offset = offset.ActionSheetHeaderBarVariants;
            offset = offset.FLOATING;
            oscard['variant'] = offset;
            offset = {};
            offset['backgroundColor'] = yankee;
            oscard['tabStyle'] = offset;
            oscard['onPress'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();