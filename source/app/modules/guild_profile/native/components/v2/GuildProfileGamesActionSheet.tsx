// app/modules/guild_profile/native/components/v2/GuildProfileGamesActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 16;
    verify['padding'] = offset;
    tangon['container'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_profile/native/components/v2/GuildProfileGamesActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildProfileGamesActionSheet
        entity = argFoo;
        michal = entity.profile;
        entity = _closure1_slot6;
        tangon = undefined;
        golfie = entity.bind(tangon)();
        entity = michal.id;
        var _closure2_slot0 = entity;
        zuuluu = michal.gameActivity;
        var _closure2_slot1 = zuuluu;
        option = _closure1_slot0;
        romeon = _closure1_slot2;
        zuuluu = 4;
        zuuluu = romeon[zuuluu];
        oscard = option.bind(tangon)(zuuluu);
        zuuluu = oscard.useAllGuildProfileGames;
        yankee = zuuluu.bind(oscard)(michal);
        zuuluu = 5;
        zuuluu = romeon[zuuluu];
        oscard = option.bind(tangon)(zuuluu);
        zuuluu = oscard.useBottomSheetRef;
        zuuluu = zuuluu.bind(oscard)();
        foxtra = zuuluu.bottomSheetRef;
        backup = michal.name;
        michal = 6;
        zuuluu = romeon[michal];
        zuuluu = option.bind(tangon)(zuuluu);
        offset = zuuluu.intl;
        oscard = offset.format;
        michal = romeon[michal];
        michal = option.bind(tangon)(michal);
        michal = michal.t;
        zuuluu = michal.vuAVo6;
        michal = {};
        michal['serverName'] = backup;
        zuuluu = oscard.bind(offset)(zuuluu, michal);
        michal = zuuluu.toString;
        offset = michal.bind(zuuluu)();
        oscard = _closure1_slot3;
        zuuluu = oscard.useCallback;
        michal = new Array(1);
        michal[0] = entity;
        entity = function() {
            report = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 7;
            tangon = michal[entity];
            entity = undefined;
            oscard = report.bind(entity)(tangon);
            report = oscard.openLazy;
            tangon = _closure1_slot0;
            zuuluu = 9;
            zuuluu = michal[zuuluu];
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = 8;
            zuuluu = michal[zuuluu];
            michal = michal.paths;
            tangon = tangon.bind(entity)(zuuluu, michal);
            golfie = _closure2_slot0;
            michal = global;
            michal = michal.HermesInternal;
            zuuluu = michal.concat;
            michal = 'GuildDiscoverableProfile:';
            zuuluu = zuuluu.bind(michal)(golfie);
            michal = {};
            michal['guildId'] = golfie;
            michal = report.bind(oscard)(tangon, zuuluu, michal);
            return entity;
        };
        oscard = zuuluu.bind(oscard)(entity, michal);
        zuuluu = _closure1_slot5;
        entity = 10;
        entity = romeon[entity];
        entity = option.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        entity['ref'] = foxtra;
        foxtra = true;
        entity['scrollable'] = foxtra;
        entity['onDismiss'] = oscard;
        oscard = _closure1_slot4;
        report = {};
        golfie = golfie.container;
        report['style'] = golfie;
        golfie = 11;
        golfie = romeon[golfie];
        golfie = option.bind(tangon)(golfie);
        option = golfie.TableRowGroup;
        golfie = {};
        golfie['title'] = offset;
        offset = yankee.map;
        verify = function(argFoo) {
            entity = argFoo;
            report = _closure1_slot5;
            zuuluu = _closure1_slot0;
            option = _closure1_slot2;
            michal = 12;
            michal = option[michal];
            tangon = undefined;
            michal = zuuluu.bind(tangon)(michal);
            zuuluu = michal.TableRow;
            michal = {};
            golfie = _closure1_slot1;
            oscard = 13;
            oscard = option[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            oscard['game'] = entity;
            verify = _closure2_slot1;
            option = entity.id;
            option = verify[option];
            oscard['activityLevel'] = option;
            oscard = report.bind(tangon)(golfie, oscard);
            michal['icon'] = oscard;
            oscard = entity.name;
            michal['label'] = oscard;
            entity = entity.id;
            entity = report.bind(tangon)(zuuluu, michal, entity);
            return entity;
        };
        verify = offset.bind(yankee)(verify);
        golfie['children'] = verify;
        golfie = zuuluu.bind(tangon)(option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();