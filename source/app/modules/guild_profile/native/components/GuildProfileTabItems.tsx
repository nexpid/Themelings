// app/modules/guild_profile/native/components/GuildProfileTabItems.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    option = argCor;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = option;
    var _closure1_slot3 = oscard;
    entity = global;
    offset = entity.Object;
    verify = offset.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = verify.bind(offset)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = option.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ScrollView;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticEvents;
    var _closure1_slot9 = golfie;
    golfie = tangon.AnalyticsObjects;
    var _closure1_slot10 = golfie;
    tangon = tangon.AnalyticsSections;
    var _closure1_slot11 = tangon;
    tangon = 6;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot12 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot13 = tangon;
    tangon = 24;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_profile/native/components/GuildProfileTabItems.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            ctrled = entity.guild;
            var _closure2_slot0 = ctrled;
            romeon = _closure1_slot0;
            option = _closure1_slot3;
            entity = 7;
            entity = option[entity];
            tangon = undefined;
            michal = romeon.bind(tangon)(entity);
            entity = michal.useGuildProfilePermissions;
            entity = entity.bind(michal)(ctrled);
            verify = entity.canAccessSettings;
            entity = 8;
            entity = option[entity];
            report = romeon.bind(tangon)(entity);
            zuuluu = report.useStateFromStores;
            entity = _closure1_slot7;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot7;
                michal = zuuluu.getChannels;
                entity = _closure2_slot0;
                entity = entity.id;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity = zuuluu.bind(report)(michal, entity);
            var _closure2_slot1 = entity;
            michal = 9;
            michal = option[michal];
            zuuluu = romeon.bind(tangon)(michal);
            michal = zuuluu.shouldRenderInvite;
            yankee = michal.bind(zuuluu)(entity, ctrled);
            report = _closure1_slot4;
            zuuluu = report.useCallback;
            michal = new Array(2);
            michal[0] = entity;
            michal[1] = ctrled;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    report = _closure1_slot8;
                    zuuluu = report.getChannelId;
                    entity = _closure2_slot0;
                    entity = entity.id;
                    golfie = zuuluu.bind(report)(entity);
                    report = _closure1_slot0;
                    zuuluu = _closure1_slot3;
                    entity = 9;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    oscard = report.bind(entity)(zuuluu);
                    report = oscard.getInviteChannelId;
                    zuuluu = _closure2_slot1;
                    oscard = report.bind(oscard)(golfie, zuuluu);
                    report = _closure1_slot6;
                    zuuluu = report.getChannel;
                    zuuluu = zuuluu.bind(report)(oscard);
                    report = null;
                    if(!(report == zuuluu)) { _fun00004_ip = 112; continue _fun00003 }
 88:
                    option = _closure1_slot7;
                    golfie = option.getDefaultChannel;
                    oscard = _closure2_slot0;
                    oscard = oscard.id;
                    zuuluu = golfie.bind(option)(oscard);
 112:
                    if(!(report != zuuluu)) { _fun00004_ip = 168; continue _fun00003 }
 116:
                    report = _closure1_slot0;
                    oscard = _closure1_slot3;
                    tangon = 10;
                    tangon = oscard[tangon];
                    golfie = report.bind(entity)(tangon);
                    oscard = golfie.handleOpenInviteActionsheet;
                    romeon = _closure2_slot0;
                    yankee = zuuluu.id;
                    offset = _closure2_slot1;
                    verify = 'Server Profile';
                    foxtra = golfie;
                    michal = foxtra[oscard](romeon, yankee, offset, verify, option);
 168:
                    return entity;
                }
            };
            entity = zuuluu.bind(report)(entity, michal);
            var _closure2_slot2 = entity;
            zuuluu = _closure1_slot12;
            michal = _closure1_slot5;
            entity = {};
            backup = true;
            entity['horizontal'] = backup;
            report = {};
            oscard = '100%';
            report['minWidth'] = oscard;
            entity['contentContainerStyle'] = report;
            golfie = _closure1_slot13;
            report = 11;
            report = option[report];
            report = romeon.bind(tangon)(report);
            oscard = report.ButtonGroup;
            report = {};
            offset = 'horizontal';
            report['direction'] = offset;
            offset = 12;
            option = option[offset];
            option = romeon.bind(tangon)(option);
            romeon = option.IconButton;
            option = {};
            result = 'secondary';
            option['variant'] = result;
            output = ctrled.premiumSubscriberCount;
            sizing = 0;
            if(!(!(output > sizing))) { _fun00002_ip = 329; continue _fun00001 }
 272:
            update = _closure1_slot0;
            source = _closure1_slot3;
            sizing = 13;
            output = source[sizing];
            output = update.bind(tangon)(output);
            echoed = output.intl;
            output = echoed.string;
            sizing = source[sizing];
            sizing = update.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.Uj0md3;
            sizing = output.bind(echoed)(sizing);
            _fun00002_ip = 398; continue _fun00001;
 329:
            echoed = _closure1_slot0;
            vacuum = _closure1_slot3;
            output = 13;
            update = vacuum[output];
            update = echoed.bind(tangon)(update);
            source = update.intl;
            update = source.formatToPlainString;
            output = vacuum[output];
            output = echoed.bind(tangon)(output);
            output = output.t;
            echoed = output.pob/cH;
            output = {};
            ctrled = ctrled.premiumSubscriberCount;
            output['subscriptions'] = ctrled;
            sizing = update.bind(source)(echoed, output);
 398:
            option['label'] = sizing;
            echoed = _closure1_slot12;
            output = _closure1_slot0;
            ctrled = _closure1_slot3;
            sizing = 14;
            sizing = ctrled[sizing];
            sizing = output.bind(tangon)(sizing);
            output = sizing.BoostTier2Icon;
            sizing = {};
            source = _closure1_slot1;
            update = 15;
            update = ctrled[update];
            update = source.bind(tangon)(update);
            update = update.unsafe_rawColors;
            update = update.GUILD_BOOSTING_PINK;
            sizing['color'] = update;
            sizing = echoed.bind(tangon)(output, sizing);
            option['icon'] = sizing;
            option['grow'] = backup;
            sizing = function() { // Original name: onPress
                report = _closure1_slot1;
                tangon = _closure1_slot3;
                entity = 16;
                zuuluu = tangon[entity];
                entity = undefined;
                option = report.bind(entity)(zuuluu);
                golfie = option.trackWithMetadata;
                zuuluu = _closure1_slot9;
                oscard = zuuluu.PREMIUM_GUILD_PROMOTION_OPENED;
                zuuluu = {};
                verify = {};
                offset = _closure1_slot11;
                offset = offset.GUILD_POPOUT;
                verify['section'] = offset;
                offset = _closure1_slot10;
                offset = offset.BOOST_GEM_ICON;
                verify['object'] = offset;
                zuuluu['location'] = verify;
                zuuluu = golfie.bind(option)(oscard, zuuluu);
                zuuluu = 17;
                zuuluu = tangon[zuuluu];
                report = report.bind(entity)(zuuluu);
                zuuluu = report.hideActionSheet;
                zuuluu = zuuluu.bind(report)();
                zuuluu = _closure1_slot2;
                michal = 18;
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.openApplyBoostModal;
                michal = _closure2_slot0;
                michal = michal.id;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            option['onPress'] = sizing;
            romeon = zuuluu.bind(tangon)(romeon, option);
            option = new Array(4);
            option[0] = romeon;
            if(!yankee) { _fun00002_ip = 637; continue _fun00001 }
 511:
            output = _closure1_slot12;
            vacuum = _closure1_slot0;
            source = _closure1_slot3;
            romeon = source[offset];
            romeon = vacuum.bind(tangon)(romeon);
            sizing = romeon.IconButton;
            romeon = {};
            romeon['variant'] = result;
            echoed = 13;
            update = source[echoed];
            update = vacuum.bind(tangon)(update);
            ctrled = update.intl;
            update = ctrled.string;
            echoed = source[echoed];
            echoed = vacuum.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.VINpSE;
            echoed = update.bind(ctrled)(echoed);
            romeon['label'] = echoed;
            update = _closure1_slot1;
            echoed = 19;
            echoed = source[echoed];
            echoed = update.bind(tangon)(echoed);
            romeon['icon'] = echoed;
            romeon['grow'] = backup;
            echoed = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot3;
                entity = 17;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                michal = _closure2_slot2;
                michal = michal.bind(entity)();
                return entity;
            };
            romeon['onPress'] = echoed;
            yankee = output.bind(tangon)(sizing, romeon);
 637:
            option[1] = yankee;
            output = _closure1_slot12;
            vacuum = _closure1_slot0;
            source = _closure1_slot3;
            yankee = source[offset];
            yankee = vacuum.bind(tangon)(yankee);
            romeon = yankee.IconButton;
            yankee = {};
            yankee['variant'] = result;
            sizing = 13;
            echoed = source[sizing];
            echoed = vacuum.bind(tangon)(echoed);
            ctrled = echoed.intl;
            update = ctrled.string;
            echoed = source[sizing];
            echoed = vacuum.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.HcoRu7;
            echoed = update.bind(ctrled)(echoed);
            yankee['label'] = echoed;
            update = _closure1_slot1;
            echoed = 20;
            echoed = source[echoed];
            echoed = update.bind(tangon)(echoed);
            yankee['icon'] = echoed;
            yankee['grow'] = backup;
            echoed = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot3;
                entity = 17;
                michal = tangon[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                michal = report.hideActionSheet;
                michal = michal.bind(report)();
                michal = 21;
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.open;
                michal = _closure2_slot0;
                michal = michal.id;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            yankee['onPress'] = echoed;
            yankee = output.bind(tangon)(romeon, yankee);
            option[2] = yankee;
            if(!verify) { _fun00002_ip = 900; continue _fun00001 }
 777:
            romeon = _closure1_slot12;
            update = _closure1_slot0;
            output = _closure1_slot3;
            offset = output[offset];
            offset = update.bind(tangon)(offset);
            yankee = offset.IconButton;
            offset = {};
            offset['variant'] = result;
            result = output[sizing];
            result = update.bind(tangon)(result);
            echoed = result.intl;
            result = echoed.string;
            sizing = output[sizing];
            sizing = update.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.3D5yo6;
            sizing = result.bind(echoed)(sizing);
            offset['label'] = sizing;
            sizing = _closure1_slot1;
            kiloes = 22;
            kiloes = output[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            offset['icon'] = kiloes;
            offset['grow'] = backup;
            foxtra = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot3;
                entity = 17;
                michal = tangon[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                michal = report.hideActionSheet;
                michal = michal.bind(report)();
                michal = 23;
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.open;
                michal = _closure2_slot0;
                michal = michal.id;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            offset['onPress'] = foxtra;
            verify = romeon.bind(tangon)(yankee, offset);
 900:
            option[3] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();