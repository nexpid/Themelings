// app/modules/guild_profile/native/components/GuildDiscoverableProfile.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    yankee = 1;
    tangon = oscard[yankee];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.ActivityIndicator;
    var _closure1_slot4 = golfie;
    golfie = tangon.Image;
    var _closure1_slot5 = golfie;
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticEvents;
    var _closure1_slot9 = golfie;
    golfie = tangon.AnalyticsObjects;
    var _closure1_slot10 = golfie;
    golfie = tangon.AnalyticsPages;
    var _closure1_slot11 = golfie;
    golfie = tangon.AnalyticsSections;
    var _closure1_slot12 = golfie;
    tangon = tangon.ThemeTypes;
    var _closure1_slot13 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot14 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot15 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot16 = tangon;
    offset = 8;
    tangon = oscard[offset];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['height'] = yankee;
    yankee = 9;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_MODIFIER_ACCENT;
    verify['backgroundColor'] = yankee;
    tangon['separator'] = verify;
    verify = {'height': 68, 'width': 68};
    tangon['unavailableAvatar'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'flexWrap': 'wrap'};
    tangon['header'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tangon['description'] = verify;
    verify = {'marginTop': 16, 'marginBottom': 16};
    tangon['button'] = verify;
    verify = {};
    offset = 100;
    verify['height'] = offset;
    tangon['loadingSpinner'] = verify;
    verify = {'padding': 12, 'marginTop': 4294967248, 'marginBottom': 16};
    tangon['unavailableContent'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot17 = tangon;
    tangon = function(argFoo) { // Original name: UnavailableGuild
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            romeon = entity.screenWidth;
            entity = _closure1_slot17;
            tangon = undefined;
            foxtra = entity.bind(tangon)();
            kiloes = _closure1_slot0;
            sizing = _closure1_slot2;
            entity = 12;
            entity = sizing[entity];
            michal = kiloes.bind(tangon)(entity);
            entity = michal.useThemeContext;
            entity = entity.bind(michal)();
            michal = entity.theme;
            entity = _closure1_slot13;
            entity = entity.DARK;
            if(!(entity !== michal)) { _fun00002_ip = 110; continue _fun00001 }
 72:
            entity = _closure1_slot13;
            entity = entity.LIGHT;
            oscard = undefined;
            if(!(entity === michal)) { _fun00002_ip = 130; continue _fun00001 }
 88:
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 7;
            entity = zuuluu[entity];
            oscard = michal.bind(tangon)(entity);
            _fun00002_ip = 130; continue _fun00001;
 110:
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 6;
            entity = zuuluu[entity];
            oscard = michal.bind(tangon)(entity);
 130:
            zuuluu = _closure1_slot15;
            michal = _closure1_slot16;
            entity = {};
            yankee = _closure1_slot14;
            verify = _closure1_slot5;
            report = {};
            golfie = {};
            option = '100%';
            golfie['width'] = option;
            option = 0.56;
            option = option * romeon;
            golfie['height'] = option;
            report['style'] = golfie;
            report['source'] = oscard;
            oscard = yankee.bind(tangon)(verify, report);
            report = new Array(2);
            report[0] = oscard;
            golfie = _closure1_slot6;
            oscard = {};
            option = foxtra.unavailableContent;
            oscard['style'] = option;
            option = {};
            romeon = foxtra.unavailableAvatar;
            option['style'] = romeon;
            romeon = _closure1_slot1;
            offset = 13;
            offset = sizing[offset];
            offset = romeon.bind(tangon)(offset);
            option['source'] = offset;
            verify = yankee.bind(tangon)(verify, option);
            option = new Array(3);
            option[0] = verify;
            offset = {};
            verify = foxtra.header;
            offset['style'] = verify;
            verify = 14;
            romeon = sizing[verify];
            romeon = kiloes.bind(tangon)(romeon);
            output = romeon.Text;
            backup = {'lineClamp': 1, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            romeon = 15;
            result = sizing[romeon];
            result = kiloes.bind(tangon)(result);
            update = result.intl;
            echoed = update.string;
            result = sizing[romeon];
            result = kiloes.bind(tangon)(result);
            result = result.t;
            result = result.+kdPHx;
            result = echoed.bind(update)(result);
            backup['children'] = result;
            backup = yankee.bind(tangon)(output, backup);
            offset['children'] = backup;
            offset = yankee.bind(tangon)(golfie, offset);
            option[1] = offset;
            verify = sizing[verify];
            verify = kiloes.bind(tangon)(verify);
            offset = verify.Text;
            verify = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            foxtra = foxtra.description;
            verify['style'] = foxtra;
            foxtra = sizing[romeon];
            foxtra = kiloes.bind(tangon)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            romeon = sizing[romeon];
            romeon = kiloes.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.Yn1+xs;
            romeon = foxtra.bind(backup)(romeon);
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[2] = verify;
            oscard['children'] = option;
            oscard = zuuluu.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot18 = tangon;
    tangon = function(argFoo) { // Original name: GuildDiscoverableProfileActionSheet
        entity = argFoo;
        yankee = entity.guild;
        var _closure2_slot0 = yankee;
        entity = entity.channelId;
        var _closure2_slot1 = entity;
        romeon = _closure1_slot1;
        result = _closure1_slot2;
        entity = 16;
        entity = result[entity];
        tangon = undefined;
        entity = romeon.bind(tangon)(entity);
        entity = entity.bind(tangon)();
        verify = entity.bottom;
        entity = yankee.id;
        var _closure2_slot2 = entity;
        oscard = _closure1_slot3;
        zuuluu = oscard.useEffect;
        michal = new Array(1);
        michal[0] = entity;
        entity = function() {
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 17;
            zuuluu = zuuluu[entity];
            entity = undefined;
            report = tangon.bind(entity)(zuuluu);
            tangon = report.track;
            michal = _closure1_slot9;
            zuuluu = michal.OPEN_POPOUT;
            michal = {};
            oscard = 'Guild Sheet';
            michal['type'] = oscard;
            oscard = _closure2_slot2;
            michal['guild_id'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        entity = zuuluu.bind(oscard)(entity, michal);
        zuuluu = _closure1_slot14;
        output = _closure1_slot0;
        entity = 18;
        entity = result[entity];
        entity = output.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        oscard = true;
        entity['scrollable'] = oscard;
        golfie = _closure1_slot15;
        report = 19;
        report = result[report];
        report = output.bind(tangon)(report);
        oscard = report.BottomSheetScrollView;
        report = {};
        option = {};
        option['paddingBottom'] = verify;
        report['contentContainerStyle'] = option;
        option = 20;
        option = result[option];
        verify = romeon.bind(tangon)(option);
        option = {};
        option['guild'] = yankee;
        verify = zuuluu.bind(tangon)(verify, option);
        option = new Array(3);
        option[0] = verify;
        verify = 21;
        verify = result[verify];
        offset = romeon.bind(tangon)(verify);
        verify = {};
        yankee = yankee.id;
        verify['guildId'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[1] = verify;
        verify = 22;
        verify = result[verify];
        offset = romeon.bind(tangon)(verify);
        verify = {};
        yankee = {};
        backup = 'transparent';
        yankee['backgroundColor'] = backup;
        verify['cardStyle'] = yankee;
        yankee = 23;
        yankee = result[yankee];
        romeon = romeon.bind(tangon)(yankee);
        yankee = {};
        backup = 15;
        kiloes = result[backup];
        kiloes = output.bind(tangon)(kiloes);
        sizing = kiloes.intl;
        kiloes = sizing.string;
        backup = result[backup];
        backup = output.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.xSnNWl;
        backup = kiloes.bind(sizing)(backup);
        yankee['text'] = backup;
        foxtra = function() { // Original name: onPress
            michal = _closure2_slot0;
            oscard = michal.id;
            golfie = _closure2_slot1;
            report = {};
            entity = _closure1_slot11;
            entity = entity.GUILD_CHANNEL;
            report['page'] = entity;
            entity = _closure1_slot12;
            entity = entity.GUILD_POPOUT;
            report['section'] = entity;
            entity = _closure1_slot10;
            entity = entity.CARD;
            report['object'] = entity;
            option = _closure1_slot1;
            tangon = _closure1_slot2;
            entity = 10;
            zuuluu = tangon[entity];
            entity = undefined;
            verify = option.bind(entity)(zuuluu);
            option = verify.hideActionSheet;
            zuuluu = global;
            zuuluu = zuuluu.HermesInternal;
            offset = zuuluu.concat;
            zuuluu = 'GuildDiscoverableProfile:';
            zuuluu = offset.bind(zuuluu)(oscard);
            zuuluu = option.bind(verify)(zuuluu);
            zuuluu = _closure1_slot0;
            michal = 11;
            michal = tangon[michal];
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.startLurking;
            michal = {};
            michal['channelId'] = golfie;
            michal = zuuluu.bind(tangon)(oscard, report, michal);
            return entity;
        };
        yankee['onPress'] = foxtra;
        yankee = zuuluu.bind(tangon)(romeon, yankee);
        verify['children'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[2] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot19 = tangon;
    tangon = function() { // Original name: LoadingActionSheet
        entity = _closure1_slot17;
        tangon = undefined;
        golfie = entity.bind(tangon)();
        zuuluu = _closure1_slot14;
        michal = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 18;
        entity = oscard[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        oscard = _closure1_slot4;
        report = {};
        golfie = golfie.loadingSpinner;
        report['style'] = golfie;
        golfie = 'large';
        report['size'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot20 = tangon;
    tangon = function() { // Original name: UnavailableActionSheet
        michal = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 24;
        entity = oscard[entity];
        tangon = undefined;
        option = michal.bind(tangon)(entity);
        golfie = option.useStateFromStores;
        entity = _closure1_slot7;
        zuuluu = new Array(1);
        zuuluu[0] = entity;
        entity = function() {
            michal = _closure1_slot7;
            entity = michal.getWidth;
            entity = entity.bind(michal)();
            return entity;
        };
        golfie = golfie.bind(option)(zuuluu, entity);
        zuuluu = _closure1_slot14;
        entity = 18;
        entity = oscard[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        oscard = _closure1_slot18;
        report = {};
        report['screenWidth'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot21 = tangon;
    tangon = function(argFoo) { // Original name: GuildProfileActionSheet
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            offset = entity.guildId;
            var _closure2_slot0 = offset;
            oscard = entity.channelId;
            tangon = _closure1_slot0;
            report = _closure1_slot2;
            entity = 24;
            entity = report[entity];
            report = undefined;
            verify = tangon.bind(report)(entity);
            option = verify.useStateFromStoresObject;
            entity = _closure1_slot8;
            golfie = new Array(1);
            golfie[0] = entity;
            tangon = new Array(1);
            tangon[0] = offset;
            entity = function() {
                entity = {};
                tangon = _closure1_slot8;
                michal = tangon.getGuild;
                zuuluu = _closure2_slot0;
                michal = michal.bind(tangon)(zuuluu);
                entity['guild'] = michal;
                michal = tangon.isFetchingGuild;
                michal = michal.bind(tangon)(zuuluu);
                entity['loading'] = michal;
                return entity;
            };
            entity = option.bind(verify)(golfie, entity, tangon);
            golfie = entity.guild;
            entity = entity.loading;
            verify = _closure1_slot3;
            option = verify.useEffect;
            tangon = new Array(1);
            tangon[0] = offset;
            zuuluu = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 25;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.fetchGuildForPopout;
                michal = _closure2_slot0;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            zuuluu = option.bind(verify)(zuuluu, tangon);
            option = _closure1_slot14;
            tangon = _closure1_slot20;
            zuuluu = {};
            tangon = option.bind(report)(tangon, zuuluu);
            if(entity) { _fun00004_ip = 164; continue _fun00003 }
 140:
            entity = null;
            if(!(entity == golfie)) { _fun00004_ip = 164; continue _fun00003 }
 146:
            option = _closure1_slot14;
            zuuluu = _closure1_slot21;
            entity = {};
            entity = option.bind(report)(zuuluu, entity);
            _fun00004_ip = 197; continue _fun00003;
 164:
            zuuluu = null;
            entity = tangon;
            if(!(zuuluu != golfie)) { _fun00004_ip = 197; continue _fun00003 }
 173:
            tangon = _closure1_slot14;
            zuuluu = _closure1_slot19;
            michal = {};
            michal['guild'] = golfie;
            michal['channelId'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 197:
            return entity;
        }
    };
    var _closure1_slot22 = tangon;
    tangon = 28;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_profile/native/components/GuildDiscoverableProfile.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            oscard = entity.guildId;
            golfie = entity.channelId;
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 26;
            entity = tangon[entity];
            report = undefined;
            zuuluu = zuuluu.bind(report)(entity);
            entity = zuuluu.useNewGuildProfileExperiment;
            entity = entity.bind(zuuluu)();
            tangon = _closure1_slot14;
            if(entity) { _fun00006_ip = 77; continue _fun00005 }
 55:
            zuuluu = _closure1_slot22;
            entity = {};
            entity['guildId'] = oscard;
            entity['channelId'] = golfie;
            entity = tangon.bind(report)(zuuluu, entity);
            _fun00006_ip = 109; continue _fun00005;
 77:
            zuuluu = _closure1_slot1;
            golfie = _closure1_slot2;
            michal = 27;
            michal = golfie[michal];
            zuuluu = zuuluu.bind(report)(michal);
            michal = {};
            michal['guildId'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 109:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();