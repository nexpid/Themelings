// app/modules/channel_list_v2/native/items/RedesignVoiceUserSummary.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot5 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/channel_list_v2/native/items/RedesignVoiceUserSummary.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: RedesignVoiceUserSummary
        entity = argFoo;
        foxtrot = entity.channels;
        var _closure2_slot0 = foxtrot;
        oscar = entity.guildId;
        mike = _closure1_slot1;
        options = _closure1_slot2;
        tango = 3;
        report = options[tango];
        tango = undefined;
        report = mike.bind(tango)(report);
        yankee = report.bind(tango)(oscar);
        var _closure2_slot1 = yankee;
        verify = _closure1_slot0;
        report = 4;
        report = options[report];
        romeo = verify.bind(tango)(report);
        offset = romeo.useStateFromStores;
        report = _closure1_slot4;
        golf = new Array(1);
        golf[0] = report;
        report = function() {
            mike = _closure1_slot4;
            entity = mike.getVoiceChannelId;
            entity = entity.bind(mike)();
            return entity;
        };
        romeo = offset.bind(romeo)(golf, report);
        var _closure2_slot2 = romeo;
        backup = _closure1_slot3;
        offset = backup.useMemo;
        golf = new Array(3);
        golf[0] = foxtrot;
        golf[1] = romeo;
        golf[2] = yankee;
        report = function() {
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 5;
            mike = mike[entity];
            entity = undefined;
            report = zulu.bind(entity)(mike);
            tango = report.isAnyVoiceStateStage;
            zulu = _closure2_slot0;
            mike = _closure2_slot2;
            entity = _closure2_slot1;
            entity = tango.bind(report)(zulu, mike, entity);
            return entity;
        };
        report = offset.bind(backup)(report, golf);
        golf = 5;
        golf = options[golf];
        offset = verify.bind(tango)(golf);
        verify = offset.computeSummarizedVoiceUsers;
        golf = {};
        golf['channels'] = foxtrot;
        golf['selectedChannelId'] = tango;
        golf['selectedVoiceChannelId'] = romeo;
        golf['voiceStates'] = yankee;
        verify = verify.bind(offset)(golf);
        golf = verify.filter;
        zulu = function(argFoo) {
            mike = null;
            entity = argFoo;
            entity = mike != entity;
            return entity;
        };
        golf = golf.bind(verify)(zulu);
        zulu = _closure1_slot5;
        entity = 6;
        entity = options[entity];
        mike = mike.bind(tango)(entity);
        entity = {'users': null, 'max': 8, 'renderIcon': true};
        entity['users'] = golf;
        entity['guildId'] = oscar;
        entity['stageIcon'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();