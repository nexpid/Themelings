// app/modules/channel_list_v2/native/items/DMChannel.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    yankee = tangon.CHANNEL_MARGIN_VERTICAL;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UnreadSetting;
    var _closure1_slot6 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot7 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    offset['marginVertical'] = yankee;
    yankee = 8;
    offset['marginHorizontal'] = yankee;
    yankee = 7;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.md;
    offset['borderRadius'] = yankee;
    tangon['container'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot8 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        michal = argFoo;
        offset = michal.channel;
        var _closure2_slot0 = offset;
        verify = michal.selected;
        michal = _closure1_slot8;
        tangon = undefined;
        yankee = michal.bind(tangon)();
        oscard = _closure1_slot3;
        report = oscard.useCallback;
        michal = offset.id;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 8;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.openChannelLongPressActionSheet;
            michal = _closure2_slot0;
            michal = michal.id;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        backup = report.bind(oscard)(michal, zuuluu);
        report = oscard.useCallback;
        michal = offset.id;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 9;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.transitionToChannel;
            michal = _closure2_slot0;
            michal = michal.id;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        kiloes = report.bind(oscard)(michal, zuuluu);
        zuuluu = _closure1_slot0;
        foxtra = _closure1_slot2;
        michal = 10;
        report = foxtra[michal];
        sizing = zuuluu.bind(tangon)(report);
        romeon = sizing.useStateFromStoresObject;
        report = _closure1_slot4;
        option = new Array(1);
        option[0] = report;
        report = offset.id;
        oscard = new Array(1);
        oscard[0] = report;
        report = function() {
            entity = {};
            tangon = _closure1_slot4;
            report = tangon.hasUnread;
            michal = _closure2_slot0;
            zuuluu = michal.id;
            zuuluu = report.bind(tangon)(zuuluu);
            entity['hasUnread'] = zuuluu;
            zuuluu = tangon.getMentionCount;
            michal = michal.id;
            michal = zuuluu.bind(tangon)(michal);
            entity['mentionCount'] = michal;
            return entity;
        };
        report = romeon.bind(sizing)(option, report, oscard);
        option = report.hasUnread;
        oscard = report.mentionCount;
        michal = foxtra[michal];
        romeon = zuuluu.bind(tangon)(michal);
        report = romeon.useStateFromStores;
        michal = _closure1_slot5;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = new Array(1);
        michal[0] = offset;
        entity = function() {
            tangon = _closure1_slot5;
            zuuluu = tangon.isChannelMuted;
            entity = _closure2_slot0;
            michal = entity.getGuildId;
            michal = michal.bind(entity)();
            entity = entity.id;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        report = report.bind(romeon)(zuuluu, entity, michal);
        zuuluu = _closure1_slot7;
        romeon = _closure1_slot1;
        entity = 11;
        entity = foxtra[entity];
        michal = romeon.bind(tangon)(entity);
        entity = {};
        entity['onPress'] = kiloes;
        entity['onLongPress'] = backup;
        yankee = yankee.container;
        entity['style'] = yankee;
        yankee = true;
        entity['accessible'] = yankee;
        yankee = 'button';
        entity['accessibilityRole'] = yankee;
        yankee = 12;
        yankee = foxtra[yankee];
        romeon = romeon.bind(tangon)(yankee);
        yankee = {};
        yankee['channel'] = offset;
        yankee['unread'] = option;
        yankee['mentionCount'] = oscard;
        yankee = romeon.bind(tangon)(yankee);
        entity['accessibilityLabel'] = yankee;
        yankee = {};
        yankee['selected'] = verify;
        entity['accessibilityState'] = yankee;
        entity['channel'] = offset;
        entity['selected'] = verify;
        entity['unread'] = option;
        golfie = _closure1_slot6;
        golfie = golfie.ALL_MESSAGES;
        entity['resolvedUnreadSetting'] = golfie;
        entity['mentionCount'] = oscard;
        entity['muted'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/channel_list_v2/native/items/DMChannel.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();