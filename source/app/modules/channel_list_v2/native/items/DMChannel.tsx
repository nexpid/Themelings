// app/modules/channel_list_v2/native/items/DMChannel.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot3 = golf;
    tango = 1;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    yankee = tango.CHANNEL_MARGIN_VERTICAL;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.UnreadSetting;
    var _closure1_slot6 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot7 = tango;
    tango = 6;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {};
    offset['marginVertical'] = yankee;
    yankee = 8;
    offset['marginHorizontal'] = yankee;
    yankee = 7;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.md;
    offset['borderRadius'] = yankee;
    tango['container'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot8 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        mike = argFoo;
        offset = mike.channel;
        var _closure2_slot0 = offset;
        verify = mike.selected;
        mike = _closure1_slot8;
        tango = undefined;
        yankee = mike.bind(tango)();
        oscar = _closure1_slot3;
        report = oscar.useCallback;
        mike = offset.id;
        zulu = new Array(1);
        zulu[0] = mike;
        mike = function() {
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 8;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.openChannelLongPressActionSheet;
            mike = _closure2_slot0;
            mike = mike.id;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        backup = report.bind(oscar)(mike, zulu);
        report = oscar.useCallback;
        mike = offset.id;
        zulu = new Array(1);
        zulu[0] = mike;
        mike = function() {
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 9;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.transitionToChannel;
            mike = _closure2_slot0;
            mike = mike.id;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        kilo = report.bind(oscar)(mike, zulu);
        zulu = _closure1_slot0;
        foxtrot = _closure1_slot2;
        mike = 10;
        report = foxtrot[mike];
        sizing = zulu.bind(tango)(report);
        romeo = sizing.useStateFromStoresObject;
        report = _closure1_slot4;
        options = new Array(1);
        options[0] = report;
        report = offset.id;
        oscar = new Array(1);
        oscar[0] = report;
        report = function() {
            entity = {};
            tango = _closure1_slot4;
            report = tango.hasUnread;
            mike = _closure2_slot0;
            zulu = mike.id;
            zulu = report.bind(tango)(zulu);
            entity['hasUnread'] = zulu;
            zulu = tango.getMentionCount;
            mike = mike.id;
            mike = zulu.bind(tango)(mike);
            entity['mentionCount'] = mike;
            return entity;
        };
        report = romeo.bind(sizing)(options, report, oscar);
        options = report.hasUnread;
        oscar = report.mentionCount;
        mike = foxtrot[mike];
        romeo = zulu.bind(tango)(mike);
        report = romeo.useStateFromStores;
        mike = _closure1_slot5;
        zulu = new Array(1);
        zulu[0] = mike;
        mike = new Array(1);
        mike[0] = offset;
        entity = function() {
            tango = _closure1_slot5;
            zulu = tango.isChannelMuted;
            entity = _closure2_slot0;
            mike = entity.getGuildId;
            mike = mike.bind(entity)();
            entity = entity.id;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        };
        report = report.bind(romeo)(zulu, entity, mike);
        zulu = _closure1_slot7;
        romeo = _closure1_slot1;
        entity = 11;
        entity = foxtrot[entity];
        mike = romeo.bind(tango)(entity);
        entity = {};
        entity['onPress'] = kilo;
        entity['onLongPress'] = backup;
        yankee = yankee.container;
        entity['style'] = yankee;
        yankee = true;
        entity['accessible'] = yankee;
        yankee = 'button';
        entity['accessibilityRole'] = yankee;
        yankee = 12;
        yankee = foxtrot[yankee];
        romeo = romeo.bind(tango)(yankee);
        yankee = {};
        yankee['channel'] = offset;
        yankee['unread'] = options;
        yankee['mentionCount'] = oscar;
        yankee = romeo.bind(tango)(yankee);
        entity['accessibilityLabel'] = yankee;
        yankee = {};
        yankee['selected'] = verify;
        entity['accessibilityState'] = yankee;
        entity['channel'] = offset;
        entity['selected'] = verify;
        entity['unread'] = options;
        golf = _closure1_slot6;
        golf = golf.ALL_MESSAGES;
        entity['resolvedUnreadSetting'] = golf;
        entity['mentionCount'] = oscar;
        entity['muted'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/channel_list_v2/native/items/DMChannel.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();