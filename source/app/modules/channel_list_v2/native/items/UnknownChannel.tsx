// app/modules/channel_list_v2/native/items/UnknownChannel.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: handlePress
        oscard = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 6;
        michal = golfie[entity];
        entity = undefined;
        tangon = oscard.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        option = 'UNKNOWN_CHANNEL_UPDATE_DISCORD';
        michal['key'] = option;
        offset = _closure1_slot0;
        report = 7;
        option = golfie[report];
        option = offset.bind(entity)(option);
        verify = option.intl;
        option = verify.string;
        report = golfie[report];
        report = offset.bind(entity)(report);
        report = report.t;
        report = report./ZjyYG;
        report = option.bind(verify)(report);
        michal['content'] = report;
        report = 8;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        michal['icon'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    var _closure1_slot7 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    yankee = tangon.CHANNEL_MARGIN_VERTICAL;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UnreadSetting;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    offset['marginVertical'] = yankee;
    yankee = 8;
    offset['marginHorizontal'] = yankee;
    yankee = 5;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.md;
    offset['borderRadius'] = yankee;
    tangon['container'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot6 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        michal = argFoo;
        golfie = michal.channel;
        var _closure2_slot0 = golfie;
        oscard = michal.selected;
        michal = _closure1_slot6;
        tangon = undefined;
        option = michal.bind(tangon)();
        verify = _closure1_slot3;
        zuuluu = verify.useCallback;
        offset = golfie.id;
        michal = new Array(1);
        michal[0] = offset;
        entity = function() {
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 9;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.openChannelLongPressActionSheet;
            michal = _closure2_slot0;
            michal = michal.id;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        verify = zuuluu.bind(verify)(entity, michal);
        zuuluu = _closure1_slot5;
        michal = _closure1_slot1;
        romeon = _closure1_slot2;
        entity = 10;
        entity = romeon[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        offset = _closure1_slot7;
        entity['onPress'] = offset;
        entity['onLongPress'] = verify;
        option = option.container;
        entity['style'] = option;
        option = true;
        entity['accessible'] = option;
        verify = _closure1_slot0;
        option = 7;
        offset = romeon[option];
        offset = verify.bind(tangon)(offset);
        yankee = offset.intl;
        offset = yankee.formatToPlainString;
        option = romeon[option];
        option = verify.bind(tangon)(option);
        option = option.t;
        verify = option.yjQ9Pz;
        option = {};
        romeon = golfie.name;
        option['channelName'] = romeon;
        option = offset.bind(yankee)(verify, option);
        entity['accessibilityLabel'] = option;
        option = {};
        option['selected'] = oscard;
        entity['accessibilityState'] = option;
        entity['channel'] = golfie;
        entity['selected'] = oscard;
        report = _closure1_slot4;
        report = report.ONLY_MENTIONS;
        entity['resolvedUnreadSetting'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/channel_list_v2/native/items/UnknownChannel.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();