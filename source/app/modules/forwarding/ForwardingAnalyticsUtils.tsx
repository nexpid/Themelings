// app/modules/forwarding/ForwardingAnalyticsUtils.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot5 = tango;
    tango = 6;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/forwarding/ForwardingAnalyticsUtils.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo, argBar, argBaz) { // Original name: trackForwardStart
        tango = _closure1_slot1;
        zulu = _closure1_slot2;
        entity = 3;
        zulu = zulu[entity];
        entity = undefined;
        report = tango.bind(entity)(zulu);
        tango = report.track;
        mike = _closure1_slot5;
        zulu = mike.FORWARD_MESSAGE_STARTED;
        mike = {};
        oscar = argFoo;
        mike['channel_id'] = oscar;
        oscar = argBar;
        mike['message_id'] = oscar;
        oscar = argBaz;
        mike['source'] = oscar;
        mike = tango.bind(report)(zulu, mike);
        return entity;
    };
    zulu['trackForwardStart'] = tango;
    tango = function(argFoo) { // Original name: trackForwardCancel
        entity = argFoo;
        verify = entity.channelId;
        options = entity.messageId;
        golf = entity.numDestinationChanges;
        oscar = entity.numQueryChanges;
        tango = _closure1_slot1;
        zulu = _closure1_slot2;
        entity = 3;
        zulu = zulu[entity];
        entity = undefined;
        report = tango.bind(entity)(zulu);
        tango = report.track;
        mike = _closure1_slot5;
        zulu = mike.FORWARD_MESSAGE_CANCELLED;
        mike = {};
        mike['channel_id'] = verify;
        mike['message_id'] = options;
        mike['num_destination_changes'] = golf;
        mike['num_query_changes'] = oscar;
        mike = tango.bind(report)(zulu, mike);
        return entity;
    };
    zulu['trackForwardCancel'] = tango;
    tango = function(argFoo) { // Original name: trackForwardSent
        _fun85920: for(var _fun85920_ip = 0; ; ) switch(_fun85920_ip) {
 0:
            entity = argFoo;
            report = entity.channelId;
            verify = entity.messageId;
            sizing = entity.hasError;
            kilo = entity.hasContextMessage;
            backup = entity.numDestinations;
            foxtrot = entity.numDestinationChanges;
            romeo = entity.numQueryChanges;
            yankee = entity.anyDestinationHasSlowmode;
            tango = entity.source;
            golf = _closure1_slot1;
            entity = _closure1_slot2;
            mike = 3;
            zulu = entity[mike];
            entity = undefined;
            offset = golf.bind(entity)(zulu);
            options = offset.track;
            zulu = _closure1_slot5;
            golf = zulu.FORWARD_MESSAGE_SENT;
            zulu = {};
            zulu['channel_id'] = report;
            zulu['message_id'] = verify;
            zulu['has_error'] = sizing;
            zulu['has_context_message'] = kilo;
            zulu['num_destinations'] = backup;
            zulu['num_destination_changes'] = foxtrot;
            zulu['num_query_changes'] = romeo;
            zulu['any_destination_has_slowmode'] = yankee;
            zulu = options.bind(offset)(golf, zulu);
            zulu = 'message-shortcut';
            if(!(zulu === tango)) { _fun85920_ip = 316; continue _fun85920 }
 164:
            tango = _closure1_slot4;
            zulu = tango.getChannel;
            options = zulu.bind(tango)(report);
            zulu = _closure1_slot1;
            golf = _closure1_slot2;
            mike = golf[mike];
            report = zulu.bind(entity)(mike);
            tango = report.track;
            mike = _closure1_slot5;
            zulu = mike.MESSAGE_SHORTCUT_ACTION_SENT;
            mike = {};
            offset = 'forward';
            mike['action'] = offset;
            mike['original_message_id'] = verify;
            offset = _closure1_slot0;
            verify = 4;
            golf = golf[verify];
            yankee = offset.bind(entity)(golf);
            offset = yankee.collectGuildAnalyticsMetadata;
            golf = null;
            romeo = golf == options;
            golf = undefined;
            if(romeo) { _fun85920_ip = 263; continue _fun85920 }
 258:
            golf = options.guild_id;
 263:
            result = offset.bind(yankee)(golf);
            echo = mike;
            golf = copyDataProperties(echo, result);
            golf = _closure1_slot0;
            oscar = _closure1_slot2;
            oscar = oscar[verify];
            golf = golf.bind(entity)(oscar);
            oscar = golf.collectChannelAnalyticsMetadata;
            result = oscar.bind(golf)(options);
            echo = mike;
            oscar = copyDataProperties(echo, result);
            mike = tango.bind(report)(zulu, mike);
 316:
            return entity;
        }
    };
    zulu['trackForwardSent'] = tango;
    tango = function(argFoo, argBar) { // Original name: trackForwardCopyLink
        tango = _closure1_slot1;
        zulu = _closure1_slot2;
        entity = 3;
        zulu = zulu[entity];
        entity = undefined;
        report = tango.bind(entity)(zulu);
        tango = report.track;
        mike = _closure1_slot5;
        zulu = mike.FORWARD_COPY_LINK;
        mike = {};
        oscar = argFoo;
        mike['channel_id'] = oscar;
        oscar = argBar;
        mike['message_id'] = oscar;
        mike = tango.bind(report)(zulu, mike);
        return entity;
    };
    zulu['trackForwardCopyLink'] = tango;
    tango = function() { // Original name: useTrackForwardAddRecipientOnce
        tango = _closure1_slot3;
        zulu = tango.useMemo;
        mike = function() {
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 5;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.once;
            entity = function(argFoo, argBar, argBaz) {
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 3;
                zulu = zulu[entity];
                entity = undefined;
                report = tango.bind(entity)(zulu);
                tango = report.track;
                mike = _closure1_slot5;
                zulu = mike.FORWARD_ADD_RECIPIENT;
                mike = {};
                oscar = argFoo;
                mike['channel_id'] = oscar;
                oscar = argBar;
                mike['message_id'] = oscar;
                oscar = argBaz;
                mike['has_query'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        entity = new Array(0);
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['useTrackForwardAddRecipientOnce'] = tango;
    tango = function() { // Original name: useTrackForwardEditSearchOnce
        tango = _closure1_slot3;
        zulu = tango.useMemo;
        mike = function() {
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 5;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.once;
            entity = function(argFoo, argBar) {
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 3;
                zulu = zulu[entity];
                entity = undefined;
                report = tango.bind(entity)(zulu);
                tango = report.track;
                mike = _closure1_slot5;
                zulu = mike.FORWARD_EDIT_SEARCH;
                mike = {};
                oscar = argFoo;
                mike['channel_id'] = oscar;
                oscar = argBar;
                mike['message_id'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        entity = new Array(0);
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['useTrackForwardEditSearchOnce'] = tango;
    mike = function() { // Original name: useTrackForwardEditContextMessageOnce
        tango = _closure1_slot3;
        zulu = tango.useMemo;
        mike = function() {
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 5;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.once;
            entity = function(argFoo, argBar) {
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 3;
                zulu = zulu[entity];
                entity = undefined;
                report = tango.bind(entity)(zulu);
                tango = report.track;
                mike = _closure1_slot5;
                zulu = mike.FORWARD_EDIT_CONTEXT_MESSAGE;
                mike = {};
                oscar = argFoo;
                mike['channel_id'] = oscar;
                oscar = argBar;
                mike['message_id'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        entity = new Array(0);
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['useTrackForwardEditContextMessageOnce'] = mike;
    return entity;
})();