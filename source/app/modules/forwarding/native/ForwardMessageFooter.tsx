// app/modules/forwarding/native/ForwardMessageFooter.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    option = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = option;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    golfie = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = option.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = option.bind(entity)(golfie);
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.DraftType;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot7 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/forwarding/native/ForwardMessageFooter.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ForwardMessageFooter
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            record = entity.message;
            var _closure2_slot0 = record;
            sequen = entity.forwardOptions;
            ctrled = entity.sendLabel;
            source = entity.canSend;
            oscard = entity.selectedDestinations;
            update = entity.isSending;
            papara = entity.onSend;
            var _closure2_slot1 = papara;
            verify = entity.showPreview;
            zuuluu = _closure1_slot0;
            option = _closure1_slot2;
            entity = 4;
            entity = option[entity];
            tangon = undefined;
            michal = zuuluu.bind(tangon)(entity);
            entity = michal.useTrackForwardEditContextMessageOnce;
            report = entity.bind(michal)();
            var _closure2_slot2 = report;
            entity = 5;
            michal = option[entity];
            yankee = zuuluu.bind(tangon)(michal);
            michal = yankee.useSelectedDestinationChannel;
            config = michal.bind(yankee)(oscard);
            michal = 6;
            michal = option[michal];
            foxtra = zuuluu.bind(tangon)(michal);
            romeon = foxtra.useStateFromStoresObject;
            michal = _closure1_slot5;
            yankee = new Array(1);
            yankee[0] = michal;
            michal = function() {
                tangon = _closure1_slot5;
                zuuluu = tangon.getDraft;
                michal = _closure2_slot0;
                michal = michal.channel_id;
                entity = _closure1_slot6;
                entity = entity.ForwardContextMessage;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            yankee = romeon.bind(foxtra)(yankee, michal);
            cntext = _closure1_slot4;
            michal = cntext.useState;
            romeon = michal.bind(cntext)(yankee);
            yankee = _closure1_slot3;
            michal = 2;
            romeon = yankee.bind(tangon)(romeon, michal);
            michal = 0;
            sizing = romeon[michal];
            var _closure2_slot3 = sizing;
            yankee = 1;
            romeon = romeon[yankee];
            var _closure2_slot4 = romeon;
            foxtra = cntext.useCallback;
            yankee = new Array(2);
            yankee[0] = record;
            yankee[1] = report;
            report = function(argFoo) {
                tangon = _closure2_slot4;
                entity = undefined;
                zuuluu = argFoo;
                zuuluu = tangon.bind(entity)(zuuluu);
                tangon = _closure2_slot2;
                michal = _closure2_slot0;
                zuuluu = michal.channel_id;
                michal = michal.id;
                michal = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            kiloes = foxtra.bind(cntext)(report, yankee);
            foxtra = cntext.useEffect;
            yankee = new Array(2);
            yankee[0] = sizing;
            report = record.channel_id;
            yankee[1] = report;
            report = function() {
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 7;
                zuuluu = zuuluu[entity];
                entity = undefined;
                oscard = tangon.bind(entity)(zuuluu);
                report = oscard.saveDraft;
                tangon = _closure2_slot0;
                tangon = tangon.channel_id;
                zuuluu = _closure2_slot3;
                michal = _closure1_slot6;
                michal = michal.ForwardContextMessage;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            report = foxtra.bind(cntext)(report, yankee);
            result = 8;
            report = option[result];
            yankee = zuuluu.bind(tangon)(report);
            report = yankee.useShareChatInputActions;
            yankee = report.bind(yankee)(romeon, config);
            output = yankee.textInputRef;
            report = yankee.isInputFocused;
            backup = yankee.handleSelectionChange;
            foxtra = yankee.handleMessageFocus;
            romeon = yankee.handleMessageBlur;
            yankee = yankee.handlePressEmoji;
            vacuum = cntext.useCallback;
            echoed = new Array(3);
            echoed[0] = sizing;
            target = record.channel_id;
            echoed[1] = target;
            echoed[2] = papara;
            offset = function() {
                tangon = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 7;
                michal = michal[entity];
                entity = undefined;
                oscard = tangon.bind(entity)(michal);
                report = oscard.clearDraft;
                tangon = _closure2_slot0;
                tangon = tangon.channel_id;
                zuuluu = _closure1_slot6;
                zuuluu = zuuluu.ForwardContextMessage;
                zuuluu = report.bind(oscard)(tangon, zuuluu);
                zuuluu = _closure2_slot1;
                michal = _closure2_slot3;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            offset = vacuum.bind(cntext)(offset, echoed);
            entity = option[entity];
            zuuluu = zuuluu.bind(tangon)(entity);
            entity = zuuluu.useDestinationNamesWithSlowmode;
            cntext = entity.bind(zuuluu)(oscard);
            entity = cntext.length;
            entity = entity > michal;
            oscard = undefined;
            if(!entity) { _fun00002_ip = 509; continue _fun00001 }
 403:
            entity = sizing.length;
            entity = entity > michal;
            oscard = undefined;
            if(!entity) { _fun00002_ip = 509; continue _fun00001 }
 417:
            michal = _closure1_slot0;
            echoed = _closure1_slot2;
            entity = 9;
            zuuluu = echoed[entity];
            zuuluu = michal.bind(tangon)(zuuluu);
            option = zuuluu.intl;
            zuuluu = option.formatToPlainString;
            entity = echoed[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.t;
            michal = entity.xJFpio;
            entity = {};
            echoed = cntext.length;
            entity['count'] = echoed;
            vacuum = cntext.join;
            echoed = ', ';
            echoed = vacuum.bind(cntext)(echoed);
            entity['channelNames'] = echoed;
            oscard = zuuluu.bind(option)(michal, entity);
 509:
            zuuluu = _closure1_slot7;
            michal = _closure1_slot1;
            option = _closure1_slot2;
            entity = 10;
            entity = option[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            option = undefined;
            if(!verify) { _fun00002_ip = 591; continue _fun00001 }
 540:
            vacuum = _closure1_slot7;
            echoed = _closure1_slot0;
            cntext = _closure1_slot2;
            verify = 11;
            verify = cntext[verify];
            verify = echoed.bind(tangon)(verify);
            echoed = verify.ForwardPreview;
            verify = {};
            verify['message'] = record;
            verify['channel'] = config;
            verify['forwardOptions'] = sequen;
            option = vacuum.bind(tangon)(echoed, verify);
 591:
            entity['preview'] = option;
            echoed = _closure1_slot7;
            verify = _closure1_slot0;
            vacuum = _closure1_slot2;
            option = 12;
            option = vacuum[option];
            option = verify.bind(tangon)(option);
            verify = option.Button;
            option = {'variant': 'primary', 'size': 'md'};
            option['text'] = ctrled;
            source = !source;
            option['disabled'] = source;
            source = undefined;
            if(update) { _fun00002_ip = 659; continue _fun00001 }
 656:
            source = offset;
 659:
            option['onPress'] = source;
            option['loading'] = update;
            option = echoed.bind(tangon)(verify, option);
            entity['sendButton'] = option;
            verify = _closure1_slot7;
            option = _closure1_slot1;
            golfie = _closure1_slot2;
            golfie = golfie[result];
            option = option.bind(tangon)(golfie);
            golfie = {};
            golfie['inputRef'] = output;
            golfie['text'] = sizing;
            golfie['onChange'] = kiloes;
            golfie['onSelectionChange'] = backup;
            golfie['onFocus'] = foxtra;
            golfie['onBlur'] = romeon;
            golfie['onPressEmoji'] = yankee;
            golfie['onSend'] = offset;
            golfie = verify.bind(tangon)(option, golfie);
            entity['chatInput'] = golfie;
            entity['warningText'] = oscard;
            entity['avoidKeyboard'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['ForwardMessageFooter'] = michal;
    return entity;
})();