// app/modules/forwarding/native/ForwardMessageFooter.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    option = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = option;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    golfie = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = option.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = option.bind(entity)(golfie);
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.DraftType;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot7 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/forwarding/native/ForwardMessageFooter.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ForwardMessageFooter
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            record = entity.message;
            var _closure2_slot0 = record;
            sequen = entity.forwardOptions;
            source = entity.sendLabel;
            update = entity.canSend;
            oscard = entity.selectedDestinations;
            echoed = entity.isSending;
            cntext = entity.onSend;
            var _closure2_slot1 = cntext;
            zuuluu = _closure1_slot0;
            option = _closure1_slot2;
            entity = 4;
            entity = option[entity];
            tangon = undefined;
            michal = zuuluu.bind(tangon)(entity);
            entity = michal.useTrackForwardEditContextMessageOnce;
            report = entity.bind(michal)();
            var _closure2_slot2 = report;
            entity = 5;
            michal = option[entity];
            offset = zuuluu.bind(tangon)(michal);
            michal = offset.useSelectedDestinationChannel;
            config = michal.bind(offset)(oscard);
            michal = 6;
            michal = option[michal];
            romeon = zuuluu.bind(tangon)(michal);
            yankee = romeon.useStateFromStoresObject;
            michal = _closure1_slot5;
            offset = new Array(1);
            offset[0] = michal;
            michal = function() {
                tangon = _closure1_slot5;
                zuuluu = tangon.getDraft;
                michal = _closure2_slot0;
                michal = michal.channel_id;
                entity = _closure1_slot6;
                entity = entity.ForwardContextMessage;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            offset = yankee.bind(romeon)(offset, michal);
            vacuum = _closure1_slot4;
            michal = vacuum.useState;
            yankee = michal.bind(vacuum)(offset);
            offset = _closure1_slot3;
            michal = 2;
            yankee = offset.bind(tangon)(yankee, michal);
            michal = 0;
            sizing = yankee[michal];
            var _closure2_slot3 = sizing;
            offset = 1;
            yankee = yankee[offset];
            var _closure2_slot4 = yankee;
            romeon = vacuum.useCallback;
            offset = new Array(2);
            offset[0] = record;
            offset[1] = report;
            report = function(argFoo) {
                tangon = _closure2_slot4;
                entity = undefined;
                zuuluu = argFoo;
                zuuluu = tangon.bind(entity)(zuuluu);
                tangon = _closure2_slot2;
                michal = _closure2_slot0;
                zuuluu = michal.channel_id;
                michal = michal.id;
                michal = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            kiloes = romeon.bind(vacuum)(report, offset);
            romeon = vacuum.useEffect;
            offset = new Array(2);
            offset[0] = sizing;
            report = record.channel_id;
            offset[1] = report;
            report = function() {
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 7;
                zuuluu = zuuluu[entity];
                entity = undefined;
                oscard = tangon.bind(entity)(zuuluu);
                report = oscard.saveDraft;
                tangon = _closure2_slot0;
                tangon = tangon.channel_id;
                zuuluu = _closure2_slot3;
                michal = _closure1_slot6;
                michal = michal.ForwardContextMessage;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            report = romeon.bind(vacuum)(report, offset);
            result = 8;
            report = option[result];
            offset = zuuluu.bind(tangon)(report);
            report = offset.useShareChatInputActions;
            offset = report.bind(offset)(yankee, config);
            output = offset.textInputRef;
            report = offset.isInputFocused;
            backup = offset.handleSelectionChange;
            foxtra = offset.handleMessageFocus;
            romeon = offset.handleMessageBlur;
            yankee = offset.handlePressEmoji;
            ctrled = vacuum.useCallback;
            offset = new Array(3);
            offset[0] = sizing;
            papara = record.channel_id;
            offset[1] = papara;
            offset[2] = cntext;
            verify = function() {
                tangon = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 7;
                michal = michal[entity];
                entity = undefined;
                oscard = tangon.bind(entity)(michal);
                report = oscard.clearDraft;
                tangon = _closure2_slot0;
                tangon = tangon.channel_id;
                zuuluu = _closure1_slot6;
                zuuluu = zuuluu.ForwardContextMessage;
                zuuluu = report.bind(oscard)(tangon, zuuluu);
                zuuluu = _closure2_slot1;
                michal = _closure2_slot3;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            offset = ctrled.bind(vacuum)(verify, offset);
            entity = option[entity];
            zuuluu = zuuluu.bind(tangon)(entity);
            entity = zuuluu.useDestinationNamesWithSlowmode;
            vacuum = entity.bind(zuuluu)(oscard);
            entity = vacuum.length;
            entity = entity > michal;
            oscard = undefined;
            if(!entity) { _fun00002_ip = 511; continue _fun00001 }
 405:
            entity = sizing.length;
            entity = entity > michal;
            oscard = undefined;
            if(!entity) { _fun00002_ip = 511; continue _fun00001 }
 419:
            michal = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 9;
            zuuluu = verify[entity];
            zuuluu = michal.bind(tangon)(zuuluu);
            option = zuuluu.intl;
            zuuluu = option.formatToPlainString;
            entity = verify[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.t;
            michal = entity.xJFpio;
            entity = {};
            verify = vacuum.length;
            entity['count'] = verify;
            ctrled = vacuum.join;
            verify = ', ';
            verify = ctrled.bind(vacuum)(verify);
            entity['channelNames'] = verify;
            oscard = zuuluu.bind(option)(michal, entity);
 511:
            zuuluu = _closure1_slot7;
            michal = _closure1_slot1;
            ctrled = _closure1_slot2;
            entity = 10;
            entity = ctrled[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            verify = _closure1_slot0;
            option = 11;
            option = ctrled[option];
            option = verify.bind(tangon)(option);
            vacuum = option.ForwardPreview;
            option = {};
            option['message'] = record;
            option['channel'] = config;
            option['forwardOptions'] = sequen;
            option = zuuluu.bind(tangon)(vacuum, option);
            entity['preview'] = option;
            option = 12;
            option = ctrled[option];
            option = verify.bind(tangon)(option);
            verify = option.Button;
            option = {'variant': 'primary', 'size': 'md'};
            option['text'] = source;
            update = !update;
            option['disabled'] = update;
            update = undefined;
            if(echoed) { _fun00002_ip = 636; continue _fun00001 }
 633:
            update = offset;
 636:
            option['onPress'] = update;
            option['loading'] = echoed;
            option = zuuluu.bind(tangon)(verify, option);
            entity['sendButton'] = option;
            verify = _closure1_slot7;
            option = _closure1_slot1;
            golfie = _closure1_slot2;
            golfie = golfie[result];
            option = option.bind(tangon)(golfie);
            golfie = {};
            golfie['inputRef'] = output;
            golfie['text'] = sizing;
            golfie['onChange'] = kiloes;
            golfie['onSelectionChange'] = backup;
            golfie['onFocus'] = foxtra;
            golfie['onBlur'] = romeon;
            golfie['onPressEmoji'] = yankee;
            golfie['onSend'] = offset;
            golfie = verify.bind(tangon)(option, golfie);
            entity['chatInput'] = golfie;
            entity['warningText'] = oscard;
            entity['avoidKeyboard'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['ForwardMessageFooter'] = michal;
    return entity;
})();