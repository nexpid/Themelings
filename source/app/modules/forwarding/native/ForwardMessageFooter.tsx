// app/modules/forwarding/native/ForwardMessageFooter.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    options = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = options;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    golf = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = options.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = options.bind(entity)(golf);
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.DraftType;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot7 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/forwarding/native/ForwardMessageFooter.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ForwardMessageFooter
        _fun102173: for(var _fun102173_ip = 0; ; ) switch(_fun102173_ip) {
 0:
            entity = argFoo;
            record = entity.message;
            var _closure2_slot0 = record;
            sequence = entity.forwardOptions;
            control = entity.sendLabel;
            source = entity.canSend;
            oscar = entity.selectedDestinations;
            update = entity.isSending;
            papa = entity.onSend;
            var _closure2_slot1 = papa;
            verify = entity.showPreview;
            zulu = _closure1_slot0;
            options = _closure1_slot2;
            entity = 4;
            entity = options[entity];
            tango = undefined;
            mike = zulu.bind(tango)(entity);
            entity = mike.useTrackForwardEditContextMessageOnce;
            report = entity.bind(mike)();
            var _closure2_slot2 = report;
            entity = 5;
            mike = options[entity];
            yankee = zulu.bind(tango)(mike);
            mike = yankee.useSelectedDestinationChannel;
            config = mike.bind(yankee)(oscar);
            mike = 6;
            mike = options[mike];
            foxtrot = zulu.bind(tango)(mike);
            romeo = foxtrot.useStateFromStoresObject;
            mike = _closure1_slot5;
            yankee = new Array(1);
            yankee[0] = mike;
            mike = function() {
                tango = _closure1_slot5;
                zulu = tango.getDraft;
                mike = _closure2_slot0;
                mike = mike.channel_id;
                entity = _closure1_slot6;
                entity = entity.ForwardContextMessage;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            yankee = romeo.bind(foxtrot)(yankee, mike);
            context = _closure1_slot4;
            mike = context.useState;
            romeo = mike.bind(context)(yankee);
            yankee = _closure1_slot3;
            mike = 2;
            romeo = yankee.bind(tango)(romeo, mike);
            mike = 0;
            sizing = romeo[mike];
            var _closure2_slot3 = sizing;
            yankee = 1;
            romeo = romeo[yankee];
            var _closure2_slot4 = romeo;
            foxtrot = context.useCallback;
            yankee = new Array(2);
            yankee[0] = record;
            yankee[1] = report;
            report = function(argFoo) {
                tango = _closure2_slot4;
                entity = undefined;
                zulu = argFoo;
                zulu = tango.bind(entity)(zulu);
                tango = _closure2_slot2;
                mike = _closure2_slot0;
                zulu = mike.channel_id;
                mike = mike.id;
                mike = tango.bind(entity)(zulu, mike);
                return entity;
            };
            kilo = foxtrot.bind(context)(report, yankee);
            foxtrot = context.useEffect;
            yankee = new Array(2);
            yankee[0] = sizing;
            report = record.channel_id;
            yankee[1] = report;
            report = function() {
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 7;
                zulu = zulu[entity];
                entity = undefined;
                oscar = tango.bind(entity)(zulu);
                report = oscar.saveDraft;
                tango = _closure2_slot0;
                tango = tango.channel_id;
                zulu = _closure2_slot3;
                mike = _closure1_slot6;
                mike = mike.ForwardContextMessage;
                mike = report.bind(oscar)(tango, zulu, mike);
                return entity;
            };
            report = foxtrot.bind(context)(report, yankee);
            result = 8;
            report = options[result];
            yankee = zulu.bind(tango)(report);
            report = yankee.useShareChatInputActions;
            yankee = report.bind(yankee)(romeo, config);
            output = yankee.textInputRef;
            report = yankee.isInputFocused;
            backup = yankee.handleSelectionChange;
            foxtrot = yankee.handleMessageFocus;
            romeo = yankee.handleMessageBlur;
            yankee = yankee.handlePressEmoji;
            vacuum = context.useCallback;
            echo = new Array(3);
            echo[0] = sizing;
            target = record.channel_id;
            echo[1] = target;
            echo[2] = papa;
            offset = function() {
                tango = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 7;
                mike = mike[entity];
                entity = undefined;
                oscar = tango.bind(entity)(mike);
                report = oscar.clearDraft;
                tango = _closure2_slot0;
                tango = tango.channel_id;
                zulu = _closure1_slot6;
                zulu = zulu.ForwardContextMessage;
                zulu = report.bind(oscar)(tango, zulu);
                zulu = _closure2_slot1;
                mike = _closure2_slot3;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            offset = vacuum.bind(context)(offset, echo);
            entity = options[entity];
            zulu = zulu.bind(tango)(entity);
            entity = zulu.useDestinationNamesWithSlowmode;
            context = entity.bind(zulu)(oscar);
            entity = context.length;
            entity = entity > mike;
            oscar = undefined;
            if(!entity) { _fun102173_ip = 515; continue _fun102173 }
 411:
            entity = sizing.length;
            entity = entity > mike;
            oscar = undefined;
            if(!entity) { _fun102173_ip = 515; continue _fun102173 }
 425:
            mike = _closure1_slot0;
            echo = _closure1_slot2;
            entity = 9;
            zulu = echo[entity];
            zulu = mike.bind(tango)(zulu);
            options = zulu.intl;
            zulu = options.formatToPlainString;
            entity = echo[entity];
            entity = mike.bind(tango)(entity);
            entity = entity.t;
            mike = entity.xJFpio;
            entity = {};
            echo = context.length;
            entity['count'] = echo;
            vacuum = context.join;
            echo = ', ';
            echo = vacuum.bind(context)(echo);
            entity['channelNames'] = echo;
            oscar = zulu.bind(options)(mike, entity);
 515:
            zulu = _closure1_slot7;
            mike = _closure1_slot1;
            options = _closure1_slot2;
            entity = 10;
            entity = options[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            options = undefined;
            if(!verify) { _fun102173_ip = 597; continue _fun102173 }
 546:
            vacuum = _closure1_slot7;
            echo = _closure1_slot0;
            context = _closure1_slot2;
            verify = 11;
            verify = context[verify];
            verify = echo.bind(tango)(verify);
            echo = verify.ForwardPreview;
            verify = {};
            verify['message'] = record;
            verify['channel'] = config;
            verify['forwardOptions'] = sequence;
            options = vacuum.bind(tango)(echo, verify);
 597:
            entity['preview'] = options;
            echo = _closure1_slot7;
            verify = _closure1_slot0;
            vacuum = _closure1_slot2;
            options = 12;
            options = vacuum[options];
            options = verify.bind(tango)(options);
            verify = options.Button;
            options = {'variant': 'primary', 'size': 'md'};
            options['text'] = control;
            source = !source;
            options['disabled'] = source;
            source = undefined;
            if(update) { _fun102173_ip = 661; continue _fun102173 }
 658:
            source = offset;
 661:
            options['onPress'] = source;
            options['loading'] = update;
            options = echo.bind(tango)(verify, options);
            entity['sendButton'] = options;
            verify = _closure1_slot7;
            options = _closure1_slot1;
            golf = _closure1_slot2;
            golf = golf[result];
            options = options.bind(tango)(golf);
            golf = {};
            golf['inputRef'] = output;
            golf['text'] = sizing;
            golf['onChange'] = kilo;
            golf['onSelectionChange'] = backup;
            golf['onFocus'] = foxtrot;
            golf['onBlur'] = romeo;
            golf['onPressEmoji'] = yankee;
            golf['onSend'] = offset;
            golf = verify.bind(tango)(options, golf);
            entity['chatInput'] = golf;
            entity['warningText'] = oscar;
            entity['avoidKeyboard'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['ForwardMessageFooter'] = mike;
    return entity;
})();