// app/modules/forwarding/native/ForwardFailedAlertModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/forwarding/native/ForwardFailedAlertModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ForwardFailedAlertModal
        michal = argFoo;
        option = michal.message;
        var _closure2_slot0 = option;
        oscard = michal.failedDestinations;
        var _closure2_slot1 = oscard;
        report = michal.forwardOptions;
        var _closure2_slot2 = report;
        tangon = _closure1_slot3;
        zuuluu = tangon.useCallback;
        michal = new Array(3);
        michal[0] = oscard;
        michal[1] = option;
        michal[2] = report;
        entity = function() {
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 2;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.openForwardModal;
            michal = {};
            oscard = _closure2_slot0;
            michal['message'] = oscard;
            oscard = 'retry-modal';
            michal['source'] = oscard;
            oscard = _closure2_slot1;
            michal['initialSelectedDestinations'] = oscard;
            report = _closure2_slot2;
            michal['forwardOptions'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        report = zuuluu.bind(tangon)(entity, michal);
        tangon = _closure1_slot4;
        michal = _closure1_slot1;
        yankee = _closure1_slot2;
        entity = 3;
        entity = yankee[entity];
        zuuluu = undefined;
        michal = michal.bind(zuuluu)(entity);
        entity = {};
        option = _closure1_slot0;
        golfie = 4;
        verify = yankee[golfie];
        verify = option.bind(zuuluu)(verify);
        romeon = verify.intl;
        offset = romeon.string;
        verify = yankee[golfie];
        verify = option.bind(zuuluu)(verify);
        verify = verify.t;
        verify = verify./OPIaG;
        verify = offset.bind(romeon)(verify);
        entity['title'] = verify;
        verify = yankee[golfie];
        verify = option.bind(zuuluu)(verify);
        offset = verify.intl;
        verify = offset.formatToPlainString;
        golfie = yankee[golfie];
        golfie = option.bind(zuuluu)(golfie);
        golfie = golfie.t;
        option = golfie.cn9vFR;
        golfie = {};
        yankee = oscard.length;
        golfie['count'] = yankee;
        golfie = verify.bind(offset)(option, golfie);
        entity['content'] = golfie;
        entity['failedDestinations'] = oscard;
        entity['onRetry'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();