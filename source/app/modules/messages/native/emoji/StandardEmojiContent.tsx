// app/modules/messages/native/emoji/StandardEmojiContent.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: Emoji
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.surrogate;
            verify = {};
            entity = _closure1_slot9;
            tangon = undefined;
            foxtra = entity.bind(tangon)();
            backup = verify;
            entity = copyDataProperties(backup, foxtra);
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 5;
            entity = zuuluu[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.useSharedMessageEmojiStyles;
            foxtra = entity.bind(michal)();
            backup = verify;
            entity = copyDataProperties(backup, foxtra);
            michal = _closure1_slot1;
            entity = 6;
            entity = zuuluu[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.getURL;
            offset = entity.bind(michal)(yankee);
            zuuluu = _closure1_slot6;
            michal = _closure1_slot4;
            entity = {};
            report = verify.emojiWrapper;
            entity['style'] = report;
            report = '';
            if(!(report === offset)) { _fun00002_ip = 184; continue _fun00001 }
 123:
            option = _closure1_slot6;
            golfie = _closure1_slot0;
            romeon = _closure1_slot2;
            report = 8;
            report = romeon[report];
            report = golfie.bind(tangon)(report);
            golfie = report.Text;
            report = {};
            romeon = verify.emojiSurrogate;
            report['style'] = romeon;
            romeon = 'text-md/medium';
            report['variant'] = romeon;
            report['children'] = yankee;
            report = option.bind(tangon)(golfie, report);
            _fun00002_ip = 246; continue _fun00001;
 184:
            option = _closure1_slot6;
            golfie = _closure1_slot1;
            yankee = _closure1_slot2;
            oscard = 7;
            oscard = yankee[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            verify = verify.emojiIcon;
            oscard['style'] = verify;
            verify = 'contain';
            oscard['resizeMode'] = verify;
            verify = {};
            verify['uri'] = offset;
            oscard['source'] = verify;
            report = option.bind(tangon)(golfie, oscard);
 246:
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot10 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot6 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'lineHeight': 48, 'fontSize': 40, 'margin': 8};
    tangon['emojiSurrogate'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/messages/native/emoji/StandardEmojiContent.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            sizing = entity.emojiNode;
            var _closure2_slot0 = sizing;
            oscard = entity.nonce;
            backup = {};
            entity = _closure1_slot9;
            tangon = undefined;
            sequen = entity.bind(tangon)();
            config = backup;
            entity = copyDataProperties(config, sequen);
            golfie = _closure1_slot0;
            romeon = _closure1_slot2;
            entity = 5;
            entity = romeon[entity];
            michal = golfie.bind(tangon)(entity);
            entity = michal.useSharedMessageEmojiStyles;
            sequen = entity.bind(michal)();
            config = backup;
            entity = copyDataProperties(config, sequen);
            michal = _closure1_slot5;
            entity = michal.getGuildId;
            report = entity.bind(michal)();
            entity = 9;
            entity = romeon[entity];
            zuuluu = golfie.bind(tangon)(entity);
            michal = zuuluu.useTrackOpenPopout;
            entity = {};
            entity['currentGuildId'] = report;
            entity['nonce'] = oscard;
            entity = michal.bind(zuuluu)(entity);
            oscard = _closure1_slot3;
            zuuluu = oscard.useMemo;
            entity = sizing.surrogate;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 10;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.convertSurrogateToBase;
                entity = _closure2_slot0;
                entity = entity.surrogate;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            zuuluu = zuuluu.bind(oscard)(entity, michal);
            var _closure2_slot1 = zuuluu;
            entity = 11;
            entity = romeon[entity];
            michal = golfie.bind(tangon)(entity);
            entity = michal.useIsFavoriteEmoji;
            yankee = entity.bind(michal)(report, zuuluu);
            var _closure2_slot2 = yankee;
            michal = _closure1_slot1;
            entity = 12;
            entity = romeon[entity];
            michal = michal.bind(tangon)(entity);
            entity = sizing.content;
            update = michal.bind(tangon)(entity);
            zuuluu = _closure1_slot7;
            michal = _closure1_slot8;
            entity = {};
            oscard = _closure1_slot4;
            report = {};
            option = backup.emojiContainer;
            report['style'] = option;
            kiloes = _closure1_slot6;
            foxtra = _closure1_slot10;
            option = {};
            sizing = sizing.surrogate;
            option['surrogate'] = sizing;
            foxtra = kiloes.bind(tangon)(foxtra, option);
            option = new Array(2);
            option[0] = foxtra;
            sizing = _closure1_slot4;
            foxtra = {};
            kiloes = backup.emojiDescriptionWrapper;
            foxtra['style'] = kiloes;
            echoed = _closure1_slot6;
            kiloes = 8;
            output = romeon[kiloes];
            output = golfie.bind(tangon)(output);
            result = output.Text;
            output = {'variant': 'text-md/bold', 'color': 'header-primary'};
            output['children'] = update;
            result = echoed.bind(tangon)(result, output);
            output = new Array(2);
            output[0] = result;
            update = _closure1_slot6;
            kiloes = romeon[kiloes];
            kiloes = golfie.bind(tangon)(kiloes);
            echoed = kiloes.Text;
            result = {};
            kiloes = 'text-sm/medium';
            result['variant'] = kiloes;
            kiloes = 13;
            source = romeon[kiloes];
            source = golfie.bind(tangon)(source);
            vacuum = source.intl;
            ctrled = vacuum.string;
            source = romeon[kiloes];
            source = golfie.bind(tangon)(source);
            source = source.t;
            source = source.sXdH8f;
            source = ctrled.bind(vacuum)(source);
            result['children'] = source;
            result = update.bind(tangon)(echoed, result);
            output[1] = result;
            foxtra['children'] = output;
            foxtra = zuuluu.bind(tangon)(sizing, foxtra);
            option[1] = foxtra;
            report['children'] = option;
            oscard = zuuluu.bind(tangon)(oscard, report);
            report = new Array(3);
            report[0] = oscard;
            foxtra = _closure1_slot6;
            oscard = 14;
            oscard = romeon[oscard];
            oscard = golfie.bind(tangon)(oscard);
            option = oscard.FormDivider;
            oscard = {};
            backup = backup.divider;
            oscard['style'] = backup;
            oscard = foxtra.bind(tangon)(option, oscard);
            report[1] = oscard;
            option = _closure1_slot6;
            oscard = 15;
            oscard = romeon[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.Button;
            oscard = {};
            romeon = _closure1_slot0;
            offset = _closure1_slot2;
            foxtra = offset[kiloes];
            foxtra = romeon.bind(tangon)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            offset = offset[kiloes];
            offset = romeon.bind(tangon)(offset);
            romeon = offset.t;
            if(yankee) { _fun00004_ip = 599; continue _fun00003 }
 586:
            offset = romeon.yZFibW;
            offset = foxtra.bind(backup)(offset);
            _fun00004_ip = 610; continue _fun00003;
 599:
            romeon = romeon.aBUcp6;
            offset = foxtra.bind(backup)(romeon);
 610:
            oscard['text'] = offset;
            offset = 'primary';
            if(!yankee) { _fun00004_ip = 627; continue _fun00003 }
 621:
            offset = 'destructive';
 627:
            oscard['variant'] = offset;
            verify = function() { // Original name: onPress
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = _closure2_slot2;
                    report = _closure1_slot0;
                    tangon = _closure1_slot2;
                    entity = 16;
                    tangon = tangon[entity];
                    entity = undefined;
                    tangon = report.bind(entity)(tangon);
                    if(zuuluu) { _fun00006_ip = 52; continue _fun00005 }
 35:
                    report = tangon.favoriteEmoji;
                    zuuluu = _closure2_slot1;
                    zuuluu = report.bind(tangon)(zuuluu);
                    _fun00006_ip = 67; continue _fun00005;
 52:
                    zuuluu = tangon.unfavoriteEmoji;
                    michal = _closure2_slot1;
                    michal = zuuluu.bind(tangon)(michal);
 67:
                    return entity;
                }
            };
            oscard['onPress'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();