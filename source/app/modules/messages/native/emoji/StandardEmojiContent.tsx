// app/modules/messages/native/emoji/StandardEmojiContent.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: Emoji
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.surrogate;
            verify = {};
            entity = _closure1_slot9;
            tango = undefined;
            foxtrot = entity.bind(tango)();
            backup = verify;
            entity = copyDataProperties(backup, foxtrot);
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 5;
            entity = zulu[entity];
            mike = mike.bind(tango)(entity);
            entity = mike.useSharedMessageEmojiStyles;
            foxtrot = entity.bind(mike)();
            backup = verify;
            entity = copyDataProperties(backup, foxtrot);
            mike = _closure1_slot1;
            entity = 6;
            entity = zulu[entity];
            mike = mike.bind(tango)(entity);
            entity = mike.getURL;
            offset = entity.bind(mike)(yankee);
            zulu = _closure1_slot6;
            mike = _closure1_slot4;
            entity = {};
            report = verify.emojiWrapper;
            entity['style'] = report;
            report = '';
            if(!(report === offset)) { _fun00002_ip = 184; continue _fun00001 }
 123:
            options = _closure1_slot6;
            golf = _closure1_slot0;
            romeo = _closure1_slot2;
            report = 8;
            report = romeo[report];
            report = golf.bind(tango)(report);
            golf = report.Text;
            report = {};
            romeo = verify.emojiSurrogate;
            report['style'] = romeo;
            romeo = 'text-md/medium';
            report['variant'] = romeo;
            report['children'] = yankee;
            report = options.bind(tango)(golf, report);
            _fun00002_ip = 246; continue _fun00001;
 184:
            options = _closure1_slot6;
            golf = _closure1_slot1;
            yankee = _closure1_slot2;
            oscar = 7;
            oscar = yankee[oscar];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            verify = verify.emojiIcon;
            oscar['style'] = verify;
            verify = 'contain';
            oscar['resizeMode'] = verify;
            verify = {};
            verify['uri'] = offset;
            oscar['source'] = verify;
            report = options.bind(tango)(golf, oscar);
 246:
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot10 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'lineHeight': 48, 'fontSize': 40, 'margin': 8};
    tango['emojiSurrogate'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/messages/native/emoji/StandardEmojiContent.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            sizing = entity.emojiNode;
            var _closure2_slot0 = sizing;
            oscar = entity.nonce;
            backup = {};
            entity = _closure1_slot9;
            tango = undefined;
            sequence = entity.bind(tango)();
            config = backup;
            entity = copyDataProperties(config, sequence);
            golf = _closure1_slot0;
            romeo = _closure1_slot2;
            entity = 5;
            entity = romeo[entity];
            mike = golf.bind(tango)(entity);
            entity = mike.useSharedMessageEmojiStyles;
            sequence = entity.bind(mike)();
            config = backup;
            entity = copyDataProperties(config, sequence);
            mike = _closure1_slot5;
            entity = mike.getGuildId;
            report = entity.bind(mike)();
            entity = 9;
            entity = romeo[entity];
            zulu = golf.bind(tango)(entity);
            mike = zulu.useTrackOpenPopout;
            entity = {};
            entity['currentGuildId'] = report;
            entity['nonce'] = oscar;
            entity = mike.bind(zulu)(entity);
            oscar = _closure1_slot3;
            zulu = oscar.useMemo;
            entity = sizing.surrogate;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 10;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.convertSurrogateToBase;
                entity = _closure2_slot0;
                entity = entity.surrogate;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            zulu = zulu.bind(oscar)(entity, mike);
            var _closure2_slot1 = zulu;
            entity = 11;
            entity = romeo[entity];
            mike = golf.bind(tango)(entity);
            entity = mike.useIsFavoriteEmoji;
            yankee = entity.bind(mike)(report, zulu);
            var _closure2_slot2 = yankee;
            mike = _closure1_slot1;
            entity = 12;
            entity = romeo[entity];
            mike = mike.bind(tango)(entity);
            entity = sizing.content;
            update = mike.bind(tango)(entity);
            zulu = _closure1_slot7;
            mike = _closure1_slot8;
            entity = {};
            oscar = _closure1_slot4;
            report = {};
            options = backup.emojiContainer;
            report['style'] = options;
            kilo = _closure1_slot6;
            foxtrot = _closure1_slot10;
            options = {};
            sizing = sizing.surrogate;
            options['surrogate'] = sizing;
            foxtrot = kilo.bind(tango)(foxtrot, options);
            options = new Array(2);
            options[0] = foxtrot;
            sizing = _closure1_slot4;
            foxtrot = {};
            kilo = backup.emojiDescriptionWrapper;
            foxtrot['style'] = kilo;
            echo = _closure1_slot6;
            kilo = 8;
            output = romeo[kilo];
            output = golf.bind(tango)(output);
            result = output.Text;
            output = {'variant': 'text-md/bold', 'color': 'header-primary'};
            output['children'] = update;
            result = echo.bind(tango)(result, output);
            output = new Array(2);
            output[0] = result;
            update = _closure1_slot6;
            kilo = romeo[kilo];
            kilo = golf.bind(tango)(kilo);
            echo = kilo.Text;
            result = {};
            kilo = 'text-sm/medium';
            result['variant'] = kilo;
            kilo = 13;
            source = romeo[kilo];
            source = golf.bind(tango)(source);
            vacuum = source.intl;
            control = vacuum.string;
            source = romeo[kilo];
            source = golf.bind(tango)(source);
            source = source.t;
            source = source.sXdH8f;
            source = control.bind(vacuum)(source);
            result['children'] = source;
            result = update.bind(tango)(echo, result);
            output[1] = result;
            foxtrot['children'] = output;
            foxtrot = zulu.bind(tango)(sizing, foxtrot);
            options[1] = foxtrot;
            report['children'] = options;
            oscar = zulu.bind(tango)(oscar, report);
            report = new Array(3);
            report[0] = oscar;
            foxtrot = _closure1_slot6;
            oscar = 14;
            oscar = romeo[oscar];
            oscar = golf.bind(tango)(oscar);
            options = oscar.FormDivider;
            oscar = {};
            backup = backup.divider;
            oscar['style'] = backup;
            oscar = foxtrot.bind(tango)(options, oscar);
            report[1] = oscar;
            options = _closure1_slot6;
            oscar = 15;
            oscar = romeo[oscar];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.Button;
            oscar = {};
            romeo = _closure1_slot0;
            offset = _closure1_slot2;
            foxtrot = offset[kilo];
            foxtrot = romeo.bind(tango)(foxtrot);
            backup = foxtrot.intl;
            foxtrot = backup.string;
            offset = offset[kilo];
            offset = romeo.bind(tango)(offset);
            romeo = offset.t;
            if(yankee) { _fun00004_ip = 599; continue _fun00003 }
 586:
            offset = romeo.yZFibW;
            offset = foxtrot.bind(backup)(offset);
            _fun00004_ip = 610; continue _fun00003;
 599:
            romeo = romeo.aBUcp6;
            offset = foxtrot.bind(backup)(romeo);
 610:
            oscar['text'] = offset;
            offset = 'primary';
            if(!yankee) { _fun00004_ip = 627; continue _fun00003 }
 621:
            offset = 'destructive';
 627:
            oscar['variant'] = offset;
            verify = function() { // Original name: onPress
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zulu = _closure2_slot2;
                    report = _closure1_slot0;
                    tango = _closure1_slot2;
                    entity = 16;
                    tango = tango[entity];
                    entity = undefined;
                    tango = report.bind(entity)(tango);
                    if(zulu) { _fun00006_ip = 52; continue _fun00005 }
 35:
                    report = tango.favoriteEmoji;
                    zulu = _closure2_slot1;
                    zulu = report.bind(tango)(zulu);
                    _fun00006_ip = 67; continue _fun00005;
 52:
                    zulu = tango.unfavoriteEmoji;
                    mike = _closure2_slot1;
                    mike = zulu.bind(tango)(mike);
 67:
                    return entity;
                }
            };
            oscar['onPress'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();