// app/modules/messages/native/emoji/ExpressionGuildDetails.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
        report = argBar;
        romeon = argBaz;
        zuuluu = argFre;
        oscard = argPlu;
        var _closure1_slot0 = report;
        var _closure1_slot1 = romeon;
        var _closure1_slot2 = oscard;
        entity = global;
        option = entity.Object;
        golfie = option.defineProperty;
        tangon = {};
        entity = true;
        tangon['value'] = entity;
        entity = '__esModule';
        entity = golfie.bind(option)(zuuluu, entity, tangon);
        entity = 0;
        golfie = oscard[entity];
        tangon = argCor;
        entity = undefined;
        tangon = tangon.bind(entity)(golfie);
        tangon = 1;
        tangon = oscard[tangon];
        tangon = report.bind(entity)(tangon);
        tangon = tangon.View;
        var _closure1_slot3 = tangon;
        tangon = 2;
        tangon = oscard[tangon];
        tangon = report.bind(entity)(tangon);
        tangon = tangon.ExpressionSourceGuildRecord;
        var _closure1_slot4 = tangon;
        tangon = 3;
        golfie = oscard[tangon];
        golfie = report.bind(entity)(golfie);
        golfie = golfie.jsx;
        var _closure1_slot5 = golfie;
        golfie = oscard[tangon];
        golfie = report.bind(entity)(golfie);
        golfie = golfie.Fragment;
        var _closure1_slot6 = golfie;
        tangon = oscard[tangon];
        tangon = report.bind(entity)(tangon);
        tangon = tangon.jsxs;
        var _closure1_slot7 = tangon;
        tangon = 4;
        tangon = oscard[tangon];
        verify = report.bind(entity)(tangon);
        option = verify.createStyles;
        golfie = {};
        offset = {};
        backup = 'column';
        offset['flexDirection'] = backup;
        tangon = 5;
        tangon = oscard[tangon];
        yankee = report.bind(entity)(tangon);
        tangon = yankee.isAndroid;
        foxtra = tangon.bind(yankee)();
        tangon = 16;
        yankee = tangon;
        if(!foxtra) { _fun00002_ip = 237; continue _fun00001 }
 234:
        yankee = 12;
 237:
        offset['marginTop'] = yankee;
        golfie['guildDetailsContainer'] = offset;
        foxtra = 8;
        offset = {'flexDirection': 'row', 'marginTop': 8, 'alignItems': 'center'};
        golfie['guildDetailsContent'] = offset;
        offset = {'width': 40, 'height': 40, 'borderRadius': null, 'marginRight': 12};
        yankee = 6;
        kiloes = oscard[yankee];
        kiloes = romeon.bind(entity)(kiloes);
        kiloes = kiloes.radii;
        kiloes = kiloes.sm;
        offset['borderRadius'] = kiloes;
        golfie['guildIcon'] = offset;
        offset = {};
        offset['flexDirection'] = backup;
        golfie['guildNameAndOnlineMembers'] = offset;
        offset = {'flexDirection': 'row', 'alignItems': 'center', 'marginRight': 32};
        golfie['guildNameWrapper'] = offset;
        offset = {};
        offset['marginRight'] = foxtra;
        golfie['guildPartnerIcon'] = offset;
        offset = {'flexDirection': 'row', 'alignItems': 'center', 'marginTop': 4};
        golfie['guildDescriptionSection'] = offset;
        offset = {'width': 4, 'height': 4, 'borderRadius': null, 'marginRight': 8, 'marginLeft': 8};
        foxtra = oscard[yankee];
        foxtra = romeon.bind(entity)(foxtra);
        foxtra = foxtra.radii;
        foxtra = foxtra.xs;
        offset['borderRadius'] = foxtra;
        foxtra = oscard[yankee];
        foxtra = romeon.bind(entity)(foxtra);
        foxtra = foxtra.colors;
        foxtra = foxtra.BACKGROUND_ACCENT;
        offset['backgroundColor'] = foxtra;
        golfie['dotSeparator'] = offset;
        offset = {'borderRadius': null, 'borderColor': null, 'borderWidth': 1, 'paddingHorizontal': 4, 'paddingBottom': 2};
        foxtra = oscard[yankee];
        foxtra = romeon.bind(entity)(foxtra);
        foxtra = foxtra.radii;
        foxtra = foxtra.sm;
        offset['borderRadius'] = foxtra;
        yankee = oscard[yankee];
        yankee = romeon.bind(entity)(yankee);
        yankee = yankee.colors;
        yankee = yankee.DIVIDER_STRONG;
        offset['borderColor'] = yankee;
        golfie['joinGuildButton'] = offset;
        golfie = option.bind(verify)(golfie);
        var _closure1_slot8 = golfie;
        michal = function(argFoo) { // Original name: ExpressionGuildDetails
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = argFoo;
                kiloes = entity.guild;
                var _closure2_slot0 = kiloes;
                golfie = entity.title;
                update = entity.hasJoinedGuild;
                output = entity.showingJoinGuildCta;
                entity = _closure1_slot8;
                tangon = undefined;
                vacuum = entity.bind(tangon)();
                michal = _closure1_slot4;
                entity = michal.createFromGuildType;
                status = entity.bind(michal)(kiloes);
                entity = status.isDiscoverable;
                romeon = entity.bind(status)();
                if(romeon) { _fun00004_ip = 182; continue _fun00003 }
 74:
                if(update) { _fun00004_ip = 182; continue _fun00003 }
 77:
                michal = _closure1_slot1;
                oscard = _closure1_slot2;
                entity = 8;
                entity = oscard[entity];
                report = michal.bind(tangon)(entity);
                zuuluu = report.getGuildIconSource;
                entity = {};
                option = kiloes.id;
                entity['id'] = option;
                option = kiloes.icon;
                entity['icon'] = option;
                option = true;
                entity['canAnimate'] = option;
                option = 32;
                entity['size'] = option;
                report = zuuluu.bind(report)(entity);
                zuuluu = _closure1_slot5;
                entity = 9;
                entity = oscard[entity];
                michal = michal.bind(tangon)(entity);
                entity = {};
                oscard = vacuum.guildIcon;
                entity['style'] = oscard;
                entity['source'] = report;
                option = zuuluu.bind(tangon)(michal, entity);
                _fun00004_ip = 264; continue _fun00003;
 182:
                zuuluu = _closure1_slot5;
                michal = _closure1_slot1;
                verify = _closure1_slot2;
                report = 7;
                entity = verify[report];
                michal = michal.bind(tangon)(entity);
                entity = {};
                oscard = vacuum.guildIcon;
                entity['style'] = oscard;
                entity['guild'] = status;
                oscard = _closure1_slot0;
                report = verify[report];
                report = oscard.bind(tangon)(report);
                report = report.GuildIconSizes;
                report = report.XLARGE;
                entity['size'] = report;
                report = true;
                entity['animate'] = report;
                option = zuuluu.bind(tangon)(michal, entity);
 264:
                zuuluu = _closure1_slot7;
                michal = _closure1_slot3;
                entity = {};
                report = vacuum.guildDetailsContainer;
                entity['style'] = report;
                yankee = _closure1_slot5;
                backup = _closure1_slot0;
                foxtra = _closure1_slot2;
                result = 10;
                report = foxtra[result];
                report = backup.bind(tangon)(report);
                oscard = report.Text;
                report = {'variant': 'eyebrow', 'color': 'header-secondary'};
                report['children'] = golfie;
                oscard = yankee.bind(tangon)(oscard, report);
                report = new Array(2);
                report[0] = oscard;
                oscard = {};
                golfie = vacuum.guildDetailsContent;
                oscard['style'] = golfie;
                golfie = new Array(2);
                golfie[0] = option;
                option = {};
                verify = vacuum.guildNameAndOnlineMembers;
                option['style'] = verify;
                verify = {};
                offset = vacuum.guildNameWrapper;
                verify['style'] = offset;
                sequen = _closure1_slot1;
                offset = 14;
                offset = foxtra[offset];
                sizing = sequen.bind(tangon)(offset);
                offset = {};
                offset['guild'] = kiloes;
                source = vacuum.guildPartnerIcon;
                offset['style'] = source;
                source = 15;
                source = foxtra[source];
                source = sequen.bind(tangon)(source);
                source = source.Sizes;
                source = source.REFRESH_SMALL_16;
                offset['size'] = source;
                source = true;
                offset['disableColor'] = source;
                sizing = yankee.bind(tangon)(sizing, offset);
                offset = new Array(2);
                offset[0] = sizing;
                foxtra = foxtra[result];
                foxtra = backup.bind(tangon)(foxtra);
                backup = foxtra.Text;
                foxtra = {'variant': 'text-md/bold', 'color': 'header-primary'};
                kiloes = kiloes.name;
                foxtra['children'] = kiloes;
                foxtra = yankee.bind(tangon)(backup, foxtra);
                offset[1] = foxtra;
                verify['children'] = offset;
                offset = zuuluu.bind(tangon)(michal, verify);
                verify = new Array(2);
                verify[0] = offset;
                offset = {};
                foxtra = vacuum.guildDescriptionSection;
                offset['style'] = foxtra;
                if(!romeon) { _fun00004_ip = 562; continue _fun00003 }
 550:
                foxtra = status.presenceCount;
                romeon = null;
                if(!(romeon == foxtra)) { _fun00004_ip = 662; continue _fun00003 }
 562:
                backup = _closure1_slot5;
                sequen = _closure1_slot0;
                config = _closure1_slot2;
                romeon = config[result];
                romeon = sequen.bind(tangon)(romeon);
                foxtra = romeon.Text;
                romeon = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
                kiloes = 11;
                sizing = config[kiloes];
                sizing = sequen.bind(tangon)(sizing);
                source = sizing.intl;
                sizing = source.string;
                kiloes = config[kiloes];
                kiloes = sequen.bind(tangon)(kiloes);
                kiloes = kiloes.t;
                kiloes = kiloes.H29mx8;
                kiloes = sizing.bind(source)(kiloes);
                romeon['children'] = kiloes;
                romeon = backup.bind(tangon)(foxtra, romeon);
                _fun00004_ip = 1072; continue _fun00003;
 662:
                kiloes = _closure1_slot7;
                backup = _closure1_slot6;
                foxtra = {};
                record = _closure1_slot5;
                cntext = _closure1_slot0;
                sequen = _closure1_slot2;
                sizing = sequen[result];
                sizing = cntext.bind(tangon)(sizing);
                source = sizing.Text;
                sizing = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
                config = 11;
                papara = sequen[config];
                papara = cntext.bind(tangon)(papara);
                target = papara.intl;
                papara = target.format;
                sequen = sequen[config];
                sequen = cntext.bind(tangon)(sequen);
                sequen = sequen.t;
                cntext = sequen.LC+S+v;
                sequen = {};
                status = status.presenceCount;
                sequen['membersOnline'] = status;
                sequen = papara.bind(target)(cntext, sequen);
                sizing['children'] = sequen;
                source = record.bind(tangon)(source, sizing);
                sizing = new Array(3);
                sizing[0] = source;
                sequen = _closure1_slot3;
                source = {};
                cntext = vacuum.dotSeparator;
                source['style'] = cntext;
                source = record.bind(tangon)(sequen, source);
                sizing[1] = source;
                if(update) { _fun00004_ip = 966; continue _fun00003 }
 819:
                if(output) { _fun00004_ip = 966; continue _fun00003 }
 825:
                source = _closure1_slot5;
                papara = _closure1_slot0;
                sequen = _closure1_slot2;
                output = 12;
                output = sequen[output];
                output = papara.bind(tangon)(output);
                update = output.PressableOpacity;
                output = {};
                vacuum = vacuum.joinGuildButton;
                output['style'] = vacuum;
                ctrled = function() { // Original name: onPress
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 13;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.handleJoinGuild;
                    entity = _closure2_slot0;
                    entity = entity.id;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                output['onPress'] = ctrled;
                ctrled = sequen[result];
                ctrled = papara.bind(tangon)(ctrled);
                vacuum = ctrled.Text;
                ctrled = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
                record = sequen[config];
                record = papara.bind(tangon)(record);
                cntext = record.intl;
                record = cntext.string;
                sequen = sequen[config];
                sequen = papara.bind(tangon)(sequen);
                sequen = sequen.t;
                sequen = sequen.riu2R0;
                sequen = record.bind(cntext)(sequen);
                ctrled['children'] = sequen;
                ctrled = source.bind(tangon)(vacuum, ctrled);
                output['children'] = ctrled;
                output = source.bind(tangon)(update, output);
                _fun00004_ip = 1058; continue _fun00003;
 966:
                update = _closure1_slot5;
                sequen = _closure1_slot0;
                source = _closure1_slot2;
                result = source[result];
                result = sequen.bind(tangon)(result);
                echoed = result.Text;
                result = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
                ctrled = source[config];
                ctrled = sequen.bind(tangon)(ctrled);
                vacuum = ctrled.intl;
                ctrled = vacuum.string;
                source = source[config];
                source = sequen.bind(tangon)(source);
                source = source.t;
                source = source.inyJqK;
                source = ctrled.bind(vacuum)(source);
                result['children'] = source;
                output = update.bind(tangon)(echoed, result);
 1058:
                sizing[2] = output;
                foxtra['children'] = sizing;
                romeon = kiloes.bind(tangon)(backup, foxtra);
 1072:
                offset['children'] = romeon;
                offset = yankee.bind(tangon)(michal, offset);
                verify[1] = offset;
                option['children'] = verify;
                option = zuuluu.bind(tangon)(michal, option);
                golfie[1] = option;
                oscard['children'] = golfie;
                oscard = zuuluu.bind(tangon)(michal, oscard);
                report[1] = oscard;
                entity['children'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            }
        };
        tangon = oscard[tangon];
        oscard = report.bind(entity)(tangon);
        report = oscard.fileFinishedImporting;
        tangon = 'modules/messages/native/emoji/ExpressionGuildDetails.tsx';
        tangon = report.bind(oscard)(tangon);
        zuuluu['default'] = michal;
        zuuluu['ExpressionGuildDetails'] = michal;
        return entity;
    }
})();