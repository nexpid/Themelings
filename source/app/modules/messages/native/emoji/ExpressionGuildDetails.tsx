// app/modules/messages/native/emoji/ExpressionGuildDetails.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
        report = argBar;
        romeo = argBaz;
        zulu = argFred;
        oscar = argPlugh;
        var _closure1_slot0 = report;
        var _closure1_slot1 = romeo;
        var _closure1_slot2 = oscar;
        entity = global;
        options = entity.Object;
        golf = options.defineProperty;
        tango = {};
        entity = true;
        tango['value'] = entity;
        entity = '__esModule';
        entity = golf.bind(options)(zulu, entity, tango);
        entity = 0;
        golf = oscar[entity];
        tango = argCorge;
        entity = undefined;
        tango = tango.bind(entity)(golf);
        tango = 1;
        tango = oscar[tango];
        tango = report.bind(entity)(tango);
        tango = tango.View;
        var _closure1_slot3 = tango;
        tango = 2;
        tango = oscar[tango];
        tango = report.bind(entity)(tango);
        tango = tango.ExpressionSourceGuildRecord;
        var _closure1_slot4 = tango;
        tango = 3;
        golf = oscar[tango];
        golf = report.bind(entity)(golf);
        golf = golf.jsx;
        var _closure1_slot5 = golf;
        golf = oscar[tango];
        golf = report.bind(entity)(golf);
        golf = golf.Fragment;
        var _closure1_slot6 = golf;
        tango = oscar[tango];
        tango = report.bind(entity)(tango);
        tango = tango.jsxs;
        var _closure1_slot7 = tango;
        tango = 4;
        tango = oscar[tango];
        verify = report.bind(entity)(tango);
        options = verify.createStyles;
        golf = {};
        offset = {};
        backup = 'column';
        offset['flexDirection'] = backup;
        tango = 5;
        tango = oscar[tango];
        yankee = report.bind(entity)(tango);
        tango = yankee.isAndroid;
        foxtrot = tango.bind(yankee)();
        tango = 16;
        yankee = tango;
        if(!foxtrot) { _fun00002_ip = 236; continue _fun00001 }
 233:
        yankee = 12;
 236:
        offset['marginTop'] = yankee;
        golf['guildDetailsContainer'] = offset;
        foxtrot = 8;
        offset = {'flexDirection': 'row', 'marginTop': 8, 'alignItems': 'center'};
        golf['guildDetailsContent'] = offset;
        offset = {'width': 40, 'height': 40, 'borderRadius': null, 'marginRight': 12};
        yankee = 6;
        kilo = oscar[yankee];
        kilo = romeo.bind(entity)(kilo);
        kilo = kilo.radii;
        kilo = kilo.sm;
        offset['borderRadius'] = kilo;
        golf['guildIcon'] = offset;
        offset = {};
        offset['flexDirection'] = backup;
        golf['guildNameAndOnlineMembers'] = offset;
        offset = {'flexDirection': 'row', 'alignItems': 'center', 'marginRight': 32};
        golf['guildNameWrapper'] = offset;
        offset = {};
        offset['marginRight'] = foxtrot;
        golf['guildPartnerIcon'] = offset;
        offset = {'flexDirection': 'row', 'alignItems': 'center', 'marginTop': 4};
        golf['guildDescriptionSection'] = offset;
        offset = {'width': 4, 'height': 4, 'borderRadius': null, 'marginRight': 8, 'marginLeft': 8};
        foxtrot = oscar[yankee];
        foxtrot = romeo.bind(entity)(foxtrot);
        foxtrot = foxtrot.radii;
        foxtrot = foxtrot.xs;
        offset['borderRadius'] = foxtrot;
        foxtrot = oscar[yankee];
        foxtrot = romeo.bind(entity)(foxtrot);
        foxtrot = foxtrot.colors;
        foxtrot = foxtrot.BACKGROUND_ACCENT;
        offset['backgroundColor'] = foxtrot;
        golf['dotSeparator'] = offset;
        offset = {'borderRadius': null, 'borderColor': null, 'borderWidth': 1, 'paddingHorizontal': 4, 'paddingBottom': 2};
        foxtrot = oscar[yankee];
        foxtrot = romeo.bind(entity)(foxtrot);
        foxtrot = foxtrot.radii;
        foxtrot = foxtrot.sm;
        offset['borderRadius'] = foxtrot;
        yankee = oscar[yankee];
        yankee = romeo.bind(entity)(yankee);
        yankee = yankee.colors;
        yankee = yankee.DIVIDER_STRONG;
        offset['borderColor'] = yankee;
        golf['joinGuildButton'] = offset;
        golf = options.bind(verify)(golf);
        var _closure1_slot8 = golf;
        mike = function(argFoo) { // Original name: ExpressionGuildDetails
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = argFoo;
                kilo = entity.guild;
                var _closure2_slot0 = kilo;
                golf = entity.title;
                update = entity.hasJoinedGuild;
                output = entity.showingJoinGuildCta;
                entity = _closure1_slot8;
                tango = undefined;
                record = entity.bind(tango)();
                mike = _closure1_slot4;
                entity = mike.createFromGuildType;
                status = entity.bind(mike)(kilo);
                entity = status.isDiscoverable;
                romeo = entity.bind(status)();
                if(romeo) { _fun00004_ip = 182; continue _fun00003 }
 74:
                if(update) { _fun00004_ip = 182; continue _fun00003 }
 77:
                mike = _closure1_slot1;
                oscar = _closure1_slot2;
                entity = 8;
                entity = oscar[entity];
                report = mike.bind(tango)(entity);
                zulu = report.getGuildIconSource;
                entity = {};
                options = kilo.id;
                entity['id'] = options;
                options = kilo.icon;
                entity['icon'] = options;
                options = true;
                entity['canAnimate'] = options;
                options = 32;
                entity['size'] = options;
                report = zulu.bind(report)(entity);
                zulu = _closure1_slot5;
                entity = 9;
                entity = oscar[entity];
                mike = mike.bind(tango)(entity);
                entity = {};
                oscar = record.guildIcon;
                entity['style'] = oscar;
                entity['source'] = report;
                options = zulu.bind(tango)(mike, entity);
                _fun00004_ip = 264; continue _fun00003;
 182:
                zulu = _closure1_slot5;
                mike = _closure1_slot1;
                verify = _closure1_slot2;
                report = 7;
                entity = verify[report];
                mike = mike.bind(tango)(entity);
                entity = {};
                oscar = record.guildIcon;
                entity['style'] = oscar;
                entity['guild'] = status;
                oscar = _closure1_slot0;
                report = verify[report];
                report = oscar.bind(tango)(report);
                report = report.GuildIconSizes;
                report = report.XLARGE;
                entity['size'] = report;
                report = true;
                entity['animate'] = report;
                options = zulu.bind(tango)(mike, entity);
 264:
                zulu = _closure1_slot7;
                mike = _closure1_slot3;
                entity = {};
                report = record.guildDetailsContainer;
                entity['style'] = report;
                yankee = _closure1_slot5;
                backup = _closure1_slot0;
                foxtrot = _closure1_slot2;
                result = 10;
                report = foxtrot[result];
                report = backup.bind(tango)(report);
                oscar = report.Text;
                report = {'variant': 'eyebrow', 'color': 'header-secondary'};
                report['children'] = golf;
                oscar = yankee.bind(tango)(oscar, report);
                report = new Array(2);
                report[0] = oscar;
                oscar = {};
                golf = record.guildDetailsContent;
                oscar['style'] = golf;
                golf = new Array(2);
                golf[0] = options;
                options = {};
                verify = record.guildNameAndOnlineMembers;
                options['style'] = verify;
                verify = {};
                offset = record.guildNameWrapper;
                verify['style'] = offset;
                control = _closure1_slot1;
                offset = 14;
                offset = foxtrot[offset];
                sizing = control.bind(tango)(offset);
                offset = {};
                offset['guild'] = kilo;
                source = record.guildPartnerIcon;
                offset['style'] = source;
                source = 15;
                source = foxtrot[source];
                source = control.bind(tango)(source);
                source = source.Sizes;
                source = source.REFRESH_SMALL_16;
                offset['size'] = source;
                source = true;
                offset['disableColor'] = source;
                sizing = yankee.bind(tango)(sizing, offset);
                offset = new Array(2);
                offset[0] = sizing;
                foxtrot = foxtrot[result];
                foxtrot = backup.bind(tango)(foxtrot);
                backup = foxtrot.Text;
                foxtrot = {'variant': 'text-md/bold', 'color': 'header-primary'};
                kilo = kilo.name;
                foxtrot['children'] = kilo;
                foxtrot = yankee.bind(tango)(backup, foxtrot);
                offset[1] = foxtrot;
                verify['children'] = offset;
                offset = zulu.bind(tango)(mike, verify);
                verify = new Array(2);
                verify[0] = offset;
                offset = {};
                foxtrot = record.guildDescriptionSection;
                offset['style'] = foxtrot;
                if(!romeo) { _fun00004_ip = 562; continue _fun00003 }
 550:
                foxtrot = status.presenceCount;
                romeo = null;
                if(!(romeo == foxtrot)) { _fun00004_ip = 662; continue _fun00003 }
 562:
                backup = _closure1_slot5;
                control = _closure1_slot0;
                vacuum = _closure1_slot2;
                romeo = vacuum[result];
                romeo = control.bind(tango)(romeo);
                foxtrot = romeo.Text;
                romeo = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
                kilo = 11;
                sizing = vacuum[kilo];
                sizing = control.bind(tango)(sizing);
                source = sizing.intl;
                sizing = source.string;
                kilo = vacuum[kilo];
                kilo = control.bind(tango)(kilo);
                kilo = kilo.t;
                kilo = kilo.H29mx8;
                kilo = sizing.bind(source)(kilo);
                romeo['children'] = kilo;
                romeo = backup.bind(tango)(foxtrot, romeo);
                _fun00004_ip = 1088; continue _fun00003;
 662:
                kilo = _closure1_slot7;
                backup = _closure1_slot6;
                foxtrot = {};
                vacuum = _closure1_slot5;
                context = _closure1_slot0;
                control = _closure1_slot2;
                sizing = control[result];
                sizing = context.bind(tango)(sizing);
                source = sizing.Text;
                sizing = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
                config = 11;
                papa = control[config];
                papa = context.bind(tango)(papa);
                target = papa.intl;
                papa = target.format;
                control = control[config];
                control = context.bind(tango)(control);
                control = control.t;
                context = control.LC+S+v;
                control = {};
                status = status.presenceCount;
                control['membersOnline'] = status;
                control = papa.bind(target)(context, control);
                sizing['children'] = control;
                source = vacuum.bind(tango)(source, sizing);
                sizing = new Array(3);
                sizing[0] = source;
                control = _closure1_slot3;
                source = {};
                context = record.dotSeparator;
                source['style'] = context;
                source = vacuum.bind(tango)(control, source);
                sizing[1] = source;
                if(update) { _fun00004_ip = 982; continue _fun00003 }
 819:
                if(output) { _fun00004_ip = 982; continue _fun00003 }
 825:
                source = _closure1_slot5;
                update = _closure1_slot6;
                output = {};
                status = _closure1_slot0;
                context = _closure1_slot2;
                control = 12;
                control = context[control];
                control = status.bind(tango)(control);
                vacuum = control.PressableOpacity;
                control = {};
                record = record.joinGuildButton;
                control['style'] = record;
                sequence = function() { // Original name: onPress
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 13;
                    mike = mike[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.handleJoinGuild;
                    entity = _closure2_slot0;
                    entity = entity.id;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                control['onPress'] = sequence;
                sequence = context[result];
                sequence = status.bind(tango)(sequence);
                record = sequence.Text;
                sequence = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
                papa = context[config];
                papa = status.bind(tango)(papa);
                target = papa.intl;
                papa = target.string;
                context = context[config];
                context = status.bind(tango)(context);
                context = context.t;
                context = context.riu2R0;
                context = papa.bind(target)(context);
                sequence['children'] = context;
                sequence = source.bind(tango)(record, sequence);
                control['children'] = sequence;
                control = source.bind(tango)(vacuum, control);
                output['children'] = control;
                output = source.bind(tango)(update, output);
                _fun00004_ip = 1074; continue _fun00003;
 982:
                update = _closure1_slot5;
                sequence = _closure1_slot0;
                source = _closure1_slot2;
                result = source[result];
                result = sequence.bind(tango)(result);
                echo = result.Text;
                result = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
                control = source[config];
                control = sequence.bind(tango)(control);
                vacuum = control.intl;
                control = vacuum.string;
                source = source[config];
                source = sequence.bind(tango)(source);
                source = source.t;
                source = source.inyJqK;
                source = control.bind(vacuum)(source);
                result['children'] = source;
                output = update.bind(tango)(echo, result);
 1074:
                sizing[2] = output;
                foxtrot['children'] = sizing;
                romeo = kilo.bind(tango)(backup, foxtrot);
 1088:
                offset['children'] = romeo;
                offset = yankee.bind(tango)(mike, offset);
                verify[1] = offset;
                options['children'] = verify;
                options = zulu.bind(tango)(mike, options);
                golf[1] = options;
                oscar['children'] = golf;
                oscar = zulu.bind(tango)(mike, oscar);
                report[1] = oscar;
                entity['children'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            }
        };
        tango = oscar[tango];
        oscar = report.bind(entity)(tango);
        report = oscar.fileFinishedImporting;
        tango = 'modules/messages/native/emoji/ExpressionGuildDetails.tsx';
        tango = report.bind(oscar)(tango);
        zulu['default'] = mike;
        zulu['ExpressionGuildDetails'] = mike;
        return entity;
    }
})();