// app/modules/messages/native/emoji/useSharedMessageEmojiStyles.tsx
export default (function(_, argBar, argBaz, __, ___, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    entity = global;
    golf = entity.Object;
    tango = golf.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(golf)(zulu, entity, mike);
    entity = 0;
    mike = oscar[entity];
    entity = undefined;
    golf = report.bind(entity)(mike);
    tango = golf.createStyles;
    mike = {};
    options = {'flexDirection': 'row', 'alignItems': 'center'};
    mike['emojiContainer'] = options;
    offset = 1;
    options = {'flexDirection': 'column', 'flex': 1};
    mike['emojiDescriptionWrapper'] = options;
    options = {'marginLeft': 4294967288, 'marginRight': 8};
    mike['emojiWrapper'] = options;
    options = {'width': 40, 'height': 40, 'marginRight': 12};
    verify = oscar[offset];
    verify = yankee.bind(entity)(verify);
    verify = verify.radii;
    verify = verify.sm;
    options['borderRadius'] = verify;
    mike['emojiIcon'] = options;
    options = {'marginTop': 16, 'marginLeft': 0, 'backgroundColor': null, 'height': 0.5};
    verify = 16;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_MODIFIER_ACCENT;
    options['backgroundColor'] = offset;
    mike['divider'] = options;
    options = {};
    options['marginTop'] = verify;
    mike['ctaButton'] = options;
    mike = tango.bind(golf)(mike);
    tango = 2;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/messages/native/emoji/useSharedMessageEmojiStyles.tsx';
    tango = report.bind(oscar)(tango);
    zulu['useSharedMessageEmojiStyles'] = mike;
    return entity;
})();