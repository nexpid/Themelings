// app/modules/messages/native/emoji/useSharedMessageEmojiStyles.tsx
export default (function(_, argBar, argBaz, __, ___, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    golfie = report.bind(entity)(michal);
    tangon = golfie.createStyles;
    michal = {};
    option = {'flexDirection': 'row', 'alignItems': 'center'};
    michal['emojiContainer'] = option;
    offset = 1;
    option = {'flexDirection': 'column', 'flex': 1};
    michal['emojiDescriptionWrapper'] = option;
    option = {'marginLeft': 4294967288, 'marginRight': 8};
    michal['emojiWrapper'] = option;
    option = {'width': 40, 'height': 40, 'marginRight': 12};
    verify = oscard[offset];
    verify = yankee.bind(entity)(verify);
    verify = verify.radii;
    verify = verify.sm;
    option['borderRadius'] = verify;
    michal['emojiIcon'] = option;
    option = {'marginTop': 16, 'marginLeft': 0, 'backgroundColor': null, 'height': 0.5};
    verify = 16;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_MODIFIER_ACCENT;
    option['backgroundColor'] = offset;
    michal['divider'] = option;
    option = {};
    option['marginTop'] = verify;
    michal['ctaButton'] = option;
    michal = tangon.bind(golfie)(michal);
    tangon = 2;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/messages/native/emoji/useSharedMessageEmojiStyles.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['useSharedMessageEmojiStyles'] = michal;
    return entity;
})();