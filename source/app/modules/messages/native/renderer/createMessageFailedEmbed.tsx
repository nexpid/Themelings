// app/modules/messages/native/renderer/createMessageFailedEmbed.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    tango = tango.MessageFailureState;
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.MessageEmbedTypes;
    var _closure1_slot4 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/messages/native/renderer/createMessageFailedEmbed.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: createMessageFailedEmbed
        _fun69140: for(var _fun69140_ip = 0; ; ) switch(_fun69140_ip) {
 0:
            entity = argFoo;
            tango = entity.uploaderFile;
            mike = entity.useAttachmentUploadPreview;
            report = entity.colors;
            entity = null;
            if(!(entity == tango)) { _fun69140_ip = 145; continue _fun69140 }
 26:
            entity = {};
            oscar = _closure1_slot4;
            oscar = oscar.TEXT;
            entity['type'] = oscar;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            oscar = 4;
            golf = yankee[oscar];
            verify = undefined;
            golf = offset.bind(verify)(golf);
            options = golf.intl;
            golf = options.string;
            oscar = yankee[oscar];
            oscar = offset.bind(verify)(oscar);
            oscar = oscar.t;
            oscar = oscar.lBLP4u;
            oscar = golf.bind(options)(oscar);
            entity['messageSendError'] = oscar;
            zulu = _closure1_slot3;
            zulu = zulu.UNSPECIFIED;
            entity['failureState'] = zulu;
            zulu = true;
            entity['disableBackgroundColor'] = zulu;
            zulu = report.failedMessageBodyTextColor;
            entity['bodyTextColor'] = zulu;
            _fun69140_ip = 532; continue _fun69140;
 145:
            if(mike) { _fun69140_ip = 368; continue _fun69140 }
 151:
            mike = {};
            zulu = _closure1_slot4;
            zulu = zulu.TEXT;
            mike['type'] = zulu;
            golf = _closure1_slot0;
            yankee = _closure1_slot2;
            zulu = 4;
            verify = yankee[zulu];
            options = undefined;
            verify = golf.bind(options)(verify);
            offset = verify.intl;
            verify = offset.formatToPlainString;
            zulu = yankee[zulu];
            zulu = golf.bind(options)(zulu);
            zulu = zulu.t;
            golf = zulu.D0noUl;
            zulu = {};
            yankee = tango.attachmentsCount;
            zulu['count'] = yankee;
            zulu = verify.bind(offset)(golf, zulu);
            mike['numAttachments'] = zulu;
            zulu = _closure1_slot3;
            zulu = zulu.UPLOAD_FAILED;
            mike['failureState'] = zulu;
            verify = tango.currentSize;
            zulu = '';
            golf = 0;
            if(!(golf !== verify)) { _fun69140_ip = 342; continue _fun69140 }
 276:
            golf = _closure1_slot0;
            verify = _closure1_slot2;
            oscar = 6;
            oscar = verify[oscar];
            golf = golf.bind(options)(oscar);
            oscar = golf.sizeString;
            tango = tango.currentSize;
            options = oscar.bind(golf)(tango);
            tango = global;
            tango = tango.HermesInternal;
            golf = tango.concat;
            oscar = ' (';
            tango = ')';
            zulu = golf.bind(oscar)(options, tango);
 342:
            zulu = '' + zulu;
            mike['attachmentsSize'] = zulu;
            zulu = report.embedBodyTextColor;
            mike['bodyTextColor'] = zulu;
            _fun69140_ip = 529; continue _fun69140;
 368:
            zulu = {};
            oscar = _closure1_slot4;
            oscar = oscar.TEXT;
            zulu['type'] = oscar;
            oscar = _closure1_slot0;
            verify = _closure1_slot2;
            golf = 4;
            offset = verify[golf];
            options = undefined;
            offset = oscar.bind(options)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            golf = verify[golf];
            golf = oscar.bind(options)(golf);
            golf = golf.t;
            golf = golf.lBLP4u;
            golf = offset.bind(yankee)(golf);
            zulu['messageSendError'] = golf;
            golf = _closure1_slot3;
            golf = golf.UNSPECIFIED;
            zulu['failureState'] = golf;
            golf = true;
            zulu['disableBackgroundColor'] = golf;
            report = report.failedMessageBodyTextColor;
            zulu['bodyTextColor'] = report;
            report = 2;
            report = verify[report];
            oscar = oscar.bind(options)(report);
            report = oscar.getAssetUriForEmbed;
            golf = _closure1_slot1;
            tango = 5;
            tango = verify[tango];
            tango = golf.bind(options)(tango);
            tango = report.bind(oscar)(tango);
            zulu['iconURL'] = tango;
            mike = zulu;
 529:
            entity = mike;
 532:
            return entity;
        }
    };
    zulu['default'] = tango;
    mike = function(argFoo) { // Original name: createAutomodBlockedMessageEmbed
        entity = argFoo;
        tango = entity.errorMessage;
        zulu = entity.colors;
        entity = {};
        report = _closure1_slot4;
        report = report.TEXT;
        entity['type'] = report;
        entity['messageSendError'] = tango;
        tango = _closure1_slot3;
        tango = tango.AUTO_MODERATION_BLOCKED_MESSAGE;
        entity['failureState'] = tango;
        tango = true;
        entity['disableBackgroundColor'] = tango;
        zulu = zulu.automodBlockedBodyTextColor;
        entity['bodyTextColor'] = zulu;
        tango = _closure1_slot0;
        golf = _closure1_slot2;
        zulu = 2;
        zulu = golf[zulu];
        oscar = undefined;
        tango = tango.bind(oscar)(zulu);
        zulu = tango.getAssetUriForEmbed;
        report = _closure1_slot1;
        mike = 3;
        mike = golf[mike];
        mike = report.bind(oscar)(mike);
        mike = zulu.bind(tango)(mike);
        entity['iconURL'] = mike;
        return entity;
    };
    zulu['createAutomodBlockedMessageEmbed'] = mike;
    return entity;
})();