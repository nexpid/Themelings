// app/modules/messages/native/renderer/row_data/embeds/coded_links/AppDirectoryProfileEmbed.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: FetchingApplicationEmbed
        yankee = _closure1_slot0;
        romeo = _closure1_slot2;
        entity = 16;
        entity = romeo[entity];
        tango = undefined;
        mike = yankee.bind(tango)(entity);
        entity = mike.useMessageRendererTheme;
        zulu = entity.bind(mike)();
        entity = 5;
        entity = romeo[entity];
        mike = yankee.bind(tango)(entity);
        entity = mike.useEmbedThemeColors;
        entity = entity.bind(mike)(zulu);
        golf = entity.colors;
        foxtrot = entity.baseColors;
        zulu = _closure1_slot7;
        mike = _closure1_slot1;
        entity = 17;
        entity = romeo[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        options = 6;
        verify = romeo[options];
        verify = yankee.bind(tango)(verify);
        offset = verify.intl;
        verify = offset.string;
        options = romeo[options];
        options = yankee.bind(tango)(options);
        options = options.t;
        options = options.m9hXGR;
        verify = verify.bind(offset)(options);
        options = verify.toUpperCase;
        options = options.bind(verify)();
        entity['headerText'] = options;
        options = golf.resolvingGradientEnd;
        entity['resolvingGradientEnd'] = options;
        golf = golf.resolvingGradientStart;
        entity['resolvingGradientStart'] = golf;
        oscar = _closure1_slot6;
        oscar = oscar.GUILD;
        entity['type'] = oscar;
        backup = entity;
        report = copyDataProperties(backup, foxtrot);
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot8 = entity;
    entity = function() { // Original name: InvalidApplicationEmbed
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            offset = _closure1_slot0;
            romeo = _closure1_slot2;
            entity = 16;
            entity = romeo[entity];
            tango = undefined;
            mike = offset.bind(tango)(entity);
            entity = mike.useMessageRendererTheme;
            yankee = entity.bind(mike)();
            entity = 5;
            entity = romeo[entity];
            mike = offset.bind(tango)(entity);
            entity = mike.useEmbedThemeColors;
            entity = entity.bind(mike)(yankee);
            oscar = entity.colors;
            kilo = entity.baseColors;
            zulu = _closure1_slot7;
            backup = _closure1_slot1;
            entity = 17;
            entity = romeo[entity];
            mike = backup.bind(tango)(entity);
            entity = {};
            sizing = entity;
            golf = copyDataProperties(sizing, kilo);
            golf = 6;
            options = romeo[golf];
            options = offset.bind(tango)(options);
            foxtrot = options.intl;
            verify = foxtrot.string;
            options = romeo[golf];
            options = offset.bind(tango)(options);
            options = options.t;
            options = options.j4KtLS;
            verify = verify.bind(foxtrot)(options);
            options = verify.toUpperCase;
            verify = options.bind(verify)();
            options = 'headerText';
            entity[options] = verify;
            options = 7;
            options = romeo[options];
            foxtrot = offset.bind(tango)(options);
            verify = foxtrot.processColorOrThrow;
            options = 8;
            options = romeo[options];
            options = backup.bind(tango)(options);
            options = options.unsafe_rawColors;
            options = options.RED_400;
            verify = verify.bind(foxtrot)(options);
            options = 'titleColor';
            entity[options] = verify;
            options = romeo[golf];
            options = offset.bind(tango)(options);
            foxtrot = options.intl;
            verify = foxtrot.string;
            options = romeo[golf];
            options = offset.bind(tango)(options);
            options = options.t;
            options = options.0H5OT0;
            verify = verify.bind(foxtrot)(options);
            options = 'subtitle';
            entity[options] = verify;
            options = romeo[golf];
            options = offset.bind(tango)(options);
            verify = options.intl;
            options = verify.string;
            golf = romeo[golf];
            golf = offset.bind(tango)(golf);
            golf = golf.t;
            golf = golf.NaQLEx;
            options = options.bind(verify)(golf);
            golf = 'titleText';
            entity[golf] = options;
            verify = _closure1_slot4;
            options = verify.resolveAssetSource;
            golf = 9;
            golf = romeo[golf];
            offset = offset.bind(tango)(golf);
            golf = offset.isThemeDark;
            golf = golf.bind(offset)(yankee);
            yankee = _closure1_slot1;
            romeo = _closure1_slot2;
            if(golf) { _fun00002_ip = 383; continue _fun00001 }
 369:
            golf = 11;
            golf = romeo[golf];
            golf = yankee.bind(tango)(golf);
            _fun00002_ip = 395; continue _fun00001;
 383:
            offset = 10;
            offset = romeo[offset];
            golf = yankee.bind(tango)(offset);
 395:
            golf = options.bind(verify)(golf);
            options = golf.uri;
            golf = 'thumbnailUrl';
            entity[golf] = options;
            options = oscar.thumbnailBackgroundColor;
            golf = 'thumbnailBackgroundColor';
            entity[golf] = options;
            golf = oscar.subtitleColor;
            oscar = 'subtitleColor';
            entity[oscar] = golf;
            report = _closure1_slot6;
            oscar = report.GUILD;
            report = 'type';
            entity[report] = oscar;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot9 = entity;
    entity = function(argFoo) { // Original name: ApplicationEmbed
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            verify = entity.application;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 16;
            entity = zulu[entity];
            tango = undefined;
            oscar = mike.bind(tango)(entity);
            entity = oscar.useMessageRendererTheme;
            golf = entity.bind(oscar)();
            entity = 5;
            entity = zulu[entity];
            oscar = mike.bind(tango)(entity);
            entity = oscar.useEmbedThemeColors;
            entity = entity.bind(oscar)(golf);
            oscar = entity.colors;
            yankee = entity.baseColors;
            entity = 12;
            entity = zulu[entity];
            options = mike.bind(tango)(entity);
            golf = options.getAssetUriForEmbed;
            offset = _closure1_slot1;
            entity = 13;
            entity = zulu[entity];
            entity = offset.bind(tango)(entity);
            backup = golf.bind(options)(entity);
            entity = 14;
            entity = zulu[entity];
            zulu = mike.bind(tango)(entity);
            mike = zulu.shortenAndLocalizeNumber;
            options = verify.directory_entry;
            entity = null;
            offset = entity == options;
            golf = undefined;
            if(offset) { _fun00004_ip = 157; continue _fun00003 }
 151:
            golf = options.guild_count;
 157:
            options = entity != golf;
            entity = 0;
            if(!options) { _fun00004_ip = 169; continue _fun00003 }
 166:
            entity = golf;
 169:
            romeo = mike.bind(zulu)(entity);
            foxtrot = _closure1_slot0;
            options = _closure1_slot2;
            offset = 6;
            entity = options[offset];
            entity = foxtrot.bind(tango)(entity);
            golf = entity.intl;
            zulu = golf.formatToPlainString;
            entity = options[offset];
            entity = foxtrot.bind(tango)(entity);
            entity = entity.t;
            mike = entity.6IW6Wl;
            entity = {};
            entity['guildCount'] = romeo;
            romeo = zulu.bind(golf)(mike, entity);
            zulu = _closure1_slot7;
            golf = _closure1_slot1;
            entity = 17;
            entity = options[entity];
            mike = golf.bind(tango)(entity);
            entity = {};
            result = entity;
            output = yankee;
            yankee = copyDataProperties(result, output);
            kilo = oscar.acceptLabelGreenBackgroundColor;
            yankee = 'acceptLabelBackgroundColor';
            entity[yankee] = kilo;
            kilo = oscar.acceptLabelGreenColor;
            yankee = 'acceptLabelBorderColor';
            entity[yankee] = kilo;
            kilo = oscar.acceptLabelGreenColor;
            yankee = 'acceptLabelColor';
            entity[yankee] = kilo;
            yankee = options[offset];
            yankee = foxtrot.bind(tango)(yankee);
            sizing = yankee.intl;
            kilo = sizing.string;
            yankee = options[offset];
            yankee = foxtrot.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.NgXl3N;
            kilo = kilo.bind(sizing)(yankee);
            yankee = 'acceptLabelText';
            entity[yankee] = kilo;
            kilo = true;
            yankee = 'embedCanBeTapped';
            entity[yankee] = kilo;
            kilo = false;
            yankee = 'canBeAccepted';
            entity[yankee] = kilo;
            yankee = 'channelIcon';
            entity[yankee] = backup;
            yankee = 'channelName';
            entity[yankee] = romeo;
            yankee = options[offset];
            yankee = foxtrot.bind(tango)(yankee);
            romeo = yankee.intl;
            yankee = romeo.string;
            offset = options[offset];
            offset = foxtrot.bind(tango)(offset);
            offset = offset.t;
            offset = offset.KC1oZ2;
            yankee = yankee.bind(romeo)(offset);
            offset = yankee.toUpperCase;
            yankee = offset.bind(yankee)();
            offset = 'headerText';
            entity[offset] = yankee;
            yankee = oscar.headerColor;
            offset = 'headerColor';
            entity[offset] = yankee;
            yankee = '';
            offset = 'subtitle';
            entity[offset] = yankee;
            yankee = oscar.subtitleColor;
            offset = 'subtitleColor';
            entity[offset] = yankee;
            yankee = verify.name;
            offset = 'titleText';
            entity[offset] = yankee;
            offset = oscar.titleColor;
            oscar = 'titleColor';
            entity[oscar] = offset;
            offset = 25;
            oscar = 'thumbnailCornerRadius';
            entity[oscar] = offset;
            oscar = 15;
            oscar = options[oscar];
            options = golf.bind(tango)(oscar);
            golf = options.getApplicationIconURL;
            oscar = {};
            offset = verify.id;
            oscar['id'] = offset;
            verify = verify.icon;
            oscar['icon'] = verify;
            golf = golf.bind(options)(oscar);
            oscar = 'thumbnailUrl';
            entity[oscar] = golf;
            report = _closure1_slot6;
            oscar = report.GUILD;
            report = 'type';
            entity[report] = oscar;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot10 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Image;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.InviteTypes;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot7 = tango;
    tango = 20;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/messages/native/renderer/row_data/embeds/coded_links/AppDirectoryProfileEmbed.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: AppDirectoryProfileEmbed
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            offset = entity.applicationId;
            var _closure2_slot0 = offset;
            zulu = _closure1_slot0;
            report = _closure1_slot2;
            entity = 18;
            entity = report[entity];
            report = undefined;
            golf = zulu.bind(report)(entity);
            oscar = golf.useStateFromStoresObject;
            entity = _closure1_slot5;
            zulu = new Array(1);
            zulu[0] = entity;
            entity = function() {
                entity = {};
                tango = _closure1_slot5;
                mike = tango.getApplication;
                zulu = _closure2_slot0;
                mike = mike.bind(tango)(zulu);
                entity['application'] = mike;
                mike = tango.isFetching;
                mike = mike.bind(tango)(zulu);
                entity['isFetching'] = mike;
                mike = tango.isInvalidApplication;
                mike = mike.bind(tango)(zulu);
                entity['isInvalidApplication'] = mike;
                return entity;
            };
            zulu = oscar.bind(golf)(zulu, entity);
            oscar = zulu.application;
            entity = zulu.isFetching;
            zulu = zulu.isInvalidApplication;
            verify = _closure1_slot3;
            options = verify.useEffect;
            golf = new Array(1);
            golf[0] = offset;
            tango = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 19;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.getEmbedApplication;
                mike = _closure2_slot0;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            tango = options.bind(verify)(tango, golf);
            if(zulu) { _fun00006_ip = 169; continue _fun00005 }
 120:
            if(entity) { _fun00006_ip = 151; continue _fun00005 }
 123:
            entity = null;
            if(!(entity != oscar)) { _fun00006_ip = 151; continue _fun00005 }
 129:
            tango = _closure1_slot7;
            zulu = _closure1_slot10;
            entity = {};
            entity['application'] = oscar;
            entity = tango.bind(report)(zulu, entity);
            _fun00006_ip = 167; continue _fun00005;
 151:
            oscar = _closure1_slot7;
            tango = _closure1_slot8;
            zulu = {};
            entity = oscar.bind(report)(tango, zulu);
 167:
            _fun00006_ip = 185; continue _fun00005;
 169:
            tango = _closure1_slot7;
            zulu = _closure1_slot9;
            mike = {};
            entity = tango.bind(report)(zulu, mike);
 185:
            return entity;
        }
    };
    zulu['default'] = tango;
    mike = function(argFoo) { // Original name: createAppDirectoryProfileEmbed
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            entity = argFoo;
            verify = entity.theme;
            report = entity.applicationId;
            mike = _closure1_slot5;
            entity = mike.getApplication;
            tango = entity.bind(mike)(report);
            entity = mike.isInvalidApplication;
            entity = entity.bind(mike)(report);
            if(entity) { _fun00008_ip = 876; continue _fun00007 }
 49:
            mike = _closure1_slot5;
            entity = mike.isFetching;
            entity = entity.bind(mike)(report);
            if(entity) { _fun00008_ip = 719; continue _fun00007 }
 70:
            entity = null;
            if(!(entity != tango)) { _fun00008_ip = 719; continue _fun00007 }
 79:
            mike = {};
            mike['theme'] = verify;
            mike['application'] = tango;
            tango = mike.theme;
            report = mike.application;
            foxtrot = _closure1_slot1;
            options = _closure1_slot2;
            mike = 5;
            mike = options[mike];
            yankee = undefined;
            mike = foxtrot.bind(yankee)(mike);
            tango = mike.bind(yankee)(tango);
            mike = tango.colors;
            oscar = tango.baseColors;
            golf = _closure1_slot0;
            tango = 12;
            tango = options[tango];
            romeo = golf.bind(yankee)(tango);
            offset = romeo.getAssetUriForEmbed;
            tango = 13;
            tango = options[tango];
            tango = foxtrot.bind(yankee)(tango);
            foxtrot = offset.bind(romeo)(tango);
            tango = 14;
            tango = options[tango];
            golf = golf.bind(yankee)(tango);
            tango = golf.shortenAndLocalizeNumber;
            offset = report.directory_entry;
            romeo = entity == offset;
            options = undefined;
            if(romeo) { _fun00008_ip = 217; continue _fun00007 }
 211:
            options = offset.guild_count;
 217:
            offset = entity != options;
            entity = 0;
            if(!offset) { _fun00008_ip = 229; continue _fun00007 }
 226:
            entity = options;
 229:
            backup = tango.bind(golf)(entity);
            tango = _closure1_slot0;
            golf = _closure1_slot2;
            romeo = 6;
            entity = golf[romeo];
            entity = tango.bind(yankee)(entity);
            offset = entity.intl;
            options = offset.formatToPlainString;
            entity = golf[romeo];
            entity = tango.bind(yankee)(entity);
            entity = entity.t;
            tango = entity.6IW6Wl;
            entity = {};
            entity['guildCount'] = backup;
            options = options.bind(offset)(tango, entity);
            tango = _closure1_slot1;
            entity = 15;
            entity = golf[entity];
            golf = tango.bind(yankee)(entity);
            tango = golf.getApplicationIconURL;
            entity = {};
            offset = report.id;
            entity['id'] = offset;
            offset = report.icon;
            entity['icon'] = offset;
            offset = tango.bind(golf)(entity);
            golf = 'number';
            entity = typeof offset;
            tango = offset;
            if(!(golf === entity)) { _fun00008_ip = 379; continue _fun00007 }
 358:
            golf = _closure1_slot4;
            entity = golf.resolveAssetSource;
            entity = entity.bind(golf)(offset);
            tango = entity.uri;
 379:
            entity = {};
            output = entity;
            sizing = oscar;
            oscar = copyDataProperties(output, sizing);
            golf = mike.acceptLabelGreenBackgroundColor;
            oscar = 'acceptLabelBackgroundColor';
            entity[oscar] = golf;
            golf = mike.acceptLabelGreenColor;
            oscar = 'acceptLabelBorderColor';
            entity[oscar] = golf;
            golf = mike.acceptLabelGreenColor;
            oscar = 'acceptLabelColor';
            entity[oscar] = golf;
            offset = _closure1_slot0;
            oscar = _closure1_slot2;
            golf = oscar[romeo];
            golf = offset.bind(yankee)(golf);
            kilo = golf.intl;
            backup = kilo.string;
            golf = oscar[romeo];
            golf = offset.bind(yankee)(golf);
            golf = golf.t;
            golf = golf.NgXl3N;
            backup = backup.bind(kilo)(golf);
            golf = 'acceptLabelText';
            entity[golf] = backup;
            backup = true;
            golf = 'embedCanBeTapped';
            entity[golf] = backup;
            backup = false;
            golf = 'canBeAccepted';
            entity[golf] = backup;
            golf = 'channelIcon';
            entity[golf] = foxtrot;
            golf = 'channelName';
            entity[golf] = options;
            golf = oscar[romeo];
            golf = offset.bind(yankee)(golf);
            options = golf.intl;
            golf = options.string;
            oscar = oscar[romeo];
            oscar = offset.bind(yankee)(oscar);
            oscar = oscar.t;
            oscar = oscar.KC1oZ2;
            golf = golf.bind(options)(oscar);
            oscar = golf.toUpperCase;
            golf = oscar.bind(golf)();
            oscar = 'headerText';
            entity[oscar] = golf;
            golf = mike.headerColor;
            oscar = 'headerColor';
            entity[oscar] = golf;
            golf = '';
            oscar = 'subtitle';
            entity[oscar] = golf;
            golf = mike.subtitleColor;
            oscar = 'subtitleColor';
            entity[oscar] = golf;
            oscar = report.name;
            report = 'titleText';
            entity[report] = oscar;
            report = mike.titleColor;
            mike = 'titleColor';
            entity[mike] = report;
            report = 25;
            mike = 'thumbnailCornerRadius';
            entity[mike] = report;
            mike = 'thumbnailUrl';
            entity[mike] = tango;
            mike = _closure1_slot6;
            tango = mike.GUILD;
            mike = 'type';
            entity[mike] = tango;
            _fun00008_ip = 871; continue _fun00007;
 719:
            tango = _closure1_slot1;
            romeo = _closure1_slot2;
            mike = 5;
            mike = romeo[mike];
            yankee = undefined;
            mike = tango.bind(yankee)(mike);
            mike = mike.bind(yankee)(verify);
            report = mike.colors;
            sizing = mike.baseColors;
            mike = {};
            offset = _closure1_slot0;
            oscar = 6;
            golf = romeo[oscar];
            golf = offset.bind(yankee)(golf);
            options = golf.intl;
            golf = options.string;
            oscar = romeo[oscar];
            oscar = offset.bind(yankee)(oscar);
            oscar = oscar.t;
            oscar = oscar.m9hXGR;
            golf = golf.bind(options)(oscar);
            oscar = golf.toUpperCase;
            oscar = oscar.bind(golf)();
            mike['headerText'] = oscar;
            oscar = report.resolvingGradientEnd;
            mike['resolvingGradientEnd'] = oscar;
            report = report.resolvingGradientStart;
            mike['resolvingGradientStart'] = report;
            report = _closure1_slot6;
            report = report.GUILD;
            mike['type'] = report;
            output = mike;
            tango = copyDataProperties(output, sizing);
            entity = mike;
 871:
            _fun00008_ip = 1296; continue _fun00007;
 876:
            foxtrot = _closure1_slot1;
            yankee = _closure1_slot2;
            mike = 5;
            mike = yankee[mike];
            offset = undefined;
            mike = foxtrot.bind(offset)(mike);
            report = mike.bind(offset)(verify);
            tango = report.colors;
            mike = {};
            sizing = report.baseColors;
            output = mike;
            report = copyDataProperties(output, sizing);
            options = _closure1_slot0;
            report = 6;
            oscar = yankee[report];
            oscar = options.bind(offset)(oscar);
            romeo = oscar.intl;
            golf = romeo.string;
            oscar = yankee[report];
            oscar = options.bind(offset)(oscar);
            oscar = oscar.t;
            oscar = oscar.j4KtLS;
            golf = golf.bind(romeo)(oscar);
            oscar = golf.toUpperCase;
            golf = oscar.bind(golf)();
            oscar = 'headerText';
            mike[oscar] = golf;
            oscar = 7;
            oscar = yankee[oscar];
            romeo = options.bind(offset)(oscar);
            golf = romeo.processColorOrThrow;
            oscar = 8;
            oscar = yankee[oscar];
            oscar = foxtrot.bind(offset)(oscar);
            oscar = oscar.unsafe_rawColors;
            oscar = oscar.RED_400;
            golf = golf.bind(romeo)(oscar);
            oscar = 'titleColor';
            mike[oscar] = golf;
            oscar = yankee[report];
            oscar = options.bind(offset)(oscar);
            romeo = oscar.intl;
            golf = romeo.string;
            oscar = yankee[report];
            oscar = options.bind(offset)(oscar);
            oscar = oscar.t;
            oscar = oscar.0H5OT0;
            golf = golf.bind(romeo)(oscar);
            oscar = 'subtitle';
            mike[oscar] = golf;
            oscar = yankee[report];
            oscar = options.bind(offset)(oscar);
            golf = oscar.intl;
            oscar = golf.string;
            report = yankee[report];
            report = options.bind(offset)(report);
            report = report.t;
            report = report.NaQLEx;
            oscar = oscar.bind(golf)(report);
            report = 'titleText';
            mike[report] = oscar;
            golf = _closure1_slot4;
            oscar = golf.resolveAssetSource;
            report = 9;
            report = yankee[report];
            options = options.bind(offset)(report);
            report = options.isThemeDark;
            report = report.bind(options)(verify);
            verify = _closure1_slot1;
            yankee = _closure1_slot2;
            if(report) { _fun00008_ip = 1212; continue _fun00007 }
 1198:
            report = 11;
            report = yankee[report];
            report = verify.bind(offset)(report);
            _fun00008_ip = 1224; continue _fun00007;
 1212:
            options = 10;
            options = yankee[options];
            report = verify.bind(offset)(options);
 1224:
            report = oscar.bind(golf)(report);
            oscar = report.uri;
            report = 'thumbnailUrl';
            mike[report] = oscar;
            oscar = tango.thumbnailBackgroundColor;
            report = 'thumbnailBackgroundColor';
            mike[report] = oscar;
            report = tango.subtitleColor;
            tango = 'subtitleColor';
            mike[tango] = report;
            zulu = _closure1_slot6;
            tango = zulu.GUILD;
            zulu = 'type';
            mike[zulu] = tango;
            entity = mike;
 1296:
            return entity;
        }
    };
    zulu['createAppDirectoryProfileEmbed'] = mike;
    return entity;
})();