// app/modules/messages/native/renderer/context/NestedMessageContext.tsx
export default (function(_, argBar, __, argCor, ___, argFre, argPlu) {
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    report = 0;
    tangon = oscard[report];
    michal = argCor;
    entity = undefined;
    golfie = michal.bind(entity)(tangon);
    michal = {};
    michal['BLOCKED_MESSAGE'] = report;
    tangon = 'BLOCKED_MESSAGE';
    michal[report] = tangon;
    report = 1;
    michal['REPLIED_MESSAGE'] = report;
    tangon = 'REPLIED_MESSAGE';
    michal[report] = tangon;
    option = 2;
    michal['THREAD_EMBED'] = option;
    tangon = 'THREAD_EMBED';
    michal[option] = tangon;
    tangon = golfie.createContext;
    tangon = tangon.bind(golfie)(entity);
    oscard = oscard[report];
    report = argBar;
    golfie = report.bind(entity)(oscard);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/messages/native/renderer/context/NestedMessageContext.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    zuuluu['NestedMessageType'] = michal;
    return entity;
})();