// app/modules/messages/native/renderer/rows/UploadProgress.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    zulu = argFred;
    golf = argPlugh;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = golf;
    mike = function(argFoo, argBar, argBaz) { // Original name: generateUploadProgressRowData
        entity = argFoo;
        mike = entity.changeType;
        offset = entity.roleStyle;
        yankee = entity.message;
        zulu = entity.files;
        entity = {};
        tango = _closure1_slot2;
        tango = tango.UPLOAD_PROGRESS;
        entity['type'] = tango;
        tango = {};
        golf = _closure1_slot0;
        options = _closure1_slot1;
        report = 4;
        report = options[report];
        oscar = undefined;
        verify = golf.bind(oscar)(report);
        report = {'options': null, 'message': null, 'roleStyle': null, 'isFirst': true, 'isEditing': false, 'canShowImages': false};
        romeo = argBar;
        report['options'] = romeo;
        report['message'] = yankee;
        report['roleStyle'] = offset;
        foxtrot = verify.bind(oscar)(report);
        backup = tango;
        report = copyDataProperties(backup, foxtrot);
        report = 5;
        report = options[report];
        golf = golf.bind(oscar)(report);
        oscar = golf.createUploadProgressEmbed;
        report = argBaz;
        oscar = oscar.bind(golf)(zulu, report);
        report = 'progress';
        tango[report] = oscar;
        entity['message'] = tango;
        entity['changeType'] = mike;
        mike = 0;
        mike = zulu[mike];
        mike = mike.id;
        entity['fileId'] = mike;
        return entity;
    };
    var _closure1_slot4 = mike;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, report);
    entity = 0;
    options = golf[entity];
    report = argCorge;
    entity = undefined;
    report = report.bind(entity)(options);
    report = 1;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.RowType;
    var _closure1_slot2 = report;
    report = 2;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot3 = report;
    report = 6;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/messages/native/renderer/rows/UploadProgress.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: UploadProgress
        entity = argFoo;
        options = entity.row;
        golf = entity.options;
        oscar = entity.theme;
        tango = _closure1_slot3;
        mike = _closure1_slot0;
        zulu = _closure1_slot1;
        entity = 3;
        entity = zulu[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.UploadProgress;
        entity = {};
        report = _closure1_slot4;
        offset = report.bind(zulu)(options, golf, oscar);
        yankee = entity;
        report = copyDataProperties(yankee, offset);
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = tango;
    zulu['generateUploadProgressRowData'] = mike;
    return entity;
})();