// app/modules/messages/native/renderer/components/Row.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    golfie = function(argFoo) { // Original name: makeRowComponent
        michal = argFoo;
        var _closure2_slot0 = michal;
        entity = function(argFoo) {
            tangon = argFoo;
            entity = tangon.children;
            michal = null;
            zuuluu = Object.create(michal);
            michal = 0;
            zuuluu['children'] = michal;
            option = {};
            golfie = tangon;
            oscard = zuuluu;
            michal = copyDataProperties(option, golfie, oscard);
            tangon = _closure1_slot0;
            zuuluu = {};
            report = _closure2_slot0;
            zuuluu['type'] = report;
            zuuluu['rowProps'] = michal;
            zuuluu['children'] = entity;
            michal = undefined;
            entity = 'row';
            entity = tangon.bind(michal)(entity, zuuluu);
            return entity;
        };
        return entity;
    };
    entity = global;
    verify = entity.Object;
    tangon = verify.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(verify)(zuuluu, entity, michal);
    entity = 0;
    tangon = oscard[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(tangon);
    michal = 1;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    tangon = michal.RowType;
    michal = 2;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.jsx;
    var _closure1_slot0 = michal;
    michal = {};
    option = tangon.SEPARATOR;
    option = golfie.bind(entity)(option);
    michal['Separator'] = option;
    option = tangon.MESSAGE;
    option = golfie.bind(entity)(option);
    michal['Message'] = option;
    option = tangon.BLOCKED_GROUP;
    option = golfie.bind(entity)(option);
    michal['BlockedGroup'] = option;
    tangon = tangon.LOADING;
    tangon = golfie.bind(entity)(tangon);
    michal['Loading'] = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/messages/native/renderer/components/Row.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();