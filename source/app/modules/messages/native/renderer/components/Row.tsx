// app/modules/messages/native/renderer/components/Row.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    golf = function(argFoo) { // Original name: makeRowComponent
        mike = argFoo;
        var _closure2_slot0 = mike;
        entity = function(argFoo) {
            tango = argFoo;
            entity = tango.children;
            mike = null;
            zulu = Object.create(mike);
            mike = 0;
            zulu['children'] = mike;
            options = {};
            golf = tango;
            oscar = zulu;
            mike = copyDataProperties(options, golf, oscar);
            tango = _closure1_slot0;
            zulu = {};
            report = _closure2_slot0;
            zulu['type'] = report;
            zulu['rowProps'] = mike;
            zulu['children'] = entity;
            mike = undefined;
            entity = 'row';
            entity = tango.bind(mike)(entity, zulu);
            return entity;
        };
        return entity;
    };
    entity = global;
    verify = entity.Object;
    tango = verify.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(verify)(zulu, entity, mike);
    entity = 0;
    tango = oscar[entity];
    mike = argCorge;
    entity = undefined;
    mike = mike.bind(entity)(tango);
    mike = 1;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    tango = mike.RowType;
    mike = 2;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    mike = mike.jsx;
    var _closure1_slot0 = mike;
    mike = {};
    options = tango.SEPARATOR;
    options = golf.bind(entity)(options);
    mike['Separator'] = options;
    options = tango.MESSAGE;
    options = golf.bind(entity)(options);
    mike['Message'] = options;
    options = tango.BLOCKED_GROUP;
    options = golf.bind(entity)(options);
    mike['BlockedGroup'] = options;
    options = tango.UPLOAD_PROGRESS;
    options = golf.bind(entity)(options);
    mike['UploadProgress'] = options;
    tango = tango.LOADING;
    tango = golf.bind(entity)(tango);
    mike['Loading'] = tango;
    tango = 3;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/messages/native/renderer/components/Row.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();