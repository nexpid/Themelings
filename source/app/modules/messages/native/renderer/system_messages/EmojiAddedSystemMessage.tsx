// app/modules/messages/native/renderer/system_messages/EmojiAddedSystemMessage.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/messages/native/renderer/system_messages/EmojiAddedSystemMessage.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: EmojiAddedSystemMessage
        entity = argFoo;
        oscard = entity.row;
        yankee = oscard.message;
        var _closure2_slot0 = yankee;
        michal = _closure1_slot1;
        golfie = _closure1_slot2;
        tangon = 2;
        report = golfie[tangon];
        tangon = undefined;
        report = michal.bind(tangon)(report);
        report = report.bind(tangon)(yankee);
        offset = report.nick;
        var _closure2_slot1 = offset;
        option = _closure1_slot0;
        report = 3;
        report = golfie[report];
        verify = option.bind(tangon)(report);
        option = verify.useSystemMessageEmoji;
        report = yankee.content;
        romeon = option.bind(verify)(report);
        var _closure2_slot2 = romeon;
        verify = _closure1_slot3;
        option = verify.useMemo;
        report = new Array(4);
        report[0] = romeon;
        romeon = yankee.author;
        romeon = romeon.id;
        report[1] = romeon;
        yankee = yankee.channel_id;
        report[2] = yankee;
        report[3] = offset;
        zuuluu = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                oscard = {};
                michal = 'bindUserMenu';
                oscard['action'] = michal;
                entity = _closure2_slot0;
                zuuluu = entity.author;
                zuuluu = zuuluu.id;
                oscard['userId'] = zuuluu;
                zuuluu = entity.channel_id;
                oscard['messageChannelId'] = zuuluu;
                zuuluu = true;
                oscard['medium'] = zuuluu;
                report = {};
                report['action'] = michal;
                michal = entity.author;
                michal = michal.id;
                report['userId'] = michal;
                entity = entity.channel_id;
                report['messageChannelId'] = entity;
                entity = _closure2_slot2;
                verify = null;
                if(!(verify != entity)) { _fun00002_ip = 218; continue _fun00001 }
 95:
                option = _closure1_slot0;
                offset = _closure1_slot2;
                entity = 4;
                zuuluu = offset[entity];
                michal = undefined;
                zuuluu = option.bind(michal)(zuuluu);
                tangon = zuuluu.intl;
                zuuluu = tangon.formatToParts;
                entity = offset[entity];
                entity = option.bind(michal)(entity);
                entity = entity.t;
                michal = entity.SYlkPj;
                entity = {};
                option = _closure2_slot1;
                entity['username'] = option;
                entity['usernameOnClick'] = oscard;
                option = _closure2_slot2;
                option = option.originalName;
                if(!(verify == option)) { _fun00002_ip = 189; continue _fun00001 }
 180:
                verify = _closure2_slot2;
                option = verify.name;
 189:
                entity['emojiName'] = option;
                entity['emojiOnClick'] = report;
                report = '[emoji]';
                entity['emojiPreview'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                _fun00002_ip = 295; continue _fun00001;
 218:
                option = _closure1_slot0;
                verify = _closure1_slot2;
                michal = 4;
                tangon = verify[michal];
                zuuluu = undefined;
                tangon = option.bind(zuuluu)(tangon);
                report = tangon.intl;
                tangon = report.formatToParts;
                michal = verify[michal];
                michal = option.bind(zuuluu)(michal);
                michal = michal.t;
                zuuluu = michal.7NBgIS;
                michal = {};
                golfie = _closure2_slot1;
                michal['username'] = golfie;
                michal['usernameOnClick'] = oscard;
                entity = tangon.bind(report)(zuuluu, michal);
 295:
                return entity;
            }
        };
        report = option.bind(verify)(zuuluu, report);
        zuuluu = _closure1_slot4;
        entity = 8;
        entity = golfie[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        entity['row'] = oscard;
        entity['content'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    michal = function(argFoo) { // Original name: createEmojiAddedSystemMessage
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            tangon = argFoo;
            entity = tangon.message;
            oscard = entity.author;
            option = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 2;
            entity = verify[entity];
            zuuluu = undefined;
            golfie = option.bind(zuuluu)(entity);
            report = golfie.getMessageAuthor;
            entity = tangon.message;
            entity = report.bind(golfie)(entity);
            yankee = entity.nick;
            offset = {};
            golfie = 'bindUserMenu';
            offset['action'] = golfie;
            entity = oscard.id;
            offset['userId'] = entity;
            entity = tangon.message;
            entity = entity.channel_id;
            offset['messageChannelId'] = entity;
            entity = true;
            offset['medium'] = entity;
            report = 3;
            report = verify[report];
            verify = option.bind(zuuluu)(report);
            option = verify.getSystemMessageEmoji;
            report = tangon.message;
            report = report.content;
            option = option.bind(verify)(report);
            kiloes = null;
            if(!(kiloes != option)) { _fun00004_ip = 549; continue _fun00003 }
 146:
            verify = _closure1_slot1;
            backup = _closure1_slot2;
            report = 6;
            report = backup[report];
            romeon = verify.bind(zuuluu)(report);
            verify = romeon.getEmojiURL;
            report = {};
            foxtra = option.id;
            report['id'] = foxtra;
            foxtra = option.animated;
            report['animated'] = foxtra;
            foxtra = 48;
            report['size'] = foxtra;
            verify = verify.bind(romeon)(report);
            romeon = {};
            report = _closure1_slot0;
            foxtra = 7;
            foxtra = backup[foxtra];
            foxtra = report.bind(zuuluu)(foxtra);
            foxtra = foxtra.AST_KEY;
            foxtra = foxtra.CUSTOM_EMOJI;
            romeon['type'] = foxtra;
            foxtra = false;
            romeon['jumboable'] = foxtra;
            romeon['src'] = verify;
            foxtra = option.animated;
            romeon['animateEmoji'] = foxtra;
            romeon['frozenSrc'] = verify;
            foxtra = option.name;
            romeon['alt'] = foxtra;
            foxtra = {};
            foxtra['action'] = golfie;
            oscard = oscard.id;
            foxtra['userId'] = oscard;
            oscard = tangon.message;
            oscard = oscard.channel_id;
            foxtra['messageChannelId'] = oscard;
            foxtra['medium'] = entity;
            entity = 4;
            oscard = backup[entity];
            oscard = report.bind(zuuluu)(oscard);
            golfie = oscard.intl;
            oscard = golfie.formatToParts;
            entity = backup[entity];
            entity = report.bind(zuuluu)(entity);
            entity = entity.t;
            report = entity.SYlkPj;
            entity = {};
            entity['username'] = yankee;
            entity['usernameOnClick'] = offset;
            backup = option.originalName;
            if(!(kiloes == backup)) { _fun00004_ip = 382; continue _fun00003 }
 377:
            backup = option.name;
 382:
            entity['emojiName'] = backup;
            entity['emojiOnClick'] = foxtra;
            entity['emojiPreview'] = romeon;
            oscard = oscard.bind(golfie)(report, entity);
            report = {'count': 0, 'burst_count': 0, 'me': false, 'me_burst': false};
            golfie = 0;
            entity = {};
            romeon = option.id;
            entity['id'] = romeon;
            romeon = option.name;
            entity['name'] = romeon;
            romeon = option.animated;
            entity['animated'] = romeon;
            entity['src'] = verify;
            option = option.name;
            entity['displayName'] = option;
            report['emoji'] = entity;
            entity = {};
            entity['content'] = oscard;
            option = _closure1_slot1;
            verify = _closure1_slot2;
            oscard = 5;
            oscard = verify[oscard];
            oscard = option.bind(zuuluu)(oscard);
            sizing = oscard.bind(zuuluu)(tangon);
            output = entity;
            oscard = copyDataProperties(output, sizing);
            oscard = tangon.reactions;
            oscard = oscard.length;
            if(!(!(oscard > golfie))) { _fun00004_ip = 532; continue _fun00003 }
 522:
            oscard = new Array(1);
            oscard[0] = report;
            _fun00004_ip = 538; continue _fun00003;
 532:
            oscard = tangon.reactions;
 538:
            report = 'reactions';
            entity[report] = oscard;
            return entity;
 549:
            entity = {};
            golfie = _closure1_slot0;
            oscard = _closure1_slot2;
            report = 4;
            option = oscard[report];
            option = golfie.bind(zuuluu)(option);
            verify = option.intl;
            option = verify.formatToParts;
            report = oscard[report];
            report = golfie.bind(zuuluu)(report);
            report = report.t;
            golfie = report.7NBgIS;
            report = {};
            report['username'] = yankee;
            report['usernameOnClick'] = offset;
            report = option.bind(verify)(golfie, report);
            entity['content'] = report;
            report = _closure1_slot1;
            michal = 5;
            michal = oscard[michal];
            michal = report.bind(zuuluu)(michal);
            sizing = michal.bind(zuuluu)(tangon);
            output = entity;
            michal = copyDataProperties(output, sizing);
            return entity;
        }
    };
    zuuluu['createEmojiAddedSystemMessage'] = michal;
    return entity;
})();