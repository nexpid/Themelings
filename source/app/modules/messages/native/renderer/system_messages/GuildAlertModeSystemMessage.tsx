// app/modules/messages/native/renderer/system_messages/GuildAlertModeSystemMessage.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    offset = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = offset;
    var _closure1_slot2 = golf;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, tango);
    entity = 0;
    report = golf[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(report);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = golf[tango];
    tango = offset.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = golf[tango];
    tango = offset.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = golf[tango];
    tango = oscar.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = golf[tango];
    options = oscar.bind(entity)(tango);
    report = options.createNativeStyleProperties;
    tango = {};
    verify = 5;
    verify = golf[verify];
    verify = offset.bind(entity)(verify);
    verify = verify.colors;
    verify = verify.TEXT_BRAND;
    tango['automodUsernameColor'] = verify;
    tango = report.bind(options)(tango);
    var _closure1_slot7 = tango;
    report = 16;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/messages/native/renderer/system_messages/GuildAlertModeSystemMessage.tsx';
    report = oscar.bind(golf)(report);
    zulu['resolveAlertModeColors'] = tango;
    tango = function(argFoo) { // Original name: createGuildAlertModeEnabledSystemMessage
        _fun72537: for(var _fun72537_ip = 0; ; ) switch(_fun72537_ip) {
 0:
            options = argFoo;
            kilo = options.message;
            yankee = options.roleStyle;
            report = options.theme;
            mike = _closure1_slot1;
            golf = _closure1_slot2;
            entity = 6;
            entity = golf[entity];
            verify = undefined;
            entity = mike.bind(verify)(entity);
            oscar = entity.bind(verify)(report);
            mike = kilo.author;
            offset = _closure1_slot5;
            tango = offset.getChannel;
            entity = kilo.channel_id;
            foxtrot = tango.bind(offset)(entity);
            tango = _closure1_slot0;
            entity = 7;
            entity = golf[entity];
            tango = tango.bind(verify)(entity);
            entity = tango.getMessageAuthorWithProcessedColor;
            tango = entity.bind(tango)(kilo);
            entity = tango.nick;
            offset = tango.colorString;
            tango = _closure1_slot7;
            tango = tango.bind(verify)(report);
            tango = tango.automodUsernameColor;
            backup = {};
            backup['username'] = entity;
            entity = {};
            report = 'bindUserMenu';
            entity['action'] = report;
            mike = mike.id;
            entity['userId'] = mike;
            entity['colorString'] = offset;
            report = null;
            golf = 'username';
            mike = null;
            if(!(golf === yankee)) { _fun72537_ip = 176; continue _fun72537 }
 173:
            mike = offset;
 176:
            entity['linkColor'] = mike;
            entity['roleColor'] = offset;
            mike = 'dot';
            mike = mike === yankee;
            if(!mike) { _fun72537_ip = 201; continue _fun72537 }
 197:
            mike = report != offset;
 201:
            entity['shouldShowRoleDot'] = mike;
            mike = kilo.channel_id;
            entity['messageChannelId'] = mike;
            yankee = true;
            entity['medium'] = yankee;
            backup['usernameOnClick'] = entity;
            mike = kilo.content;
            entity = '';
            if(!(entity !== mike)) { _fun72537_ip = 331; continue _fun72537 }
 241:
            mike = global;
            romeo = mike.Date;
            echo = kilo.content;
            offset = romeo.prototype;
            offset = Object.create(offset, {constructor: {value: romeo}});
            update = offset;
            mike = new update[romeo](echo, result);
            sizing = mike instanceof Object ? mike : offset;
            romeo = sizing.toLocaleString;
            offset = _closure1_slot0;
            output = _closure1_slot2;
            mike = 8;
            mike = output[mike];
            mike = offset.bind(verify)(mike);
            mike = mike.intl;
            offset = mike.currentLocale;
            mike = {'hour': 'numeric', 'minute': '2-digit'};
            entity = romeo.bind(sizing)(offset, mike);
 331:
            backup['time'] = entity;
            offset = _closure1_slot1;
            romeo = _closure1_slot2;
            entity = 9;
            entity = romeo[entity];
            mike = offset.bind(verify)(entity);
            entity = {};
            entity['message'] = kilo;
            entity['channel'] = foxtrot;
            entity['isSystemDM'] = yankee;
            entity['colors'] = oscar;
            mike = mike.bind(verify)(entity);
            entity = {};
            oscar = 10;
            oscar = romeo[oscar];
            oscar = offset.bind(verify)(oscar);
            result = oscar.bind(verify)(options);
            echo = entity;
            oscar = copyDataProperties(echo, result);
            yankee = _closure1_slot0;
            oscar = 8;
            options = romeo[oscar];
            options = yankee.bind(verify)(options);
            foxtrot = options.intl;
            offset = foxtrot.formatToParts;
            options = romeo[oscar];
            options = yankee.bind(verify)(options);
            options = options.t;
            options = options.ig55n5;
            offset = offset.bind(foxtrot)(options, backup);
            options = 'content';
            entity[options] = offset;
            options = romeo[oscar];
            options = yankee.bind(verify)(options);
            offset = options.intl;
            options = offset.string;
            oscar = romeo[oscar];
            oscar = yankee.bind(verify)(oscar);
            oscar = oscar.t;
            oscar = oscar.hG1StL;
            oscar = options.bind(offset)(oscar);
            entity[golf] = oscar;
            oscar = report != tango;
            report = null;
            if(!oscar) { _fun72537_ip = 529; continue _fun72537 }
 526:
            report = tango;
 529:
            tango = 'usernameColor';
            entity[tango] = report;
            options = _closure1_slot0;
            offset = _closure1_slot2;
            zulu = 11;
            tango = offset[zulu];
            report = options.bind(verify)(tango);
            tango = report.ensureAvatarSource;
            oscar = 12;
            oscar = offset[oscar];
            golf = options.bind(verify)(oscar);
            oscar = golf.makeSource;
            zulu = offset[zulu];
            options = options.bind(verify)(zulu);
            zulu = options.getAutomodAvatarURL;
            zulu = zulu.bind(options)();
            zulu = oscar.bind(golf)(zulu);
            zulu = tango.bind(report)(zulu);
            tango = zulu.uri;
            zulu = 'avatarURL';
            entity[zulu] = tango;
            echo = entity;
            result = mike;
            mike = copyDataProperties(echo, result);
            return entity;
        }
    };
    zulu['createGuildAlertModeEnabledSystemMessage'] = tango;
    tango = function(argFoo) { // Original name: GuildAlertModeEnabledSystemMessage
        _fun72538: for(var _fun72538_ip = 0; ; ) switch(_fun72538_ip) {
 0:
            entity = argFoo;
            options = entity.row;
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            report = 13;
            zulu = foxtrot[report];
            tango = undefined;
            offset = romeo.bind(tango)(zulu);
            verify = offset.useStateFromStores;
            zulu = _closure1_slot4;
            golf = new Array(1);
            golf[0] = zulu;
            oscar = function() {
                entity = _closure1_slot4;
                entity = entity.roleStyle;
                return entity;
            };
            zulu = new Array(0);
            backup = verify.bind(offset)(golf, oscar, zulu);
            var _closure2_slot0 = backup;
            offset = options.message;
            var _closure2_slot1 = offset;
            yankee = offset.author;
            var _closure2_slot2 = yankee;
            zulu = offset.channel_id;
            var _closure2_slot3 = zulu;
            report = foxtrot[report];
            verify = romeo.bind(tango)(report);
            golf = verify.useStateFromStores;
            report = _closure1_slot5;
            oscar = new Array(1);
            oscar[0] = report;
            report = new Array(1);
            report[0] = zulu;
            zulu = function() {
                zulu = _closure1_slot5;
                mike = zulu.getChannel;
                entity = _closure2_slot3;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            verify = golf.bind(verify)(oscar, zulu, report);
            zulu = 7;
            zulu = foxtrot[zulu];
            report = romeo.bind(tango)(zulu);
            zulu = report.useMessageAuthorWithProcessedColor;
            zulu = zulu.bind(report)(offset);
            kilo = zulu.nick;
            var _closure2_slot4 = kilo;
            sizing = zulu.colorString;
            var _closure2_slot5 = sizing;
            zulu = 14;
            zulu = foxtrot[zulu];
            report = romeo.bind(tango)(zulu);
            zulu = report.useThemeContext;
            zulu = zulu.bind(report)();
            report = zulu.theme;
            zulu = _closure1_slot7;
            zulu = zulu.bind(tango)(report);
            golf = zulu.automodUsernameColor;
            oscar = _closure1_slot3;
            report = oscar.useMemo;
            zulu = new Array(6);
            zulu[0] = sizing;
            sizing = offset.channel_id;
            zulu[1] = sizing;
            sizing = offset.content;
            zulu[2] = sizing;
            zulu[3] = kilo;
            zulu[4] = backup;
            yankee = yankee.id;
            zulu[5] = yankee;
            mike = function() {
                _fun72541: for(var _fun72541_ip = 0; ; ) switch(_fun72541_ip) {
 0:
                    tango = {};
                    entity = _closure2_slot4;
                    tango['username'] = entity;
                    zulu = {};
                    entity = 'bindUserMenu';
                    zulu['action'] = entity;
                    entity = _closure2_slot2;
                    entity = entity.id;
                    zulu['userId'] = entity;
                    entity = _closure2_slot5;
                    zulu['colorString'] = entity;
                    golf = _closure2_slot0;
                    oscar = null;
                    report = 'username';
                    entity = null;
                    if(!(report === golf)) { _fun72541_ip = 67; continue _fun72541 }
 63:
                    entity = _closure2_slot5;
 67:
                    zulu['linkColor'] = entity;
                    entity = _closure2_slot5;
                    zulu['roleColor'] = entity;
                    report = _closure2_slot0;
                    entity = 'dot';
                    entity = entity === report;
                    if(!entity) { _fun72541_ip = 104; continue _fun72541 }
 96:
                    report = _closure2_slot5;
                    entity = oscar != report;
 104:
                    zulu['shouldShowRoleDot'] = entity;
                    entity = _closure2_slot1;
                    report = entity.channel_id;
                    zulu['messageChannelId'] = report;
                    report = true;
                    zulu['medium'] = report;
                    tango['usernameOnClick'] = zulu;
                    zulu = entity.content;
                    entity = '';
                    if(!(entity !== zulu)) { _fun72541_ip = 247; continue _fun72541 }
 148:
                    zulu = global;
                    report = zulu.Date;
                    mike = _closure2_slot1;
                    verify = mike.content;
                    zulu = report.prototype;
                    zulu = Object.create(zulu, {constructor: {value: report}});
                    offset = zulu;
                    mike = new offset[report](verify, options);
                    oscar = mike instanceof Object ? mike : zulu;
                    report = oscar.toLocaleString;
                    golf = _closure1_slot0;
                    zulu = _closure1_slot2;
                    mike = 8;
                    zulu = zulu[mike];
                    mike = undefined;
                    mike = golf.bind(mike)(zulu);
                    mike = mike.intl;
                    zulu = mike.currentLocale;
                    mike = {'hour': 'numeric', 'minute': '2-digit'};
                    entity = report.bind(oscar)(zulu, mike);
 247:
                    tango['time'] = entity;
                    oscar = _closure1_slot0;
                    golf = _closure1_slot2;
                    entity = 8;
                    mike = golf[entity];
                    report = undefined;
                    mike = oscar.bind(report)(mike);
                    zulu = mike.intl;
                    mike = zulu.formatToParts;
                    entity = golf[entity];
                    entity = oscar.bind(report)(entity);
                    entity = entity.t;
                    entity = entity.ig55n5;
                    entity = mike.bind(zulu)(entity, tango);
                    return entity;
                }
            };
            oscar = report.bind(oscar)(mike, zulu);
            mike = _closure1_slot1;
            zulu = 9;
            zulu = foxtrot[zulu];
            report = mike.bind(tango)(zulu);
            zulu = {};
            zulu['message'] = offset;
            zulu['channel'] = verify;
            verify = true;
            zulu['isSystemDM'] = verify;
            verify = {};
            zulu['colors'] = verify;
            report = report.bind(tango)(zulu);
            zulu = _closure1_slot6;
            entity = 15;
            entity = foxtrot[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            entity['row'] = options;
            entity['content'] = oscar;
            oscar = 8;
            options = foxtrot[oscar];
            options = romeo.bind(tango)(options);
            verify = options.intl;
            options = verify.string;
            oscar = foxtrot[oscar];
            oscar = romeo.bind(tango)(oscar);
            oscar = oscar.t;
            oscar = oscar.hG1StL;
            oscar = options.bind(verify)(oscar);
            entity['username'] = oscar;
            oscar = 11;
            options = foxtrot[oscar];
            verify = romeo.bind(tango)(options);
            options = verify.ensureAvatarSource;
            offset = 12;
            offset = foxtrot[offset];
            yankee = romeo.bind(tango)(offset);
            offset = yankee.makeSource;
            oscar = foxtrot[oscar];
            romeo = romeo.bind(tango)(oscar);
            oscar = romeo.getAutomodAvatarURL;
            oscar = oscar.bind(romeo)();
            oscar = offset.bind(yankee)(oscar);
            oscar = options.bind(verify)(oscar);
            oscar = oscar.uri;
            entity['avatarURL'] = oscar;
            oscar = null;
            options = oscar != golf;
            if(!options) { _fun72538_ip = 511; continue _fun72538 }
 508:
            oscar = golf;
 511:
            entity['usernameColor'] = oscar;
            echo = entity;
            result = report;
            report = copyDataProperties(echo, result);
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['GuildAlertModeEnabledSystemMessage'] = tango;
    tango = function(argFoo) { // Original name: createGuildAlertModeDisabledSystemMessage
        _fun72542: for(var _fun72542_ip = 0; ; ) switch(_fun72542_ip) {
 0:
            options = argFoo;
            foxtrot = options.message;
            yankee = options.roleStyle;
            tango = options.theme;
            mike = _closure1_slot1;
            golf = _closure1_slot2;
            entity = 6;
            entity = golf[entity];
            verify = undefined;
            entity = mike.bind(verify)(entity);
            oscar = entity.bind(verify)(tango);
            mike = foxtrot.author;
            entity = _closure1_slot7;
            entity = entity.bind(verify)(tango);
            tango = entity.automodUsernameColor;
            report = _closure1_slot0;
            entity = 7;
            entity = golf[entity];
            report = report.bind(verify)(entity);
            entity = report.getMessageAuthorWithProcessedColor;
            report = entity.bind(report)(foxtrot);
            entity = report.nick;
            offset = report.colorString;
            backup = {};
            backup['username'] = entity;
            entity = {};
            report = 'bindUserMenu';
            entity['action'] = report;
            mike = mike.id;
            entity['userId'] = mike;
            entity['colorString'] = offset;
            report = null;
            golf = 'username';
            mike = null;
            if(!(golf === yankee)) { _fun72542_ip = 157; continue _fun72542 }
 154:
            mike = offset;
 157:
            entity['linkColor'] = mike;
            entity['roleColor'] = offset;
            mike = 'dot';
            mike = mike === yankee;
            if(!mike) { _fun72542_ip = 182; continue _fun72542 }
 178:
            mike = report != offset;
 182:
            entity['shouldShowRoleDot'] = mike;
            mike = foxtrot.channel_id;
            entity['messageChannelId'] = mike;
            yankee = true;
            entity['medium'] = yankee;
            backup['usernameOnClick'] = entity;
            offset = _closure1_slot1;
            romeo = _closure1_slot2;
            entity = 9;
            entity = romeo[entity];
            mike = offset.bind(verify)(entity);
            entity = {};
            entity['message'] = foxtrot;
            entity['channel'] = verify;
            entity['isSystemDM'] = yankee;
            entity['colors'] = oscar;
            mike = mike.bind(verify)(entity);
            entity = {};
            oscar = 10;
            oscar = romeo[oscar];
            oscar = offset.bind(verify)(oscar);
            kilo = oscar.bind(verify)(options);
            sizing = entity;
            oscar = copyDataProperties(sizing, kilo);
            yankee = _closure1_slot0;
            oscar = 8;
            options = romeo[oscar];
            options = yankee.bind(verify)(options);
            foxtrot = options.intl;
            offset = foxtrot.formatToParts;
            options = romeo[oscar];
            options = yankee.bind(verify)(options);
            options = options.t;
            options = options.cyq2WF;
            offset = offset.bind(foxtrot)(options, backup);
            options = 'content';
            entity[options] = offset;
            options = romeo[oscar];
            options = yankee.bind(verify)(options);
            offset = options.intl;
            options = offset.string;
            oscar = romeo[oscar];
            oscar = yankee.bind(verify)(oscar);
            oscar = oscar.t;
            oscar = oscar.hG1StL;
            oscar = options.bind(offset)(oscar);
            entity[golf] = oscar;
            oscar = report != tango;
            report = null;
            if(!oscar) { _fun72542_ip = 402; continue _fun72542 }
 399:
            report = tango;
 402:
            tango = 'usernameColor';
            entity[tango] = report;
            options = _closure1_slot0;
            offset = _closure1_slot2;
            zulu = 11;
            tango = offset[zulu];
            report = options.bind(verify)(tango);
            tango = report.ensureAvatarSource;
            oscar = 12;
            oscar = offset[oscar];
            golf = options.bind(verify)(oscar);
            oscar = golf.makeSource;
            zulu = offset[zulu];
            options = options.bind(verify)(zulu);
            zulu = options.getAutomodAvatarURL;
            zulu = zulu.bind(options)();
            zulu = oscar.bind(golf)(zulu);
            zulu = tango.bind(report)(zulu);
            tango = zulu.uri;
            zulu = 'avatarURL';
            entity[zulu] = tango;
            sizing = entity;
            kilo = mike;
            mike = copyDataProperties(sizing, kilo);
            return entity;
        }
    };
    zulu['createGuildAlertModeDisabledSystemMessage'] = tango;
    mike = function(argFoo) { // Original name: GuildAlertModeDisabledSystemMessage
        _fun72543: for(var _fun72543_ip = 0; ; ) switch(_fun72543_ip) {
 0:
            entity = argFoo;
            options = entity.row;
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            zulu = 13;
            zulu = foxtrot[zulu];
            tango = undefined;
            verify = romeo.bind(tango)(zulu);
            golf = verify.useStateFromStores;
            zulu = _closure1_slot4;
            oscar = new Array(1);
            oscar[0] = zulu;
            report = function() {
                entity = _closure1_slot4;
                entity = entity.roleStyle;
                return entity;
            };
            zulu = new Array(0);
            yankee = golf.bind(verify)(oscar, report, zulu);
            var _closure2_slot0 = yankee;
            zulu = 14;
            zulu = foxtrot[zulu];
            report = romeo.bind(tango)(zulu);
            zulu = report.useThemeContext;
            zulu = zulu.bind(report)();
            report = zulu.theme;
            verify = options.message;
            var _closure2_slot1 = verify;
            offset = verify.author;
            var _closure2_slot2 = offset;
            zulu = 7;
            zulu = foxtrot[zulu];
            oscar = romeo.bind(tango)(zulu);
            zulu = oscar.useMessageAuthorWithProcessedColor;
            zulu = zulu.bind(oscar)(verify);
            backup = zulu.nick;
            var _closure2_slot3 = backup;
            kilo = zulu.colorString;
            var _closure2_slot4 = kilo;
            zulu = _closure1_slot7;
            zulu = zulu.bind(tango)(report);
            golf = zulu.automodUsernameColor;
            oscar = _closure1_slot3;
            report = oscar.useMemo;
            zulu = new Array(5);
            zulu[0] = kilo;
            kilo = verify.channel_id;
            zulu[1] = kilo;
            zulu[2] = backup;
            zulu[3] = yankee;
            offset = offset.id;
            zulu[4] = offset;
            mike = function() {
                _fun72545: for(var _fun72545_ip = 0; ; ) switch(_fun72545_ip) {
 0:
                    tango = {};
                    entity = _closure2_slot3;
                    tango['username'] = entity;
                    entity = {};
                    zulu = 'bindUserMenu';
                    entity['action'] = zulu;
                    zulu = _closure2_slot2;
                    zulu = zulu.id;
                    entity['userId'] = zulu;
                    zulu = _closure2_slot4;
                    entity['colorString'] = zulu;
                    golf = _closure2_slot0;
                    oscar = null;
                    report = 'username';
                    zulu = null;
                    if(!(report === golf)) { _fun72545_ip = 67; continue _fun72545 }
 63:
                    zulu = _closure2_slot4;
 67:
                    entity['linkColor'] = zulu;
                    zulu = _closure2_slot4;
                    entity['roleColor'] = zulu;
                    report = _closure2_slot0;
                    zulu = 'dot';
                    zulu = zulu === report;
                    if(!zulu) { _fun72545_ip = 104; continue _fun72545 }
 96:
                    report = _closure2_slot4;
                    zulu = oscar != report;
 104:
                    entity['shouldShowRoleDot'] = zulu;
                    mike = _closure2_slot1;
                    mike = mike.channel_id;
                    entity['messageChannelId'] = mike;
                    mike = true;
                    entity['medium'] = mike;
                    tango['usernameOnClick'] = entity;
                    oscar = _closure1_slot0;
                    golf = _closure1_slot2;
                    entity = 8;
                    mike = golf[entity];
                    report = undefined;
                    mike = oscar.bind(report)(mike);
                    zulu = mike.intl;
                    mike = zulu.formatToParts;
                    entity = golf[entity];
                    entity = oscar.bind(report)(entity);
                    entity = entity.t;
                    entity = entity.cyq2WF;
                    entity = mike.bind(zulu)(entity, tango);
                    return entity;
                }
            };
            oscar = report.bind(oscar)(mike, zulu);
            mike = _closure1_slot1;
            zulu = 9;
            zulu = foxtrot[zulu];
            report = mike.bind(tango)(zulu);
            zulu = {};
            zulu['message'] = verify;
            zulu['channel'] = tango;
            verify = true;
            zulu['isSystemDM'] = verify;
            verify = {};
            zulu['colors'] = verify;
            report = report.bind(tango)(zulu);
            zulu = _closure1_slot6;
            entity = 15;
            entity = foxtrot[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            entity['row'] = options;
            entity['content'] = oscar;
            oscar = 8;
            options = foxtrot[oscar];
            options = romeo.bind(tango)(options);
            verify = options.intl;
            options = verify.string;
            oscar = foxtrot[oscar];
            oscar = romeo.bind(tango)(oscar);
            oscar = oscar.t;
            oscar = oscar.hG1StL;
            oscar = options.bind(verify)(oscar);
            entity['username'] = oscar;
            oscar = 11;
            options = foxtrot[oscar];
            verify = romeo.bind(tango)(options);
            options = verify.ensureAvatarSource;
            offset = 12;
            offset = foxtrot[offset];
            yankee = romeo.bind(tango)(offset);
            offset = yankee.makeSource;
            oscar = foxtrot[oscar];
            romeo = romeo.bind(tango)(oscar);
            oscar = romeo.getAutomodAvatarURL;
            oscar = oscar.bind(romeo)();
            oscar = offset.bind(yankee)(oscar);
            oscar = options.bind(verify)(oscar);
            oscar = oscar.uri;
            entity['avatarURL'] = oscar;
            oscar = null;
            options = oscar != golf;
            if(!options) { _fun72543_ip = 445; continue _fun72543 }
 442:
            oscar = golf;
 445:
            entity['usernameColor'] = oscar;
            result = entity;
            output = report;
            report = copyDataProperties(result, output);
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['GuildAlertModeDisabledSystemMessage'] = mike;
    return entity;
})();