// app/modules/messages/native/renderer/system_messages/GuildAlertModeSystemMessage.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    offset = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = offset;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    report = golfie[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(report);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = golfie[tangon];
    tangon = offset.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = golfie[tangon];
    tangon = offset.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = golfie[tangon];
    option = oscard.bind(entity)(tangon);
    report = option.createNativeStyleProperties;
    tangon = {};
    verify = 5;
    verify = golfie[verify];
    verify = offset.bind(entity)(verify);
    verify = verify.colors;
    verify = verify.TEXT_BRAND;
    tangon['automodUsernameColor'] = verify;
    tangon = report.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    report = 16;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/messages/native/renderer/system_messages/GuildAlertModeSystemMessage.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['resolveAlertModeColors'] = tangon;
    tangon = function(argFoo) { // Original name: createGuildAlertModeEnabledSystemMessage
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            option = argFoo;
            kiloes = option.message;
            yankee = option.roleStyle;
            report = option.theme;
            michal = _closure1_slot1;
            golfie = _closure1_slot2;
            entity = 6;
            entity = golfie[entity];
            verify = undefined;
            entity = michal.bind(verify)(entity);
            oscard = entity.bind(verify)(report);
            michal = kiloes.author;
            offset = _closure1_slot5;
            tangon = offset.getChannel;
            entity = kiloes.channel_id;
            foxtra = tangon.bind(offset)(entity);
            tangon = _closure1_slot0;
            entity = 7;
            entity = golfie[entity];
            tangon = tangon.bind(verify)(entity);
            entity = tangon.getMessageAuthorWithProcessedColor;
            tangon = entity.bind(tangon)(kiloes);
            entity = tangon.nick;
            offset = tangon.colorString;
            tangon = _closure1_slot7;
            tangon = tangon.bind(verify)(report);
            tangon = tangon.automodUsernameColor;
            backup = {};
            backup['username'] = entity;
            entity = {};
            report = 'bindUserMenu';
            entity['action'] = report;
            michal = michal.id;
            entity['userId'] = michal;
            entity['colorString'] = offset;
            report = null;
            golfie = 'username';
            michal = null;
            if(!(golfie === yankee)) { _fun00002_ip = 176; continue _fun00001 }
 173:
            michal = offset;
 176:
            entity['linkColor'] = michal;
            entity['roleColor'] = offset;
            michal = 'dot';
            michal = michal === yankee;
            if(!michal) { _fun00002_ip = 201; continue _fun00001 }
 197:
            michal = report != offset;
 201:
            entity['shouldShowRoleDot'] = michal;
            michal = kiloes.channel_id;
            entity['messageChannelId'] = michal;
            yankee = true;
            entity['medium'] = yankee;
            backup['usernameOnClick'] = entity;
            michal = kiloes.content;
            entity = '';
            if(!(entity !== michal)) { _fun00002_ip = 331; continue _fun00001 }
 241:
            michal = global;
            romeon = michal.Date;
            echoed = kiloes.content;
            offset = romeon.prototype;
            offset = Object.create(offset, {constructor: {value: romeon}});
            update = offset;
            michal = new update[romeon](echoed, result);
            sizing = michal instanceof Object ? michal : offset;
            romeon = sizing.toLocaleString;
            offset = _closure1_slot0;
            output = _closure1_slot2;
            michal = 8;
            michal = output[michal];
            michal = offset.bind(verify)(michal);
            michal = michal.intl;
            offset = michal.currentLocale;
            michal = {'hour': 'numeric', 'minute': '2-digit'};
            entity = romeon.bind(sizing)(offset, michal);
 331:
            backup['time'] = entity;
            offset = _closure1_slot1;
            romeon = _closure1_slot2;
            entity = 9;
            entity = romeon[entity];
            michal = offset.bind(verify)(entity);
            entity = {};
            entity['message'] = kiloes;
            entity['channel'] = foxtra;
            entity['isSystemDM'] = yankee;
            entity['colors'] = oscard;
            michal = michal.bind(verify)(entity);
            entity = {};
            oscard = 10;
            oscard = romeon[oscard];
            oscard = offset.bind(verify)(oscard);
            result = oscard.bind(verify)(option);
            echoed = entity;
            oscard = copyDataProperties(echoed, result);
            yankee = _closure1_slot0;
            oscard = 8;
            option = romeon[oscard];
            option = yankee.bind(verify)(option);
            foxtra = option.intl;
            offset = foxtra.formatToParts;
            option = romeon[oscard];
            option = yankee.bind(verify)(option);
            option = option.t;
            option = option.ig55n5;
            offset = offset.bind(foxtra)(option, backup);
            option = 'content';
            entity[option] = offset;
            option = romeon[oscard];
            option = yankee.bind(verify)(option);
            offset = option.intl;
            option = offset.string;
            oscard = romeon[oscard];
            oscard = yankee.bind(verify)(oscard);
            oscard = oscard.t;
            oscard = oscard.hG1StL;
            oscard = option.bind(offset)(oscard);
            entity[golfie] = oscard;
            oscard = report != tangon;
            report = null;
            if(!oscard) { _fun00002_ip = 529; continue _fun00001 }
 526:
            report = tangon;
 529:
            tangon = 'usernameColor';
            entity[tangon] = report;
            option = _closure1_slot0;
            offset = _closure1_slot2;
            zuuluu = 11;
            tangon = offset[zuuluu];
            report = option.bind(verify)(tangon);
            tangon = report.ensureAvatarSource;
            oscard = 12;
            oscard = offset[oscard];
            golfie = option.bind(verify)(oscard);
            oscard = golfie.makeSource;
            zuuluu = offset[zuuluu];
            option = option.bind(verify)(zuuluu);
            zuuluu = option.getAutomodAvatarURL;
            zuuluu = zuuluu.bind(option)();
            zuuluu = oscard.bind(golfie)(zuuluu);
            zuuluu = tangon.bind(report)(zuuluu);
            tangon = zuuluu.uri;
            zuuluu = 'avatarURL';
            entity[zuuluu] = tangon;
            echoed = entity;
            result = michal;
            michal = copyDataProperties(echoed, result);
            return entity;
        }
    };
    zuuluu['createGuildAlertModeEnabledSystemMessage'] = tangon;
    tangon = function(argFoo) { // Original name: GuildAlertModeEnabledSystemMessage
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            option = entity.row;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            report = 13;
            zuuluu = foxtra[report];
            tangon = undefined;
            offset = romeon.bind(tangon)(zuuluu);
            verify = offset.useStateFromStores;
            zuuluu = _closure1_slot4;
            golfie = new Array(1);
            golfie[0] = zuuluu;
            oscard = function() {
                entity = _closure1_slot4;
                entity = entity.roleStyle;
                return entity;
            };
            zuuluu = new Array(0);
            backup = verify.bind(offset)(golfie, oscard, zuuluu);
            var _closure2_slot0 = backup;
            offset = option.message;
            var _closure2_slot1 = offset;
            yankee = offset.author;
            var _closure2_slot2 = yankee;
            zuuluu = offset.channel_id;
            var _closure2_slot3 = zuuluu;
            report = foxtra[report];
            verify = romeon.bind(tangon)(report);
            golfie = verify.useStateFromStores;
            report = _closure1_slot5;
            oscard = new Array(1);
            oscard[0] = report;
            report = new Array(1);
            report[0] = zuuluu;
            zuuluu = function() {
                zuuluu = _closure1_slot5;
                michal = zuuluu.getChannel;
                entity = _closure2_slot3;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            verify = golfie.bind(verify)(oscard, zuuluu, report);
            zuuluu = 7;
            zuuluu = foxtra[zuuluu];
            report = romeon.bind(tangon)(zuuluu);
            zuuluu = report.useMessageAuthorWithProcessedColor;
            zuuluu = zuuluu.bind(report)(offset);
            kiloes = zuuluu.nick;
            var _closure2_slot4 = kiloes;
            sizing = zuuluu.colorString;
            var _closure2_slot5 = sizing;
            zuuluu = 14;
            zuuluu = foxtra[zuuluu];
            report = romeon.bind(tangon)(zuuluu);
            zuuluu = report.useThemeContext;
            zuuluu = zuuluu.bind(report)();
            report = zuuluu.theme;
            zuuluu = _closure1_slot7;
            zuuluu = zuuluu.bind(tangon)(report);
            golfie = zuuluu.automodUsernameColor;
            oscard = _closure1_slot3;
            report = oscard.useMemo;
            zuuluu = new Array(6);
            zuuluu[0] = sizing;
            sizing = offset.channel_id;
            zuuluu[1] = sizing;
            sizing = offset.content;
            zuuluu[2] = sizing;
            zuuluu[3] = kiloes;
            zuuluu[4] = backup;
            yankee = yankee.id;
            zuuluu[5] = yankee;
            michal = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    tangon = {};
                    entity = _closure2_slot4;
                    tangon['username'] = entity;
                    zuuluu = {};
                    entity = 'bindUserMenu';
                    zuuluu['action'] = entity;
                    entity = _closure2_slot2;
                    entity = entity.id;
                    zuuluu['userId'] = entity;
                    entity = _closure2_slot5;
                    zuuluu['colorString'] = entity;
                    golfie = _closure2_slot0;
                    oscard = null;
                    report = 'username';
                    entity = null;
                    if(!(report === golfie)) { _fun00006_ip = 67; continue _fun00005 }
 63:
                    entity = _closure2_slot5;
 67:
                    zuuluu['linkColor'] = entity;
                    entity = _closure2_slot5;
                    zuuluu['roleColor'] = entity;
                    report = _closure2_slot0;
                    entity = 'dot';
                    entity = entity === report;
                    if(!entity) { _fun00006_ip = 104; continue _fun00005 }
 96:
                    report = _closure2_slot5;
                    entity = oscard != report;
 104:
                    zuuluu['shouldShowRoleDot'] = entity;
                    entity = _closure2_slot1;
                    report = entity.channel_id;
                    zuuluu['messageChannelId'] = report;
                    report = true;
                    zuuluu['medium'] = report;
                    tangon['usernameOnClick'] = zuuluu;
                    zuuluu = entity.content;
                    entity = '';
                    if(!(entity !== zuuluu)) { _fun00006_ip = 247; continue _fun00005 }
 148:
                    zuuluu = global;
                    report = zuuluu.Date;
                    michal = _closure2_slot1;
                    verify = michal.content;
                    zuuluu = report.prototype;
                    zuuluu = Object.create(zuuluu, {constructor: {value: report}});
                    offset = zuuluu;
                    michal = new offset[report](verify, option);
                    oscard = michal instanceof Object ? michal : zuuluu;
                    report = oscard.toLocaleString;
                    golfie = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 8;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    michal = golfie.bind(michal)(zuuluu);
                    michal = michal.intl;
                    zuuluu = michal.currentLocale;
                    michal = {'hour': 'numeric', 'minute': '2-digit'};
                    entity = report.bind(oscard)(zuuluu, michal);
 247:
                    tangon['time'] = entity;
                    oscard = _closure1_slot0;
                    golfie = _closure1_slot2;
                    entity = 8;
                    michal = golfie[entity];
                    report = undefined;
                    michal = oscard.bind(report)(michal);
                    zuuluu = michal.intl;
                    michal = zuuluu.formatToParts;
                    entity = golfie[entity];
                    entity = oscard.bind(report)(entity);
                    entity = entity.t;
                    entity = entity.ig55n5;
                    entity = michal.bind(zuuluu)(entity, tangon);
                    return entity;
                }
            };
            oscard = report.bind(oscard)(michal, zuuluu);
            michal = _closure1_slot1;
            zuuluu = 9;
            zuuluu = foxtra[zuuluu];
            report = michal.bind(tangon)(zuuluu);
            zuuluu = {};
            zuuluu['message'] = offset;
            zuuluu['channel'] = verify;
            verify = true;
            zuuluu['isSystemDM'] = verify;
            verify = {};
            zuuluu['colors'] = verify;
            report = report.bind(tangon)(zuuluu);
            zuuluu = _closure1_slot6;
            entity = 15;
            entity = foxtra[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['row'] = option;
            entity['content'] = oscard;
            oscard = 8;
            option = foxtra[oscard];
            option = romeon.bind(tangon)(option);
            verify = option.intl;
            option = verify.string;
            oscard = foxtra[oscard];
            oscard = romeon.bind(tangon)(oscard);
            oscard = oscard.t;
            oscard = oscard.hG1StL;
            oscard = option.bind(verify)(oscard);
            entity['username'] = oscard;
            oscard = 11;
            option = foxtra[oscard];
            verify = romeon.bind(tangon)(option);
            option = verify.ensureAvatarSource;
            offset = 12;
            offset = foxtra[offset];
            yankee = romeon.bind(tangon)(offset);
            offset = yankee.makeSource;
            oscard = foxtra[oscard];
            romeon = romeon.bind(tangon)(oscard);
            oscard = romeon.getAutomodAvatarURL;
            oscard = oscard.bind(romeon)();
            oscard = offset.bind(yankee)(oscard);
            oscard = option.bind(verify)(oscard);
            oscard = oscard.uri;
            entity['avatarURL'] = oscard;
            oscard = null;
            option = oscard != golfie;
            if(!option) { _fun00004_ip = 505; continue _fun00003 }
 502:
            oscard = golfie;
 505:
            entity['usernameColor'] = oscard;
            echoed = entity;
            result = report;
            report = copyDataProperties(echoed, result);
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['GuildAlertModeEnabledSystemMessage'] = tangon;
    tangon = function(argFoo) { // Original name: createGuildAlertModeDisabledSystemMessage
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            option = argFoo;
            foxtra = option.message;
            yankee = option.roleStyle;
            tangon = option.theme;
            michal = _closure1_slot1;
            golfie = _closure1_slot2;
            entity = 6;
            entity = golfie[entity];
            verify = undefined;
            entity = michal.bind(verify)(entity);
            oscard = entity.bind(verify)(tangon);
            michal = foxtra.author;
            entity = _closure1_slot7;
            entity = entity.bind(verify)(tangon);
            tangon = entity.automodUsernameColor;
            report = _closure1_slot0;
            entity = 7;
            entity = golfie[entity];
            report = report.bind(verify)(entity);
            entity = report.getMessageAuthorWithProcessedColor;
            report = entity.bind(report)(foxtra);
            entity = report.nick;
            offset = report.colorString;
            backup = {};
            backup['username'] = entity;
            entity = {};
            report = 'bindUserMenu';
            entity['action'] = report;
            michal = michal.id;
            entity['userId'] = michal;
            entity['colorString'] = offset;
            report = null;
            golfie = 'username';
            michal = null;
            if(!(golfie === yankee)) { _fun00008_ip = 157; continue _fun00007 }
 154:
            michal = offset;
 157:
            entity['linkColor'] = michal;
            entity['roleColor'] = offset;
            michal = 'dot';
            michal = michal === yankee;
            if(!michal) { _fun00008_ip = 182; continue _fun00007 }
 178:
            michal = report != offset;
 182:
            entity['shouldShowRoleDot'] = michal;
            michal = foxtra.channel_id;
            entity['messageChannelId'] = michal;
            yankee = true;
            entity['medium'] = yankee;
            backup['usernameOnClick'] = entity;
            offset = _closure1_slot1;
            romeon = _closure1_slot2;
            entity = 9;
            entity = romeon[entity];
            michal = offset.bind(verify)(entity);
            entity = {};
            entity['message'] = foxtra;
            entity['channel'] = verify;
            entity['isSystemDM'] = yankee;
            entity['colors'] = oscard;
            michal = michal.bind(verify)(entity);
            entity = {};
            oscard = 10;
            oscard = romeon[oscard];
            oscard = offset.bind(verify)(oscard);
            kiloes = oscard.bind(verify)(option);
            sizing = entity;
            oscard = copyDataProperties(sizing, kiloes);
            yankee = _closure1_slot0;
            oscard = 8;
            option = romeon[oscard];
            option = yankee.bind(verify)(option);
            foxtra = option.intl;
            offset = foxtra.formatToParts;
            option = romeon[oscard];
            option = yankee.bind(verify)(option);
            option = option.t;
            option = option.cyq2WF;
            offset = offset.bind(foxtra)(option, backup);
            option = 'content';
            entity[option] = offset;
            option = romeon[oscard];
            option = yankee.bind(verify)(option);
            offset = option.intl;
            option = offset.string;
            oscard = romeon[oscard];
            oscard = yankee.bind(verify)(oscard);
            oscard = oscard.t;
            oscard = oscard.hG1StL;
            oscard = option.bind(offset)(oscard);
            entity[golfie] = oscard;
            oscard = report != tangon;
            report = null;
            if(!oscard) { _fun00008_ip = 402; continue _fun00007 }
 399:
            report = tangon;
 402:
            tangon = 'usernameColor';
            entity[tangon] = report;
            option = _closure1_slot0;
            offset = _closure1_slot2;
            zuuluu = 11;
            tangon = offset[zuuluu];
            report = option.bind(verify)(tangon);
            tangon = report.ensureAvatarSource;
            oscard = 12;
            oscard = offset[oscard];
            golfie = option.bind(verify)(oscard);
            oscard = golfie.makeSource;
            zuuluu = offset[zuuluu];
            option = option.bind(verify)(zuuluu);
            zuuluu = option.getAutomodAvatarURL;
            zuuluu = zuuluu.bind(option)();
            zuuluu = oscard.bind(golfie)(zuuluu);
            zuuluu = tangon.bind(report)(zuuluu);
            tangon = zuuluu.uri;
            zuuluu = 'avatarURL';
            entity[zuuluu] = tangon;
            sizing = entity;
            kiloes = michal;
            michal = copyDataProperties(sizing, kiloes);
            return entity;
        }
    };
    zuuluu['createGuildAlertModeDisabledSystemMessage'] = tangon;
    michal = function(argFoo) { // Original name: GuildAlertModeDisabledSystemMessage
        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
            entity = argFoo;
            option = entity.row;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            zuuluu = 13;
            zuuluu = foxtra[zuuluu];
            tangon = undefined;
            verify = romeon.bind(tangon)(zuuluu);
            golfie = verify.useStateFromStores;
            zuuluu = _closure1_slot4;
            oscard = new Array(1);
            oscard[0] = zuuluu;
            report = function() {
                entity = _closure1_slot4;
                entity = entity.roleStyle;
                return entity;
            };
            zuuluu = new Array(0);
            yankee = golfie.bind(verify)(oscard, report, zuuluu);
            var _closure2_slot0 = yankee;
            zuuluu = 14;
            zuuluu = foxtra[zuuluu];
            report = romeon.bind(tangon)(zuuluu);
            zuuluu = report.useThemeContext;
            zuuluu = zuuluu.bind(report)();
            report = zuuluu.theme;
            verify = option.message;
            var _closure2_slot1 = verify;
            offset = verify.author;
            var _closure2_slot2 = offset;
            zuuluu = 7;
            zuuluu = foxtra[zuuluu];
            oscard = romeon.bind(tangon)(zuuluu);
            zuuluu = oscard.useMessageAuthorWithProcessedColor;
            zuuluu = zuuluu.bind(oscard)(verify);
            backup = zuuluu.nick;
            var _closure2_slot3 = backup;
            kiloes = zuuluu.colorString;
            var _closure2_slot4 = kiloes;
            zuuluu = _closure1_slot7;
            zuuluu = zuuluu.bind(tangon)(report);
            golfie = zuuluu.automodUsernameColor;
            oscard = _closure1_slot3;
            report = oscard.useMemo;
            zuuluu = new Array(5);
            zuuluu[0] = kiloes;
            kiloes = verify.channel_id;
            zuuluu[1] = kiloes;
            zuuluu[2] = backup;
            zuuluu[3] = yankee;
            offset = offset.id;
            zuuluu[4] = offset;
            michal = function() {
                _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                    tangon = {};
                    entity = _closure2_slot3;
                    tangon['username'] = entity;
                    entity = {};
                    zuuluu = 'bindUserMenu';
                    entity['action'] = zuuluu;
                    zuuluu = _closure2_slot2;
                    zuuluu = zuuluu.id;
                    entity['userId'] = zuuluu;
                    zuuluu = _closure2_slot4;
                    entity['colorString'] = zuuluu;
                    golfie = _closure2_slot0;
                    oscard = null;
                    report = 'username';
                    zuuluu = null;
                    if(!(report === golfie)) { _fun00012_ip = 67; continue _fun00011 }
 63:
                    zuuluu = _closure2_slot4;
 67:
                    entity['linkColor'] = zuuluu;
                    zuuluu = _closure2_slot4;
                    entity['roleColor'] = zuuluu;
                    report = _closure2_slot0;
                    zuuluu = 'dot';
                    zuuluu = zuuluu === report;
                    if(!zuuluu) { _fun00012_ip = 104; continue _fun00011 }
 96:
                    report = _closure2_slot4;
                    zuuluu = oscard != report;
 104:
                    entity['shouldShowRoleDot'] = zuuluu;
                    michal = _closure2_slot1;
                    michal = michal.channel_id;
                    entity['messageChannelId'] = michal;
                    michal = true;
                    entity['medium'] = michal;
                    tangon['usernameOnClick'] = entity;
                    oscard = _closure1_slot0;
                    golfie = _closure1_slot2;
                    entity = 8;
                    michal = golfie[entity];
                    report = undefined;
                    michal = oscard.bind(report)(michal);
                    zuuluu = michal.intl;
                    michal = zuuluu.formatToParts;
                    entity = golfie[entity];
                    entity = oscard.bind(report)(entity);
                    entity = entity.t;
                    entity = entity.cyq2WF;
                    entity = michal.bind(zuuluu)(entity, tangon);
                    return entity;
                }
            };
            oscard = report.bind(oscard)(michal, zuuluu);
            michal = _closure1_slot1;
            zuuluu = 9;
            zuuluu = foxtra[zuuluu];
            report = michal.bind(tangon)(zuuluu);
            zuuluu = {};
            zuuluu['message'] = verify;
            zuuluu['channel'] = tangon;
            verify = true;
            zuuluu['isSystemDM'] = verify;
            verify = {};
            zuuluu['colors'] = verify;
            report = report.bind(tangon)(zuuluu);
            zuuluu = _closure1_slot6;
            entity = 15;
            entity = foxtra[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['row'] = option;
            entity['content'] = oscard;
            oscard = 8;
            option = foxtra[oscard];
            option = romeon.bind(tangon)(option);
            verify = option.intl;
            option = verify.string;
            oscard = foxtra[oscard];
            oscard = romeon.bind(tangon)(oscard);
            oscard = oscard.t;
            oscard = oscard.hG1StL;
            oscard = option.bind(verify)(oscard);
            entity['username'] = oscard;
            oscard = 11;
            option = foxtra[oscard];
            verify = romeon.bind(tangon)(option);
            option = verify.ensureAvatarSource;
            offset = 12;
            offset = foxtra[offset];
            yankee = romeon.bind(tangon)(offset);
            offset = yankee.makeSource;
            oscard = foxtra[oscard];
            romeon = romeon.bind(tangon)(oscard);
            oscard = romeon.getAutomodAvatarURL;
            oscard = oscard.bind(romeon)();
            oscard = offset.bind(yankee)(oscard);
            oscard = option.bind(verify)(oscard);
            oscard = oscard.uri;
            entity['avatarURL'] = oscard;
            oscard = null;
            option = oscard != golfie;
            if(!option) { _fun00010_ip = 441; continue _fun00009 }
 438:
            oscard = golfie;
 441:
            entity['usernameColor'] = oscard;
            result = entity;
            output = report;
            report = copyDataProperties(result, output);
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['GuildAlertModeDisabledSystemMessage'] = michal;
    return entity;
})();