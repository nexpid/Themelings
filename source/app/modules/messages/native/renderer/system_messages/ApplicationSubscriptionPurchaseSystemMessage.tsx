// app/modules/messages/native/renderer/system_messages/ApplicationSubscriptionPurchaseSystemMessage.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/messages/native/renderer/system_messages/ApplicationSubscriptionPurchaseSystemMessage.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: ApplicationSubscriptionPurchaseSystemMessage
        entity = argFoo;
        golfie = entity.row;
        yankee = golfie.message;
        var _closure2_slot0 = yankee;
        offset = yankee.author;
        var _closure2_slot1 = offset;
        romeon = yankee.application;
        var _closure2_slot2 = romeon;
        report = _closure1_slot0;
        option = _closure1_slot2;
        zuuluu = 2;
        zuuluu = option[zuuluu];
        tangon = undefined;
        report = report.bind(tangon)(zuuluu);
        zuuluu = report.useNullableMessageAuthor;
        zuuluu = zuuluu.bind(report)(yankee);
        report = zuuluu.nick;
        var _closure2_slot3 = report;
        verify = _closure1_slot3;
        oscard = verify.useMemo;
        zuuluu = new Array(4);
        zuuluu[0] = romeon;
        yankee = yankee.channel_id;
        zuuluu[1] = yankee;
        zuuluu[2] = report;
        offset = offset.id;
        zuuluu[3] = offset;
        michal = function() {
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 3;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.getApplicationSubscriptionSystemMessageASTContent;
            entity = {};
            tangon = _closure2_slot2;
            entity['application'] = tangon;
            tangon = _closure2_slot3;
            entity['username'] = tangon;
            tangon = {};
            oscard = 'bindUserMenu';
            tangon['action'] = oscard;
            oscard = _closure2_slot1;
            oscard = oscard.id;
            tangon['userId'] = oscard;
            report = _closure2_slot0;
            report = report.channel_id;
            tangon['messageChannelId'] = report;
            report = true;
            tangon['medium'] = report;
            entity['usernameOnClick'] = tangon;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        oscard = oscard.bind(verify)(michal, zuuluu);
        zuuluu = _closure1_slot4;
        michal = _closure1_slot1;
        entity = 5;
        entity = option[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        entity['row'] = golfie;
        entity['content'] = oscard;
        entity['username'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    michal = function(argFoo) { // Original name: createApplicationSubscriptionPurchaseSystemMessage
        tangon = argFoo;
        entity = tangon.message;
        report = entity.author;
        golfie = _closure1_slot0;
        oscard = _closure1_slot2;
        zuuluu = 2;
        option = oscard[zuuluu];
        zuuluu = undefined;
        verify = golfie.bind(zuuluu)(option);
        option = verify.getMessageAuthor;
        option = option.bind(verify)(entity);
        offset = option.nick;
        verify = {};
        option = 'bindUserMenu';
        verify['action'] = option;
        report = report.id;
        verify['userId'] = report;
        report = entity.channel_id;
        verify['messageChannelId'] = report;
        report = true;
        verify['medium'] = report;
        yankee = entity.application;
        entity = {};
        report = 3;
        report = oscard[report];
        option = golfie.bind(zuuluu)(report);
        golfie = option.getApplicationSubscriptionSystemMessageASTContent;
        report = {};
        report['application'] = yankee;
        report['username'] = offset;
        report['usernameOnClick'] = verify;
        report = golfie.bind(option)(report);
        entity['content'] = report;
        report = _closure1_slot1;
        michal = 4;
        michal = oscard[michal];
        michal = report.bind(zuuluu)(michal);
        romeon = michal.bind(zuuluu)(tangon);
        foxtra = entity;
        michal = copyDataProperties(foxtra, romeon);
        return entity;
    };
    zuuluu['createApplicationSubscriptionPurchaseSystemMessage'] = michal;
    return entity;
})();