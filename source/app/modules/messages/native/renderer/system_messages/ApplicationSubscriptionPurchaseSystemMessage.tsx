// app/modules/messages/native/renderer/system_messages/ApplicationSubscriptionPurchaseSystemMessage.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 6;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/messages/native/renderer/system_messages/ApplicationSubscriptionPurchaseSystemMessage.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: ApplicationSubscriptionPurchaseSystemMessage
        entity = argFoo;
        golf = entity.row;
        yankee = golf.message;
        var _closure2_slot0 = yankee;
        offset = yankee.author;
        var _closure2_slot1 = offset;
        romeo = yankee.application;
        var _closure2_slot2 = romeo;
        report = _closure1_slot0;
        options = _closure1_slot2;
        zulu = 2;
        zulu = options[zulu];
        tango = undefined;
        report = report.bind(tango)(zulu);
        zulu = report.useNullableMessageAuthor;
        zulu = zulu.bind(report)(yankee);
        report = zulu.nick;
        var _closure2_slot3 = report;
        verify = _closure1_slot3;
        oscar = verify.useMemo;
        zulu = new Array(4);
        zulu[0] = romeo;
        yankee = yankee.channel_id;
        zulu[1] = yankee;
        zulu[2] = report;
        offset = offset.id;
        zulu[3] = offset;
        mike = function() {
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 3;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.getApplicationSubscriptionSystemMessageASTContent;
            entity = {};
            tango = _closure2_slot2;
            entity['application'] = tango;
            tango = _closure2_slot3;
            entity['username'] = tango;
            tango = {};
            oscar = 'bindUserMenu';
            tango['action'] = oscar;
            oscar = _closure2_slot1;
            oscar = oscar.id;
            tango['userId'] = oscar;
            report = _closure2_slot0;
            report = report.channel_id;
            tango['messageChannelId'] = report;
            report = true;
            tango['medium'] = report;
            entity['usernameOnClick'] = tango;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        oscar = oscar.bind(verify)(mike, zulu);
        zulu = _closure1_slot4;
        mike = _closure1_slot1;
        entity = 5;
        entity = options[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        entity['row'] = golf;
        entity['content'] = oscar;
        entity['username'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = tango;
    mike = function(argFoo) { // Original name: createApplicationSubscriptionPurchaseSystemMessage
        tango = argFoo;
        entity = tango.message;
        report = entity.author;
        golf = _closure1_slot0;
        oscar = _closure1_slot2;
        zulu = 2;
        options = oscar[zulu];
        zulu = undefined;
        verify = golf.bind(zulu)(options);
        options = verify.getMessageAuthor;
        options = options.bind(verify)(entity);
        offset = options.nick;
        verify = {};
        options = 'bindUserMenu';
        verify['action'] = options;
        report = report.id;
        verify['userId'] = report;
        report = entity.channel_id;
        verify['messageChannelId'] = report;
        report = true;
        verify['medium'] = report;
        yankee = entity.application;
        entity = {};
        report = 3;
        report = oscar[report];
        options = golf.bind(zulu)(report);
        golf = options.getApplicationSubscriptionSystemMessageASTContent;
        report = {};
        report['application'] = yankee;
        report['username'] = offset;
        report['usernameOnClick'] = verify;
        report = golf.bind(options)(report);
        entity['content'] = report;
        report = _closure1_slot1;
        mike = 4;
        mike = oscar[mike];
        mike = report.bind(zulu)(mike);
        romeo = mike.bind(zulu)(tango);
        foxtrot = entity;
        mike = copyDataProperties(foxtrot, romeo);
        return entity;
    };
    zulu['createApplicationSubscriptionPurchaseSystemMessage'] = mike;
    return entity;
})();