// app/modules/messages/native/renderer/system_messages/GuildReportFalseAlarmSystemMessage.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot6 = tango;
    tango = 15;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/messages/native/renderer/system_messages/GuildReportFalseAlarmSystemMessage.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: GuildReportFalseAlarmSystemMessage
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            options = entity.row;
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            report = 12;
            zulu = foxtrot[report];
            tango = undefined;
            offset = romeo.bind(tango)(zulu);
            verify = offset.useStateFromStores;
            zulu = _closure1_slot4;
            golf = new Array(1);
            golf[0] = zulu;
            oscar = function() {
                entity = _closure1_slot4;
                entity = entity.roleStyle;
                return entity;
            };
            zulu = new Array(0);
            backup = verify.bind(offset)(golf, oscar, zulu);
            var _closure2_slot0 = backup;
            zulu = 13;
            zulu = foxtrot[zulu];
            oscar = romeo.bind(tango)(zulu);
            zulu = oscar.useThemeContext;
            zulu = zulu.bind(oscar)();
            oscar = zulu.theme;
            offset = options.message;
            var _closure2_slot1 = offset;
            yankee = offset.author;
            var _closure2_slot2 = yankee;
            zulu = offset.channel_id;
            var _closure2_slot3 = zulu;
            report = foxtrot[report];
            kilo = romeo.bind(tango)(report);
            verify = kilo.useStateFromStores;
            report = _closure1_slot5;
            golf = new Array(1);
            golf[0] = report;
            report = new Array(1);
            report[0] = zulu;
            zulu = function() {
                zulu = _closure1_slot5;
                mike = zulu.getChannel;
                entity = _closure2_slot3;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            verify = verify.bind(kilo)(golf, zulu, report);
            zulu = 5;
            zulu = foxtrot[zulu];
            report = romeo.bind(tango)(zulu);
            zulu = report.useMessageAuthorWithProcessedColor;
            zulu = zulu.bind(report)(offset);
            kilo = zulu.nick;
            var _closure2_slot4 = kilo;
            sizing = zulu.colorString;
            var _closure2_slot5 = sizing;
            zulu = 6;
            zulu = foxtrot[zulu];
            report = romeo.bind(tango)(zulu);
            zulu = report.resolveAlertModeColors;
            zulu = zulu.bind(report)(oscar);
            golf = zulu.automodUsernameColor;
            oscar = _closure1_slot3;
            report = oscar.useMemo;
            zulu = new Array(5);
            zulu[0] = sizing;
            sizing = offset.channel_id;
            zulu[1] = sizing;
            zulu[2] = kilo;
            zulu[3] = backup;
            yankee = yankee.id;
            zulu[4] = yankee;
            mike = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tango = {};
                    entity = _closure2_slot4;
                    tango['username'] = entity;
                    entity = {};
                    zulu = 'bindUserMenu';
                    entity['action'] = zulu;
                    zulu = _closure2_slot2;
                    zulu = zulu.id;
                    entity['userId'] = zulu;
                    zulu = _closure2_slot5;
                    entity['colorString'] = zulu;
                    golf = _closure2_slot0;
                    oscar = null;
                    report = 'username';
                    zulu = null;
                    if(!(report === golf)) { _fun00004_ip = 67; continue _fun00003 }
 63:
                    zulu = _closure2_slot5;
 67:
                    entity['linkColor'] = zulu;
                    zulu = _closure2_slot5;
                    entity['roleColor'] = zulu;
                    report = _closure2_slot0;
                    zulu = 'dot';
                    zulu = zulu === report;
                    if(!zulu) { _fun00004_ip = 104; continue _fun00003 }
 96:
                    report = _closure2_slot5;
                    zulu = oscar != report;
 104:
                    entity['shouldShowRoleDot'] = zulu;
                    mike = _closure2_slot1;
                    mike = mike.channel_id;
                    entity['messageChannelId'] = mike;
                    mike = true;
                    entity['medium'] = mike;
                    tango['usernameOnClick'] = entity;
                    oscar = _closure1_slot0;
                    golf = _closure1_slot2;
                    entity = 9;
                    mike = golf[entity];
                    report = undefined;
                    mike = oscar.bind(report)(mike);
                    zulu = mike.intl;
                    mike = zulu.formatToParts;
                    entity = golf[entity];
                    entity = oscar.bind(report)(entity);
                    entity = entity.t;
                    entity = entity.21+uW1;
                    entity = mike.bind(zulu)(entity, tango);
                    return entity;
                }
            };
            oscar = report.bind(oscar)(mike, zulu);
            mike = _closure1_slot1;
            zulu = 7;
            zulu = foxtrot[zulu];
            report = mike.bind(tango)(zulu);
            zulu = {};
            zulu['message'] = offset;
            zulu['channel'] = verify;
            verify = true;
            zulu['isSystemDM'] = verify;
            verify = {};
            zulu['colors'] = verify;
            report = report.bind(tango)(zulu);
            zulu = _closure1_slot6;
            entity = 14;
            entity = foxtrot[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            entity['row'] = options;
            entity['content'] = oscar;
            oscar = 9;
            options = foxtrot[oscar];
            options = romeo.bind(tango)(options);
            verify = options.intl;
            options = verify.string;
            oscar = foxtrot[oscar];
            oscar = romeo.bind(tango)(oscar);
            oscar = oscar.t;
            oscar = oscar.hG1StL;
            oscar = options.bind(verify)(oscar);
            entity['username'] = oscar;
            oscar = 10;
            options = foxtrot[oscar];
            verify = romeo.bind(tango)(options);
            options = verify.ensureAvatarSource;
            offset = 11;
            offset = foxtrot[offset];
            yankee = romeo.bind(tango)(offset);
            offset = yankee.makeSource;
            oscar = foxtrot[oscar];
            romeo = romeo.bind(tango)(oscar);
            oscar = romeo.getAutomodAvatarURL;
            oscar = oscar.bind(romeo)();
            oscar = offset.bind(yankee)(oscar);
            oscar = options.bind(verify)(oscar);
            oscar = oscar.uri;
            entity['avatarURL'] = oscar;
            oscar = null;
            options = oscar != golf;
            if(!options) { _fun00002_ip = 511; continue _fun00001 }
 508:
            oscar = golf;
 511:
            entity['usernameColor'] = oscar;
            echo = entity;
            result = report;
            report = copyDataProperties(echo, result);
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = tango;
    mike = function(argFoo) { // Original name: createGuildReportFalseAlarmSystemMessage
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            options = argFoo;
            kilo = options.message;
            yankee = options.roleStyle;
            golf = options.theme;
            mike = _closure1_slot1;
            romeo = _closure1_slot2;
            entity = 4;
            entity = romeo[entity];
            verify = undefined;
            entity = mike.bind(verify)(entity);
            oscar = entity.bind(verify)(golf);
            mike = kilo.author;
            report = _closure1_slot5;
            tango = report.getChannel;
            entity = kilo.channel_id;
            foxtrot = tango.bind(report)(entity);
            report = _closure1_slot0;
            entity = 5;
            entity = romeo[entity];
            tango = report.bind(verify)(entity);
            entity = tango.getMessageAuthorWithProcessedColor;
            tango = entity.bind(tango)(kilo);
            entity = tango.nick;
            offset = tango.colorString;
            tango = 6;
            tango = romeo[tango];
            report = report.bind(verify)(tango);
            tango = report.resolveAlertModeColors;
            tango = tango.bind(report)(golf);
            tango = tango.automodUsernameColor;
            backup = {};
            backup['username'] = entity;
            entity = {};
            report = 'bindUserMenu';
            entity['action'] = report;
            mike = mike.id;
            entity['userId'] = mike;
            entity['colorString'] = offset;
            report = null;
            golf = 'username';
            mike = null;
            if(!(golf === yankee)) { _fun00006_ip = 190; continue _fun00005 }
 187:
            mike = offset;
 190:
            entity['linkColor'] = mike;
            entity['roleColor'] = offset;
            mike = 'dot';
            mike = mike === yankee;
            if(!mike) { _fun00006_ip = 215; continue _fun00005 }
 211:
            mike = report != offset;
 215:
            entity['shouldShowRoleDot'] = mike;
            mike = kilo.channel_id;
            entity['messageChannelId'] = mike;
            yankee = true;
            entity['medium'] = yankee;
            backup['usernameOnClick'] = entity;
            offset = _closure1_slot1;
            romeo = _closure1_slot2;
            entity = 7;
            entity = romeo[entity];
            mike = offset.bind(verify)(entity);
            entity = {};
            entity['message'] = kilo;
            entity['channel'] = foxtrot;
            entity['isSystemDM'] = yankee;
            entity['colors'] = oscar;
            mike = mike.bind(verify)(entity);
            entity = {};
            oscar = 8;
            oscar = romeo[oscar];
            oscar = offset.bind(verify)(oscar);
            sizing = oscar.bind(verify)(options);
            output = entity;
            oscar = copyDataProperties(output, sizing);
            yankee = _closure1_slot0;
            oscar = 9;
            options = romeo[oscar];
            options = yankee.bind(verify)(options);
            foxtrot = options.intl;
            offset = foxtrot.formatToParts;
            options = romeo[oscar];
            options = yankee.bind(verify)(options);
            options = options.t;
            options = options.21+uW1;
            offset = offset.bind(foxtrot)(options, backup);
            options = 'content';
            entity[options] = offset;
            options = romeo[oscar];
            options = yankee.bind(verify)(options);
            offset = options.intl;
            options = offset.string;
            oscar = romeo[oscar];
            oscar = yankee.bind(verify)(oscar);
            oscar = oscar.t;
            oscar = oscar.hG1StL;
            oscar = options.bind(offset)(oscar);
            entity[golf] = oscar;
            oscar = report != tango;
            report = null;
            if(!oscar) { _fun00006_ip = 435; continue _fun00005 }
 432:
            report = tango;
 435:
            tango = 'usernameColor';
            entity[tango] = report;
            options = _closure1_slot0;
            offset = _closure1_slot2;
            zulu = 10;
            tango = offset[zulu];
            report = options.bind(verify)(tango);
            tango = report.ensureAvatarSource;
            oscar = 11;
            oscar = offset[oscar];
            golf = options.bind(verify)(oscar);
            oscar = golf.makeSource;
            zulu = offset[zulu];
            options = options.bind(verify)(zulu);
            zulu = options.getAutomodAvatarURL;
            zulu = zulu.bind(options)();
            zulu = oscar.bind(golf)(zulu);
            zulu = tango.bind(report)(zulu);
            tango = zulu.uri;
            zulu = 'avatarURL';
            entity[zulu] = tango;
            output = entity;
            sizing = mike;
            mike = copyDataProperties(output, sizing);
            return entity;
        }
    };
    zulu['createGuildReportFalseAlarmSystemMessage'] = mike;
    return entity;
})();