// app/modules/messages/native/renderer/system_messages/GuildReportFalseAlarmSystemMessage.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    tangon = 16;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/messages/native/renderer/system_messages/GuildReportFalseAlarmSystemMessage.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: GuildReportFalseAlarmSystemMessage
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            option = entity.row;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            report = 13;
            zuuluu = foxtra[report];
            tangon = undefined;
            offset = romeon.bind(tangon)(zuuluu);
            verify = offset.useStateFromStores;
            zuuluu = _closure1_slot4;
            golfie = new Array(1);
            golfie[0] = zuuluu;
            oscard = function() {
                entity = _closure1_slot4;
                entity = entity.roleStyle;
                return entity;
            };
            zuuluu = new Array(0);
            backup = verify.bind(offset)(golfie, oscard, zuuluu);
            var _closure2_slot0 = backup;
            zuuluu = 14;
            zuuluu = foxtra[zuuluu];
            oscard = romeon.bind(tangon)(zuuluu);
            zuuluu = oscard.useThemeContext;
            zuuluu = zuuluu.bind(oscard)();
            oscard = zuuluu.theme;
            offset = option.message;
            var _closure2_slot1 = offset;
            yankee = offset.author;
            var _closure2_slot2 = yankee;
            zuuluu = offset.channel_id;
            var _closure2_slot3 = zuuluu;
            report = foxtra[report];
            kiloes = romeon.bind(tangon)(report);
            verify = kiloes.useStateFromStores;
            report = _closure1_slot5;
            golfie = new Array(1);
            golfie[0] = report;
            report = new Array(1);
            report[0] = zuuluu;
            zuuluu = function() {
                zuuluu = _closure1_slot5;
                michal = zuuluu.getChannel;
                entity = _closure2_slot3;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            verify = verify.bind(kiloes)(golfie, zuuluu, report);
            zuuluu = 5;
            zuuluu = foxtra[zuuluu];
            report = romeon.bind(tangon)(zuuluu);
            zuuluu = report.useMessageAuthorWithProcessedColor;
            zuuluu = zuuluu.bind(report)(offset);
            kiloes = zuuluu.nick;
            var _closure2_slot4 = kiloes;
            sizing = zuuluu.colorString;
            var _closure2_slot5 = sizing;
            zuuluu = 6;
            zuuluu = foxtra[zuuluu];
            report = romeon.bind(tangon)(zuuluu);
            zuuluu = report.resolveAlertModeColors;
            zuuluu = zuuluu.bind(report)(oscard);
            golfie = zuuluu.automodUsernameColor;
            oscard = _closure1_slot3;
            report = oscard.useMemo;
            zuuluu = new Array(5);
            zuuluu[0] = sizing;
            sizing = offset.channel_id;
            zuuluu[1] = sizing;
            zuuluu[2] = kiloes;
            zuuluu[3] = backup;
            yankee = yankee.id;
            zuuluu[4] = yankee;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = {};
                    entity = _closure2_slot4;
                    tangon['username'] = entity;
                    entity = {};
                    zuuluu = 'bindUserMenu';
                    entity['action'] = zuuluu;
                    zuuluu = _closure2_slot2;
                    zuuluu = zuuluu.id;
                    entity['userId'] = zuuluu;
                    zuuluu = _closure2_slot5;
                    entity['colorString'] = zuuluu;
                    golfie = _closure2_slot0;
                    oscard = null;
                    report = 'username';
                    zuuluu = null;
                    if(!(report === golfie)) { _fun00004_ip = 67; continue _fun00003 }
 63:
                    zuuluu = _closure2_slot5;
 67:
                    entity['linkColor'] = zuuluu;
                    zuuluu = _closure2_slot5;
                    entity['roleColor'] = zuuluu;
                    report = _closure2_slot0;
                    zuuluu = 'dot';
                    zuuluu = zuuluu === report;
                    if(!zuuluu) { _fun00004_ip = 104; continue _fun00003 }
 96:
                    report = _closure2_slot5;
                    zuuluu = oscard != report;
 104:
                    entity['shouldShowRoleDot'] = zuuluu;
                    michal = _closure2_slot1;
                    michal = michal.channel_id;
                    entity['messageChannelId'] = michal;
                    michal = true;
                    entity['medium'] = michal;
                    tangon['usernameOnClick'] = entity;
                    oscard = _closure1_slot0;
                    golfie = _closure1_slot2;
                    entity = 10;
                    michal = golfie[entity];
                    report = undefined;
                    michal = oscard.bind(report)(michal);
                    zuuluu = michal.intl;
                    michal = zuuluu.formatToParts;
                    entity = golfie[entity];
                    entity = oscard.bind(report)(entity);
                    entity = entity.t;
                    entity = entity.21+uW1;
                    entity = michal.bind(zuuluu)(entity, tangon);
                    return entity;
                }
            };
            oscard = report.bind(oscard)(michal, zuuluu);
            michal = _closure1_slot1;
            zuuluu = 8;
            zuuluu = foxtra[zuuluu];
            report = michal.bind(tangon)(zuuluu);
            zuuluu = {};
            zuuluu['message'] = offset;
            zuuluu['channel'] = verify;
            verify = true;
            zuuluu['isSystemDM'] = verify;
            verify = {};
            zuuluu['colors'] = verify;
            report = report.bind(tangon)(zuuluu);
            zuuluu = _closure1_slot6;
            entity = 15;
            entity = foxtra[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['row'] = option;
            entity['content'] = oscard;
            oscard = 10;
            option = foxtra[oscard];
            option = romeon.bind(tangon)(option);
            verify = option.intl;
            option = verify.string;
            oscard = foxtra[oscard];
            oscard = romeon.bind(tangon)(oscard);
            oscard = oscard.t;
            oscard = oscard.hG1StL;
            oscard = option.bind(verify)(oscard);
            entity['username'] = oscard;
            oscard = 11;
            option = foxtra[oscard];
            verify = romeon.bind(tangon)(option);
            option = verify.ensureAvatarSource;
            offset = 12;
            offset = foxtra[offset];
            yankee = romeon.bind(tangon)(offset);
            offset = yankee.makeSource;
            oscard = foxtra[oscard];
            romeon = romeon.bind(tangon)(oscard);
            oscard = romeon.getAutomodAvatarURL;
            oscard = oscard.bind(romeon)();
            oscard = offset.bind(yankee)(oscard);
            oscard = option.bind(verify)(oscard);
            oscard = oscard.uri;
            entity['avatarURL'] = oscard;
            oscard = null;
            option = oscard != golfie;
            if(!option) { _fun00002_ip = 517; continue _fun00001 }
 514:
            oscard = golfie;
 517:
            entity['usernameColor'] = oscard;
            echoed = entity;
            result = report;
            report = copyDataProperties(echoed, result);
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    michal = function(argFoo) { // Original name: createGuildReportFalseAlarmSystemMessage
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            option = argFoo;
            kiloes = option.message;
            yankee = option.roleStyle;
            output = option.theme;
            michal = _closure1_slot1;
            sizing = _closure1_slot2;
            entity = 4;
            entity = sizing[entity];
            verify = undefined;
            entity = michal.bind(verify)(entity);
            oscard = entity.bind(verify)(output);
            michal = kiloes.author;
            report = _closure1_slot5;
            tangon = report.getChannel;
            entity = kiloes.channel_id;
            foxtra = tangon.bind(report)(entity);
            golfie = _closure1_slot0;
            entity = 5;
            entity = sizing[entity];
            tangon = golfie.bind(verify)(entity);
            entity = tangon.getMessageAuthorWithProcessedColor;
            tangon = entity.bind(tangon)(kiloes);
            entity = tangon.nick;
            offset = tangon.colorString;
            romeon = tangon.colorStrings;
            backup = tangon.guildId;
            tangon = 6;
            tangon = sizing[tangon];
            report = golfie.bind(verify)(tangon);
            tangon = report.resolveAlertModeColors;
            tangon = tangon.bind(report)(output);
            tangon = tangon.automodUsernameColor;
            report = 7;
            report = sizing[report];
            golfie = golfie.bind(verify)(report);
            report = golfie.isNativeMessageEligibleForEnhancedRoleColors;
            sizing = report.bind(golfie)(backup, yankee);
            backup = {};
            backup['username'] = entity;
            entity = {};
            report = 'bindUserMenu';
            entity['action'] = report;
            michal = michal.id;
            entity['userId'] = michal;
            entity['colorString'] = offset;
            report = null;
            golfie = 'username';
            michal = null;
            if(!(golfie === yankee)) { _fun00006_ip = 225; continue _fun00005 }
 222:
            michal = offset;
 225:
            entity['linkColor'] = michal;
            entity['roleColor'] = offset;
            michal = null;
            if(!sizing) { _fun00006_ip = 243; continue _fun00005 }
 240:
            michal = romeon;
 243:
            entity['roleColors'] = michal;
            michal = 'dot';
            michal = michal === yankee;
            if(!michal) { _fun00006_ip = 263; continue _fun00005 }
 259:
            michal = report != offset;
 263:
            entity['shouldShowRoleDot'] = michal;
            michal = kiloes.channel_id;
            entity['messageChannelId'] = michal;
            yankee = true;
            entity['medium'] = yankee;
            backup['usernameOnClick'] = entity;
            offset = _closure1_slot1;
            romeon = _closure1_slot2;
            entity = 8;
            entity = romeon[entity];
            michal = offset.bind(verify)(entity);
            entity = {};
            entity['message'] = kiloes;
            entity['channel'] = foxtra;
            entity['isSystemDM'] = yankee;
            entity['colors'] = oscard;
            michal = michal.bind(verify)(entity);
            entity = {};
            oscard = 9;
            oscard = romeon[oscard];
            oscard = offset.bind(verify)(oscard);
            result = oscard.bind(verify)(option);
            echoed = entity;
            oscard = copyDataProperties(echoed, result);
            yankee = _closure1_slot0;
            oscard = 10;
            option = romeon[oscard];
            option = yankee.bind(verify)(option);
            foxtra = option.intl;
            offset = foxtra.formatToParts;
            option = romeon[oscard];
            option = yankee.bind(verify)(option);
            option = option.t;
            option = option.21+uW1;
            offset = offset.bind(foxtra)(option, backup);
            option = 'content';
            entity[option] = offset;
            option = romeon[oscard];
            option = yankee.bind(verify)(option);
            offset = option.intl;
            option = offset.string;
            oscard = romeon[oscard];
            oscard = yankee.bind(verify)(oscard);
            oscard = oscard.t;
            oscard = oscard.hG1StL;
            oscard = option.bind(offset)(oscard);
            entity[golfie] = oscard;
            oscard = report != tangon;
            report = null;
            if(!oscard) { _fun00006_ip = 483; continue _fun00005 }
 480:
            report = tangon;
 483:
            tangon = 'usernameColor';
            entity[tangon] = report;
            option = _closure1_slot0;
            offset = _closure1_slot2;
            zuuluu = 11;
            tangon = offset[zuuluu];
            report = option.bind(verify)(tangon);
            tangon = report.ensureAvatarSource;
            oscard = 12;
            oscard = offset[oscard];
            golfie = option.bind(verify)(oscard);
            oscard = golfie.makeSource;
            zuuluu = offset[zuuluu];
            option = option.bind(verify)(zuuluu);
            zuuluu = option.getAutomodAvatarURL;
            zuuluu = zuuluu.bind(option)();
            zuuluu = oscard.bind(golfie)(zuuluu);
            zuuluu = tangon.bind(report)(zuuluu);
            tangon = zuuluu.uri;
            zuuluu = 'avatarURL';
            entity[zuuluu] = tangon;
            echoed = entity;
            result = michal;
            michal = copyDataProperties(echoed, result);
            return entity;
        }
    };
    zuuluu['createGuildReportFalseAlarmSystemMessage'] = michal;
    return entity;
})();