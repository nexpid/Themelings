// app/modules/messages/native/renderer/system_messages/GamingPromptSystemMessage.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    option = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    tangon = function(argFoo) { // Original name: transformEmbeds
        zuuluu = argFoo;
        oscard = _closure1_slot1;
        report = _closure1_slot2;
        tangon = 4;
        tangon = report[tangon];
        report = undefined;
        tangon = oscard.bind(report)(tangon);
        michal = _closure1_slot5;
        michal = michal.theme;
        michal = tangon.bind(report)(michal);
        var _closure2_slot0 = michal;
        michal = zuuluu.map;
        entity = function(argFoo) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = argFoo;
                tangon = michal.fields;
                entity = null;
                if(!(entity == tangon)) { _fun00002_ip = 19; continue _fun00001 }
 15:
                tangon = new Array(0);
 19:
                zuuluu = tangon.map;
                entity = function(argFoo) {
                    michal = argFoo;
                    entity = {};
                    oscard = entity;
                    report = michal;
                    zuuluu = copyDataProperties(oscard, report);
                    tangon = michal.rawName;
                    zuuluu = 'name';
                    entity[zuuluu] = tangon;
                    zuuluu = michal.rawValue;
                    michal = 'value';
                    entity[michal] = zuuluu;
                    return entity;
                };
                zuuluu = zuuluu.bind(tangon)(entity);
                entity = {};
                oscard = entity;
                report = michal;
                michal = copyDataProperties(oscard, report);
                michal = 'fields';
                entity[michal] = zuuluu;
                michal = _closure2_slot0;
                tangon = michal.embedProviderColor;
                zuuluu = 'providerColor';
                entity[zuuluu] = tangon;
                tangon = michal.embedHeaderTextColor;
                zuuluu = 'headerTextColor';
                entity[zuuluu] = tangon;
                tangon = michal.embedBodyTextColor;
                zuuluu = 'bodyTextColor';
                entity[zuuluu] = tangon;
                zuuluu = michal.embedBorderLeftColor;
                michal = 'borderLeftColor';
                entity[michal] = zuuluu;
                return entity;
            }
        };
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    var _closure1_slot7 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/messages/native/renderer/system_messages/GamingPromptSystemMessage.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: GamingPromptSystemMessage
        michal = argFoo;
        verify = michal.row;
        option = _closure1_slot4;
        michal = option.useState;
        tangon = undefined;
        report = michal.bind(option)(tangon);
        zuuluu = _closure1_slot3;
        michal = 2;
        zuuluu = zuuluu.bind(tangon)(report, michal);
        michal = 0;
        golfie = zuuluu[michal];
        michal = 1;
        michal = zuuluu[michal];
        var _closure2_slot0 = michal;
        report = verify.message;
        zuuluu = option.useCallback;
        michal = function(argFoo) {
            zuuluu = _closure2_slot0;
            entity = argFoo;
            entity = entity.nativeEvent;
            entity = entity.layout;
            michal = entity.width;
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        entity = new Array(0);
        option = zuuluu.bind(option)(michal, entity);
        zuuluu = _closure1_slot6;
        michal = _closure1_slot1;
        romeon = _closure1_slot2;
        entity = 7;
        entity = romeon[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        entity['row'] = verify;
        entity['onLayout'] = option;
        option = report.content;
        entity['content'] = option;
        entity['constrainedWidth'] = golfie;
        golfie = {};
        yankee = _closure1_slot0;
        option = 6;
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        offset = verify.intl;
        verify = offset.string;
        option = romeon[option];
        option = yankee.bind(tangon)(option);
        option = option.t;
        option = option.W+j15e;
        option = verify.bind(offset)(option);
        golfie['gamingStatsButtonText'] = option;
        entity['channelPromptData'] = golfie;
        oscard = _closure1_slot7;
        report = report.embeds;
        report = oscard.bind(tangon)(report);
        entity['embeds'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    michal = function(argFoo) { // Original name: createGamingPromptSystemMessage
        zuuluu = argFoo;
        entity = {};
        report = _closure1_slot1;
        option = _closure1_slot2;
        tangon = 5;
        tangon = option[tangon];
        golfie = undefined;
        tangon = report.bind(golfie)(tangon);
        verify = tangon.bind(golfie)(zuuluu);
        offset = entity;
        tangon = copyDataProperties(offset, verify);
        tangon = zuuluu.message;
        report = tangon.content;
        tangon = 'content';
        entity[tangon] = report;
        tangon = _closure1_slot7;
        zuuluu = zuuluu.message;
        zuuluu = zuuluu.embeds;
        tangon = tangon.bind(golfie)(zuuluu);
        zuuluu = 'embeds';
        entity[zuuluu] = tangon;
        zuuluu = {};
        oscard = _closure1_slot0;
        michal = 6;
        tangon = option[michal];
        tangon = oscard.bind(golfie)(tangon);
        report = tangon.intl;
        tangon = report.string;
        michal = option[michal];
        michal = oscard.bind(golfie)(michal);
        michal = michal.t;
        michal = michal.W+j15e;
        michal = tangon.bind(report)(michal);
        zuuluu['gamingStatsButtonText'] = michal;
        michal = 'channelPromptData';
        entity[michal] = zuuluu;
        return entity;
    };
    zuuluu['createGamingPromptSystemMessage'] = michal;
    return entity;
})();