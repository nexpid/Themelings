// app/modules/messages/native/renderer/system_messages/GamingPromptSystemMessage.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    options = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(options);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot6 = tango;
    tango = function(argFoo) { // Original name: transformEmbeds
        zulu = argFoo;
        oscar = _closure1_slot1;
        report = _closure1_slot2;
        tango = 4;
        tango = report[tango];
        report = undefined;
        tango = oscar.bind(report)(tango);
        mike = _closure1_slot5;
        mike = mike.theme;
        mike = tango.bind(report)(mike);
        var _closure2_slot0 = mike;
        mike = zulu.map;
        entity = function(argFoo) {
            _fun72572: for(var _fun72572_ip = 0; ; ) switch(_fun72572_ip) {
 0:
                mike = argFoo;
                tango = mike.fields;
                entity = null;
                if(!(entity == tango)) { _fun72572_ip = 19; continue _fun72572 }
 15:
                tango = new Array(0);
 19:
                zulu = tango.map;
                entity = function(argFoo) {
                    mike = argFoo;
                    entity = {};
                    oscar = entity;
                    report = mike;
                    zulu = copyDataProperties(oscar, report);
                    tango = mike.rawName;
                    zulu = 'name';
                    entity[zulu] = tango;
                    zulu = mike.rawValue;
                    mike = 'value';
                    entity[mike] = zulu;
                    return entity;
                };
                zulu = zulu.bind(tango)(entity);
                entity = {};
                oscar = entity;
                report = mike;
                mike = copyDataProperties(oscar, report);
                mike = 'fields';
                entity[mike] = zulu;
                mike = _closure2_slot0;
                tango = mike.embedProviderColor;
                zulu = 'providerColor';
                entity[zulu] = tango;
                tango = mike.embedHeaderTextColor;
                zulu = 'headerTextColor';
                entity[zulu] = tango;
                tango = mike.embedBodyTextColor;
                zulu = 'bodyTextColor';
                entity[zulu] = tango;
                zulu = mike.embedBorderLeftColor;
                mike = 'borderLeftColor';
                entity[mike] = zulu;
                return entity;
            }
        };
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    var _closure1_slot7 = tango;
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/messages/native/renderer/system_messages/GamingPromptSystemMessage.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: GamingPromptSystemMessage
        mike = argFoo;
        verify = mike.row;
        options = _closure1_slot4;
        mike = options.useState;
        tango = undefined;
        report = mike.bind(options)(tango);
        zulu = _closure1_slot3;
        mike = 2;
        zulu = zulu.bind(tango)(report, mike);
        mike = 0;
        golf = zulu[mike];
        mike = 1;
        mike = zulu[mike];
        var _closure2_slot0 = mike;
        report = verify.message;
        zulu = options.useCallback;
        mike = function(argFoo) {
            zulu = _closure2_slot0;
            entity = argFoo;
            entity = entity.nativeEvent;
            entity = entity.layout;
            mike = entity.width;
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        entity = new Array(0);
        options = zulu.bind(options)(mike, entity);
        zulu = _closure1_slot6;
        mike = _closure1_slot1;
        romeo = _closure1_slot2;
        entity = 7;
        entity = romeo[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        entity['row'] = verify;
        entity['onLayout'] = options;
        options = report.content;
        entity['content'] = options;
        entity['constrainedWidth'] = golf;
        golf = {};
        yankee = _closure1_slot0;
        options = 6;
        verify = romeo[options];
        verify = yankee.bind(tango)(verify);
        offset = verify.intl;
        verify = offset.string;
        options = romeo[options];
        options = yankee.bind(tango)(options);
        options = options.t;
        options = options.W+j15e;
        options = verify.bind(offset)(options);
        golf['gamingStatsButtonText'] = options;
        entity['channelPromptData'] = golf;
        oscar = _closure1_slot7;
        report = report.embeds;
        report = oscar.bind(tango)(report);
        entity['embeds'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = tango;
    mike = function(argFoo) { // Original name: createGamingPromptSystemMessage
        zulu = argFoo;
        entity = {};
        report = _closure1_slot1;
        options = _closure1_slot2;
        tango = 5;
        tango = options[tango];
        golf = undefined;
        tango = report.bind(golf)(tango);
        verify = tango.bind(golf)(zulu);
        offset = entity;
        tango = copyDataProperties(offset, verify);
        tango = zulu.message;
        report = tango.content;
        tango = 'content';
        entity[tango] = report;
        tango = _closure1_slot7;
        zulu = zulu.message;
        zulu = zulu.embeds;
        tango = tango.bind(golf)(zulu);
        zulu = 'embeds';
        entity[zulu] = tango;
        zulu = {};
        oscar = _closure1_slot0;
        mike = 6;
        tango = options[mike];
        tango = oscar.bind(golf)(tango);
        report = tango.intl;
        tango = report.string;
        mike = options[mike];
        mike = oscar.bind(golf)(mike);
        mike = mike.t;
        mike = mike.W+j15e;
        mike = tango.bind(report)(mike);
        zulu['gamingStatsButtonText'] = mike;
        mike = 'channelPromptData';
        entity[mike] = zulu;
        return entity;
    };
    zulu['createGamingPromptSystemMessage'] = mike;
    return entity;
})();