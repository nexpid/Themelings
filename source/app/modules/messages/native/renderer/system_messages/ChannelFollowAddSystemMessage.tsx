// app/modules/messages/native/renderer/system_messages/ChannelFollowAddSystemMessage.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/messages/native/renderer/system_messages/ChannelFollowAddSystemMessage.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: ChannelFollowAddSystemMessage
        entity = argFoo;
        oscard = entity.row;
        romeon = oscard.message;
        var _closure2_slot0 = romeon;
        offset = romeon.author;
        var _closure2_slot1 = offset;
        michal = _closure1_slot1;
        golfie = _closure1_slot2;
        tangon = 3;
        report = golfie[tangon];
        tangon = undefined;
        report = michal.bind(tangon)(report);
        report = report.bind(tangon)(romeon);
        yankee = report.nick;
        var _closure2_slot2 = yankee;
        verify = _closure1_slot3;
        option = verify.useMemo;
        foxtra = romeon.channel_id;
        report = new Array(5);
        report[0] = foxtra;
        foxtra = romeon.content;
        report[1] = foxtra;
        romeon = romeon.messageReference;
        report[2] = romeon;
        report[3] = yankee;
        offset = offset.id;
        report[4] = offset;
        zuuluu = function() {
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 2;
            zuuluu = oscard[entity];
            michal = undefined;
            zuuluu = report.bind(michal)(zuuluu);
            tangon = zuuluu.intl;
            zuuluu = tangon.formatToParts;
            entity = oscard[entity];
            entity = report.bind(michal)(entity);
            entity = entity.t;
            michal = entity.xH8qGB;
            entity = {};
            report = _closure2_slot2;
            entity['username'] = report;
            report = {};
            golfie = 'bindUserMenu';
            report['action'] = golfie;
            golfie = _closure2_slot1;
            golfie = golfie.id;
            report['userId'] = golfie;
            oscard = _closure2_slot0;
            golfie = oscard.channel_id;
            report['messageChannelId'] = golfie;
            golfie = true;
            report['medium'] = golfie;
            entity['usernameOnClick'] = report;
            report = oscard.content;
            entity['webhookName'] = report;
            report = {'action': 'bindGuildMenu', 'messageReference': null, 'medium': true};
            oscard = oscard.messageReference;
            report['messageReference'] = oscard;
            entity['webhookNameOnClick'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        report = option.bind(verify)(zuuluu, report);
        zuuluu = _closure1_slot4;
        entity = 5;
        entity = golfie[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        entity['row'] = oscard;
        entity['content'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    michal = function(argFoo) { // Original name: createChannelFollowAddSystemMessage
        tangon = argFoo;
        yankee = tangon.message;
        romeon = yankee.author;
        entity = {};
        foxtra = _closure1_slot0;
        oscard = _closure1_slot2;
        report = 2;
        golfie = oscard[report];
        zuuluu = undefined;
        golfie = foxtra.bind(zuuluu)(golfie);
        verify = golfie.intl;
        option = verify.formatToParts;
        report = oscard[report];
        report = foxtra.bind(zuuluu)(report);
        report = report.t;
        golfie = report.xH8qGB;
        report = {};
        offset = 3;
        offset = oscard[offset];
        foxtra = foxtra.bind(zuuluu)(offset);
        offset = foxtra.getMessageAuthor;
        offset = offset.bind(foxtra)(yankee);
        offset = offset.nick;
        report['username'] = offset;
        offset = {};
        foxtra = 'bindUserMenu';
        offset['action'] = foxtra;
        romeon = romeon.id;
        offset['userId'] = romeon;
        romeon = yankee.channel_id;
        offset['messageChannelId'] = romeon;
        romeon = true;
        offset['medium'] = romeon;
        report['usernameOnClick'] = offset;
        offset = yankee.content;
        report['webhookName'] = offset;
        offset = {'action': 'bindGuildMenu', 'messageReference': null, 'medium': true};
        yankee = yankee.messageReference;
        offset['messageReference'] = yankee;
        report['webhookNameOnClick'] = offset;
        report = option.bind(verify)(golfie, report);
        entity['content'] = report;
        report = _closure1_slot1;
        michal = 4;
        michal = oscard[michal];
        michal = report.bind(zuuluu)(michal);
        backup = michal.bind(zuuluu)(tangon);
        kiloes = entity;
        michal = copyDataProperties(kiloes, backup);
        return entity;
    };
    zuuluu['createChannelFollowAddSystemMessage'] = michal;
    return entity;
})();