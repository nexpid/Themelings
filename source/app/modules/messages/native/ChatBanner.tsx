// app/modules/messages/native/ChatBanner.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = golf;
    mike = function(argFoo) { // Original name: OptInChannelBanner
        _fun89583: for(var _fun89583_ip = 0; ; ) switch(_fun89583_ip) {
 0:
            mike = argFoo;
            oscar = mike.channel;
            var _closure2_slot0 = oscar;
            golf = mike.topBorder;
            mike = _closure1_slot12;
            tango = undefined;
            result = mike.bind(tango)();
            options = _closure1_slot3;
            report = options.useEffect;
            zulu = new Array(1);
            zulu[0] = oscar;
            mike = function() {
                zulu = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 13;
                mike = verify[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.track;
                mike = _closure1_slot8;
                zulu = mike.CHANNEL_BANNER_VIEWED;
                mike = {};
                golf = _closure1_slot0;
                oscar = 14;
                options = verify[oscar];
                romeo = golf.bind(entity)(options);
                yankee = romeo.collectGuildAnalyticsMetadata;
                options = _closure2_slot0;
                offset = options.getGuildId;
                offset = offset.bind(options)();
                foxtrot = yankee.bind(romeo)(offset);
                backup = mike;
                offset = copyDataProperties(backup, foxtrot);
                oscar = verify[oscar];
                golf = golf.bind(entity)(oscar);
                oscar = golf.collectChannelAnalyticsMetadata;
                foxtrot = oscar.bind(golf)(options);
                backup = mike;
                oscar = copyDataProperties(backup, foxtrot);
                golf = 'channel_opt_in';
                oscar = 'banner_type';
                mike[oscar] = golf;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            mike = report.bind(options)(mike, zulu);
            report = _closure1_slot3;
            zulu = report.useCallback;
            mike = new Array(1);
            mike[0] = oscar;
            entity = function() {
                tango = _closure1_slot1;
                oscar = _closure1_slot2;
                entity = 13;
                zulu = oscar[entity];
                entity = undefined;
                verify = tango.bind(entity)(zulu);
                options = verify.track;
                zulu = _closure1_slot8;
                golf = zulu.CHANNEL_BANNER_CTA_CLICKED;
                tango = {};
                report = _closure1_slot0;
                offset = 14;
                zulu = oscar[offset];
                foxtrot = report.bind(entity)(zulu);
                romeo = foxtrot.collectGuildAnalyticsMetadata;
                zulu = _closure2_slot0;
                yankee = zulu.getGuildId;
                yankee = yankee.bind(zulu)();
                sizing = romeo.bind(foxtrot)(yankee);
                output = tango;
                yankee = copyDataProperties(output, sizing);
                offset = oscar[offset];
                yankee = report.bind(entity)(offset);
                offset = yankee.collectChannelAnalyticsMetadata;
                sizing = offset.bind(yankee)(zulu);
                output = tango;
                offset = copyDataProperties(output, sizing);
                yankee = 'channel_opt_in';
                offset = 'banner_type';
                tango[offset] = yankee;
                yankee = 'add channel';
                offset = 'cta_type';
                tango[offset] = yankee;
                tango = options.bind(verify)(golf, tango);
                tango = 15;
                tango = oscar[tango];
                golf = report.bind(entity)(tango);
                oscar = golf.setOptInChannel;
                output = zulu.guild_id;
                sizing = zulu.id;
                zulu = {};
                mike = _closure1_slot9;
                mike = mike.CHANNEL;
                zulu['section'] = mike;
                kilo = true;
                result = golf;
                backup = zulu;
                mike = result[oscar](output, sizing, kilo, backup, foxtrot);
                return entity;
            };
            output = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot11;
            mike = _closure1_slot4;
            entity = {};
            oscar = result.optInChannelBannerContainer;
            report = new Array(2);
            report[0] = oscar;
            oscar = null;
            if(!golf) { _fun89583_ip = 128; continue _fun89583 }
 122:
            oscar = result.topBorder;
 128:
            report[1] = oscar;
            entity['style'] = report;
            golf = _closure1_slot10;
            kilo = _closure1_slot0;
            sizing = _closure1_slot2;
            report = 16;
            report = sizing[report];
            report = kilo.bind(tango)(report);
            oscar = report.Text;
            report = {'lineClamp': 2, 'style': null, 'variant': 'text-sm/semibold'};
            options = result.optInChannelBannerText;
            report['style'] = options;
            romeo = 17;
            options = sizing[romeo];
            options = kilo.bind(tango)(options);
            yankee = options.intl;
            offset = yankee.string;
            options = sizing[romeo];
            options = kilo.bind(tango)(options);
            options = options.t;
            options = options.iOWmmJ;
            options = offset.bind(yankee)(options);
            report['children'] = options;
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot10;
            golf = _closure1_slot4;
            oscar = {};
            offset = result.optInChannelBannerButtonContainer;
            oscar['style'] = offset;
            yankee = _closure1_slot10;
            backup = _closure1_slot1;
            foxtrot = 18;
            verify = sizing[foxtrot];
            offset = backup.bind(tango)(verify);
            verify = {};
            result = result.optInChannelBannerButton;
            verify['style'] = result;
            verify['onPress'] = output;
            foxtrot = sizing[foxtrot];
            foxtrot = backup.bind(tango)(foxtrot);
            foxtrot = foxtrot.Sizes;
            foxtrot = foxtrot.SMALL;
            verify['size'] = foxtrot;
            foxtrot = sizing[romeo];
            foxtrot = kilo.bind(tango)(foxtrot);
            backup = foxtrot.intl;
            foxtrot = backup.string;
            romeo = sizing[romeo];
            romeo = kilo.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.TD/+zM;
            romeo = foxtrot.bind(backup)(romeo);
            verify['text'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot13 = mike;
    entity = function(argFoo) { // Original name: ArchivedLockedThreadChatBanner
        _fun89586: for(var _fun89586_ip = 0; ; ) switch(_fun89586_ip) {
 0:
            entity = argFoo;
            yankee = entity.channel;
            var _closure2_slot0 = yankee;
            entity = _closure1_slot12;
            tango = undefined;
            foxtrot = entity.bind(tango)();
            report = _closure1_slot3;
            zulu = report.useEffect;
            mike = new Array(1);
            mike[0] = yankee;
            entity = function() {
                zulu = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 13;
                mike = verify[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.track;
                mike = _closure1_slot8;
                zulu = mike.CHANNEL_BANNER_VIEWED;
                mike = {};
                golf = _closure1_slot0;
                oscar = 14;
                options = verify[oscar];
                romeo = golf.bind(entity)(options);
                yankee = romeo.collectGuildAnalyticsMetadata;
                options = _closure2_slot0;
                offset = options.getGuildId;
                offset = offset.bind(options)();
                foxtrot = yankee.bind(romeo)(offset);
                backup = mike;
                offset = copyDataProperties(backup, foxtrot);
                oscar = verify[oscar];
                golf = golf.bind(entity)(oscar);
                oscar = golf.collectChannelAnalyticsMetadata;
                foxtrot = oscar.bind(golf)(options);
                backup = mike;
                oscar = copyDataProperties(backup, foxtrot);
                golf = 'thread';
                oscar = 'banner_type';
                mike[oscar] = golf;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            entity = zulu.bind(report)(entity, mike);
            golf = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 19;
            entity = verify[entity];
            mike = golf.bind(tango)(entity);
            entity = mike.useCanUnarchiveThread;
            oscar = entity.bind(mike)(yankee);
            zulu = _closure1_slot11;
            mike = _closure1_slot4;
            entity = {};
            report = foxtrot.threadBannerContainer;
            entity['style'] = report;
            options = _closure1_slot10;
            report = 16;
            report = verify[report];
            report = golf.bind(tango)(report);
            golf = report.Text;
            report = {'lineClamp': 2, 'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            verify = foxtrot.threadBannerTitle;
            report['style'] = verify;
            verify = yankee.isForumPost;
            verify = verify.bind(yankee)();
            output = _closure1_slot0;
            yankee = _closure1_slot2;
            kilo = 17;
            backup = yankee[kilo];
            backup = output.bind(tango)(backup);
            sizing = backup.intl;
            backup = sizing.string;
            yankee = yankee[kilo];
            yankee = output.bind(tango)(yankee);
            yankee = yankee.t;
            if(verify) { _fun89586_ip = 225; continue _fun89586 }
 212:
            verify = yankee.rEeodH;
            verify = backup.bind(sizing)(verify);
            _fun89586_ip = 236; continue _fun89586;
 225:
            yankee = yankee.833FDg;
            verify = backup.bind(sizing)(yankee);
 236:
            report['children'] = verify;
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            if(!oscar) { _fun89586_ip = 390; continue _fun89586 }
 260:
            verify = _closure1_slot10;
            sizing = _closure1_slot1;
            yankee = _closure1_slot2;
            backup = 18;
            golf = yankee[backup];
            options = sizing.bind(tango)(golf);
            golf = {};
            backup = yankee[backup];
            backup = sizing.bind(tango)(backup);
            backup = backup.Colors;
            backup = backup.GREY;
            golf['color'] = backup;
            foxtrot = foxtrot.threadBannerButton;
            golf['style'] = foxtrot;
            backup = _closure1_slot0;
            romeo = yankee[kilo];
            romeo = backup.bind(tango)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            yankee = yankee[kilo];
            yankee = backup.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.0dvvEh;
            yankee = romeo.bind(foxtrot)(yankee);
            golf['text'] = yankee;
            offset = function() { // Original name: onPress
                zulu = _closure1_slot1;
                tango = _closure1_slot2;
                entity = 13;
                mike = tango[entity];
                entity = undefined;
                options = zulu.bind(entity)(mike);
                golf = options.track;
                mike = _closure1_slot8;
                oscar = mike.CHANNEL_BANNER_CTA_CLICKED;
                mike = {};
                offset = _closure1_slot0;
                verify = 14;
                report = tango[verify];
                foxtrot = offset.bind(entity)(report);
                romeo = foxtrot.collectGuildAnalyticsMetadata;
                report = _closure2_slot0;
                yankee = report.getGuildId;
                yankee = yankee.bind(report)();
                backup = romeo.bind(foxtrot)(yankee);
                kilo = mike;
                yankee = copyDataProperties(kilo, backup);
                verify = tango[verify];
                offset = offset.bind(entity)(verify);
                verify = offset.collectChannelAnalyticsMetadata;
                backup = verify.bind(offset)(report);
                kilo = mike;
                verify = copyDataProperties(kilo, backup);
                offset = 'thread';
                verify = 'banner_type';
                mike[verify] = offset;
                offset = 'unarchive';
                verify = 'cta_type';
                mike[verify] = offset;
                mike = golf.bind(options)(oscar, mike);
                mike = 20;
                mike = tango[mike];
                tango = zulu.bind(entity)(mike);
                zulu = tango.unarchiveThread;
                mike = false;
                mike = zulu.bind(tango)(report, mike);
                return entity;
            };
            golf['onPress'] = offset;
            oscar = verify.bind(tango)(options, golf);
 390:
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot14 = entity;
    entity = function(argFoo) { // Original name: LockedThreadChatBanner
        _fun89589: for(var _fun89589_ip = 0; ; ) switch(_fun89589_ip) {
 0:
            entity = argFoo;
            yankee = entity.channel;
            var _closure2_slot0 = yankee;
            entity = _closure1_slot12;
            tango = undefined;
            foxtrot = entity.bind(tango)();
            report = _closure1_slot3;
            zulu = report.useEffect;
            mike = new Array(1);
            mike[0] = yankee;
            entity = function() {
                zulu = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 13;
                mike = verify[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.track;
                mike = _closure1_slot8;
                zulu = mike.CHANNEL_BANNER_VIEWED;
                mike = {};
                golf = _closure1_slot0;
                oscar = 14;
                options = verify[oscar];
                romeo = golf.bind(entity)(options);
                yankee = romeo.collectGuildAnalyticsMetadata;
                options = _closure2_slot0;
                offset = options.getGuildId;
                offset = offset.bind(options)();
                foxtrot = yankee.bind(romeo)(offset);
                backup = mike;
                offset = copyDataProperties(backup, foxtrot);
                oscar = verify[oscar];
                golf = golf.bind(entity)(oscar);
                oscar = golf.collectChannelAnalyticsMetadata;
                foxtrot = oscar.bind(golf)(options);
                backup = mike;
                oscar = copyDataProperties(backup, foxtrot);
                golf = 'thread';
                oscar = 'banner_type';
                mike[oscar] = golf;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            entity = zulu.bind(report)(entity, mike);
            golf = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 19;
            entity = verify[entity];
            mike = golf.bind(tango)(entity);
            entity = mike.useIsThreadModerator;
            oscar = entity.bind(mike)(yankee);
            zulu = _closure1_slot11;
            mike = _closure1_slot4;
            entity = {};
            report = foxtrot.threadBannerContainer;
            entity['style'] = report;
            options = _closure1_slot10;
            report = 16;
            report = verify[report];
            report = golf.bind(tango)(report);
            golf = report.Text;
            report = {'lineClamp': 2, 'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            verify = foxtrot.threadBannerTitle;
            report['style'] = verify;
            verify = yankee.isForumPost;
            verify = verify.bind(yankee)();
            output = _closure1_slot0;
            yankee = _closure1_slot2;
            kilo = 17;
            backup = yankee[kilo];
            backup = output.bind(tango)(backup);
            sizing = backup.intl;
            backup = sizing.string;
            yankee = yankee[kilo];
            yankee = output.bind(tango)(yankee);
            yankee = yankee.t;
            if(verify) { _fun89589_ip = 225; continue _fun89589 }
 212:
            verify = yankee.V/JF2N;
            verify = backup.bind(sizing)(verify);
            _fun89589_ip = 236; continue _fun89589;
 225:
            yankee = yankee.E7oO8v;
            verify = backup.bind(sizing)(yankee);
 236:
            report['children'] = verify;
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            if(!oscar) { _fun89589_ip = 390; continue _fun89589 }
 260:
            verify = _closure1_slot10;
            sizing = _closure1_slot1;
            yankee = _closure1_slot2;
            backup = 18;
            golf = yankee[backup];
            options = sizing.bind(tango)(golf);
            golf = {};
            backup = yankee[backup];
            backup = sizing.bind(tango)(backup);
            backup = backup.Colors;
            backup = backup.GREY;
            golf['color'] = backup;
            foxtrot = foxtrot.threadBannerButton;
            golf['style'] = foxtrot;
            backup = _closure1_slot0;
            romeo = yankee[kilo];
            romeo = backup.bind(tango)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            yankee = yankee[kilo];
            yankee = backup.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.zA9d1N;
            yankee = romeo.bind(foxtrot)(yankee);
            golf['text'] = yankee;
            offset = function() { // Original name: onPress
                zulu = _closure1_slot1;
                report = _closure1_slot2;
                entity = 13;
                mike = report[entity];
                entity = undefined;
                options = zulu.bind(entity)(mike);
                golf = options.track;
                mike = _closure1_slot8;
                oscar = mike.CHANNEL_BANNER_CTA_CLICKED;
                mike = {};
                offset = _closure1_slot0;
                verify = 14;
                tango = report[verify];
                foxtrot = offset.bind(entity)(tango);
                romeo = foxtrot.collectGuildAnalyticsMetadata;
                tango = _closure2_slot0;
                yankee = tango.getGuildId;
                yankee = yankee.bind(tango)();
                backup = romeo.bind(foxtrot)(yankee);
                kilo = mike;
                yankee = copyDataProperties(kilo, backup);
                verify = report[verify];
                offset = offset.bind(entity)(verify);
                verify = offset.collectChannelAnalyticsMetadata;
                backup = verify.bind(offset)(tango);
                kilo = mike;
                verify = copyDataProperties(kilo, backup);
                offset = 'thread';
                verify = 'banner_type';
                mike[verify] = offset;
                offset = 'unlock';
                verify = 'cta_type';
                mike[verify] = offset;
                mike = golf.bind(options)(oscar, mike);
                mike = 20;
                mike = report[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.unlockThread;
                mike = mike.bind(zulu)(tango);
                return entity;
            };
            golf['onPress'] = offset;
            oscar = verify.bind(tango)(options, golf);
 390:
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot15 = entity;
    entity = function(argFoo) { // Original name: NewMessagesChatBar
        _fun89592: for(var _fun89592_ip = 0; ; ) switch(_fun89592_ip) {
 0:
            entity = argFoo;
            zulu = entity.channel;
            var _closure2_slot0 = zulu;
            record = entity.unreadCount;
            config = entity.oldestUnreadTimestamp;
            output = entity.handleScrollToNewMessages;
            entity = _closure1_slot12;
            oscar = undefined;
            backup = entity.bind(oscar)();
            mike = _closure1_slot0;
            tango = _closure1_slot2;
            entity = 11;
            entity = tango[entity];
            golf = mike.bind(oscar)(entity);
            report = golf.useStateFromStores;
            entity = _closure1_slot5;
            tango = new Array(1);
            tango[0] = entity;
            mike = function() {
                mike = _closure1_slot5;
                entity = mike.isConnected;
                entity = entity.bind(mike)();
                return entity;
            };
            entity = new Array(0);
            tango = report.bind(golf)(tango, mike, entity);
            entity = null;
            if(!tango) { _fun89592_ip = 512; continue _fun89592 }
 108:
            tango = 0;
            tango = record <= tango;
            mike = null;
            if(tango) { _fun89592_ip = 509; continue _fun89592 }
 122:
            report = _closure1_slot6;
            tango = report.isEstimated;
            zulu = zulu.id;
            tango = tango.bind(report)(zulu);
            report = _closure1_slot0;
            zulu = _closure1_slot2;
            foxtrot = 17;
            zulu = zulu[foxtrot];
            zulu = report.bind(oscar)(zulu);
            zulu = zulu.t;
            if(tango) { _fun89592_ip = 180; continue _fun89592 }
 172:
            sequence = zulu.BctFHx;
            _fun89592_ip = 186; continue _fun89592;
 180:
            sequence = zulu.wvtbbG;
 186:
            report = _closure1_slot11;
            tango = _closure1_slot4;
            zulu = {};
            golf = backup.newMessageBar;
            zulu['style'] = golf;
            offset = _closure1_slot10;
            result = _closure1_slot0;
            kilo = _closure1_slot2;
            options = 21;
            golf = kilo[options];
            golf = result.bind(oscar)(golf);
            verify = golf.PressableOpacity;
            golf = {};
            sizing = 'button';
            golf['accessibilityRole'] = sizing;
            echo = backup.newMessageBarTextContainer;
            golf['style'] = echo;
            golf['onPress'] = output;
            update = _closure1_slot10;
            output = 16;
            output = kilo[output];
            output = result.bind(oscar)(output);
            echo = output.Text;
            output = {'variant': 'text-sm/semibold', 'color': 'always-white'};
            source = kilo[foxtrot];
            source = result.bind(oscar)(source);
            vacuum = source.intl;
            control = vacuum.format;
            source = {};
            source['count'] = record;
            source['timestamp'] = config;
            source = control.bind(vacuum)(sequence, source);
            output['children'] = source;
            output = update.bind(oscar)(echo, output);
            golf['children'] = output;
            verify = offset.bind(oscar)(verify, golf);
            golf = new Array(2);
            golf[0] = verify;
            offset = _closure1_slot10;
            options = kilo[options];
            options = result.bind(oscar)(options);
            verify = options.PressableOpacity;
            options = {};
            options['accessibilityRole'] = sizing;
            sizing = kilo[foxtrot];
            sizing = result.bind(oscar)(sizing);
            output = sizing.intl;
            sizing = output.string;
            foxtrot = kilo[foxtrot];
            foxtrot = result.bind(oscar)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.e6RscX;
            foxtrot = sizing.bind(output)(foxtrot);
            options['accessibilityLabel'] = foxtrot;
            romeo = function() { // Original name: onPress
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 22;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.ack;
                entity = _closure2_slot0;
                entity = entity.id;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            options['onPress'] = romeo;
            foxtrot = _closure1_slot10;
            romeo = _closure1_slot1;
            yankee = 23;
            yankee = kilo[yankee];
            romeo = romeo.bind(oscar)(yankee);
            yankee = {};
            backup = backup.closeText;
            yankee['style'] = backup;
            backup = '+';
            yankee['children'] = backup;
            yankee = foxtrot.bind(oscar)(romeo, yankee);
            options['children'] = yankee;
            options = offset.bind(oscar)(verify, options);
            golf[1] = options;
            zulu['children'] = golf;
            mike = report.bind(oscar)(tango, zulu);
 509:
            entity = mike;
 512:
            return entity;
        }
    };
    var _closure1_slot16 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, report);
    entity = 0;
    options = golf[entity];
    report = argCorge;
    entity = undefined;
    report = report.bind(entity)(options);
    var _closure1_slot3 = report;
    yankee = 1;
    report = golf[yankee];
    report = oscar.bind(entity)(report);
    backup = report.StyleSheet;
    report = report.View;
    var _closure1_slot4 = report;
    report = 2;
    report = golf[report];
    report = foxtrot.bind(entity)(report);
    var _closure1_slot5 = report;
    report = 3;
    report = golf[report];
    report = foxtrot.bind(entity)(report);
    var _closure1_slot6 = report;
    report = 4;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.ChatOverlays;
    var _closure1_slot7 = report;
    report = 5;
    report = golf[report];
    report = oscar.bind(entity)(report);
    options = report.AnalyticEvents;
    var _closure1_slot8 = options;
    options = report.AnalyticsSections;
    var _closure1_slot9 = options;
    sizing = report.Fonts;
    report = 6;
    options = golf[report];
    options = oscar.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot10 = options;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot11 = report;
    report = 7;
    report = golf[report];
    verify = oscar.bind(entity)(report);
    options = verify.createStyles;
    report = {};
    offset = {'alignSelf': 'stretch', 'height': 60, 'flexDirection': 'row', 'paddingHorizontal': 16, 'paddingVertical': 12, 'alignItems': 'center', 'flexGrow': 0, 'zIndex': 100};
    kilo = 12;
    romeo = 8;
    output = golf[romeo];
    output = foxtrot.bind(entity)(output);
    output = output.colors;
    output = output.BACKGROUND_SECONDARY_ALT;
    offset['backgroundColor'] = output;
    report['threadBannerContainer'] = offset;
    offset = {'flex': 1, 'lineHeight': 18};
    report['threadBannerTitle'] = offset;
    offset = {'flexGrow': 0, 'height': 32, 'paddingVertical': 7, 'paddingHorizontal': 16, 'marginLeft': 16};
    report['threadBannerButton'] = offset;
    offset = {'backgroundColor': null, 'flexDirection': 'row', 'justifyContent': 'center', 'alignItems': 'center', 'overflow': 'hidden', 'zIndex': 100};
    output = golf[romeo];
    output = foxtrot.bind(entity)(output);
    output = output.colors;
    output = output.BG_BRAND;
    offset['backgroundColor'] = output;
    report['newMessageBar'] = offset;
    offset = {'flex': 1, 'paddingLeft': 16, 'paddingVertical': 10};
    report['newMessageBarTextContainer'] = offset;
    offset = {};
    output = golf[romeo];
    output = foxtrot.bind(entity)(output);
    output = output.colors;
    output = output.WHITE;
    offset['color'] = output;
    sizing = sizing.PRIMARY_MEDIUM;
    offset['fontFamily'] = sizing;
    sizing = 30;
    offset['fontSize'] = sizing;
    offset['paddingHorizontal'] = kilo;
    sizing = {};
    kilo = '45deg';
    sizing['rotate'] = kilo;
    kilo = new Array(1);
    kilo[0] = sizing;
    offset['transform'] = kilo;
    report['closeText'] = offset;
    offset = {'flexDirection': 'row', 'justifyContent': 'space-between', 'alignItems': 'center', 'overflow': 'hidden', 'padding': 8, 'paddingLeft': 16, 'paddingRight': 16, 'zIndex': 100};
    kilo = golf[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.CHAT_BANNER_BG;
    offset['backgroundColor'] = kilo;
    kilo = backup.hairlineWidth;
    offset['borderBottomWidth'] = kilo;
    kilo = golf[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.CHAT_BORDER;
    offset['borderBottomColor'] = kilo;
    report['optInChannelBannerContainer'] = offset;
    offset = {};
    backup = backup.hairlineWidth;
    offset['borderTopWidth'] = backup;
    romeo = golf[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.CHAT_BORDER;
    offset['borderTopColor'] = romeo;
    report['topBorder'] = offset;
    offset = {};
    offset['flex'] = yankee;
    report['optInChannelBannerText'] = offset;
    offset = {'flexShrink': 0, 'marginLeft': 8};
    report['optInChannelBannerButtonContainer'] = offset;
    offset = {'borderRadius': 20, 'paddingLeft': 16, 'paddingRight': 16};
    report['optInChannelBannerButton'] = offset;
    report = options.bind(verify)(report);
    var _closure1_slot12 = report;
    report = 24;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/messages/native/ChatBanner.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: ChatBanner
        _fun89595: for(var _fun89595_ip = 0; ; ) switch(_fun89595_ip) {
 0:
            mike = argFoo;
            oscar = mike.channel;
            var _closure2_slot0 = oscar;
            options = mike.handleScrollToNewMessages;
            golf = _closure1_slot1;
            verify = _closure1_slot2;
            zulu = 9;
            zulu = verify[zulu];
            report = undefined;
            zulu = golf.bind(report)(zulu);
            zulu = zulu.bind(report)(oscar);
            tango = 10;
            tango = verify[tango];
            tango = golf.bind(report)(tango);
            yankee = tango.bind(report)();
            golf = _closure1_slot0;
            tango = 11;
            tango = verify[tango];
            offset = golf.bind(report)(tango);
            verify = offset.useStateFromStoresObject;
            tango = _closure1_slot6;
            golf = new Array(1);
            golf[0] = tango;
            romeo = oscar.id;
            tango = new Array(1);
            tango[0] = romeo;
            entity = function() {
                _fun89596: for(var _fun89596_ip = 0; ; ) switch(_fun89596_ip) {
 0:
                    oscar = _closure1_slot6;
                    mike = oscar.getOldestUnreadTimestamp;
                    report = _closure2_slot0;
                    entity = report.id;
                    mike = mike.bind(oscar)(entity);
                    entity = {};
                    golf = _closure1_slot6;
                    oscar = golf.getUnreadCount;
                    report = report.id;
                    report = oscar.bind(golf)(report);
                    entity['unreadCount'] = report;
                    report = 0;
                    if(!(report === mike)) { _fun89596_ip = 107; continue _fun89596 }
 65:
                    oscar = _closure1_slot1;
                    report = _closure1_slot2;
                    tango = 12;
                    report = report[tango];
                    tango = undefined;
                    report = oscar.bind(tango)(report);
                    tango = report.extractTimestamp;
                    zulu = _closure2_slot0;
                    zulu = zulu.id;
                    mike = tango.bind(report)(zulu);
 107:
                    entity['oldestUnreadTimestamp'] = mike;
                    return entity;
                }
            };
            entity = verify.bind(offset)(golf, entity, tango);
            offset = entity.unreadCount;
            verify = entity.oldestUnreadTimestamp;
            entity = oscar.isArchivedLockedThread;
            entity = entity.bind(oscar)();
            if(entity) { _fun89595_ip = 308; continue _fun89595 }
 155:
            entity = oscar.isLockedThread;
            entity = entity.bind(oscar)();
            if(entity) { _fun89595_ip = 286; continue _fun89595 }
 168:
            entity = 0;
            if(!(offset > entity)) { _fun89595_ip = 197; continue _fun89595 }
 174:
            tango = yankee.includes;
            entity = _closure1_slot7;
            entity = entity.NEW_MESSAGES;
            entity = tango.bind(yankee)(entity);
            if(entity) { _fun89595_ip = 249; continue _fun89595 }
 197:
            entity = null;
            if(!zulu) { _fun89595_ip = 247; continue _fun89595 }
 202:
            golf = yankee.includes;
            zulu = _closure1_slot7;
            zulu = zulu.OPT_IN_CHANNEL;
            zulu = golf.bind(yankee)(zulu);
            entity = null;
            if(!zulu) { _fun89595_ip = 247; continue _fun89595 }
 227:
            golf = _closure1_slot10;
            tango = _closure1_slot13;
            zulu = {};
            zulu['channel'] = oscar;
            entity = golf.bind(report)(tango, zulu);
 247:
            _fun89595_ip = 284; continue _fun89595;
 249:
            golf = _closure1_slot10;
            tango = _closure1_slot16;
            zulu = {};
            zulu['unreadCount'] = offset;
            zulu['oldestUnreadTimestamp'] = verify;
            zulu['channel'] = oscar;
            zulu['handleScrollToNewMessages'] = options;
            entity = golf.bind(report)(tango, zulu);
 284:
            _fun89595_ip = 306; continue _fun89595;
 286:
            golf = _closure1_slot10;
            tango = _closure1_slot15;
            zulu = {};
            zulu['channel'] = oscar;
            entity = golf.bind(report)(tango, zulu);
 306:
            _fun89595_ip = 328; continue _fun89595;
 308:
            tango = _closure1_slot10;
            zulu = _closure1_slot14;
            mike = {};
            mike['channel'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 328:
            return entity;
        }
    };
    zulu['default'] = tango;
    zulu['OptInChannelBanner'] = mike;
    return entity;
})();