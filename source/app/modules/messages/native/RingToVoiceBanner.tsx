// app/modules/messages/native/RingToVoiceBanner.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: RingUserButton
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.channelId;
            var _closure2_slot0 = michal;
            entity = entity.recipientUserId;
            var _closure2_slot1 = entity;
            report = _closure1_slot0;
            option = _closure1_slot2;
            entity = 8;
            entity = option[entity];
            tangon = undefined;
            verify = report.bind(tangon)(entity);
            zuuluu = verify.useStateFromStores;
            entity = _closure1_slot4;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                tangon = _closure1_slot4;
                zuuluu = tangon.getParticipant;
                michal = _closure2_slot0;
                entity = _closure2_slot1;
                michal = zuuluu.bind(tangon)(michal, entity);
                entity = null;
                entity = entity != michal;
                return entity;
            };
            entity = zuuluu.bind(verify)(michal, entity);
            zuuluu = _closure1_slot7;
            michal = 14;
            michal = option[michal];
            michal = report.bind(tangon)(michal);
            michal = michal.Button;
            report = {'onPress': null, 'size': 'sm', 'variant': 'tertiary'};
            if(entity) { _fun00002_ip = 197; continue _fun00001 }
 118:
            entity = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 15;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.ring;
                michal = _closure2_slot0;
                report = _closure2_slot1;
                entity = new Array(1);
                entity[0] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            report['onPress'] = entity;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 11;
            option = yankee[entity];
            option = offset.bind(tangon)(option);
            verify = option.intl;
            option = verify.string;
            entity = yankee[entity];
            entity = offset.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.3Hv9qa;
            entity = option.bind(verify)(entity);
            report['text'] = entity;
            entity = report;
            _fun00002_ip = 272; continue _fun00001;
 197:
            golfie = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 15;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.stopRinging;
                michal = _closure2_slot0;
                report = _closure2_slot1;
                entity = new Array(1);
                entity[0] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            report['onPress'] = golfie;
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            oscard = 11;
            golfie = offset[oscard];
            golfie = verify.bind(tangon)(golfie);
            option = golfie.intl;
            golfie = option.string;
            oscard = offset[oscard];
            oscard = verify.bind(tangon)(oscard);
            oscard = oscard.t;
            oscard = oscard.ygslb2;
            oscard = golfie.bind(option)(oscard);
            report['text'] = oscard;
            entity = report;
 272:
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot11 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    backup = tangon.StyleSheet;
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    yankee = 5;
    tangon = oscard[yankee];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot7 = tangon;
    tangon = oscard[yankee];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    offset = {'flexDirection': 'row', 'justifyContent': 'space-between', 'alignItems': 'center', 'overflow': 'hidden', 'padding': 8, 'paddingLeft': 16, 'paddingRight': 16, 'zIndex': 100};
    tangon = 16;
    romeon = 7;
    kiloes = oscard[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.CHAT_BANNER_BG;
    offset['backgroundColor'] = kiloes;
    kiloes = backup.hairlineWidth;
    offset['borderBottomWidth'] = kiloes;
    kiloes = oscard[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.CHAT_BORDER;
    offset['borderBottomColor'] = kiloes;
    golfie['ringToVoiceContainer'] = offset;
    offset = {};
    backup = backup.hairlineWidth;
    offset['borderTopWidth'] = backup;
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.CHAT_BORDER;
    offset['borderTopColor'] = romeon;
    golfie['topBorder'] = offset;
    offset = {'flexShrink': 0, 'marginLeft': 8};
    golfie['ringToVoiceButtonContainer'] = offset;
    offset = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'center', 'flex': 1};
    golfie['ringUserBannerText'] = offset;
    offset = {'display': 'flex', 'flexDirection': 'row', 'gap': 3};
    golfie['channelNameContainer'] = offset;
    offset = {};
    offset['marginTop'] = yankee;
    golfie['voiceChannelIcon'] = offset;
    offset = {'marginTop': 3, 'marginBottom': 4294967293};
    golfie['channelNameText'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot9 = golfie;
    golfie = function(argFoo) { // Original name: ChannelName
        entity = argFoo;
        michal = entity.channel;
        entity = _closure1_slot9;
        tangon = undefined;
        offset = entity.bind(tangon)();
        zuuluu = _closure1_slot1;
        yankee = _closure1_slot2;
        entity = 12;
        entity = yankee[entity];
        entity = zuuluu.bind(tangon)(entity);
        verify = entity.bind(tangon)(michal);
        zuuluu = _closure1_slot8;
        michal = _closure1_slot3;
        entity = {};
        report = offset.channelNameContainer;
        entity['style'] = report;
        romeon = _closure1_slot7;
        golfie = _closure1_slot0;
        report = 13;
        report = yankee[report];
        report = golfie.bind(tangon)(report);
        option = report.VoiceNormalIcon;
        report = {};
        foxtra = 'xs';
        report['size'] = foxtra;
        foxtra = offset.voiceChannelIcon;
        report['style'] = foxtra;
        option = romeon.bind(tangon)(option, report);
        report = new Array(2);
        report[0] = option;
        option = _closure1_slot7;
        oscard = 10;
        oscard = yankee[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {};
        yankee = 'text-sm/semibold';
        oscard['variant'] = yankee;
        offset = offset.channelNameText;
        oscard['style'] = offset;
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/messages/native/RingToVoiceBanner.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: RingToVoiceBanner
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            michal = argFoo;
            foxtra = michal.recipientUser;
            michal = _closure1_slot9;
            report = undefined;
            yankee = michal.bind(report)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            oscard = 8;
            tangon = zuuluu[oscard];
            verify = michal.bind(report)(tangon);
            option = verify.useStateFromStores;
            tangon = _closure1_slot6;
            golfie = new Array(1);
            golfie[0] = tangon;
            tangon = function() {
                michal = _closure1_slot6;
                entity = michal.getVoiceChannelId;
                entity = entity.bind(michal)();
                return entity;
            };
            tangon = option.bind(verify)(golfie, tangon);
            var _closure2_slot0 = tangon;
            oscard = zuuluu[oscard];
            option = michal.bind(report)(oscard);
            golfie = option.useStateFromStores;
            verify = _closure1_slot5;
            oscard = new Array(1);
            oscard[0] = verify;
            entity = function() {
                zuuluu = _closure1_slot5;
                michal = zuuluu.getChannel;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            backup = golfie.bind(option)(oscard, entity);
            entity = 9;
            entity = zuuluu[entity];
            zuuluu = michal.bind(report)(entity);
            michal = zuuluu.useCanRing;
            entity = 'RingToVoiceBanner';
            michal = michal.bind(zuuluu)(foxtra, entity, tangon);
            output = null;
            entity = null;
            if(!michal) { _fun00004_ip = 448; continue _fun00003 }
 156:
            michal = output != backup;
            entity = null;
            if(!michal) { _fun00004_ip = 448; continue _fun00003 }
 168:
            tangon = _closure1_slot8;
            zuuluu = _closure1_slot3;
            michal = {};
            golfie = yankee.ringToVoiceContainer;
            oscard = new Array(2);
            oscard[0] = golfie;
            golfie = yankee.topBorder;
            oscard[1] = golfie;
            michal['style'] = oscard;
            option = _closure1_slot7;
            romeon = _closure1_slot0;
            result = _closure1_slot2;
            oscard = 10;
            oscard = result[oscard];
            oscard = romeon.bind(report)(oscard);
            golfie = oscard.Text;
            oscard = {};
            verify = yankee.ringUserBannerText;
            oscard['style'] = verify;
            verify = 'text-sm/semibold';
            oscard['variant'] = verify;
            verify = 11;
            kiloes = result[verify];
            kiloes = romeon.bind(report)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.format;
            verify = result[verify];
            verify = romeon.bind(report)(verify);
            verify = verify.t;
            romeon = verify.f2tNxM;
            verify = {};
            result = output == foxtra;
            output = undefined;
            if(result) { _fun00004_ip = 316; continue _fun00003 }
 310:
            output = foxtra.globalName;
 316:
            verify['username'] = output;
            echoed = _closure1_slot7;
            result = _closure1_slot10;
            output = {};
            output['channel'] = backup;
            output = echoed.bind(report)(result, output);
            verify['channelName'] = output;
            verify = kiloes.bind(sizing)(romeon, verify);
            oscard['children'] = verify;
            golfie = option.bind(report)(golfie, oscard);
            oscard = new Array(2);
            oscard[0] = golfie;
            verify = _closure1_slot7;
            option = _closure1_slot3;
            golfie = {};
            yankee = yankee.ringToVoiceButtonContainer;
            golfie['style'] = yankee;
            romeon = _closure1_slot7;
            yankee = _closure1_slot11;
            offset = {};
            backup = backup.id;
            offset['channelId'] = backup;
            foxtra = foxtra.id;
            offset['recipientUserId'] = foxtra;
            offset = romeon.bind(report)(yankee, offset);
            golfie['children'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 448:
            return entity;
        }
    };
    zuuluu['RingToVoiceBanner'] = michal;
    return entity;
})();