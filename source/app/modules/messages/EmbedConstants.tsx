// app/modules/messages/EmbedConstants.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    oscar = argBar;
    zulu = argFred;
    golf = argPlugh;
    mike = global;
    options = mike.Object;
    report = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = golf[entity];
    entity = undefined;
    tango = oscar.bind(entity)(tango);
    report = tango.MessageEmbedTypes;
    verify = mike.Set;
    options = report.AUTO_MODERATION_MESSAGE;
    tango = new Array(7);
    tango[0] = options;
    options = report.AUTO_MODERATION_NOTIFICATION;
    tango[1] = options;
    options = report.RICH;
    tango[2] = options;
    options = report.SAFETY_POLICY_NOTICE;
    tango[3] = options;
    options = report.SAFETY_SYSTEM_NOTIFICATION;
    tango[4] = options;
    options = report.VOICE_CHANNEL;
    tango[5] = options;
    options = report.POLL_RESULT;
    tango[6] = options;
    options = verify.prototype;
    options = Object.create(options, {constructor: {value: verify}});
    foxtrot = options;
    romeo = tango;
    tango = new foxtrot[verify](romeo, yankee);
    tango = tango instanceof Object ? tango : options;
    options = mike.Set;
    verify = report.AUTO_MODERATION_MESSAGE;
    mike = new Array(8);
    mike[0] = verify;
    verify = report.AUTO_MODERATION_NOTIFICATION;
    mike[1] = verify;
    verify = report.APPLICATION_NEWS;
    mike[2] = verify;
    verify = report.POST_PREVIEW;
    mike[3] = verify;
    verify = report.SAFETY_POLICY_NOTICE;
    mike[4] = verify;
    verify = report.SAFETY_SYSTEM_NOTIFICATION;
    mike[5] = verify;
    verify = report.VOICE_CHANNEL;
    mike[6] = verify;
    report = report.POLL_RESULT;
    mike[7] = report;
    report = options.prototype;
    report = Object.create(report, {constructor: {value: options}});
    foxtrot = report;
    romeo = mike;
    mike = new foxtrot[options](romeo, yankee);
    mike = mike instanceof Object ? mike : report;
    report = 1;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/messages/EmbedConstants.tsx';
    report = oscar.bind(golf)(report);
    zulu['EMBED_TYPES_WITH_PARSEABLE_FIELDS'] = tango;
    zulu['EMBED_TYPES_WITH_SPECIAL_RENDERER'] = mike;
    return entity;
})();