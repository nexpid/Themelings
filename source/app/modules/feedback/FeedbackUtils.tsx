// app/modules/feedback/FeedbackUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: filterOptions
        tangon = argFoo;
        zuuluu = tangon.filter;
        michal = function(argFoo) {
            entity = argFoo;
            entity = entity.disabled;
            entity = !entity;
            return entity;
        };
        zuuluu = zuuluu.bind(tangon)(michal);
        michal = zuuluu.map;
        entity = function(argFoo) {
            zuuluu = argFoo;
            entity = zuuluu.disabled;
            entity = null;
            michal = Object.create(entity);
            entity = 0;
            michal['disabled'] = entity;
            oscard = {};
            report = zuuluu;
            tangon = michal;
            entity = copyDataProperties(oscard, report, tangon);
            return entity;
        };
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    var _closure1_slot13 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    golfie = tangon.ConnectionFeedbackOption;
    var _closure1_slot3 = golfie;
    golfie = tangon.AudioFeedbackOption;
    var _closure1_slot4 = golfie;
    golfie = tangon.VideoFeedbackOption;
    var _closure1_slot5 = golfie;
    golfie = tangon.VideoBackgroundFeedbackOption;
    var _closure1_slot6 = golfie;
    golfie = tangon.StreamFeedbackOption;
    var _closure1_slot7 = golfie;
    golfie = tangon.FeedbackOptionVariant;
    var _closure1_slot8 = golfie;
    golfie = tangon.FeedbackType;
    var _closure1_slot9 = golfie;
    golfie = tangon.MAX_REPRESENTABLE_DATE;
    var _closure1_slot10 = golfie;
    tangon = tangon.PeopleFeedbackOption;
    var _closure1_slot11 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot12 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/feedback/FeedbackUtils.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo, argBar) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argBar;
            var _closure2_slot0 = entity;
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 2;
            zuuluu = zuuluu[entity];
            entity = undefined;
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.shuffle;
            entity = argFoo;
            entity = zuuluu.bind(tangon)(entity);
            zuuluu = entity.findIndex;
            michal = function(argFoo) {
                entity = argFoo;
                michal = entity.value;
                entity = _closure2_slot0;
                entity = michal === entity;
                return entity;
            };
            report = zuuluu.bind(entity)(michal);
            michal = -1;
            if(!(report > michal)) { _fun00002_ip = 105; continue _fun00001 }
 76:
            zuuluu = entity[report];
            tangon = entity.splice;
            michal = 1;
            michal = tangon.bind(entity)(report, michal);
            michal = entity.push;
            michal = michal.bind(entity)(zuuluu);
 105:
            return entity;
        }
    };
    zuuluu['shuffleProblems'] = tangon;
    tangon = function(argFoo) { // Original name: processOptOut
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            offset = entity.feedbackType;
            var _closure2_slot0 = offset;
            verify = entity.location;
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 3;
            tangon = golfie[entity];
            entity = undefined;
            option = oscard.bind(entity)(tangon);
            report = option.getFeedbackPersistenceExperimentConfig;
            tangon = {};
            tangon['location'] = verify;
            tangon = report.bind(option)(tangon);
            tangon = tangon.persistToBackend;
            report = 4;
            report = golfie[report];
            report = oscard.bind(entity)(report);
            report = report.FeedbackConfig;
            report = report[offset];
            oscard = report.hotspot;
            if(tangon) { _fun00004_ip = 132; continue _fun00003 }
 99:
            report = _closure1_slot0;
            golfie = _closure1_slot2;
            tangon = 7;
            tangon = golfie[tangon];
            report = report.bind(entity)(tangon);
            tangon = report.hideHotspot;
            tangon = tangon.bind(report)(oscard);
            _fun00004_ip = 239; continue _fun00003;
 132:
            oscard = _closure1_slot1;
            report = _closure1_slot2;
            tangon = 5;
            tangon = report[tangon];
            option = oscard.bind(entity)(tangon);
            golfie = option.track;
            tangon = _closure1_slot12;
            oscard = tangon.USER_SETTINGS_IN_APP_FEEDBACK_OPTED_OUT;
            tangon = {};
            verify = _closure1_slot9;
            verify = verify[offset];
            tangon['feedback_type'] = verify;
            verify = _closure1_slot10;
            tangon['opted_out_until'] = verify;
            tangon = golfie.bind(option)(oscard, tangon);
            tangon = _closure1_slot0;
            zuuluu = 6;
            zuuluu = report[zuuluu];
            zuuluu = tangon.bind(entity)(zuuluu);
            tangon = zuuluu.InAppFeedbackStates;
            zuuluu = tangon.updateSetting;
            michal = function(argFoo) {
                tangon = argFoo;
                entity = {};
                golfie = entity;
                oscard = tangon;
                michal = copyDataProperties(golfie, oscard);
                zuuluu = _closure2_slot0;
                michal = {};
                oscard = tangon[zuuluu];
                golfie = michal;
                tangon = copyDataProperties(golfie, oscard);
                report = _closure1_slot10;
                tangon = 'optOutExpiryTime';
                michal[tangon] = report;
                entity[zuuluu] = michal;
                return entity;
            };
            michal = zuuluu.bind(tangon)(michal);
 239:
            return entity;
        }
    };
    zuuluu['processOptOut'] = tangon;
    tangon = function() { // Original name: getConnectionFeedbackOptions
        zuuluu = _closure1_slot13;
        tangon = {};
        offset = _closure1_slot8;
        michal = offset.SELF;
        tangon['variant'] = michal;
        yankee = _closure1_slot3;
        michal = yankee.COULD_NOT_CONNECT;
        tangon['value'] = michal;
        golfie = _closure1_slot0;
        verify = _closure1_slot2;
        oscard = 8;
        report = verify[oscard];
        michal = undefined;
        report = golfie.bind(michal)(report);
        foxtra = report.intl;
        romeon = foxtra.string;
        option = _closure1_slot1;
        report = 9;
        entity = verify[report];
        entity = option.bind(michal)(entity);
        entity = entity.gMHKDA;
        entity = romeon.bind(foxtra)(entity);
        tangon['label'] = entity;
        entity = new Array(6);
        entity[0] = tangon;
        tangon = {};
        romeon = yankee.HIGH_TTC;
        tangon['value'] = romeon;
        romeon = offset.SELF;
        tangon['variant'] = romeon;
        romeon = verify[oscard];
        romeon = golfie.bind(michal)(romeon);
        backup = romeon.intl;
        foxtra = backup.string;
        romeon = verify[report];
        romeon = option.bind(michal)(romeon);
        romeon = romeon.y06Ays;
        romeon = foxtra.bind(backup)(romeon);
        tangon['label'] = romeon;
        entity[1] = tangon;
        tangon = {};
        romeon = yankee.HIGH_LATENCY;
        tangon['value'] = romeon;
        romeon = offset.SELF;
        tangon['variant'] = romeon;
        romeon = verify[oscard];
        romeon = golfie.bind(michal)(romeon);
        backup = romeon.intl;
        foxtra = backup.string;
        romeon = verify[report];
        romeon = option.bind(michal)(romeon);
        romeon = romeon.y5k8Ji;
        romeon = foxtra.bind(backup)(romeon);
        tangon['label'] = romeon;
        entity[2] = tangon;
        tangon = {};
        romeon = yankee.ROBOT_VOICE;
        tangon['value'] = romeon;
        romeon = offset.SOMEONE;
        tangon['variant'] = romeon;
        romeon = verify[oscard];
        romeon = golfie.bind(michal)(romeon);
        backup = romeon.intl;
        foxtra = backup.string;
        romeon = verify[report];
        romeon = option.bind(michal)(romeon);
        romeon = romeon.f2914u;
        romeon = foxtra.bind(backup)(romeon);
        tangon['label'] = romeon;
        entity[3] = tangon;
        tangon = {};
        romeon = yankee.DESYNC;
        tangon['value'] = romeon;
        romeon = offset.UNSPECIFIED;
        tangon['variant'] = romeon;
        romeon = verify[oscard];
        romeon = golfie.bind(michal)(romeon);
        backup = romeon.intl;
        foxtra = backup.string;
        romeon = verify[report];
        romeon = option.bind(michal)(romeon);
        romeon = romeon.zk+QLy;
        romeon = foxtra.bind(backup)(romeon);
        tangon['label'] = romeon;
        entity[4] = tangon;
        tangon = {};
        yankee = yankee.CUTTING;
        tangon['value'] = yankee;
        offset = offset.SOMEONE;
        tangon['variant'] = offset;
        oscard = verify[oscard];
        oscard = golfie.bind(michal)(oscard);
        golfie = oscard.intl;
        oscard = golfie.string;
        report = verify[report];
        report = option.bind(michal)(report);
        report = report.K5vYQE;
        report = oscard.bind(golfie)(report);
        tangon['label'] = report;
        entity[5] = tangon;
        entity = zuuluu.bind(michal)(entity);
        return entity;
    };
    zuuluu['getConnectionFeedbackOptions'] = tangon;
    tangon = function(argFoo) { // Original name: getAudioFeedbackOptions
        entity = argFoo;
        report = entity.isMobile;
        zuuluu = _closure1_slot13;
        tangon = {};
        romeon = _closure1_slot4;
        michal = romeon.NO_AUDIO;
        tangon['value'] = michal;
        yankee = _closure1_slot8;
        michal = yankee.SELF;
        tangon['variant'] = michal;
        option = _closure1_slot0;
        offset = _closure1_slot2;
        golfie = 8;
        oscard = offset[golfie];
        michal = undefined;
        oscard = option.bind(michal)(oscard);
        backup = oscard.intl;
        foxtra = backup.string;
        verify = _closure1_slot1;
        oscard = 9;
        entity = offset[oscard];
        entity = verify.bind(michal)(entity);
        entity = entity.GWypHx;
        entity = foxtra.bind(backup)(entity);
        tangon['label'] = entity;
        entity = new Array(12);
        entity[0] = tangon;
        tangon = {};
        foxtra = romeon.NO_AUDIO;
        tangon['value'] = foxtra;
        foxtra = yankee.OTHERS;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.ftSvQ0;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        entity[1] = tangon;
        tangon = {};
        foxtra = romeon.LOW_QUALITY_AUDIO;
        tangon['value'] = foxtra;
        foxtra = yankee.OTHERS;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.1DnNRE;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        entity[2] = tangon;
        tangon = {};
        foxtra = romeon.ROBOT_VOICE;
        tangon['value'] = foxtra;
        foxtra = yankee.SOMEONE;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.yGe0BA;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        entity[3] = tangon;
        tangon = {};
        foxtra = romeon.ECHO;
        tangon['value'] = foxtra;
        foxtra = yankee.OTHERS;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.Q5Dsa2;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        entity[4] = tangon;
        tangon = {};
        foxtra = romeon.TOO_QUIET_OR_LOUD;
        tangon['value'] = foxtra;
        foxtra = yankee.SOMEONE;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.1o77Iy;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        entity[5] = tangon;
        tangon = {};
        foxtra = romeon.CUTTING;
        tangon['value'] = foxtra;
        foxtra = yankee.SOMEONE;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.RK9DUl;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        entity[6] = tangon;
        tangon = {};
        foxtra = romeon.DELAYED;
        tangon['value'] = foxtra;
        foxtra = yankee.UNSPECIFIED;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.RGRgmJ;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        entity[7] = tangon;
        tangon = {};
        foxtra = romeon.BACKGROUND_NOISE;
        tangon['value'] = foxtra;
        foxtra = yankee.SOMEONE;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.anHk19;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        entity[8] = tangon;
        tangon = {};
        foxtra = romeon.UNABLE_TO_FIND_DEVICE;
        tangon['value'] = foxtra;
        foxtra = yankee.SELF;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.05VSjo;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        entity[9] = tangon;
        tangon = {};
        foxtra = romeon.COMPLAINTS;
        tangon['value'] = foxtra;
        foxtra = yankee.OTHERS;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.kbbtws;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        entity[10] = tangon;
        tangon = {};
        romeon = romeon.TROUBLE_WITH_SPEAKERPHONE;
        tangon['value'] = romeon;
        yankee = yankee.SELF;
        tangon['variant'] = yankee;
        golfie = offset[golfie];
        golfie = option.bind(michal)(golfie);
        option = golfie.intl;
        golfie = option.string;
        oscard = offset[oscard];
        oscard = verify.bind(michal)(oscard);
        oscard = oscard.4qlGrK;
        oscard = golfie.bind(option)(oscard);
        tangon['label'] = oscard;
        report = !report;
        tangon['disabled'] = report;
        entity[11] = tangon;
        entity = zuuluu.bind(michal)(entity);
        return entity;
    };
    zuuluu['getAudioFeedbackOptions'] = tangon;
    tangon = function() { // Original name: getVideoFeedbackOptions
        zuuluu = _closure1_slot13;
        tangon = {};
        yankee = _closure1_slot5;
        michal = yankee.NO_VIDEO;
        tangon['value'] = michal;
        offset = _closure1_slot8;
        michal = offset.SELF;
        tangon['variant'] = michal;
        golfie = _closure1_slot0;
        verify = _closure1_slot2;
        oscard = 8;
        report = verify[oscard];
        michal = undefined;
        report = golfie.bind(michal)(report);
        foxtra = report.intl;
        romeon = foxtra.string;
        option = _closure1_slot1;
        report = 9;
        entity = verify[report];
        entity = option.bind(michal)(entity);
        entity = entity.Bh+02d;
        entity = romeon.bind(foxtra)(entity);
        tangon['label'] = entity;
        entity = new Array(6);
        entity[0] = tangon;
        tangon = {};
        romeon = yankee.NO_VIDEO;
        tangon['value'] = romeon;
        romeon = offset.SOMEONE;
        tangon['variant'] = romeon;
        romeon = verify[oscard];
        romeon = golfie.bind(michal)(romeon);
        backup = romeon.intl;
        foxtra = backup.string;
        romeon = verify[report];
        romeon = option.bind(michal)(romeon);
        romeon = romeon.R+wqwc;
        romeon = foxtra.bind(backup)(romeon);
        tangon['label'] = romeon;
        entity[1] = tangon;
        tangon = {};
        romeon = yankee.FREEZING_OR_HITCHING;
        tangon['value'] = romeon;
        romeon = offset.SOMEONE;
        tangon['variant'] = romeon;
        romeon = verify[oscard];
        romeon = golfie.bind(michal)(romeon);
        backup = romeon.intl;
        foxtra = backup.string;
        romeon = verify[report];
        romeon = option.bind(michal)(romeon);
        romeon = romeon.8I/GUF;
        romeon = foxtra.bind(backup)(romeon);
        tangon['label'] = romeon;
        entity[2] = tangon;
        tangon = {};
        romeon = yankee.BLURRY_OR_PIXELATED;
        tangon['value'] = romeon;
        romeon = offset.SOMEONE;
        tangon['variant'] = romeon;
        romeon = verify[oscard];
        romeon = golfie.bind(michal)(romeon);
        backup = romeon.intl;
        foxtra = backup.string;
        romeon = verify[report];
        romeon = option.bind(michal)(romeon);
        romeon = romeon.k7Ido6;
        romeon = foxtra.bind(backup)(romeon);
        tangon['label'] = romeon;
        entity[3] = tangon;
        tangon = {};
        romeon = yankee.UNABLE_TO_ENABLE_DEVICE;
        tangon['value'] = romeon;
        romeon = offset.SELF;
        tangon['variant'] = romeon;
        romeon = verify[oscard];
        romeon = golfie.bind(michal)(romeon);
        backup = romeon.intl;
        foxtra = backup.string;
        romeon = verify[report];
        romeon = option.bind(michal)(romeon);
        romeon = romeon.QbC6LS;
        romeon = foxtra.bind(backup)(romeon);
        tangon['label'] = romeon;
        entity[4] = tangon;
        tangon = {};
        yankee = yankee.DESYNC;
        tangon['value'] = yankee;
        offset = offset.UNSPECIFIED;
        tangon['variant'] = offset;
        oscard = verify[oscard];
        oscard = golfie.bind(michal)(oscard);
        golfie = oscard.intl;
        oscard = golfie.string;
        report = verify[report];
        report = option.bind(michal)(report);
        report = report.vRDE5O;
        report = oscard.bind(golfie)(report);
        tangon['label'] = report;
        entity[5] = tangon;
        entity = zuuluu.bind(michal)(entity);
        return entity;
    };
    zuuluu['getVideoFeedbackOptions'] = tangon;
    tangon = function() { // Original name: getVideoBackgroundFeedbackOptions
        zuuluu = _closure1_slot13;
        tangon = {};
        yankee = _closure1_slot6;
        michal = yankee.OUTLINE_FUZZY_OR_HALO;
        tangon['value'] = michal;
        offset = _closure1_slot8;
        michal = offset.SELF;
        tangon['variant'] = michal;
        golfie = _closure1_slot0;
        verify = _closure1_slot2;
        oscard = 8;
        report = verify[oscard];
        michal = undefined;
        report = golfie.bind(michal)(report);
        foxtra = report.intl;
        romeon = foxtra.string;
        option = _closure1_slot1;
        report = 9;
        entity = verify[report];
        entity = option.bind(michal)(entity);
        entity = entity.calUNj;
        entity = romeon.bind(foxtra)(entity);
        tangon['label'] = entity;
        entity = new Array(4);
        entity[0] = tangon;
        tangon = {};
        romeon = yankee.INACCURATE_BACKGROUND_DETECTION;
        tangon['value'] = romeon;
        romeon = offset.SELF;
        tangon['variant'] = romeon;
        romeon = verify[oscard];
        romeon = golfie.bind(michal)(romeon);
        backup = romeon.intl;
        foxtra = backup.string;
        romeon = verify[report];
        romeon = option.bind(michal)(romeon);
        romeon = romeon.zYumoq;
        romeon = foxtra.bind(backup)(romeon);
        tangon['label'] = romeon;
        entity[1] = tangon;
        tangon = {};
        romeon = yankee.FLICKERING_ARTIFACTS;
        tangon['value'] = romeon;
        romeon = offset.SELF;
        tangon['variant'] = romeon;
        romeon = verify[oscard];
        romeon = golfie.bind(michal)(romeon);
        backup = romeon.intl;
        foxtra = backup.string;
        romeon = verify[report];
        romeon = option.bind(michal)(romeon);
        romeon = romeon.ie5nCA;
        romeon = foxtra.bind(backup)(romeon);
        tangon['label'] = romeon;
        entity[2] = tangon;
        tangon = {};
        yankee = yankee.LAG_ON_MOVEMENT;
        tangon['value'] = yankee;
        offset = offset.SELF;
        tangon['variant'] = offset;
        oscard = verify[oscard];
        oscard = golfie.bind(michal)(oscard);
        golfie = oscard.intl;
        oscard = golfie.string;
        report = verify[report];
        report = option.bind(michal)(report);
        report = report.Gg/Y1d;
        report = oscard.bind(golfie)(report);
        tangon['label'] = report;
        entity[3] = tangon;
        entity = zuuluu.bind(michal)(entity);
        return entity;
    };
    zuuluu['getVideoBackgroundFeedbackOptions'] = tangon;
    tangon = function(argFoo) { // Original name: getStreamFeedbackOptions
        entity = argFoo;
        report = entity.isStreamer;
        zuuluu = _closure1_slot13;
        tangon = {};
        romeon = _closure1_slot7;
        michal = romeon.COULD_NOT_LOAD;
        tangon['value'] = michal;
        yankee = _closure1_slot8;
        michal = yankee.SELF;
        tangon['variant'] = michal;
        option = _closure1_slot0;
        offset = _closure1_slot2;
        golfie = 8;
        oscard = offset[golfie];
        michal = undefined;
        oscard = option.bind(michal)(oscard);
        backup = oscard.intl;
        foxtra = backup.string;
        verify = _closure1_slot1;
        oscard = 9;
        entity = offset[oscard];
        entity = verify.bind(michal)(entity);
        entity = entity.w+kiDA;
        entity = foxtra.bind(backup)(entity);
        tangon['label'] = entity;
        entity = !report;
        tangon['disabled'] = entity;
        entity = new Array(18);
        entity[0] = tangon;
        tangon = {};
        foxtra = romeon.BLACK_SCREEN;
        tangon['value'] = foxtra;
        foxtra = yankee.SELF;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.RRZZZW;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        foxtra = !report;
        tangon['disabled'] = foxtra;
        entity[1] = tangon;
        tangon = {};
        foxtra = romeon.FREEZING_OR_HITCHING;
        tangon['value'] = foxtra;
        foxtra = yankee.SELF;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.3PKSkZ;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        foxtra = !report;
        tangon['disabled'] = foxtra;
        entity[2] = tangon;
        tangon = {};
        foxtra = romeon.LAG;
        tangon['value'] = foxtra;
        foxtra = yankee.SELF;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.iMxexM;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        foxtra = !report;
        tangon['disabled'] = foxtra;
        entity[3] = tangon;
        tangon = {};
        foxtra = romeon.BLURRY_OR_PIXELATED;
        tangon['value'] = foxtra;
        foxtra = yankee.SELF;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.8ceyQ0;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        foxtra = !report;
        tangon['disabled'] = foxtra;
        entity[4] = tangon;
        tangon = {};
        foxtra = romeon.NO_AUDIO;
        tangon['value'] = foxtra;
        foxtra = yankee.SELF;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.HaZSCw;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        foxtra = !report;
        tangon['disabled'] = foxtra;
        entity[5] = tangon;
        tangon = {};
        foxtra = romeon.BAD_AUDIO;
        tangon['value'] = foxtra;
        foxtra = yankee.SELF;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.zIC+8f;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        foxtra = !report;
        tangon['disabled'] = foxtra;
        entity[6] = tangon;
        tangon = {};
        foxtra = romeon.STOPPED_UNEXPECTEDLY;
        tangon['value'] = foxtra;
        foxtra = yankee.SELF;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra./nlKuL;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        foxtra = !report;
        tangon['disabled'] = foxtra;
        entity[7] = tangon;
        tangon = {};
        foxtra = romeon.DESYNC;
        tangon['value'] = foxtra;
        foxtra = yankee.SELF;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.JS6akJ;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        foxtra = !report;
        tangon['disabled'] = foxtra;
        entity[8] = tangon;
        tangon = {};
        foxtra = romeon.COULD_NOT_LOAD;
        tangon['value'] = foxtra;
        foxtra = yankee.SOMEONE;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.jU9Zs7;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        tangon['disabled'] = report;
        entity[9] = tangon;
        tangon = {};
        foxtra = romeon.BLACK_SCREEN;
        tangon['value'] = foxtra;
        foxtra = yankee.SOMEONE;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.aml28/;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        tangon['disabled'] = report;
        entity[10] = tangon;
        tangon = {};
        foxtra = romeon.FREEZING_OR_HITCHING;
        tangon['value'] = foxtra;
        foxtra = yankee.SOMEONE;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.V3EeCA;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        tangon['disabled'] = report;
        entity[11] = tangon;
        tangon = {};
        foxtra = romeon.LAG;
        tangon['value'] = foxtra;
        foxtra = yankee.SOMEONE;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.hi1Y39;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        tangon['disabled'] = report;
        entity[12] = tangon;
        tangon = {};
        foxtra = romeon.BLURRY_OR_PIXELATED;
        tangon['value'] = foxtra;
        foxtra = yankee.SOMEONE;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.qdBn3N;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        tangon['disabled'] = report;
        entity[13] = tangon;
        tangon = {};
        foxtra = romeon.NO_AUDIO;
        tangon['value'] = foxtra;
        foxtra = yankee.SOMEONE;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.DOOloq;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        tangon['disabled'] = report;
        entity[14] = tangon;
        tangon = {};
        foxtra = romeon.BAD_AUDIO;
        tangon['value'] = foxtra;
        foxtra = yankee.SOMEONE;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.k7bdGB;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        tangon['disabled'] = report;
        entity[15] = tangon;
        tangon = {};
        foxtra = romeon.STOPPED_UNEXPECTEDLY;
        tangon['value'] = foxtra;
        foxtra = yankee.SOMEONE;
        tangon['variant'] = foxtra;
        foxtra = offset[golfie];
        foxtra = option.bind(michal)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = offset[oscard];
        foxtra = verify.bind(michal)(foxtra);
        foxtra = foxtra.jPD99/;
        foxtra = backup.bind(kiloes)(foxtra);
        tangon['label'] = foxtra;
        tangon['disabled'] = report;
        entity[16] = tangon;
        tangon = {};
        romeon = romeon.DESYNC;
        tangon['value'] = romeon;
        yankee = yankee.SOMEONE;
        tangon['variant'] = yankee;
        golfie = offset[golfie];
        golfie = option.bind(michal)(golfie);
        option = golfie.intl;
        golfie = option.string;
        oscard = offset[oscard];
        oscard = verify.bind(michal)(oscard);
        oscard = oscard.JfAvQk;
        oscard = golfie.bind(option)(oscard);
        tangon['label'] = oscard;
        tangon['disabled'] = report;
        entity[17] = tangon;
        entity = zuuluu.bind(michal)(entity);
        return entity;
    };
    zuuluu['getStreamFeedbackOptions'] = tangon;
    michal = function() { // Original name: getPeopleFeedbackOptions
        zuuluu = _closure1_slot13;
        tangon = {};
        michal = _closure1_slot11;
        michal = michal.TOXIC_OR_INAPPROPRIATE;
        tangon['value'] = michal;
        michal = _closure1_slot8;
        michal = michal.OTHERS;
        tangon['variant'] = michal;
        oscard = _closure1_slot0;
        option = _closure1_slot2;
        michal = 8;
        report = option[michal];
        michal = undefined;
        report = oscard.bind(michal)(report);
        oscard = report.intl;
        report = oscard.string;
        golfie = _closure1_slot1;
        entity = 9;
        entity = option[entity];
        entity = golfie.bind(michal)(entity);
        entity = entity.PLBRzM;
        entity = report.bind(oscard)(entity);
        tangon['label'] = entity;
        entity = new Array(1);
        entity[0] = tangon;
        entity = zuuluu.bind(michal)(entity);
        return entity;
    };
    zuuluu['getPeopleFeedbackOptions'] = michal;
    return entity;
})();