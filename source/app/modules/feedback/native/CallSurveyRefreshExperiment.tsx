// app/modules/feedback/native/CallSurveyRefreshExperiment.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var14 = true;
    var4['value'] = var14;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var15 = {'showFormStyleSurvey': false, 'hideNeutralOption': false, 'showVibesHoneypot': false};
    var1 = 0;
    var4 = var6[var1];
    var1 = undefined;
    var9 = var5.bind(var1)(var4);
    var8 = var9.createExperiment;
    var7 = {'kind': 'user', 'id': '2025-02_call_survey_refresh_native', 'label': 'Call Survey Refresh (Native)'};
    var7['defaultConfig'] = var15;
    var4 = {'id': 1, 'label': 'Show form-style survey without neutral'};
    var10 = {};
    var19 = var10;
    var18 = var15;
    var11 = copyDataProperties(var19, var18);
    var11 = 'showFormStyleSurvey';
    var10[var11] = var14;
    var13 = 'hideNeutralOption';
    var10[var13] = var14;
    var4['config'] = var10;
    var10 = new Array(3);
    var10[0] = var4;
    var11 = {'id': 2, 'label': 'Show survey without neutral'};
    var4 = 2;
    var12 = {};
    var19 = var12;
    var18 = var15;
    var16 = copyDataProperties(var19, var18);
    var12[var13] = var14;
    var11['config'] = var12;
    var10[1] = var11;
    var11 = {'id': 3, 'label': 'Show survey without neutral, and with vibes honeypot'};
    var12 = {};
    var19 = var12;
    var18 = var15;
    var15 = copyDataProperties(var19, var18);
    var12[var13] = var14;
    var13 = 'showVibesHoneypot';
    var12[var13] = var14;
    var11['config'] = var12;
    var10[2] = var11;
    var7['treatments'] = var10;
    var7 = var8.bind(var9)(var7);
    var _closure1_slot2 = var7;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/feedback/native/CallSurveyRefreshExperiment.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function useCallSurveyRefreshExperiment(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
            var2 = arg1;
            var1 = var2.location;
            var5 = var2.autoTrackExposure;
            var6 = undefined;
            if(!(var5 === var6)) { _fun0001_ip = 22; continue _fun0001 }
 20:
            var5 = true;
 22:
            var4 = _closure1_slot0;
            var7 = _closure1_slot1;
            var3 = 1;
            var3 = var7[var3];
            var3 = var4.bind(var6)(var3);
            var7 = var3.AVHoldoutExperimentH12025;
            var6 = var7.useExperiment;
            var4 = {};
            var4['location'] = var1;
            var3 = {};
            var3['autoTrackExposure'] = var5;
            var3 = var6.bind(var7)(var4, var3);
            var6 = var3.isInHoldout;
            var4 = _closure1_slot2;
            var3 = var4.useExperiment;
            var2 = {};
            var2['location'] = var1;
            var1 = {};
            var1['disable'] = var6;
            var1['autoTrackExposure'] = var5;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        }
    };
    var3['useCallSurveyRefreshExperiment'] = var2;
    return var1;
})();