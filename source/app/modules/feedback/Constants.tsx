// app/modules/feedback/Constants.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    zuuluu = argFre;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    oscard = {};
    entity = 'bad';
    oscard['BAD'] = entity;
    entity = 'neutral';
    oscard['NEUTRAL'] = entity;
    entity = 'good';
    oscard['GOOD'] = entity;
    report = {};
    entity = 'VOICE';
    report['VOICE'] = entity;
    entity = 'STREAM';
    report['STREAM'] = entity;
    entity = 'VOICE_BACKGROUND';
    report['VIDEO_BACKGROUND'] = entity;
    entity = 'ACTIVITY';
    report['ACTIVITY'] = entity;
    entity = 'IN_APP_REPORTS';
    report['IN_APP_REPORTS'] = entity;
    entity = 'USER_DM_MUTE';
    report['USER_DM_MUTE'] = entity;
    entity = 'BLOCK_USER';
    report['BLOCK_USER'] = entity;
    entity = 'VOICE_FILTER';
    report['VOICE_FILTER'] = entity;
    entity = report.VIDEO_BACKGROUND;
    golfie = new Array(8);
    golfie[0] = entity;
    entity = report.STREAM;
    golfie[1] = entity;
    entity = report.ACTIVITY;
    golfie[2] = entity;
    entity = report.VOICE_FILTER;
    golfie[3] = entity;
    entity = report.VOICE;
    golfie[4] = entity;
    entity = report.IN_APP_REPORTS;
    golfie[5] = entity;
    entity = report.USER_DM_MUTE;
    golfie[6] = entity;
    entity = report.BLOCK_USER;
    golfie[7] = entity;
    tangon = golfie.reduce;
    michal = function(argFoo, argBar, argBaz) {
        entity = {};
        tangon = argFoo;
        report = entity;
        michal = copyDataProperties(report, tangon);
        zuuluu = argBaz;
        michal = argBar;
        entity[michal] = zuuluu;
        return entity;
    };
    entity = {};
    tangon = tangon.bind(golfie)(michal, entity);
    entity = oscard.BAD;
    michal = new Array(3);
    michal[0] = entity;
    entity = oscard.NEUTRAL;
    michal[1] = entity;
    entity = oscard.GOOD;
    michal[2] = entity;
    golfie = argPlu;
    entity = 0;
    option = golfie[entity];
    golfie = argBar;
    entity = undefined;
    verify = golfie.bind(entity)(option);
    option = verify.fileFinishedImporting;
    golfie = 'modules/feedback/Constants.tsx';
    golfie = option.bind(verify)(golfie);
    zuuluu['FeedbackRating'] = oscard;
    oscard = 1024;
    zuuluu['FEEDBACK_FREEFORM_LENGTH'] = oscard;
    zuuluu['FeedbackType'] = report;
    zuuluu['FeedbackTypePrecedence'] = tangon;
    zuuluu['DEFAULT_RATINGS'] = michal;
    return entity;
})();