// app/modules/feedback/Constants.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    zulu = argFred;
    entity = global;
    report = entity.Object;
    tango = report.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(report)(zulu, entity, mike);
    report = {};
    entity = 'bad';
    report['BAD'] = entity;
    entity = 'neutral';
    report['NEUTRAL'] = entity;
    entity = 'good';
    report['GOOD'] = entity;
    tango = {};
    entity = 'VOICE';
    tango['VOICE'] = entity;
    entity = 'STREAM';
    tango['STREAM'] = entity;
    entity = 'VOICE_BACKGROUND';
    tango['VIDEO_BACKGROUND'] = entity;
    entity = 'ACTIVITY';
    tango['ACTIVITY'] = entity;
    entity = 'IN_APP_REPORTS';
    tango['IN_APP_REPORTS'] = entity;
    entity = 'USER_DM_MUTE';
    tango['USER_DM_MUTE'] = entity;
    entity = 'BLOCK_USER';
    tango['BLOCK_USER'] = entity;
    entity = tango.VIDEO_BACKGROUND;
    golf = new Array(7);
    golf[0] = entity;
    entity = tango.STREAM;
    golf[1] = entity;
    entity = tango.ACTIVITY;
    golf[2] = entity;
    entity = tango.VOICE;
    golf[3] = entity;
    entity = tango.IN_APP_REPORTS;
    golf[4] = entity;
    entity = tango.USER_DM_MUTE;
    golf[5] = entity;
    entity = tango.BLOCK_USER;
    golf[6] = entity;
    oscar = golf.reduce;
    mike = function(argFoo, argBar, argBaz) {
        entity = {};
        tango = argFoo;
        report = entity;
        mike = copyDataProperties(report, tango);
        zulu = argBaz;
        mike = argBar;
        entity[mike] = zulu;
        return entity;
    };
    entity = {};
    mike = oscar.bind(golf)(mike, entity);
    oscar = argPlugh;
    entity = 0;
    golf = oscar[entity];
    oscar = argBar;
    entity = undefined;
    options = oscar.bind(entity)(golf);
    golf = options.fileFinishedImporting;
    oscar = 'modules/feedback/Constants.tsx';
    oscar = golf.bind(options)(oscar);
    zulu['FeedbackRating'] = report;
    report = 1024;
    zulu['FEEDBACK_FREEFORM_LENGTH'] = report;
    zulu['FeedbackType'] = tango;
    zulu['FeedbackTypePrecedence'] = mike;
    return entity;
})();