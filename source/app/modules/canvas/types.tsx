// app/modules/canvas/types.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    zuuluu = argFre;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    oscard = {};
    golfie = 0;
    oscard['None'] = golfie;
    entity = 'None';
    oscard[golfie] = entity;
    verify = 1;
    oscard['Truncate'] = verify;
    entity = 'Truncate';
    oscard[verify] = entity;
    option = 2;
    oscard['Wrap'] = option;
    entity = 'Wrap';
    oscard[option] = entity;
    report = {};
    report['Stretch'] = golfie;
    entity = 'Stretch';
    report[golfie] = entity;
    report['Contain'] = verify;
    entity = 'Contain';
    report[verify] = entity;
    report['Cover'] = option;
    entity = 'Cover';
    report[option] = entity;
    tangon = {};
    tangon['Base64'] = golfie;
    entity = 'Base64';
    tangon[golfie] = entity;
    tangon['Blob'] = verify;
    entity = 'Blob';
    tangon[verify] = entity;
    tangon['File'] = option;
    entity = 'File';
    tangon[option] = entity;
    michal = 3;
    tangon['CloudUpload'] = michal;
    entity = 'CloudUpload';
    tangon[michal] = entity;
    michal = {};
    michal['Success'] = golfie;
    entity = 'Success';
    michal[golfie] = entity;
    michal['Failure'] = verify;
    entity = 'Failure';
    michal[verify] = entity;
    michal['ImageNotLoaded'] = option;
    entity = 'ImageNotLoaded';
    michal[option] = entity;
    entity = argPlu;
    option = entity[golfie];
    golfie = argBar;
    entity = undefined;
    verify = golfie.bind(entity)(option);
    option = verify.fileFinishedImporting;
    golfie = 'modules/canvas/types.tsx';
    golfie = option.bind(verify)(golfie);
    zuuluu['TextTruncationMethod'] = oscard;
    zuuluu['FillMode'] = report;
    zuuluu['DiscordCanvasExporterOutputFormats'] = tangon;
    zuuluu['DrawResultStatus'] = michal;
    return entity;
})();