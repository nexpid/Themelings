// app/modules/canvas/types.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    zulu = argFred;
    entity = global;
    report = entity.Object;
    tango = report.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(report)(zulu, entity, mike);
    oscar = {};
    golf = 0;
    oscar['None'] = golf;
    entity = 'None';
    oscar[golf] = entity;
    verify = 1;
    oscar['Truncate'] = verify;
    entity = 'Truncate';
    oscar[verify] = entity;
    options = 2;
    oscar['Wrap'] = options;
    entity = 'Wrap';
    oscar[options] = entity;
    report = {};
    report['Stretch'] = golf;
    entity = 'Stretch';
    report[golf] = entity;
    report['Contain'] = verify;
    entity = 'Contain';
    report[verify] = entity;
    report['Cover'] = options;
    entity = 'Cover';
    report[options] = entity;
    tango = {};
    tango['Base64'] = golf;
    entity = 'Base64';
    tango[golf] = entity;
    tango['Blob'] = verify;
    entity = 'Blob';
    tango[verify] = entity;
    tango['File'] = options;
    entity = 'File';
    tango[options] = entity;
    mike = 3;
    tango['CloudUpload'] = mike;
    entity = 'CloudUpload';
    tango[mike] = entity;
    mike = {};
    mike['Success'] = golf;
    entity = 'Success';
    mike[golf] = entity;
    mike['Failure'] = verify;
    entity = 'Failure';
    mike[verify] = entity;
    mike['ImageNotLoaded'] = options;
    entity = 'ImageNotLoaded';
    mike[options] = entity;
    entity = argPlugh;
    options = entity[golf];
    golf = argBar;
    entity = undefined;
    verify = golf.bind(entity)(options);
    options = verify.fileFinishedImporting;
    golf = 'modules/canvas/types.tsx';
    golf = options.bind(verify)(golf);
    zulu['TextTruncationMethod'] = oscar;
    zulu['FillMode'] = report;
    zulu['DiscordCanvasExporterOutputFormats'] = tango;
    zulu['DrawResultStatus'] = mike;
    return entity;
})();