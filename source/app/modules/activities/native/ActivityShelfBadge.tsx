// app/modules/activities/native/ActivityShelfBadge.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot2 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    romeo = tango.Fonts;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot3 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'position': 'absolute', 'top': 4, 'left': 4, 'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    offset = 5;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.STATUS_POSITIVE_BACKGROUND;
    verify['backgroundColor'] = foxtrot;
    tango['badge'] = verify;
    foxtrot = {'paddingLeft': 4, 'paddingRight': 6, 'borderRadius': null, 'height': 16};
    verify = 6;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    foxtrot['borderRadius'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.STATUS_DANGER_BACKGROUND;
    foxtrot['backgroundColor'] = backup;
    tango['newBadge'] = foxtrot;
    foxtrot = {'paddingLeft': 4, 'paddingRight': 6, 'borderRadius': null, 'height': 16};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    foxtrot['borderRadius'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.TEXT_LINK_LOW_SATURATION;
    foxtrot['backgroundColor'] = backup;
    tango['updatedBadge'] = foxtrot;
    foxtrot = oscar[verify];
    backup = report.bind(entity)(foxtrot);
    foxtrot = backup.generateBoxShadowStyle;
    verify = oscar[verify];
    verify = report.bind(entity)(verify);
    verify = verify.FOUR_DP_ELEVATION_SHADOW_PARAMS;
    verify = foxtrot.bind(backup)(verify);
    tango['elevationShadow'] = verify;
    verify = {'textTransform': 'uppercase', 'marginLeft': 2, 'fontFamily': null, 'color': null, 'lineHeight': 16, 'fontSize': 12};
    romeo = romeo.DISPLAY_EXTRABOLD;
    verify['fontFamily'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INTERACTIVE_ACTIVE;
    verify['color'] = offset;
    tango['badgeText'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot4 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/activities/native/ActivityShelfBadge.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ActivityShelfBadge
        _fun122157: for(var _fun122157_ip = 0; ; ) switch(_fun122157_ip) {
 0:
            entity = argFoo;
            zulu = entity.labelType;
            entity = _closure1_slot4;
            report = undefined;
            options = entity.bind(report)();
            mike = _closure1_slot0;
            entity = _closure1_slot1;
            tango = 7;
            entity = entity[tango];
            entity = mike.bind(report)(entity);
            entity = entity.EmbeddedActivityLabelTypes;
            entity = entity.NEW;
            if(!(zulu !== entity)) { _fun122157_ip = 266; continue _fun122157 }
 61:
            mike = _closure1_slot0;
            entity = _closure1_slot1;
            entity = entity[tango];
            entity = mike.bind(report)(entity);
            entity = entity.EmbeddedActivityLabelTypes;
            mike = entity.UPDATED;
            entity = null;
            if(!(zulu === mike)) { _fun122157_ip = 261; continue _fun122157 }
 99:
            tango = _closure1_slot3;
            zulu = _closure1_slot2;
            mike = {};
            verify = options.badge;
            golf = new Array(3);
            golf[0] = verify;
            verify = options.updatedBadge;
            golf[1] = verify;
            verify = options.elevationShadow;
            golf[2] = verify;
            mike['style'] = golf;
            foxtrot = _closure1_slot0;
            backup = _closure1_slot1;
            golf = 8;
            golf = backup[golf];
            golf = foxtrot.bind(report)(golf);
            verify = golf.Text;
            golf = {};
            offset = 'text-xs/semibold';
            golf['variant'] = offset;
            offset = options.badgeText;
            golf['style'] = offset;
            offset = 9;
            yankee = backup[offset];
            yankee = foxtrot.bind(report)(yankee);
            romeo = yankee.intl;
            yankee = romeo.string;
            offset = backup[offset];
            offset = foxtrot.bind(report)(offset);
            offset = offset.t;
            offset = offset./qdhkp;
            offset = yankee.bind(romeo)(offset);
            golf['children'] = offset;
            golf = tango.bind(report)(verify, golf);
            mike['children'] = golf;
            entity = tango.bind(report)(zulu, mike);
 261:
            _fun122157_ip = 428; continue _fun122157;
 266:
            tango = _closure1_slot3;
            zulu = _closure1_slot2;
            mike = {};
            verify = options.badge;
            golf = new Array(3);
            golf[0] = verify;
            verify = options.newBadge;
            golf[1] = verify;
            verify = options.elevationShadow;
            golf[2] = verify;
            mike['style'] = golf;
            yankee = _closure1_slot0;
            romeo = _closure1_slot1;
            oscar = 8;
            oscar = romeo[oscar];
            oscar = yankee.bind(report)(oscar);
            golf = oscar.Text;
            oscar = {};
            verify = 'text-xs/semibold';
            oscar['variant'] = verify;
            options = options.badgeText;
            oscar['style'] = options;
            options = 9;
            verify = romeo[options];
            verify = yankee.bind(report)(verify);
            offset = verify.intl;
            verify = offset.string;
            options = romeo[options];
            options = yankee.bind(report)(options);
            options = options.t;
            options = options.y2b7CA;
            options = verify.bind(offset)(options);
            oscar['children'] = options;
            oscar = tango.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 428:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();