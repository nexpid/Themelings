// app/modules/activities/native/ActivityShelfBadge.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    romeon = tangon.Fonts;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot3 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'position': 'absolute', 'top': 4, 'left': 4, 'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    offset = 5;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.STATUS_POSITIVE_BACKGROUND;
    verify['backgroundColor'] = foxtra;
    tangon['badge'] = verify;
    foxtra = {'paddingLeft': 4, 'paddingRight': 6, 'borderRadius': null, 'height': 16};
    verify = 6;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    foxtra['borderRadius'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.STATUS_DANGER_BACKGROUND;
    foxtra['backgroundColor'] = backup;
    tangon['newBadge'] = foxtra;
    foxtra = {'paddingLeft': 4, 'paddingRight': 6, 'borderRadius': null, 'height': 16};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    foxtra['borderRadius'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.TEXT_LINK_LOW_SATURATION;
    foxtra['backgroundColor'] = backup;
    tangon['updatedBadge'] = foxtra;
    foxtra = oscard[verify];
    backup = report.bind(entity)(foxtra);
    foxtra = backup.generateBoxShadowStyle;
    verify = oscard[verify];
    verify = report.bind(entity)(verify);
    verify = verify.FOUR_DP_ELEVATION_SHADOW_PARAMS;
    verify = foxtra.bind(backup)(verify);
    tangon['elevationShadow'] = verify;
    verify = {'textTransform': 'uppercase', 'marginLeft': 2, 'fontFamily': null, 'color': null, 'lineHeight': 16, 'fontSize': 12};
    romeon = romeon.DISPLAY_EXTRABOLD;
    verify['fontFamily'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INTERACTIVE_ACTIVE;
    verify['color'] = offset;
    tangon['badgeText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/activities/native/ActivityShelfBadge.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ActivityShelfBadge
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.labelType;
            entity = _closure1_slot4;
            report = undefined;
            option = entity.bind(report)();
            michal = _closure1_slot0;
            entity = _closure1_slot1;
            tangon = 7;
            entity = entity[tangon];
            entity = michal.bind(report)(entity);
            entity = entity.EmbeddedActivityLabelTypes;
            entity = entity.NEW;
            if(!(zuuluu !== entity)) { _fun00002_ip = 268; continue _fun00001 }
 61:
            michal = _closure1_slot0;
            entity = _closure1_slot1;
            entity = entity[tangon];
            entity = michal.bind(report)(entity);
            entity = entity.EmbeddedActivityLabelTypes;
            michal = entity.UPDATED;
            entity = null;
            if(!(zuuluu === michal)) { _fun00002_ip = 263; continue _fun00001 }
 99:
            tangon = _closure1_slot3;
            zuuluu = _closure1_slot2;
            michal = {};
            verify = option.badge;
            golfie = new Array(3);
            golfie[0] = verify;
            verify = option.updatedBadge;
            golfie[1] = verify;
            verify = option.elevationShadow;
            golfie[2] = verify;
            michal['style'] = golfie;
            foxtra = _closure1_slot0;
            backup = _closure1_slot1;
            golfie = 8;
            golfie = backup[golfie];
            golfie = foxtra.bind(report)(golfie);
            verify = golfie.Text;
            golfie = {};
            offset = 'text-xs/semibold';
            golfie['variant'] = offset;
            offset = option.badgeText;
            golfie['style'] = offset;
            offset = 9;
            yankee = backup[offset];
            yankee = foxtra.bind(report)(yankee);
            romeon = yankee.intl;
            yankee = romeon.string;
            offset = backup[offset];
            offset = foxtra.bind(report)(offset);
            offset = offset.t;
            offset = offset./qdhkp;
            offset = yankee.bind(romeon)(offset);
            golfie['children'] = offset;
            golfie = tangon.bind(report)(verify, golfie);
            michal['children'] = golfie;
            entity = tangon.bind(report)(zuuluu, michal);
 263:
            _fun00002_ip = 430; continue _fun00001;
 268:
            tangon = _closure1_slot3;
            zuuluu = _closure1_slot2;
            michal = {};
            verify = option.badge;
            golfie = new Array(3);
            golfie[0] = verify;
            verify = option.newBadge;
            golfie[1] = verify;
            verify = option.elevationShadow;
            golfie[2] = verify;
            michal['style'] = golfie;
            yankee = _closure1_slot0;
            romeon = _closure1_slot1;
            oscard = 8;
            oscard = romeon[oscard];
            oscard = yankee.bind(report)(oscard);
            golfie = oscard.Text;
            oscard = {};
            verify = 'text-xs/semibold';
            oscard['variant'] = verify;
            option = option.badgeText;
            oscard['style'] = option;
            option = 9;
            verify = romeon[option];
            verify = yankee.bind(report)(verify);
            offset = verify.intl;
            verify = offset.string;
            option = romeon[option];
            option = yankee.bind(report)(option);
            option = option.t;
            option = option.y2b7CA;
            option = verify.bind(offset)(option);
            oscard['children'] = option;
            oscard = tangon.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 430:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();