// app/modules/activities/native/WebViewContext.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var6 = require;
    var3 = exports;
    var7 = dependencyMap;
    var1 = global;
    var8 = var1.Object;
    var5 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var5.bind(var8)(var3, var1, var4);
    var8 = 0;
    var5 = var7[var8];
    var4 = metroImportDefault;
    var1 = undefined;
    var4 = var4.bind(var1)(var5);
    var _closure1_slot0 = var4;
    var4 = 1;
    var5 = var7[var4];
    var4 = metroImportAll;
    var5 = var4.bind(var1)(var5);
    var _closure1_slot1 = var5;
    var4 = 2;
    var4 = var7[var4];
    var4 = var6.bind(var1)(var4);
    var9 = var4.View;
    var _closure1_slot2 = var9;
    var9 = var4.StyleSheet;
    var4 = 3;
    var4 = var7[var4];
    var4 = var6.bind(var1)(var4);
    var10 = var4.jsx;
    var _closure1_slot3 = var10;
    var4 = var4.jsxs;
    var _closure1_slot4 = var4;
    var4 = var5.createContext;
    var4 = var4.bind(var5)(var8);
    var _closure1_slot5 = var4;
    var8 = var9.create;
    var5 = {};
    var10 = {'width': 2, 'height': 2, 'position': 'absolute', 'opacity': 0};
    var5['placeholderWebView'] = var10;
    var5 = var8.bind(var9)(var5);
    var _closure1_slot6 = var5;
    var5 = 4;
    var5 = var7[var5];
    var7 = var6.bind(var1)(var5);
    var6 = var7.fileFinishedImporting;
    var5 = 'modules/activities/native/WebViewContext.tsx';
    var5 = var6.bind(var7)(var5);
    var3['WebViewContext'] = var4;
    var2 = function WebViewContextProvider(arg1) {
        var2 = arg1;
        var6 = var2.children;
        var7 = _closure1_slot1;
        var3 = var7.useState;
        var2 = 0;
        var8 = var3.bind(var7)(var2);
        var5 = _closure1_slot0;
        var4 = undefined;
        var3 = 2;
        var3 = var5.bind(var4)(var8, var3);
        var5 = var3[var2];
        var2 = 1;
        var8 = var3[var2];
        var _closure2_slot0 = var8;
        var3 = var7.useCallback;
        var2 = new Array(1);
        var2[0] = var8;
        var1 = function(arg1) {
            _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
                var1 = arg1;
                if(!var1) { _fun0001_ip = 26; continue _fun0001 }
 6:
                var3 = _closure2_slot0;
                var2 = var1._nativeTag;
                var1 = undefined;
                var1 = var3.bind(var1)(var2);
 26:
                var1 = undefined;
                return var1;
            }
        };
        var9 = var3.bind(var7)(var1, var2);
        var3 = _closure1_slot4;
        var1 = _closure1_slot5;
        var2 = var1.Provider;
        var1 = {};
        var1['value'] = var5;
        var8 = _closure1_slot3;
        var7 = _closure1_slot2;
        var5 = {};
        var10 = _closure1_slot6;
        var10 = var10.placeholderWebView;
        var5['style'] = var10;
        var5['ref'] = var9;
        var9 = 'none';
        var5['pointerEvents'] = var9;
        var7 = var8.bind(var4)(var7, var5);
        var5 = new Array(2);
        var5[0] = var7;
        var5[1] = var6;
        var1['children'] = var5;
        var1 = var3.bind(var4)(var2, var1);
        return var1;
    };
    var3['WebViewContextProvider'] = var2;
    return var1;
})();