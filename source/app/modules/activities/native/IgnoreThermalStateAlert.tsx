// app/modules/activities/native/IgnoreThermalStateAlert.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot3 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    offset = 'center';
    verify = {'marginTop': 16, 'lineHeight': 20, 'textAlign': 'center'};
    tango['text'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tango['header'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/activities/native/IgnoreThermalStateAlert.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: IgnoreThermalStateAlert
        zulu = argFoo;
        entity = zulu.onConfirm;
        var _closure2_slot0 = entity;
        entity = null;
        mike = Object.create(entity);
        entity = 0;
        mike['onConfirm'] = entity;
        result = {};
        output = zulu;
        sizing = mike;
        output = copyDataProperties(result, output, sizing);
        entity = _closure1_slot5;
        tango = undefined;
        offset = entity.bind(tango)();
        zulu = _closure1_slot4;
        mike = _closure1_slot1;
        foxtrot = _closure1_slot2;
        entity = 3;
        entity = foxtrot[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        result = entity;
        golf = copyDataProperties(result, output);
        romeo = _closure1_slot0;
        verify = 4;
        golf = foxtrot[verify];
        golf = romeo.bind(tango)(golf);
        yankee = golf.intl;
        options = yankee.string;
        golf = foxtrot[verify];
        golf = romeo.bind(tango)(golf);
        golf = golf.t;
        golf = golf.1fRDnZ;
        options = options.bind(yankee)(golf);
        golf = 'cancelText';
        entity[golf] = options;
        golf = function() { // Original name: onCancel
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zulu = _closure2_slot0;
                mike = null;
                if(!(mike != zulu)) { _fun00002_ip = 23; continue _fun00001 }
 13:
                mike = _closure2_slot0;
                entity = undefined;
                entity = mike.bind(entity)();
 23:
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 5;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.disregardSeriousThermalState;
                mike = mike.bind(zulu)();
                return entity;
            }
        };
        oscar = 'onCancel';
        entity[oscar] = golf;
        oscar = foxtrot[verify];
        oscar = romeo.bind(tango)(oscar);
        options = oscar.intl;
        golf = options.string;
        oscar = foxtrot[verify];
        oscar = romeo.bind(tango)(oscar);
        oscar = oscar.t;
        oscar = oscar.oEAioK;
        golf = golf.bind(options)(oscar);
        oscar = 'confirmText';
        entity[oscar] = golf;
        options = _closure1_slot3;
        report = 6;
        oscar = foxtrot[report];
        oscar = romeo.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'style': null, 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        yankee = offset.header;
        oscar['style'] = yankee;
        yankee = foxtrot[verify];
        yankee = romeo.bind(tango)(yankee);
        kilo = yankee.intl;
        backup = kilo.string;
        yankee = foxtrot[verify];
        yankee = romeo.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.v5X4fX;
        yankee = backup.bind(kilo)(yankee);
        oscar['children'] = yankee;
        golf = options.bind(tango)(golf, oscar);
        oscar = new Array(2);
        oscar[0] = golf;
        report = foxtrot[report];
        report = romeo.bind(tango)(report);
        golf = report.Text;
        report = {};
        offset = offset.text;
        report['style'] = offset;
        offset = 'text-md/medium';
        report['variant'] = offset;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        verify = verify.t;
        verify = verify.VOgTj4;
        verify = offset.bind(yankee)(verify);
        report['children'] = verify;
        report = options.bind(tango)(golf, report);
        oscar[1] = report;
        report = 'children';
        entity[report] = oscar;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['IgnoreThermalStateAlert'] = mike;
    return entity;
})();