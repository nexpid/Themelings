// app/modules/activities/native/VoiceControlsToggleNuxActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ContentDismissActionType;
    var _closure1_slot7 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = {};
    golfie = 'https://cdn.discordapp.com/assets/activities/platform/activities_pipfab_tutorial_redesign.mp4';
    tangon['videoURI'] = golfie;
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 7;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    offset = 'hidden';
    verify['overflow'] = offset;
    tangon['videoContainer'] = verify;
    verify = {'flex': 1, 'alignItems': 'center', 'paddingTop': 24, 'paddingBottom': 16};
    tangon['contentContainer'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center', 'paddingHorizontal': 16};
    tangon['container'] = verify;
    verify = {'marginTop': 16, 'textAlign': 'center'};
    tangon['title'] = verify;
    verify = {'marginTop': 8, 'marginBottom': 24, 'textAlign': 'center'};
    tangon['body'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/activities/native/VoiceControlsToggleNuxActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: VoiceControlsToggleActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.markAsDismissed;
            var _closure2_slot0 = entity;
            entity = _closure1_slot11;
            tangon = undefined;
            sizing = entity.bind(tangon)();
            zuuluu = _closure1_slot4;
            michal = zuuluu.useState;
            entity = 0;
            report = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot3;
            michal = 2;
            michal = zuuluu.bind(tangon)(report, michal);
            result = michal[entity];
            entity = 1;
            entity = michal[entity];
            var _closure2_slot1 = entity;
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            entity = 8;
            entity = report[entity];
            michal = zuuluu.bind(tangon)(entity);
            entity = michal.useIsScreenLandscape;
            entity = entity.bind(michal)();
            var _closure2_slot2 = entity;
            michal = 9;
            michal = report[michal];
            oscard = zuuluu.bind(tangon)(michal);
            report = oscard.useStateFromStores;
            michal = _closure1_slot6;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                entity = _closure1_slot6;
                entity = entity.useReducedMotion;
                return entity;
            };
            yankee = report.bind(oscard)(zuuluu, michal);
            output = 1.5;
            if(!entity) { _fun00002_ip = 171; continue _fun00001 }
 161:
            output = 2.0875;
 171:
            zuuluu = _closure1_slot8;
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            entity = 10;
            entity = kiloes[entity];
            entity = backup.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {};
            foxtra = true;
            entity['startExpanded'] = foxtra;
            report = function() { // Original name: onDismiss
                zuuluu = _closure2_slot0;
                entity = _closure1_slot7;
                michal = entity.UNKNOWN;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity['onDismiss'] = report;
            golfie = _closure1_slot9;
            oscard = _closure1_slot5;
            report = {};
            option = sizing.contentContainer;
            report['style'] = option;
            option = function(argFoo) { // Original name: onLayout
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = argFoo;
                    entity = entity.nativeEvent;
                    entity = entity.layout;
                    tangon = entity.width;
                    zuuluu = _closure2_slot1;
                    entity = _closure2_slot2;
                    michal = tangon;
                    if(!entity) { _fun00004_ip = 43; continue _fun00003 }
 36:
                    entity = 2;
                    michal = tangon / entity;
 43:
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    entity = undefined;
                    return entity;
                }
            };
            report['onLayout'] = option;
            offset = _closure1_slot1;
            option = 11;
            option = kiloes[option];
            verify = offset.bind(tangon)(option);
            option = {};
            update = sizing.videoContainer;
            option['style'] = update;
            echoed = _closure1_slot10;
            option['src'] = echoed;
            echoed = 'https://cdn.discordapp.com/assets/activities/platform/activities_pipfab_tutorial_redesign.png';
            option['poster'] = echoed;
            option['width'] = result;
            output = result / output;
            option['height'] = output;
            option['muted'] = foxtra;
            option['paused'] = yankee;
            verify = zuuluu.bind(tangon)(verify, option);
            option = new Array(4);
            option[0] = verify;
            verify = 12;
            yankee = kiloes[verify];
            yankee = backup.bind(tangon)(yankee);
            output = yankee.Text;
            foxtra = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            yankee = sizing.title;
            foxtra['style'] = yankee;
            yankee = 13;
            result = kiloes[yankee];
            result = backup.bind(tangon)(result);
            update = result.intl;
            echoed = update.string;
            result = kiloes[yankee];
            result = backup.bind(tangon)(result);
            result = result.t;
            result = result.pT6hub;
            result = echoed.bind(update)(result);
            foxtra['children'] = result;
            foxtra = zuuluu.bind(tangon)(output, foxtra);
            option[1] = foxtra;
            verify = kiloes[verify];
            verify = backup.bind(tangon)(verify);
            foxtra = verify.Text;
            verify = {};
            sizing = sizing.body;
            verify['style'] = sizing;
            sizing = 'text-sm/normal';
            verify['variant'] = sizing;
            sizing = kiloes[yankee];
            sizing = backup.bind(tangon)(sizing);
            result = sizing.intl;
            output = result.string;
            sizing = kiloes[yankee];
            sizing = backup.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.tNm8AQ;
            sizing = output.bind(result)(sizing);
            verify['children'] = sizing;
            verify = zuuluu.bind(tangon)(foxtra, verify);
            option[2] = verify;
            verify = 14;
            verify = kiloes[verify];
            offset = offset.bind(tangon)(verify);
            verify = {};
            romeon = function() { // Original name: onPress
                zuuluu = _closure2_slot0;
                entity = _closure1_slot7;
                michal = entity.UNKNOWN;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            verify['onPress'] = romeon;
            romeon = kiloes[yankee];
            romeon = backup.bind(tangon)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            yankee = kiloes[yankee];
            yankee = backup.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.NX+WJC;
            yankee = romeon.bind(foxtra)(yankee);
            verify['text'] = yankee;
            verify = zuuluu.bind(tangon)(offset, verify);
            option[3] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();