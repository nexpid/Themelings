// app/modules/activities/native/ActivitiesTutorialActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = golfie[entity];
    entity = undefined;
    michal = yankee.bind(entity)(michal);
    var _closure1_slot3 = michal;
    michal = 1;
    report = golfie[michal];
    michal = argCor;
    michal = michal.bind(entity)(report);
    var _closure1_slot4 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.View;
    var _closure1_slot5 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = yankee.bind(entity)(michal);
    var _closure1_slot6 = michal;
    michal = 4;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.ContentDismissActionType;
    var _closure1_slot7 = michal;
    michal = 5;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.jsx;
    var _closure1_slot8 = report;
    michal = michal.jsxs;
    var _closure1_slot9 = michal;
    michal = 6;
    michal = golfie[michal];
    option = oscard.bind(entity)(michal);
    report = option.createStyles;
    michal = {};
    verify = {'borderRadius': null, 'alignSelf': 'center', 'overflow': 'hidden'};
    offset = 7;
    offset = golfie[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    michal['videoContainer'] = verify;
    verify = {'flex': 1, 'width': '100%'};
    michal['contentContainer'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center', 'paddingHorizontal': 16, 'paddingVertical': 24};
    michal['container'] = verify;
    verify = {'marginTop': 24, 'textAlign': 'center'};
    michal['title'] = verify;
    verify = {'marginTop': 8, 'marginBottom': 24, 'paddingHorizontal': 8, 'textAlign': 'center'};
    michal['body'] = verify;
    michal = report.bind(option)(michal);
    var _closure1_slot10 = michal;
    michal = {};
    report = 'NUX';
    michal['NUX'] = report;
    var _closure1_slot11 = michal;
    report = 14;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/activities/native/ActivitiesTutorialActionSheet.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: ActivitiesTutorialActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.markAsDismissed;
            var _closure2_slot0 = michal;
            michal = entity.type;
            entity = _closure1_slot10;
            tangon = undefined;
            sizing = entity.bind(tangon)();
            report = _closure1_slot4;
            zuuluu = report.useState;
            entity = 0;
            oscard = zuuluu.bind(report)(entity);
            report = _closure1_slot3;
            zuuluu = 2;
            zuuluu = report.bind(tangon)(oscard, zuuluu);
            source = zuuluu[entity];
            entity = 1;
            entity = zuuluu[entity];
            var _closure2_slot1 = entity;
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            entity = 9;
            entity = kiloes[entity];
            oscard = backup.bind(tangon)(entity);
            report = oscard.useStateFromStores;
            entity = _closure1_slot6;
            zuuluu = new Array(1);
            zuuluu[0] = entity;
            entity = function() {
                entity = _closure1_slot6;
                entity = entity.useReducedMotion;
                return entity;
            };
            echoed = report.bind(oscard)(zuuluu, entity);
            entity = _closure1_slot11;
            entity = entity.NUX;
            if(!(michal !== entity)) { _fun00002_ip = 160; continue _fun00001 }
 141:
            entity = {'title': '', 'description': '', 'video': '', 'poster': '', 'aspectRatio': 1.7777777777777777};
            _fun00002_ip = 292; continue _fun00001;
 160:
            michal = {'title': null, 'description': null, 'video': 'https://cdn.discordapp.com/assets/activities/platform/mobile_nux_coachmark.mp4', 'poster': 'https://cdn.discordapp.com/assets/activities/platform/mobile_nux_coachmark.jpg', 'aspectRatio': 1.7777777777777777};
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            zuuluu = 8;
            report = option[zuuluu];
            report = golfie.bind(tangon)(report);
            offset = report.intl;
            oscard = offset.string;
            report = option[zuuluu];
            report = golfie.bind(tangon)(report);
            report = report.t;
            report = report.fhm5x8;
            report = oscard.bind(offset)(report);
            michal['title'] = report;
            report = option[zuuluu];
            report = golfie.bind(tangon)(report);
            oscard = report.intl;
            report = oscard.string;
            zuuluu = option[zuuluu];
            zuuluu = golfie.bind(tangon)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu.GK2DmJ;
            zuuluu = report.bind(oscard)(zuuluu);
            michal['description'] = zuuluu;
            entity = michal;
 292:
            update = entity.aspectRatio;
            result = entity.title;
            foxtra = entity.description;
            vacuum = entity.video;
            ctrled = entity.poster;
            zuuluu = _closure1_slot8;
            entity = 10;
            entity = kiloes[entity];
            entity = backup.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {};
            output = true;
            entity['startExpanded'] = output;
            report = function() { // Original name: onDismiss
                zuuluu = _closure2_slot0;
                entity = _closure1_slot7;
                michal = entity.UNKNOWN;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity['onDismiss'] = report;
            golfie = _closure1_slot9;
            oscard = _closure1_slot5;
            report = {};
            option = sizing.contentContainer;
            report['style'] = option;
            option = function(argFoo) { // Original name: onLayout
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                zuuluu = entity.width;
                michal = _closure2_slot1;
                entity = undefined;
                michal = michal.bind(entity)(zuuluu);
                return entity;
            };
            report['onLayout'] = option;
            option = {};
            offset = 'image';
            option['accessibilityRole'] = offset;
            option['accessibilityLabel'] = result;
            offset = _closure1_slot1;
            verify = 11;
            verify = kiloes[verify];
            romeon = offset.bind(tangon)(verify);
            verify = {};
            verify['poster'] = ctrled;
            sequen = sizing.videoContainer;
            ctrled = new Array(2);
            ctrled[0] = sequen;
            sequen = {};
            sequen['width'] = source;
            config = source / update;
            sequen['height'] = config;
            ctrled[1] = sequen;
            verify['style'] = ctrled;
            ctrled = {};
            ctrled['videoURI'] = vacuum;
            verify['src'] = ctrled;
            verify['width'] = source;
            update = source / update;
            verify['height'] = update;
            verify['muted'] = output;
            verify['paused'] = echoed;
            verify['ariaHidden'] = output;
            verify = zuuluu.bind(tangon)(romeon, verify);
            option['children'] = verify;
            verify = zuuluu.bind(tangon)(oscard, option);
            option = new Array(4);
            option[0] = verify;
            verify = 12;
            romeon = kiloes[verify];
            romeon = backup.bind(tangon)(romeon);
            output = romeon.Text;
            romeon = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            echoed = sizing.title;
            romeon['style'] = echoed;
            romeon['children'] = result;
            romeon = zuuluu.bind(tangon)(output, romeon);
            option[1] = romeon;
            verify = kiloes[verify];
            verify = backup.bind(tangon)(verify);
            romeon = verify.Text;
            verify = {};
            sizing = sizing.body;
            verify['style'] = sizing;
            sizing = 'text-sm/normal';
            verify['variant'] = sizing;
            verify['children'] = foxtra;
            verify = zuuluu.bind(tangon)(romeon, verify);
            option[2] = verify;
            verify = 13;
            verify = kiloes[verify];
            offset = offset.bind(tangon)(verify);
            verify = {};
            yankee = function() { // Original name: onPress
                zuuluu = _closure2_slot0;
                entity = _closure1_slot7;
                michal = entity.UNKNOWN;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            verify['onPress'] = yankee;
            yankee = 8;
            romeon = kiloes[yankee];
            romeon = backup.bind(tangon)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            yankee = kiloes[yankee];
            yankee = backup.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.NX+WJC;
            yankee = romeon.bind(foxtra)(yankee);
            verify['text'] = yankee;
            verify = zuuluu.bind(tangon)(offset, verify);
            option[3] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['TutorialTypes'] = michal;
    return entity;
})();