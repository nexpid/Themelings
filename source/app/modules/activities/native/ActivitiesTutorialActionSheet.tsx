// app/modules/activities/native/ActivitiesTutorialActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    yankee = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = golf;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    entity = 0;
    mike = golf[entity];
    entity = undefined;
    mike = yankee.bind(entity)(mike);
    var _closure1_slot3 = mike;
    mike = 1;
    report = golf[mike];
    mike = argCorge;
    mike = mike.bind(entity)(report);
    var _closure1_slot4 = mike;
    mike = 2;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.View;
    var _closure1_slot5 = mike;
    mike = 3;
    mike = golf[mike];
    mike = yankee.bind(entity)(mike);
    var _closure1_slot6 = mike;
    mike = 4;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.ContentDismissActionType;
    var _closure1_slot7 = mike;
    mike = 5;
    report = golf[mike];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot8 = report;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot9 = mike;
    mike = 6;
    mike = golf[mike];
    options = oscar.bind(entity)(mike);
    report = options.createStyles;
    mike = {};
    verify = {'borderRadius': null, 'alignSelf': 'center', 'overflow': 'hidden'};
    offset = 7;
    offset = golf[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    mike['videoContainer'] = verify;
    verify = {'flex': 1, 'width': '100%'};
    mike['contentContainer'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center', 'paddingHorizontal': 16, 'paddingVertical': 24};
    mike['container'] = verify;
    verify = {'marginTop': 24, 'textAlign': 'center'};
    mike['title'] = verify;
    verify = {'marginTop': 8, 'marginBottom': 24, 'paddingHorizontal': 8, 'textAlign': 'center'};
    mike['body'] = verify;
    mike = report.bind(options)(mike);
    var _closure1_slot10 = mike;
    mike = {};
    report = 'NUX';
    mike['NUX'] = report;
    var _closure1_slot11 = mike;
    report = 14;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/activities/native/ActivitiesTutorialActionSheet.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: ActivitiesTutorialActionSheet
        _fun115982: for(var _fun115982_ip = 0; ; ) switch(_fun115982_ip) {
 0:
            entity = argFoo;
            mike = entity.markAsDismissed;
            var _closure2_slot0 = mike;
            mike = entity.type;
            entity = _closure1_slot10;
            tango = undefined;
            sizing = entity.bind(tango)();
            report = _closure1_slot4;
            zulu = report.useState;
            entity = 0;
            oscar = zulu.bind(report)(entity);
            report = _closure1_slot3;
            zulu = 2;
            zulu = report.bind(tango)(oscar, zulu);
            source = zulu[entity];
            entity = 1;
            entity = zulu[entity];
            var _closure2_slot1 = entity;
            backup = _closure1_slot0;
            kilo = _closure1_slot2;
            entity = 9;
            entity = kilo[entity];
            oscar = backup.bind(tango)(entity);
            report = oscar.useStateFromStores;
            entity = _closure1_slot6;
            zulu = new Array(1);
            zulu[0] = entity;
            entity = function() {
                entity = _closure1_slot6;
                entity = entity.useReducedMotion;
                return entity;
            };
            echo = report.bind(oscar)(zulu, entity);
            entity = _closure1_slot11;
            entity = entity.NUX;
            if(!(mike !== entity)) { _fun115982_ip = 160; continue _fun115982 }
 141:
            entity = {'title': '', 'description': '', 'video': '', 'poster': '', 'aspectRatio': 1.7777777777777777};
            _fun115982_ip = 288; continue _fun115982;
 160:
            mike = {'title': null, 'description': null, 'video': 'https://cdn.discordapp.com/assets/activities/platform/mobile_nux_coachmark.mp4', 'poster': 'https://cdn.discordapp.com/assets/activities/platform/mobile_nux_coachmark.jpg', 'aspectRatio': 1.7777777777777777};
            golf = _closure1_slot0;
            options = _closure1_slot2;
            zulu = 8;
            report = options[zulu];
            report = golf.bind(tango)(report);
            offset = report.intl;
            oscar = offset.string;
            report = options[zulu];
            report = golf.bind(tango)(report);
            report = report.t;
            report = report.fhm5x8;
            report = oscar.bind(offset)(report);
            mike['title'] = report;
            report = options[zulu];
            report = golf.bind(tango)(report);
            oscar = report.intl;
            report = oscar.string;
            zulu = options[zulu];
            zulu = golf.bind(tango)(zulu);
            zulu = zulu.t;
            zulu = zulu.GK2DmJ;
            zulu = report.bind(oscar)(zulu);
            mike['description'] = zulu;
            entity = mike;
 288:
            update = entity.aspectRatio;
            result = entity.title;
            foxtrot = entity.description;
            vacuum = entity.video;
            control = entity.poster;
            zulu = _closure1_slot8;
            entity = 10;
            entity = kilo[entity];
            entity = backup.bind(tango)(entity);
            mike = entity.BottomSheet;
            entity = {};
            output = true;
            entity['startExpanded'] = output;
            report = function() { // Original name: onDismiss
                zulu = _closure2_slot0;
                entity = _closure1_slot7;
                mike = entity.UNKNOWN;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            entity['onDismiss'] = report;
            golf = _closure1_slot9;
            oscar = _closure1_slot5;
            report = {};
            options = sizing.contentContainer;
            report['style'] = options;
            options = function(argFoo) { // Original name: onLayout
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                zulu = entity.width;
                mike = _closure2_slot1;
                entity = undefined;
                mike = mike.bind(entity)(zulu);
                return entity;
            };
            report['onLayout'] = options;
            options = {};
            offset = 'image';
            options['accessibilityRole'] = offset;
            options['accessibilityLabel'] = result;
            offset = _closure1_slot1;
            verify = 11;
            verify = kilo[verify];
            romeo = offset.bind(tango)(verify);
            verify = {};
            verify['poster'] = control;
            sequence = sizing.videoContainer;
            control = new Array(2);
            control[0] = sequence;
            sequence = {};
            sequence['width'] = source;
            config = source / update;
            sequence['height'] = config;
            control[1] = sequence;
            verify['style'] = control;
            control = {};
            control['videoURI'] = vacuum;
            verify['src'] = control;
            verify['width'] = source;
            update = source / update;
            verify['height'] = update;
            verify['muted'] = output;
            verify['paused'] = echo;
            verify['ariaHidden'] = output;
            verify = zulu.bind(tango)(romeo, verify);
            options['children'] = verify;
            verify = zulu.bind(tango)(oscar, options);
            options = new Array(4);
            options[0] = verify;
            verify = 12;
            romeo = kilo[verify];
            romeo = backup.bind(tango)(romeo);
            output = romeo.Text;
            romeo = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            echo = sizing.title;
            romeo['style'] = echo;
            romeo['children'] = result;
            romeo = zulu.bind(tango)(output, romeo);
            options[1] = romeo;
            verify = kilo[verify];
            verify = backup.bind(tango)(verify);
            romeo = verify.Text;
            verify = {};
            sizing = sizing.body;
            verify['style'] = sizing;
            sizing = 'text-sm/normal';
            verify['variant'] = sizing;
            verify['children'] = foxtrot;
            verify = zulu.bind(tango)(romeo, verify);
            options[2] = verify;
            verify = 13;
            verify = kilo[verify];
            offset = offset.bind(tango)(verify);
            verify = {};
            yankee = function() { // Original name: onPress
                zulu = _closure2_slot0;
                entity = _closure1_slot7;
                mike = entity.UNKNOWN;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            verify['onPress'] = yankee;
            yankee = 8;
            romeo = kilo[yankee];
            romeo = backup.bind(tango)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            yankee = kilo[yankee];
            yankee = backup.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.NX+WJC;
            yankee = romeo.bind(foxtrot)(yankee);
            verify['text'] = yankee;
            verify = zulu.bind(tango)(offset, verify);
            options[3] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = tango;
    zulu['TutorialTypes'] = mike;
    return entity;
})();