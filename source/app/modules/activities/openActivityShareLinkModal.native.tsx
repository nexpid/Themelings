// app/modules/activities/openActivityShareLinkModal.native.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    tangon = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = tangon;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    oscard = {};
    entity = true;
    oscard['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, oscard);
    entity = 4;
    tangon = tangon[entity];
    entity = undefined;
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/activities/openActivityShareLinkModal.native.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = 'ACTIVITY_SHARE_LINK_MODAL';
    zuuluu['ACTIVITY_SHARE_LINK_MODAL'] = tangon;
    tangon = function(argFoo) {
        entity = argFoo;
        yankee = entity.applicationId;
        offset = entity.channelId;
        verify = entity.customId;
        option = entity.linkId;
        zuuluu = entity.message;
        michal = entity.onShare;
        romeon = _closure1_slot0;
        tangon = _closure1_slot2;
        entity = 0;
        oscard = tangon[entity];
        entity = undefined;
        golfie = romeon.bind(entity)(oscard);
        oscard = golfie.dismissKeyboard;
        oscard = oscard.bind(golfie)();
        oscard = _closure1_slot1;
        report = 1;
        report = tangon[report];
        golfie = oscard.bind(entity)(report);
        oscard = golfie.pushLazy;
        report = 3;
        report = tangon[report];
        romeon = romeon.bind(entity)(report);
        report = 2;
        report = tangon[report];
        tangon = tangon.paths;
        sizing = romeon.bind(entity)(report, tangon);
        tangon = {};
        tangon['applicationId'] = yankee;
        tangon['channelId'] = offset;
        tangon['customId'] = verify;
        tangon['linkId'] = option;
        tangon['message'] = zuuluu;
        tangon['onShare'] = michal;
        zuuluu = {};
        michal = 'modal';
        zuuluu['presentation'] = michal;
        backup = 'ACTIVITY_SHARE_LINK_MODAL';
        output = golfie;
        kiloes = tangon;
        foxtra = zuuluu;
        michal = output[oscard](sizing, kiloes, backup, foxtra, romeon);
        return entity;
    };
    zuuluu['openActivityShareLinkModal'] = tangon;
    michal = function() { // Original name: closeActivityShareLinkModal
        zuuluu = _closure1_slot1;
        michal = _closure1_slot2;
        entity = 1;
        michal = michal[entity];
        entity = undefined;
        tangon = zuuluu.bind(entity)(michal);
        zuuluu = tangon.popWithKey;
        michal = 'ACTIVITY_SHARE_LINK_MODAL';
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['closeActivityShareLinkModal'] = michal;
    return entity;
})();