// app/modules/activities/utils/deferJoinActivityInChannel.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    zulu = argFred;
    tango = argPlugh;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = tango;
    entity = global;
    golf = entity.Object;
    oscar = golf.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = oscar.bind(golf)(zulu, entity, report);
    entity = 1;
    report = tango[entity];
    tango = argBar;
    entity = undefined;
    oscar = tango.bind(entity)(report);
    report = oscar.fileFinishedImporting;
    tango = 'modules/activities/utils/deferJoinActivityInChannel.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: deferJoinActivityApplication
        entity = argFoo;
        offset = entity.channelId;
        verify = entity.applicationId;
        options = entity.intent;
        golf = entity.inviterUserId;
        oscar = entity.analyticsLocations;
        report = entity.commandOrigin;
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 0;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        yankee = 'EMBEDDED_ACTIVITY_DEFERRED_OPEN';
        mike['type'] = yankee;
        mike['channelId'] = offset;
        mike['applicationId'] = verify;
        mike['intent'] = options;
        mike['inviterUserId'] = golf;
        mike['analyticsLocations'] = oscar;
        mike['commandOrigin'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();