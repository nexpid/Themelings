// app/modules/activities/panel/native/ActivityPanelStateContext.tsx
export default (function(_, argBar, __, argCor, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    entity = 0;
    tangon = oscard[entity];
    michal = argCor;
    entity = undefined;
    golfie = michal.bind(entity)(tangon);
    michal = 1;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    verify = michal.ActivityPanelModes;
    tangon = golfie.createContext;
    michal = {};
    verify = verify.PANEL;
    michal['mode'] = verify;
    verify = function() { // Original name: setMode
        entity = global;
        zuuluu = entity.Error;
        entity = zuuluu.prototype;
        michal = Object.create(entity, {constructor: {value: zuuluu}});
        tangon = 'ActivityPanelStateContextType.Provider.setMode: not called within a context provider';
        report = michal;
        entity = new report[zuuluu](tangon, zuuluu);
        entity = entity instanceof Object ? entity : michal;
        throw entity;
    };
    michal['setMode'] = verify;
    verify = {'width': 9, 'height': 16, 'isLetterboxed': false, 'isLandscape': false, 'isWindowLandscape': false};
    michal['wrapperDimensions'] = verify;
    verify = 2;
    offset = oscard[verify];
    romeon = report.bind(entity)(offset);
    yankee = romeon.createFakeSharedValue;
    offset = {'x': 4294967295, 'y': 4294967295};
    offset = yankee.bind(romeon)(offset);
    michal['pipState'] = offset;
    offset = oscard[verify];
    romeon = report.bind(entity)(offset);
    yankee = romeon.createFakeSharedValue;
    offset = {'top': 0, 'bottom': 0};
    offset = yankee.bind(romeon)(offset);
    michal['pipAvoidanceSpecs'] = offset;
    verify = oscard[verify];
    yankee = report.bind(entity)(verify);
    offset = yankee.createFakeSharedValue;
    verify = {'x': 0, 'y': 0, 'gestureActive': false};
    verify = offset.bind(yankee)(verify);
    michal['wrapperOffset'] = verify;
    option = function() { // Original name: useActivityWebViewLock
        entity = true;
        return entity;
    };
    michal['useActivityWebViewLock'] = option;
    michal = tangon.bind(golfie)(michal);
    tangon = 3;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/activities/panel/native/ActivityPanelStateContext.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();