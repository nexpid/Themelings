// app/modules/activities/panel/native/pip/usePIPAvoidanceSpecs.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var4 = dependencyMap;
    var _closure1_slot0 = var5;
    var1 = metroImportDefault;
    var _closure1_slot1 = var1;
    var _closure1_slot2 = var4;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var6 = {};
    var1 = true;
    var6['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var6);
    var1 = {};
    var6 = 'function usePIPAvoidanceSpecsTsx1(){const{keyboardHeight,safeArea,screenName}=this.__closure;return{keyboardHeight:keyboardHeight.get(),safeAreaBottom:safeArea.bottom,screenName:screenName.get()};}';
    var1['code'] = var6;
    var _closure1_slot3 = var1;
    var1 = {};
    var6 = 'function usePIPAvoidanceSpecsTsx2(props,previous){const{cheapWorkletShallowEqual,getPIPBottomOffsetForPIPMode,getAdjustedBottomOffsets,updateSharedValueIfChanged,pipAvoidanceSpecs}=this.__closure;if(cheapWorkletShallowEqual(props,previous!==null&&previous!==void 0?previous:undefined))return;const{keyboardHeight:keyboardHeight,safeAreaBottom:safeAreaBottom,screenName:screenName}=props;const screenBottomOffset=getPIPBottomOffsetForPIPMode(screenName);const{bottomOffset:bottomOffset}=getAdjustedBottomOffsets({screenBottomOffset:screenBottomOffset,safeAreaBottom:safeAreaBottom,keyboardHeight:keyboardHeight});updateSharedValueIfChanged(pipAvoidanceSpecs,{top:0,bottom:bottomOffset});}';
    var1['code'] = var6;
    var _closure1_slot4 = var1;
    var1 = 7;
    var4 = var4[var1];
    var1 = undefined;
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/activities/panel/native/pip/usePIPAvoidanceSpecs.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function usePIPAvoidanceSpecs(arg1) {
        var13 = arg1;
        var _closure2_slot0 = var13;
        var12 = _closure1_slot0;
        var11 = _closure1_slot2;
        var3 = 0;
        var1 = var11[var3];
        var10 = undefined;
        var5 = var12.bind(var10)(var1);
        var4 = var5.useSharedValue;
        var1 = {'top': 0, 'bottom': 0};
        var1 = var4.bind(var5)(var1);
        var _closure2_slot1 = var1;
        var9 = _closure1_slot1;
        var4 = 1;
        var4 = var11[var4];
        var4 = var9.bind(var10)(var4);
        var14 = var4.bind(var10)();
        var _closure2_slot2 = var14;
        var4 = 2;
        var4 = var11[var4];
        var4 = var9.bind(var10)(var4);
        var8 = var4.bind(var10)();
        var _closure2_slot3 = var8;
        var3 = var11[var3];
        var5 = var12.bind(var10)(var3);
        var4 = var5.useAnimatedReaction;
        var3 = function f() {
            var1 = {};
            var4 = _closure2_slot2;
            var3 = var4.get;
            var3 = var3.bind(var4)();
            var1['keyboardHeight'] = var3;
            var3 = _closure2_slot0;
            var3 = var3.bottom;
            var1['safeAreaBottom'] = var3;
            var3 = _closure2_slot3;
            var2 = var3.get;
            var2 = var2.bind(var3)();
            var1['screenName'] = var2;
            return var1;
        };
        var7 = {};
        var7['keyboardHeight'] = var14;
        var7['safeArea'] = var13;
        var7['screenName'] = var8;
        var3['__closure'] = var7;
        var7 = 9790941132204.0;
        var3['__workletHash'] = var7;
        var7 = _closure1_slot3;
        var3['__initData'] = var7;
        var2 = function n(arg1, arg2) {
            _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
                var3 = arg1;
                var7 = arg2;
                var5 = _closure1_slot0;
                var4 = _closure1_slot2;
                var1 = 3;
                var4 = var4[var1];
                var1 = undefined;
                var6 = var5.bind(var1)(var4);
                var5 = var6.cheapWorkletShallowEqual;
                var4 = null;
                var8 = var4 != var7;
                var4 = undefined;
                if(!var8) { _fun0001_ip = 2; continue _fun0001 }
case 3:
                var4 = var7;
case 2:
                var4 = var5.bind(var6)(var3, var4);
                if(var4) { _fun0001_ip = 4; continue _fun0001 }
case 5:
                var6 = var3.keyboardHeight;
                var7 = var3.safeAreaBottom;
                var5 = var3.screenName;
                var3 = _closure1_slot1;
                var4 = _closure1_slot2;
                var2 = 4;
                var2 = var4[var2];
                var2 = var3.bind(var1)(var2);
                var8 = var2.bind(var1)(var5);
                var2 = 5;
                var2 = var4[var2];
                var5 = var3.bind(var1)(var2);
                var2 = {};
                var2['screenBottomOffset'] = var8;
                var2['safeAreaBottom'] = var7;
                var2['keyboardHeight'] = var6;
                var2 = var5.bind(var1)(var2);
                var5 = var2.bottomOffset;
                var2 = 6;
                var2 = var4[var2];
                var4 = var3.bind(var1)(var2);
                var3 = _closure2_slot1;
                var2 = {};
                var6 = 0;
                var2['top'] = var6;
                var2['bottom'] = var5;
                var2 = var4.bind(var1)(var3, var2);
case 4:
                return var1;
            }
        };
        var7 = {};
        var8 = 3;
        var8 = var11[var8];
        var8 = var12.bind(var10)(var8);
        var8 = var8.cheapWorkletShallowEqual;
        var7['cheapWorkletShallowEqual'] = var8;
        var8 = 4;
        var8 = var11[var8];
        var8 = var9.bind(var10)(var8);
        var7['getPIPBottomOffsetForPIPMode'] = var8;
        var8 = 5;
        var8 = var11[var8];
        var8 = var9.bind(var10)(var8);
        var7['getAdjustedBottomOffsets'] = var8;
        var8 = 6;
        var8 = var11[var8];
        var8 = var9.bind(var10)(var8);
        var7['updateSharedValueIfChanged'] = var8;
        var7['pipAvoidanceSpecs'] = var1;
        var2['__closure'] = var7;
        var7 = 643938425459.0;
        var2['__workletHash'] = var7;
        var6 = _closure1_slot4;
        var2['__initData'] = var6;
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var3['default'] = var2;
    return var1;
})();