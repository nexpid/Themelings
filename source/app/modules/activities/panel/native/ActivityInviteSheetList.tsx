// app/modules/activities/panel/native/ActivityInviteSheetList.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: FriendsEmptyComponent
        entity = _closure1_slot7;
        tangon = undefined;
        foxtra = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        michal = _closure1_slot5;
        entity = {};
        golfie = _closure1_slot4;
        kiloes = _closure1_slot0;
        sizing = _closure1_slot2;
        report = 6;
        report = sizing[report];
        report = kiloes.bind(tangon)(report);
        oscard = report.ThemedEmptyState;
        report = {};
        romeon = 7;
        option = sizing[romeon];
        option = kiloes.bind(tangon)(option);
        yankee = option.intl;
        offset = yankee.string;
        option = sizing[romeon];
        option = kiloes.bind(tangon)(option);
        option = option.t;
        option = option.dz4UlJ;
        option = offset.bind(yankee)(option);
        report['title'] = option;
        option = sizing[romeon];
        option = kiloes.bind(tangon)(option);
        yankee = option.intl;
        offset = yankee.string;
        option = sizing[romeon];
        option = kiloes.bind(tangon)(option);
        option = option.t;
        option = option.MBQBIy;
        option = offset.bind(yankee)(option);
        report['body'] = option;
        option = foxtra.emptyTitle;
        report['titleStyle'] = option;
        option = foxtra.emptyBody;
        report['bodyStyle'] = option;
        option = {'marginTop': 40, 'marginBottom': 16};
        report['imageStyle'] = option;
        offset = _closure1_slot1;
        option = 8;
        yankee = sizing[option];
        yankee = offset.bind(tangon)(yankee);
        report['darkSource'] = yankee;
        option = sizing[option];
        option = offset.bind(tangon)(option);
        report['lightSource'] = option;
        oscard = golfie.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        option = _closure1_slot4;
        oscard = 9;
        oscard = sizing[oscard];
        oscard = kiloes.bind(tangon)(oscard);
        golfie = oscard.PressableOpacity;
        oscard = {};
        offset = function() { // Original name: onPress
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                report = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 10;
                zuuluu = tangon[entity];
                entity = undefined;
                report = report.bind(entity)(zuuluu);
                zuuluu = report.hideActionSheet;
                zuuluu = zuuluu.bind(report)();
                zuuluu = _closure1_slot0;
                michal = 11;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.getRootNavigationRef;
                report = michal.bind(zuuluu)();
                michal = null;
                if(!(michal != report)) { _fun00002_ip = 114; continue _fun00001 }
 67:
                tangon = report.navigate;
                zuuluu = {};
                michal = 'add-friends';
                zuuluu['screen'] = michal;
                michal = {};
                oscard = 'Instant Invite Empty State';
                michal['sourcePage'] = oscard;
                zuuluu['params'] = michal;
                michal = 'friends';
                michal = tangon.bind(report)(michal, zuuluu);
 114:
                return entity;
            }
        };
        oscard['onPress'] = offset;
        offset = 'link';
        oscard['accessibilityRole'] = offset;
        offset = sizing[romeon];
        offset = kiloes.bind(tangon)(offset);
        backup = offset.intl;
        yankee = backup.string;
        offset = sizing[romeon];
        offset = kiloes.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.a7FVbG;
        offset = yankee.bind(backup)(offset);
        oscard['accessibilityLabel'] = offset;
        offset = {'top': 8, 'left': 8, 'bottom': 8, 'right': 8};
        oscard['hitSlop'] = offset;
        yankee = _closure1_slot4;
        verify = 12;
        verify = sizing[verify];
        verify = kiloes.bind(tangon)(verify);
        offset = verify.Text;
        verify = {'style': null, 'variant': 'text-sm/semibold', 'color': 'text-link'};
        backup = foxtra.goToFriendsLink;
        foxtra = new Array(1);
        foxtra[0] = backup;
        verify['style'] = foxtra;
        foxtra = sizing[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = sizing[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.a7FVbG;
        romeon = foxtra.bind(backup)(romeon);
        verify['children'] = romeon;
        verify = yankee.bind(tangon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    foxtra = tangon.Fonts;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    golfie = tangon.Fragment;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    offset = {};
    backup = 4;
    tangon = oscard[backup];
    output = yankee.bind(entity)(tangon);
    sizing = foxtra.DISPLAY_EXTRABOLD;
    tangon = 5;
    romeon = oscard[tangon];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    kiloes = romeon.HEADER_PRIMARY;
    romeon = 18;
    echoed = output.bind(entity)(sizing, kiloes, romeon);
    update = offset;
    romeon = copyDataProperties(update, echoed);
    kiloes = 'none';
    romeon = 'textTransform';
    offset[romeon] = kiloes;
    kiloes = 24;
    romeon = 'lineHeight';
    offset[romeon] = kiloes;
    golfie['emptyTitle'] = offset;
    offset = {};
    backup = oscard[backup];
    backup = yankee.bind(entity)(backup);
    foxtra = foxtra.PRIMARY_MEDIUM;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    tangon = tangon.colors;
    yankee = tangon.HEADER_SECONDARY;
    tangon = 16;
    echoed = backup.bind(entity)(foxtra, yankee, tangon);
    update = offset;
    yankee = copyDataProperties(update, echoed);
    yankee = 20;
    offset[romeon] = yankee;
    romeon = '600';
    yankee = 'fontWeight';
    offset[yankee] = romeon;
    golfie['emptyBody'] = offset;
    offset = {};
    yankee = 'center';
    offset['textAlign'] = yankee;
    golfie['goToFriendsLink'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot7 = golfie;
    golfie = function(argFoo) { // Original name: keyExtractor
        entity = argFoo;
        entity = entity.item;
        entity = entity.id;
        return entity;
    };
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/activities/panel/native/ActivityInviteSheetList.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ActivityInviteSheetList
        michal = argFoo;
        oscard = michal.data;
        var _closure2_slot0 = oscard;
        yankee = michal.error;
        var _closure2_slot1 = yankee;
        verify = michal.getSendState;
        var _closure2_slot2 = verify;
        offset = michal.isSubmitting;
        var _closure2_slot3 = offset;
        golfie = michal.onInviteSent;
        var _closure2_slot4 = golfie;
        option = michal.onPressAvatar;
        var _closure2_slot5 = option;
        tangon = _closure1_slot3;
        zuuluu = tangon.useCallback;
        michal = new Array(6);
        michal[0] = yankee;
        michal[1] = offset;
        michal[2] = verify;
        michal[3] = option;
        michal[4] = golfie;
        golfie = oscard.length;
        michal[5] = golfie;
        entity = function(argFoo) {
            entity = argFoo;
            oscard = entity.item;
            option = entity.index;
            tangon = _closure1_slot4;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 13;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            report = 0;
            report = report === option;
            entity['start'] = report;
            golfie = _closure2_slot0;
            verify = golfie.length;
            golfie = 1;
            golfie = verify - golfie;
            golfie = option === golfie;
            entity['end'] = golfie;
            entity['row'] = oscard;
            golfie = _closure2_slot5;
            entity['onPressAvatar'] = golfie;
            golfie = _closure2_slot4;
            entity['onInviteSent'] = golfie;
            golfie = _closure2_slot3;
            entity['isSubmitting'] = golfie;
            golfie = _closure2_slot1;
            entity['error'] = golfie;
            report = _closure2_slot2;
            report = report.bind(zuuluu)(oscard);
            entity['sendState'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        golfie = zuuluu.bind(tangon)(entity, michal);
        yankee = _closure1_slot1;
        romeon = _closure1_slot2;
        entity = 14;
        entity = romeon[entity];
        tangon = undefined;
        michal = yankee.bind(tangon)(entity);
        entity = {};
        option = false;
        entity['isKeyboardAwareOnAndroid'] = option;
        entity = michal.bind(tangon)(entity);
        offset = entity.insets;
        zuuluu = _closure1_slot4;
        michal = _closure1_slot0;
        entity = 15;
        entity = romeon[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.BottomSheetFlatList;
        entity = {};
        verify = {};
        backup = offset.bottom;
        offset = 5;
        foxtra = romeon[offset];
        foxtra = yankee.bind(tangon)(foxtra);
        foxtra = foxtra.spacing;
        foxtra = foxtra.PX_16;
        foxtra = backup + foxtra;
        verify['paddingBottom'] = foxtra;
        offset = romeon[offset];
        offset = yankee.bind(tangon)(offset);
        offset = offset.spacing;
        offset = offset.PX_12;
        verify['paddingHorizontal'] = offset;
        entity['contentContainerStyle'] = verify;
        entity['bounces'] = option;
        entity['renderItem'] = golfie;
        entity['data'] = oscard;
        oscard = _closure1_slot8;
        entity['keyExtractor'] = oscard;
        oscard = 'always';
        entity['keyboardShouldPersistTaps'] = oscard;
        report = _closure1_slot9;
        entity['ListEmptyComponent'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();