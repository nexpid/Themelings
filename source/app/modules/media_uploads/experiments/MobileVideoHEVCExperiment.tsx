// app/modules/media_uploads/experiments/MobileVideoHEVCExperiment.tsx
export default (function(argFoo, argBar, _, __, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    verify = report.bind(entity)(tango);
    options = verify.createExperiment;
    golf = {'kind': 'user', 'id': '2024-12_mobile_video_hevc', 'label': 'HEVC video encoding on mobile uploads'};
    tango = {'hevcEnabled': false, 'deviceStateCheckEnabled': false};
    golf['defaultConfig'] = tango;
    tango = {'id': 1, 'label': 'HEVC disabled, Device State Check bypassed'};
    offset = {'hevcEnabled': false, 'deviceStateCheckEnabled': false};
    tango['config'] = offset;
    offset = new Array(4);
    offset[0] = tango;
    yankee = {'id': 2, 'label': 'HEVC disabled, Device State Check enabled'};
    tango = 2;
    romeo = {'hevcEnabled': false, 'deviceStateCheckEnabled': true};
    yankee['config'] = romeo;
    offset[1] = yankee;
    yankee = {'id': 3, 'label': 'HEVC allowed, Device State Check bypassed'};
    romeo = {'hevcEnabled': true, 'deviceStateCheckEnabled': false};
    yankee['config'] = romeo;
    offset[2] = yankee;
    yankee = {'id': 4, 'label': 'HEVC allowed, Device State Check enabled'};
    romeo = {'hevcEnabled': true, 'deviceStateCheckEnabled': true};
    yankee['config'] = romeo;
    offset[3] = yankee;
    golf['treatments'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot2 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/media_uploads/experiments/MobileVideoHEVCExperiment.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: useMobileVideoHEVCExperiment
        entity = argFoo;
        entity = entity.location;
        report = _closure1_slot0;
        tango = _closure1_slot1;
        zulu = 1;
        tango = tango[zulu];
        zulu = undefined;
        zulu = report.bind(zulu)(tango);
        golf = zulu.MediaInfraHoldoutExperimentH12025;
        oscar = golf.getCurrentConfig;
        tango = {};
        tango['location'] = entity;
        zulu = {};
        report = true;
        zulu['autoTrackExposure'] = report;
        zulu = oscar.bind(golf)(tango, zulu);
        oscar = zulu.isInHoldout;
        tango = _closure1_slot2;
        zulu = tango.getCurrentConfig;
        mike = {};
        mike['location'] = entity;
        entity = {};
        entity['disable'] = oscar;
        entity['autoTrackExposure'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['useMobileVideoHEVCExperiment'] = mike;
    return entity;
})();