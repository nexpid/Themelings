// app/modules/verification/native/components/ResendEmail.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    options = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(options);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.Image;
    var _closure1_slot5 = options;
    tango = tango.View;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.VerificationModalScenes;
    var _closure1_slot9 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot10 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot11 = tango;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'padding': 16, 'justifyContent': 'center', 'alignItems': 'center'};
    tango['container'] = verify;
    verify = {'height': 190, 'width': 220, 'resizeMode': 'contain'};
    tango['image'] = verify;
    verify = {'marginTop': 16, 'textAlign': 'center'};
    tango['title'] = verify;
    verify = {'marginTop': 8, 'lineHeight': 18, 'textAlign': 'center'};
    tango['body'] = verify;
    verify = {'marginTop': 16, 'width': '100%'};
    tango['resend'] = verify;
    verify = {'marginTop': 8, 'width': '100%'};
    tango['change'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot12 = tango;
    tango = 19;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/verification/native/components/ResendEmail.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: ResendEmail
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot12;
            tango = undefined;
            output = entity.bind(tango)();
            options = _closure1_slot0;
            foxtrot = _closure1_slot2;
            entity = 8;
            entity = foxtrot[entity];
            mike = options.bind(tango)(entity);
            entity = mike.useNavigation;
            entity = entity.bind(mike)();
            var _closure2_slot0 = entity;
            zulu = 9;
            mike = foxtrot[zulu];
            golf = options.bind(tango)(mike);
            oscar = golf.useStateFromStores;
            mike = _closure1_slot8;
            report = new Array(1);
            report[0] = mike;
            mike = function() {
                zulu = _closure1_slot8;
                entity = zulu.getCurrentUser;
                entity = entity.bind(zulu)();
                zulu = _closure1_slot1;
                tango = _closure1_slot2;
                mike = 10;
                mike = tango[mike];
                report = undefined;
                tango = zulu.bind(report)(mike);
                mike = null;
                zulu = mike != entity;
                mike = 'ResendEmail: user cannot be undefined';
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            mike = oscar.bind(golf)(report, mike);
            update = mike.email;
            mike = mike.verified;
            var _closure2_slot1 = mike;
            zulu = foxtrot[zulu];
            golf = options.bind(tango)(zulu);
            oscar = golf.useStateFromStores;
            zulu = _closure1_slot7;
            report = new Array(1);
            report[0] = zulu;
            zulu = function() {
                mike = _closure1_slot7;
                entity = mike.getAction;
                entity = entity.bind(mike)();
                return entity;
            };
            oscar = oscar.bind(golf)(report, zulu);
            kilo = _closure1_slot1;
            zulu = 11;
            zulu = foxtrot[zulu];
            report = kilo.bind(tango)(zulu);
            zulu = report.isEmailReverification;
            zulu = zulu.bind(report)(oscar);
            oscar = !zulu;
            report = _closure1_slot4;
            golf = report.useState;
            zulu = false;
            verify = golf.bind(report)(zulu);
            golf = _closure1_slot3;
            zulu = 2;
            golf = golf.bind(tango)(verify, zulu);
            zulu = 0;
            romeo = golf[zulu];
            zulu = 1;
            zulu = golf[zulu];
            var _closure2_slot2 = zulu;
            zulu = report.useRef;
            zulu = zulu.bind(report)(mike);
            var _closure2_slot3 = zulu;
            golf = report.useEffect;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure2_slot1;
                    if(!entity) { _fun00004_ip = 25; continue _fun00003 }
 10:
                    mike = _closure2_slot3;
                    zulu = mike.current;
                    mike = false;
                    entity = mike === zulu;
 25:
                    if(!entity) { _fun00004_ip = 63; continue _fun00003 }
 28:
                    zulu = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 12;
                    mike = mike[entity];
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    entity = mike.close;
                    entity = entity.bind(mike)();
 63:
                    entity = undefined;
                    return entity;
                }
            };
            mike = golf.bind(report)(mike, zulu);
            zulu = report.useEffect;
            mike = function() {
                mike = _closure2_slot3;
                entity = _closure2_slot1;
                mike['current'] = entity;
                entity = undefined;
                return entity;
            };
            mike = zulu.bind(report)(mike);
            zulu = report.useCallback;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                zulu = _closure2_slot0;
                mike = zulu.push;
                entity = _closure1_slot9;
                entity = entity.ENTER_EMAIL;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            yankee = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot11;
            mike = _closure1_slot6;
            entity = {};
            report = output.container;
            entity['style'] = report;
            verify = _closure1_slot10;
            golf = _closure1_slot5;
            report = {};
            backup = output.image;
            report['style'] = backup;
            backup = 13;
            backup = foxtrot[backup];
            backup = kilo.bind(tango)(backup);
            report['source'] = backup;
            golf = verify.bind(tango)(golf, report);
            report = new Array(5);
            report[0] = golf;
            golf = 14;
            backup = foxtrot[golf];
            backup = options.bind(tango)(backup);
            result = backup.Text;
            backup = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            kilo = output.title;
            backup['style'] = kilo;
            kilo = 15;
            echo = foxtrot[kilo];
            echo = options.bind(tango)(echo);
            control = echo.intl;
            source = control.string;
            echo = foxtrot[kilo];
            echo = options.bind(tango)(echo);
            echo = echo.t;
            echo = echo.fUtddX;
            echo = source.bind(control)(echo);
            backup['children'] = echo;
            backup = verify.bind(tango)(result, backup);
            report[1] = backup;
            golf = foxtrot[golf];
            golf = options.bind(tango)(golf);
            options = golf.Text;
            golf = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            foxtrot = output.body;
            golf['style'] = foxtrot;
            backup = _closure1_slot0;
            foxtrot = _closure1_slot2;
            result = foxtrot[kilo];
            result = backup.bind(tango)(result);
            echo = result.intl;
            if(romeo) { _fun00002_ip = 577; continue _fun00001 }
 543:
            result = echo.string;
            romeo = foxtrot[kilo];
            romeo = backup.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.tSXg8P;
            romeo = result.bind(echo)(romeo);
            _fun00002_ip = 617; continue _fun00001;
 577:
            result = echo.format;
            foxtrot = foxtrot[kilo];
            foxtrot = backup.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            backup = foxtrot.JqLgQE;
            foxtrot = {};
            foxtrot['email'] = update;
            romeo = result.bind(echo)(backup, foxtrot);
 617:
            golf['children'] = romeo;
            golf = verify.bind(tango)(options, golf);
            report[2] = golf;
            verify = _closure1_slot10;
            foxtrot = _closure1_slot1;
            romeo = _closure1_slot2;
            backup = 16;
            golf = romeo[backup];
            options = foxtrot.bind(tango)(golf);
            golf = {};
            result = output.resend;
            golf['style'] = result;
            source = _closure1_slot0;
            result = romeo[kilo];
            result = source.bind(tango)(result);
            update = result.intl;
            echo = update.string;
            result = romeo[kilo];
            result = source.bind(tango)(result);
            result = result.t;
            result = result.WnX4Jy;
            result = echo.bind(update)(result);
            golf['text'] = result;
            romeo = romeo[backup];
            romeo = foxtrot.bind(tango)(romeo);
            romeo = romeo.Colors;
            romeo = romeo.BRAND;
            golf['color'] = romeo;
            offset = function() { // Original name: onPress
                zulu = _closure2_slot2;
                entity = undefined;
                mike = true;
                mike = zulu.bind(entity)(mike);
                zulu = _closure1_slot1;
                verify = _closure1_slot2;
                mike = 17;
                mike = verify[mike];
                tango = zulu.bind(entity)(mike);
                mike = tango.verifyResend;
                mike = mike.bind(tango)();
                mike = 18;
                mike = verify[mike];
                tango = zulu.bind(entity)(mike);
                zulu = tango.open;
                mike = {};
                oscar = 'USER_SETTINGS_ACCOUNT_CHANGE_EMAIL_CONFIRM_CODE_SENT';
                mike['key'] = oscar;
                options = _closure1_slot0;
                report = 15;
                oscar = verify[report];
                oscar = options.bind(entity)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = verify[report];
                report = options.bind(entity)(report);
                report = report.t;
                report = report.84yeo6;
                report = oscar.bind(golf)(report);
                mike['content'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            golf['onPress'] = offset;
            offset = true;
            golf['shrink'] = offset;
            golf = verify.bind(tango)(options, golf);
            report[3] = golf;
            if(!oscar) { _fun00002_ip = 905; continue _fun00001 }
 780:
            verify = _closure1_slot10;
            foxtrot = _closure1_slot1;
            romeo = _closure1_slot2;
            golf = romeo[backup];
            options = foxtrot.bind(tango)(golf);
            golf = {};
            output = output.change;
            golf['style'] = output;
            result = _closure1_slot0;
            sizing = romeo[kilo];
            sizing = result.bind(tango)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kilo = romeo[kilo];
            kilo = result.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.Vm8akJ;
            kilo = sizing.bind(output)(kilo);
            golf['text'] = kilo;
            romeo = romeo[backup];
            romeo = foxtrot.bind(tango)(romeo);
            romeo = romeo.Colors;
            romeo = romeo.TRANSPARENT;
            golf['color'] = romeo;
            golf['onPress'] = yankee;
            golf['shrink'] = offset;
            oscar = verify.bind(tango)(options, golf);
 905:
            report[4] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();