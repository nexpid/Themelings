// app/modules/verification/native/components/ResendEmail.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    option = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.Image;
    var _closure1_slot5 = option;
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.VerificationModalScenes;
    var _closure1_slot9 = tangon;
    tangon = 6;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot11 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'padding': 16, 'justifyContent': 'center', 'alignItems': 'center'};
    tangon['container'] = verify;
    verify = {'height': 190, 'width': 220, 'resizeMode': 'contain'};
    tangon['image'] = verify;
    verify = {'marginTop': 16, 'textAlign': 'center'};
    tangon['title'] = verify;
    verify = {'marginTop': 8, 'lineHeight': 18, 'textAlign': 'center'};
    tangon['body'] = verify;
    verify = {'marginTop': 16, 'width': '100%'};
    tangon['resend'] = verify;
    verify = {'marginTop': 8, 'width': '100%'};
    tangon['change'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 19;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/verification/native/components/ResendEmail.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: ResendEmail
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot12;
            tangon = undefined;
            output = entity.bind(tangon)();
            option = _closure1_slot0;
            foxtra = _closure1_slot2;
            entity = 8;
            entity = foxtra[entity];
            michal = option.bind(tangon)(entity);
            entity = michal.useNavigation;
            entity = entity.bind(michal)();
            var _closure2_slot0 = entity;
            zuuluu = 9;
            michal = foxtra[zuuluu];
            golfie = option.bind(tangon)(michal);
            oscard = golfie.useStateFromStores;
            michal = _closure1_slot8;
            report = new Array(1);
            report[0] = michal;
            michal = function() {
                zuuluu = _closure1_slot8;
                entity = zuuluu.getCurrentUser;
                entity = entity.bind(zuuluu)();
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                michal = 10;
                michal = tangon[michal];
                report = undefined;
                tangon = zuuluu.bind(report)(michal);
                michal = null;
                zuuluu = michal != entity;
                michal = 'ResendEmail: user cannot be undefined';
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            michal = oscard.bind(golfie)(report, michal);
            update = michal.email;
            michal = michal.verified;
            var _closure2_slot1 = michal;
            zuuluu = foxtra[zuuluu];
            golfie = option.bind(tangon)(zuuluu);
            oscard = golfie.useStateFromStores;
            zuuluu = _closure1_slot7;
            report = new Array(1);
            report[0] = zuuluu;
            zuuluu = function() {
                michal = _closure1_slot7;
                entity = michal.getAction;
                entity = entity.bind(michal)();
                return entity;
            };
            oscard = oscard.bind(golfie)(report, zuuluu);
            kiloes = _closure1_slot1;
            zuuluu = 11;
            zuuluu = foxtra[zuuluu];
            report = kiloes.bind(tangon)(zuuluu);
            zuuluu = report.isEmailReverification;
            zuuluu = zuuluu.bind(report)(oscard);
            oscard = !zuuluu;
            report = _closure1_slot4;
            golfie = report.useState;
            zuuluu = false;
            verify = golfie.bind(report)(zuuluu);
            golfie = _closure1_slot3;
            zuuluu = 2;
            golfie = golfie.bind(tangon)(verify, zuuluu);
            zuuluu = 0;
            romeon = golfie[zuuluu];
            zuuluu = 1;
            zuuluu = golfie[zuuluu];
            var _closure2_slot2 = zuuluu;
            zuuluu = report.useRef;
            zuuluu = zuuluu.bind(report)(michal);
            var _closure2_slot3 = zuuluu;
            golfie = report.useEffect;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure2_slot1;
                    if(!entity) { _fun00004_ip = 25; continue _fun00003 }
 10:
                    michal = _closure2_slot3;
                    zuuluu = michal.current;
                    michal = false;
                    entity = michal === zuuluu;
 25:
                    if(!entity) { _fun00004_ip = 63; continue _fun00003 }
 28:
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 12;
                    michal = michal[entity];
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    entity = michal.close;
                    entity = entity.bind(michal)();
 63:
                    entity = undefined;
                    return entity;
                }
            };
            michal = golfie.bind(report)(michal, zuuluu);
            zuuluu = report.useEffect;
            michal = function() {
                michal = _closure2_slot3;
                entity = _closure2_slot1;
                michal['current'] = entity;
                entity = undefined;
                return entity;
            };
            michal = zuuluu.bind(report)(michal);
            zuuluu = report.useCallback;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure2_slot0;
                michal = zuuluu.push;
                entity = _closure1_slot9;
                entity = entity.ENTER_EMAIL;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            yankee = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot11;
            michal = _closure1_slot6;
            entity = {};
            report = output.container;
            entity['style'] = report;
            verify = _closure1_slot10;
            golfie = _closure1_slot5;
            report = {};
            backup = output.image;
            report['style'] = backup;
            backup = 13;
            backup = foxtra[backup];
            backup = kiloes.bind(tangon)(backup);
            report['source'] = backup;
            golfie = verify.bind(tangon)(golfie, report);
            report = new Array(5);
            report[0] = golfie;
            golfie = 14;
            backup = foxtra[golfie];
            backup = option.bind(tangon)(backup);
            result = backup.Text;
            backup = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            kiloes = output.title;
            backup['style'] = kiloes;
            kiloes = 15;
            echoed = foxtra[kiloes];
            echoed = option.bind(tangon)(echoed);
            ctrled = echoed.intl;
            source = ctrled.string;
            echoed = foxtra[kiloes];
            echoed = option.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.fUtddX;
            echoed = source.bind(ctrled)(echoed);
            backup['children'] = echoed;
            backup = verify.bind(tangon)(result, backup);
            report[1] = backup;
            golfie = foxtra[golfie];
            golfie = option.bind(tangon)(golfie);
            option = golfie.Text;
            golfie = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            foxtra = output.body;
            golfie['style'] = foxtra;
            backup = _closure1_slot0;
            foxtra = _closure1_slot2;
            result = foxtra[kiloes];
            result = backup.bind(tangon)(result);
            echoed = result.intl;
            if(romeon) { _fun00002_ip = 567; continue _fun00001 }
 533:
            result = echoed.string;
            romeon = foxtra[kiloes];
            romeon = backup.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.tSXg8P;
            romeon = result.bind(echoed)(romeon);
            _fun00002_ip = 607; continue _fun00001;
 567:
            result = echoed.format;
            foxtra = foxtra[kiloes];
            foxtra = backup.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            backup = foxtra.JqLgQE;
            foxtra = {};
            foxtra['email'] = update;
            romeon = result.bind(echoed)(backup, foxtra);
 607:
            golfie['children'] = romeon;
            golfie = verify.bind(tangon)(option, golfie);
            report[2] = golfie;
            verify = _closure1_slot10;
            foxtra = _closure1_slot1;
            romeon = _closure1_slot2;
            backup = 16;
            golfie = romeon[backup];
            option = foxtra.bind(tangon)(golfie);
            golfie = {};
            result = output.resend;
            golfie['style'] = result;
            source = _closure1_slot0;
            result = romeon[kiloes];
            result = source.bind(tangon)(result);
            update = result.intl;
            echoed = update.string;
            result = romeon[kiloes];
            result = source.bind(tangon)(result);
            result = result.t;
            result = result.WnX4Jy;
            result = echoed.bind(update)(result);
            golfie['text'] = result;
            romeon = romeon[backup];
            romeon = foxtra.bind(tangon)(romeon);
            romeon = romeon.Colors;
            romeon = romeon.BRAND;
            golfie['color'] = romeon;
            offset = function() { // Original name: onPress
                zuuluu = _closure2_slot2;
                entity = undefined;
                michal = true;
                michal = zuuluu.bind(entity)(michal);
                zuuluu = _closure1_slot1;
                verify = _closure1_slot2;
                michal = 17;
                michal = verify[michal];
                tangon = zuuluu.bind(entity)(michal);
                michal = tangon.verifyResend;
                michal = michal.bind(tangon)();
                michal = 18;
                michal = verify[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.open;
                michal = {};
                oscard = 'USER_SETTINGS_ACCOUNT_CHANGE_EMAIL_CONFIRM_CODE_SENT';
                michal['key'] = oscard;
                option = _closure1_slot0;
                report = 15;
                oscard = verify[report];
                oscard = option.bind(entity)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = verify[report];
                report = option.bind(entity)(report);
                report = report.t;
                report = report.84yeo6;
                report = oscard.bind(golfie)(report);
                michal['content'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            golfie['onPress'] = offset;
            offset = true;
            golfie['shrink'] = offset;
            golfie = verify.bind(tangon)(option, golfie);
            report[3] = golfie;
            if(!oscard) { _fun00002_ip = 893; continue _fun00001 }
 768:
            verify = _closure1_slot10;
            foxtra = _closure1_slot1;
            romeon = _closure1_slot2;
            golfie = romeon[backup];
            option = foxtra.bind(tangon)(golfie);
            golfie = {};
            output = output.change;
            golfie['style'] = output;
            result = _closure1_slot0;
            sizing = romeon[kiloes];
            sizing = result.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = romeon[kiloes];
            kiloes = result.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.Vm8akJ;
            kiloes = sizing.bind(output)(kiloes);
            golfie['text'] = kiloes;
            romeon = romeon[backup];
            romeon = foxtra.bind(tangon)(romeon);
            romeon = romeon.Colors;
            romeon = romeon.TRANSPARENT;
            golfie['color'] = romeon;
            golfie['onPress'] = yankee;
            golfie['shrink'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 893:
            report[4] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();