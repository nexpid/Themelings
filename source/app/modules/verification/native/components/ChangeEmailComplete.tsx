// app/modules/verification/native/components/ChangeEmailComplete.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    offset = 0;
    golfie = oscard[offset];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    golfie = tangon.Image;
    var _closure1_slot4 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot5 = tangon;
    foxtra = 2;
    tangon = oscard[foxtra];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.resetChangeEmailStore;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    tangon = {'flexGrow': 2, 'paddingHorizontal': null, 'paddingBottom': null, 'gap': 20, 'alignItems': 'center'};
    yankee = 5;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    tangon['paddingHorizontal'] = backup;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    tangon['paddingBottom'] = backup;
    backup = 'center';
    golfie['contentContainer'] = tangon;
    tangon = {'height': 190, 'width': 220, 'resizeMode': 'contain'};
    golfie['image'] = tangon;
    tangon = {};
    tangon['textAlign'] = backup;
    golfie['title'] = tangon;
    tangon = {};
    tangon['textAlign'] = backup;
    golfie['body'] = tangon;
    tangon = {};
    tangon['gap'] = foxtra;
    golfie['bodyInner'] = tangon;
    tangon = {};
    tangon['flexGrow'] = offset;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    tangon['borderRadius'] = offset;
    golfie['button'] = tangon;
    offset = {'backgroundColor': null, 'width': '100%', 'padding': 12, 'borderWidth': 1, 'borderStyle': 'solid'};
    tangon = oscard[yankee];
    tangon = romeon.bind(entity)(tangon);
    tangon = tangon.colors;
    tangon = tangon.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = tangon;
    tangon = 12;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    offset['borderRadius'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_ACCENT;
    offset['borderColor'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.shadows;
    output = yankee.SHADOW_LOW;
    result = offset;
    yankee = copyDataProperties(result, output);
    golfie['tooltip'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot9 = golfie;
    golfie = function() { // Original name: handlePress
        zuuluu = _closure1_slot6;
        entity = undefined;
        zuuluu = zuuluu.bind(entity)();
        zuuluu = _closure1_slot1;
        tangon = _closure1_slot2;
        michal = 6;
        michal = tangon[michal];
        zuuluu = zuuluu.bind(entity)(michal);
        michal = zuuluu.close;
        michal = michal.bind(zuuluu)();
        return entity;
    };
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/verification/native/components/ChangeEmailComplete.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ChangeEmailComplete
        entity = argFoo;
        config = entity.email;
        entity = _closure1_slot9;
        tangon = undefined;
        foxtra = entity.bind(tangon)();
        zuuluu = _closure1_slot7;
        kiloes = _closure1_slot0;
        sizing = _closure1_slot2;
        entity = 7;
        entity = sizing[entity];
        entity = kiloes.bind(tangon)(entity);
        michal = entity.RedesignCompat;
        entity = {};
        golfie = _closure1_slot8;
        oscard = _closure1_slot5;
        report = {'keyboardShouldPersistTaps': 'handled', 'alwaysBounceVertical': false};
        option = foxtra.contentContainer;
        report['contentContainerStyle'] = option;
        verify = _closure1_slot4;
        option = {};
        offset = foxtra.image;
        option['style'] = offset;
        output = _closure1_slot1;
        offset = 8;
        offset = sizing[offset];
        offset = output.bind(tangon)(offset);
        option['source'] = offset;
        verify = zuuluu.bind(tangon)(verify, option);
        option = new Array(4);
        option[0] = verify;
        backup = _closure1_slot3;
        offset = {};
        verify = foxtra.bodyInner;
        offset['style'] = verify;
        verify = 9;
        romeon = sizing[verify];
        romeon = kiloes.bind(tangon)(romeon);
        echoed = romeon.Text;
        result = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        romeon = foxtra.title;
        result['style'] = romeon;
        romeon = 10;
        update = sizing[romeon];
        update = kiloes.bind(tangon)(update);
        ctrled = update.intl;
        source = ctrled.string;
        update = sizing[romeon];
        update = kiloes.bind(tangon)(update);
        update = update.t;
        update = update.8O+nFx;
        update = source.bind(ctrled)(update);
        result['children'] = update;
        echoed = zuuluu.bind(tangon)(echoed, result);
        result = new Array(2);
        result[0] = echoed;
        echoed = sizing[verify];
        echoed = kiloes.bind(tangon)(echoed);
        update = echoed.Text;
        echoed = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        source = foxtra.body;
        echoed['style'] = source;
        source = sizing[romeon];
        source = kiloes.bind(tangon)(source);
        sequen = source.intl;
        vacuum = sequen.format;
        source = sizing[romeon];
        source = kiloes.bind(tangon)(source);
        source = source.t;
        ctrled = source.Zvx0Oz;
        source = {};
        source['email'] = config;
        source = vacuum.bind(sequen)(ctrled, source);
        echoed['children'] = source;
        echoed = zuuluu.bind(tangon)(update, echoed);
        result[1] = echoed;
        offset['children'] = result;
        offset = golfie.bind(tangon)(backup, offset);
        option[1] = offset;
        verify = sizing[verify];
        verify = kiloes.bind(tangon)(verify);
        offset = verify.Text;
        verify = {};
        backup = foxtra.tooltip;
        verify['style'] = backup;
        backup = 'text-sm/normal';
        verify['variant'] = backup;
        backup = sizing[romeon];
        backup = kiloes.bind(tangon)(backup);
        echoed = backup.intl;
        result = echoed.string;
        backup = sizing[romeon];
        backup = kiloes.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.yb7itb;
        backup = result.bind(echoed)(backup);
        verify['children'] = backup;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[2] = verify;
        backup = 11;
        verify = sizing[backup];
        offset = output.bind(tangon)(verify);
        verify = {};
        backup = sizing[backup];
        backup = output.bind(tangon)(backup);
        backup = backup.Sizes;
        backup = backup.MEDIUM;
        verify['size'] = backup;
        foxtra = foxtra.button;
        verify['style'] = foxtra;
        foxtra = sizing[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = sizing[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.BddRzc;
        romeon = foxtra.bind(backup)(romeon);
        verify['text'] = romeon;
        yankee = _closure1_slot10;
        verify['onPress'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[3] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();