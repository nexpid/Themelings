// app/modules/verification/native/components/EmailVerificationModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: closeModal
        zulu = _closure1_slot6;
        entity = undefined;
        zulu = zulu.bind(entity)();
        zulu = _closure1_slot1;
        tango = _closure1_slot2;
        mike = 6;
        mike = tango[mike];
        zulu = zulu.bind(entity)(mike);
        mike = zulu.close;
        mike = mike.bind(zulu)();
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    options = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(options);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.resetChangeEmailStore;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.VerificationModalScenes;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot8 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/verification/native/components/EmailVerificationModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: EmailVerificationModal
        _fun88581: for(var _fun88581_ip = 0; ; ) switch(_fun88581_ip) {
 0:
            entity = argFoo;
            report = entity.isChangeEmail;
            var _closure2_slot0 = report;
            tango = undefined;
            var _closure2_slot1 = tango;
            var _closure2_slot2 = tango;
            var _closure2_slot3 = tango;
            var _closure2_slot4 = tango;
            var _closure2_slot5 = tango;
            zulu = _closure1_slot0;
            options = _closure1_slot2;
            mike = 17;
            mike = options[mike];
            verify = zulu.bind(tango)(mike);
            golf = verify.useStateFromStores;
            mike = _closure1_slot5;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                mike = _closure1_slot5;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            mike = golf.bind(verify)(zulu, mike);
            golf = _closure1_slot1;
            zulu = 18;
            zulu = options[zulu];
            options = golf.bind(tango)(zulu);
            zulu = null;
            golf = zulu == mike;
            verify = undefined;
            if(golf) { _fun88581_ip = 123; continue _fun88581 }
 117:
            verify = mike.verified;
 123:
            golf = zulu != verify;
            if(!golf) { _fun88581_ip = 133; continue _fun88581 }
 130:
            golf = verify;
 133:
            offset = options.bind(tango)(golf);
            _closure2_slot1 = offset;
            verify = _closure1_slot4;
            golf = verify.useState;
            golf = golf.bind(verify)();
            backup = _closure1_slot3;
            foxtrot = 2;
            golf = backup.bind(tango)(golf, foxtrot);
            yankee = 0;
            romeo = golf[yankee];
            _closure2_slot2 = romeo;
            options = 1;
            golf = golf[options];
            _closure2_slot3 = golf;
            kilo = verify.useState;
            golf = '';
            golf = kilo.bind(verify)(golf);
            golf = backup.bind(tango)(golf, foxtrot);
            yankee = golf[yankee];
            _closure2_slot4 = yankee;
            golf = golf[options];
            _closure2_slot5 = golf;
            options = verify.useMemo;
            golf = new Array(4);
            golf[0] = romeo;
            golf[1] = yankee;
            golf[2] = report;
            golf[3] = offset;
            oscar = function() {
                zulu = {};
                mike = _closure2_slot1;
                zulu['initiallyVerified'] = mike;
                mike = _closure2_slot0;
                zulu['isChangeEmail'] = mike;
                mike = _closure2_slot2;
                zulu['changeEmailReason'] = mike;
                mike = _closure2_slot3;
                zulu['setChangeEmailReason'] = mike;
                mike = _closure2_slot4;
                zulu['freeTextResponse'] = mike;
                entity = _closure2_slot5;
                zulu['setFreeTextResponse'] = entity;
                mike = function(argFoo) { // Original name: getScreens
                    entity = argFoo;
                    kilo = entity.initiallyVerified;
                    mike = entity.isChangeEmail;
                    var _closure4_slot0 = mike;
                    mike = entity.changeEmailReason;
                    var _closure4_slot1 = mike;
                    mike = entity.setChangeEmailReason;
                    var _closure4_slot2 = mike;
                    mike = entity.freeTextResponse;
                    var _closure4_slot3 = mike;
                    entity = entity.setFreeTextResponse;
                    var _closure4_slot4 = entity;
                    report = {};
                    options = _closure1_slot0;
                    verify = _closure1_slot2;
                    oscar = 7;
                    entity = verify[oscar];
                    golf = undefined;
                    entity = options.bind(golf)(entity);
                    entity = entity.ImpressionGroups;
                    entity = entity.USER_ACCOUNT_EMAIL_CHANGE_FLOW;
                    report['impression_group'] = entity;
                    entity = {};
                    mike = _closure1_slot7;
                    yankee = mike.CHANGE_EMAIL_COLLECT_REASONS;
                    zulu = {};
                    offset = 8;
                    foxtrot = verify[offset];
                    backup = options.bind(golf)(foxtrot);
                    foxtrot = backup.getHeaderNoTitle;
                    foxtrot = foxtrot.bind(backup)();
                    zulu['headerTitle'] = foxtrot;
                    foxtrot = verify[offset];
                    backup = options.bind(golf)(foxtrot);
                    foxtrot = backup.getHeaderCloseButton;
                    romeo = _closure1_slot9;
                    foxtrot = foxtrot.bind(backup)(romeo);
                    zulu['headerLeft'] = foxtrot;
                    foxtrot = verify[oscar];
                    foxtrot = options.bind(golf)(foxtrot);
                    foxtrot = foxtrot.ImpressionNames;
                    foxtrot = foxtrot.USER_ACCOUNT_EMAIL_CHANGE_COLLECT_REASONS;
                    zulu['impressionName'] = foxtrot;
                    zulu['impressionProperties'] = report;
                    foxtrot = function() { // Original name: render
                        tango = _closure1_slot8;
                        mike = _closure1_slot1;
                        zulu = _closure1_slot2;
                        entity = 9;
                        entity = zulu[entity];
                        zulu = undefined;
                        mike = mike.bind(zulu)(entity);
                        entity = {};
                        oscar = _closure4_slot1;
                        entity['changeEmailReason'] = oscar;
                        oscar = _closure4_slot2;
                        entity['setChangeEmailReason'] = oscar;
                        oscar = _closure4_slot3;
                        entity['freeTextResponse'] = oscar;
                        report = _closure4_slot4;
                        entity['setFreeTextResponse'] = report;
                        entity = tango.bind(zulu)(mike, entity);
                        return entity;
                    };
                    zulu['render'] = foxtrot;
                    entity[yankee] = zulu;
                    yankee = mike.CHANGE_EMAIL_WARNING;
                    zulu = {};
                    foxtrot = verify[offset];
                    backup = options.bind(golf)(foxtrot);
                    foxtrot = backup.getHeaderNoTitle;
                    foxtrot = foxtrot.bind(backup)();
                    zulu['headerTitle'] = foxtrot;
                    foxtrot = verify[offset];
                    backup = options.bind(golf)(foxtrot);
                    foxtrot = backup.getHeaderCloseButton;
                    foxtrot = foxtrot.bind(backup)(romeo);
                    zulu['headerLeft'] = foxtrot;
                    foxtrot = verify[oscar];
                    foxtrot = options.bind(golf)(foxtrot);
                    foxtrot = foxtrot.ImpressionNames;
                    foxtrot = foxtrot.USER_ACCOUNT_EMAIL_CHANGE_WARNING;
                    zulu['impressionName'] = foxtrot;
                    zulu['impressionProperties'] = report;
                    foxtrot = function() { // Original name: render
                        tango = _closure1_slot8;
                        mike = _closure1_slot1;
                        zulu = _closure1_slot2;
                        entity = 10;
                        entity = zulu[entity];
                        zulu = undefined;
                        mike = mike.bind(zulu)(entity);
                        entity = {};
                        report = _closure4_slot1;
                        entity['changeEmailReason'] = report;
                        entity = tango.bind(zulu)(mike, entity);
                        return entity;
                    };
                    zulu['render'] = foxtrot;
                    entity[yankee] = zulu;
                    yankee = mike.RESEND_EMAIL;
                    zulu = {};
                    foxtrot = verify[offset];
                    backup = options.bind(golf)(foxtrot);
                    foxtrot = backup.getHeaderNoTitle;
                    foxtrot = foxtrot.bind(backup)();
                    zulu['headerTitle'] = foxtrot;
                    foxtrot = verify[offset];
                    backup = options.bind(golf)(foxtrot);
                    foxtrot = backup.getHeaderCloseButton;
                    foxtrot = foxtrot.bind(backup)(romeo);
                    zulu['headerLeft'] = foxtrot;
                    foxtrot = verify[oscar];
                    foxtrot = options.bind(golf)(foxtrot);
                    foxtrot = foxtrot.ImpressionNames;
                    foxtrot = foxtrot.USER_ACCOUNT_EMAIL_RESEND_VERIFICATION_EMAIL;
                    zulu['impressionName'] = foxtrot;
                    zulu['impressionProperties'] = report;
                    foxtrot = function() { // Original name: render
                        tango = _closure1_slot8;
                        mike = _closure1_slot1;
                        zulu = _closure1_slot2;
                        entity = 11;
                        entity = zulu[entity];
                        zulu = undefined;
                        mike = mike.bind(zulu)(entity);
                        entity = {};
                        entity = tango.bind(zulu)(mike, entity);
                        return entity;
                    };
                    zulu['render'] = foxtrot;
                    entity[yankee] = zulu;
                    yankee = mike.CONFIRM_EMAIL_CHANGE_START;
                    zulu = {};
                    foxtrot = verify[offset];
                    backup = options.bind(golf)(foxtrot);
                    foxtrot = backup.getHeaderNoTitle;
                    foxtrot = foxtrot.bind(backup)();
                    zulu['headerTitle'] = foxtrot;
                    foxtrot = verify[offset];
                    backup = options.bind(golf)(foxtrot);
                    foxtrot = backup.getHeaderCloseButton;
                    foxtrot = foxtrot.bind(backup)(romeo);
                    zulu['headerLeft'] = foxtrot;
                    foxtrot = verify[oscar];
                    foxtrot = options.bind(golf)(foxtrot);
                    foxtrot = foxtrot.ImpressionNames;
                    foxtrot = foxtrot.USER_ACCOUNT_EMAIL_CHANGE_SEND_CODE;
                    zulu['impressionName'] = foxtrot;
                    zulu['impressionProperties'] = report;
                    foxtrot = function() { // Original name: render
                        tango = _closure1_slot8;
                        mike = _closure1_slot1;
                        zulu = _closure1_slot2;
                        entity = 12;
                        entity = zulu[entity];
                        zulu = undefined;
                        mike = mike.bind(zulu)(entity);
                        entity = {};
                        entity = tango.bind(zulu)(mike, entity);
                        return entity;
                    };
                    zulu['render'] = foxtrot;
                    entity[yankee] = zulu;
                    yankee = mike.CONFIRM_EMAIL_CHANGE_CODE;
                    zulu = {};
                    foxtrot = verify[offset];
                    backup = options.bind(golf)(foxtrot);
                    foxtrot = backup.getHeaderNoTitle;
                    foxtrot = foxtrot.bind(backup)();
                    zulu['headerTitle'] = foxtrot;
                    foxtrot = verify[offset];
                    backup = options.bind(golf)(foxtrot);
                    foxtrot = backup.getHeaderCloseButton;
                    foxtrot = foxtrot.bind(backup)(romeo);
                    zulu['headerLeft'] = foxtrot;
                    foxtrot = verify[oscar];
                    foxtrot = options.bind(golf)(foxtrot);
                    foxtrot = foxtrot.ImpressionNames;
                    foxtrot = foxtrot.USER_ACCOUNT_EMAIL_CHANGE_VERIFY_CODE;
                    zulu['impressionName'] = foxtrot;
                    zulu['impressionProperties'] = report;
                    foxtrot = function() { // Original name: render
                        tango = _closure1_slot8;
                        mike = _closure1_slot1;
                        zulu = _closure1_slot2;
                        entity = 13;
                        entity = zulu[entity];
                        zulu = undefined;
                        mike = mike.bind(zulu)(entity);
                        entity = {};
                        report = _closure4_slot0;
                        entity['isChangeEmail'] = report;
                        entity = tango.bind(zulu)(mike, entity);
                        return entity;
                    };
                    zulu['render'] = foxtrot;
                    entity[yankee] = zulu;
                    yankee = mike.ENTER_EMAIL;
                    zulu = {};
                    foxtrot = verify[offset];
                    backup = options.bind(golf)(foxtrot);
                    foxtrot = backup.getHeaderNoTitle;
                    foxtrot = foxtrot.bind(backup)();
                    zulu['headerTitle'] = foxtrot;
                    foxtrot = verify[offset];
                    backup = options.bind(golf)(foxtrot);
                    foxtrot = backup.getHeaderCloseButton;
                    foxtrot = foxtrot.bind(backup)(romeo);
                    zulu['headerLeft'] = foxtrot;
                    foxtrot = verify[oscar];
                    foxtrot = options.bind(golf)(foxtrot);
                    foxtrot = foxtrot.ImpressionNames;
                    foxtrot = foxtrot.USER_ACCOUNT_EMAIL_CHANGE_ENTER_EMAIL;
                    zulu['impressionName'] = foxtrot;
                    foxtrot = {};
                    output = foxtrot;
                    sizing = report;
                    backup = copyDataProperties(output, sizing);
                    backup = 'email_verified';
                    foxtrot[backup] = kilo;
                    zulu['impressionProperties'] = foxtrot;
                    foxtrot = function() { // Original name: render
                        tango = _closure1_slot8;
                        mike = _closure1_slot1;
                        zulu = _closure1_slot2;
                        entity = 14;
                        entity = zulu[entity];
                        zulu = undefined;
                        mike = mike.bind(zulu)(entity);
                        entity = {};
                        oscar = _closure4_slot0;
                        entity['isChangeEmail'] = oscar;
                        oscar = _closure4_slot1;
                        entity['changeEmailReason'] = oscar;
                        report = _closure4_slot3;
                        entity['freeTextResponse'] = report;
                        entity = tango.bind(zulu)(mike, entity);
                        return entity;
                    };
                    zulu['render'] = foxtrot;
                    entity[yankee] = zulu;
                    yankee = mike.VERIFY_PASSWORD;
                    zulu = {};
                    foxtrot = verify[offset];
                    backup = options.bind(golf)(foxtrot);
                    foxtrot = backup.getHeaderNoTitle;
                    foxtrot = foxtrot.bind(backup)();
                    zulu['headerTitle'] = foxtrot;
                    foxtrot = verify[offset];
                    backup = options.bind(golf)(foxtrot);
                    foxtrot = backup.getHeaderCloseButton;
                    foxtrot = foxtrot.bind(backup)(romeo);
                    zulu['headerLeft'] = foxtrot;
                    foxtrot = verify[oscar];
                    foxtrot = options.bind(golf)(foxtrot);
                    foxtrot = foxtrot.ImpressionNames;
                    foxtrot = foxtrot.USER_ACCOUNT_PASSWORD_VERIFY;
                    zulu['impressionName'] = foxtrot;
                    zulu['impressionProperties'] = report;
                    foxtrot = function(argFoo) { // Original name: render
                        tango = _closure1_slot8;
                        mike = _closure1_slot1;
                        zulu = _closure1_slot2;
                        entity = 15;
                        entity = zulu[entity];
                        zulu = undefined;
                        mike = mike.bind(zulu)(entity);
                        entity = {};
                        oscar = argFoo;
                        golf = entity;
                        report = copyDataProperties(golf, oscar);
                        entity = tango.bind(zulu)(mike, entity);
                        return entity;
                    };
                    zulu['render'] = foxtrot;
                    entity[yankee] = zulu;
                    zulu = mike.CHANGE_EMAIL_COMPLETE;
                    mike = {};
                    yankee = verify[offset];
                    foxtrot = options.bind(golf)(yankee);
                    yankee = foxtrot.getHeaderNoTitle;
                    yankee = yankee.bind(foxtrot)();
                    mike['headerTitle'] = yankee;
                    offset = verify[offset];
                    yankee = options.bind(golf)(offset);
                    offset = yankee.getHeaderCloseButton;
                    offset = offset.bind(yankee)(romeo);
                    mike['headerLeft'] = offset;
                    oscar = verify[oscar];
                    oscar = options.bind(golf)(oscar);
                    oscar = oscar.ImpressionNames;
                    oscar = oscar.USER_ACCOUNT_EMAIL_CHANGE_COMPLETE;
                    mike['impressionName'] = oscar;
                    mike['impressionProperties'] = report;
                    tango = function(argFoo) { // Original name: render
                        tango = _closure1_slot8;
                        mike = _closure1_slot1;
                        zulu = _closure1_slot2;
                        entity = 16;
                        entity = zulu[entity];
                        zulu = undefined;
                        mike = mike.bind(zulu)(entity);
                        entity = {};
                        oscar = argFoo;
                        golf = entity;
                        report = copyDataProperties(golf, oscar);
                        entity = tango.bind(zulu)(mike, entity);
                        return entity;
                    };
                    mike['render'] = tango;
                    entity[zulu] = mike;
                    return entity;
                };
                entity = undefined;
                entity = mike.bind(entity)(zulu);
                return entity;
            };
            oscar = options.bind(verify)(oscar, golf);
            if(report) { _fun88581_ip = 297; continue _fun88581 }
 266:
            golf = zulu == mike;
            report = undefined;
            if(golf) { _fun88581_ip = 281; continue _fun88581 }
 275:
            report = mike.email;
 281:
            if(!(zulu != report)) { _fun88581_ip = 297; continue _fun88581 }
 285:
            report = _closure1_slot7;
            report = report.RESEND_EMAIL;
            _fun88581_ip = 335; continue _fun88581;
 297:
            if(!(zulu != mike)) { _fun88581_ip = 310; continue _fun88581 }
 301:
            mike = mike.verified;
            if(mike) { _fun88581_ip = 322; continue _fun88581 }
 310:
            mike = _closure1_slot7;
            mike = mike.ENTER_EMAIL;
            _fun88581_ip = 332; continue _fun88581;
 322:
            zulu = _closure1_slot7;
            mike = zulu.CONFIRM_EMAIL_CHANGE_START;
 332:
            report = mike;
 335:
            zulu = _closure1_slot8;
            options = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 19;
            entity = verify[entity];
            entity = options.bind(tango)(entity);
            mike = entity.Navigator;
            entity = {};
            entity['screens'] = oscar;
            entity['initialRouteName'] = report;
            report = 20;
            oscar = verify[report];
            oscar = options.bind(tango)(oscar);
            golf = oscar.intl;
            oscar = golf.string;
            report = verify[report];
            report = options.bind(tango)(report);
            report = report.t;
            report = report.13/7kZ;
            report = oscar.bind(golf)(report);
            entity['headerBackTitle'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();