// app/modules/verification/native/components/EmailVerificationModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: closeModal
        zuuluu = _closure1_slot6;
        entity = undefined;
        zuuluu = zuuluu.bind(entity)();
        zuuluu = _closure1_slot1;
        tangon = _closure1_slot2;
        michal = 6;
        michal = tangon[michal];
        zuuluu = zuuluu.bind(entity)(michal);
        michal = zuuluu.close;
        michal = michal.bind(zuuluu)();
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    option = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.resetChangeEmailStore;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.VerificationModalScenes;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot8 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/verification/native/components/EmailVerificationModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: EmailVerificationModal
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            report = entity.isChangeEmail;
            var _closure2_slot0 = report;
            tangon = undefined;
            var _closure2_slot1 = tangon;
            var _closure2_slot2 = tangon;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            var _closure2_slot5 = tangon;
            zuuluu = _closure1_slot0;
            option = _closure1_slot2;
            michal = 17;
            michal = option[michal];
            verify = zuuluu.bind(tangon)(michal);
            golfie = verify.useStateFromStores;
            michal = _closure1_slot5;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                michal = _closure1_slot5;
                entity = michal.getCurrentUser;
                entity = entity.bind(michal)();
                return entity;
            };
            michal = golfie.bind(verify)(zuuluu, michal);
            golfie = _closure1_slot1;
            zuuluu = 18;
            zuuluu = option[zuuluu];
            option = golfie.bind(tangon)(zuuluu);
            zuuluu = null;
            golfie = zuuluu == michal;
            verify = undefined;
            if(golfie) { _fun00002_ip = 123; continue _fun00001 }
 117:
            verify = michal.verified;
 123:
            golfie = zuuluu != verify;
            if(!golfie) { _fun00002_ip = 133; continue _fun00001 }
 130:
            golfie = verify;
 133:
            offset = option.bind(tangon)(golfie);
            _closure2_slot1 = offset;
            verify = _closure1_slot4;
            golfie = verify.useState;
            golfie = golfie.bind(verify)();
            backup = _closure1_slot3;
            foxtra = 2;
            golfie = backup.bind(tangon)(golfie, foxtra);
            yankee = 0;
            romeon = golfie[yankee];
            _closure2_slot2 = romeon;
            option = 1;
            golfie = golfie[option];
            _closure2_slot3 = golfie;
            kiloes = verify.useState;
            golfie = '';
            golfie = kiloes.bind(verify)(golfie);
            golfie = backup.bind(tangon)(golfie, foxtra);
            yankee = golfie[yankee];
            _closure2_slot4 = yankee;
            golfie = golfie[option];
            _closure2_slot5 = golfie;
            option = verify.useMemo;
            golfie = new Array(4);
            golfie[0] = romeon;
            golfie[1] = yankee;
            golfie[2] = report;
            golfie[3] = offset;
            oscard = function() {
                zuuluu = {};
                michal = _closure2_slot1;
                zuuluu['initiallyVerified'] = michal;
                michal = _closure2_slot0;
                zuuluu['isChangeEmail'] = michal;
                michal = _closure2_slot2;
                zuuluu['changeEmailReason'] = michal;
                michal = _closure2_slot3;
                zuuluu['setChangeEmailReason'] = michal;
                michal = _closure2_slot4;
                zuuluu['freeTextResponse'] = michal;
                entity = _closure2_slot5;
                zuuluu['setFreeTextResponse'] = entity;
                michal = function(argFoo) { // Original name: getScreens
                    entity = argFoo;
                    kiloes = entity.initiallyVerified;
                    michal = entity.isChangeEmail;
                    var _closure4_slot0 = michal;
                    michal = entity.changeEmailReason;
                    var _closure4_slot1 = michal;
                    michal = entity.setChangeEmailReason;
                    var _closure4_slot2 = michal;
                    michal = entity.freeTextResponse;
                    var _closure4_slot3 = michal;
                    entity = entity.setFreeTextResponse;
                    var _closure4_slot4 = entity;
                    report = {};
                    option = _closure1_slot0;
                    verify = _closure1_slot2;
                    oscard = 7;
                    entity = verify[oscard];
                    golfie = undefined;
                    entity = option.bind(golfie)(entity);
                    entity = entity.ImpressionGroups;
                    entity = entity.USER_ACCOUNT_EMAIL_CHANGE_FLOW;
                    report['impression_group'] = entity;
                    entity = {};
                    michal = _closure1_slot7;
                    yankee = michal.CHANGE_EMAIL_COLLECT_REASONS;
                    zuuluu = {};
                    offset = 8;
                    foxtra = verify[offset];
                    backup = option.bind(golfie)(foxtra);
                    foxtra = backup.getHeaderNoTitle;
                    foxtra = foxtra.bind(backup)();
                    zuuluu['headerTitle'] = foxtra;
                    foxtra = verify[offset];
                    backup = option.bind(golfie)(foxtra);
                    foxtra = backup.getHeaderCloseButton;
                    romeon = _closure1_slot9;
                    foxtra = foxtra.bind(backup)(romeon);
                    zuuluu['headerLeft'] = foxtra;
                    foxtra = verify[oscard];
                    foxtra = option.bind(golfie)(foxtra);
                    foxtra = foxtra.ImpressionNames;
                    foxtra = foxtra.USER_ACCOUNT_EMAIL_CHANGE_COLLECT_REASONS;
                    zuuluu['impressionName'] = foxtra;
                    zuuluu['impressionProperties'] = report;
                    foxtra = function() { // Original name: render
                        tangon = _closure1_slot8;
                        michal = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 9;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)(entity);
                        entity = {};
                        oscard = _closure4_slot1;
                        entity['changeEmailReason'] = oscard;
                        oscard = _closure4_slot2;
                        entity['setChangeEmailReason'] = oscard;
                        oscard = _closure4_slot3;
                        entity['freeTextResponse'] = oscard;
                        report = _closure4_slot4;
                        entity['setFreeTextResponse'] = report;
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    zuuluu['render'] = foxtra;
                    entity[yankee] = zuuluu;
                    yankee = michal.CHANGE_EMAIL_WARNING;
                    zuuluu = {};
                    foxtra = verify[offset];
                    backup = option.bind(golfie)(foxtra);
                    foxtra = backup.getHeaderNoTitle;
                    foxtra = foxtra.bind(backup)();
                    zuuluu['headerTitle'] = foxtra;
                    foxtra = verify[offset];
                    backup = option.bind(golfie)(foxtra);
                    foxtra = backup.getHeaderCloseButton;
                    foxtra = foxtra.bind(backup)(romeon);
                    zuuluu['headerLeft'] = foxtra;
                    foxtra = verify[oscard];
                    foxtra = option.bind(golfie)(foxtra);
                    foxtra = foxtra.ImpressionNames;
                    foxtra = foxtra.USER_ACCOUNT_EMAIL_CHANGE_WARNING;
                    zuuluu['impressionName'] = foxtra;
                    zuuluu['impressionProperties'] = report;
                    foxtra = function() { // Original name: render
                        tangon = _closure1_slot8;
                        michal = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 10;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)(entity);
                        entity = {};
                        report = _closure4_slot1;
                        entity['changeEmailReason'] = report;
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    zuuluu['render'] = foxtra;
                    entity[yankee] = zuuluu;
                    yankee = michal.RESEND_EMAIL;
                    zuuluu = {};
                    foxtra = verify[offset];
                    backup = option.bind(golfie)(foxtra);
                    foxtra = backup.getHeaderNoTitle;
                    foxtra = foxtra.bind(backup)();
                    zuuluu['headerTitle'] = foxtra;
                    foxtra = verify[offset];
                    backup = option.bind(golfie)(foxtra);
                    foxtra = backup.getHeaderCloseButton;
                    foxtra = foxtra.bind(backup)(romeon);
                    zuuluu['headerLeft'] = foxtra;
                    foxtra = verify[oscard];
                    foxtra = option.bind(golfie)(foxtra);
                    foxtra = foxtra.ImpressionNames;
                    foxtra = foxtra.USER_ACCOUNT_EMAIL_RESEND_VERIFICATION_EMAIL;
                    zuuluu['impressionName'] = foxtra;
                    zuuluu['impressionProperties'] = report;
                    foxtra = function() { // Original name: render
                        tangon = _closure1_slot8;
                        michal = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 11;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)(entity);
                        entity = {};
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    zuuluu['render'] = foxtra;
                    entity[yankee] = zuuluu;
                    yankee = michal.CONFIRM_EMAIL_CHANGE_START;
                    zuuluu = {};
                    foxtra = verify[offset];
                    backup = option.bind(golfie)(foxtra);
                    foxtra = backup.getHeaderNoTitle;
                    foxtra = foxtra.bind(backup)();
                    zuuluu['headerTitle'] = foxtra;
                    foxtra = verify[offset];
                    backup = option.bind(golfie)(foxtra);
                    foxtra = backup.getHeaderCloseButton;
                    foxtra = foxtra.bind(backup)(romeon);
                    zuuluu['headerLeft'] = foxtra;
                    foxtra = verify[oscard];
                    foxtra = option.bind(golfie)(foxtra);
                    foxtra = foxtra.ImpressionNames;
                    foxtra = foxtra.USER_ACCOUNT_EMAIL_CHANGE_SEND_CODE;
                    zuuluu['impressionName'] = foxtra;
                    zuuluu['impressionProperties'] = report;
                    foxtra = function() { // Original name: render
                        tangon = _closure1_slot8;
                        michal = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 12;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)(entity);
                        entity = {};
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    zuuluu['render'] = foxtra;
                    entity[yankee] = zuuluu;
                    yankee = michal.CONFIRM_EMAIL_CHANGE_CODE;
                    zuuluu = {};
                    foxtra = verify[offset];
                    backup = option.bind(golfie)(foxtra);
                    foxtra = backup.getHeaderNoTitle;
                    foxtra = foxtra.bind(backup)();
                    zuuluu['headerTitle'] = foxtra;
                    foxtra = verify[offset];
                    backup = option.bind(golfie)(foxtra);
                    foxtra = backup.getHeaderCloseButton;
                    foxtra = foxtra.bind(backup)(romeon);
                    zuuluu['headerLeft'] = foxtra;
                    foxtra = verify[oscard];
                    foxtra = option.bind(golfie)(foxtra);
                    foxtra = foxtra.ImpressionNames;
                    foxtra = foxtra.USER_ACCOUNT_EMAIL_CHANGE_VERIFY_CODE;
                    zuuluu['impressionName'] = foxtra;
                    zuuluu['impressionProperties'] = report;
                    foxtra = function() { // Original name: render
                        tangon = _closure1_slot8;
                        michal = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 13;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)(entity);
                        entity = {};
                        report = _closure4_slot0;
                        entity['isChangeEmail'] = report;
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    zuuluu['render'] = foxtra;
                    entity[yankee] = zuuluu;
                    yankee = michal.ENTER_EMAIL;
                    zuuluu = {};
                    foxtra = verify[offset];
                    backup = option.bind(golfie)(foxtra);
                    foxtra = backup.getHeaderNoTitle;
                    foxtra = foxtra.bind(backup)();
                    zuuluu['headerTitle'] = foxtra;
                    foxtra = verify[offset];
                    backup = option.bind(golfie)(foxtra);
                    foxtra = backup.getHeaderCloseButton;
                    foxtra = foxtra.bind(backup)(romeon);
                    zuuluu['headerLeft'] = foxtra;
                    foxtra = verify[oscard];
                    foxtra = option.bind(golfie)(foxtra);
                    foxtra = foxtra.ImpressionNames;
                    foxtra = foxtra.USER_ACCOUNT_EMAIL_CHANGE_ENTER_EMAIL;
                    zuuluu['impressionName'] = foxtra;
                    foxtra = {};
                    output = foxtra;
                    sizing = report;
                    backup = copyDataProperties(output, sizing);
                    backup = 'email_verified';
                    foxtra[backup] = kiloes;
                    zuuluu['impressionProperties'] = foxtra;
                    foxtra = function() { // Original name: render
                        tangon = _closure1_slot8;
                        michal = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 14;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)(entity);
                        entity = {};
                        oscard = _closure4_slot0;
                        entity['isChangeEmail'] = oscard;
                        oscard = _closure4_slot1;
                        entity['changeEmailReason'] = oscard;
                        report = _closure4_slot3;
                        entity['freeTextResponse'] = report;
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    zuuluu['render'] = foxtra;
                    entity[yankee] = zuuluu;
                    yankee = michal.VERIFY_PASSWORD;
                    zuuluu = {};
                    foxtra = verify[offset];
                    backup = option.bind(golfie)(foxtra);
                    foxtra = backup.getHeaderNoTitle;
                    foxtra = foxtra.bind(backup)();
                    zuuluu['headerTitle'] = foxtra;
                    foxtra = verify[offset];
                    backup = option.bind(golfie)(foxtra);
                    foxtra = backup.getHeaderCloseButton;
                    foxtra = foxtra.bind(backup)(romeon);
                    zuuluu['headerLeft'] = foxtra;
                    foxtra = verify[oscard];
                    foxtra = option.bind(golfie)(foxtra);
                    foxtra = foxtra.ImpressionNames;
                    foxtra = foxtra.USER_ACCOUNT_PASSWORD_VERIFY;
                    zuuluu['impressionName'] = foxtra;
                    zuuluu['impressionProperties'] = report;
                    foxtra = function(argFoo) { // Original name: render
                        tangon = _closure1_slot8;
                        michal = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 15;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)(entity);
                        entity = {};
                        oscard = argFoo;
                        golfie = entity;
                        report = copyDataProperties(golfie, oscard);
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    zuuluu['render'] = foxtra;
                    entity[yankee] = zuuluu;
                    zuuluu = michal.CHANGE_EMAIL_COMPLETE;
                    michal = {};
                    yankee = verify[offset];
                    foxtra = option.bind(golfie)(yankee);
                    yankee = foxtra.getHeaderNoTitle;
                    yankee = yankee.bind(foxtra)();
                    michal['headerTitle'] = yankee;
                    offset = verify[offset];
                    yankee = option.bind(golfie)(offset);
                    offset = yankee.getHeaderCloseButton;
                    offset = offset.bind(yankee)(romeon);
                    michal['headerLeft'] = offset;
                    oscard = verify[oscard];
                    oscard = option.bind(golfie)(oscard);
                    oscard = oscard.ImpressionNames;
                    oscard = oscard.USER_ACCOUNT_EMAIL_CHANGE_COMPLETE;
                    michal['impressionName'] = oscard;
                    michal['impressionProperties'] = report;
                    tangon = function(argFoo) { // Original name: render
                        tangon = _closure1_slot8;
                        michal = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 16;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)(entity);
                        entity = {};
                        oscard = argFoo;
                        golfie = entity;
                        report = copyDataProperties(golfie, oscard);
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    michal['render'] = tangon;
                    entity[zuuluu] = michal;
                    return entity;
                };
                entity = undefined;
                entity = michal.bind(entity)(zuuluu);
                return entity;
            };
            oscard = option.bind(verify)(oscard, golfie);
            if(report) { _fun00002_ip = 297; continue _fun00001 }
 266:
            golfie = zuuluu == michal;
            report = undefined;
            if(golfie) { _fun00002_ip = 281; continue _fun00001 }
 275:
            report = michal.email;
 281:
            if(!(zuuluu != report)) { _fun00002_ip = 297; continue _fun00001 }
 285:
            report = _closure1_slot7;
            report = report.RESEND_EMAIL;
            _fun00002_ip = 335; continue _fun00001;
 297:
            if(!(zuuluu != michal)) { _fun00002_ip = 310; continue _fun00001 }
 301:
            michal = michal.verified;
            if(michal) { _fun00002_ip = 322; continue _fun00001 }
 310:
            michal = _closure1_slot7;
            michal = michal.ENTER_EMAIL;
            _fun00002_ip = 332; continue _fun00001;
 322:
            zuuluu = _closure1_slot7;
            michal = zuuluu.CONFIRM_EMAIL_CHANGE_START;
 332:
            report = michal;
 335:
            zuuluu = _closure1_slot8;
            option = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 19;
            entity = verify[entity];
            entity = option.bind(tangon)(entity);
            michal = entity.Navigator;
            entity = {};
            entity['screens'] = oscard;
            entity['initialRouteName'] = report;
            report = 20;
            oscard = verify[report];
            oscard = option.bind(tangon)(oscard);
            golfie = oscard.intl;
            oscard = golfie.string;
            report = verify[report];
            report = option.bind(tangon)(report);
            report = report.t;
            report = report.13/7kZ;
            report = oscard.bind(golfie)(report);
            entity['headerBackTitle'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();