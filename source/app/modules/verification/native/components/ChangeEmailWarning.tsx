// app/modules/verification/native/components/ChangeEmailWarning.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    golfie = tangon.Image;
    var _closure1_slot5 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot6 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.COMMON_SCAMS_EDUCATION_HC_ARTICLE;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot9 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot11 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'padding': null, 'alignItems': 'center', 'justifyContent': 'center'};
    offset = 7;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['padding'] = romeon;
    romeon = 'center';
    tangon['container'] = verify;
    verify = {'height': 190, 'width': 220, 'resizeMode': 'contain'};
    tangon['image'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['marginTop'] = foxtra;
    tangon['title'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['marginTop'] = foxtra;
    verify['textAlign'] = romeon;
    tangon['body'] = verify;
    verify = {};
    romeon = 'row';
    verify['flexDirection'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['gap'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['marginTop'] = offset;
    tangon['buttonContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 19;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/verification/native/components/ChangeEmailWarning.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ChangeEmailWarning
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.changeEmailReason;
            var _closure2_slot0 = entity;
            michal = _closure1_slot12;
            report = undefined;
            foxtra = michal.bind(report)();
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            michal = 8;
            michal = tangon[michal];
            oscard = zuuluu.bind(report)(michal);
            michal = oscard.useNavigation;
            golfie = michal.bind(oscard)();
            var _closure2_slot1 = golfie;
            michal = 9;
            michal = tangon[michal];
            oscard = zuuluu.bind(report)(michal);
            tangon = oscard.useStateFromStores;
            michal = _closure1_slot7;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                michal = _closure1_slot7;
                entity = michal.getCurrentUser;
                entity = entity.bind(michal)();
                return entity;
            };
            michal = tangon.bind(oscard)(zuuluu, michal);
            oscard = _closure1_slot3;
            tangon = oscard.useCallback;
            zuuluu = new Array(2);
            zuuluu[0] = golfie;
            zuuluu[1] = entity;
            entity = function() {
                tangon = _closure1_slot1;
                oscard = _closure1_slot2;
                entity = 10;
                zuuluu = oscard[entity];
                entity = undefined;
                option = tangon.bind(entity)(zuuluu);
                golfie = option.track;
                zuuluu = _closure1_slot9;
                report = zuuluu.USER_ACCOUNT_EMAIL_CHANGE_WARNING_CONTINUE;
                tangon = {};
                verify = _closure2_slot0;
                tangon['change_email_reason_enum'] = verify;
                tangon = golfie.bind(option)(report, tangon);
                tangon = _closure2_slot1;
                zuuluu = tangon.push;
                report = _closure1_slot0;
                michal = 11;
                michal = oscard[michal];
                michal = report.bind(entity)(michal);
                michal = michal.VerificationModalScenes;
                michal = michal.ENTER_EMAIL;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            result = tangon.bind(oscard)(entity, zuuluu);
            entity = null;
            michal = entity == michal;
            if(michal) { _fun00002_ip = 815; continue _fun00001 }
 146:
            tangon = _closure1_slot10;
            update = _closure1_slot0;
            source = _closure1_slot2;
            michal = 12;
            michal = source[michal];
            michal = update.bind(report)(michal);
            zuuluu = michal.RedesignCompat;
            michal = {};
            golfie = _closure1_slot6;
            oscard = {'keyboardShouldPersistTaps': 'handled', 'alwaysBounceVertical': false};
            offset = _closure1_slot11;
            verify = _closure1_slot4;
            option = {};
            yankee = foxtra.container;
            option['style'] = yankee;
            romeon = _closure1_slot5;
            yankee = {};
            backup = foxtra.image;
            yankee['style'] = backup;
            kiloes = _closure1_slot1;
            backup = 13;
            backup = source[backup];
            backup = kiloes.bind(report)(backup);
            yankee['source'] = backup;
            romeon = tangon.bind(report)(romeon, yankee);
            yankee = new Array(4);
            yankee[0] = romeon;
            romeon = 14;
            romeon = source[romeon];
            romeon = update.bind(report)(romeon);
            backup = romeon.Text;
            romeon = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            kiloes = foxtra.title;
            romeon['style'] = kiloes;
            output = 15;
            kiloes = source[output];
            kiloes = update.bind(report)(kiloes);
            ctrled = kiloes.intl;
            echoed = ctrled.string;
            kiloes = source[output];
            kiloes = update.bind(report)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.hhR7gY;
            kiloes = echoed.bind(ctrled)(kiloes);
            romeon['children'] = kiloes;
            romeon = tangon.bind(report)(backup, romeon);
            yankee[1] = romeon;
            romeon = 16;
            romeon = source[romeon];
            romeon = update.bind(report)(romeon);
            backup = romeon.TextWithIOSLinkWorkaround;
            romeon = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-md/normal', 'color': 'header-primary'};
            kiloes = foxtra.body;
            romeon['style'] = kiloes;
            kiloes = source[output];
            kiloes = update.bind(report)(kiloes);
            vacuum = kiloes.intl;
            ctrled = vacuum.format;
            kiloes = source[output];
            kiloes = update.bind(report)(kiloes);
            kiloes = kiloes.t;
            echoed = kiloes.rqWXUV;
            kiloes = {};
            sequen = _closure1_slot8;
            kiloes['hcArticle'] = sequen;
            echoed = ctrled.bind(vacuum)(echoed, kiloes);
            kiloes = new Array(3);
            kiloes[0] = echoed;
            echoed = '\n\n';
            kiloes[1] = echoed;
            echoed = source[output];
            echoed = update.bind(report)(echoed);
            vacuum = echoed.intl;
            ctrled = vacuum.string;
            echoed = source[output];
            echoed = update.bind(report)(echoed);
            echoed = echoed.t;
            echoed = echoed.3LW10N;
            echoed = ctrled.bind(vacuum)(echoed);
            kiloes[2] = echoed;
            romeon['children'] = kiloes;
            romeon = offset.bind(report)(backup, romeon);
            yankee[2] = romeon;
            romeon = {};
            foxtra = foxtra.buttonContainer;
            romeon['style'] = foxtra;
            backup = 17;
            foxtra = source[backup];
            foxtra = update.bind(report)(foxtra);
            kiloes = foxtra.Button;
            foxtra = {'size': 'md', 'variant': 'tertiary', 'text': null, 'onPress': null, 'shrink': true};
            echoed = source[output];
            echoed = update.bind(report)(echoed);
            vacuum = echoed.intl;
            ctrled = vacuum.string;
            echoed = source[output];
            echoed = update.bind(report)(echoed);
            echoed = echoed.t;
            echoed = echoed.rwTBFh;
            echoed = ctrled.bind(vacuum)(echoed);
            foxtra['text'] = echoed;
            foxtra['onPress'] = result;
            kiloes = tangon.bind(report)(kiloes, foxtra);
            foxtra = new Array(2);
            foxtra[0] = kiloes;
            backup = source[backup];
            backup = update.bind(report)(backup);
            kiloes = backup.Button;
            backup = {'size': 'md', 'variant': 'primary', 'text': null, 'onPress': null, 'shrink': true};
            result = source[output];
            result = update.bind(report)(result);
            echoed = result.intl;
            result = echoed.string;
            output = source[output];
            output = update.bind(report)(output);
            output = output.t;
            output = output.ETE/oK;
            output = result.bind(echoed)(output);
            backup['text'] = output;
            sizing = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 18;
                michal = michal[entity];
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                entity = michal.close;
                entity = entity.bind(michal)();
                return entity;
            };
            backup['onPress'] = sizing;
            backup = tangon.bind(report)(kiloes, backup);
            foxtra[1] = backup;
            romeon['children'] = foxtra;
            romeon = offset.bind(report)(verify, romeon);
            yankee[3] = romeon;
            option['children'] = yankee;
            option = offset.bind(report)(verify, option);
            oscard['children'] = option;
            oscard = tangon.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 815:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();