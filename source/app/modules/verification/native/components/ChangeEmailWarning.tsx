// app/modules/verification/native/components/ChangeEmailWarning.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot4 = golf;
    golf = tango.Image;
    var _closure1_slot5 = golf;
    tango = tango.ScrollView;
    var _closure1_slot6 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.COMMON_SCAMS_EDUCATION_HC_ARTICLE;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot9 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot10 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot11 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'padding': null, 'alignItems': 'center', 'justifyContent': 'center'};
    offset = 7;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['padding'] = romeo;
    romeo = 'center';
    tango['container'] = verify;
    verify = {'height': 190, 'width': 220, 'resizeMode': 'contain'};
    tango['image'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['marginTop'] = foxtrot;
    tango['title'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['marginTop'] = foxtrot;
    verify['textAlign'] = romeo;
    tango['body'] = verify;
    verify = {};
    romeo = 'row';
    verify['flexDirection'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_8;
    verify['gap'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['marginTop'] = offset;
    tango['buttonContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot12 = tango;
    tango = 19;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/verification/native/components/ChangeEmailWarning.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ChangeEmailWarning
        _fun88627: for(var _fun88627_ip = 0; ; ) switch(_fun88627_ip) {
 0:
            entity = argFoo;
            entity = entity.changeEmailReason;
            var _closure2_slot0 = entity;
            mike = _closure1_slot12;
            report = undefined;
            foxtrot = mike.bind(report)();
            zulu = _closure1_slot0;
            tango = _closure1_slot2;
            mike = 8;
            mike = tango[mike];
            oscar = zulu.bind(report)(mike);
            mike = oscar.useNavigation;
            golf = mike.bind(oscar)();
            var _closure2_slot1 = golf;
            mike = 9;
            mike = tango[mike];
            oscar = zulu.bind(report)(mike);
            tango = oscar.useStateFromStores;
            mike = _closure1_slot7;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                mike = _closure1_slot7;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            mike = tango.bind(oscar)(zulu, mike);
            oscar = _closure1_slot3;
            tango = oscar.useCallback;
            zulu = new Array(2);
            zulu[0] = golf;
            zulu[1] = entity;
            entity = function() {
                tango = _closure1_slot1;
                oscar = _closure1_slot2;
                entity = 10;
                zulu = oscar[entity];
                entity = undefined;
                options = tango.bind(entity)(zulu);
                golf = options.track;
                zulu = _closure1_slot9;
                report = zulu.USER_ACCOUNT_EMAIL_CHANGE_WARNING_CONTINUE;
                tango = {};
                verify = _closure2_slot0;
                tango['change_email_reason_enum'] = verify;
                tango = golf.bind(options)(report, tango);
                tango = _closure2_slot1;
                zulu = tango.push;
                report = _closure1_slot0;
                mike = 11;
                mike = oscar[mike];
                mike = report.bind(entity)(mike);
                mike = mike.VerificationModalScenes;
                mike = mike.ENTER_EMAIL;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            result = tango.bind(oscar)(entity, zulu);
            entity = null;
            mike = entity == mike;
            if(mike) { _fun88627_ip = 813; continue _fun88627 }
 150:
            tango = _closure1_slot10;
            update = _closure1_slot0;
            source = _closure1_slot2;
            mike = 12;
            mike = source[mike];
            mike = update.bind(report)(mike);
            zulu = mike.RedesignCompat;
            mike = {};
            golf = _closure1_slot6;
            oscar = {'keyboardShouldPersistTaps': 'handled', 'alwaysBounceVertical': false};
            offset = _closure1_slot11;
            verify = _closure1_slot4;
            options = {};
            yankee = foxtrot.container;
            options['style'] = yankee;
            romeo = _closure1_slot5;
            yankee = {};
            backup = foxtrot.image;
            yankee['style'] = backup;
            kilo = _closure1_slot1;
            backup = 13;
            backup = source[backup];
            backup = kilo.bind(report)(backup);
            yankee['source'] = backup;
            romeo = tango.bind(report)(romeo, yankee);
            yankee = new Array(4);
            yankee[0] = romeo;
            romeo = 14;
            romeo = source[romeo];
            romeo = update.bind(report)(romeo);
            backup = romeo.Text;
            romeo = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            kilo = foxtrot.title;
            romeo['style'] = kilo;
            output = 15;
            kilo = source[output];
            kilo = update.bind(report)(kilo);
            control = kilo.intl;
            echo = control.string;
            kilo = source[output];
            kilo = update.bind(report)(kilo);
            kilo = kilo.t;
            kilo = kilo.hhR7gY;
            kilo = echo.bind(control)(kilo);
            romeo['children'] = kilo;
            romeo = tango.bind(report)(backup, romeo);
            yankee[1] = romeo;
            romeo = 16;
            romeo = source[romeo];
            romeo = update.bind(report)(romeo);
            backup = romeo.TextWithIOSLinkWorkaround;
            romeo = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-md/normal', 'color': 'header-primary'};
            kilo = foxtrot.body;
            romeo['style'] = kilo;
            kilo = source[output];
            kilo = update.bind(report)(kilo);
            vacuum = kilo.intl;
            control = vacuum.format;
            kilo = source[output];
            kilo = update.bind(report)(kilo);
            kilo = kilo.t;
            echo = kilo.rqWXUV;
            kilo = {};
            sequence = _closure1_slot8;
            kilo['hcArticle'] = sequence;
            echo = control.bind(vacuum)(echo, kilo);
            kilo = new Array(3);
            kilo[0] = echo;
            echo = '\n\n';
            kilo[1] = echo;
            echo = source[output];
            echo = update.bind(report)(echo);
            vacuum = echo.intl;
            control = vacuum.string;
            echo = source[output];
            echo = update.bind(report)(echo);
            echo = echo.t;
            echo = echo.3LW10N;
            echo = control.bind(vacuum)(echo);
            kilo[2] = echo;
            romeo['children'] = kilo;
            romeo = offset.bind(report)(backup, romeo);
            yankee[2] = romeo;
            romeo = {};
            foxtrot = foxtrot.buttonContainer;
            romeo['style'] = foxtrot;
            backup = 17;
            foxtrot = source[backup];
            foxtrot = update.bind(report)(foxtrot);
            kilo = foxtrot.Button;
            foxtrot = {'size': 'md', 'variant': 'tertiary', 'text': null, 'onPress': null, 'shrink': true};
            echo = source[output];
            echo = update.bind(report)(echo);
            vacuum = echo.intl;
            control = vacuum.string;
            echo = source[output];
            echo = update.bind(report)(echo);
            echo = echo.t;
            echo = echo.rwTBFh;
            echo = control.bind(vacuum)(echo);
            foxtrot['text'] = echo;
            foxtrot['onPress'] = result;
            kilo = tango.bind(report)(kilo, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = kilo;
            backup = source[backup];
            backup = update.bind(report)(backup);
            kilo = backup.Button;
            backup = {'size': 'md', 'variant': 'primary', 'text': null, 'onPress': null, 'shrink': true};
            result = source[output];
            result = update.bind(report)(result);
            echo = result.intl;
            result = echo.string;
            output = source[output];
            output = update.bind(report)(output);
            output = output.t;
            output = output.ETE/oK;
            output = result.bind(echo)(output);
            backup['text'] = output;
            sizing = function() { // Original name: onPress
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 18;
                mike = mike[entity];
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                entity = mike.close;
                entity = entity.bind(mike)();
                return entity;
            };
            backup['onPress'] = sizing;
            backup = tango.bind(report)(kilo, backup);
            foxtrot[1] = backup;
            romeo['children'] = foxtrot;
            romeo = offset.bind(report)(verify, romeo);
            yankee[3] = romeo;
            options['children'] = yankee;
            options = offset.bind(report)(verify, options);
            oscar['children'] = options;
            oscar = tango.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 813:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();