// app/modules/verification/native/components/EnterEmail.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    golf = argCorge;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = golf;
    var _closure1_slot3 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot7 = golf;
    tango = tango.ScrollView;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.useChangeEmailError;
    var _closure1_slot10 = golf;
    golf = tango.useChangeEmailStore;
    var _closure1_slot11 = golf;
    tango = tango.ChangeEmailFields;
    var _closure1_slot12 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot13 = tango;
    tango = 7;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot14 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot15 = tango;
    tango = 8;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 9;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = offset;
    tango['background'] = verify;
    offset = 16;
    verify = {'paddingVertical': 12, 'paddingHorizontal': 16};
    tango['container'] = verify;
    verify = {};
    yankee = 'center';
    verify['textAlign'] = yankee;
    tango['title'] = verify;
    verify = {'marginTop': 8, 'lineHeight': 18, 'textAlign': 'center'};
    tango['prompt'] = verify;
    verify = {};
    yankee = 24;
    verify['marginTop'] = yankee;
    tango['input'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tango['button'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot16 = tango;
    tango = 20;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/verification/native/components/EnterEmail.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: EnterEmail
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = argFoo;
            options = mike.isChangeEmail;
            var _closure2_slot0 = options;
            golf = mike.changeEmailReason;
            var _closure2_slot1 = golf;
            oscar = mike.freeTextResponse;
            var _closure2_slot2 = oscar;
            mike = _closure1_slot16;
            report = undefined;
            result = mike.bind(report)();
            zulu = _closure1_slot0;
            tango = _closure1_slot3;
            mike = 10;
            mike = tango[mike];
            verify = zulu.bind(report)(mike);
            mike = verify.useNavigation;
            romeo = mike.bind(verify)();
            var _closure2_slot3 = romeo;
            mike = 11;
            mike = tango[mike];
            verify = zulu.bind(report)(mike);
            tango = verify.useStateFromStores;
            mike = _closure1_slot9;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                mike = _closure1_slot9;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            backup = tango.bind(verify)(zulu, mike);
            var _closure2_slot4 = backup;
            tango = _closure1_slot6;
            mike = tango.useState;
            foxtrot = '';
            mike = mike.bind(tango)(foxtrot);
            yankee = _closure1_slot5;
            offset = 2;
            mike = yankee.bind(report)(mike, offset);
            verify = 0;
            kilo = mike[verify];
            var _closure2_slot5 = kilo;
            zulu = 1;
            vacuum = mike[zulu];
            sizing = _closure1_slot10;
            mike = _closure1_slot12;
            mike = mike.EMAIL;
            mike = sizing.bind(report)(mike);
            mike = yankee.bind(report)(mike, offset);
            echo = mike[verify];
            yankee = mike[zulu];
            var _closure2_slot6 = yankee;
            mike = _closure1_slot11;
            mike = mike.bind(report)();
            offset = mike.emailToken;
            var _closure2_slot7 = offset;
            verify = tango.useCallback;
            zulu = new Array(1);
            zulu[0] = romeo;
            mike = function(argFoo) {
                mike = argFoo;
                var _closure3_slot0 = mike;
                zulu = _closure2_slot3;
                mike = zulu.getState;
                mike = mike.bind(zulu)();
                zulu = mike.routes;
                mike = zulu.findIndex;
                entity = function(argFoo) {
                    entity = argFoo;
                    mike = entity.name;
                    entity = _closure3_slot0;
                    entity = mike === entity;
                    return entity;
                };
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            verify = verify.bind(tango)(mike, zulu);
            var _closure2_slot8 = verify;
            zulu = tango.useCallback;
            mike = new Array(9);
            mike[0] = romeo;
            mike[1] = backup;
            mike[2] = yankee;
            mike[3] = kilo;
            mike[4] = offset;
            mike[5] = verify;
            mike[6] = options;
            mike[7] = golf;
            mike[8] = oscar;
            entity = function() {
                report = _closure2_slot3;
                tango = report.push;
                zulu = _closure1_slot0;
                mike = _closure1_slot3;
                entity = 12;
                mike = mike[entity];
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                mike = mike.VerificationModalScenes;
                zulu = mike.VERIFY_PASSWORD;
                mike = {};
                options = _closure1_slot4;
                golf = function* (argFoo) {
                    entity = function* (argFoo) { // Original name: ?anon_0_
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(mike) { _fun00004_ip = 127; continue _fun00003 }
 7:
                            mike = _closure2_slot4;
                            report = null;
                            tango = report == mike;
                            mike = null;
                            if(tango) { _fun00004_ip = 124; continue _fun00003 }
 25:
                            tango = _closure2_slot6;
                            oscar = undefined;
                            tango = tango.bind(oscar)(report);
                            report = _closure1_slot2;
                            golf = _closure1_slot3;
                            tango = 13;
                            tango = golf[tango];
                            golf = report.bind(oscar)(tango);
                            oscar = golf.saveEmail;
                            report = {};
                            tango = _closure2_slot5;
                            report['email'] = tango;
                            tango = argFoo;
                            report['password'] = tango;
                            tango = _closure2_slot7;
                            report['emailToken'] = tango;
                            tango = _closure2_slot3;
                            zulu = _closure2_slot8;
                            zulu = oscar.bind(golf)(report, tango, zulu);
                            SaveGenerator(address=112);
 110:
                            return zulu;
 112:
                            ResumeGenerator(result_out_reg=2, return_bool_out_reg=3);
                            mike = zulu;
                            if(!tango) { _fun00004_ip = 124; continue _fun00003 }
 121:
                            return zulu;
 124:
                            return mike;
 127:
                            return entity;
                        }
                    };
                    return entity;
                };
                golf = options.bind(entity)(golf);
                var _closure3_slot0 = golf;
                golf = function() {
                    entity = undefined;
                    tango = _closure3_slot0;
                    zulu = tango.apply;
                    entity = arguments;
                    mike = entity;
                    entity = this;
                    entity = zulu.bind(tango)(entity, mike);
                    return entity;
                };
                mike['onSubmit'] = golf;
                oscar = function() { // Original name: onSuccess
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        zulu = _closure2_slot0;
                        if(zulu) { _fun00006_ip = 57; continue _fun00005 }
 13:
                        report = _closure1_slot2;
                        tango = _closure1_slot3;
                        zulu = 13;
                        tango = tango[zulu];
                        zulu = undefined;
                        oscar = report.bind(zulu)(tango);
                        report = oscar.finishVerifyEmailFlow;
                        tango = _closure2_slot3;
                        zulu = _closure2_slot8;
                        zulu = report.bind(oscar)(tango, zulu);
                        _fun00006_ip = 158; continue _fun00005;
 57:
                        oscar = _closure1_slot1;
                        report = _closure1_slot3;
                        zulu = 14;
                        zulu = report[zulu];
                        tango = undefined;
                        options = oscar.bind(tango)(zulu);
                        golf = options.track;
                        zulu = _closure1_slot13;
                        oscar = zulu.USER_ACCOUNT_EMAIL_CHANGE_SAVE_NEW_EMAIL;
                        zulu = {};
                        verify = _closure2_slot1;
                        zulu['change_email_reason_enum'] = verify;
                        verify = _closure2_slot2;
                        zulu['free_text_response'] = verify;
                        zulu = golf.bind(options)(oscar, zulu);
                        zulu = _closure1_slot2;
                        mike = 13;
                        mike = report[mike];
                        tango = zulu.bind(tango)(mike);
                        zulu = tango.finishChangeEmailFlow;
                        mike = _closure2_slot3;
                        entity = _closure2_slot5;
                        entity = zulu.bind(tango)(mike, entity);
 158:
                        entity = undefined;
                        return entity;
                    }
                };
                mike['onSuccess'] = oscar;
                oscar = true;
                mike['hideUnverifiedBanner'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            sizing = zulu.bind(tango)(entity, mike);
            source = null;
            mike = source == backup;
            entity = null;
            if(mike) { _fun00002_ip = 1163; continue _fun00001 }
 333:
            tango = _closure1_slot14;
            zulu = _closure1_slot8;
            mike = {'style': null, 'keyboardShouldPersistTaps': 'handled', 'alwaysBounceVertical': false};
            oscar = result.background;
            mike['style'] = oscar;
            options = _closure1_slot15;
            golf = _closure1_slot7;
            oscar = {};
            verify = result.container;
            oscar['style'] = verify;
            offset = _closure1_slot0;
            verify = _closure1_slot3;
            update = 15;
            verify = verify[update];
            verify = offset.bind(report)(verify);
            offset = verify.Text;
            verify = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            yankee = result.title;
            verify['style'] = yankee;
            yankee = backup.email;
            if(!(source == yankee)) { _fun00002_ip = 503; continue _fun00001 }
 446:
            sequence = _closure1_slot0;
            config = _closure1_slot3;
            yankee = 16;
            romeo = config[yankee];
            romeo = sequence.bind(report)(romeo);
            control = romeo.intl;
            romeo = control.string;
            yankee = config[yankee];
            yankee = sequence.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee.CDTD/P;
            yankee = romeo.bind(control)(yankee);
            _fun00002_ip = 558; continue _fun00001;
 503:
            config = _closure1_slot0;
            record = _closure1_slot3;
            romeo = 16;
            control = record[romeo];
            control = config.bind(report)(control);
            sequence = control.intl;
            control = sequence.string;
            romeo = record[romeo];
            romeo = config.bind(report)(romeo);
            romeo = romeo.t;
            romeo = romeo.Vm8akJ;
            yankee = control.bind(sequence)(romeo);
 558:
            verify['children'] = yankee;
            offset = tango.bind(report)(offset, verify);
            verify = new Array(4);
            verify[0] = offset;
            romeo = _closure1_slot14;
            yankee = _closure1_slot0;
            offset = _closure1_slot3;
            offset = offset[update];
            offset = yankee.bind(report)(offset);
            yankee = offset.Text;
            offset = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            update = result.prompt;
            offset['style'] = update;
            update = backup.email;
            if(!(source == update)) { _fun00002_ip = 695; continue _fun00001 }
 638:
            sequence = _closure1_slot0;
            config = _closure1_slot3;
            update = 16;
            source = config[update];
            source = sequence.bind(report)(source);
            control = source.intl;
            source = control.string;
            update = config[update];
            update = sequence.bind(report)(update);
            update = update.t;
            update = update.YXXMxM;
            update = source.bind(control)(update);
            _fun00002_ip = 764; continue _fun00001;
 695:
            control = _closure1_slot0;
            record = _closure1_slot3;
            source = 16;
            sequence = record[source];
            sequence = control.bind(report)(sequence);
            config = sequence.intl;
            sequence = config.formatToPlainString;
            source = record[source];
            source = control.bind(report)(source);
            source = source.t;
            control = source.Z7CaIy;
            source = {};
            record = backup.email;
            source['email'] = record;
            update = sequence.bind(config)(control, source);
 764:
            offset['children'] = update;
            offset = romeo.bind(report)(yankee, offset);
            verify[1] = offset;
            romeo = _closure1_slot14;
            control = _closure1_slot1;
            source = _closure1_slot3;
            offset = 17;
            offset = source[offset];
            yankee = control.bind(report)(offset);
            offset = {};
            update = result.input;
            offset['style'] = update;
            update = _closure1_slot0;
            output = 16;
            sequence = source[output];
            sequence = update.bind(report)(sequence);
            record = sequence.intl;
            config = record.string;
            sequence = source[output];
            sequence = update.bind(report)(sequence);
            sequence = sequence.t;
            sequence = sequence.w/qqKC;
            sequence = config.bind(record)(sequence);
            offset['label'] = sequence;
            sequence = 'emailAddress';
            offset['textContentType'] = sequence;
            sequence = 18;
            sequence = source[sequence];
            sequence = update.bind(report)(sequence);
            sequence = sequence.KeyboardTypes;
            sequence = sequence.EMAIL;
            offset['keyboardType'] = sequence;
            offset['value'] = kilo;
            offset['onChangeText'] = vacuum;
            offset['onSubmitEditing'] = sizing;
            vacuum = source[output];
            vacuum = update.bind(report)(vacuum);
            config = vacuum.intl;
            sequence = config.string;
            vacuum = source[output];
            vacuum = update.bind(report)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.dI4d4e;
            vacuum = sequence.bind(config)(vacuum);
            offset['placeholder'] = vacuum;
            vacuum = 'done';
            offset['returnKeyType'] = vacuum;
            vacuum = 'none';
            offset['autoCapitalize'] = vacuum;
            offset['error'] = echo;
            echo = true;
            offset['autoFocus'] = echo;
            offset = romeo.bind(report)(yankee, offset);
            verify[2] = offset;
            echo = 19;
            offset = source[echo];
            yankee = control.bind(report)(offset);
            offset = {};
            echo = source[echo];
            echo = control.bind(report)(echo);
            echo = echo.Sizes;
            echo = echo.MEDIUM;
            offset['size'] = echo;
            result = result.button;
            offset['style'] = result;
            result = source[output];
            result = update.bind(report)(result);
            echo = result.intl;
            result = echo.string;
            output = source[output];
            output = update.bind(report)(output);
            output = output.t;
            output = output.Vm8akJ;
            output = result.bind(echo)(output);
            offset['text'] = output;
            offset['onPress'] = sizing;
            foxtrot = foxtrot === kilo;
            if(foxtrot) { _fun00002_ip = 1129; continue _fun00001 }
 1119:
            backup = backup.email;
            foxtrot = kilo === backup;
 1129:
            offset['disabled'] = foxtrot;
            offset = romeo.bind(report)(yankee, offset);
            verify[3] = offset;
            oscar['children'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 1163:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();