// app/modules/verification/native/components/Overview.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    option = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = option;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    golfie = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot4 = golfie;
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Endpoints;
    var _closure1_slot8 = golfie;
    golfie = tangon.VerificationModalScenes;
    var _closure1_slot9 = golfie;
    golfie = tangon.VerificationTypes;
    var _closure1_slot10 = golfie;
    tangon = tangon.HelpdeskArticles;
    golfie = 5;
    verify = oscard[golfie];
    verify = report.bind(entity)(verify);
    verify = verify.jsx;
    var _closure1_slot11 = verify;
    verify = oscard[golfie];
    verify = report.bind(entity)(verify);
    verify = verify.Fragment;
    var _closure1_slot12 = verify;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot13 = golfie;
    golfie = 6;
    golfie = oscard[golfie];
    offset = report.bind(entity)(golfie);
    verify = offset.createStyles;
    golfie = {};
    yankee = {};
    yankee['flex'] = romeon;
    foxtra = 7;
    romeon = oscard[foxtra];
    romeon = option.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_PRIMARY;
    yankee['backgroundColor'] = romeon;
    golfie['container'] = yankee;
    romeon = 20;
    yankee = {'flex': 1, 'padding': 20, 'justifyContent': 'center', 'alignItems': 'center'};
    golfie['containerInner'] = yankee;
    yankee = {'height': 190, 'width': 220, 'resizeMode': 'contain'};
    golfie['image'] = yankee;
    yankee = {'marginTop': 20, 'fontSize': 17, 'textAlign': 'center'};
    backup = oscard[foxtra];
    backup = option.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_PRIMARY;
    yankee['color'] = backup;
    golfie['title'] = yankee;
    yankee = {'marginTop': 4, 'marginBottom': 20, 'fontSize': 14, 'textAlign': 'center'};
    foxtra = oscard[foxtra];
    foxtra = option.bind(entity)(foxtra);
    foxtra = foxtra.unsafe_rawColors;
    foxtra = foxtra.PRIMARY_400;
    yankee['color'] = foxtra;
    golfie['body'] = yankee;
    yankee = {'width': '60%', 'justifyContent': 'center'};
    golfie['blocks'] = yankee;
    yankee = {};
    yankee['marginBottom'] = romeon;
    golfie['verificationType'] = yankee;
    yankee = {'marginBottom': 20, 'marginHorizontal': 20, 'alignSelf': 'center'};
    golfie['button'] = yankee;
    golfie = verify.bind(offset)(golfie);
    var _closure1_slot14 = golfie;
    golfie = 8;
    golfie = oscard[golfie];
    option = option.bind(entity)(golfie);
    golfie = option.getArticleURL;
    tangon = tangon.VERIFICATION_FAQ;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot15 = tangon;
    tangon = 22;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/verification/native/components/Overview.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: Overview
        michal = _closure1_slot14;
        tangon = undefined;
        backup = michal.bind(tangon)();
        var _closure2_slot0 = backup;
        offset = _closure1_slot0;
        yankee = _closure1_slot2;
        michal = 9;
        michal = yankee[michal];
        zuuluu = offset.bind(tangon)(michal);
        michal = zuuluu.useBaddiesSource;
        verify = michal.bind(zuuluu)();
        michal = 10;
        michal = yankee[michal];
        option = offset.bind(tangon)(michal);
        golfie = option.useStateFromStores;
        michal = _closure1_slot6;
        oscard = new Array(1);
        oscard[0] = michal;
        foxtra = _closure1_slot1;
        michal = 11;
        michal = yankee[michal];
        michal = foxtra.bind(tangon)(michal);
        source = michal.areVerificationTypesEqual;
        vacuum = function() {
            zuuluu = _closure1_slot6;
            michal = zuuluu.getAction;
            zuuluu = michal.bind(zuuluu)();
            tangon = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 11;
            michal = michal[entity];
            entity = undefined;
            michal = tangon.bind(entity)(michal);
            entity = michal.getVerificationTypes;
            entity = entity.bind(michal)(zuuluu);
            return entity;
        };
        ctrled = new Array(0);
        config = option;
        sequen = oscard;
        oscard = config[golfie](sequen, vacuum, ctrled, source, update);
        var _closure2_slot1 = oscard;
        michal = 12;
        michal = yankee[michal];
        zuuluu = offset.bind(tangon)(michal);
        michal = zuuluu.useNavigation;
        golfie = michal.bind(zuuluu)();
        var _closure2_slot2 = golfie;
        michal = 13;
        zuuluu = yankee[michal];
        zuuluu = foxtra.bind(tangon)(zuuluu);
        michal = yankee[michal];
        michal = offset.bind(tangon)(michal);
        michal = michal.BackPressHandler;
        michal = michal.minimize;
        michal = zuuluu.bind(tangon)(michal);
        report = _closure1_slot3;
        zuuluu = report.useCallback;
        michal = new Array(3);
        michal[0] = golfie;
        michal[1] = oscard;
        michal[2] = backup;
        entity = function() {
            tangon = _closure1_slot11;
            zuuluu = _closure1_slot12;
            michal = {};
            oscard = _closure2_slot1;
            report = oscard.map;
            entity = function(argFoo) {
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    report = argFoo;
                    var _closure4_slot0 = report;
                    entity = _closure1_slot10;
                    entity = entity.CAPTCHA;
                    if(!(report !== entity)) { _fun00002_ip = 118; continue _fun00001 }
 26:
                    tangon = _closure1_slot11;
                    verify = _closure1_slot1;
                    offset = _closure1_slot2;
                    entity = 14;
                    entity = offset[entity];
                    zuuluu = undefined;
                    michal = verify.bind(zuuluu)(entity);
                    entity = {};
                    option = _closure2_slot0;
                    option = option.verificationType;
                    entity['style'] = option;
                    option = 11;
                    option = offset[option];
                    verify = verify.bind(zuuluu)(option);
                    option = verify.getButtonTitle;
                    option = option.bind(verify)(report);
                    entity['text'] = option;
                    option = function() { // Original name: onPress
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            entity = _closure1_slot9;
                            zuuluu = entity.ADD_PHONE;
                            report = _closure4_slot0;
                            entity = _closure1_slot10;
                            entity = entity.EMAIL_OR_PHONE;
                            entity = report !== entity;
                            if(!entity) { _fun00004_ip = 55; continue _fun00003 }
 37:
                            oscard = _closure4_slot0;
                            report = _closure1_slot10;
                            report = report.EMAIL;
                            entity = oscard !== report;
 55:
                            if(!entity) { _fun00004_ip = 76; continue _fun00003 }
 58:
                            report = _closure4_slot0;
                            tangon = _closure1_slot10;
                            tangon = tangon.REVERIFY_EMAIL;
                            entity = report !== tangon;
 76:
                            if(entity) { _fun00004_ip = 168; continue _fun00003 }
 79:
                            report = _closure1_slot0;
                            tangon = _closure1_slot2;
                            entity = 18;
                            tangon = tangon[entity];
                            entity = undefined;
                            report = report.bind(entity)(tangon);
                            tangon = report.accountDetailsInit;
                            tangon = tangon.bind(report)();
                            report = _closure1_slot7;
                            tangon = report.getCurrentUser;
                            report = tangon.bind(report)();
                            tangon = null;
                            oscard = tangon == report;
                            if(oscard) { _fun00004_ip = 139; continue _fun00003 }
 133:
                            entity = report.email;
 139:
                            if(!(tangon == entity)) { _fun00004_ip = 155; continue _fun00003 }
 143:
                            entity = _closure1_slot9;
                            entity = entity.ENTER_EMAIL;
                            _fun00004_ip = 165; continue _fun00003;
 155:
                            michal = _closure1_slot9;
                            entity = michal.RESEND_EMAIL;
 165:
                            zuuluu = entity;
 168:
                            michal = _closure2_slot2;
                            entity = michal.push;
                            entity = entity.bind(michal)(zuuluu);
                            entity = undefined;
                            return entity;
                        }
                    };
                    entity['onPress'] = option;
                    entity = tangon.bind(zuuluu)(michal, entity, report);
                    _fun00002_ip = 220; continue _fun00001;
 118:
                    report = _closure1_slot11;
                    zuuluu = _closure1_slot1;
                    yankee = _closure1_slot2;
                    michal = 14;
                    michal = yankee[michal];
                    tangon = undefined;
                    zuuluu = zuuluu.bind(tangon)(michal);
                    michal = {};
                    offset = _closure1_slot0;
                    golfie = 15;
                    option = yankee[golfie];
                    option = offset.bind(tangon)(option);
                    verify = option.intl;
                    option = verify.string;
                    golfie = yankee[golfie];
                    golfie = offset.bind(tangon)(golfie);
                    golfie = golfie.t;
                    golfie = golfie.3413d3;
                    golfie = option.bind(verify)(golfie);
                    michal['text'] = golfie;
                    oscard = function() { // Original name: onPress
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 16;
                        michal = michal[entity];
                        entity = undefined;
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = zuuluu.showCaptcha;
                        tangon = michal.bind(zuuluu)();
                        zuuluu = tangon.then;
                        michal = function(argFoo) {
                            zuuluu = _closure1_slot0;
                            michal = _closure1_slot2;
                            entity = 17;
                            michal = michal[entity];
                            entity = undefined;
                            michal = zuuluu.bind(entity)(michal);
                            tangon = michal.HTTP;
                            zuuluu = tangon.post;
                            michal = {};
                            report = _closure1_slot8;
                            report = report.CAPTCHA;
                            michal['url'] = report;
                            report = {};
                            oscard = argFoo;
                            report['captcha_key'] = oscard;
                            michal['body'] = report;
                            report = true;
                            michal['oldFormErrors'] = report;
                            michal['rejectWithError'] = report;
                            michal = zuuluu.bind(tangon)(michal);
                            return entity;
                        };
                        michal = zuuluu.bind(tangon)(michal);
                        return entity;
                    };
                    michal['onPress'] = oscard;
                    entity = report.bind(tangon)(zuuluu, michal);
 220:
                    return entity;
                }
            };
            entity = report.bind(oscard)(entity);
            michal['children'] = entity;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        };
        romeon = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot13;
        michal = _closure1_slot5;
        entity = {};
        report = backup.container;
        entity['style'] = report;
        report = {};
        oscard = backup.containerInner;
        report['style'] = oscard;
        option = _closure1_slot11;
        golfie = _closure1_slot4;
        oscard = {};
        kiloes = backup.image;
        oscard['style'] = kiloes;
        oscard['source'] = verify;
        golfie = option.bind(tangon)(golfie, oscard);
        oscard = new Array(4);
        oscard[0] = golfie;
        golfie = 19;
        golfie = yankee[golfie];
        golfie = offset.bind(tangon)(golfie);
        kiloes = golfie.Text;
        golfie = {'variant': 'heading-lg/semibold', 'style': null, 'accessibilityRole': 'header'};
        verify = backup.title;
        golfie['style'] = verify;
        verify = 15;
        sizing = yankee[verify];
        sizing = offset.bind(tangon)(sizing);
        result = sizing.intl;
        output = result.string;
        sizing = yankee[verify];
        sizing = offset.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.Iz0kDg;
        sizing = output.bind(result)(sizing);
        golfie['children'] = sizing;
        golfie = option.bind(tangon)(kiloes, golfie);
        oscard[1] = golfie;
        golfie = 20;
        golfie = yankee[golfie];
        golfie = offset.bind(tangon)(golfie);
        kiloes = golfie.TextWithIOSLinkWorkaround;
        golfie = {};
        sizing = 'text-sm/medium';
        golfie['variant'] = sizing;
        sizing = backup.body;
        golfie['style'] = sizing;
        sizing = yankee[verify];
        sizing = offset.bind(tangon)(sizing);
        echoed = sizing.intl;
        result = echoed.format;
        sizing = yankee[verify];
        sizing = offset.bind(tangon)(sizing);
        sizing = sizing.t;
        output = sizing.0rqMV1;
        sizing = {};
        update = _closure1_slot15;
        sizing['helpCenterURL'] = update;
        sizing = result.bind(echoed)(output, sizing);
        golfie['children'] = sizing;
        golfie = option.bind(tangon)(kiloes, golfie);
        oscard[2] = golfie;
        golfie = {};
        kiloes = backup.blocks;
        golfie['style'] = kiloes;
        romeon = romeon.bind(tangon)();
        golfie['children'] = romeon;
        golfie = option.bind(tangon)(michal, golfie);
        oscard[3] = golfie;
        report['children'] = oscard;
        oscard = zuuluu.bind(tangon)(michal, report);
        report = new Array(2);
        report[0] = oscard;
        romeon = 14;
        oscard = yankee[romeon];
        golfie = foxtra.bind(tangon)(oscard);
        oscard = {};
        backup = backup.button;
        oscard['style'] = backup;
        romeon = yankee[romeon];
        romeon = foxtra.bind(tangon)(romeon);
        romeon = romeon.Colors;
        romeon = romeon.TRANSPARENT;
        oscard['color'] = romeon;
        romeon = yankee[verify];
        romeon = offset.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.Yl/Rio;
        verify = romeon.bind(foxtra)(verify);
        oscard['text'] = verify;
        verify = 21;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        verify = verify.emailSupport;
        oscard['onPress'] = verify;
        verify = 'link';
        oscard['accessibilityRole'] = verify;
        verify = true;
        oscard['shrink'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();