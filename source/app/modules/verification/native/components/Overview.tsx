// app/modules/verification/native/components/Overview.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    options = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = options;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    golf = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(verify)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    romeo = 1;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    golf = tango.Image;
    var _closure1_slot4 = golf;
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = options.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = options.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Endpoints;
    var _closure1_slot8 = golf;
    golf = tango.VerificationModalScenes;
    var _closure1_slot9 = golf;
    golf = tango.VerificationTypes;
    var _closure1_slot10 = golf;
    tango = tango.HelpdeskArticles;
    golf = 5;
    verify = oscar[golf];
    verify = report.bind(entity)(verify);
    verify = verify.jsx;
    var _closure1_slot11 = verify;
    verify = oscar[golf];
    verify = report.bind(entity)(verify);
    verify = verify.Fragment;
    var _closure1_slot12 = verify;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot13 = golf;
    golf = 6;
    golf = oscar[golf];
    offset = report.bind(entity)(golf);
    verify = offset.createStyles;
    golf = {};
    yankee = {};
    yankee['flex'] = romeo;
    foxtrot = 7;
    romeo = oscar[foxtrot];
    romeo = options.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_PRIMARY;
    yankee['backgroundColor'] = romeo;
    golf['container'] = yankee;
    romeo = 20;
    yankee = {'flex': 1, 'padding': 20, 'justifyContent': 'center', 'alignItems': 'center'};
    golf['containerInner'] = yankee;
    yankee = {'height': 190, 'width': 220, 'resizeMode': 'contain'};
    golf['image'] = yankee;
    yankee = {'marginTop': 20, 'fontSize': 17, 'textAlign': 'center'};
    backup = oscar[foxtrot];
    backup = options.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_PRIMARY;
    yankee['color'] = backup;
    golf['title'] = yankee;
    yankee = {'marginTop': 4, 'marginBottom': 20, 'fontSize': 14, 'textAlign': 'center'};
    foxtrot = oscar[foxtrot];
    foxtrot = options.bind(entity)(foxtrot);
    foxtrot = foxtrot.unsafe_rawColors;
    foxtrot = foxtrot.PRIMARY_400;
    yankee['color'] = foxtrot;
    golf['body'] = yankee;
    yankee = {'width': '60%', 'justifyContent': 'center'};
    golf['blocks'] = yankee;
    yankee = {};
    yankee['marginBottom'] = romeo;
    golf['verificationType'] = yankee;
    yankee = {'marginBottom': 20, 'marginHorizontal': 20, 'alignSelf': 'center'};
    golf['button'] = yankee;
    golf = verify.bind(offset)(golf);
    var _closure1_slot14 = golf;
    golf = 8;
    golf = oscar[golf];
    options = options.bind(entity)(golf);
    golf = options.getArticleURL;
    tango = tango.VERIFICATION_FAQ;
    tango = golf.bind(options)(tango);
    var _closure1_slot15 = tango;
    tango = 22;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/verification/native/components/Overview.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: Overview
        mike = _closure1_slot14;
        tango = undefined;
        backup = mike.bind(tango)();
        var _closure2_slot0 = backup;
        offset = _closure1_slot0;
        yankee = _closure1_slot2;
        mike = 9;
        mike = yankee[mike];
        zulu = offset.bind(tango)(mike);
        mike = zulu.useBaddiesSource;
        verify = mike.bind(zulu)();
        mike = 10;
        mike = yankee[mike];
        options = offset.bind(tango)(mike);
        golf = options.useStateFromStores;
        mike = _closure1_slot6;
        oscar = new Array(1);
        oscar[0] = mike;
        foxtrot = _closure1_slot1;
        mike = 11;
        mike = yankee[mike];
        mike = foxtrot.bind(tango)(mike);
        source = mike.areVerificationTypesEqual;
        vacuum = function() {
            zulu = _closure1_slot6;
            mike = zulu.getAction;
            zulu = mike.bind(zulu)();
            tango = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 11;
            mike = mike[entity];
            entity = undefined;
            mike = tango.bind(entity)(mike);
            entity = mike.getVerificationTypes;
            entity = entity.bind(mike)(zulu);
            return entity;
        };
        control = new Array(0);
        config = options;
        sequence = oscar;
        oscar = config[golf](sequence, vacuum, control, source, update);
        var _closure2_slot1 = oscar;
        mike = 12;
        mike = yankee[mike];
        zulu = offset.bind(tango)(mike);
        mike = zulu.useNavigation;
        golf = mike.bind(zulu)();
        var _closure2_slot2 = golf;
        mike = 13;
        zulu = yankee[mike];
        zulu = foxtrot.bind(tango)(zulu);
        mike = yankee[mike];
        mike = offset.bind(tango)(mike);
        mike = mike.BackPressHandler;
        mike = mike.minimize;
        mike = zulu.bind(tango)(mike);
        report = _closure1_slot3;
        zulu = report.useCallback;
        mike = new Array(3);
        mike[0] = golf;
        mike[1] = oscar;
        mike[2] = backup;
        entity = function() {
            tango = _closure1_slot11;
            zulu = _closure1_slot12;
            mike = {};
            oscar = _closure2_slot1;
            report = oscar.map;
            entity = function(argFoo) {
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    report = argFoo;
                    var _closure4_slot0 = report;
                    entity = _closure1_slot10;
                    entity = entity.CAPTCHA;
                    if(!(report !== entity)) { _fun00002_ip = 118; continue _fun00001 }
 26:
                    tango = _closure1_slot11;
                    verify = _closure1_slot1;
                    offset = _closure1_slot2;
                    entity = 14;
                    entity = offset[entity];
                    zulu = undefined;
                    mike = verify.bind(zulu)(entity);
                    entity = {};
                    options = _closure2_slot0;
                    options = options.verificationType;
                    entity['style'] = options;
                    options = 11;
                    options = offset[options];
                    verify = verify.bind(zulu)(options);
                    options = verify.getButtonTitle;
                    options = options.bind(verify)(report);
                    entity['text'] = options;
                    options = function() { // Original name: onPress
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            entity = _closure1_slot9;
                            zulu = entity.ADD_PHONE;
                            report = _closure4_slot0;
                            entity = _closure1_slot10;
                            entity = entity.EMAIL_OR_PHONE;
                            entity = report !== entity;
                            if(!entity) { _fun00004_ip = 55; continue _fun00003 }
 37:
                            oscar = _closure4_slot0;
                            report = _closure1_slot10;
                            report = report.EMAIL;
                            entity = oscar !== report;
 55:
                            if(!entity) { _fun00004_ip = 76; continue _fun00003 }
 58:
                            report = _closure4_slot0;
                            tango = _closure1_slot10;
                            tango = tango.REVERIFY_EMAIL;
                            entity = report !== tango;
 76:
                            if(entity) { _fun00004_ip = 168; continue _fun00003 }
 79:
                            report = _closure1_slot0;
                            tango = _closure1_slot2;
                            entity = 18;
                            tango = tango[entity];
                            entity = undefined;
                            report = report.bind(entity)(tango);
                            tango = report.accountDetailsInit;
                            tango = tango.bind(report)();
                            report = _closure1_slot7;
                            tango = report.getCurrentUser;
                            report = tango.bind(report)();
                            tango = null;
                            oscar = tango == report;
                            if(oscar) { _fun00004_ip = 139; continue _fun00003 }
 133:
                            entity = report.email;
 139:
                            if(!(tango == entity)) { _fun00004_ip = 155; continue _fun00003 }
 143:
                            entity = _closure1_slot9;
                            entity = entity.ENTER_EMAIL;
                            _fun00004_ip = 165; continue _fun00003;
 155:
                            mike = _closure1_slot9;
                            entity = mike.RESEND_EMAIL;
 165:
                            zulu = entity;
 168:
                            mike = _closure2_slot2;
                            entity = mike.push;
                            entity = entity.bind(mike)(zulu);
                            entity = undefined;
                            return entity;
                        }
                    };
                    entity['onPress'] = options;
                    entity = tango.bind(zulu)(mike, entity, report);
                    _fun00002_ip = 218; continue _fun00001;
 118:
                    report = _closure1_slot11;
                    zulu = _closure1_slot1;
                    yankee = _closure1_slot2;
                    mike = 14;
                    mike = yankee[mike];
                    tango = undefined;
                    zulu = zulu.bind(tango)(mike);
                    mike = {};
                    offset = _closure1_slot0;
                    golf = 15;
                    options = yankee[golf];
                    options = offset.bind(tango)(options);
                    verify = options.intl;
                    options = verify.string;
                    golf = yankee[golf];
                    golf = offset.bind(tango)(golf);
                    golf = golf.t;
                    golf = golf.3413d3;
                    golf = options.bind(verify)(golf);
                    mike['text'] = golf;
                    oscar = function() { // Original name: onPress
                        zulu = _closure1_slot1;
                        mike = _closure1_slot2;
                        entity = 16;
                        mike = mike[entity];
                        entity = undefined;
                        zulu = zulu.bind(entity)(mike);
                        mike = zulu.showCaptcha;
                        tango = mike.bind(zulu)();
                        zulu = tango.then;
                        mike = function(argFoo) {
                            zulu = _closure1_slot0;
                            mike = _closure1_slot2;
                            entity = 17;
                            mike = mike[entity];
                            entity = undefined;
                            mike = zulu.bind(entity)(mike);
                            tango = mike.HTTP;
                            zulu = tango.post;
                            mike = {};
                            report = _closure1_slot8;
                            report = report.CAPTCHA;
                            mike['url'] = report;
                            report = {};
                            oscar = argFoo;
                            report['captcha_key'] = oscar;
                            mike['body'] = report;
                            report = true;
                            mike['oldFormErrors'] = report;
                            mike['rejectWithError'] = report;
                            mike = zulu.bind(tango)(mike);
                            return entity;
                        };
                        mike = zulu.bind(tango)(mike);
                        return entity;
                    };
                    mike['onPress'] = oscar;
                    entity = report.bind(tango)(zulu, mike);
 218:
                    return entity;
                }
            };
            entity = report.bind(oscar)(entity);
            mike['children'] = entity;
            entity = undefined;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        romeo = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot13;
        mike = _closure1_slot5;
        entity = {};
        report = backup.container;
        entity['style'] = report;
        report = {};
        oscar = backup.containerInner;
        report['style'] = oscar;
        options = _closure1_slot11;
        golf = _closure1_slot4;
        oscar = {};
        kilo = backup.image;
        oscar['style'] = kilo;
        oscar['source'] = verify;
        golf = options.bind(tango)(golf, oscar);
        oscar = new Array(4);
        oscar[0] = golf;
        golf = 19;
        golf = yankee[golf];
        golf = offset.bind(tango)(golf);
        kilo = golf.Text;
        golf = {'variant': 'heading-lg/semibold', 'style': null, 'accessibilityRole': 'header'};
        verify = backup.title;
        golf['style'] = verify;
        verify = 15;
        sizing = yankee[verify];
        sizing = offset.bind(tango)(sizing);
        result = sizing.intl;
        output = result.string;
        sizing = yankee[verify];
        sizing = offset.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.Iz0kDg;
        sizing = output.bind(result)(sizing);
        golf['children'] = sizing;
        golf = options.bind(tango)(kilo, golf);
        oscar[1] = golf;
        golf = 20;
        golf = yankee[golf];
        golf = offset.bind(tango)(golf);
        kilo = golf.TextWithIOSLinkWorkaround;
        golf = {};
        sizing = 'text-sm/medium';
        golf['variant'] = sizing;
        sizing = backup.body;
        golf['style'] = sizing;
        sizing = yankee[verify];
        sizing = offset.bind(tango)(sizing);
        echo = sizing.intl;
        result = echo.format;
        sizing = yankee[verify];
        sizing = offset.bind(tango)(sizing);
        sizing = sizing.t;
        output = sizing.0rqMV1;
        sizing = {};
        update = _closure1_slot15;
        sizing['helpCenterURL'] = update;
        sizing = result.bind(echo)(output, sizing);
        golf['children'] = sizing;
        golf = options.bind(tango)(kilo, golf);
        oscar[2] = golf;
        golf = {};
        kilo = backup.blocks;
        golf['style'] = kilo;
        romeo = romeo.bind(tango)();
        golf['children'] = romeo;
        golf = options.bind(tango)(mike, golf);
        oscar[3] = golf;
        report['children'] = oscar;
        oscar = zulu.bind(tango)(mike, report);
        report = new Array(2);
        report[0] = oscar;
        romeo = 14;
        oscar = yankee[romeo];
        golf = foxtrot.bind(tango)(oscar);
        oscar = {};
        backup = backup.button;
        oscar['style'] = backup;
        romeo = yankee[romeo];
        romeo = foxtrot.bind(tango)(romeo);
        romeo = romeo.Colors;
        romeo = romeo.TRANSPARENT;
        oscar['color'] = romeo;
        romeo = yankee[verify];
        romeo = offset.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        verify = yankee[verify];
        verify = offset.bind(tango)(verify);
        verify = verify.t;
        verify = verify.Yl/Rio;
        verify = romeo.bind(foxtrot)(verify);
        oscar['text'] = verify;
        verify = 21;
        verify = yankee[verify];
        verify = offset.bind(tango)(verify);
        verify = verify.emailSupport;
        oscar['onPress'] = verify;
        verify = 'link';
        oscar['accessibilityRole'] = verify;
        verify = true;
        oscar['shrink'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();