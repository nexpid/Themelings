// app/modules/verification/native/components/VerificationModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    option = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.StyleSheet;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.UserRequiredActions;
    var _closure1_slot9 = golfie;
    tangon = tangon.VerificationModalScenes;
    var _closure1_slot10 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot11 = tangon;
    tangon = 32;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/verification/native/components/VerificationModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: VerificationModal
        option = _closure1_slot0;
        verify = _closure1_slot2;
        michal = 29;
        michal = verify[michal];
        tangon = undefined;
        golfie = option.bind(tangon)(michal);
        report = golfie.useStateFromStores;
        michal = _closure1_slot6;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            michal = _closure1_slot6;
            entity = michal.getCountrySelectorOpened;
            entity = entity.bind(michal)();
            return entity;
        };
        michal = report.bind(golfie)(zuuluu, michal);
        var _closure2_slot0 = michal;
        yankee = _closure1_slot4;
        report = yankee.useMemo;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = {};
                entity = _closure1_slot10;
                entity = entity.OVERVIEW;
                michal['name'] = entity;
                entity = new Array(1);
                entity[0] = michal;
                michal = _closure2_slot0;
                if(!michal) { _fun00002_ip = 63; continue _fun00001 }
 37:
                zuuluu = entity.push;
                michal = {};
                tangon = _closure1_slot10;
                tangon = tangon.ADD_PHONE;
                michal['name'] = tangon;
                michal = zuuluu.bind(entity)(michal);
 63:
                return entity;
            }
        };
        report = report.bind(yankee)(michal, zuuluu);
        golfie = yankee.useEffect;
        zuuluu = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 30;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.hideActionSheet;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        michal = new Array(0);
        michal = golfie.bind(yankee)(zuuluu, michal);
        zuuluu = _closure1_slot11;
        entity = 31;
        entity = verify[entity];
        entity = option.bind(tangon)(entity);
        michal = entity.Navigator;
        entity = {};
        offset = yankee.useMemo;
        golfie = function() {
            michal = function() { // Original name: getScreens
                offset = function(argFoo) { // Original name: impressionProperties
                    entity = {};
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 8;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    michal = tangon.bind(michal)(zuuluu);
                    michal = michal.ImpressionGroups;
                    michal = michal.USER_VERIFICATION_MODAL_FLOW;
                    entity['impression_group'] = michal;
                    michal = argFoo;
                    entity['step'] = michal;
                    return entity;
                };
                entity = {};
                verify = _closure1_slot10;
                zuuluu = verify.CHANGE_EMAIL_COLLECT_REASONS;
                michal = {};
                golfie = _closure1_slot0;
                option = _closure1_slot2;
                yankee = 8;
                report = option[yankee];
                oscard = undefined;
                report = golfie.bind(oscard)(report);
                report = report.ImpressionNames;
                report = report.USER_VERIFICATION_MODAL;
                michal['impressionName'] = report;
                report = verify.CHANGE_EMAIL_COLLECT_REASONS;
                report = offset.bind(oscard)(report);
                michal['impressionProperties'] = report;
                report = 9;
                romeon = option[report];
                foxtra = golfie.bind(oscard)(romeon);
                romeon = foxtra.getHeaderNoTitle;
                romeon = romeon.bind(foxtra)();
                michal['headerTitle'] = romeon;
                romeon = function() { // Original name: render
                    entity = null;
                    return entity;
                };
                michal['render'] = romeon;
                entity[zuuluu] = michal;
                zuuluu = verify.CHANGE_EMAIL_WARNING;
                michal = {};
                romeon = option[yankee];
                romeon = golfie.bind(oscard)(romeon);
                romeon = romeon.ImpressionNames;
                romeon = romeon.USER_VERIFICATION_MODAL;
                michal['impressionName'] = romeon;
                romeon = verify.CHANGE_EMAIL_WARNING;
                romeon = offset.bind(oscard)(romeon);
                michal['impressionProperties'] = romeon;
                romeon = option[report];
                foxtra = golfie.bind(oscard)(romeon);
                romeon = foxtra.getHeaderNoTitle;
                romeon = romeon.bind(foxtra)();
                michal['headerTitle'] = romeon;
                romeon = function() { // Original name: render
                    entity = null;
                    return entity;
                };
                michal['render'] = romeon;
                entity[zuuluu] = michal;
                zuuluu = verify.OVERVIEW;
                michal = {};
                romeon = option[yankee];
                romeon = golfie.bind(oscard)(romeon);
                romeon = romeon.ImpressionNames;
                romeon = romeon.USER_VERIFICATION_MODAL;
                michal['impressionName'] = romeon;
                romeon = verify.OVERVIEW;
                romeon = offset.bind(oscard)(romeon);
                michal['impressionProperties'] = romeon;
                romeon = false;
                michal['gestureEnabled'] = romeon;
                romeon = function() { // Original name: headerLeft
                    entity = null;
                    return entity;
                };
                michal['headerLeft'] = romeon;
                romeon = option[report];
                foxtra = golfie.bind(oscard)(romeon);
                romeon = foxtra.getHeaderNoTitle;
                romeon = romeon.bind(foxtra)();
                michal['headerTitle'] = romeon;
                romeon = function() { // Original name: headerRight
                    tangon = _closure1_slot11;
                    option = _closure1_slot0;
                    verify = _closure1_slot2;
                    entity = 10;
                    entity = verify[entity];
                    zuuluu = undefined;
                    entity = option.bind(zuuluu)(entity);
                    michal = entity.HeaderActionButton;
                    entity = {};
                    oscard = _closure1_slot1;
                    report = 11;
                    report = verify[report];
                    report = oscard.bind(zuuluu)(report);
                    entity['source'] = report;
                    report = 12;
                    oscard = verify[report];
                    oscard = option.bind(zuuluu)(oscard);
                    golfie = oscard.intl;
                    oscard = golfie.string;
                    report = verify[report];
                    report = option.bind(zuuluu)(report);
                    report = report.t;
                    report = report.PdRCRk;
                    report = oscard.bind(golfie)(report);
                    entity['accessibilityLabel'] = report;
                    report = function() { // Original name: onPress
                        verify = _closure1_slot0;
                        offset = _closure1_slot2;
                        entity = 13;
                        michal = offset[entity];
                        entity = undefined;
                        tangon = verify.bind(entity)(michal);
                        zuuluu = tangon.showSimpleActionSheet;
                        michal = {};
                        report = 'VerificationOverviewMore';
                        michal['key'] = report;
                        oscard = {};
                        report = 12;
                        golfie = offset[report];
                        golfie = verify.bind(entity)(golfie);
                        option = golfie.intl;
                        golfie = option.string;
                        report = offset[report];
                        report = verify.bind(entity)(report);
                        report = report.t;
                        report = report.2jxGen;
                        report = golfie.bind(option)(report);
                        oscard['label'] = report;
                        report = true;
                        oscard['isDestructive'] = report;
                        report = function() { // Original name: onPress
                            zuuluu = _closure1_slot1;
                            michal = _closure1_slot2;
                            entity = 14;
                            michal = michal[entity];
                            entity = undefined;
                            michal = zuuluu.bind(entity)(michal);
                            entity = michal.logout;
                            entity = entity.bind(michal)();
                            return entity;
                        };
                        oscard['onPress'] = report;
                        report = new Array(1);
                        report[0] = oscard;
                        michal['options'] = report;
                        michal = zuuluu.bind(tangon)(michal);
                        return entity;
                    };
                    entity['onPress'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                michal['headerRight'] = romeon;
                romeon = function() { // Original name: render
                    tangon = _closure1_slot11;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 15;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                michal['render'] = romeon;
                entity[zuuluu] = michal;
                zuuluu = verify.RESEND_EMAIL;
                michal = {};
                romeon = option[yankee];
                romeon = golfie.bind(oscard)(romeon);
                romeon = romeon.ImpressionNames;
                romeon = romeon.USER_VERIFICATION_MODAL;
                michal['impressionName'] = romeon;
                romeon = verify.RESEND_EMAIL;
                romeon = offset.bind(oscard)(romeon);
                michal['impressionProperties'] = romeon;
                romeon = option[report];
                foxtra = golfie.bind(oscard)(romeon);
                romeon = foxtra.getHeaderNoTitle;
                romeon = romeon.bind(foxtra)();
                michal['headerTitle'] = romeon;
                romeon = function() { // Original name: render
                    tangon = _closure1_slot11;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 16;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                michal['render'] = romeon;
                entity[zuuluu] = michal;
                zuuluu = verify.CHANGE_EMAIL_COMPLETE;
                michal = {};
                romeon = option[yankee];
                romeon = golfie.bind(oscard)(romeon);
                romeon = romeon.ImpressionNames;
                romeon = romeon.USER_VERIFICATION_MODAL;
                michal['impressionName'] = romeon;
                romeon = verify.RESEND_EMAIL;
                romeon = offset.bind(oscard)(romeon);
                michal['impressionProperties'] = romeon;
                romeon = option[report];
                foxtra = golfie.bind(oscard)(romeon);
                romeon = foxtra.getHeaderNoTitle;
                romeon = romeon.bind(foxtra)();
                michal['headerTitle'] = romeon;
                romeon = function() { // Original name: render
                    tangon = _closure1_slot11;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 16;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                michal['render'] = romeon;
                entity[zuuluu] = michal;
                zuuluu = verify.CONFIRM_EMAIL_CHANGE_CODE;
                michal = {};
                romeon = option[yankee];
                romeon = golfie.bind(oscard)(romeon);
                romeon = romeon.ImpressionNames;
                romeon = romeon.USER_VERIFICATION_MODAL;
                michal['impressionName'] = romeon;
                romeon = verify.CONFIRM_EMAIL_CHANGE_CODE;
                romeon = offset.bind(oscard)(romeon);
                michal['impressionProperties'] = romeon;
                romeon = option[report];
                foxtra = golfie.bind(oscard)(romeon);
                romeon = foxtra.getHeaderNoTitle;
                romeon = romeon.bind(foxtra)();
                michal['headerTitle'] = romeon;
                romeon = function() { // Original name: render
                    tangon = _closure1_slot11;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 17;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    report = false;
                    entity['isChangeEmail'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                michal['render'] = romeon;
                entity[zuuluu] = michal;
                zuuluu = verify.CONFIRM_EMAIL_CHANGE_START;
                michal = {};
                romeon = option[yankee];
                romeon = golfie.bind(oscard)(romeon);
                romeon = romeon.ImpressionNames;
                romeon = romeon.USER_VERIFICATION_MODAL;
                michal['impressionName'] = romeon;
                romeon = verify.CONFIRM_EMAIL_CHANGE_START;
                romeon = offset.bind(oscard)(romeon);
                michal['impressionProperties'] = romeon;
                romeon = option[report];
                foxtra = golfie.bind(oscard)(romeon);
                romeon = foxtra.getHeaderNoTitle;
                romeon = romeon.bind(foxtra)();
                michal['headerTitle'] = romeon;
                romeon = function() { // Original name: render
                    tangon = _closure1_slot11;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 18;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                michal['render'] = romeon;
                entity[zuuluu] = michal;
                zuuluu = verify.ENTER_EMAIL;
                michal = {};
                romeon = option[yankee];
                romeon = golfie.bind(oscard)(romeon);
                romeon = romeon.ImpressionNames;
                romeon = romeon.USER_VERIFICATION_MODAL;
                michal['impressionName'] = romeon;
                romeon = verify.ENTER_EMAIL;
                romeon = offset.bind(oscard)(romeon);
                michal['impressionProperties'] = romeon;
                romeon = option[report];
                foxtra = golfie.bind(oscard)(romeon);
                romeon = foxtra.getHeaderNoTitle;
                romeon = romeon.bind(foxtra)();
                michal['headerTitle'] = romeon;
                romeon = function() { // Original name: render
                    tangon = _closure1_slot11;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 19;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    report = false;
                    entity['isChangeEmail'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                michal['render'] = romeon;
                entity[zuuluu] = michal;
                zuuluu = verify.ADD_PHONE;
                michal = {};
                romeon = option[yankee];
                romeon = golfie.bind(oscard)(romeon);
                romeon = romeon.ImpressionNames;
                romeon = romeon.USER_VERIFICATION_MODAL;
                michal['impressionName'] = romeon;
                romeon = verify.ADD_PHONE;
                romeon = offset.bind(oscard)(romeon);
                michal['impressionProperties'] = romeon;
                romeon = option[report];
                foxtra = golfie.bind(oscard)(romeon);
                romeon = foxtra.getHeaderNoTitle;
                romeon = romeon.bind(foxtra)();
                michal['headerTitle'] = romeon;
                romeon = function(argFoo, argBar) { // Original name: render
                    entity = argBar;
                    var _closure5_slot0 = entity;
                    tangon = _closure1_slot11;
                    michal = _closure1_slot1;
                    option = _closure1_slot2;
                    entity = 20;
                    entity = option[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    verify = argFoo;
                    offset = entity;
                    golfie = copyDataProperties(offset, verify);
                    golfie = _closure1_slot0;
                    oscard = 21;
                    oscard = option[oscard];
                    oscard = golfie.bind(zuuluu)(oscard);
                    oscard = oscard.ChangePhoneReason;
                    golfie = oscard.USER_ACTION_REQUIRED;
                    oscard = 'reason';
                    entity[oscard] = golfie;
                    oscard = function(argFoo) { // Original name: onComplete
                        tangon = _closure5_slot0;
                        zuuluu = tangon.push;
                        entity = _closure1_slot10;
                        michal = entity.VERIFY_PHONE;
                        entity = {};
                        report = argFoo;
                        entity['phone'] = report;
                        report = function(argFoo) { // Original name: onVerified
                            entity = argFoo;
                            var _closure7_slot0 = entity;
                            report = _closure5_slot0;
                            tangon = report.push;
                            michal = _closure1_slot10;
                            zuuluu = michal.VERIFY_PASSWORD;
                            michal = {};
                            golfie = true;
                            michal['hideUnverifiedBanner'] = golfie;
                            option = _closure1_slot3;
                            entity = undefined;
                            golfie = function* (argFoo) {
                                entity = function* (argFoo) { // Original name: ?anon_0_
                                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                                        StartGenerator();
                                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                                        if(michal) { _fun00004_ip = 236; continue _fun00003 }
 10:
                                        tangon = argFoo;
 13: // try_start_0
                                        zuuluu = _closure1_slot1;
                                        report = _closure1_slot2;
                                        michal = 22;
                                        michal = report[michal];
                                        verify = undefined;
                                        oscard = zuuluu.bind(verify)(michal);
                                        report = oscard.isPhoneReverification;
                                        zuuluu = _closure1_slot8;
                                        michal = zuuluu.getCurrentUser;
                                        zuuluu = michal.bind(zuuluu)();
                                        golfie = _closure1_slot7;
                                        michal = golfie.getAction;
                                        michal = michal.bind(golfie)();
                                        zuuluu = report.bind(oscard)(zuuluu, michal);
                                        oscard = _closure1_slot1;
                                        offset = _closure1_slot2;
                                        michal = 21;
                                        report = offset[michal];
                                        golfie = oscard.bind(verify)(report);
                                        if(zuuluu) { _fun00004_ip = 167; continue _fun00003 }
 100:
                                        yankee = golfie.addPhone;
                                        oscard = _closure7_slot0;
                                        report = tangon;
                                        romeon = _closure1_slot0;
                                        zuuluu = offset[michal];
                                        zuuluu = romeon.bind(verify)(zuuluu);
                                        zuuluu = zuuluu.ChangePhoneReason;
                                        zuuluu = zuuluu.USER_ACTION_REQUIRED;
                                        report = yankee.bind(golfie)(oscard, report, zuuluu);
                                        SaveGenerator(address=152);
 150:
                                        return report;
 152:
                                        ResumeGenerator(result_out_reg=4, return_bool_out_reg=2);
                                        oscard = zuuluu;
                                        zuuluu = report;
                                        if(!oscard) { _fun00004_ip = 225; continue _fun00003 }
 164: // try_end0
                                        return report;
 167: // try_start_1
                                        oscard = golfie.reverifyPhone;
                                        report = _closure7_slot0;
                                        option = _closure1_slot0;
                                        michal = offset[michal];
                                        michal = option.bind(verify)(michal);
                                        michal = michal.ChangePhoneReason;
                                        michal = michal.USER_ACTION_REQUIRED;
                                        michal = oscard.bind(golfie)(report, tangon, michal);
                                        SaveGenerator(address=216);
 214:
                                        return michal;
 216:
                                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=3);
                                        zuuluu = michal;
                                        if(tangon) { _fun00004_ip = 228; continue _fun00003 }
 225: // try_end1
                                        return zuuluu;
 228:
                                        return michal;
 231: // catch_target0 // catch_target1
                                        CatchBlockStart(arg_register=1);
                                        return michal;
 236:
                                        return entity;
                                    }
                                };
                                return entity;
                            };
                            golfie = option.bind(entity)(golfie);
                            var _closure7_slot2 = golfie;
                            golfie = function() {
                                entity = undefined;
                                tangon = _closure7_slot2;
                                zuuluu = tangon.apply;
                                entity = arguments;
                                michal = entity;
                                entity = this;
                                entity = zuuluu.bind(tangon)(entity, michal);
                                return entity;
                            };
                            michal['onSubmit'] = golfie;
                            golfie = function* () {
                                entity = function* () { // Original name: ?anon_0_
                                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                                        StartGenerator();
                                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                                        if(michal) { _fun00006_ip = 155; continue _fun00005 }
 10:
                                        report = _closure1_slot0;
                                        zuuluu = _closure1_slot2;
                                        michal = 23;
                                        michal = zuuluu[michal];
                                        zuuluu = undefined;
                                        oscard = report.bind(zuuluu)(michal);
                                        report = oscard.waitUntil;
                                        michal = function() {
                                            zuuluu = _closure1_slot7;
                                            michal = zuuluu.getAction;
                                            michal = michal.bind(zuuluu)();
                                            entity = _closure1_slot9;
                                            entity = entity.REQUIRE_VERIFIED_PHONE;
                                            entity = michal !== entity;
                                            return entity;
                                        };
                                        michal = report.bind(oscard)(michal);
                                        SaveGenerator(address=59);
 57:
                                        return michal;
 59:
                                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                                        if(report) { _fun00006_ip = 152; continue _fun00005 }
 65:
                                        oscard = _closure1_slot7;
                                        report = oscard.getAction;
                                        oscard = report.bind(oscard)();
                                        report = _closure1_slot9;
                                        report = report.REQUIRE_VERIFIED_EMAIL;
                                        if(!(oscard !== report)) { _fun00006_ip = 122; continue _fun00005 }
 93:
                                        golfie = _closure5_slot0;
                                        oscard = golfie.push;
                                        report = _closure1_slot10;
                                        report = report.OVERVIEW;
                                        report = oscard.bind(golfie)(report);
                                        _fun00006_ip = 149; continue _fun00005;
 122:
                                        oscard = _closure5_slot0;
                                        report = oscard.push;
                                        tangon = _closure1_slot10;
                                        tangon = tangon.PHONE_THEN_EMAIL_INTERSTITIAL;
                                        tangon = report.bind(oscard)(tangon);
 149:
                                        return zuuluu;
 152:
                                        return michal;
 155:
                                        return entity;
                                    }
                                };
                                return entity;
                            };
                            golfie = option.bind(entity)(golfie);
                            var _closure7_slot1 = golfie;
                            oscard = function() {
                                entity = undefined;
                                tangon = _closure7_slot1;
                                zuuluu = tangon.apply;
                                entity = arguments;
                                michal = entity;
                                entity = this;
                                entity = zuuluu.bind(tangon)(entity, michal);
                                return entity;
                            };
                            michal['onSuccess'] = oscard;
                            michal = tangon.bind(report)(zuuluu, michal);
                            return entity;
                        };
                        entity['onVerified'] = report;
                        entity = zuuluu.bind(tangon)(michal, entity);
                        return entity;
                    };
                    report = 'onComplete';
                    entity[report] = oscard;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                michal['render'] = romeon;
                entity[zuuluu] = michal;
                zuuluu = verify.VERIFY_PHONE;
                michal = {};
                romeon = option[yankee];
                romeon = golfie.bind(oscard)(romeon);
                romeon = romeon.ImpressionNames;
                romeon = romeon.USER_VERIFICATION_MODAL;
                michal['impressionName'] = romeon;
                romeon = verify.VERIFY_PHONE;
                romeon = offset.bind(oscard)(romeon);
                michal['impressionProperties'] = romeon;
                romeon = option[report];
                foxtra = golfie.bind(oscard)(romeon);
                romeon = foxtra.getHeaderNoTitle;
                romeon = romeon.bind(foxtra)();
                michal['headerTitle'] = romeon;
                romeon = function(argFoo) { // Original name: render
                    tangon = _closure1_slot11;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 24;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    report = true;
                    entity['disableKeyboardAvoidingView'] = report;
                    oscard = argFoo;
                    golfie = entity;
                    report = copyDataProperties(golfie, oscard);
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                michal['render'] = romeon;
                entity[zuuluu] = michal;
                zuuluu = verify.VERIFY_PASSWORD;
                michal = {};
                romeon = option[yankee];
                romeon = golfie.bind(oscard)(romeon);
                romeon = romeon.ImpressionNames;
                romeon = romeon.USER_VERIFICATION_MODAL;
                michal['impressionName'] = romeon;
                romeon = verify.VERIFY_PASSWORD;
                romeon = offset.bind(oscard)(romeon);
                michal['impressionProperties'] = romeon;
                romeon = option[report];
                foxtra = golfie.bind(oscard)(romeon);
                romeon = foxtra.getHeaderNoTitle;
                romeon = romeon.bind(foxtra)();
                michal['headerTitle'] = romeon;
                romeon = function(argFoo) { // Original name: render
                    tangon = _closure1_slot11;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 25;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    oscard = argFoo;
                    golfie = entity;
                    report = copyDataProperties(golfie, oscard);
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                michal['render'] = romeon;
                entity[zuuluu] = michal;
                zuuluu = verify.PHONE_THEN_EMAIL_INTERSTITIAL;
                michal = {};
                yankee = option[yankee];
                yankee = golfie.bind(oscard)(yankee);
                yankee = yankee.ImpressionNames;
                yankee = yankee.USER_VERIFICATION_MODAL;
                michal['impressionName'] = yankee;
                verify = verify.PHONE_THEN_EMAIL_INTERSTITIAL;
                verify = offset.bind(oscard)(verify);
                michal['impressionProperties'] = verify;
                report = option[report];
                oscard = golfie.bind(oscard)(report);
                report = oscard.getHeaderNoTitle;
                report = report.bind(oscard)();
                michal['headerTitle'] = report;
                tangon = function(argFoo, argBar) { // Original name: render
                    entity = argBar;
                    var _closure5_slot0 = entity;
                    zuuluu = _closure1_slot5;
                    michal = zuuluu.create;
                    entity = {};
                    tangon = {'position': 'absolute', 'right': 32, 'bottom': 32, 'left': 32};
                    entity['button'] = tangon;
                    verify = michal.bind(zuuluu)(entity);
                    tangon = _closure1_slot11;
                    oscard = _closure1_slot1;
                    romeon = _closure1_slot2;
                    entity = 26;
                    entity = romeon[entity];
                    zuuluu = undefined;
                    michal = oscard.bind(zuuluu)(entity);
                    entity = {};
                    yankee = _closure1_slot0;
                    report = 27;
                    report = romeon[report];
                    report = yankee.bind(zuuluu)(report);
                    report = report.VerifyPhone;
                    entity['Illustration'] = report;
                    option = 12;
                    report = romeon[option];
                    report = yankee.bind(zuuluu)(report);
                    foxtra = report.intl;
                    offset = foxtra.string;
                    report = romeon[option];
                    report = yankee.bind(zuuluu)(report);
                    report = report.t;
                    report = report.KLnLIC;
                    report = offset.bind(foxtra)(report);
                    entity['title'] = report;
                    report = romeon[option];
                    report = yankee.bind(zuuluu)(report);
                    foxtra = report.intl;
                    offset = foxtra.string;
                    report = romeon[option];
                    report = yankee.bind(zuuluu)(report);
                    report = report.t;
                    report = report.XGbCq6;
                    report = offset.bind(foxtra)(report);
                    entity['body'] = report;
                    report = 28;
                    report = romeon[report];
                    oscard = oscard.bind(zuuluu)(report);
                    report = {};
                    verify = verify.button;
                    report['style'] = verify;
                    verify = romeon[option];
                    verify = yankee.bind(zuuluu)(verify);
                    offset = verify.intl;
                    verify = offset.string;
                    option = romeon[option];
                    option = yankee.bind(zuuluu)(option);
                    option = option.t;
                    option = option.3oK4q6;
                    option = verify.bind(offset)(option);
                    report['text'] = option;
                    golfie = function() { // Original name: onPress
                        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                            zuuluu = _closure1_slot8;
                            entity = zuuluu.getCurrentUser;
                            report = entity.bind(zuuluu)();
                            tangon = null;
                            oscard = tangon == report;
                            entity = undefined;
                            zuuluu = undefined;
                            if(oscard) { _fun00008_ip = 35; continue _fun00007 }
 29:
                            zuuluu = report.email;
 35:
                            if(!(tangon == zuuluu)) { _fun00008_ip = 51; continue _fun00007 }
 39:
                            zuuluu = _closure1_slot10;
                            tangon = zuuluu.ENTER_EMAIL;
                            _fun00008_ip = 61; continue _fun00007;
 51:
                            michal = _closure1_slot10;
                            tangon = michal.RESEND_EMAIL;
 61:
                            zuuluu = _closure5_slot0;
                            michal = zuuluu.push;
                            michal = michal.bind(zuuluu)(tangon);
                            return entity;
                        }
                    };
                    report['onPress'] = golfie;
                    report = tangon.bind(zuuluu)(oscard, report);
                    entity['children'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                michal['render'] = tangon;
                entity[zuuluu] = michal;
                return entity;
            };
            entity = undefined;
            entity = michal.bind(entity)();
            return entity;
        };
        oscard = new Array(0);
        oscard = offset.bind(yankee)(golfie, oscard);
        entity['screens'] = oscard;
        entity['initialRouteStack'] = report;
        report = 12;
        oscard = verify[report];
        oscard = option.bind(tangon)(oscard);
        golfie = oscard.intl;
        oscard = golfie.string;
        report = verify[report];
        report = option.bind(tangon)(report);
        report = report.t;
        report = report.13/7kZ;
        report = oscard.bind(golfie)(report);
        entity['headerBackTitle'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();