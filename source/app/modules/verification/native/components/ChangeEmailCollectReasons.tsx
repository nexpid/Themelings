// app/modules/verification/native/components/ChangeEmailCollectReasons.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot4 = golf;
    tango = tango.ScrollView;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.FREE_TEXT_RESPONSE_MAX_LENGTH;
    var _closure1_slot7 = golf;
    golf = tango.ChangeEmailReasons;
    var _closure1_slot8 = golf;
    golf = tango.CHANGE_EMAIL_REASONS_ORDER;
    var _closure1_slot9 = golf;
    tango = tango.SUSPICIOUS_CHANGE_EMAIL_REASONS;
    var _closure1_slot10 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot11 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot12 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot13 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot14 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 7;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = romeo;
    tango['background'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_12;
    verify['paddingVertical'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['paddingHorizontal'] = romeo;
    tango['container'] = verify;
    verify = {};
    romeo = 'center';
    verify['textAlign'] = romeo;
    tango['title'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_BASE_PRIMARY;
    verify['backgroundColor'] = romeo;
    tango['form'] = verify;
    verify = {};
    romeo = '100%';
    verify['width'] = romeo;
    tango['button'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_BASE_TERTIARY;
    verify['backgroundColor'] = offset;
    tango['formRow'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot15 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/verification/native/components/ChangeEmailCollectReasons.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ChangeEmailCollectReasons
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            sizing = entity.changeEmailReason;
            var _closure2_slot0 = sizing;
            golf = entity.setChangeEmailReason;
            var _closure2_slot1 = golf;
            context = entity.freeTextResponse;
            record = entity.setFreeTextResponse;
            var _closure2_slot2 = record;
            entity = _closure1_slot15;
            report = undefined;
            output = entity.bind(report)();
            var _closure2_slot3 = output;
            oscar = _closure1_slot0;
            options = _closure1_slot2;
            entity = 8;
            entity = options[entity];
            verify = oscar.bind(report)(entity);
            tango = verify.useStateFromStores;
            entity = _closure1_slot6;
            zulu = new Array(1);
            zulu[0] = entity;
            entity = function() {
                mike = _closure1_slot6;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            entity = tango.bind(verify)(zulu, entity);
            zulu = 9;
            zulu = options[zulu];
            tango = oscar.bind(report)(zulu);
            zulu = tango.useNavigation;
            zulu = zulu.bind(tango)();
            var _closure2_slot4 = zulu;
            tango = 10;
            tango = options[tango];
            options = oscar.bind(report)(tango);
            oscar = options.useIsEmailChangeReasoningButtonsFreeTextResponseExperimentEnabled;
            tango = 'change_email_collect_reasons';
            echo = oscar.bind(options)(tango);
            oscar = _closure1_slot3;
            options = oscar.useCallback;
            tango = new Array(2);
            tango[0] = zulu;
            tango[1] = sizing;
            zulu = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tango = _closure1_slot1;
                    zulu = _closure1_slot2;
                    entity = 11;
                    zulu = zulu[entity];
                    entity = undefined;
                    options = tango.bind(entity)(zulu);
                    golf = options.track;
                    zulu = _closure1_slot11;
                    oscar = zulu.USER_ACCOUNT_EMAIL_CHANGE_REASON_CONTINUE;
                    tango = {};
                    report = _closure2_slot0;
                    tango['change_email_reason_enum'] = report;
                    tango = golf.bind(options)(oscar, tango);
                    tango = null;
                    if(!(tango != report)) { _fun00004_ip = 87; continue _fun00003 }
 66:
                    oscar = _closure1_slot10;
                    report = oscar.has;
                    tango = _closure2_slot0;
                    tango = report.bind(oscar)(tango);
                    if(tango) { _fun00004_ip = 135; continue _fun00003 }
 87:
                    oscar = _closure2_slot4;
                    report = oscar.push;
                    golf = _closure1_slot0;
                    options = _closure1_slot2;
                    tango = 12;
                    tango = options[tango];
                    tango = golf.bind(entity)(tango);
                    tango = tango.VerificationModalScenes;
                    tango = tango.ENTER_EMAIL;
                    tango = report.bind(oscar)(tango);
                    _fun00004_ip = 181; continue _fun00003;
 135:
                    tango = _closure2_slot4;
                    zulu = tango.push;
                    report = _closure1_slot0;
                    oscar = _closure1_slot2;
                    mike = 12;
                    mike = oscar[mike];
                    mike = report.bind(entity)(mike);
                    mike = mike.VerificationModalScenes;
                    mike = mike.CHANGE_EMAIL_WARNING;
                    mike = zulu.bind(tango)(mike);
 181:
                    return entity;
                }
            };
            result = options.bind(oscar)(zulu, tango);
            tango = oscar.useMemo;
            zulu = new Array(4);
            zulu[0] = sizing;
            zulu[1] = golf;
            zulu[2] = record;
            golf = output.formRow;
            zulu[3] = golf;
            mike = function() {
                tango = _closure1_slot12;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 13;
                entity = zulu[entity];
                zulu = undefined;
                entity = mike.bind(zulu)(entity);
                mike = entity.FormSection;
                entity = {};
                oscar = 'radiogroup';
                entity['accessibilityRole'] = oscar;
                golf = _closure1_slot9;
                oscar = golf.map;
                report = function(argFoo, argBar) {
                    yankee = argFoo;
                    var _closure4_slot0 = yankee;
                    tango = _closure1_slot14;
                    zulu = _closure1_slot13;
                    mike = {};
                    options = _closure1_slot12;
                    oscar = _closure1_slot1;
                    verify = _closure1_slot2;
                    entity = 14;
                    report = verify[entity];
                    entity = undefined;
                    offset = oscar.bind(entity)(report);
                    oscar = {};
                    foxtrot = _closure2_slot3;
                    foxtrot = foxtrot.formRow;
                    oscar['style'] = foxtrot;
                    golf = _closure1_slot0;
                    foxtrot = 15;
                    foxtrot = verify[foxtrot];
                    backup = golf.bind(entity)(foxtrot);
                    foxtrot = backup.getChangeEmailReasonDisplayText;
                    foxtrot = foxtrot.bind(backup)(yankee);
                    oscar['label'] = foxtrot;
                    romeo = function() { // Original name: onPress
                        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                            tango = _closure1_slot1;
                            zulu = _closure1_slot2;
                            entity = 11;
                            zulu = zulu[entity];
                            entity = undefined;
                            golf = tango.bind(entity)(zulu);
                            oscar = golf.track;
                            zulu = _closure1_slot11;
                            report = zulu.USER_ACCOUNT_EMAIL_CHANGE_REASON_SELECTED;
                            zulu = {};
                            tango = _closure4_slot0;
                            zulu['change_email_reason_enum'] = tango;
                            zulu = oscar.bind(golf)(report, zulu);
                            report = _closure2_slot1;
                            report = report.bind(entity)(tango);
                            report = _closure2_slot2;
                            zulu = '';
                            zulu = report.bind(entity)(zulu);
                            zulu = _closure1_slot8;
                            zulu = zulu.SOMETHING_ELSE;
                            if(!(tango === zulu)) { _fun00006_ip = 142; continue _fun00005 }
 99:
                            zulu = _closure1_slot1;
                            tango = _closure1_slot2;
                            mike = 10;
                            mike = tango[mike];
                            tango = zulu.bind(entity)(mike);
                            zulu = tango.trackExposure;
                            mike = {};
                            report = 'change_email_collect_reasons';
                            mike['location'] = report;
                            mike = zulu.bind(tango)(mike);
 142:
                            return entity;
                        }
                    };
                    oscar['onPress'] = romeo;
                    report = _closure2_slot0;
                    report = report === yankee;
                    oscar['selected'] = report;
                    report = global;
                    report = report.HermesInternal;
                    romeo = report.concat;
                    yankee = 'formrow-';
                    report = argBar;
                    report = romeo.bind(yankee)(report);
                    oscar = options.bind(entity)(offset, oscar, report);
                    report = new Array(2);
                    report[0] = oscar;
                    oscar = 13;
                    oscar = verify[oscar];
                    oscar = golf.bind(entity)(oscar);
                    golf = oscar.FormDivider;
                    oscar = {};
                    oscar = options.bind(entity)(golf, oscar);
                    report[1] = oscar;
                    mike['children'] = report;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                report = oscar.bind(golf)(report);
                entity['children'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            control = tango.bind(oscar)(mike, zulu);
            kilo = null;
            mike = kilo == entity;
            entity = null;
            if(mike) { _fun00002_ip = 808; continue _fun00001 }
 255:
            tango = _closure1_slot12;
            backup = _closure1_slot0;
            foxtrot = _closure1_slot2;
            mike = 16;
            mike = foxtrot[mike];
            mike = backup.bind(report)(mike);
            zulu = mike.RedesignCompat;
            mike = {};
            golf = _closure1_slot5;
            oscar = {'keyboardShouldPersistTaps': 'handled', 'alwaysBounceVertical': false};
            options = output.background;
            oscar['style'] = options;
            offset = _closure1_slot14;
            verify = _closure1_slot4;
            options = {};
            yankee = output.container;
            options['style'] = yankee;
            yankee = 17;
            yankee = foxtrot[yankee];
            yankee = backup.bind(report)(yankee);
            update = yankee.Text;
            yankee = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            source = output.title;
            yankee['style'] = source;
            source = 18;
            vacuum = foxtrot[source];
            vacuum = backup.bind(report)(vacuum);
            config = vacuum.intl;
            sequence = config.string;
            vacuum = foxtrot[source];
            vacuum = backup.bind(report)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.41NIIi;
            vacuum = sequence.bind(config)(vacuum);
            yankee['children'] = vacuum;
            update = tango.bind(report)(update, yankee);
            yankee = new Array(3);
            yankee[0] = update;
            update = 13;
            foxtrot = foxtrot[update];
            foxtrot = backup.bind(report)(foxtrot);
            backup = foxtrot.Form;
            foxtrot = {};
            output = output.form;
            foxtrot['style'] = output;
            output = new Array(2);
            output[0] = control;
            if(!echo) { _fun00002_ip = 498; continue _fun00001 }
 484:
            control = _closure1_slot8;
            control = control.SOMETHING_ELSE;
            echo = sizing === control;
 498:
            if(!echo) { _fun00002_ip = 646; continue _fun00001 }
 504:
            vacuum = _closure1_slot12;
            sierra = _closure1_slot0;
            papa = _closure1_slot2;
            update = papa[update];
            update = sierra.bind(report)(update);
            control = update.FormSection;
            update = {};
            sequence = 'text';
            update['accessibilityRole'] = sequence;
            sequence = 19;
            sequence = papa[sequence];
            sequence = sierra.bind(report)(sequence);
            config = sequence.TextArea;
            sequence = {};
            target = _closure1_slot7;
            sequence['maxLength'] = target;
            target = papa[source];
            target = sierra.bind(report)(target);
            status = target.intl;
            target = status.string;
            papa = papa[source];
            papa = sierra.bind(report)(papa);
            papa = papa.t;
            papa = papa.Q8Rk7O;
            papa = target.bind(status)(papa);
            sequence['placeholder'] = papa;
            sequence['value'] = context;
            sequence['onChange'] = record;
            sequence = vacuum.bind(report)(config, sequence);
            update['children'] = sequence;
            echo = vacuum.bind(report)(control, update);
 646:
            output[1] = echo;
            foxtrot['children'] = output;
            foxtrot = offset.bind(report)(backup, foxtrot);
            yankee[1] = foxtrot;
            backup = _closure1_slot12;
            update = _closure1_slot0;
            output = _closure1_slot2;
            romeo = 20;
            romeo = output[romeo];
            romeo = update.bind(report)(romeo);
            foxtrot = romeo.Button;
            romeo = {'size': 'md', 'variant': 'primary'};
            romeo['onPress'] = result;
            result = output[source];
            result = update.bind(report)(result);
            echo = result.intl;
            result = echo.string;
            output = output[source];
            output = update.bind(report)(output);
            output = output.t;
            output = output.XiOHRU;
            output = result.bind(echo)(output);
            romeo['text'] = output;
            kilo = kilo == sizing;
            romeo['disabled'] = kilo;
            romeo = backup.bind(report)(foxtrot, romeo);
            yankee[2] = romeo;
            options['children'] = yankee;
            options = offset.bind(report)(verify, options);
            oscar['children'] = options;
            oscar = tango.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 808:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();