// app/modules/verification/native/components/ChangeEmailCollectReasons.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.FREE_TEXT_RESPONSE_MAX_LENGTH;
    var _closure1_slot7 = golfie;
    golfie = tangon.ChangeEmailReasons;
    var _closure1_slot8 = golfie;
    golfie = tangon.CHANGE_EMAIL_REASONS_ORDER;
    var _closure1_slot9 = golfie;
    tangon = tangon.SUSPICIOUS_CHANGE_EMAIL_REASONS;
    var _closure1_slot10 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot11 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot12 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot13 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot14 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 7;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = romeon;
    tangon['background'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_12;
    verify['paddingVertical'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingHorizontal'] = romeon;
    tangon['container'] = verify;
    verify = {};
    romeon = 'center';
    verify['textAlign'] = romeon;
    tangon['title'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_BASE_PRIMARY;
    verify['backgroundColor'] = romeon;
    tangon['form'] = verify;
    verify = {};
    romeon = '100%';
    verify['width'] = romeon;
    tangon['button'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_BASE_TERTIARY;
    verify['backgroundColor'] = offset;
    tangon['formRow'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot15 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/verification/native/components/ChangeEmailCollectReasons.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ChangeEmailCollectReasons
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            sizing = entity.changeEmailReason;
            var _closure2_slot0 = sizing;
            golfie = entity.setChangeEmailReason;
            var _closure2_slot1 = golfie;
            cntext = entity.freeTextResponse;
            record = entity.setFreeTextResponse;
            var _closure2_slot2 = record;
            entity = _closure1_slot15;
            report = undefined;
            output = entity.bind(report)();
            var _closure2_slot3 = output;
            oscard = _closure1_slot0;
            option = _closure1_slot2;
            entity = 8;
            entity = option[entity];
            verify = oscard.bind(report)(entity);
            tangon = verify.useStateFromStores;
            entity = _closure1_slot6;
            zuuluu = new Array(1);
            zuuluu[0] = entity;
            entity = function() {
                michal = _closure1_slot6;
                entity = michal.getCurrentUser;
                entity = entity.bind(michal)();
                return entity;
            };
            entity = tangon.bind(verify)(zuuluu, entity);
            zuuluu = 9;
            zuuluu = option[zuuluu];
            tangon = oscard.bind(report)(zuuluu);
            zuuluu = tangon.useNavigation;
            zuuluu = zuuluu.bind(tangon)();
            var _closure2_slot4 = zuuluu;
            tangon = 10;
            tangon = option[tangon];
            option = oscard.bind(report)(tangon);
            oscard = option.useIsEmailChangeReasoningButtonsFreeTextResponseExperimentEnabled;
            tangon = 'change_email_collect_reasons';
            echoed = oscard.bind(option)(tangon);
            oscard = _closure1_slot3;
            option = oscard.useCallback;
            tangon = new Array(2);
            tangon[0] = zuuluu;
            tangon[1] = sizing;
            zuuluu = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 11;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    option = tangon.bind(entity)(zuuluu);
                    golfie = option.track;
                    zuuluu = _closure1_slot11;
                    oscard = zuuluu.USER_ACCOUNT_EMAIL_CHANGE_REASON_CONTINUE;
                    tangon = {};
                    report = _closure2_slot0;
                    tangon['change_email_reason_enum'] = report;
                    tangon = golfie.bind(option)(oscard, tangon);
                    tangon = null;
                    if(!(tangon != report)) { _fun00004_ip = 87; continue _fun00003 }
 66:
                    oscard = _closure1_slot10;
                    report = oscard.has;
                    tangon = _closure2_slot0;
                    tangon = report.bind(oscard)(tangon);
                    if(tangon) { _fun00004_ip = 135; continue _fun00003 }
 87:
                    oscard = _closure2_slot4;
                    report = oscard.push;
                    golfie = _closure1_slot0;
                    option = _closure1_slot2;
                    tangon = 12;
                    tangon = option[tangon];
                    tangon = golfie.bind(entity)(tangon);
                    tangon = tangon.VerificationModalScenes;
                    tangon = tangon.ENTER_EMAIL;
                    tangon = report.bind(oscard)(tangon);
                    _fun00004_ip = 181; continue _fun00003;
 135:
                    tangon = _closure2_slot4;
                    zuuluu = tangon.push;
                    report = _closure1_slot0;
                    oscard = _closure1_slot2;
                    michal = 12;
                    michal = oscard[michal];
                    michal = report.bind(entity)(michal);
                    michal = michal.VerificationModalScenes;
                    michal = michal.CHANGE_EMAIL_WARNING;
                    michal = zuuluu.bind(tangon)(michal);
 181:
                    return entity;
                }
            };
            result = option.bind(oscard)(zuuluu, tangon);
            tangon = oscard.useMemo;
            zuuluu = new Array(4);
            zuuluu[0] = sizing;
            zuuluu[1] = golfie;
            zuuluu[2] = record;
            golfie = output.formRow;
            zuuluu[3] = golfie;
            michal = function() {
                tangon = _closure1_slot12;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 13;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.FormSection;
                entity = {};
                oscard = 'radiogroup';
                entity['accessibilityRole'] = oscard;
                golfie = _closure1_slot9;
                oscard = golfie.map;
                report = function(argFoo, argBar) {
                    yankee = argFoo;
                    var _closure4_slot0 = yankee;
                    tangon = _closure1_slot14;
                    zuuluu = _closure1_slot13;
                    michal = {};
                    option = _closure1_slot12;
                    oscard = _closure1_slot1;
                    verify = _closure1_slot2;
                    entity = 14;
                    report = verify[entity];
                    entity = undefined;
                    offset = oscard.bind(entity)(report);
                    oscard = {};
                    foxtra = _closure2_slot3;
                    foxtra = foxtra.formRow;
                    oscard['style'] = foxtra;
                    golfie = _closure1_slot0;
                    foxtra = 15;
                    foxtra = verify[foxtra];
                    backup = golfie.bind(entity)(foxtra);
                    foxtra = backup.getChangeEmailReasonDisplayText;
                    foxtra = foxtra.bind(backup)(yankee);
                    oscard['label'] = foxtra;
                    romeon = function() { // Original name: onPress
                        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                            tangon = _closure1_slot1;
                            zuuluu = _closure1_slot2;
                            entity = 11;
                            zuuluu = zuuluu[entity];
                            entity = undefined;
                            golfie = tangon.bind(entity)(zuuluu);
                            oscard = golfie.track;
                            zuuluu = _closure1_slot11;
                            report = zuuluu.USER_ACCOUNT_EMAIL_CHANGE_REASON_SELECTED;
                            zuuluu = {};
                            tangon = _closure4_slot0;
                            zuuluu['change_email_reason_enum'] = tangon;
                            zuuluu = oscard.bind(golfie)(report, zuuluu);
                            report = _closure2_slot1;
                            report = report.bind(entity)(tangon);
                            report = _closure2_slot2;
                            zuuluu = '';
                            zuuluu = report.bind(entity)(zuuluu);
                            zuuluu = _closure1_slot8;
                            zuuluu = zuuluu.SOMETHING_ELSE;
                            if(!(tangon === zuuluu)) { _fun00006_ip = 142; continue _fun00005 }
 99:
                            zuuluu = _closure1_slot1;
                            tangon = _closure1_slot2;
                            michal = 10;
                            michal = tangon[michal];
                            tangon = zuuluu.bind(entity)(michal);
                            zuuluu = tangon.trackExposure;
                            michal = {};
                            report = 'change_email_collect_reasons';
                            michal['location'] = report;
                            michal = zuuluu.bind(tangon)(michal);
 142:
                            return entity;
                        }
                    };
                    oscard['onPress'] = romeon;
                    report = _closure2_slot0;
                    report = report === yankee;
                    oscard['selected'] = report;
                    report = global;
                    report = report.HermesInternal;
                    romeon = report.concat;
                    yankee = 'formrow-';
                    report = argBar;
                    report = romeon.bind(yankee)(report);
                    oscard = option.bind(entity)(offset, oscard, report);
                    report = new Array(2);
                    report[0] = oscard;
                    oscard = 13;
                    oscard = verify[oscard];
                    oscard = golfie.bind(entity)(oscard);
                    golfie = oscard.FormDivider;
                    oscard = {};
                    oscard = option.bind(entity)(golfie, oscard);
                    report[1] = oscard;
                    michal['children'] = report;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                report = oscard.bind(golfie)(report);
                entity['children'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            ctrled = tangon.bind(oscard)(michal, zuuluu);
            kiloes = null;
            michal = kiloes == entity;
            entity = null;
            if(michal) { _fun00002_ip = 804; continue _fun00001 }
 255:
            tangon = _closure1_slot12;
            backup = _closure1_slot0;
            foxtra = _closure1_slot2;
            michal = 16;
            michal = foxtra[michal];
            michal = backup.bind(report)(michal);
            zuuluu = michal.RedesignCompat;
            michal = {};
            golfie = _closure1_slot5;
            oscard = {'keyboardShouldPersistTaps': 'handled', 'alwaysBounceVertical': false};
            option = output.background;
            oscard['style'] = option;
            offset = _closure1_slot14;
            verify = _closure1_slot4;
            option = {};
            yankee = output.container;
            option['style'] = yankee;
            yankee = 17;
            yankee = foxtra[yankee];
            yankee = backup.bind(report)(yankee);
            update = yankee.Text;
            yankee = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            source = output.title;
            yankee['style'] = source;
            source = 18;
            vacuum = foxtra[source];
            vacuum = backup.bind(report)(vacuum);
            config = vacuum.intl;
            sequen = config.string;
            vacuum = foxtra[source];
            vacuum = backup.bind(report)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.41NIIi;
            vacuum = sequen.bind(config)(vacuum);
            yankee['children'] = vacuum;
            update = tangon.bind(report)(update, yankee);
            yankee = new Array(3);
            yankee[0] = update;
            update = 13;
            foxtra = foxtra[update];
            foxtra = backup.bind(report)(foxtra);
            backup = foxtra.Form;
            foxtra = {};
            output = output.form;
            foxtra['style'] = output;
            output = new Array(2);
            output[0] = ctrled;
            if(!echoed) { _fun00002_ip = 494; continue _fun00001 }
 480:
            ctrled = _closure1_slot8;
            ctrled = ctrled.SOMETHING_ELSE;
            echoed = sizing === ctrled;
 494:
            if(!echoed) { _fun00002_ip = 642; continue _fun00001 }
 500:
            vacuum = _closure1_slot12;
            sierra = _closure1_slot0;
            papara = _closure1_slot2;
            update = papara[update];
            update = sierra.bind(report)(update);
            ctrled = update.FormSection;
            update = {};
            sequen = 'text';
            update['accessibilityRole'] = sequen;
            sequen = 19;
            sequen = papara[sequen];
            sequen = sierra.bind(report)(sequen);
            config = sequen.TextArea;
            sequen = {};
            target = _closure1_slot7;
            sequen['maxLength'] = target;
            target = papara[source];
            target = sierra.bind(report)(target);
            status = target.intl;
            target = status.string;
            papara = papara[source];
            papara = sierra.bind(report)(papara);
            papara = papara.t;
            papara = papara.Q8Rk7O;
            papara = target.bind(status)(papara);
            sequen['placeholder'] = papara;
            sequen['value'] = cntext;
            sequen['onChange'] = record;
            sequen = vacuum.bind(report)(config, sequen);
            update['children'] = sequen;
            echoed = vacuum.bind(report)(ctrled, update);
 642:
            output[1] = echoed;
            foxtra['children'] = output;
            foxtra = offset.bind(report)(backup, foxtra);
            yankee[1] = foxtra;
            backup = _closure1_slot12;
            update = _closure1_slot0;
            output = _closure1_slot2;
            romeon = 20;
            romeon = output[romeon];
            romeon = update.bind(report)(romeon);
            foxtra = romeon.Button;
            romeon = {'size': 'md', 'variant': 'primary'};
            romeon['onPress'] = result;
            result = output[source];
            result = update.bind(report)(result);
            echoed = result.intl;
            result = echoed.string;
            output = output[source];
            output = update.bind(report)(output);
            output = output.t;
            output = output.XiOHRU;
            output = result.bind(echoed)(output);
            romeon['text'] = output;
            kiloes = kiloes == sizing;
            romeon['disabled'] = kiloes;
            romeon = backup.bind(report)(foxtra, romeon);
            yankee[2] = romeon;
            option['children'] = yankee;
            option = offset.bind(report)(verify, option);
            oscard['children'] = option;
            oscard = tangon.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 804:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();