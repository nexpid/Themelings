// app/modules/verification/native/components/ConfirmEmailChangeStart.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    options = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(options);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.View;
    var _closure1_slot6 = options;
    options = tango.Image;
    var _closure1_slot7 = options;
    tango = tango.ScrollView;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot10 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot11 = tango;
    tango = 6;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    tango = {'flex': 1, 'padding': 16, 'alignItems': 'center', 'justifyContent': 'center'};
    golf['container'] = tango;
    tango = {'height': 190, 'width': 220, 'resizeMode': 'contain'};
    golf['image'] = tango;
    tango = {'marginTop': 16, 'textAlign': 'center'};
    golf['title'] = tango;
    tango = 18;
    offset = {'marginTop': 8, 'lineHeight': 18, 'textAlign': 'center'};
    golf['body'] = offset;
    offset = {'marginTop': 16, 'width': '100%'};
    golf['button'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot12 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/verification/native/components/ConfirmEmailChangeStart.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: ConfirmEmailChangeStart
        _fun88658: for(var _fun88658_ip = 0; ; ) switch(_fun88658_ip) {
 0:
            entity = _closure1_slot12;
            report = undefined;
            output = entity.bind(report)();
            var _closure2_slot0 = output;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 7;
            entity = zulu[entity];
            tango = mike.bind(report)(entity);
            entity = tango.useNavigation;
            oscar = entity.bind(tango)();
            var _closure2_slot1 = oscar;
            entity = 8;
            entity = zulu[entity];
            tango = mike.bind(report)(entity);
            zulu = tango.useStateFromStores;
            entity = _closure1_slot9;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure1_slot9;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            golf = zulu.bind(tango)(mike, entity);
            tango = _closure1_slot5;
            mike = tango.useState;
            entity = false;
            zulu = mike.bind(tango)(entity);
            mike = _closure1_slot4;
            entity = 2;
            mike = mike.bind(report)(zulu, entity);
            entity = 0;
            backup = mike[entity];
            entity = 1;
            entity = mike[entity];
            var _closure2_slot2 = entity;
            zulu = tango.useCallback;
            mike = _closure1_slot3;
            entity = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun88661: for(var _fun88661_ip = 0; ; ) switch(_fun88661_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                        if(mike) { _fun88661_ip = 279; continue _fun88661 }
 10:
                        report = undefined;
                        golf = undefined;
                        tango = _closure2_slot2;
                        mike = true;
                        mike = tango.bind(report)(mike);
 28: // try_start_0 // try_start_1
                        oscar = _closure1_slot0;
                        options = _closure1_slot2;
                        mike = 9;
                        mike = options[mike];
                        oscar = oscar.bind(report)(mike);
                        mike = oscar.sendConfirmationCode;
                        mike = mike.bind(oscar)();
                        SaveGenerator(address=65);
 63:
                        return mike;
 65:
                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=5);
                        if(oscar) { _fun88661_ip = 122; continue _fun88661 }
 71:
                        options = _closure2_slot1;
                        oscar = options.push;
                        verify = _closure1_slot0;
                        offset = _closure1_slot2;
                        tango = 10;
                        tango = offset[tango];
                        tango = verify.bind(report)(tango);
                        tango = tango.VerificationModalScenes;
                        tango = tango.CONFIRM_EMAIL_CHANGE_CODE;
                        tango = oscar.bind(options)(tango);
 117: // try_end0
                        _fun88661_ip = 250; continue _fun88661;
 122: // try_end1
                        oscar = _closure2_slot2;
                        tango = false;
                        tango = oscar.bind(report)(tango);
                        return mike;
 136: // try_start_2 // catch_target0
                        CatchBlockStart(arg_register=7);
                        oscar = _closure1_slot1;
                        verify = _closure1_slot2;
                        tango = 11;
                        tango = verify[tango];
                        tango = oscar.bind(report)(tango);
                        oscar = tango.prototype;
                        oscar = Object.create(oscar, {constructor: {value: tango}});
                        romeo = oscar;
                        yankee = options;
                        tango = new romeo[tango](yankee, offset);
                        oscar = tango instanceof Object ? tango : oscar;
                        tango = oscar.getAnyErrorMessage;
                        oscar = tango.bind(oscar)();
                        golf = oscar;
                        tango = null;
                        if(!(tango != oscar)) { _fun88661_ip = 250; continue _fun88661 }
 203:
                        tango = _closure1_slot1;
                        oscar = _closure1_slot2;
                        mike = 12;
                        mike = oscar[mike];
                        oscar = tango.bind(report)(mike);
                        tango = oscar.open;
                        mike = {};
                        options = 'CONFIRM_EMAIL_ERROR';
                        mike['key'] = options;
                        mike['content'] = golf;
                        mike = tango.bind(oscar)(mike);
 250: // try_end2
                        tango = _closure2_slot2;
                        mike = false;
                        mike = tango.bind(report)(mike);
                        return report;
 264: // catch_target1 // catch_target2
                        CatchBlockStart(arg_register=1);
                        tango = _closure2_slot2;
                        zulu = false;
                        zulu = tango.bind(report)(zulu);
                        throw mike;
 279:
                        return entity;
                    }
                };
                return entity;
            };
            mike = mike.bind(report)(entity);
            entity = new Array(1);
            entity[0] = oscar;
            kilo = zulu.bind(tango)(mike, entity);
            entity = null;
            if(!(entity != golf)) { _fun88658_ip = 643; continue _fun88658 }
 185:
            echo = _closure1_slot0;
            update = _closure1_slot2;
            sizing = 13;
            mike = update[sizing];
            mike = echo.bind(report)(mike);
            oscar = mike.intl;
            tango = oscar.format;
            mike = update[sizing];
            mike = echo.bind(report)(mike);
            mike = mike.t;
            zulu = mike.oMFSgo;
            mike = {};
            golf = golf.email;
            mike['oldEmail'] = golf;
            result = tango.bind(oscar)(zulu, mike);
            tango = _closure1_slot10;
            mike = 14;
            mike = update[mike];
            mike = echo.bind(report)(mike);
            zulu = mike.RedesignCompat;
            mike = {};
            golf = _closure1_slot8;
            oscar = {'keyboardShouldPersistTaps': 'handled', 'alwaysBounceVertical': false};
            offset = _closure1_slot11;
            verify = _closure1_slot6;
            options = {};
            yankee = output.container;
            options['style'] = yankee;
            foxtrot = _closure1_slot7;
            yankee = {};
            control = output.image;
            yankee['style'] = control;
            source = _closure1_slot1;
            control = 15;
            control = update[control];
            control = source.bind(report)(control);
            yankee['source'] = control;
            foxtrot = tango.bind(report)(foxtrot, yankee);
            yankee = new Array(4);
            yankee[0] = foxtrot;
            foxtrot = 16;
            foxtrot = update[foxtrot];
            foxtrot = echo.bind(report)(foxtrot);
            control = foxtrot.Text;
            foxtrot = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            vacuum = output.title;
            foxtrot['style'] = vacuum;
            vacuum = update[sizing];
            vacuum = echo.bind(report)(vacuum);
            config = vacuum.intl;
            sequence = config.string;
            vacuum = update[sizing];
            vacuum = echo.bind(report)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.dQ71WV;
            vacuum = sequence.bind(config)(vacuum);
            foxtrot['children'] = vacuum;
            foxtrot = tango.bind(report)(control, foxtrot);
            yankee[1] = foxtrot;
            foxtrot = result.map;
            romeo = function(argFoo, argBar) {
                report = _closure1_slot10;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 16;
                entity = zulu[entity];
                tango = undefined;
                entity = mike.bind(tango)(entity);
                zulu = entity.Text;
                mike = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
                entity = _closure2_slot0;
                entity = entity.body;
                mike['style'] = entity;
                entity = argFoo;
                mike['children'] = entity;
                entity = argBar;
                entity = report.bind(tango)(zulu, mike, entity);
                return entity;
            };
            romeo = foxtrot.bind(result)(romeo);
            yankee[2] = romeo;
            result = 17;
            romeo = update[result];
            foxtrot = source.bind(report)(romeo);
            romeo = {};
            result = update[result];
            result = source.bind(report)(result);
            result = result.Sizes;
            result = result.MEDIUM;
            romeo['size'] = result;
            output = output.button;
            romeo['style'] = output;
            output = update[sizing];
            output = echo.bind(report)(output);
            result = output.intl;
            output = result.string;
            sizing = update[sizing];
            sizing = echo.bind(report)(sizing);
            sizing = sizing.t;
            sizing = sizing.rXV81N;
            sizing = output.bind(result)(sizing);
            romeo['text'] = sizing;
            romeo['onPress'] = kilo;
            romeo['loading'] = backup;
            backup = true;
            romeo['shrink'] = backup;
            romeo = tango.bind(report)(foxtrot, romeo);
            yankee[3] = romeo;
            options['children'] = yankee;
            options = offset.bind(report)(verify, options);
            oscar['children'] = options;
            oscar = tango.bind(report)(golf, oscar);
            mike['children'] = oscar;
            mike = tango.bind(report)(zulu, mike);
            return mike;
 643:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();