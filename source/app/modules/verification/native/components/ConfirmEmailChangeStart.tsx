// app/modules/verification/native/components/ConfirmEmailChangeStart.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    option = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.View;
    var _closure1_slot6 = option;
    option = tangon.Image;
    var _closure1_slot7 = option;
    tangon = tangon.ScrollView;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot10 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot11 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    tangon = {'flex': 1, 'padding': 16, 'alignItems': 'center', 'justifyContent': 'center'};
    golfie['container'] = tangon;
    tangon = {'height': 190, 'width': 220, 'resizeMode': 'contain'};
    golfie['image'] = tangon;
    tangon = {'marginTop': 16, 'textAlign': 'center'};
    golfie['title'] = tangon;
    tangon = 18;
    offset = {'marginTop': 8, 'lineHeight': 18, 'textAlign': 'center'};
    golfie['body'] = offset;
    offset = {'marginTop': 16, 'width': '100%'};
    golfie['button'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot12 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/verification/native/components/ConfirmEmailChangeStart.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: ConfirmEmailChangeStart
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot12;
            report = undefined;
            output = entity.bind(report)();
            var _closure2_slot0 = output;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 7;
            entity = zuuluu[entity];
            tangon = michal.bind(report)(entity);
            entity = tangon.useNavigation;
            oscard = entity.bind(tangon)();
            var _closure2_slot1 = oscard;
            entity = 8;
            entity = zuuluu[entity];
            tangon = michal.bind(report)(entity);
            zuuluu = tangon.useStateFromStores;
            entity = _closure1_slot9;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot9;
                entity = michal.getCurrentUser;
                entity = entity.bind(michal)();
                return entity;
            };
            golfie = zuuluu.bind(tangon)(michal, entity);
            tangon = _closure1_slot5;
            michal = tangon.useState;
            entity = false;
            zuuluu = michal.bind(tangon)(entity);
            michal = _closure1_slot4;
            entity = 2;
            michal = michal.bind(report)(zuuluu, entity);
            entity = 0;
            backup = michal[entity];
            entity = 1;
            entity = michal[entity];
            var _closure2_slot2 = entity;
            zuuluu = tangon.useCallback;
            michal = _closure1_slot3;
            entity = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                        if(michal) { _fun00004_ip = 279; continue _fun00003 }
 10:
                        report = undefined;
                        golfie = undefined;
                        tangon = _closure2_slot2;
                        michal = true;
                        michal = tangon.bind(report)(michal);
 28: // try_start_0 // try_start_1
                        oscard = _closure1_slot0;
                        option = _closure1_slot2;
                        michal = 9;
                        michal = option[michal];
                        oscard = oscard.bind(report)(michal);
                        michal = oscard.sendConfirmationCode;
                        michal = michal.bind(oscard)();
                        SaveGenerator(address=65);
 63:
                        return michal;
 65:
                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=5);
                        if(oscard) { _fun00004_ip = 122; continue _fun00003 }
 71:
                        option = _closure2_slot1;
                        oscard = option.push;
                        verify = _closure1_slot0;
                        offset = _closure1_slot2;
                        tangon = 10;
                        tangon = offset[tangon];
                        tangon = verify.bind(report)(tangon);
                        tangon = tangon.VerificationModalScenes;
                        tangon = tangon.CONFIRM_EMAIL_CHANGE_CODE;
                        tangon = oscard.bind(option)(tangon);
 117: // try_end0
                        _fun00004_ip = 250; continue _fun00003;
 122: // try_end1
                        oscard = _closure2_slot2;
                        tangon = false;
                        tangon = oscard.bind(report)(tangon);
                        return michal;
 136: // try_start_2 // catch_target0
                        CatchBlockStart(arg_register=7);
                        oscard = _closure1_slot1;
                        verify = _closure1_slot2;
                        tangon = 11;
                        tangon = verify[tangon];
                        tangon = oscard.bind(report)(tangon);
                        oscard = tangon.prototype;
                        oscard = Object.create(oscard, {constructor: {value: tangon}});
                        romeon = oscard;
                        yankee = option;
                        tangon = new romeon[tangon](yankee, offset);
                        oscard = tangon instanceof Object ? tangon : oscard;
                        tangon = oscard.getAnyErrorMessage;
                        oscard = tangon.bind(oscard)();
                        golfie = oscard;
                        tangon = null;
                        if(!(tangon != oscard)) { _fun00004_ip = 250; continue _fun00003 }
 203:
                        tangon = _closure1_slot1;
                        oscard = _closure1_slot2;
                        michal = 12;
                        michal = oscard[michal];
                        oscard = tangon.bind(report)(michal);
                        tangon = oscard.open;
                        michal = {};
                        option = 'CONFIRM_EMAIL_ERROR';
                        michal['key'] = option;
                        michal['content'] = golfie;
                        michal = tangon.bind(oscard)(michal);
 250: // try_end2
                        tangon = _closure2_slot2;
                        michal = false;
                        michal = tangon.bind(report)(michal);
                        return report;
 264: // catch_target1 // catch_target2
                        CatchBlockStart(arg_register=1);
                        tangon = _closure2_slot2;
                        zuuluu = false;
                        zuuluu = tangon.bind(report)(zuuluu);
                        throw michal;
 279:
                        return entity;
                    }
                };
                return entity;
            };
            michal = michal.bind(report)(entity);
            entity = new Array(1);
            entity[0] = oscard;
            kiloes = zuuluu.bind(tangon)(michal, entity);
            entity = null;
            if(!(entity != golfie)) { _fun00002_ip = 649; continue _fun00001 }
 185:
            echoed = _closure1_slot0;
            update = _closure1_slot2;
            sizing = 13;
            michal = update[sizing];
            michal = echoed.bind(report)(michal);
            oscard = michal.intl;
            tangon = oscard.format;
            michal = update[sizing];
            michal = echoed.bind(report)(michal);
            michal = michal.t;
            zuuluu = michal.oMFSgo;
            michal = {};
            golfie = golfie.email;
            michal['oldEmail'] = golfie;
            result = tangon.bind(oscard)(zuuluu, michal);
            tangon = _closure1_slot10;
            michal = 14;
            michal = update[michal];
            michal = echoed.bind(report)(michal);
            zuuluu = michal.RedesignCompat;
            michal = {};
            golfie = _closure1_slot8;
            oscard = {'keyboardShouldPersistTaps': 'handled', 'alwaysBounceVertical': false};
            offset = _closure1_slot11;
            verify = _closure1_slot6;
            option = {};
            yankee = output.container;
            option['style'] = yankee;
            foxtra = _closure1_slot7;
            yankee = {};
            ctrled = output.image;
            yankee['style'] = ctrled;
            source = _closure1_slot1;
            ctrled = 15;
            ctrled = update[ctrled];
            ctrled = source.bind(report)(ctrled);
            yankee['source'] = ctrled;
            foxtra = tangon.bind(report)(foxtra, yankee);
            yankee = new Array(4);
            yankee[0] = foxtra;
            foxtra = 16;
            foxtra = update[foxtra];
            foxtra = echoed.bind(report)(foxtra);
            ctrled = foxtra.Text;
            foxtra = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            vacuum = output.title;
            foxtra['style'] = vacuum;
            vacuum = update[sizing];
            vacuum = echoed.bind(report)(vacuum);
            config = vacuum.intl;
            sequen = config.string;
            vacuum = update[sizing];
            vacuum = echoed.bind(report)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.dQ71WV;
            vacuum = sequen.bind(config)(vacuum);
            foxtra['children'] = vacuum;
            foxtra = tangon.bind(report)(ctrled, foxtra);
            yankee[1] = foxtra;
            foxtra = result.map;
            romeon = function(argFoo, argBar) {
                report = _closure1_slot10;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 16;
                entity = zuuluu[entity];
                tangon = undefined;
                entity = michal.bind(tangon)(entity);
                zuuluu = entity.Text;
                michal = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
                entity = _closure2_slot0;
                entity = entity.body;
                michal['style'] = entity;
                entity = argFoo;
                michal['children'] = entity;
                entity = argBar;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            romeon = foxtra.bind(result)(romeon);
            yankee[2] = romeon;
            result = 17;
            romeon = update[result];
            foxtra = source.bind(report)(romeon);
            romeon = {};
            result = update[result];
            result = source.bind(report)(result);
            result = result.Sizes;
            result = result.MEDIUM;
            romeon['size'] = result;
            output = output.button;
            romeon['style'] = output;
            output = update[sizing];
            output = echoed.bind(report)(output);
            result = output.intl;
            output = result.string;
            sizing = update[sizing];
            sizing = echoed.bind(report)(sizing);
            sizing = sizing.t;
            sizing = sizing.rXV81N;
            sizing = output.bind(result)(sizing);
            romeon['text'] = sizing;
            romeon['onPress'] = kiloes;
            romeon['loading'] = backup;
            backup = true;
            romeon['shrink'] = backup;
            romeon = tangon.bind(report)(foxtra, romeon);
            yankee[3] = romeon;
            option['children'] = yankee;
            option = offset.bind(report)(verify, option);
            oscard['children'] = option;
            oscard = tangon.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return michal;
 649:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();