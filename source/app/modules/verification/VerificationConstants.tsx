// app/modules/verification/VerificationConstants.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    zulu = argFred;
    entity = global;
    oscar = entity.Object;
    report = oscar.defineProperty;
    tango = {};
    mike = true;
    tango['value'] = mike;
    mike = '__esModule';
    mike = report.bind(oscar)(zulu, mike, tango);
    report = {};
    oscar = 0;
    report['DISCORD_EMPLOYEE_ASKED_ME_TO'] = oscar;
    mike = 'DISCORD_EMPLOYEE_ASKED_ME_TO';
    report[oscar] = mike;
    tango = 1;
    report['SOMEONE_ASKED_ME_TO'] = tango;
    mike = 'SOMEONE_ASKED_ME_TO';
    report[tango] = mike;
    tango = 2;
    report['NEW_EMAIL'] = tango;
    mike = 'NEW_EMAIL';
    report[tango] = mike;
    tango = 3;
    report['SOMETHING_ELSE'] = tango;
    mike = 'SOMETHING_ELSE';
    report[tango] = mike;
    mike = report.DISCORD_EMPLOYEE_ASKED_ME_TO;
    tango = new Array(4);
    tango[0] = mike;
    mike = report.SOMEONE_ASKED_ME_TO;
    tango[1] = mike;
    mike = report.NEW_EMAIL;
    tango[2] = mike;
    mike = report.SOMETHING_ELSE;
    tango[3] = mike;
    golf = entity.Set;
    mike = report.DISCORD_EMPLOYEE_ASKED_ME_TO;
    entity = new Array(2);
    entity[0] = mike;
    mike = report.SOMEONE_ASKED_ME_TO;
    entity[1] = mike;
    mike = golf.prototype;
    mike = Object.create(mike, {constructor: {value: golf}});
    romeo = mike;
    yankee = entity;
    entity = new romeo[golf](yankee, offset);
    mike = entity instanceof Object ? entity : mike;
    entity = argPlugh;
    golf = entity[oscar];
    oscar = argBar;
    entity = undefined;
    options = oscar.bind(entity)(golf);
    golf = options.fileFinishedImporting;
    oscar = 'modules/verification/VerificationConstants.tsx';
    oscar = golf.bind(options)(oscar);
    zulu['ChangeEmailReasons'] = report;
    zulu['CHANGE_EMAIL_REASONS_ORDER'] = tango;
    zulu['SUSPICIOUS_CHANGE_EMAIL_REASONS'] = mike;
    mike = 'https://discord.com/safety/understanding-and-avoiding-common-scams';
    zulu['COMMON_SCAMS_EDUCATION_HC_ARTICLE'] = mike;
    mike = 1024;
    zulu['FREE_TEXT_RESPONSE_MAX_LENGTH'] = mike;
    mike = 'verification';
    zulu['VERIFICATION_LAYER_KEY'] = mike;
    mike = 'AGREEMENTS_MODAL_KEY';
    zulu['AGREEMENTS_MODAL_KEY'] = mike;
    mike = 'Email Verification';
    zulu['EMAIL_VERIFICATION_MODAL_KEY'] = mike;
    mike = 'PHONE_THEN_EMAIL_INTERSTITIAL_MODAL_KEY';
    zulu['PHONE_THEN_EMAIL_INTERSTITIAL_MODAL_KEY'] = mike;
    return entity;
})();