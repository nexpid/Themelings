// node_modules/.pnpm/@discordapp+twemoji@15.1.0/node_modules/@discordapp/twemoji/dist/twemoji.npm.js
module.exports = (function(argFoo, argBar, _, __, argGrault, ___, argPlugh) {
    _fun44397: for(var _fun44397_ip = 0; ; ) switch(_fun44397_ip) {
 0:
        entity = argFoo;
        mike = entity.location;
        if(mike) { _fun44397_ip = 13; continue _fun44397 }
 11:
        mike = {};
 13:
        zulu = function() {
            entity = function(argFoo, argBar) { // Original name: createText
                _fun44399: for(var _fun44399_ip = 0; ; ) switch(_fun44399_ip) {
 0:
                    golf = argFoo;
                    entity = global;
                    zulu = entity.document;
                    mike = zulu.createTextNode;
                    tango = argBar;
                    entity = golf;
                    if(!tango) { _fun44399_ip = 48; continue _fun44399 }
 26:
                    oscar = golf.replace;
                    report = _closure2_slot3;
                    tango = '';
                    entity = oscar.bind(golf)(report, tango);
 48:
                    entity = mike.bind(zulu)(entity);
                    return entity;
                }
            };
            var _closure2_slot6 = entity;
            entity = function(argFoo, argBar) { // Original name: defaultImageSrcGenerator
                entity = argBar;
                golf = '';
                oscar = golf.concat;
                romeo = entity.base;
                yankee = entity.size;
                options = entity.ext;
                offset = '/';
                verify = argFoo;
                foxtrot = golf;
                entity = foxtrot[oscar](romeo, yankee, offset, verify, options, golf);
                return entity;
            };
            var _closure2_slot7 = entity;
            entity = function(argFoo, argBar) { // Original name: grabAllTextNodes
                _fun44401: for(var _fun44401_ip = 0; ; ) switch(_fun44401_ip) {
 0:
                    entity = argBar;
                    mike = argFoo;
                    verify = mike.childNodes;
                    mike = verify.length;
                    mike = parseFloat(mike);
                    options = mike - 1;
                    oscar = undefined;
                    report = 'ownerSVGElement';
                    tango = 1;
                    zulu = 3;
                    if(!mike) { _fun44401_ip = 143; continue _fun44401 }
 41:
                    offset = verify[options];
                    mike = offset.nodeType;
                    if(!(zulu !== mike)) { _fun44401_ip = 124; continue _fun44401 }
 55:
                    mike = tango !== mike;
                    if(mike) { _fun44401_ip = 66; continue _fun44401 }
 62:
                    mike = report in offset;
 66:
                    if(mike) { _fun44401_ip = 109; continue _fun44401 }
 69:
                    foxtrot = /^(?:iframe|noframes|noscript|script|select|style|textarea)$/;
                    romeo = foxtrot.test;
                    backup = offset.nodeName;
                    yankee = backup.toLowerCase;
                    yankee = yankee.bind(backup)();
                    mike = romeo.bind(foxtrot)(yankee);
 109:
                    if(mike) { _fun44401_ip = 134; continue _fun44401 }
 112:
                    mike = _closure2_slot8;
                    mike = mike.bind(oscar)(offset, entity);
                    _fun44401_ip = 134; continue _fun44401;
 124:
                    mike = entity.push;
                    mike = mike.bind(entity)(offset);
 134:
                    mike = parseFloat(options);
                    options = mike - 1;
                    if(mike) { _fun44401_ip = 41; continue _fun44401 }
 143:
                    return entity;
                }
            };
            var _closure2_slot8 = entity;
            entity = function(argFoo) { // Original name: grabTheRightIcon
                _fun44402: for(var _fun44402_ip = 0; ; ) switch(_fun44402_ip) {
 0:
                    oscar = argFoo;
                    zulu = _closure2_slot15;
                    tango = oscar.indexOf;
                    mike = _closure2_slot4;
                    report = tango.bind(oscar)(mike);
                    tango = 0;
                    mike = oscar;
                    if(!(report < tango)) { _fun44402_ip = 52; continue _fun44402 }
 33:
                    report = oscar.replace;
                    tango = _closure2_slot3;
                    entity = '';
                    mike = report.bind(oscar)(tango, entity);
 52:
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
                    return entity;
                }
            };
            var _closure2_slot9 = entity;
            entity = function(argFoo, argBar) { // Original name: parseNode
                _fun44403: for(var _fun44403_ip = 0; ; ) switch(_fun44403_ip) {
 0:
                    entity = argFoo;
                    control = argBar;
                    mike = _closure2_slot8;
                    update = new Array(0);
                    echo = undefined;
                    mike = mike.bind(echo)(entity, update);
                    mike = update.length;
                    mike = parseFloat(mike);
                    result = mike - 1;
                    output = true;
                    sizing = global;
                    kilo = false;
                    backup = 0;
                    romeo = 'draggable';
                    yankee = 'false';
                    offset = 'on';
                    verify = undefined;
                    options = undefined;
                    golf = undefined;
                    oscar = undefined;
                    report = undefined;
                    tango = undefined;
                    zulu = undefined;
                    if(!mike) { _fun44403_ip = 630; continue _fun44403 }
 76:
                    vacuum = sizing.document;
                    mike = vacuum.createDocumentFragment;
                    config = mike.bind(vacuum)();
                    sequence = update[result];
                    papa = sequence.nodeValue;
                    vacuum = _closure2_slot2;
                    mike = vacuum.exec;
                    vacuum = mike.bind(vacuum)(papa);
                    lima = verify;
                    sierra = options;
                    record = oscar;
                    status = false;
                    target = 0;
                    verify = lima;
                    options = sierra;
                    mike = false;
                    context = 0;
                    oscar = record;
                    if(!vacuum) { _fun44403_ip = 557; continue _fun44403 }
 149:
                    variable37 = vacuum.index;
                    if(!(variable37 !== target)) { _fun44403_ip = 190; continue _fun44403 }
 158:
                    equality = config.appendChild;
                    quebec = _closure2_slot6;
                    whiskey = papa.slice;
                    whiskey = whiskey.bind(papa)(target, variable37);
                    whiskey = quebec.bind(echo)(whiskey, output);
                    whiskey = equality.bind(config)(whiskey);
 190:
                    whiskey = _closure2_slot9;
                    variable36 = vacuum[backup];
                    quebec = whiskey.bind(echo)(variable36);
                    whiskey = variable36.length;
                    variable38 = variable37 + whiskey;
                    whiskey = control.callback;
                    equality = whiskey.bind(control)(quebec, control);
                    variable41 = lima;
                    variable40 = sierra;
                    variable39 = status;
                    whiskey = record;
                    if(!quebec) { _fun44403_ip = 472; continue _fun44403 }
 242:
                    variable41 = lima;
                    variable40 = sierra;
                    variable39 = status;
                    whiskey = record;
                    if(!equality) { _fun44403_ip = 472; continue _fun44403 }
 260:
                    variable42 = sizing.Image;
                    variable43 = variable42.prototype;
                    variable43 = Object.create(variable43, {constructor: {value: variable42}});
                    variable56 = variable43;
                    variable42 = new variable56[variable42](variable55);
                    variable42 = variable42 instanceof Object ? variable42 : variable43;
                    variable43 = control.onerror;
                    variable42['onerror'] = variable43;
                    variable43 = variable42.setAttribute;
                    variable43 = variable43.bind(variable42)(romeo, yankee);
                    variable43 = control.attributes;
                    variable44 = variable43.bind(control)(variable36, quebec);
                    variable49 = variable44;
                    variable45 = sierra;
                    variable43 = variable45;
                    for(variable46 in variable49)
 339:
                    {
                        variable43 = variable45;
 351:
                        variable51 = variable46;
                        variable52 = variable44.hasOwnProperty;
                        variable52 = variable52.bind(variable44)(variable51);
                        if(!variable52) { _fun44403_ip = 382; continue _fun44403 }
 368:
                        variable53 = variable51.indexOf;
                        variable53 = variable53.bind(variable51)(offset);
                        variable52 = backup !== variable53;
 382:
                        if(!variable52) { _fun44403_ip = 399; continue _fun44403 }
 385:
                        variable53 = variable42.hasAttribute;
                        variable53 = variable53.bind(variable42)(variable51);
                        variable52 = !variable53;
 399:
                        variable45 = variable51;
                        if(!variable52) { _fun44403_ip = 339; continue _fun44403 }
 405:
                        variable53 = variable42.setAttribute;
                        variable52 = variable44[variable51];
                        variable52 = variable53.bind(variable42)(variable51, variable52);
                        variable45 = variable51;
                        _fun44403_ip = 339; continue _fun44403;
                    }
 426:
                    variable45 = control.className;
                    variable42['className'] = variable45;
                    variable42['alt'] = variable36;
                    variable42['src'] = equality;
                    variable45 = config.appendChild;
                    variable45 = variable45.bind(config)(variable42);
                    variable40 = variable43;
                    variable41 = variable44;
                    variable39 = true;
                    whiskey = variable42;
 472:
                    if(whiskey) { _fun44403_ip = 496; continue _fun44403 }
 475:
                    variable42 = config.appendChild;
                    whiskey = _closure2_slot6;
                    whiskey = whiskey.bind(echo)(variable36, kilo);
                    whiskey = variable42.bind(config)(whiskey);
 496:
                    variable42 = _closure2_slot2;
                    whiskey = variable42.exec;
                    vacuum = whiskey.bind(variable42)(papa);
                    lima = variable41;
                    sierra = variable40;
                    status = variable39;
                    target = variable38;
                    record = null;
                    verify = lima;
                    options = sierra;
                    mike = status;
                    context = target;
                    golf = variable37;
                    oscar = null;
                    report = variable36;
                    tango = quebec;
                    zulu = equality;
                    if(vacuum) { _fun44403_ip = 149; continue _fun44403 }
 557:
                    if(!mike) { _fun44403_ip = 618; continue _fun44403 }
 560:
                    mike = papa.length;
                    if(!(context < mike)) { _fun44403_ip = 600; continue _fun44403 }
 569:
                    vacuum = config.appendChild;
                    record = _closure2_slot6;
                    mike = papa.slice;
                    mike = mike.bind(papa)(context);
                    mike = record.bind(echo)(mike, output);
                    mike = vacuum.bind(config)(mike);
 600:
                    vacuum = sequence.parentNode;
                    mike = vacuum.replaceChild;
                    mike = mike.bind(vacuum)(config, sequence);
 618:
                    mike = parseFloat(result);
                    result = mike - 1;
                    if(mike) { _fun44403_ip = 76; continue _fun44403 }
 630:
                    return entity;
                }
            };
            var _closure2_slot10 = entity;
            entity = function(argFoo, argBar) { // Original name: parseString
                mike = argBar;
                var _closure3_slot0 = mike;
                tango = _closure2_slot14;
                zulu = undefined;
                mike = argFoo;
                entity = function(argFoo) {
                    _fun44405: for(var _fun44405_ip = 0; ; ) switch(_fun44405_ip) {
 0:
                        oscar = argFoo;
                        mike = _closure2_slot9;
                        entity = undefined;
                        report = mike.bind(entity)(oscar);
                        zulu = _closure3_slot0;
                        entity = zulu.callback;
                        echo = entity.bind(zulu)(report, zulu);
                        entity = oscar;
                        if(!report) { _fun44405_ip = 344; continue _fun44405 }
 45:
                        entity = oscar;
                        if(!echo) { _fun44405_ip = 344; continue _fun44405 }
 54:
                        result = '<img ';
                        yankee = result.concat;
                        zulu = _closure3_slot0;
                        whiskey = zulu.className;
                        equality = 'class="';
                        lima = '" ';
                        sierra = 'draggable="false" ';
                        status = 'alt="';
                        romeo = '"';
                        context = ' src="';
                        quebec = result;
                        target = oscar;
                        papa = romeo;
                        record = echo;
                        config = romeo;
                        tango = quebec[yankee](equality, whiskey, lima, sierra, status, target, papa, context, record, config, sequence);
                        mike = zulu.attributes;
                        yankee = mike.bind(zulu)(oscar, report);
                        kilo = yankee;
                        verify = ' ';
                        options = '="';
                        golf = '=';
                        oscar = -1;
                        report = 'on';
                        zulu = 0;
                        mike = tango;
                        tango = mike;
                        for(offset in kilo)
 186:
                        {
                            source = mike;
                            tango = source;
 204:
                            update = offset;
                            result = yankee.hasOwnProperty;
                            result = result.bind(yankee)(update);
                            if(!result) { _fun44405_ip = 235; continue _fun44405 }
 221:
                            echo = update.indexOf;
                            echo = echo.bind(update)(report);
                            result = zulu !== echo;
 235:
                            if(!result) { _fun44405_ip = 260; continue _fun44405 }
 238:
                            control = source.indexOf;
                            echo = verify + update;
                            echo = echo + golf;
                            echo = control.bind(source)(echo);
                            result = oscar === echo;
 260:
                            mike = source;
                            if(!result) { _fun44405_ip = 186; continue _fun44405 }
 266:
                            echo = source.concat;
                            sequence = yankee[update];
                            vacuum = sequence.replace;
                            control = _closure2_slot12;
                            result = /[&<>'"]/g;
                            sierra = vacuum.bind(sequence)(result, control);
                            quebec = source;
                            equality = verify;
                            whiskey = update;
                            lima = options;
                            status = romeo;
                            mike = quebec[echo](equality, whiskey, lima, sierra, status, target);
                            _fun44405_ip = 186; continue _fun44405;
                        }
 328:
                        zulu = tango.concat;
                        mike = '/>';
                        entity = zulu.bind(tango)(mike);
 344:
                        return entity;
                    }
                };
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            var _closure2_slot11 = entity;
            entity = function(argFoo) { // Original name: replacer
                mike = _closure2_slot1;
                entity = argFoo;
                entity = mike[entity];
                return entity;
            };
            var _closure2_slot12 = entity;
            entity = function() { // Original name: returnNull
                entity = null;
                return entity;
            };
            var _closure2_slot13 = entity;
            mike = function(argFoo, argBar) { // Original name: replace
                entity = global;
                zulu = entity.String;
                mike = undefined;
                entity = argFoo;
                tango = zulu.bind(mike)(entity);
                zulu = tango.replace;
                mike = _closure2_slot2;
                entity = argBar;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            var _closure2_slot14 = mike;
            report = function(argFoo, argBar) { // Original name: toCodePoint
                _fun44409: for(var _fun44409_ip = 0; ; ) switch(_fun44409_ip) {
 0:
                    foxtrot = argFoo;
                    zulu = argBar;
                    mike = new Array(0);
                    entity = foxtrot.length;
                    romeo = 0;
                    entity = romeo < entity;
                    yankee = 56320;
                    offset = 65536;
                    verify = 10;
                    options = 16;
                    golf = 56319;
                    oscar = 55296;
                    report = 0;
                    tango = 0;
                    if(!entity) { _fun44409_ip = 168; continue _fun44409 }
 58:
                    backup = foxtrot.charCodeAt;
                    entity = parseFloat(tango);
                    tango = entity + 1;
                    sizing = backup.bind(foxtrot)(entity);
                    if(report) { _fun44409_ip = 114; continue _fun44409 }
 78:
                    if(!(oscar <= sizing)) { _fun44409_ip = 89; continue _fun44409 }
 82:
                    backup = sizing;
                    if(!(!(backup <= golf))) { _fun44409_ip = 156; continue _fun44409 }
 89:
                    kilo = mike.push;
                    entity = sizing.toString;
                    entity = entity.bind(sizing)(options);
                    entity = kilo.bind(mike)(entity);
                    backup = report;
                    _fun44409_ip = 156; continue _fun44409;
 114:
                    kilo = mike.push;
                    entity = report - oscar;
                    sizing = sizing - yankee;
                    entity = entity << verify;
                    entity = offset + entity;
                    sizing = entity + sizing;
                    entity = sizing.toString;
                    entity = entity.bind(sizing)(options);
                    entity = kilo.bind(mike)(entity);
                    backup = 0;
 156:
                    entity = foxtrot.length;
                    report = backup;
                    if(tango < entity) { _fun44409_ip = 58; continue _fun44409 }
 168:
                    entity = mike.join;
                    if(zulu) { _fun44409_ip = 180; continue _fun44409 }
 176:
                    zulu = '-';
 180:
                    entity = entity.bind(mike)(zulu);
                    return entity;
                }
            };
            var _closure2_slot15 = report;
            entity = {'base': 'https://cdn.jsdelivr.net/gh/jdecked/twemoji@15.1.0/assets/', 'ext': '.png', 'size': '72x72', 'className': 'emoji'};
            tango = {};
            oscar = function(argFoo) { // Original name: fromCodePoint
                _fun44410: for(var _fun44410_ip = 0; ; ) switch(_fun44410_ip) {
 0:
                    report = argFoo;
                    mike = 'string';
                    entity = typeof report;
                    tango = report;
                    if(!(mike === entity)) { _fun44410_ip = 36; continue _fun44410 }
 17:
                    entity = global;
                    zulu = entity.parseInt;
                    mike = undefined;
                    entity = 16;
                    tango = zulu.bind(mike)(report, entity);
 36:
                    entity = 65536;
                    if(!(!(tango < entity))) { _fun44410_ip = 104; continue _fun44410 }
 46:
                    report = _closure2_slot5;
                    golf = tango - entity;
                    zulu = undefined;
                    mike = 55296;
                    entity = 10;
                    entity = golf >> entity;
                    mike = mike + entity;
                    oscar = 56320;
                    entity = 1023;
                    entity = entity & golf;
                    entity = oscar + entity;
                    entity = report.bind(zulu)(mike, entity);
                    _fun44410_ip = 118; continue _fun44410;
 104:
                    zulu = _closure2_slot5;
                    mike = undefined;
                    entity = zulu.bind(mike)(tango);
 118:
                    return entity;
                }
            };
            tango['fromCodePoint'] = oscar;
            tango['toCodePoint'] = report;
            entity['convert'] = tango;
            tango = function() { // Original name: onerror
                _fun44411: for(var _fun44411_ip = 0; ; ) switch(_fun44411_ip) {
 0:
                    tango = this;
                    entity = tango.parentNode;
                    if(!entity) { _fun44411_ip = 53; continue _fun44411 }
 12:
                    zulu = tango.parentNode;
                    mike = zulu.replaceChild;
                    golf = _closure2_slot6;
                    oscar = tango.alt;
                    report = undefined;
                    entity = false;
                    entity = golf.bind(report)(oscar, entity);
                    entity = mike.bind(zulu)(entity, tango);
 53:
                    entity = undefined;
                    return entity;
                }
            };
            entity['onerror'] = tango;
            tango = function(argFoo, argBar) { // Original name: parse
                _fun44412: for(var _fun44412_ip = 0; ; ) switch(_fun44412_ip) {
 0:
                    tango = argFoo;
                    zulu = argBar;
                    mike = zulu;
                    if(!zulu) { _fun44412_ip = 23; continue _fun44412 }
 12:
                    report = 'function';
                    entity = typeof zulu;
                    mike = report !== entity;
 23:
                    entity = zulu;
                    if(mike) { _fun44412_ip = 39; continue _fun44412 }
 29:
                    mike = {};
                    mike['callback'] = zulu;
                    entity = mike;
 39:
                    oscar = 'string';
                    mike = typeof tango;
                    if(!(oscar !== mike)) { _fun44412_ip = 59; continue _fun44412 }
 50:
                    zulu = _closure2_slot10;
                    _fun44412_ip = 66; continue _fun44412;
 59:
                    zulu = _closure2_slot11;
 66:
                    mike = {};
                    report = entity.callback;
                    if(report) { _fun44412_ip = 84; continue _fun44412 }
 77:
                    report = _closure2_slot7;
 84:
                    mike['callback'] = report;
                    report = entity.attributes;
                    golf = 'function';
                    report = typeof report;
                    if(!(golf !== report)) { _fun44412_ip = 115; continue _fun44412 }
 106:
                    report = _closure2_slot13;
                    _fun44412_ip = 121; continue _fun44412;
 115:
                    report = entity.attributes;
 121:
                    mike['attributes'] = report;
                    report = entity.base;
                    report = typeof report;
                    if(!(oscar !== report)) { _fun44412_ip = 154; continue _fun44412 }
 139:
                    report = _closure2_slot0;
                    report = report.base;
                    _fun44412_ip = 160; continue _fun44412;
 154:
                    report = entity.base;
 160:
                    mike['base'] = report;
                    report = entity.ext;
                    if(report) { _fun44412_ip = 187; continue _fun44412 }
 174:
                    oscar = _closure2_slot0;
                    report = oscar.ext;
 187:
                    mike['ext'] = report;
                    report = entity.folder;
                    if(report) { _fun44412_ip = 250; continue _fun44412 }
 201:
                    options = entity.size;
                    if(options) { _fun44412_ip = 221; continue _fun44412 }
 209:
                    oscar = _closure2_slot0;
                    options = oscar.size;
 221:
                    verify = 'number';
                    golf = typeof options;
                    oscar = options;
                    if(!(verify === golf)) { _fun44412_ip = 247; continue _fun44412 }
 235:
                    golf = 'x';
                    golf = options + golf;
                    oscar = golf + options;
 247:
                    report = oscar;
 250:
                    mike['size'] = report;
                    report = entity.className;
                    if(report) { _fun44412_ip = 276; continue _fun44412 }
 263:
                    oscar = _closure2_slot0;
                    report = oscar.className;
 276:
                    mike['className'] = report;
                    entity = entity.onerror;
                    if(entity) { _fun44412_ip = 303; continue _fun44412 }
 290:
                    report = _closure2_slot0;
                    entity = report.onerror;
 303:
                    mike['onerror'] = entity;
                    entity = undefined;
                    entity = zulu.bind(entity)(tango, mike);
                    return entity;
                }
            };
            entity['parse'] = tango;
            entity['replace'] = mike;
            mike = function(argFoo) { // Original name: test
                entity = _closure2_slot2;
                zulu = 0;
                entity['lastIndex'] = zulu;
                report = _closure2_slot2;
                tango = report.test;
                entity = argFoo;
                entity = tango.bind(report)(entity);
                mike = _closure2_slot2;
                mike['lastIndex'] = zulu;
                return entity;
            };
            entity['test'] = mike;
            var _closure2_slot0 = entity;
            mike = {'&': '&amp;', '<': '&lt;', '>': '&gt;', "'": '&#39;', '"': '&quot;'};
            var _closure2_slot1 = mike;
            mike = /(?:\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffc-\udfff]|\ud83e\uddd1\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffb\udffd-\udfff]|\ud83e\uddd1\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffb\udffc\udffe\udfff]|\ud83e\uddd1\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffb-\udffd\udfff]|\ud83e\uddd1\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffb-\udffe]|\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffc-\udfff]|\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb\udffd-\udfff]|\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb\udffc\udffe\udfff]|\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb-\udffd\udfff]|\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb-\udffe]|\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffc-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffc-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb\udffd-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffb\udffd-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb\udffc\udffe\udfff]|\ud83d\udc69\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffb\udffc\udffe\udfff]|\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb-\udffd\udfff]|\ud83d\udc69\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffb-\udffd\udfff]|\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb-\udffe]|\ud83d\udc69\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffb-\udffe]|\ud83e\uddd1\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffc-\udfff]|\ud83e\uddd1\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffb\udffd-\udfff]|\ud83e\uddd1\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffb\udffc\udffe\udfff]|\ud83e\uddd1\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffb-\udffd\udfff]|\ud83e\uddd1\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffb-\udffe]|\ud83e\uddd1\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83d\udc68\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68|\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d[\udc68\udc69]|\ud83e\udef1\ud83c\udffb\u200d\ud83e\udef2\ud83c[\udffc-\udfff]|\ud83e\udef1\ud83c\udffc\u200d\ud83e\udef2\ud83c[\udffb\udffd-\udfff]|\ud83e\udef1\ud83c\udffd\u200d\ud83e\udef2\ud83c[\udffb\udffc\udffe\udfff]|\ud83e\udef1\ud83c\udffe\u200d\ud83e\udef2\ud83c[\udffb-\udffd\udfff]|\ud83e\udef1\ud83c\udfff\u200d\ud83e\udef2\ud83c[\udffb-\udffe]|\ud83d\udc68\u200d\u2764\ufe0f\u200d\ud83d\udc68|\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d[\udc68\udc69]|\ud83e\uddd1\u200d\ud83e\udd1d\u200d\ud83e\uddd1|\ud83d\udc6b\ud83c[\udffb-\udfff]|\ud83d\udc6c\ud83c[\udffb-\udfff]|\ud83d\udc6d\ud83c[\udffb-\udfff]|\ud83d\udc8f\ud83c[\udffb-\udfff]|\ud83d\udc91\ud83c[\udffb-\udfff]|\ud83e\udd1d\ud83c[\udffb-\udfff]|\ud83d[\udc6b-\udc6d\udc8f\udc91]|\ud83e\udd1d)|(?:\ud83d[\udc68\udc69]|\ud83e\uddd1)(?:\ud83c[\udffb-\udfff])?\u200d(?:\u2695\ufe0f|\u2696\ufe0f|\u2708\ufe0f|\ud83c[\udf3e\udf73\udf7c\udf84\udf93\udfa4\udfa8\udfeb\udfed]|\ud83d[\udcbb\udcbc\udd27\udd2c\ude80\ude92]|\ud83e[\uddaf-\uddb3\uddbc\uddbd])|(?:\ud83c[\udfcb\udfcc]|\ud83d[\udd74\udd75]|\u26f9)((?:\ud83c[\udffb-\udfff]|\ufe0f)\u200d[\u2640\u2642]\ufe0f)|(?:\ud83c[\udfc3\udfc4\udfca]|\ud83d[\udc6e\udc70\udc71\udc73\udc77\udc81\udc82\udc86\udc87\ude45-\ude47\ude4b\ude4d\ude4e\udea3\udeb4-\udeb6]|\ud83e[\udd26\udd35\udd37-\udd39\udd3d\udd3e\uddb8\uddb9\uddcd-\uddcf\uddd4\uddd6-\udddd])(?:\ud83c[\udffb-\udfff])?\u200d[\u2640\u2642]\ufe0f|(?:\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d[\udc66\udc67]|\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f|\ud83c\udff3\ufe0f\u200d\ud83c\udf08|\ud83d\ude36\u200d\ud83c\udf2b\ufe0f|\u2764\ufe0f\u200d\ud83d\udd25|\u2764\ufe0f\u200d\ud83e\ude79|\ud83c\udff4\u200d\u2620\ufe0f|\ud83d\udc15\u200d\ud83e\uddba|\ud83d\udc3b\u200d\u2744\ufe0f|\ud83d\udc41\u200d\ud83d\udde8|\ud83d\udc68\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d[\udc66\udc67]|\ud83d\udc6f\u200d\u2640\ufe0f|\ud83d\udc6f\u200d\u2642\ufe0f|\ud83d\ude2e\u200d\ud83d\udca8|\ud83d\ude35\u200d\ud83d\udcab|\ud83e\udd3c\u200d\u2640\ufe0f|\ud83e\udd3c\u200d\u2642\ufe0f|\ud83e\uddde\u200d\u2640\ufe0f|\ud83e\uddde\u200d\u2642\ufe0f|\ud83e\udddf\u200d\u2640\ufe0f|\ud83e\udddf\u200d\u2642\ufe0f|\ud83d\udc08\u200d\u2b1b|\ud83d\udc26\u200d\u2b1b)|[#*0-9]\ufe0f?\u20e3|(?:[©®\u2122\u265f]\ufe0f)|(?:\ud83c[\udc04\udd70\udd71\udd7e\udd7f\ude02\ude1a\ude2f\ude37\udf21\udf24-\udf2c\udf36\udf7d\udf96\udf97\udf99-\udf9b\udf9e\udf9f\udfcd\udfce\udfd4-\udfdf\udff3\udff5\udff7]|\ud83d[\udc3f\udc41\udcfd\udd49\udd4a\udd6f\udd70\udd73\udd76-\udd79\udd87\udd8a-\udd8d\udda5\udda8\uddb1\uddb2\uddbc\uddc2-\uddc4\uddd1-\uddd3\udddc-\uddde\udde1\udde3\udde8\uddef\uddf3\uddfa\udecb\udecd-\udecf\udee0-\udee5\udee9\udef0\udef3]|[\u203c\u2049\u2139\u2194-\u2199\u21a9\u21aa\u231a\u231b\u2328\u23cf\u23ed-\u23ef\u23f1\u23f2\u23f8-\u23fa\u24c2\u25aa\u25ab\u25b6\u25c0\u25fb-\u25fe\u2600-\u2604\u260e\u2611\u2614\u2615\u2618\u2620\u2622\u2623\u2626\u262a\u262e\u262f\u2638-\u263a\u2640\u2642\u2648-\u2653\u2660\u2663\u2665\u2666\u2668\u267b\u267f\u2692-\u2697\u2699\u269b\u269c\u26a0\u26a1\u26a7\u26aa\u26ab\u26b0\u26b1\u26bd\u26be\u26c4\u26c5\u26c8\u26cf\u26d1\u26d3\u26d4\u26e9\u26ea\u26f0-\u26f5\u26f8\u26fa\u26fd\u2702\u2708\u2709\u270f\u2712\u2714\u2716\u271d\u2721\u2733\u2734\u2744\u2747\u2757\u2763\u2764\u27a1\u2934\u2935\u2b05-\u2b07\u2b1b\u2b1c\u2b50\u2b55\u3030\u303d\u3297\u3299])(?:\ufe0f|(?!\ufe0e))|(?:(?:\ud83c[\udfcb\udfcc]|\ud83d[\udd74\udd75\udd90]|\ud83e\udef0|[\u261d\u26f7\u26f9\u270c\u270d])(?:\ufe0f|(?!\ufe0e))|(?:\ud83c[\udf85\udfc2-\udfc4\udfc7\udfca]|\ud83d[\udc42\udc43\udc46-\udc50\udc66-\udc69\udc6e\udc70-\udc78\udc7c\udc81-\udc83\udc85-\udc87\udcaa\udd7a\udd95\udd96\ude45-\ude47\ude4b-\ude4f\udea3\udeb4-\udeb6\udec0\udecc]|\ud83e[\udd0c\udd0f\udd18-\udd1c\udd1e\udd1f\udd26\udd30-\udd39\udd3d\udd3e\udd77\uddb5\uddb6\uddb8\uddb9\uddbb\uddcd-\uddcf\uddd1-\udddd\udec3-\udec5\udef1-\udef8]|[\u270a\u270b]))(?:\ud83c[\udffb-\udfff])?|(?:\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f|\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc73\udb40\udc63\udb40\udc74\udb40\udc7f|\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f|\ud83c\udde6\ud83c[\udde8-\uddec\uddee\uddf1\uddf2\uddf4\uddf6-\uddfa\uddfc\uddfd\uddff]|\ud83c\udde7\ud83c[\udde6\udde7\udde9-\uddef\uddf1-\uddf4\uddf6-\uddf9\uddfb\uddfc\uddfe\uddff]|\ud83c\udde8\ud83c[\udde6\udde8\udde9\uddeb-\uddee\uddf0-\uddf5\uddf7\uddfa-\uddff]|\ud83c\udde9\ud83c[\uddea\uddec\uddef\uddf0\uddf2\uddf4\uddff]|\ud83c\uddea\ud83c[\udde6\udde8\uddea\uddec\udded\uddf7-\uddfa]|\ud83c\uddeb\ud83c[\uddee-\uddf0\uddf2\uddf4\uddf7]|\ud83c\uddec\ud83c[\udde6\udde7\udde9-\uddee\uddf1-\uddf3\uddf5-\uddfa\uddfc\uddfe]|\ud83c\udded\ud83c[\uddf0\uddf2\uddf3\uddf7\uddf9\uddfa]|\ud83c\uddee\ud83c[\udde8-\uddea\uddf1-\uddf4\uddf6-\uddf9]|\ud83c\uddef\ud83c[\uddea\uddf2\uddf4\uddf5]|\ud83c\uddf0\ud83c[\uddea\uddec-\uddee\uddf2\uddf3\uddf5\uddf7\uddfc\uddfe\uddff]|\ud83c\uddf1\ud83c[\udde6-\udde8\uddee\uddf0\uddf7-\uddfb\uddfe]|\ud83c\uddf2\ud83c[\udde6\udde8-\udded\uddf0-\uddff]|\ud83c\uddf3\ud83c[\udde6\udde8\uddea-\uddec\uddee\uddf1\uddf4\uddf5\uddf7\uddfa\uddff]|\ud83c\uddf4\ud83c\uddf2|\ud83c\uddf5\ud83c[\udde6\uddea-\udded\uddf0-\uddf3\uddf7-\uddf9\uddfc\uddfe]|\ud83c\uddf6\ud83c\udde6|\ud83c\uddf7\ud83c[\uddea\uddf4\uddf8\uddfa\uddfc]|\ud83c\uddf8\ud83c[\udde6-\uddea\uddec-\uddf4\uddf7-\uddf9\uddfb\uddfd-\uddff]|\ud83c\uddf9\ud83c[\udde6\udde8\udde9\uddeb-\udded\uddef-\uddf4\uddf7\uddf9\uddfb\uddfc\uddff]|\ud83c\uddfa\ud83c[\udde6\uddec\uddf2\uddf3\uddf8\uddfe\uddff]|\ud83c\uddfb\ud83c[\udde6\udde8\uddea\uddec\uddee\uddf3\uddfa]|\ud83c\uddfc\ud83c[\uddeb\uddf8]|\ud83c\uddfd\ud83c\uddf0|\ud83c\uddfe\ud83c[\uddea\uddf9]|\ud83c\uddff\ud83c[\udde6\uddf2\uddfc]|\ud83c[\udccf\udd8e\udd91-\udd9a\udde6-\uddff\ude01\ude32-\ude36\ude38-\ude3a\ude50\ude51\udf00-\udf20\udf2d-\udf35\udf37-\udf7c\udf7e-\udf84\udf86-\udf93\udfa0-\udfc1\udfc5\udfc6\udfc8\udfc9\udfcf-\udfd3\udfe0-\udff0\udff4\udff8-\udfff]|\ud83d[\udc00-\udc3e\udc40\udc44\udc45\udc51-\udc65\udc6a\udc6f\udc79-\udc7b\udc7d-\udc80\udc84\udc88-\udc8e\udc90\udc92-\udca9\udcab-\udcfc\udcff-\udd3d\udd4b-\udd4e\udd50-\udd67\udda4\uddfb-\ude44\ude48-\ude4a\ude80-\udea2\udea4-\udeb3\udeb7-\udebf\udec1-\udec5\uded0-\uded2\uded5-\uded7\udedc-\udedf\udeeb\udeec\udef4-\udefc\udfe0-\udfeb\udff0]|\ud83e[\udd0d\udd0e\udd10-\udd17\udd20-\udd25\udd27-\udd2f\udd3a\udd3c\udd3f-\udd45\udd47-\udd76\udd78-\uddb4\uddb7\uddba\uddbc-\uddcc\uddd0\uddde-\uddff\ude70-\ude7c\ude80-\ude88\ude90-\udebd\udebf-\udec2\udece-\udedb\udee0-\udee8]|[\u23e9-\u23ec\u23f0\u23f3\u267e\u26ce\u2705\u2728\u274c\u274e\u2753-\u2755\u2795-\u2797\u27b0\u27bf\ue50a])|\ufe0f/g;
            var _closure2_slot2 = mike;
            mike = /\uFE0F/g;
            var _closure2_slot3 = mike;
            mike = global;
            oscar = mike.String;
            report = oscar.fromCharCode;
            tango = 8205;
            tango = report.bind(oscar)(tango);
            var _closure2_slot4 = tango;
            mike = mike.String;
            mike = mike.fromCharCode;
            var _closure2_slot5 = mike;
            return entity;
        };
        entity = undefined;
        zulu = zulu.bind(entity)();
        mike = mike.protocol;
        if(mike) { _fun44397_ip = 76; continue _fun44397 }
 35:
        oscar = zulu.base;
        report = oscar.replace;
        tango = /^http:/;
        mike = '';
        mike = report.bind(oscar)(tango, mike);
        zulu['base'] = mike;
 76:
        mike = argGrault;
        mike['exports'] = zulu;
        zulu = argPlugh;
        mike = 0;
        zulu = zulu[mike];
        mike = argBar;
        tango = mike.bind(entity)(zulu);
        zulu = tango.fileFinishedImporting;
        mike = '../node_modules/.pnpm/@discordapp+twemoji@15.1.0/node_modules/@discordapp/twemoji/dist/twemoji.npm.js';
        mike = zulu.bind(tango)(mike);
        return entity;
    }
})();