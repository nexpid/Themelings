// node_modules/.pnpm/@discordapp+twemoji@15.1.0/node_modules/@discordapp/twemoji/dist/twemoji.npm.js
module.exports = (function(argFoo, argBar, _, __, argGra, ___, argPlu) {
    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
        entity = argFoo;
        michal = entity.location;
        if(michal) { _fun00002_ip = 13; continue _fun00001 }
 11:
        michal = {};
 13:
        zuuluu = function() {
            entity = function(argFoo, argBar) { // Original name: createText
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    golfie = argFoo;
                    entity = global;
                    zuuluu = entity.document;
                    michal = zuuluu.createTextNode;
                    tangon = argBar;
                    entity = golfie;
                    if(!tangon) { _fun00004_ip = 48; continue _fun00003 }
 26:
                    oscard = golfie.replace;
                    report = _closure2_slot3;
                    tangon = '';
                    entity = oscard.bind(golfie)(report, tangon);
 48:
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                }
            };
            var _closure2_slot6 = entity;
            entity = function(argFoo, argBar) { // Original name: defaultImageSrcGenerator
                entity = argBar;
                golfie = '';
                oscard = golfie.concat;
                romeon = entity.base;
                yankee = entity.size;
                option = entity.ext;
                offset = '/';
                verify = argFoo;
                foxtra = golfie;
                entity = foxtra[oscard](romeon, yankee, offset, verify, option, golfie);
                return entity;
            };
            var _closure2_slot7 = entity;
            entity = function(argFoo, argBar) { // Original name: grabAllTextNodes
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = argBar;
                    michal = argFoo;
                    verify = michal.childNodes;
                    michal = verify.length;
                    michal = parseFloat(michal);
                    option = michal - 1;
                    oscard = undefined;
                    report = 'ownerSVGElement';
                    tangon = 1;
                    zuuluu = 3;
                    if(!michal) { _fun00006_ip = 143; continue _fun00005 }
 41:
                    offset = verify[option];
                    michal = offset.nodeType;
                    if(!(zuuluu !== michal)) { _fun00006_ip = 124; continue _fun00005 }
 55:
                    michal = tangon !== michal;
                    if(michal) { _fun00006_ip = 66; continue _fun00005 }
 62:
                    michal = report in offset;
 66:
                    if(michal) { _fun00006_ip = 109; continue _fun00005 }
 69:
                    foxtra = /^(?:iframe|noframes|noscript|script|select|style|textarea)$/;
                    romeon = foxtra.test;
                    backup = offset.nodeName;
                    yankee = backup.toLowerCase;
                    yankee = yankee.bind(backup)();
                    michal = romeon.bind(foxtra)(yankee);
 109:
                    if(michal) { _fun00006_ip = 134; continue _fun00005 }
 112:
                    michal = _closure2_slot8;
                    michal = michal.bind(oscard)(offset, entity);
                    _fun00006_ip = 134; continue _fun00005;
 124:
                    michal = entity.push;
                    michal = michal.bind(entity)(offset);
 134:
                    michal = parseFloat(option);
                    option = michal - 1;
                    if(michal) { _fun00006_ip = 41; continue _fun00005 }
 143:
                    return entity;
                }
            };
            var _closure2_slot8 = entity;
            entity = function(argFoo) { // Original name: grabTheRightIcon
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    oscard = argFoo;
                    zuuluu = _closure2_slot15;
                    tangon = oscard.indexOf;
                    michal = _closure2_slot4;
                    report = tangon.bind(oscard)(michal);
                    tangon = 0;
                    michal = oscard;
                    if(!(report < tangon)) { _fun00008_ip = 52; continue _fun00007 }
 33:
                    report = oscard.replace;
                    tangon = _closure2_slot3;
                    entity = '';
                    michal = report.bind(oscard)(tangon, entity);
 52:
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                }
            };
            var _closure2_slot9 = entity;
            entity = function(argFoo, argBar) { // Original name: parseNode
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    entity = argFoo;
                    ctrled = argBar;
                    michal = _closure2_slot8;
                    update = new Array(0);
                    echoed = undefined;
                    michal = michal.bind(echoed)(entity, update);
                    michal = update.length;
                    michal = parseFloat(michal);
                    result = michal - 1;
                    output = true;
                    sizing = global;
                    kiloes = false;
                    backup = 0;
                    romeon = 'draggable';
                    yankee = 'false';
                    offset = 'on';
                    verify = undefined;
                    option = undefined;
                    golfie = undefined;
                    oscard = undefined;
                    report = undefined;
                    tangon = undefined;
                    zuuluu = undefined;
                    if(!michal) { _fun00010_ip = 630; continue _fun00009 }
 76:
                    vacuum = sizing.document;
                    michal = vacuum.createDocumentFragment;
                    config = michal.bind(vacuum)();
                    sequen = update[result];
                    papara = sequen.nodeValue;
                    vacuum = _closure2_slot2;
                    michal = vacuum.exec;
                    vacuum = michal.bind(vacuum)(papara);
                    limora = verify;
                    sierra = option;
                    record = oscard;
                    status = false;
                    target = 0;
                    verify = limora;
                    option = sierra;
                    michal = false;
                    cntext = 0;
                    oscard = record;
                    if(!vacuum) { _fun00010_ip = 557; continue _fun00009 }
 149:
                    variable37 = vacuum.index;
                    if(!(variable37 !== target)) { _fun00010_ip = 190; continue _fun00009 }
 158:
                    equals = config.appendChild;
                    quebec = _closure2_slot6;
                    whisks = papara.slice;
                    whisks = whisks.bind(papara)(target, variable37);
                    whisks = quebec.bind(echoed)(whisks, output);
                    whisks = equals.bind(config)(whisks);
 190:
                    whisks = _closure2_slot9;
                    variable36 = vacuum[backup];
                    quebec = whisks.bind(echoed)(variable36);
                    whisks = variable36.length;
                    variable38 = variable37 + whisks;
                    whisks = ctrled.callback;
                    equals = whisks.bind(ctrled)(quebec, ctrled);
                    variable41 = limora;
                    variable40 = sierra;
                    variable39 = status;
                    whisks = record;
                    if(!quebec) { _fun00010_ip = 472; continue _fun00009 }
 242:
                    variable41 = limora;
                    variable40 = sierra;
                    variable39 = status;
                    whisks = record;
                    if(!equals) { _fun00010_ip = 472; continue _fun00009 }
 260:
                    variable42 = sizing.Image;
                    variable43 = variable42.prototype;
                    variable43 = Object.create(variable43, {constructor: {value: variable42}});
                    variable56 = variable43;
                    variable42 = new variable56[variable42](variable55);
                    variable42 = variable42 instanceof Object ? variable42 : variable43;
                    variable43 = ctrled.onerror;
                    variable42['onerror'] = variable43;
                    variable43 = variable42.setAttribute;
                    variable43 = variable43.bind(variable42)(romeon, yankee);
                    variable43 = ctrled.attributes;
                    variable44 = variable43.bind(ctrled)(variable36, quebec);
                    variable49 = variable44;
                    variable45 = sierra;
                    variable43 = variable45;
                    for(variable46 in variable49)
 339:
                    {
                        variable43 = variable45;
 351:
                        variable51 = variable46;
                        variable52 = variable44.hasOwnProperty;
                        variable52 = variable52.bind(variable44)(variable51);
                        if(!variable52) { _fun00010_ip = 382; continue _fun00009 }
 368:
                        variable53 = variable51.indexOf;
                        variable53 = variable53.bind(variable51)(offset);
                        variable52 = backup !== variable53;
 382:
                        if(!variable52) { _fun00010_ip = 399; continue _fun00009 }
 385:
                        variable53 = variable42.hasAttribute;
                        variable53 = variable53.bind(variable42)(variable51);
                        variable52 = !variable53;
 399:
                        variable45 = variable51;
                        if(!variable52) { _fun00010_ip = 339; continue _fun00009 }
 405:
                        variable53 = variable42.setAttribute;
                        variable52 = variable44[variable51];
                        variable52 = variable53.bind(variable42)(variable51, variable52);
                        variable45 = variable51;
                        _fun00010_ip = 339; continue _fun00009;
                    }
 426:
                    variable45 = ctrled.className;
                    variable42['className'] = variable45;
                    variable42['alt'] = variable36;
                    variable42['src'] = equals;
                    variable45 = config.appendChild;
                    variable45 = variable45.bind(config)(variable42);
                    variable40 = variable43;
                    variable41 = variable44;
                    variable39 = true;
                    whisks = variable42;
 472:
                    if(whisks) { _fun00010_ip = 496; continue _fun00009 }
 475:
                    variable42 = config.appendChild;
                    whisks = _closure2_slot6;
                    whisks = whisks.bind(echoed)(variable36, kiloes);
                    whisks = variable42.bind(config)(whisks);
 496:
                    variable42 = _closure2_slot2;
                    whisks = variable42.exec;
                    vacuum = whisks.bind(variable42)(papara);
                    limora = variable41;
                    sierra = variable40;
                    status = variable39;
                    target = variable38;
                    record = null;
                    verify = limora;
                    option = sierra;
                    michal = status;
                    cntext = target;
                    golfie = variable37;
                    oscard = null;
                    report = variable36;
                    tangon = quebec;
                    zuuluu = equals;
                    if(vacuum) { _fun00010_ip = 149; continue _fun00009 }
 557:
                    if(!michal) { _fun00010_ip = 618; continue _fun00009 }
 560:
                    michal = papara.length;
                    if(!(cntext < michal)) { _fun00010_ip = 600; continue _fun00009 }
 569:
                    vacuum = config.appendChild;
                    record = _closure2_slot6;
                    michal = papara.slice;
                    michal = michal.bind(papara)(cntext);
                    michal = record.bind(echoed)(michal, output);
                    michal = vacuum.bind(config)(michal);
 600:
                    vacuum = sequen.parentNode;
                    michal = vacuum.replaceChild;
                    michal = michal.bind(vacuum)(config, sequen);
 618:
                    michal = parseFloat(result);
                    result = michal - 1;
                    if(michal) { _fun00010_ip = 76; continue _fun00009 }
 630:
                    return entity;
                }
            };
            var _closure2_slot10 = entity;
            entity = function(argFoo, argBar) { // Original name: parseString
                michal = argBar;
                var _closure3_slot0 = michal;
                tangon = _closure2_slot14;
                zuuluu = undefined;
                michal = argFoo;
                entity = function(argFoo) {
                    _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                        oscard = argFoo;
                        michal = _closure2_slot9;
                        entity = undefined;
                        report = michal.bind(entity)(oscard);
                        zuuluu = _closure3_slot0;
                        entity = zuuluu.callback;
                        echoed = entity.bind(zuuluu)(report, zuuluu);
                        entity = oscard;
                        if(!report) { _fun00012_ip = 344; continue _fun00011 }
 45:
                        entity = oscard;
                        if(!echoed) { _fun00012_ip = 344; continue _fun00011 }
 54:
                        result = '<img ';
                        yankee = result.concat;
                        zuuluu = _closure3_slot0;
                        whisks = zuuluu.className;
                        equals = 'class="';
                        limora = '" ';
                        sierra = 'draggable="false" ';
                        status = 'alt="';
                        romeon = '"';
                        cntext = ' src="';
                        quebec = result;
                        target = oscard;
                        papara = romeon;
                        record = echoed;
                        config = romeon;
                        tangon = quebec[yankee](equals, whisks, limora, sierra, status, target, papara, cntext, record, config, sequen);
                        michal = zuuluu.attributes;
                        yankee = michal.bind(zuuluu)(oscard, report);
                        kiloes = yankee;
                        verify = ' ';
                        option = '="';
                        golfie = '=';
                        oscard = -1;
                        report = 'on';
                        zuuluu = 0;
                        michal = tangon;
                        tangon = michal;
                        for(offset in kiloes)
 186:
                        {
                            source = michal;
                            tangon = source;
 204:
                            update = offset;
                            result = yankee.hasOwnProperty;
                            result = result.bind(yankee)(update);
                            if(!result) { _fun00012_ip = 235; continue _fun00011 }
 221:
                            echoed = update.indexOf;
                            echoed = echoed.bind(update)(report);
                            result = zuuluu !== echoed;
 235:
                            if(!result) { _fun00012_ip = 260; continue _fun00011 }
 238:
                            ctrled = source.indexOf;
                            echoed = verify + update;
                            echoed = echoed + golfie;
                            echoed = ctrled.bind(source)(echoed);
                            result = oscard === echoed;
 260:
                            michal = source;
                            if(!result) { _fun00012_ip = 186; continue _fun00011 }
 266:
                            echoed = source.concat;
                            sequen = yankee[update];
                            vacuum = sequen.replace;
                            ctrled = _closure2_slot12;
                            result = /[&<>'"]/g;
                            sierra = vacuum.bind(sequen)(result, ctrled);
                            quebec = source;
                            equals = verify;
                            whisks = update;
                            limora = option;
                            status = romeon;
                            michal = quebec[echoed](equals, whisks, limora, sierra, status, target);
                            _fun00012_ip = 186; continue _fun00011;
                        }
 328:
                        zuuluu = tangon.concat;
                        michal = '/>';
                        entity = zuuluu.bind(tangon)(michal);
 344:
                        return entity;
                    }
                };
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            var _closure2_slot11 = entity;
            entity = function(argFoo) { // Original name: replacer
                michal = _closure2_slot1;
                entity = argFoo;
                entity = michal[entity];
                return entity;
            };
            var _closure2_slot12 = entity;
            entity = function() { // Original name: returnNull
                entity = null;
                return entity;
            };
            var _closure2_slot13 = entity;
            michal = function(argFoo, argBar) { // Original name: replace
                entity = global;
                zuuluu = entity.String;
                michal = undefined;
                entity = argFoo;
                tangon = zuuluu.bind(michal)(entity);
                zuuluu = tangon.replace;
                michal = _closure2_slot2;
                entity = argBar;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            var _closure2_slot14 = michal;
            report = function(argFoo, argBar) { // Original name: toCodePoint
                _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                    foxtra = argFoo;
                    zuuluu = argBar;
                    michal = new Array(0);
                    entity = foxtra.length;
                    romeon = 0;
                    entity = romeon < entity;
                    yankee = 56320;
                    offset = 65536;
                    verify = 10;
                    option = 16;
                    golfie = 56319;
                    oscard = 55296;
                    report = 0;
                    tangon = 0;
                    if(!entity) { _fun00014_ip = 168; continue _fun00013 }
 58:
                    backup = foxtra.charCodeAt;
                    entity = parseFloat(tangon);
                    tangon = entity + 1;
                    sizing = backup.bind(foxtra)(entity);
                    if(report) { _fun00014_ip = 114; continue _fun00013 }
 78:
                    if(!(oscard <= sizing)) { _fun00014_ip = 89; continue _fun00013 }
 82:
                    backup = sizing;
                    if(!(!(backup <= golfie))) { _fun00014_ip = 156; continue _fun00013 }
 89:
                    kiloes = michal.push;
                    entity = sizing.toString;
                    entity = entity.bind(sizing)(option);
                    entity = kiloes.bind(michal)(entity);
                    backup = report;
                    _fun00014_ip = 156; continue _fun00013;
 114:
                    kiloes = michal.push;
                    entity = report - oscard;
                    sizing = sizing - yankee;
                    entity = entity << verify;
                    entity = offset + entity;
                    sizing = entity + sizing;
                    entity = sizing.toString;
                    entity = entity.bind(sizing)(option);
                    entity = kiloes.bind(michal)(entity);
                    backup = 0;
 156:
                    entity = foxtra.length;
                    report = backup;
                    if(tangon < entity) { _fun00014_ip = 58; continue _fun00013 }
 168:
                    entity = michal.join;
                    if(zuuluu) { _fun00014_ip = 180; continue _fun00013 }
 176:
                    zuuluu = '-';
 180:
                    entity = entity.bind(michal)(zuuluu);
                    return entity;
                }
            };
            var _closure2_slot15 = report;
            entity = {'base': 'https://cdn.jsdelivr.net/gh/jdecked/twemoji@15.1.0/assets/', 'ext': '.png', 'size': '72x72', 'className': 'emoji'};
            tangon = {};
            oscard = function(argFoo) { // Original name: fromCodePoint
                _fun00015: for(var _fun00016_ip = 0; ; ) switch(_fun00016_ip) {
 0:
                    report = argFoo;
                    michal = 'string';
                    entity = typeof report;
                    tangon = report;
                    if(!(michal === entity)) { _fun00016_ip = 36; continue _fun00015 }
 17:
                    entity = global;
                    zuuluu = entity.parseInt;
                    michal = undefined;
                    entity = 16;
                    tangon = zuuluu.bind(michal)(report, entity);
 36:
                    entity = 65536;
                    if(!(!(tangon < entity))) { _fun00016_ip = 104; continue _fun00015 }
 46:
                    report = _closure2_slot5;
                    golfie = tangon - entity;
                    zuuluu = undefined;
                    michal = 55296;
                    entity = 10;
                    entity = golfie >> entity;
                    michal = michal + entity;
                    oscard = 56320;
                    entity = 1023;
                    entity = entity & golfie;
                    entity = oscard + entity;
                    entity = report.bind(zuuluu)(michal, entity);
                    _fun00016_ip = 118; continue _fun00015;
 104:
                    zuuluu = _closure2_slot5;
                    michal = undefined;
                    entity = zuuluu.bind(michal)(tangon);
 118:
                    return entity;
                }
            };
            tangon['fromCodePoint'] = oscard;
            tangon['toCodePoint'] = report;
            entity['convert'] = tangon;
            tangon = function() { // Original name: onerror
                _fun00017: for(var _fun00018_ip = 0; ; ) switch(_fun00018_ip) {
 0:
                    tangon = this;
                    entity = tangon.parentNode;
                    if(!entity) { _fun00018_ip = 53; continue _fun00017 }
 12:
                    zuuluu = tangon.parentNode;
                    michal = zuuluu.replaceChild;
                    golfie = _closure2_slot6;
                    oscard = tangon.alt;
                    report = undefined;
                    entity = false;
                    entity = golfie.bind(report)(oscard, entity);
                    entity = michal.bind(zuuluu)(entity, tangon);
 53:
                    entity = undefined;
                    return entity;
                }
            };
            entity['onerror'] = tangon;
            tangon = function(argFoo, argBar) { // Original name: parse
                _fun00019: for(var _fun00020_ip = 0; ; ) switch(_fun00020_ip) {
 0:
                    tangon = argFoo;
                    zuuluu = argBar;
                    michal = zuuluu;
                    if(!zuuluu) { _fun00020_ip = 23; continue _fun00019 }
 12:
                    report = 'function';
                    entity = typeof zuuluu;
                    michal = report !== entity;
 23:
                    entity = zuuluu;
                    if(michal) { _fun00020_ip = 39; continue _fun00019 }
 29:
                    michal = {};
                    michal['callback'] = zuuluu;
                    entity = michal;
 39:
                    oscard = 'string';
                    michal = typeof tangon;
                    if(!(oscard !== michal)) { _fun00020_ip = 59; continue _fun00019 }
 50:
                    zuuluu = _closure2_slot10;
                    _fun00020_ip = 66; continue _fun00019;
 59:
                    zuuluu = _closure2_slot11;
 66:
                    michal = {};
                    report = entity.callback;
                    if(report) { _fun00020_ip = 84; continue _fun00019 }
 77:
                    report = _closure2_slot7;
 84:
                    michal['callback'] = report;
                    report = entity.attributes;
                    golfie = 'function';
                    report = typeof report;
                    if(!(golfie !== report)) { _fun00020_ip = 115; continue _fun00019 }
 106:
                    report = _closure2_slot13;
                    _fun00020_ip = 121; continue _fun00019;
 115:
                    report = entity.attributes;
 121:
                    michal['attributes'] = report;
                    report = entity.base;
                    report = typeof report;
                    if(!(oscard !== report)) { _fun00020_ip = 154; continue _fun00019 }
 139:
                    report = _closure2_slot0;
                    report = report.base;
                    _fun00020_ip = 160; continue _fun00019;
 154:
                    report = entity.base;
 160:
                    michal['base'] = report;
                    report = entity.ext;
                    if(report) { _fun00020_ip = 187; continue _fun00019 }
 174:
                    oscard = _closure2_slot0;
                    report = oscard.ext;
 187:
                    michal['ext'] = report;
                    report = entity.folder;
                    if(report) { _fun00020_ip = 250; continue _fun00019 }
 201:
                    option = entity.size;
                    if(option) { _fun00020_ip = 221; continue _fun00019 }
 209:
                    oscard = _closure2_slot0;
                    option = oscard.size;
 221:
                    verify = 'number';
                    golfie = typeof option;
                    oscard = option;
                    if(!(verify === golfie)) { _fun00020_ip = 247; continue _fun00019 }
 235:
                    golfie = 'x';
                    golfie = option + golfie;
                    oscard = golfie + option;
 247:
                    report = oscard;
 250:
                    michal['size'] = report;
                    report = entity.className;
                    if(report) { _fun00020_ip = 276; continue _fun00019 }
 263:
                    oscard = _closure2_slot0;
                    report = oscard.className;
 276:
                    michal['className'] = report;
                    entity = entity.onerror;
                    if(entity) { _fun00020_ip = 303; continue _fun00019 }
 290:
                    report = _closure2_slot0;
                    entity = report.onerror;
 303:
                    michal['onerror'] = entity;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(tangon, michal);
                    return entity;
                }
            };
            entity['parse'] = tangon;
            entity['replace'] = michal;
            michal = function(argFoo) { // Original name: test
                entity = _closure2_slot2;
                zuuluu = 0;
                entity['lastIndex'] = zuuluu;
                report = _closure2_slot2;
                tangon = report.test;
                entity = argFoo;
                entity = tangon.bind(report)(entity);
                michal = _closure2_slot2;
                michal['lastIndex'] = zuuluu;
                return entity;
            };
            entity['test'] = michal;
            var _closure2_slot0 = entity;
            michal = {'&': '&amp;', '<': '&lt;', '>': '&gt;', "'": '&#39;', '"': '&quot;'};
            var _closure2_slot1 = michal;
            michal = /(?:\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffc-\udfff]|\ud83e\uddd1\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffb\udffd-\udfff]|\ud83e\uddd1\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffb\udffc\udffe\udfff]|\ud83e\uddd1\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffb-\udffd\udfff]|\ud83e\uddd1\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffb-\udffe]|\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffc-\udfff]|\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb\udffd-\udfff]|\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb\udffc\udffe\udfff]|\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb-\udffd\udfff]|\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb-\udffe]|\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffc-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffc-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb\udffd-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffb\udffd-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb\udffc\udffe\udfff]|\ud83d\udc69\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffb\udffc\udffe\udfff]|\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb-\udffd\udfff]|\ud83d\udc69\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffb-\udffd\udfff]|\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb-\udffe]|\ud83d\udc69\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffb-\udffe]|\ud83e\uddd1\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffc-\udfff]|\ud83e\uddd1\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffb\udffd-\udfff]|\ud83e\uddd1\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffb\udffc\udffe\udfff]|\ud83e\uddd1\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffb-\udffd\udfff]|\ud83e\uddd1\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffb-\udffe]|\ud83e\uddd1\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83d\udc68\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68|\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d[\udc68\udc69]|\ud83e\udef1\ud83c\udffb\u200d\ud83e\udef2\ud83c[\udffc-\udfff]|\ud83e\udef1\ud83c\udffc\u200d\ud83e\udef2\ud83c[\udffb\udffd-\udfff]|\ud83e\udef1\ud83c\udffd\u200d\ud83e\udef2\ud83c[\udffb\udffc\udffe\udfff]|\ud83e\udef1\ud83c\udffe\u200d\ud83e\udef2\ud83c[\udffb-\udffd\udfff]|\ud83e\udef1\ud83c\udfff\u200d\ud83e\udef2\ud83c[\udffb-\udffe]|\ud83d\udc68\u200d\u2764\ufe0f\u200d\ud83d\udc68|\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d[\udc68\udc69]|\ud83e\uddd1\u200d\ud83e\udd1d\u200d\ud83e\uddd1|\ud83d\udc6b\ud83c[\udffb-\udfff]|\ud83d\udc6c\ud83c[\udffb-\udfff]|\ud83d\udc6d\ud83c[\udffb-\udfff]|\ud83d\udc8f\ud83c[\udffb-\udfff]|\ud83d\udc91\ud83c[\udffb-\udfff]|\ud83e\udd1d\ud83c[\udffb-\udfff]|\ud83d[\udc6b-\udc6d\udc8f\udc91]|\ud83e\udd1d)|(?:\ud83d[\udc68\udc69]|\ud83e\uddd1)(?:\ud83c[\udffb-\udfff])?\u200d(?:\u2695\ufe0f|\u2696\ufe0f|\u2708\ufe0f|\ud83c[\udf3e\udf73\udf7c\udf84\udf93\udfa4\udfa8\udfeb\udfed]|\ud83d[\udcbb\udcbc\udd27\udd2c\ude80\ude92]|\ud83e[\uddaf-\uddb3\uddbc\uddbd])|(?:\ud83c[\udfcb\udfcc]|\ud83d[\udd74\udd75]|\u26f9)((?:\ud83c[\udffb-\udfff]|\ufe0f)\u200d[\u2640\u2642]\ufe0f)|(?:\ud83c[\udfc3\udfc4\udfca]|\ud83d[\udc6e\udc70\udc71\udc73\udc77\udc81\udc82\udc86\udc87\ude45-\ude47\ude4b\ude4d\ude4e\udea3\udeb4-\udeb6]|\ud83e[\udd26\udd35\udd37-\udd39\udd3d\udd3e\uddb8\uddb9\uddcd-\uddcf\uddd4\uddd6-\udddd])(?:\ud83c[\udffb-\udfff])?\u200d[\u2640\u2642]\ufe0f|(?:\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d[\udc66\udc67]|\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f|\ud83c\udff3\ufe0f\u200d\ud83c\udf08|\ud83d\ude36\u200d\ud83c\udf2b\ufe0f|\u2764\ufe0f\u200d\ud83d\udd25|\u2764\ufe0f\u200d\ud83e\ude79|\ud83c\udff4\u200d\u2620\ufe0f|\ud83d\udc15\u200d\ud83e\uddba|\ud83d\udc3b\u200d\u2744\ufe0f|\ud83d\udc41\u200d\ud83d\udde8|\ud83d\udc68\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d[\udc66\udc67]|\ud83d\udc6f\u200d\u2640\ufe0f|\ud83d\udc6f\u200d\u2642\ufe0f|\ud83d\ude2e\u200d\ud83d\udca8|\ud83d\ude35\u200d\ud83d\udcab|\ud83e\udd3c\u200d\u2640\ufe0f|\ud83e\udd3c\u200d\u2642\ufe0f|\ud83e\uddde\u200d\u2640\ufe0f|\ud83e\uddde\u200d\u2642\ufe0f|\ud83e\udddf\u200d\u2640\ufe0f|\ud83e\udddf\u200d\u2642\ufe0f|\ud83d\udc08\u200d\u2b1b|\ud83d\udc26\u200d\u2b1b)|[#*0-9]\ufe0f?\u20e3|(?:[©®\u2122\u265f]\ufe0f)|(?:\ud83c[\udc04\udd70\udd71\udd7e\udd7f\ude02\ude1a\ude2f\ude37\udf21\udf24-\udf2c\udf36\udf7d\udf96\udf97\udf99-\udf9b\udf9e\udf9f\udfcd\udfce\udfd4-\udfdf\udff3\udff5\udff7]|\ud83d[\udc3f\udc41\udcfd\udd49\udd4a\udd6f\udd70\udd73\udd76-\udd79\udd87\udd8a-\udd8d\udda5\udda8\uddb1\uddb2\uddbc\uddc2-\uddc4\uddd1-\uddd3\udddc-\uddde\udde1\udde3\udde8\uddef\uddf3\uddfa\udecb\udecd-\udecf\udee0-\udee5\udee9\udef0\udef3]|[\u203c\u2049\u2139\u2194-\u2199\u21a9\u21aa\u231a\u231b\u2328\u23cf\u23ed-\u23ef\u23f1\u23f2\u23f8-\u23fa\u24c2\u25aa\u25ab\u25b6\u25c0\u25fb-\u25fe\u2600-\u2604\u260e\u2611\u2614\u2615\u2618\u2620\u2622\u2623\u2626\u262a\u262e\u262f\u2638-\u263a\u2640\u2642\u2648-\u2653\u2660\u2663\u2665\u2666\u2668\u267b\u267f\u2692-\u2697\u2699\u269b\u269c\u26a0\u26a1\u26a7\u26aa\u26ab\u26b0\u26b1\u26bd\u26be\u26c4\u26c5\u26c8\u26cf\u26d1\u26d3\u26d4\u26e9\u26ea\u26f0-\u26f5\u26f8\u26fa\u26fd\u2702\u2708\u2709\u270f\u2712\u2714\u2716\u271d\u2721\u2733\u2734\u2744\u2747\u2757\u2763\u2764\u27a1\u2934\u2935\u2b05-\u2b07\u2b1b\u2b1c\u2b50\u2b55\u3030\u303d\u3297\u3299])(?:\ufe0f|(?!\ufe0e))|(?:(?:\ud83c[\udfcb\udfcc]|\ud83d[\udd74\udd75\udd90]|\ud83e\udef0|[\u261d\u26f7\u26f9\u270c\u270d])(?:\ufe0f|(?!\ufe0e))|(?:\ud83c[\udf85\udfc2-\udfc4\udfc7\udfca]|\ud83d[\udc42\udc43\udc46-\udc50\udc66-\udc69\udc6e\udc70-\udc78\udc7c\udc81-\udc83\udc85-\udc87\udcaa\udd7a\udd95\udd96\ude45-\ude47\ude4b-\ude4f\udea3\udeb4-\udeb6\udec0\udecc]|\ud83e[\udd0c\udd0f\udd18-\udd1c\udd1e\udd1f\udd26\udd30-\udd39\udd3d\udd3e\udd77\uddb5\uddb6\uddb8\uddb9\uddbb\uddcd-\uddcf\uddd1-\udddd\udec3-\udec5\udef1-\udef8]|[\u270a\u270b]))(?:\ud83c[\udffb-\udfff])?|(?:\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f|\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc73\udb40\udc63\udb40\udc74\udb40\udc7f|\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f|\ud83c\udde6\ud83c[\udde8-\uddec\uddee\uddf1\uddf2\uddf4\uddf6-\uddfa\uddfc\uddfd\uddff]|\ud83c\udde7\ud83c[\udde6\udde7\udde9-\uddef\uddf1-\uddf4\uddf6-\uddf9\uddfb\uddfc\uddfe\uddff]|\ud83c\udde8\ud83c[\udde6\udde8\udde9\uddeb-\uddee\uddf0-\uddf5\uddf7\uddfa-\uddff]|\ud83c\udde9\ud83c[\uddea\uddec\uddef\uddf0\uddf2\uddf4\uddff]|\ud83c\uddea\ud83c[\udde6\udde8\uddea\uddec\udded\uddf7-\uddfa]|\ud83c\uddeb\ud83c[\uddee-\uddf0\uddf2\uddf4\uddf7]|\ud83c\uddec\ud83c[\udde6\udde7\udde9-\uddee\uddf1-\uddf3\uddf5-\uddfa\uddfc\uddfe]|\ud83c\udded\ud83c[\uddf0\uddf2\uddf3\uddf7\uddf9\uddfa]|\ud83c\uddee\ud83c[\udde8-\uddea\uddf1-\uddf4\uddf6-\uddf9]|\ud83c\uddef\ud83c[\uddea\uddf2\uddf4\uddf5]|\ud83c\uddf0\ud83c[\uddea\uddec-\uddee\uddf2\uddf3\uddf5\uddf7\uddfc\uddfe\uddff]|\ud83c\uddf1\ud83c[\udde6-\udde8\uddee\uddf0\uddf7-\uddfb\uddfe]|\ud83c\uddf2\ud83c[\udde6\udde8-\udded\uddf0-\uddff]|\ud83c\uddf3\ud83c[\udde6\udde8\uddea-\uddec\uddee\uddf1\uddf4\uddf5\uddf7\uddfa\uddff]|\ud83c\uddf4\ud83c\uddf2|\ud83c\uddf5\ud83c[\udde6\uddea-\udded\uddf0-\uddf3\uddf7-\uddf9\uddfc\uddfe]|\ud83c\uddf6\ud83c\udde6|\ud83c\uddf7\ud83c[\uddea\uddf4\uddf8\uddfa\uddfc]|\ud83c\uddf8\ud83c[\udde6-\uddea\uddec-\uddf4\uddf7-\uddf9\uddfb\uddfd-\uddff]|\ud83c\uddf9\ud83c[\udde6\udde8\udde9\uddeb-\udded\uddef-\uddf4\uddf7\uddf9\uddfb\uddfc\uddff]|\ud83c\uddfa\ud83c[\udde6\uddec\uddf2\uddf3\uddf8\uddfe\uddff]|\ud83c\uddfb\ud83c[\udde6\udde8\uddea\uddec\uddee\uddf3\uddfa]|\ud83c\uddfc\ud83c[\uddeb\uddf8]|\ud83c\uddfd\ud83c\uddf0|\ud83c\uddfe\ud83c[\uddea\uddf9]|\ud83c\uddff\ud83c[\udde6\uddf2\uddfc]|\ud83c[\udccf\udd8e\udd91-\udd9a\udde6-\uddff\ude01\ude32-\ude36\ude38-\ude3a\ude50\ude51\udf00-\udf20\udf2d-\udf35\udf37-\udf7c\udf7e-\udf84\udf86-\udf93\udfa0-\udfc1\udfc5\udfc6\udfc8\udfc9\udfcf-\udfd3\udfe0-\udff0\udff4\udff8-\udfff]|\ud83d[\udc00-\udc3e\udc40\udc44\udc45\udc51-\udc65\udc6a\udc6f\udc79-\udc7b\udc7d-\udc80\udc84\udc88-\udc8e\udc90\udc92-\udca9\udcab-\udcfc\udcff-\udd3d\udd4b-\udd4e\udd50-\udd67\udda4\uddfb-\ude44\ude48-\ude4a\ude80-\udea2\udea4-\udeb3\udeb7-\udebf\udec1-\udec5\uded0-\uded2\uded5-\uded7\udedc-\udedf\udeeb\udeec\udef4-\udefc\udfe0-\udfeb\udff0]|\ud83e[\udd0d\udd0e\udd10-\udd17\udd20-\udd25\udd27-\udd2f\udd3a\udd3c\udd3f-\udd45\udd47-\udd76\udd78-\uddb4\uddb7\uddba\uddbc-\uddcc\uddd0\uddde-\uddff\ude70-\ude7c\ude80-\ude88\ude90-\udebd\udebf-\udec2\udece-\udedb\udee0-\udee8]|[\u23e9-\u23ec\u23f0\u23f3\u267e\u26ce\u2705\u2728\u274c\u274e\u2753-\u2755\u2795-\u2797\u27b0\u27bf\ue50a])|\ufe0f/g;
            var _closure2_slot2 = michal;
            michal = /\uFE0F/g;
            var _closure2_slot3 = michal;
            michal = global;
            oscard = michal.String;
            report = oscard.fromCharCode;
            tangon = 8205;
            tangon = report.bind(oscard)(tangon);
            var _closure2_slot4 = tangon;
            michal = michal.String;
            michal = michal.fromCharCode;
            var _closure2_slot5 = michal;
            return entity;
        };
        entity = undefined;
        zuuluu = zuuluu.bind(entity)();
        michal = michal.protocol;
        if(michal) { _fun00002_ip = 76; continue _fun00001 }
 35:
        oscard = zuuluu.base;
        report = oscard.replace;
        tangon = /^http:/;
        michal = '';
        michal = report.bind(oscard)(tangon, michal);
        zuuluu['base'] = michal;
 76:
        michal = argGra;
        michal['exports'] = zuuluu;
        zuuluu = argPlu;
        michal = 0;
        zuuluu = zuuluu[michal];
        michal = argBar;
        tangon = michal.bind(entity)(zuuluu);
        zuuluu = tangon.fileFinishedImporting;
        michal = '../node_modules/.pnpm/@discordapp+twemoji@15.1.0/node_modules/@discordapp/twemoji/dist/twemoji.npm.js';
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    }
})();