// discord_common/js/packages/kv-storage/js/types/index.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    zulu = argFred;
    entity = global;
    report = entity.Object;
    tango = report.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(report)(zulu, entity, mike);
    oscar = {};
    entity = 'kv';
    oscar['Kv'] = entity;
    entity = 'kv_cache';
    oscar['KvCache'] = entity;
    entity = 'messages';
    oscar['Messages'] = entity;
    report = {};
    golf = 0;
    report['Ascending'] = golf;
    entity = 'Ascending';
    report[golf] = entity;
    options = 1;
    report['Descending'] = options;
    entity = 'Descending';
    report[options] = entity;
    tango = {};
    tango['Closed'] = golf;
    entity = 'Closed';
    tango[golf] = entity;
    tango['Open'] = options;
    entity = 'Open';
    tango[options] = entity;
    mike = 2;
    tango['Disabled'] = mike;
    entity = 'Disabled';
    tango[mike] = entity;
    mike = {};
    mike['Skip'] = golf;
    entity = 'Skip';
    mike[golf] = entity;
    mike['Replace'] = options;
    entity = 'Replace';
    mike[options] = entity;
    entity = argPlugh;
    options = entity[golf];
    golf = argBar;
    entity = undefined;
    verify = golf.bind(entity)(options);
    options = verify.fileFinishedImporting;
    golf = '../discord_common/js/packages/kv-storage/js/types/index.tsx';
    golf = options.bind(verify)(golf);
    zulu['TableId'] = oscar;
    oscar = 5;
    zulu['MAXIMUM_KEY_BITS'] = oscar;
    zulu['Ordering'] = report;
    zulu['DatabaseState'] = tango;
    zulu['ConflictOptions'] = mike;
    return entity;
})();