// discord_common/js/packages/analytics-utils/StandardAnalyticsConstants.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    zuuluu = argFre;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    tangon = {};
    entity = 'channel_add_flow';
    tangon['CHANNEL_ADD_FLOW'] = entity;
    entity = 'contact_sync_flow';
    tangon['CONTACT_SYNC_FLOW'] = entity;
    entity = 'directory_guild_add_flow';
    tangon['DIRECTORY_GUILD_ADD_FLOW'] = entity;
    entity = 'guild_add_flow';
    tangon['GUILD_ADD_FLOW'] = entity;
    entity = 'guild_add_nuf';
    tangon['GUILD_ADD_NUF'] = entity;
    entity = 'user_verification_modal_flow';
    tangon['USER_VERIFICATION_MODAL_FLOW'] = entity;
    entity = 'guild_transfer_ownership_flow';
    tangon['GUILD_TRANSFER_OWNERSHIP_FLOW'] = entity;
    entity = 'role_add_flow';
    tangon['ROLE_ADD_FLOW'] = entity;
    entity = 'user_account_email_change_flow';
    tangon['USER_ACCOUNT_EMAIL_CHANGE_FLOW'] = entity;
    entity = 'user_login_flow';
    tangon['USER_LOGIN_FLOW'] = entity;
    entity = 'user_registration_flow';
    tangon['USER_REGISTRATION_FLOW'] = entity;
    entity = 'activity_shelf_flow';
    tangon['ACTIVITY_SHELF_FLOW'] = entity;
    entity = 'pomelo_flow';
    tangon['POMELO_FLOW'] = entity;
    entity = 'appeal_ingestion';
    tangon['APPEAL_INGESTION'] = entity;
    entity = 'account_revert_flow';
    tangon['ACCOUNT_REVERT_FLOW'] = entity;
    michal = {};
    entity = 'page';
    michal['PAGE'] = entity;
    entity = 'modal';
    michal['MODAL'] = entity;
    entity = 'popout';
    michal['POPOUT'] = entity;
    entity = 'menu';
    michal['MENU'] = entity;
    entity = 'pane';
    michal['PANE'] = entity;
    entity = 'view';
    michal['VIEW'] = entity;
    entity = 'halfsheet';
    michal['HALFSHEET'] = entity;
    report = argPlu;
    entity = 0;
    oscard = report[entity];
    report = argBar;
    entity = undefined;
    golfie = report.bind(entity)(oscard);
    oscard = golfie.fileFinishedImporting;
    report = '../discord_common/js/packages/analytics-utils/StandardAnalyticsConstants.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['ImpressionGroups'] = tangon;
    zuuluu['ImpressionTypes'] = michal;
    return entity;
})();