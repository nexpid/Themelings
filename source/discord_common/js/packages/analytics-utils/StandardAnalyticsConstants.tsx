// discord_common/js/packages/analytics-utils/StandardAnalyticsConstants.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    zulu = argFred;
    entity = global;
    report = entity.Object;
    tango = report.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(report)(zulu, entity, mike);
    tango = {};
    entity = 'channel_add_flow';
    tango['CHANNEL_ADD_FLOW'] = entity;
    entity = 'contact_sync_flow';
    tango['CONTACT_SYNC_FLOW'] = entity;
    entity = 'directory_guild_add_flow';
    tango['DIRECTORY_GUILD_ADD_FLOW'] = entity;
    entity = 'guild_add_flow';
    tango['GUILD_ADD_FLOW'] = entity;
    entity = 'guild_add_nuf';
    tango['GUILD_ADD_NUF'] = entity;
    entity = 'user_verification_modal_flow';
    tango['USER_VERIFICATION_MODAL_FLOW'] = entity;
    entity = 'guild_transfer_ownership_flow';
    tango['GUILD_TRANSFER_OWNERSHIP_FLOW'] = entity;
    entity = 'role_add_flow';
    tango['ROLE_ADD_FLOW'] = entity;
    entity = 'user_account_email_change_flow';
    tango['USER_ACCOUNT_EMAIL_CHANGE_FLOW'] = entity;
    entity = 'user_login_flow';
    tango['USER_LOGIN_FLOW'] = entity;
    entity = 'user_registration_flow';
    tango['USER_REGISTRATION_FLOW'] = entity;
    entity = 'activity_shelf_flow';
    tango['ACTIVITY_SHELF_FLOW'] = entity;
    entity = 'pomelo_flow';
    tango['POMELO_FLOW'] = entity;
    entity = 'appeal_ingestion';
    tango['APPEAL_INGESTION'] = entity;
    entity = 'account_revert_flow';
    tango['ACCOUNT_REVERT_FLOW'] = entity;
    mike = {};
    entity = 'page';
    mike['PAGE'] = entity;
    entity = 'modal';
    mike['MODAL'] = entity;
    entity = 'popout';
    mike['POPOUT'] = entity;
    entity = 'menu';
    mike['MENU'] = entity;
    entity = 'pane';
    mike['PANE'] = entity;
    entity = 'view';
    mike['VIEW'] = entity;
    entity = 'halfsheet';
    mike['HALFSHEET'] = entity;
    report = argPlugh;
    entity = 0;
    oscar = report[entity];
    report = argBar;
    entity = undefined;
    golf = report.bind(entity)(oscar);
    oscar = golf.fileFinishedImporting;
    report = '../discord_common/js/packages/analytics-utils/StandardAnalyticsConstants.tsx';
    report = oscar.bind(golf)(report);
    zulu['ImpressionGroups'] = tango;
    zulu['ImpressionTypes'] = mike;
    return entity;
})();