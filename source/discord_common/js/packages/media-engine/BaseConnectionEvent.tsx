// discord_common/js/packages/media-engine/BaseConnectionEvent.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var3 = exports;
    var1 = global;
    var5 = var1.Object;
    var4 = var5.defineProperty;
    var2 = {};
    var1 = true;
    var2['value'] = var1;
    var1 = '__esModule';
    var1 = var4.bind(var5)(var3, var1, var2);
    var2 = {};
    var1 = 'destroy';
    var2['Destroy'] = var1;
    var1 = 'local-video-disabled';
    var2['LocalVideoDisabled'] = var1;
    var1 = 'active-sinks-change';
    var2['ActiveSinksChange'] = var1;
    var1 = 'experiment-flag';
    var2['ExperimentFlag'] = var1;
    var1 = 'connectionstatechange';
    var2['ConnectionStateChange'] = var1;
    var1 = 'error';
    var2['Error'] = var1;
    var1 = 'connected';
    var2['Connected'] = var1;
    var1 = 'videohook-start';
    var2['VideoHookStart'] = var1;
    var1 = 'videohook-stop';
    var2['VideoHookStop'] = var1;
    var1 = 'videohook-initialize';
    var2['VideoHookInitialize'] = var1;
    var1 = 'screenshare-finish';
    var2['ScreenshareFinish'] = var1;
    var1 = 'video-state';
    var2['VideoState'] = var1;
    var1 = 'soundsharetrace';
    var2['SoundshareTrace'] = var1;
    var1 = 'soundsharespeaking';
    var2['SoundshareSpeaking'] = var1;
    var1 = 'soundshareattached';
    var2['SoundshareAttached'] = var1;
    var1 = 'soundsharefailed';
    var2['SoundshareFailed'] = var1;
    var1 = 'speaking';
    var2['Speaking'] = var1;
    var1 = 'speakingwhilemuted';
    var2['SpeakingWhileMuted'] = var1;
    var1 = 'mute';
    var2['Mute'] = var1;
    var1 = 'toggle-mute';
    var2['ToggleMuteFromNative'] = var1;
    var1 = 'native-mute-changed';
    var2['NativeMuteChanged'] = var1;
    var1 = 'local-mute';
    var2['LocalMute'] = var1;
    var1 = 'noiselevel';
    var2['NoiseLevel'] = var1;
    var1 = 'video';
    var2['Video'] = var1;
    var1 = 'ping';
    var2['Ping'] = var1;
    var1 = 'pingtimeout';
    var2['PingTimeout'] = var1;
    var1 = 'silence';
    var2['Silence'] = var1;
    var1 = 'desktopsourceend';
    var2['DesktopSourceEnd'] = var1;
    var1 = 'outboundlossrate';
    var2['OutboundLossRate'] = var1;
    var1 = 'noisecancellererror';
    var2['NoiseCancellationError'] = var1;
    var1 = 'voiceactivitydetectorerror';
    var2['VoiceActivityDetectorError'] = var1;
    var1 = 'interactionrequired';
    var2['InteractionRequired'] = var1;
    var1 = 'audio-permission';
    var2['AudioPermission'] = var1;
    var1 = 'video-permission';
    var2['VideoPermission'] = var1;
    var1 = 'stats';
    var2['Stats'] = var1;
    var1 = 'first-frame';
    var2['FirstFrame'] = var1;
    var1 = 'first-frame-stats';
    var2['FirstFrameStats'] = var1;
    var1 = 'first-frame-encrypted-stats';
    var2['FirstFrameEncryptedStats'] = var1;
    var1 = 'video-encoder-fallback';
    var2['VideoEncoderFallback'] = var1;
    var1 = 'remote-streams-ready';
    var2['RemoteStreamsReady'] = var1;
    var1 = 'mls-failure';
    var2['MLSFailure'] = var1;
    var1 = 'secure-frames-update';
    var2['SecureFramesUpdate'] = var1;
    var1 = 'sdp-error';
    var2['SdpError'] = var1;
    var1 = 'voice-filter-changed';
    var2['VoiceFilterChanged'] = var1;
    var1 = 'users-merged';
    var2['UsersMerged'] = var1;
    var4 = dependencyMap;
    var1 = 0;
    var5 = var4[var1];
    var4 = require;
    var1 = undefined;
    var6 = var4.bind(var1)(var5);
    var5 = var6.fileFinishedImporting;
    var4 = '../discord_common/js/packages/media-engine/BaseConnectionEvent.tsx';
    var4 = var5.bind(var6)(var4);
    var3['BaseConnectionEvent'] = var2;
    return var1;
})();