// discord_common/js/packages/media-engine/BaseConnectionEvent.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    zulu = argFred;
    entity = global;
    report = entity.Object;
    tango = report.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(report)(zulu, entity, mike);
    mike = {};
    entity = 'destroy';
    mike['Destroy'] = entity;
    entity = 'local-video-disabled';
    mike['LocalVideoDisabled'] = entity;
    entity = 'active-sinks-change';
    mike['ActiveSinksChange'] = entity;
    entity = 'experiment-flag';
    mike['ExperimentFlag'] = entity;
    entity = 'connectionstatechange';
    mike['ConnectionStateChange'] = entity;
    entity = 'error';
    mike['Error'] = entity;
    entity = 'connected';
    mike['Connected'] = entity;
    entity = 'videohook-start';
    mike['VideoHookStart'] = entity;
    entity = 'videohook-stop';
    mike['VideoHookStop'] = entity;
    entity = 'videohook-initialize';
    mike['VideoHookInitialize'] = entity;
    entity = 'screenshare-finish';
    mike['ScreenshareFinish'] = entity;
    entity = 'video-state';
    mike['VideoState'] = entity;
    entity = 'soundsharetrace';
    mike['SoundshareTrace'] = entity;
    entity = 'soundsharespeaking';
    mike['SoundshareSpeaking'] = entity;
    entity = 'soundshareattached';
    mike['SoundshareAttached'] = entity;
    entity = 'soundsharefailed';
    mike['SoundshareFailed'] = entity;
    entity = 'speaking';
    mike['Speaking'] = entity;
    entity = 'speakingwhilemuted';
    mike['SpeakingWhileMuted'] = entity;
    entity = 'mute';
    mike['Mute'] = entity;
    entity = 'toggle-mute';
    mike['ToggleMuteFromNative'] = entity;
    entity = 'native-mute-changed';
    mike['NativeMuteChanged'] = entity;
    entity = 'local-mute';
    mike['LocalMute'] = entity;
    entity = 'noiselevel';
    mike['NoiseLevel'] = entity;
    entity = 'video';
    mike['Video'] = entity;
    entity = 'ping';
    mike['Ping'] = entity;
    entity = 'pingtimeout';
    mike['PingTimeout'] = entity;
    entity = 'silence';
    mike['Silence'] = entity;
    entity = 'desktopsourceend';
    mike['DesktopSourceEnd'] = entity;
    entity = 'outboundlossrate';
    mike['OutboundLossRate'] = entity;
    entity = 'noisecancellererror';
    mike['NoiseCancellationError'] = entity;
    entity = 'voiceactivitydetectorerror';
    mike['VoiceActivityDetectorError'] = entity;
    entity = 'interactionrequired';
    mike['InteractionRequired'] = entity;
    entity = 'audio-permission';
    mike['AudioPermission'] = entity;
    entity = 'video-permission';
    mike['VideoPermission'] = entity;
    entity = 'stats';
    mike['Stats'] = entity;
    entity = 'first-frame';
    mike['FirstFrame'] = entity;
    entity = 'video-encoder-fallback';
    mike['VideoEncoderFallback'] = entity;
    entity = 'remote-streams-ready';
    mike['RemoteStreamsReady'] = entity;
    entity = 'mls-failure';
    mike['MLSFailure'] = entity;
    entity = 'secure-frames-update';
    mike['SecureFramesUpdate'] = entity;
    entity = 'sdp-error';
    mike['SdpError'] = entity;
    tango = argPlugh;
    entity = 0;
    report = tango[entity];
    tango = argBar;
    entity = undefined;
    oscar = tango.bind(entity)(report);
    report = oscar.fileFinishedImporting;
    tango = '../discord_common/js/packages/media-engine/BaseConnectionEvent.tsx';
    tango = report.bind(oscar)(tango);
    zulu['BaseConnectionEvent'] = mike;
    return entity;
})();