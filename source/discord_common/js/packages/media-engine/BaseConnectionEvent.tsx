// discord_common/js/packages/media-engine/BaseConnectionEvent.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    zuuluu = argFre;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    michal = {};
    entity = 'destroy';
    michal['Destroy'] = entity;
    entity = 'local-video-disabled';
    michal['LocalVideoDisabled'] = entity;
    entity = 'active-sinks-change';
    michal['ActiveSinksChange'] = entity;
    entity = 'experiment-flag';
    michal['ExperimentFlag'] = entity;
    entity = 'connectionstatechange';
    michal['ConnectionStateChange'] = entity;
    entity = 'error';
    michal['Error'] = entity;
    entity = 'connected';
    michal['Connected'] = entity;
    entity = 'videohook-start';
    michal['VideoHookStart'] = entity;
    entity = 'videohook-stop';
    michal['VideoHookStop'] = entity;
    entity = 'videohook-initialize';
    michal['VideoHookInitialize'] = entity;
    entity = 'screenshare-finish';
    michal['ScreenshareFinish'] = entity;
    entity = 'video-state';
    michal['VideoState'] = entity;
    entity = 'soundsharetrace';
    michal['SoundshareTrace'] = entity;
    entity = 'soundsharespeaking';
    michal['SoundshareSpeaking'] = entity;
    entity = 'soundshareattached';
    michal['SoundshareAttached'] = entity;
    entity = 'soundsharefailed';
    michal['SoundshareFailed'] = entity;
    entity = 'speaking';
    michal['Speaking'] = entity;
    entity = 'speakingwhilemuted';
    michal['SpeakingWhileMuted'] = entity;
    entity = 'mute';
    michal['Mute'] = entity;
    entity = 'toggle-mute';
    michal['ToggleMuteFromNative'] = entity;
    entity = 'native-mute-changed';
    michal['NativeMuteChanged'] = entity;
    entity = 'local-mute';
    michal['LocalMute'] = entity;
    entity = 'noiselevel';
    michal['NoiseLevel'] = entity;
    entity = 'video';
    michal['Video'] = entity;
    entity = 'ping';
    michal['Ping'] = entity;
    entity = 'pingtimeout';
    michal['PingTimeout'] = entity;
    entity = 'silence';
    michal['Silence'] = entity;
    entity = 'desktopsourceend';
    michal['DesktopSourceEnd'] = entity;
    entity = 'outboundlossrate';
    michal['OutboundLossRate'] = entity;
    entity = 'noisecancellererror';
    michal['NoiseCancellationError'] = entity;
    entity = 'voiceactivitydetectorerror';
    michal['VoiceActivityDetectorError'] = entity;
    entity = 'interactionrequired';
    michal['InteractionRequired'] = entity;
    entity = 'audio-permission';
    michal['AudioPermission'] = entity;
    entity = 'video-permission';
    michal['VideoPermission'] = entity;
    entity = 'stats';
    michal['Stats'] = entity;
    entity = 'first-frame';
    michal['FirstFrame'] = entity;
    entity = 'video-encoder-fallback';
    michal['VideoEncoderFallback'] = entity;
    entity = 'remote-streams-ready';
    michal['RemoteStreamsReady'] = entity;
    entity = 'mls-failure';
    michal['MLSFailure'] = entity;
    entity = 'secure-frames-update';
    michal['SecureFramesUpdate'] = entity;
    entity = 'sdp-error';
    michal['SdpError'] = entity;
    entity = 'voice-filter-changed';
    michal['VoiceFilterChanged'] = entity;
    tangon = argPlu;
    entity = 0;
    report = tangon[entity];
    tangon = argBar;
    entity = undefined;
    oscard = tangon.bind(entity)(report);
    report = oscard.fileFinishedImporting;
    tangon = '../discord_common/js/packages/media-engine/BaseConnectionEvent.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['BaseConnectionEvent'] = michal;
    return entity;
})();