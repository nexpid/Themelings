// discord_common/js/packages/media-engine/MediaEngineEvent.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var3 = exports;
    var1 = global;
    var5 = var1.Object;
    var4 = var5.defineProperty;
    var2 = {};
    var1 = true;
    var2['value'] = var1;
    var1 = '__esModule';
    var1 = var4.bind(var5)(var3, var1, var2);
    var2 = {};
    var1 = 'destroy';
    var2['Destroy'] = var1;
    var1 = 'silence';
    var2['Silence'] = var1;
    var1 = 'connection';
    var2['Connection'] = var1;
    var1 = 'devicechange';
    var2['DeviceChange'] = var1;
    var1 = 'volumechange';
    var2['VolumeChange'] = var1;
    var1 = 'voiceactivity';
    var2['VoiceActivity'] = var1;
    var1 = 'watchdogtimeout';
    var2['WatchdogTimeout'] = var1;
    var1 = 'audio-permission';
    var2['AudioPermission'] = var1;
    var1 = 'video-permission';
    var2['VideoPermission'] = var1;
    var1 = 'desktopsourceend';
    var2['DesktopSourceEnd'] = var1;
    var1 = 'connection-stats';
    var2['ConnectionStats'] = var1;
    var1 = 'video-input-initialized';
    var2['VideoInputInitialized'] = var1;
    var1 = 'audio-input-initialized';
    var2['AudioInputInitialized'] = var1;
    var1 = 'clips-recording-restart-needed';
    var2['ClipsRecordingRestartNeeded'] = var1;
    var1 = 'clips-init-failure';
    var2['ClipsInitFailure'] = var1;
    var1 = 'clips-recording-ended';
    var2['ClipsRecordingEnded'] = var1;
    var1 = 'native-screenshare-picker-updated';
    var2['NativeScreenSharePickerUpdate'] = var1;
    var1 = 'native-screenshare-picker-cancelled';
    var2['NativeScreenSharePickerCancel'] = var1;
    var1 = 'native-screenshare-picker-error';
    var2['NativeScreenSharePickerError'] = var1;
    var1 = 'audio-device-module-error';
    var2['AudioDeviceModuleError'] = var1;
    var1 = 'voice-filters-failed';
    var2['VoiceFiltersFailed'] = var1;
    var1 = 'video-codec-error';
    var2['VideoCodecError'] = var1;
    var1 = 'voice-queue-metrics';
    var2['VoiceQueueMetrics'] = var1;
    var1 = 'system-microphone-mode-change';
    var2['SystemMicrophoneModeChange'] = var1;
    var1 = 'selected-device-change';
    var2['SelectedDeviceChange'] = var1;
    var4 = dependencyMap;
    var1 = 0;
    var5 = var4[var1];
    var4 = require;
    var1 = undefined;
    var6 = var4.bind(var1)(var5);
    var5 = var6.fileFinishedImporting;
    var4 = '../discord_common/js/packages/media-engine/MediaEngineEvent.tsx';
    var4 = var5.bind(var6)(var4);
    var3['MediaEngineEvent'] = var2;
    return var1;
})();