// discord_common/js/packages/media-engine/MediaEngineEvent.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    zulu = argFred;
    entity = global;
    report = entity.Object;
    tango = report.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(report)(zulu, entity, mike);
    mike = {};
    entity = 'destroy';
    mike['Destroy'] = entity;
    entity = 'silence';
    mike['Silence'] = entity;
    entity = 'connection';
    mike['Connection'] = entity;
    entity = 'devicechange';
    mike['DeviceChange'] = entity;
    entity = 'volumechange';
    mike['VolumeChange'] = entity;
    entity = 'voiceactivity';
    mike['VoiceActivity'] = entity;
    entity = 'watchdogtimeout';
    mike['WatchdogTimeout'] = entity;
    entity = 'audio-permission';
    mike['AudioPermission'] = entity;
    entity = 'video-permission';
    mike['VideoPermission'] = entity;
    entity = 'desktopsourceend';
    mike['DesktopSourceEnd'] = entity;
    entity = 'connection-stats';
    mike['ConnectionStats'] = entity;
    entity = 'video-input-initialized';
    mike['VideoInputInitialized'] = entity;
    entity = 'audio-input-initialized';
    mike['AudioInputInitialized'] = entity;
    entity = 'clips-recording-restart-needed';
    mike['ClipsRecordingRestartNeeded'] = entity;
    entity = 'clips-init-failure';
    mike['ClipsInitFailure'] = entity;
    entity = 'clips-recording-ended';
    mike['ClipsRecordingEnded'] = entity;
    entity = 'native-screenshare-picker-updated';
    mike['NativeScreenSharePickerUpdate'] = entity;
    entity = 'native-screenshare-picker-cancelled';
    mike['NativeScreenSharePickerCancel'] = entity;
    entity = 'native-screenshare-picker-error';
    mike['NativeScreenSharePickerError'] = entity;
    entity = 'audio-device-module-error';
    mike['AudioDeviceModuleError'] = entity;
    tango = argPlugh;
    entity = 0;
    report = tango[entity];
    tango = argBar;
    entity = undefined;
    oscar = tango.bind(entity)(report);
    report = oscar.fileFinishedImporting;
    tango = '../discord_common/js/packages/media-engine/MediaEngineEvent.tsx';
    tango = report.bind(oscar)(tango);
    zulu['MediaEngineEvent'] = mike;
    return entity;
})();