// discord_common/js/packages/id-generator/IdGenerator.tsx
export default (function(native1, native2, native3, native4, native5, native6, native7) {
    var5 = native2;
    var7 = native3;
    var3 = native6;
    var6 = native7;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var7;
    var _closure1_slot2 = var6;
    var1 = function getLowBits(arg1) {
        var3 = arg1;
        var2 = var3.mod;
        var1 = 4294967296.0;
        var2 = var2.bind(var3)(var1);
        var1 = var2.toJSNumber;
        var1 = var1.bind(var2)();
        var1 = var1 | 0;
        return var1;
    };
    var _closure1_slot5 = var1;
    var1 = function getHighBits(arg1) {
        var3 = arg1;
        var2 = var3.shiftRight;
        var1 = 32;
        var2 = var2.bind(var3)(var1);
        var1 = var2.toJSNumber;
        var1 = var1.bind(var2)();
        var1 = var1 | 0;
        return var1;
    };
    var _closure1_slot6 = var1;
    var1 = global;
    var9 = var1.Object;
    var8 = var9.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var8.bind(var9)(var3, var1, var4);
    var1 = 0;
    var4 = var6[var1];
    var1 = undefined;
    var4 = var7.bind(var1)(var4);
    var _closure1_slot3 = var4;
    var4 = 1;
    var4 = var6[var4];
    var4 = var7.bind(var1)(var4);
    var _closure1_slot4 = var4;
    var2 = function() {
        var4 = _closure1_slot4;
        var3 = function IdGenerator() {
            var3 = this;
            var5 = _closure1_slot3;
            var2 = _closure2_slot0;
            var1 = undefined;
            var2 = var5.bind(var1)(var3, var2);
            var2 = global;
            var7 = var2.Math;
            var6 = var7.floor;
            var8 = var2.Math;
            var5 = var8.random;
            var8 = var5.bind(var8)();
            var5 = 4294967296.0;
            var5 = var5 * var8;
            var5 = var6.bind(var7)(var5);
            var5 = var5 | 0;
            var3['_randomPrefix'] = var5;
            var5 = _closure1_slot1;
            var6 = _closure1_slot2;
            var4 = 2;
            var4 = var6[var4];
            var4 = var5.bind(var1)(var4);
            var5 = var2.Date;
            var2 = var5.now;
            var2 = var2.bind(var5)();
            var2 = var4.bind(var1)(var2);
            var3['_creationTime'] = var2;
            var2 = 0;
            var3['_sequenceNumber'] = var2;
            return var1;
        };
        var _closure2_slot0 = var3;
        var1 = {};
        var5 = 'generate';
        var1['key'] = var5;
        var2 = function value(arg1) {
            var1 = this;
            var4 = _closure1_slot1;
            var8 = _closure1_slot2;
            var3 = 2;
            var3 = var8[var3];
            var7 = undefined;
            var4 = var4.bind(var7)(var3);
            var3 = arg1;
            var6 = var4.bind(var7)(var3);
            var3 = var1._sequenceNumber;
            var3 = parseFloat(var3);
            var4 = var3 + 1;
            var1['_sequenceNumber'] = var4;
            var5 = var3 | 0;
            var4 = _closure1_slot0;
            var3 = 3;
            var3 = var8[var3];
            var3 = var4.bind(var7)(var3);
            var8 = var3.Buffer;
            var3 = var8.prototype;
            var4 = Object.create(var3, {constructor: {value: var8}});
            var14 = 24;
            var15 = var4;
            var3 = new var15[var8](var14, var13);
            var3 = var3 instanceof Object ? var3 : var4;
            var11 = var3.writeInt32LE;
            var8 = _closure1_slot5;
            var10 = var8.bind(var7)(var6);
            var9 = 0;
            var4 = true;
            var9 = var11.bind(var3)(var10, var9, var4);
            var10 = var3.writeInt32LE;
            var2 = _closure1_slot6;
            var9 = var2.bind(var7)(var6);
            var6 = 4;
            var6 = var10.bind(var3)(var9, var6, var4);
            var10 = var3.writeInt32LE;
            var9 = var1._randomPrefix;
            var6 = 8;
            var6 = var10.bind(var3)(var9, var6, var4);
            var9 = var3.writeInt32LE;
            var6 = var1._creationTime;
            var8 = var8.bind(var7)(var6);
            var6 = 12;
            var6 = var9.bind(var3)(var8, var6, var4);
            var6 = var3.writeInt32LE;
            var1 = var1._creationTime;
            var2 = var2.bind(var7)(var1);
            var1 = 16;
            var1 = var6.bind(var3)(var2, var1, var4);
            var2 = var3.writeInt32LE;
            var1 = 20;
            var1 = var2.bind(var3)(var5, var1, var4);
            var2 = var3.toString;
            var1 = 'base64';
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var1['value'] = var2;
        var2 = new Array(1);
        var2[0] = var1;
        var1 = undefined;
        var1 = var4.bind(var1)(var3, var2);
        return var1;
    };
    var2 = var2.bind(var1)();
    var4 = 4;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = '../discord_common/js/packages/id-generator/IdGenerator.tsx';
    var4 = var5.bind(var6)(var4);
    var3['IdGenerator'] = var2;
    return var1;
})();