// discord_common/js/packages/id-generator/IdGenerator.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: getLowBits
        zuuluu = argFoo;
        michal = zuuluu.mod;
        entity = 4294967296.0;
        michal = michal.bind(zuuluu)(entity);
        entity = michal.toJSNumber;
        entity = entity.bind(michal)();
        entity = entity | 0;
        return entity;
    };
    var _closure1_slot5 = entity;
    entity = function(argFoo) { // Original name: getHighBits
        zuuluu = argFoo;
        michal = zuuluu.shiftRight;
        entity = 32;
        michal = michal.bind(zuuluu)(entity);
        entity = michal.toJSNumber;
        entity = entity.bind(michal)();
        entity = entity | 0;
        return entity;
    };
    var _closure1_slot6 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    michal = function() {
        tangon = _closure1_slot4;
        zuuluu = function() { // Original name: IdGenerator
            zuuluu = this;
            report = _closure1_slot3;
            michal = _closure2_slot0;
            entity = undefined;
            michal = report.bind(entity)(zuuluu, michal);
            michal = global;
            golfie = michal.Math;
            oscard = golfie.floor;
            option = michal.Math;
            report = option.random;
            option = report.bind(option)();
            report = 4294967296.0;
            report = report * option;
            report = oscard.bind(golfie)(report);
            report = report | 0;
            zuuluu['_randomPrefix'] = report;
            report = _closure1_slot1;
            oscard = _closure1_slot2;
            tangon = 2;
            tangon = oscard[tangon];
            tangon = report.bind(entity)(tangon);
            report = michal.Date;
            michal = report.now;
            michal = michal.bind(report)();
            michal = tangon.bind(entity)(michal);
            zuuluu['_creationTime'] = michal;
            michal = 0;
            zuuluu['_sequenceNumber'] = michal;
            return entity;
        };
        var _closure2_slot0 = zuuluu;
        entity = {};
        report = 'generate';
        entity['key'] = report;
        michal = function(argFoo) { // Original name: value
            entity = this;
            tangon = _closure1_slot1;
            option = _closure1_slot2;
            zuuluu = 2;
            zuuluu = option[zuuluu];
            golfie = undefined;
            tangon = tangon.bind(golfie)(zuuluu);
            zuuluu = argFoo;
            oscard = tangon.bind(golfie)(zuuluu);
            zuuluu = entity._sequenceNumber;
            zuuluu = parseFloat(zuuluu);
            tangon = zuuluu + 1;
            entity['_sequenceNumber'] = tangon;
            report = zuuluu | 0;
            tangon = _closure1_slot0;
            zuuluu = 3;
            zuuluu = option[zuuluu];
            zuuluu = tangon.bind(golfie)(zuuluu);
            option = zuuluu.Buffer;
            zuuluu = option.prototype;
            tangon = Object.create(zuuluu, {constructor: {value: option}});
            backup = 24;
            kiloes = tangon;
            zuuluu = new kiloes[option](backup, foxtra);
            zuuluu = zuuluu instanceof Object ? zuuluu : tangon;
            yankee = zuuluu.writeInt32LE;
            option = _closure1_slot5;
            offset = option.bind(golfie)(oscard);
            verify = 0;
            tangon = true;
            verify = yankee.bind(zuuluu)(offset, verify, tangon);
            offset = zuuluu.writeInt32LE;
            michal = _closure1_slot6;
            verify = michal.bind(golfie)(oscard);
            oscard = 4;
            oscard = offset.bind(zuuluu)(verify, oscard, tangon);
            offset = zuuluu.writeInt32LE;
            verify = entity._randomPrefix;
            oscard = 8;
            oscard = offset.bind(zuuluu)(verify, oscard, tangon);
            verify = zuuluu.writeInt32LE;
            oscard = entity._creationTime;
            option = option.bind(golfie)(oscard);
            oscard = 12;
            oscard = verify.bind(zuuluu)(option, oscard, tangon);
            oscard = zuuluu.writeInt32LE;
            entity = entity._creationTime;
            michal = michal.bind(golfie)(entity);
            entity = 16;
            entity = oscard.bind(zuuluu)(michal, entity, tangon);
            michal = zuuluu.writeInt32LE;
            entity = 20;
            entity = michal.bind(zuuluu)(report, entity, tangon);
            michal = zuuluu.toString;
            entity = 'base64';
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        entity['value'] = michal;
        michal = new Array(1);
        michal[0] = entity;
        entity = undefined;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    michal = michal.bind(entity)();
    tangon = 4;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = '../discord_common/js/packages/id-generator/IdGenerator.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['IdGenerator'] = michal;
    return entity;
})();