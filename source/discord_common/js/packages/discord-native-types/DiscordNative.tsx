// discord_common/js/packages/discord-native-types/DiscordNative.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    zuuluu = argFre;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    report = {};
    oscard = 0;
    report['HasRTCConnection'] = oscard;
    entity = 'HasRTCConnection';
    report[oscard] = entity;
    golfie = 1;
    report['IsSendingVideo'] = golfie;
    entity = 'IsSendingVideo';
    report[golfie] = entity;
    michal = 2;
    report['IsSendingStream'] = michal;
    entity = 'IsSendingStream';
    report[michal] = entity;
    tangon = 3;
    report['IsReceivingVideo'] = tangon;
    entity = 'IsReceivingVideo';
    report[tangon] = entity;
    tangon = 4;
    report['IsReceivingStream'] = tangon;
    entity = 'IsReceivingStream';
    report[tangon] = entity;
    tangon = 5;
    report['VideoMediaSessionId'] = tangon;
    entity = 'VideoMediaSessionId';
    report[tangon] = entity;
    tangon = 6;
    report['StreamMediaSessionId'] = tangon;
    entity = 'StreamMediaSessionId';
    report[tangon] = entity;
    tangon = {};
    tangon['RendererProcessDelayed'] = oscard;
    entity = 'RendererProcessDelayed';
    tangon[oscard] = entity;
    tangon['RendererProcess'] = golfie;
    entity = 'RendererProcess';
    tangon[golfie] = entity;
    tangon['MainProcess'] = michal;
    entity = 'MainProcess';
    tangon[michal] = entity;
    michal = {};
    entity = 'window';
    michal['WINDOW'] = entity;
    entity = 'screen';
    michal['SCREEN'] = entity;
    entity = 'camera';
    michal['CAMERA'] = entity;
    entity = argPlu;
    golfie = entity[oscard];
    oscard = argBar;
    entity = undefined;
    option = oscard.bind(entity)(golfie);
    golfie = option.fileFinishedImporting;
    oscard = '../discord_common/js/packages/discord-native-types/DiscordNative.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['StoredCrashInformation'] = report;
    zuuluu['JSExceptionLocation'] = tangon;
    zuuluu['DesktopSources'] = michal;
    return entity;
})();