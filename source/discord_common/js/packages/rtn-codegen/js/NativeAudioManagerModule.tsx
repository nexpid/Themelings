// discord_common/js/packages/rtn-codegen/js/NativeAudioManagerModule.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    golf = argBar;
    zulu = argFred;
    options = argPlugh;
    entity = global;
    oscar = entity.Object;
    report = oscar.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscar)(zulu, entity, tango);
    entity = 0;
    tango = options[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    verify = tango.TurboModuleRegistry;
    tango = {};
    report = 'SPEAKERPHONE';
    tango['SPEAKERPHONE'] = report;
    report = 'WIRED_HEADSET';
    tango['WIRED_HEADSET'] = report;
    report = 'EARPIECE';
    tango['EARPIECE'] = report;
    report = 'BLUETOOTH_HEADSET';
    tango['BLUETOOTH_HEADSET'] = report;
    report = 'INVALID';
    tango['INVALID'] = report;
    var _closure1_slot0 = tango;
    oscar = verify.getEnforcing;
    report = 'NativeAudioManagerModule';
    report = oscar.bind(verify)(report);
    oscar = 1;
    oscar = options[oscar];
    options = golf.bind(entity)(oscar);
    golf = options.fileFinishedImporting;
    oscar = '../discord_common/js/packages/rtn-codegen/js/NativeAudioManagerModule.tsx';
    oscar = golf.bind(options)(oscar);
    zulu['default'] = report;
    zulu['AudioDeviceType'] = tango;
    mike = function() { // Original name: getInvalidAndroidDevice
        entity = {'deviceType': 0, 'simpleDeviceType': null, 'deviceId': 4294967295, 'deviceName': 'Invalid'};
        mike = _closure1_slot0;
        mike = mike.INVALID;
        entity['simpleDeviceType'] = mike;
        return entity;
    };
    zulu['getInvalidAndroidDevice'] = mike;
    return entity;
})();