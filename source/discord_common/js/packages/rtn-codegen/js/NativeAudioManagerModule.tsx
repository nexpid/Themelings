// discord_common/js/packages/rtn-codegen/js/NativeAudioManagerModule.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    golfie = argBar;
    zuuluu = argFre;
    option = argPlu;
    entity = global;
    oscard = entity.Object;
    report = oscard.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscard)(zuuluu, entity, tangon);
    entity = 0;
    tangon = option[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    verify = tangon.TurboModuleRegistry;
    tangon = {};
    report = 'SPEAKERPHONE';
    tangon['SPEAKERPHONE'] = report;
    report = 'WIRED_HEADSET';
    tangon['WIRED_HEADSET'] = report;
    report = 'EARPIECE';
    tangon['EARPIECE'] = report;
    report = 'BLUETOOTH_HEADSET';
    tangon['BLUETOOTH_HEADSET'] = report;
    report = 'INVALID';
    tangon['INVALID'] = report;
    var _closure1_slot0 = tangon;
    oscard = verify.getEnforcing;
    report = 'NativeAudioManagerModule';
    report = oscard.bind(verify)(report);
    oscard = 1;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = '../discord_common/js/packages/rtn-codegen/js/NativeAudioManagerModule.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['default'] = report;
    zuuluu['AudioDeviceType'] = tangon;
    michal = function() { // Original name: getInvalidAndroidDevice
        entity = {'deviceType': 0, 'simpleDeviceType': null, 'deviceId': 4294967295, 'deviceName': 'Invalid'};
        michal = _closure1_slot0;
        michal = michal.INVALID;
        entity['simpleDeviceType'] = michal;
        return entity;
    };
    zuuluu['getInvalidAndroidDevice'] = michal;
    return entity;
})();