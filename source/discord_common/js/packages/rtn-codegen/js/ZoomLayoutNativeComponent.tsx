// discord_common/js/packages/rtn-codegen/js/ZoomLayoutNativeComponent.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    golfie = argBar;
    zuuluu = argFre;
    option = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = option;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    romeon = true;
    michal['value'] = romeon;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    tangon = {};
    offset = 'DCDZoomLayoutAndroid';
    tangon['uiViewClassName'] = offset;
    entity = {};
    michal = {};
    report = 'onZoomChanged';
    michal['registrationName'] = report;
    entity['topZoomChanged'] = michal;
    tangon['directEventTypes'] = entity;
    michal = {'gestureEnabled': true, 'minimumZoomScale': true, 'maximumZoomScale': true};
    entity = 0;
    report = option[entity];
    entity = undefined;
    yankee = golfie.bind(entity)(report);
    verify = yankee.ConditionallyIgnoredEventHandlers;
    report = {};
    report['onZoomChanged'] = romeon;
    backup = verify.bind(yankee)(report);
    kiloes = michal;
    report = copyDataProperties(kiloes, backup);
    tangon['validAttributes'] = michal;
    var _closure1_slot2 = tangon;
    michal = 1;
    michal = option[michal];
    verify = golfie.bind(entity)(michal);
    report = verify.get;
    michal = function() {
        entity = _closure1_slot2;
        return entity;
    };
    report = report.bind(verify)(offset, michal);
    michal = {};
    verify = function(argFoo, argBar, argBaz) { // Original name: zoomTo
        zuuluu = _closure1_slot0;
        michal = _closure1_slot1;
        entity = 2;
        michal = michal[entity];
        entity = undefined;
        oscard = zuuluu.bind(entity)(michal);
        report = oscard.dispatchCommand;
        tangon = new Array(2);
        michal = argBar;
        tangon[0] = michal;
        michal = argBaz;
        tangon[1] = michal;
        zuuluu = argFoo;
        michal = 'zoomTo';
        michal = report.bind(oscard)(zuuluu, michal, tangon);
        return entity;
    };
    michal['zoomTo'] = verify;
    oscard = function(argFoo) { // Original name: unzoom
        zuuluu = _closure1_slot0;
        michal = _closure1_slot1;
        entity = 2;
        michal = michal[entity];
        entity = undefined;
        oscard = zuuluu.bind(entity)(michal);
        report = oscard.dispatchCommand;
        tangon = argFoo;
        zuuluu = 'unzoom';
        michal = new Array(0);
        michal = report.bind(oscard)(tangon, zuuluu, michal);
        return entity;
    };
    michal['unzoom'] = oscard;
    oscard = 3;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = '../discord_common/js/packages/rtn-codegen/js/ZoomLayoutNativeComponent.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['default'] = report;
    zuuluu['__INTERNAL_VIEW_CONFIG'] = tangon;
    zuuluu['Commands'] = michal;
    return entity;
})();