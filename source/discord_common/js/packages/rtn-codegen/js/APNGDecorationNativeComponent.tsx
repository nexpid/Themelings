// discord_common/js/packages/rtn-codegen/js/APNGDecorationNativeComponent.tsx
export default (function(argFoo, argBar, _, __, ___, argFred, argPlugh) {
    golf = argBar;
    zulu = argFred;
    options = argPlugh;
    var _closure1_slot0 = golf;
    var _closure1_slot1 = options;
    entity = global;
    report = entity.Object;
    tango = report.defineProperty;
    mike = {};
    romeo = true;
    mike['value'] = romeo;
    entity = '__esModule';
    entity = tango.bind(report)(zulu, entity, mike);
    tango = {};
    offset = 'APNGDecorationView';
    tango['uiViewClassName'] = offset;
    entity = {};
    mike = {};
    report = 'onLoad';
    mike['registrationName'] = report;
    entity['topLoad'] = mike;
    tango['directEventTypes'] = entity;
    mike = {'url': true, 'autoplay': true};
    entity = 0;
    report = options[entity];
    entity = undefined;
    yankee = golf.bind(entity)(report);
    verify = yankee.ConditionallyIgnoredEventHandlers;
    report = {};
    report['onLoad'] = romeo;
    backup = verify.bind(yankee)(report);
    kilo = mike;
    report = copyDataProperties(kilo, backup);
    tango['validAttributes'] = mike;
    var _closure1_slot2 = tango;
    mike = 1;
    mike = options[mike];
    verify = golf.bind(entity)(mike);
    report = verify.get;
    mike = function() {
        entity = _closure1_slot2;
        return entity;
    };
    report = report.bind(verify)(offset, mike);
    mike = {};
    verify = function(argFoo) { // Original name: play
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 2;
        mike = mike[entity];
        entity = undefined;
        oscar = zulu.bind(entity)(mike);
        report = oscar.dispatchCommand;
        tango = argFoo;
        zulu = 'play';
        mike = new Array(0);
        mike = report.bind(oscar)(tango, zulu, mike);
        return entity;
    };
    mike['play'] = verify;
    verify = function(argFoo) { // Original name: pause
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 2;
        mike = mike[entity];
        entity = undefined;
        oscar = zulu.bind(entity)(mike);
        report = oscar.dispatchCommand;
        tango = argFoo;
        zulu = 'pause';
        mike = new Array(0);
        mike = report.bind(oscar)(tango, zulu, mike);
        return entity;
    };
    mike['pause'] = verify;
    oscar = function(argFoo, argBar) { // Original name: seek
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 2;
        mike = mike[entity];
        entity = undefined;
        oscar = zulu.bind(entity)(mike);
        report = oscar.dispatchCommand;
        tango = new Array(1);
        mike = argBar;
        tango[0] = mike;
        zulu = argFoo;
        mike = 'seek';
        mike = report.bind(oscar)(zulu, mike, tango);
        return entity;
    };
    mike['seek'] = oscar;
    oscar = 3;
    oscar = options[oscar];
    options = golf.bind(entity)(oscar);
    golf = options.fileFinishedImporting;
    oscar = '../discord_common/js/packages/rtn-codegen/js/APNGDecorationNativeComponent.tsx';
    oscar = golf.bind(options)(oscar);
    zulu['default'] = report;
    zulu['__INTERNAL_VIEW_CONFIG'] = tango;
    zulu['Commands'] = mike;
    return entity;
})();