// discord_common/js/shared/shared-constants/ConsoleHandoffType.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    zulu = argFred;
    entity = global;
    oscar = entity.Object;
    report = oscar.defineProperty;
    tango = {};
    mike = true;
    tango['value'] = mike;
    mike = '__esModule';
    mike = report.bind(oscar)(zulu, mike, tango);
    tango = {};
    mike = 'TRANSFER_EXISTING_CALL';
    tango['TRANSFER_EXISTING_CALL'] = mike;
    mike = 'CREATE_NEW_CALL';
    tango['CREATE_NEW_CALL'] = mike;
    mike = {};
    oscar = entity.Set;
    entity = oscar.prototype;
    report = Object.create(entity, {constructor: {value: oscar}});
    offset = ['CREATE_NEW_CALL', 'TRANSFER_EXISTING_CALL'];
    yankee = report;
    entity = new yankee[oscar](offset, verify);
    entity = entity instanceof Object ? entity : report;
    mike['ALL'] = entity;
    report = argPlugh;
    entity = 0;
    oscar = report[entity];
    report = argBar;
    entity = undefined;
    golf = report.bind(entity)(oscar);
    oscar = golf.fileFinishedImporting;
    report = '../discord_common/js/shared/shared-constants/ConsoleHandoffType.tsx';
    report = oscar.bind(golf)(report);
    zulu['ConsoleHandoffType'] = tango;
    zulu['ConsoleHandoffTypeSets'] = mike;
    return entity;
})();