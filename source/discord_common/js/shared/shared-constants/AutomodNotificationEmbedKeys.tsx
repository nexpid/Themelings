// discord_common/js/shared/shared-constants/AutomodNotificationEmbedKeys.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    zuuluu = argFre;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    michal = {};
    entity = 'join_attempts';
    michal['JOIN_ATTEMPTS'] = entity;
    entity = 'raid_datetime';
    michal['RAID_DATETIME'] = entity;
    entity = 'dms_sent';
    michal['DMS_SENT'] = entity;
    entity = 'raid_type';
    michal['RAID_TYPE'] = entity;
    entity = 'resolved_reason';
    michal['RESOLVED_REASON'] = entity;
    entity = 'notification_type';
    michal['NOTIFICATION_TYPE'] = entity;
    entity = 'action_by_user_id';
    michal['ACTION_BY_USER_ID'] = entity;
    entity = 'decision_id';
    michal['DECISION_ID'] = entity;
    entity = 'suspicious_mention_activity_until';
    michal['SUSPICIOUS_MENTION_ACTIVITY_UNTIL'] = entity;
    tangon = argPlu;
    entity = 0;
    report = tangon[entity];
    tangon = argBar;
    entity = undefined;
    oscard = tangon.bind(entity)(report);
    report = oscard.fileFinishedImporting;
    tangon = '../discord_common/js/shared/shared-constants/AutomodNotificationEmbedKeys.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['AutomodNotificationEmbedKeys'] = michal;
    return entity;
})();