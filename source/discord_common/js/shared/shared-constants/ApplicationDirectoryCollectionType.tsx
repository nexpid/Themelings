// discord_common/js/shared/shared-constants/ApplicationDirectoryCollectionType.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    zulu = argFred;
    entity = global;
    oscar = entity.Object;
    report = oscar.defineProperty;
    tango = {};
    mike = true;
    tango['value'] = mike;
    mike = '__esModule';
    mike = report.bind(oscar)(zulu, mike, tango);
    tango = {};
    report = 1;
    tango['LIST'] = report;
    mike = 'LIST';
    tango[report] = mike;
    report = 2;
    tango['LIST_WITH_IMAGE'] = report;
    mike = 'LIST_WITH_IMAGE';
    tango[report] = mike;
    report = 3;
    tango['GALLERY'] = report;
    mike = 'GALLERY';
    tango[report] = mike;
    report = 4;
    tango['EXPANDABLE_LIST'] = report;
    mike = 'EXPANDABLE_LIST';
    tango[report] = mike;
    report = 5;
    tango['BANNER_CARDS'] = report;
    mike = 'BANNER_CARDS';
    tango[report] = mike;
    report = 6;
    tango['SMALL_BANNER_CARDS'] = report;
    mike = 'SMALL_BANNER_CARDS';
    tango[report] = mike;
    report = 7;
    tango['BANNER_IMAGE'] = report;
    mike = 'BANNER_IMAGE';
    tango[report] = mike;
    mike = {};
    golf = entity.Set;
    report = golf.prototype;
    oscar = Object.create(report, {constructor: {value: golf}});
    offset = [1, 2, 3, 4, 5, 6, 7];
    yankee = oscar;
    report = new yankee[golf](offset, verify);
    report = report instanceof Object ? report : oscar;
    mike['ALL'] = report;
    golf = entity.Set;
    report = golf.prototype;
    oscar = Object.create(report, {constructor: {value: golf}});
    offset = [1, 2, 3];
    yankee = oscar;
    report = new yankee[golf](offset, verify);
    report = report instanceof Object ? report : oscar;
    mike['APPLICATION_DIRECTORY'] = report;
    golf = entity.Set;
    report = golf.prototype;
    oscar = Object.create(report, {constructor: {value: golf}});
    offset = [4, 5, 6];
    yankee = oscar;
    report = new yankee[golf](offset, verify);
    report = report instanceof Object ? report : oscar;
    mike['APP_LAUNCHER_IN_TEXT'] = report;
    oscar = entity.Set;
    entity = oscar.prototype;
    report = Object.create(entity, {constructor: {value: oscar}});
    offset = [7];
    yankee = report;
    entity = new yankee[oscar](offset, verify);
    entity = entity instanceof Object ? entity : report;
    mike['APP_LAUNCHER_IN_VOICE_BANNER'] = entity;
    report = argPlugh;
    entity = 0;
    oscar = report[entity];
    report = argBar;
    entity = undefined;
    golf = report.bind(entity)(oscar);
    oscar = golf.fileFinishedImporting;
    report = '../discord_common/js/shared/shared-constants/ApplicationDirectoryCollectionType.tsx';
    report = oscar.bind(golf)(report);
    zulu['ApplicationDirectoryCollectionType'] = tango;
    zulu['ApplicationDirectoryCollectionTypeSets'] = mike;
    return entity;
})();