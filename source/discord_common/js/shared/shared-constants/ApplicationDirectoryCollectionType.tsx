// discord_common/js/shared/shared-constants/ApplicationDirectoryCollectionType.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    zuuluu = argFre;
    entity = global;
    oscard = entity.Object;
    report = oscard.defineProperty;
    tangon = {};
    michal = true;
    tangon['value'] = michal;
    michal = '__esModule';
    michal = report.bind(oscard)(zuuluu, michal, tangon);
    tangon = {};
    report = 1;
    tangon['LIST'] = report;
    michal = 'LIST';
    tangon[report] = michal;
    report = 2;
    tangon['LIST_WITH_IMAGE'] = report;
    michal = 'LIST_WITH_IMAGE';
    tangon[report] = michal;
    report = 3;
    tangon['GALLERY'] = report;
    michal = 'GALLERY';
    tangon[report] = michal;
    report = 4;
    tangon['EXPANDABLE_LIST'] = report;
    michal = 'EXPANDABLE_LIST';
    tangon[report] = michal;
    report = 5;
    tangon['BANNER_CARDS'] = report;
    michal = 'BANNER_CARDS';
    tangon[report] = michal;
    report = 6;
    tangon['SMALL_BANNER_CARDS'] = report;
    michal = 'SMALL_BANNER_CARDS';
    tangon[report] = michal;
    report = 7;
    tangon['BANNER_IMAGE'] = report;
    michal = 'BANNER_IMAGE';
    tangon[report] = michal;
    michal = {};
    golfie = entity.Set;
    report = golfie.prototype;
    oscard = Object.create(report, {constructor: {value: golfie}});
    offset = [1, 2, 3, 4, 5, 6, 7];
    yankee = oscard;
    report = new yankee[golfie](offset, verify);
    report = report instanceof Object ? report : oscard;
    michal['ALL'] = report;
    golfie = entity.Set;
    report = golfie.prototype;
    oscard = Object.create(report, {constructor: {value: golfie}});
    offset = [1, 2, 3];
    yankee = oscard;
    report = new yankee[golfie](offset, verify);
    report = report instanceof Object ? report : oscard;
    michal['APPLICATION_DIRECTORY'] = report;
    golfie = entity.Set;
    report = golfie.prototype;
    oscard = Object.create(report, {constructor: {value: golfie}});
    offset = [4, 5, 6];
    yankee = oscard;
    report = new yankee[golfie](offset, verify);
    report = report instanceof Object ? report : oscard;
    michal['APP_LAUNCHER_IN_TEXT'] = report;
    oscard = entity.Set;
    entity = oscard.prototype;
    report = Object.create(entity, {constructor: {value: oscard}});
    offset = [7];
    yankee = report;
    entity = new yankee[oscard](offset, verify);
    entity = entity instanceof Object ? entity : report;
    michal['APP_LAUNCHER_IN_VOICE_BANNER'] = entity;
    report = argPlu;
    entity = 0;
    oscard = report[entity];
    report = argBar;
    entity = undefined;
    golfie = report.bind(entity)(oscard);
    oscard = golfie.fileFinishedImporting;
    report = '../discord_common/js/shared/shared-constants/ApplicationDirectoryCollectionType.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['ApplicationDirectoryCollectionType'] = tangon;
    zuuluu['ApplicationDirectoryCollectionTypeSets'] = michal;
    return entity;
})();