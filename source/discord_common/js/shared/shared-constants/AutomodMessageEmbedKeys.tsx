// discord_common/js/shared/shared-constants/AutomodMessageEmbedKeys.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    zuuluu = argFre;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    michal = {};
    entity = 'rule_name';
    michal['RULE_NAME'] = entity;
    entity = 'channel_id';
    michal['CHANNEL_ID'] = entity;
    entity = 'decision_id';
    michal['DECISION_ID'] = entity;
    entity = 'keyword';
    michal['KEYWORD'] = entity;
    entity = 'keyword_matched_content';
    michal['KEYWORD_MATCHED_CONTENT'] = entity;
    entity = 'flagged_message_id';
    michal['FLAGGED_MESSAGE_ID'] = entity;
    entity = 'timeout_duration';
    michal['TIMEOUT_DURATION'] = entity;
    entity = 'quarantine_user';
    michal['QUARANTINE_USER'] = entity;
    entity = 'quarantine_user_action';
    michal['QUARANTINE_USER_ACTION'] = entity;
    entity = 'decision_reason';
    michal['DECISION_REASON'] = entity;
    entity = 'alert_actions_execution';
    michal['ALERT_ACTIONS_EXECUTION'] = entity;
    entity = 'quarantine_event';
    michal['QUARANTINE_EVENT'] = entity;
    entity = 'block_profile_update_type';
    michal['BLOCK_PROFILE_UPDATE_TYPE'] = entity;
    entity = 'voice_channel_status_outcome';
    michal['VOICE_CHANNEL_STATUS_OUTCOME'] = entity;
    entity = 'application_name';
    michal['APPLICATION_NAME'] = entity;
    entity = 'interaction_user_id';
    michal['INTERACTION_USER_ID'] = entity;
    entity = 'interaction_callback_type';
    michal['INTERACTION_CALLBACK_TYPE'] = entity;
    entity = 'decision_outcome';
    michal['DECISION_OUTCOME'] = entity;
    tangon = argPlu;
    entity = 0;
    report = tangon[entity];
    tangon = argBar;
    entity = undefined;
    oscard = tangon.bind(entity)(report);
    report = oscard.fileFinishedImporting;
    tangon = '../discord_common/js/shared/shared-constants/AutomodMessageEmbedKeys.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['AutomodMessageEmbedKeys'] = michal;
    return entity;
})();