// discord_common/js/shared/shared-constants/AppCrashedReasons.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    zulu = argFred;
    entity = global;
    oscar = entity.Object;
    report = oscar.defineProperty;
    tango = {};
    mike = true;
    tango['value'] = mike;
    mike = '__esModule';
    mike = report.bind(oscar)(zulu, mike, tango);
    tango = {};
    mike = 'unhandled_native_error';
    tango['UNHANDLED_NATIVE_ERROR'] = mike;
    mike = 'unhandled_js_error';
    tango['UNHANDLED_JS_ERROR'] = mike;
    mike = 'socket_crashed';
    tango['SOCKET_CRASHED'] = mike;
    mike = {};
    oscar = entity.Set;
    entity = oscar.prototype;
    report = Object.create(entity, {constructor: {value: oscar}});
    offset = ['socket_crashed', 'unhandled_js_error', 'unhandled_native_error'];
    yankee = report;
    entity = new yankee[oscar](offset, verify);
    entity = entity instanceof Object ? entity : report;
    mike['ALL'] = entity;
    report = argPlugh;
    entity = 0;
    oscar = report[entity];
    report = argBar;
    entity = undefined;
    golf = report.bind(entity)(oscar);
    oscar = golf.fileFinishedImporting;
    report = '../discord_common/js/shared/shared-constants/AppCrashedReasons.tsx';
    report = oscar.bind(golf)(report);
    zulu['AppCrashedReasons'] = tango;
    zulu['AppCrashedReasonsSets'] = mike;
    return entity;
})();