// discord_common/js/shared/constants/web/AvatarConstants.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var3 = exports;
    var4 = function getAvatarSpecs(arg1) {
        var2 = _closure1_slot0;
        var1 = arg1;
        var1 = var2[var1];
        return var1;
    };
    var _closure1_slot1 = var4;
    var11 = global;
    var7 = var11.Object;
    var6 = var7.defineProperty;
    var5 = {};
    var1 = true;
    var5['value'] = var1;
    var1 = '__esModule';
    var1 = var6.bind(var7)(var3, var1, var5);
    var8 = {};
    var1 = 'SIZE_16';
    var8['SIZE_16'] = var1;
    var1 = 'SIZE_20';
    var8['SIZE_20'] = var1;
    var1 = 'SIZE_24';
    var8['SIZE_24'] = var1;
    var1 = 'SIZE_32';
    var8['SIZE_32'] = var1;
    var1 = 'SIZE_40';
    var8['SIZE_40'] = var1;
    var1 = 'SIZE_44';
    var8['SIZE_44'] = var1;
    var1 = 'SIZE_48';
    var8['SIZE_48'] = var1;
    var1 = 'SIZE_56';
    var8['SIZE_56'] = var1;
    var1 = 'SIZE_80';
    var8['SIZE_80'] = var1;
    var1 = 'SIZE_96';
    var8['SIZE_96'] = var1;
    var1 = 'SIZE_120';
    var8['SIZE_120'] = var1;
    var1 = 'SIZE_152';
    var8['SIZE_152'] = var1;
    var1 = 'DEPRECATED_SIZE_30';
    var8['DEPRECATED_SIZE_30'] = var1;
    var1 = 'DEPRECATED_SIZE_60';
    var8['DEPRECATED_SIZE_60'] = var1;
    var1 = 'DEPRECATED_SIZE_100';
    var8['DEPRECATED_SIZE_100'] = var1;
    var7 = {};
    var1 = 'black';
    var7['BLACK'] = var1;
    var1 = 'white';
    var7['WHITE'] = var1;
    var6 = {};
    var5 = 0.7;
    var6['HIGH'] = var5;
    var1 = 'HIGH';
    var6[var5] = var1;
    var5 = 0.45;
    var6['LOW'] = var5;
    var1 = 'LOW';
    var6[var5] = var1;
    var10 = var11.Object;
    var5 = var10.freeze;
    var1 = {};
    var13 = var8.SIZE_16;
    var15 = var11.Object;
    var14 = var15.freeze;
    var9 = 0;
    var12 = {'size': 16, 'status': 6, 'stroke': 2, 'offset': 0};
    var12 = var14.bind(var15)(var12);
    var1[var13] = var12;
    var13 = var8.SIZE_20;
    var15 = var11.Object;
    var14 = var15.freeze;
    var12 = {'size': 20, 'status': 6, 'stroke': 2, 'offset': 0};
    var12 = var14.bind(var15)(var12);
    var1[var13] = var12;
    var13 = var8.SIZE_24;
    var15 = var11.Object;
    var14 = var15.freeze;
    var12 = {'size': 24, 'status': 8, 'stroke': 3, 'offset': 0};
    var12 = var14.bind(var15)(var12);
    var1[var13] = var12;
    var13 = var8.SIZE_32;
    var15 = var11.Object;
    var14 = var15.freeze;
    var12 = {'size': 32, 'status': 10, 'stroke': 3, 'offset': 0};
    var12 = var14.bind(var15)(var12);
    var1[var13] = var12;
    var13 = var8.SIZE_40;
    var15 = var11.Object;
    var14 = var15.freeze;
    var12 = {'size': 40, 'status': 12, 'stroke': 4, 'offset': 0};
    var12 = var14.bind(var15)(var12);
    var1[var13] = var12;
    var13 = var8.SIZE_44;
    var15 = var11.Object;
    var14 = var15.freeze;
    var12 = {'size': 44, 'status': 12, 'stroke': 4, 'offset': 0};
    var12 = var14.bind(var15)(var12);
    var1[var13] = var12;
    var13 = var8.SIZE_48;
    var15 = var11.Object;
    var14 = var15.freeze;
    var12 = {'size': 48, 'status': 12, 'stroke': 4, 'offset': 0};
    var12 = var14.bind(var15)(var12);
    var1[var13] = var12;
    var13 = var8.SIZE_56;
    var15 = var11.Object;
    var14 = var15.freeze;
    var12 = {'size': 56, 'status': 14, 'stroke': 4, 'offset': 2};
    var12 = var14.bind(var15)(var12);
    var1[var13] = var12;
    var13 = var8.SIZE_80;
    var15 = var11.Object;
    var14 = var15.freeze;
    var12 = {'size': 80, 'status': 16, 'stroke': 6, 'offset': 4};
    var12 = var14.bind(var15)(var12);
    var1[var13] = var12;
    var13 = var8.SIZE_96;
    var15 = var11.Object;
    var14 = var15.freeze;
    var12 = {'size': 96, 'status': 20, 'stroke': 8, 'offset': 6};
    var12 = var14.bind(var15)(var12);
    var1[var13] = var12;
    var13 = var8.SIZE_120;
    var15 = var11.Object;
    var14 = var15.freeze;
    var12 = {'size': 120, 'status': 24, 'stroke': 8, 'offset': 8};
    var12 = var14.bind(var15)(var12);
    var1[var13] = var12;
    var13 = var8.SIZE_152;
    var15 = var11.Object;
    var14 = var15.freeze;
    var12 = {'size': 152, 'status': 30, 'stroke': 10, 'offset': 10};
    var12 = var14.bind(var15)(var12);
    var1[var13] = var12;
    var13 = var8.DEPRECATED_SIZE_30;
    var15 = var11.Object;
    var14 = var15.freeze;
    var12 = {'size': 30, 'status': 0, 'stroke': 0, 'offset': 0};
    var12 = var14.bind(var15)(var12);
    var1[var13] = var12;
    var13 = var8.DEPRECATED_SIZE_60;
    var15 = var11.Object;
    var14 = var15.freeze;
    var12 = {'size': 60, 'status': 0, 'stroke': 0, 'offset': 0};
    var12 = var14.bind(var15)(var12);
    var1[var13] = var12;
    var12 = var8.DEPRECATED_SIZE_100;
    var14 = var11.Object;
    var13 = var14.freeze;
    var11 = {'size': 100, 'status': 0, 'stroke': 0, 'offset': 0};
    var11 = var13.bind(var14)(var11);
    var1[var12] = var11;
    var5 = var5.bind(var10)(var1);
    var _closure1_slot0 = var5;
    var1 = dependencyMap;
    var10 = var1[var9];
    var9 = require;
    var1 = undefined;
    var11 = var9.bind(var1)(var10);
    var10 = var11.fileFinishedImporting;
    var9 = '../discord_common/js/shared/constants/web/AvatarConstants.tsx';
    var9 = var10.bind(var11)(var9);
    var9 = 1.5;
    var3['MOBILE_HEIGHT_RATIO'] = var9;
    var9 = 2.5;
    var3['TYPING_WIDTH_RATIO'] = var9;
    var9 = 0.125;
    var3['MOBILE_ICON_RADIUS'] = var9;
    var9 = 0.2;
    var3['CUTOUT_BORDER_RADIUS'] = var9;
    var9 = 1.78;
    var3['VIDEO_RATIO'] = var9;
    var3['AvatarSizes'] = var8;
    var3['StatusBackdropColors'] = var7;
    var3['StatusBackdropOpacity'] = var6;
    var3['AvatarSizeSpecs'] = var5;
    var3['getAvatarSpecs'] = var4;
    var4 = function getAvatarSize(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
            var4 = arg1;
            var3 = 'number';
            var2 = typeof var4;
            var1 = var4;
            if(!(var3 !== var2)) { _fun0001_ip = 2; continue _fun0001 }
case 3:
            var3 = _closure1_slot1;
            var2 = undefined;
            var2 = var3.bind(var2)(var4);
            var1 = var2.size;
case 2:
            return var1;
        }
    };
    var3['getAvatarSize'] = var4;
    var2 = function getStatusSize(arg1) {
        var3 = _closure1_slot1;
        var2 = undefined;
        var1 = arg1;
        var1 = var3.bind(var2)(var1);
        var1 = var1.status;
        return var1;
    };
    var3['getStatusSize'] = var2;
    return var1;
})();