// discord_common/js/shared/utils/TypedEventEmitter.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot2 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    michal = function() {
        tangon = _closure1_slot3;
        zuuluu = function() { // Original name: TypedEventEmitter
            zuuluu = this;
            report = _closure1_slot2;
            tangon = _closure2_slot0;
            entity = undefined;
            tangon = report.bind(entity)(zuuluu, tangon);
            tangon = _closure1_slot0;
            report = _closure1_slot1;
            michal = 2;
            michal = report[michal];
            michal = tangon.bind(entity)(michal);
            michal = michal.EventEmitter;
            tangon = michal.prototype;
            tangon = Object.create(tangon, {constructor: {value: michal}});
            option = tangon;
            michal = new option[michal](golfie);
            michal = michal instanceof Object ? michal : tangon;
            zuuluu['emitter'] = michal;
            return entity;
        };
        var _closure2_slot0 = zuuluu;
        entity = {};
        michal = 'on';
        entity['key'] = michal;
        michal = function(argFoo, argBar) { // Original name: value
            entity = this;
            tangon = entity.emitter;
            zuuluu = tangon.on;
            michal = argFoo;
            entity = argBar;
            entity = zuuluu.bind(tangon)(michal, entity);
            entity = undefined;
            return entity;
        };
        entity['value'] = michal;
        michal = new Array(9);
        michal[0] = entity;
        entity = {};
        oscard = 'off';
        entity['key'] = oscard;
        oscard = function(argFoo, argBar) { // Original name: value
            entity = this;
            tangon = entity.emitter;
            zuuluu = tangon.off;
            michal = argFoo;
            entity = argBar;
            entity = zuuluu.bind(tangon)(michal, entity);
            entity = undefined;
            return entity;
        };
        entity['value'] = oscard;
        michal[1] = entity;
        entity = {};
        oscard = 'once';
        entity['key'] = oscard;
        oscard = function(argFoo, argBar) { // Original name: value
            entity = this;
            tangon = entity.emitter;
            zuuluu = tangon.once;
            michal = argFoo;
            entity = argBar;
            entity = zuuluu.bind(tangon)(michal, entity);
            entity = undefined;
            return entity;
        };
        entity['value'] = oscard;
        michal[2] = entity;
        entity = {};
        oscard = 'addListener';
        entity['key'] = oscard;
        oscard = function(argFoo, argBar) { // Original name: value
            entity = this;
            tangon = entity.emitter;
            zuuluu = tangon.addListener;
            michal = argFoo;
            entity = argBar;
            entity = zuuluu.bind(tangon)(michal, entity);
            entity = undefined;
            return entity;
        };
        entity['value'] = oscard;
        michal[3] = entity;
        entity = {};
        oscard = 'removeListener';
        entity['key'] = oscard;
        oscard = function(argFoo, argBar) { // Original name: value
            entity = this;
            tangon = entity.emitter;
            zuuluu = tangon.removeListener;
            michal = argFoo;
            entity = argBar;
            entity = zuuluu.bind(tangon)(michal, entity);
            entity = undefined;
            return entity;
        };
        entity['value'] = oscard;
        michal[4] = entity;
        entity = {};
        oscard = 'removeAllListeners';
        entity['key'] = oscard;
        oscard = function() { // Original name: value
            entity = this;
            michal = entity.emitter;
            entity = michal.removeAllListeners;
            entity = entity.bind(michal)();
            entity = undefined;
            return entity;
        };
        entity['value'] = oscard;
        michal[5] = entity;
        entity = {};
        oscard = 'emit';
        entity['key'] = oscard;
        oscard = function(argFoo, argBar) { // Original name: value
            report = 1;
            verify = report;
            option = copyRestArgs(verify);
            entity = this;
            zuuluu = entity.emitter;
            michal = zuuluu.emit;
            entity = new Array(1);
            oscard = argFoo;
            entity[0] = oscard;
            verify = entity;
            golfie = report;
            tangon = arraySpread(verify, option, golfie);
            verify = michal;
            option = entity;
            golfie = zuuluu;
            entity = apply(verify, option, golfie);
            entity = undefined;
            return entity;
        };
        entity['value'] = oscard;
        michal[6] = entity;
        entity = {};
        oscard = 'emitUnsafe';
        entity['key'] = oscard;
        oscard = function(argFoo, argBar) { // Original name: value
            report = 1;
            verify = report;
            option = copyRestArgs(verify);
            entity = this;
            zuuluu = entity.emitter;
            michal = zuuluu.emit;
            entity = new Array(1);
            oscard = argFoo;
            entity[0] = oscard;
            verify = entity;
            golfie = report;
            tangon = arraySpread(verify, option, golfie);
            verify = michal;
            option = entity;
            golfie = zuuluu;
            entity = apply(verify, option, golfie);
            entity = undefined;
            return entity;
        };
        entity['value'] = oscard;
        michal[7] = entity;
        entity = {};
        oscard = 'listenerCount';
        entity['key'] = oscard;
        report = function(argFoo) { // Original name: value
            entity = this;
            zuuluu = entity.emitter;
            michal = zuuluu.listenerCount;
            entity = argFoo;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        entity['value'] = report;
        michal[8] = entity;
        entity = undefined;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    michal = michal.bind(entity)();
    tangon = 3;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = '../discord_common/js/shared/utils/TypedEventEmitter.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();